; ModuleID = '../../third_party/skia/src/sksl/codegen/SkSLSPIRVCodeGenerator.cpp'
source_filename = "../../third_party/skia/src/sksl/codegen/SkSLSPIRVCodeGenerator.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.SkSL::SPIRVCodeGenerator" = type <{ %"class.SkSL::CodeGenerator", %"class.SkSL::Context"*, %"class.SkSL::MemoryLayout", [4 x i8], i64, i32, i32, %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.133", %"class.std::__1::unordered_map.161", %"class.std::__1::unordered_map.189", %"class.std::__1::unordered_map.213", %"class.std::__1::unordered_map.213", %"class.SkSL::StringStream", %"class.SkSL::StringStream", %"class.SkSL::StringStream", %"class.SkSL::StringStream", %"class.SkSL::StringStream", %"class.SkSL::StringStream", %"class.SkSL::StringStream", i32, i32, %"class.std::__1::unordered_map.240", %"class.std::__1::unordered_map.267", i8, [3 x i8], i32, %"class.std::__1::stack", %"class.std::__1::stack", i32, i32, i32, [4 x i8], %"class.SkSL::SymbolTable", i32, [4 x i8], %"struct.SkSL::SPIRVCodeGenerator::UniformBuffer", %"class.std::__1::vector.351", %"class.std::__1::unordered_map.189", i32, [4 x i8] }>
%"class.SkSL::CodeGenerator" = type { i32 (...)**, %"struct.SkSL::Program"*, %"class.SkSL::ErrorReporter"*, %"class.SkSL::OutputStream"* }
%"struct.SkSL::Program" = type { %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.4", %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr.49", %"class.std::__1::unique_ptr.50", %"struct.SkSL::Program::Inputs", %"class.std::__1::vector.62", %"class.std::__1::vector.75", %"class.std::__1::unique_ptr.82", %"class.std::__1::unique_ptr.88" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.SkSL::String"* }
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.0" }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.SkSL::ProgramConfig"* }
%"struct.SkSL::ProgramConfig" = type { i8, %"struct.SkSL::ProgramSettings" }
%"struct.SkSL::ProgramSettings" = type { i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector"* }
%"class.std::__1::vector" = type opaque
%"class.std::__1::shared_ptr" = type { %"class.SkSL::Context"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::shared_ptr.49" = type { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.SkSL::Pool"* }
%"class.SkSL::Pool" = type { %"class.std::__1::unique_ptr.53" }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %class.GrMemoryPool* }
%class.GrMemoryPool = type { %class.GrBlockAllocator }
%class.GrBlockAllocator = type { %"class.GrBlockAllocator::Block"*, i64, %"class.GrBlockAllocator::Block" }
%"class.GrBlockAllocator::Block" = type { %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"*, i32, i32, i32, i32 }
%"struct.SkSL::Program::Inputs" = type { i8, i8 }
%"class.std::__1::vector.62" = type { %"class.std::__1::__vector_base.63" }
%"class.std::__1::__vector_base.63" = type { %"class.std::__1::unique_ptr.64"*, %"class.std::__1::unique_ptr.64"*, %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.SkSL::ProgramElement"* }
%"class.SkSL::ProgramElement" = type { %"class.SkSL::IRNode" }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.std::__1::unique_ptr.64"* }
%"class.std::__1::vector.75" = type { %"class.std::__1::__vector_base.76" }
%"class.std::__1::__vector_base.76" = type { %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"**, %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.SkSL::ProgramElement"** }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.SkSL::ModifiersPool"* }
%"class.SkSL::ModifiersPool" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.30", %"class.std::__1::__compressed_pair.39", %"class.std::__1::__compressed_pair.44", %"class.std::__1::__compressed_pair.46", [4 x i8] }>
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32", %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { i64 }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { float }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.SkSL::ProgramUsage"* }
%"class.SkSL::ProgramUsage" = type { %class.SkTHashMap, %class.SkTHashMap.97 }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.91" }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair", i32, [4 x i8] }
%"struct.SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.base.574", [4 x i8] }
%"struct.std::__1::pair.base.574" = type <{ %"class.SkSL::Variable"*, %"struct.SkSL::ProgramUsage::VariableCounts" }>
%"class.SkSL::Variable" = type <{ %"class.SkSL::Symbol", %"class.SkSL::VarDeclaration"*, %"struct.SkSL::Modifiers"*, i8, i8, [6 x i8] }>
%"class.SkSL::Symbol" = type { %"class.SkSL::IRNode", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"struct.SkSL::StringFragment" = type { i8*, i64 }
%"class.SkSL::Type" = type { %"class.SkSL::Symbol", i8*, %"class.SkSL::String", i32, i32, i32, %"class.SkSL::Type"*, %"class.std::__1::vector.13", i32, i32, %"class.std::__1::vector.19", i32, i8, i8, i8, i8, i8, %"class.SkSL::Type"*, %"class.SkSL::Type"* }
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.SkSL::Type"**, %"class.SkSL::Type"**, %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.SkSL::Type"** }
%"class.std::__1::vector.19" = type { %"class.std::__1::__vector_base.20" }
%"class.std::__1::__vector_base.20" = type { %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"*, %"class.std::__1::__compressed_pair.21" }
%"struct.SkSL::Type::Field" = type { %"struct.SkSL::Modifiers", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"struct.SkSL::Modifiers" = type { %"struct.SkSL::Layout", i32, [4 x i8] }
%"struct.SkSL::Layout" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"struct.SkSL::Type::Field"* }
%"class.SkSL::VarDeclaration" = type { %"class.SkSL::Statement", %"class.SkSL::Variable"*, %"class.SkSL::Type"*, i32, %"class.std::__1::unique_ptr.336" }
%"class.SkSL::Statement" = type { %"class.SkSL::IRNode" }
%"class.std::__1::unique_ptr.336" = type { %"class.std::__1::__compressed_pair.337" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.338" = type { %"class.SkSL::Expression"* }
%"class.SkSL::Expression" = type { %"class.SkSL::IRNode", %"class.SkSL::Type"* }
%"struct.SkSL::ProgramUsage::VariableCounts" = type { i32, i32, i32 }
%class.SkTHashMap.97 = type { %class.SkTHashTable.98 }
%class.SkTHashTable.98 = type { i32, i32, %class.SkAutoTArray.99 }
%class.SkAutoTArray.99 = type { %"class.std::__1::unique_ptr.100" }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"struct.SkTHashTable<SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair, const SkSL::FunctionDeclaration *, SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair, const SkSL::FunctionDeclaration *, SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair", i32, [4 x i8] }
%"struct.SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.base.576", [4 x i8] }
%"struct.std::__1::pair.base.576" = type <{ %"class.SkSL::FunctionDeclaration"*, i32 }>
%"class.SkSL::FunctionDeclaration" = type { %"class.SkSL::Symbol", %"class.SkSL::FunctionDefinition"*, %"struct.SkSL::Modifiers"*, %"class.std::__1::vector.422", %"class.SkSL::Type"*, i8, i8, i32 }
%"class.SkSL::FunctionDefinition" = type { %"class.SkSL::ProgramElement", %"class.SkSL::FunctionDeclaration"*, i8, %"class.std::__1::unique_ptr.387", %"class.std::__1::unordered_set.393", %"struct.SkSL::ASTNode"* }
%"class.std::__1::unique_ptr.387" = type { %"class.std::__1::__compressed_pair.388" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389" }
%"struct.std::__1::__compressed_pair_elem.389" = type { %"class.SkSL::Statement"* }
%"class.std::__1::unordered_set.393" = type { %"class.std::__1::__hash_table.394" }
%"class.std::__1::__hash_table.394" = type <{ %"class.std::__1::unique_ptr.395", %"class.std::__1::__compressed_pair.405", %"class.std::__1::__compressed_pair.410", %"class.std::__1::__compressed_pair.412", [4 x i8] }>
%"class.std::__1::unique_ptr.395" = type { %"class.std::__1::__compressed_pair.396" }
%"class.std::__1::__compressed_pair.396" = type { %"struct.std::__1::__compressed_pair_elem.397", %"struct.std::__1::__compressed_pair_elem.399" }
%"struct.std::__1::__compressed_pair_elem.397" = type { %"struct.std::__1::__hash_node_base.398"** }
%"struct.std::__1::__hash_node_base.398" = type { %"struct.std::__1::__hash_node_base.398"* }
%"struct.std::__1::__compressed_pair_elem.399" = type { %"class.std::__1::__bucket_list_deallocator.400" }
%"class.std::__1::__bucket_list_deallocator.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.406" }
%"struct.std::__1::__compressed_pair_elem.406" = type { %"struct.std::__1::__hash_node_base.398" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.SkSL::ASTNode" = type { %"class.std::__1::vector.415"*, %"struct.SkSL::ASTNode::NodeData", i32, i32, %"class.SkSL::ASTNode::ID", %"class.SkSL::ASTNode::ID", %"class.SkSL::ASTNode::ID" }
%"class.std::__1::vector.415" = type { %"class.std::__1::__vector_base.416" }
%"class.std::__1::__vector_base.416" = type { %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"*, %"class.std::__1::__compressed_pair.417" }
%"class.std::__1::__compressed_pair.417" = type { %"struct.std::__1::__compressed_pair_elem.418" }
%"struct.std::__1::__compressed_pair_elem.418" = type { %"struct.SkSL::ASTNode"* }
%"struct.SkSL::ASTNode::NodeData" = type { [128 x i8], i32 }
%"class.SkSL::ASTNode::ID" = type { i32 }
%"class.std::__1::vector.422" = type { %"class.std::__1::__vector_base.423" }
%"class.std::__1::__vector_base.423" = type { %"class.SkSL::Variable"**, %"class.SkSL::Variable"**, %"class.std::__1::__compressed_pair.424" }
%"class.std::__1::__compressed_pair.424" = type { %"struct.std::__1::__compressed_pair_elem.425" }
%"struct.std::__1::__compressed_pair_elem.425" = type { %"class.SkSL::Variable"** }
%"class.SkSL::ErrorReporter" = type { i32 (...)** }
%"class.SkSL::OutputStream" = type { i32 (...)** }
%"class.SkSL::Context" = type { %"class.SkSL::BuiltinTypes", %"class.SkSL::ErrorReporter"*, %class.GrShaderCaps*, %"class.SkSL::ModifiersPool"*, %"struct.SkSL::ProgramConfig"* }
%"class.SkSL::BuiltinTypes" = type { %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10" }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.SkSL::Type"* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.29" }
%"struct.std::__1::__atomic_base.29" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.SkSL::MemoryLayout" = type { i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.109" }
%"class.std::__1::__hash_table.109" = type <{ %"class.std::__1::unique_ptr.110", %"class.std::__1::__compressed_pair.120", %"class.std::__1::__compressed_pair.125", %"class.std::__1::__compressed_pair.128", [4 x i8] }>
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112", %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"struct.std::__1::__hash_node_base.113"** }
%"struct.std::__1::__hash_node_base.113" = type { %"struct.std::__1::__hash_node_base.113"* }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.std::__1::__bucket_list_deallocator.115" }
%"class.std::__1::__bucket_list_deallocator.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"struct.std::__1::__hash_node_base.113" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"class.std::__1::unordered_map.133" = type { %"class.std::__1::__hash_table.134" }
%"class.std::__1::__hash_table.134" = type <{ %"class.std::__1::unique_ptr.135", %"class.std::__1::__compressed_pair.145", %"class.std::__1::__compressed_pair.150", %"class.std::__1::__compressed_pair.155", [4 x i8] }>
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137", %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"struct.std::__1::__hash_node_base.138"** }
%"struct.std::__1::__hash_node_base.138" = type { %"struct.std::__1::__hash_node_base.138"* }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.std::__1::__bucket_list_deallocator.140" }
%"class.std::__1::__bucket_list_deallocator.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"struct.std::__1::__hash_node_base.138" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"class.std::__1::unordered_map.161" = type { %"class.std::__1::__hash_table.162" }
%"class.std::__1::__hash_table.162" = type <{ %"class.std::__1::unique_ptr.163", %"class.std::__1::__compressed_pair.173", %"class.std::__1::__compressed_pair.178", %"class.std::__1::__compressed_pair.183", [4 x i8] }>
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165", %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base.166"** }
%"struct.std::__1::__hash_node_base.166" = type { %"struct.std::__1::__hash_node_base.166"* }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.std::__1::__bucket_list_deallocator.168" }
%"class.std::__1::__bucket_list_deallocator.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"struct.std::__1::__hash_node_base.166" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"class.std::__1::unordered_map.213" = type { %"class.std::__1::__hash_table.214" }
%"class.std::__1::__hash_table.214" = type <{ %"class.std::__1::unique_ptr.215", %"class.std::__1::__compressed_pair.225", %"class.std::__1::__compressed_pair.230", %"class.std::__1::__compressed_pair.234", [4 x i8] }>
%"class.std::__1::unique_ptr.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217", %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"struct.std::__1::__hash_node_base.218"** }
%"struct.std::__1::__hash_node_base.218" = type { %"struct.std::__1::__hash_node_base.218"* }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.std::__1::__bucket_list_deallocator.220" }
%"class.std::__1::__bucket_list_deallocator.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"struct.std::__1::__hash_node_base.218" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"class.SkSL::StringStream" = type { %"class.SkSL::OutputStream", %class.SkDynamicMemoryWStream, %"class.SkSL::String" }
%class.SkDynamicMemoryWStream = type { %class.SkWStream, %"struct.SkDynamicMemoryWStream::Block"*, %"struct.SkDynamicMemoryWStream::Block"*, i64 }
%class.SkWStream = type { i32 (...)** }
%"struct.SkDynamicMemoryWStream::Block" = type opaque
%"class.std::__1::unordered_map.240" = type { %"class.std::__1::__hash_table.241" }
%"class.std::__1::__hash_table.241" = type <{ %"class.std::__1::unique_ptr.242", %"class.std::__1::__compressed_pair.252", %"class.std::__1::__compressed_pair.257", %"class.std::__1::__compressed_pair.261", [4 x i8] }>
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244", %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"struct.std::__1::__hash_node_base.245"** }
%"struct.std::__1::__hash_node_base.245" = type { %"struct.std::__1::__hash_node_base.245"* }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"class.std::__1::__bucket_list_deallocator.247" }
%"class.std::__1::__bucket_list_deallocator.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"struct.std::__1::__hash_node_base.245" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"class.std::__1::unordered_map.267" = type { %"class.std::__1::__hash_table.268" }
%"class.std::__1::__hash_table.268" = type <{ %"class.std::__1::unique_ptr.269", %"class.std::__1::__compressed_pair.279", %"class.std::__1::__compressed_pair.284", %"class.std::__1::__compressed_pair.288", [4 x i8] }>
%"class.std::__1::unique_ptr.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271", %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"struct.std::__1::__hash_node_base.272"** }
%"struct.std::__1::__hash_node_base.272" = type { %"struct.std::__1::__hash_node_base.272"* }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.std::__1::__bucket_list_deallocator.274" }
%"class.std::__1::__bucket_list_deallocator.274" = type { %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"struct.std::__1::__hash_node_base.272" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"class.std::__1::stack" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.299" }
%"struct.std::__1::__split_buffer" = type { i32**, i32**, i32**, %"class.std::__1::__compressed_pair.294" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"struct.std::__1::__compressed_pair_elem.295" = type { i32** }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.SkSL::SymbolTable" = type { %"class.std::__1::shared_ptr.49", %"class.std::__1::vector.303", i8, %"class.std::__1::vector.311", %"class.std::__1::forward_list", %class.SkTHashMap.324, %"class.SkSL::ErrorReporter"* }
%"class.std::__1::vector.303" = type { %"class.std::__1::__vector_base.304" }
%"class.std::__1::__vector_base.304" = type { %"class.std::__1::unique_ptr.305"*, %"class.std::__1::unique_ptr.305"*, %"class.std::__1::__compressed_pair.306" }
%"class.std::__1::unique_ptr.305" = type { %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.563" }
%"struct.std::__1::__compressed_pair_elem.563" = type { %"class.SkSL::Symbol"* }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.307" }
%"struct.std::__1::__compressed_pair_elem.307" = type { %"class.std::__1::unique_ptr.305"* }
%"class.std::__1::vector.311" = type { %"class.std::__1::__vector_base.312" }
%"class.std::__1::__vector_base.312" = type { %"class.std::__1::unique_ptr.313"*, %"class.std::__1::unique_ptr.313"*, %"class.std::__1::__compressed_pair.314" }
%"class.std::__1::unique_ptr.313" = type { %"class.std::__1::__compressed_pair.567" }
%"class.std::__1::__compressed_pair.567" = type { %"struct.std::__1::__compressed_pair_elem.568" }
%"struct.std::__1::__compressed_pair_elem.568" = type { %"class.SkSL::IRNode"* }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.315" }
%"struct.std::__1::__compressed_pair_elem.315" = type { %"class.std::__1::unique_ptr.313"* }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.319" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type { %"struct.std::__1::__forward_begin_node", %"class.SkSL::String" }
%class.SkTHashMap.324 = type { %class.SkTHashTable.325 }
%class.SkTHashTable.325 = type { i32, i32, %class.SkAutoTArray.326 }
%class.SkAutoTArray.326 = type { %"class.std::__1::unique_ptr.327" }
%"class.std::__1::unique_ptr.327" = type { %"class.std::__1::__compressed_pair.328" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"struct.std::__1::__compressed_pair_elem.329" = type { %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair" = type { %"struct.std::__1::pair.572" }
%"struct.std::__1::pair.572" = type { %"struct.SkSL::SymbolTable::SymbolKey", %"class.SkSL::Symbol"* }
%"struct.SkSL::SymbolTable::SymbolKey" = type <{ %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"struct.SkSL::SPIRVCodeGenerator::UniformBuffer" = type { %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.345", %"class.std::__1::unique_ptr.10" }
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"class.SkSL::InterfaceBlock"* }
%"class.SkSL::InterfaceBlock" = type { %"class.SkSL::ProgramElement", %"class.SkSL::Variable"*, %"class.SkSL::String", %"class.SkSL::String", i32, %"class.std::__1::shared_ptr.49" }
%"class.std::__1::unique_ptr.345" = type { %"class.std::__1::__compressed_pair.346" }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"struct.std::__1::__compressed_pair_elem.347" = type { %"class.SkSL::Variable"* }
%"class.std::__1::vector.351" = type { %"class.std::__1::__vector_base.352" }
%"class.std::__1::__vector_base.352" = type { %"class.SkSL::VarDeclaration"**, %"class.SkSL::VarDeclaration"**, %"class.std::__1::__compressed_pair.353" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.354" }
%"struct.std::__1::__compressed_pair_elem.354" = type { %"class.SkSL::VarDeclaration"** }
%"class.std::__1::unordered_map.189" = type { %"class.std::__1::__hash_table.190" }
%"class.std::__1::__hash_table.190" = type <{ %"class.std::__1::unique_ptr.191", %"class.std::__1::__compressed_pair.201", %"class.std::__1::__compressed_pair.206", %"class.std::__1::__compressed_pair.209", [4 x i8] }>
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193", %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"struct.std::__1::__hash_node_base.194"** }
%"struct.std::__1::__hash_node_base.194" = type { %"struct.std::__1::__hash_node_base.194"* }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.std::__1::__bucket_list_deallocator.196" }
%"class.std::__1::__bucket_list_deallocator.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"struct.std::__1::__hash_node_base.194" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"class.std::__1::tuple.630" = type { %"struct.std::__1::__tuple_impl.631" }
%"struct.std::__1::__tuple_impl.631" = type { %"class.std::__1::__tuple_leaf.632" }
%"class.std::__1::__tuple_leaf.632" = type { i32* }
%"class.std::__1::tuple.633" = type { i8 }
%"struct.std::__1::pair.436" = type { i32, %"class.std::__1::tuple.362" }
%"class.std::__1::tuple.362" = type { %"struct.std::__1::__tuple_impl.363" }
%"struct.std::__1::__tuple_impl.363" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.364", %"class.std::__1::__tuple_leaf.365", %"class.std::__1::__tuple_leaf.366", %"class.std::__1::__tuple_leaf.367" }
%"class.std::__1::__tuple_leaf" = type { i32 }
%"class.std::__1::__tuple_leaf.364" = type { i32 }
%"class.std::__1::__tuple_leaf.365" = type { i32 }
%"class.std::__1::__tuple_leaf.366" = type { i32 }
%"class.std::__1::__tuple_leaf.367" = type { i32 }
%"class.std::__1::vector.382" = type { %"class.std::__1::__vector_base.383" }
%"class.std::__1::__vector_base.383" = type { i32*, i32*, %"class.std::__1::__compressed_pair.384" }
%"class.std::__1::__compressed_pair.384" = type { %"struct.std::__1::__compressed_pair_elem.385" }
%"struct.std::__1::__compressed_pair_elem.385" = type { i32* }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::tuple.652" = type { %"struct.std::__1::__tuple_impl.653" }
%"struct.std::__1::__tuple_impl.653" = type { %"class.std::__1::__tuple_leaf.654" }
%"class.std::__1::__tuple_leaf.654" = type { %"class.SkSL::String"* }
%"class.SkSL::Literal" = type { %"class.SkSL::Expression", i64 }
%"struct.std::__1::pair.495" = type <{ %"struct.SkSL::SPIRVNumberConstant", i32, [4 x i8] }>
%"struct.SkSL::SPIRVNumberConstant" = type { i64, i32 }
%"class.SkSL::BinaryExpression" = type { %"class.SkSL::Expression", %"class.std::__1::unique_ptr.336", %"class.SkSL::Operator", %"class.std::__1::unique_ptr.336" }
%"class.SkSL::Operator" = type { i32 }
%"class.SkSL::Literal.429" = type <{ %"class.SkSL::Expression", i8, [7 x i8] }>
%"class.SkSL::AnyConstructor" = type { %"class.SkSL::Expression", %"class.std::__1::unique_ptr.336" }
%"class.SkSL::ConstructorDiagonalMatrix" = type { %"class.SkSL::SingleArgumentConstructor", %"class.SkSL::Literal.430" }
%"class.SkSL::SingleArgumentConstructor" = type { %"class.SkSL::AnyConstructor", %"class.std::__1::unique_ptr.336" }
%"class.SkSL::Literal.430" = type <{ %"class.SkSL::Expression", float, [4 x i8] }>
%"class.SkSL::ConstructorScalarCast" = type { %"class.SkSL::SingleArgumentConstructor" }
%"class.SkSL::ConstructorSplat" = type { %"class.SkSL::SingleArgumentConstructor" }
%"class.SkSL::ConstructorCompound" = type { %"class.SkSL::MultiArgumentConstructor" }
%"class.SkSL::MultiArgumentConstructor" = type { %"class.SkSL::AnyConstructor", %class.SkSTArray }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [16 x i8] }
%class.SkTArray = type { %"class.std::__1::unique_ptr.336"*, i64 }
%"class.SkSL::ConstructorCompoundCast" = type { %"class.SkSL::SingleArgumentConstructor" }
%"class.SkSL::SPIRVCodeGenerator::LValue" = type { i32 (...)** }
%"class.SkSL::FunctionCall" = type { %"class.SkSL::Expression", %"class.SkSL::FunctionDeclaration"*, %class.SkSTArray }
%"class.SkSL::PrefixExpression" = type { %"class.SkSL::Expression", %"class.SkSL::Operator", %"class.std::__1::unique_ptr.336" }
%"class.SkSL::PostfixExpression" = type <{ %"class.SkSL::Expression", %"class.std::__1::unique_ptr.336", %"class.SkSL::Operator", [4 x i8] }>
%"struct.SkSL::Swizzle" = type { %"class.SkSL::Expression", %"class.std::__1::unique_ptr.336", %class.SkSTArray.431 }
%class.SkSTArray.431 = type { %class.SkAlignedSTStorage.432, %class.SkTArray.433 }
%class.SkAlignedSTStorage.432 = type { [4 x i8] }
%class.SkTArray.433 = type { i8*, i64 }
%"class.SkSL::VariableReference" = type <{ %"class.SkSL::Expression", %"class.SkSL::Variable"*, i8, [7 x i8] }>
%"class.SkSL::TernaryExpression" = type { %"class.SkSL::Expression", %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336" }
%"struct.SkSL::IndexExpression" = type { %"class.SkSL::Expression", %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336" }
%"class.SkSL::ConstructorMatrixResize" = type { %"class.SkSL::SingleArgumentConstructor", %"class.SkSL::Literal.430", %"class.SkSL::Literal.430" }
%"class.SkSL::FieldAccess" = type { %"class.SkSL::Expression", i32, i8, %"class.std::__1::unique_ptr.336" }
%"class.std::__1::vector.458" = type { %"class.std::__1::__vector_base.459" }
%"class.std::__1::__vector_base.459" = type { %"struct.SkSL::(anonymous namespace)::TempVar"*, %"struct.SkSL::(anonymous namespace)::TempVar"*, %"class.std::__1::__compressed_pair.460" }
%"struct.SkSL::(anonymous namespace)::TempVar" = type { i32, %"class.SkSL::Type"*, %"class.std::__1::unique_ptr.437" }
%"class.std::__1::unique_ptr.437" = type { %"class.std::__1::__compressed_pair.438" }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.439" }
%"struct.std::__1::__compressed_pair_elem.439" = type { %"class.SkSL::SPIRVCodeGenerator::LValue"* }
%"class.std::__1::__compressed_pair.460" = type { %"struct.std::__1::__compressed_pair_elem.461" }
%"struct.std::__1::__compressed_pair_elem.461" = type { %"struct.SkSL::(anonymous namespace)::TempVar"* }
%"struct.SkSL::SPIRVVectorConstant" = type { i32, [4 x i32] }
%"struct.std::__1::pair.472" = type { %"struct.SkSL::SPIRVVectorConstant", i32 }
%"class.std::__1::tuple.713" = type { %"struct.std::__1::__tuple_impl.714" }
%"struct.std::__1::__tuple_impl.714" = type { %"class.std::__1::__tuple_leaf.715" }
%"class.std::__1::__tuple_leaf.715" = type { %"class.SkSL::Variable"** }
%"class.std::__1::tuple.703" = type { %"struct.std::__1::__tuple_impl.704" }
%"struct.std::__1::__tuple_impl.704" = type { %"class.std::__1::__tuple_leaf.705" }
%"class.std::__1::__tuple_leaf.705" = type { %"class.SkSL::Variable"** }
%"class.std::__1::tuple.691" = type { %"struct.std::__1::__tuple_impl.692" }
%"struct.std::__1::__tuple_impl.692" = type { %"class.std::__1::__tuple_leaf.693" }
%"class.std::__1::__tuple_leaf.693" = type { %"class.SkSL::FunctionDeclaration"** }
%"class.SkSL::Block" = type <{ %"class.SkSL::Statement", %class.SkSTArray.498, %"class.std::__1::shared_ptr.49", i8, [7 x i8] }>
%class.SkSTArray.498 = type { %class.SkAlignedSTStorage.499, %class.SkTArray.500 }
%class.SkAlignedSTStorage.499 = type { [16 x i8] }
%class.SkTArray.500 = type { %"class.std::__1::unique_ptr.387"*, i64 }
%"class.SkSL::IfStatement" = type <{ %"class.SkSL::Statement", %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.387", %"class.std::__1::unique_ptr.387", i8, [7 x i8] }>
%"class.SkSL::ForStatement" = type { %"class.SkSL::Statement", %"class.std::__1::shared_ptr.49", %"class.std::__1::unique_ptr.387", %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.387" }
%"class.SkSL::DoStatement" = type { %"class.SkSL::Statement", %"class.std::__1::unique_ptr.387", %"class.std::__1::unique_ptr.336" }
%"class.SkSL::SwitchStatement" = type { %"class.SkSL::Statement", i8, %"class.std::__1::unique_ptr.336", %class.SkSTArray.498, %"class.std::__1::shared_ptr.49" }
%"class.SkSL::ReturnStatement" = type { %"class.SkSL::Statement", %"class.std::__1::unique_ptr.336" }
%"class.SkSL::SwitchCase" = type { %"class.SkSL::Statement", %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.387" }
%"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter" = type { %"class.std::__1::unique_ptr.503", %"class.std::__1::unique_ptr.509", %"struct.SkSL::Layout", %"struct.SkSL::Modifiers" }
%"class.std::__1::unique_ptr.503" = type { %"class.std::__1::__compressed_pair.504" }
%"class.std::__1::__compressed_pair.504" = type { %"struct.std::__1::__compressed_pair_elem.505" }
%"struct.std::__1::__compressed_pair_elem.505" = type { %"class.SkSL::FunctionDefinition"* }
%"class.std::__1::unique_ptr.509" = type { %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"class.SkSL::FunctionDeclaration"* }
%"class.std::__1::tuple.752" = type { %"struct.std::__1::__tuple_impl.753" }
%"struct.std::__1::__tuple_impl.753" = type { %"class.std::__1::__tuple_leaf.754" }
%"class.std::__1::__tuple_leaf.754" = type { %"class.SkSL::FunctionDeclaration"** }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.552", %"class.std::__1::__compressed_pair.557" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.552" = type { %"struct.std::__1::__compressed_pair_elem.553" }
%"struct.std::__1::__compressed_pair_elem.553" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", i32 }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__hash_node.621" = type { %"struct.std::__1::__hash_node_base.166", i64, %"struct.std::__1::__hash_value_type.622" }
%"struct.std::__1::__hash_value_type.622" = type { %"struct.std::__1::pair.483" }
%"struct.std::__1::pair.483" = type <{ %"class.SkSL::Variable"*, i32, [4 x i8] }>
%"struct.std::__1::__shared_ptr_emplace" = type { %"class.std::__1::__shared_weak_count", %"struct.std::__1::__shared_ptr_emplace<SkSL::SymbolTable, std::__1::allocator<SkSL::SymbolTable> >::_Storage" }
%"struct.std::__1::__shared_ptr_emplace<SkSL::SymbolTable, std::__1::allocator<SkSL::SymbolTable> >::_Storage" = type { [104 x i8] }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::__murmur2_or_cityhash" = type { i8 }
%"struct.std::__1::__hash_value_type.616" = type { %"struct.std::__1::pair.472" }
%"class.SkSL::PointerLValue" = type { %"class.SkSL::SPIRVCodeGenerator::LValue", %"class.SkSL::SPIRVCodeGenerator"*, i32, i8, i32, i32 }
%"class.SkSL::SwizzleLValue" = type { %"class.SkSL::SPIRVCodeGenerator::LValue", %"class.SkSL::SPIRVCodeGenerator"*, i32, %class.SkSTArray.431, %"class.SkSL::Type"*, %"class.SkSL::Type"* }
%"struct.std::__1::__split_buffer.720" = type { i32**, i32**, i32**, %"class.std::__1::__compressed_pair.721" }
%"class.std::__1::__compressed_pair.721" = type { %"struct.std::__1::__compressed_pair_elem.295", %"struct.std::__1::__compressed_pair_elem.722" }
%"struct.std::__1::__compressed_pair_elem.722" = type { %"class.std::__1::allocator.297"* }
%"class.std::__1::allocator.297" = type { i8 }
%"class.SkSL::ExpressionStatement" = type { %"class.SkSL::Statement", %"class.std::__1::unique_ptr.336" }
%"struct.std::__1::__hash_node.726" = type { %"struct.std::__1::__hash_node_base.398", i64, %"class.SkSL::FunctionDeclaration"* }

$_ZN4SkSL12MemoryLayout17LayoutIsSupportedERKNS_4TypeE = comdat any

$_ZNK4SkSL12MemoryLayout4sizeERKNS_4TypeE = comdat any

$_ZNK4SkSL12MemoryLayout9alignmentERKNS_4TypeE = comdat any

$_ZNK4SkSL12MemoryLayout6strideERKNS_4TypeE = comdat any

$_ZN4SkSL13ErrorReporter5errorEiPKc = comdat any

$_ZNK4SkSL10Expression4typeEv = comdat any

$_ZN4SkSL19ConstructorCompoundC2EiRKNS_4TypeE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS5_14default_deleteIS7_EEEELb0EE = comdat any

$_ZNK4SkSL4Type11descriptionEv = comdat any

$_ZNK4SkSL14AnyConstructor21isCompileTimeConstantEv = comdat any

$_ZN4SkSL14InterfaceBlockD2Ev = comdat any

$_ZN4SkSL12StringStreamD2Ev = comdat any

$_ZNSt3__111make_uniqueIN4SkSL14InterfaceBlockEJiPNS1_8VariableERA15_KcS7_iRNS_10shared_ptrINS1_11SymbolTableEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZN4SkSL18SPIRVCodeGeneratorD2Ev = comdat any

$_ZN4SkSL18SPIRVCodeGeneratorD0Ev = comdat any

$_ZN4SkSL7LiteralIlED0Ev = comdat any

$_ZNK4SkSL7LiteralIlE11descriptionEv = comdat any

$_ZNK4SkSL7LiteralIlE21isCompileTimeConstantEv = comdat any

$_ZNK4SkSL7LiteralIlE15compareConstantERKNS_10ExpressionE = comdat any

$_ZNK4SkSL10Expression19isConstantOrUniformEv = comdat any

$_ZNK4SkSL7LiteralIlE11hasPropertyENS_10Expression8PropertyE = comdat any

$_ZNK4SkSL7LiteralIlE12coercionCostERKNS_4TypeE = comdat any

$_ZNK4SkSL7LiteralIlE24getConstantSubexpressionEi = comdat any

$_ZNK4SkSL7LiteralIlE5cloneEv = comdat any

$_ZNK4SkSL10Expression12coercionCostERKNS_4TypeE = comdat any

$_ZN4SkSL6IRNodeD2Ev = comdat any

$_ZN4SkSL19ConstructorCompoundD0Ev = comdat any

$_ZNK4SkSL14AnyConstructor11descriptionEv = comdat any

$_ZNK4SkSL14AnyConstructor19isConstantOrUniformEv = comdat any

$_ZNK4SkSL14AnyConstructor11hasPropertyENS_10Expression8PropertyE = comdat any

$_ZNK4SkSL19ConstructorCompound5cloneEv = comdat any

$_ZN4SkSL24MultiArgumentConstructor12argumentSpanEv = comdat any

$_ZNK4SkSL24MultiArgumentConstructor12argumentSpanEv = comdat any

$_ZN4SkSL24MultiArgumentConstructorD2Ev = comdat any

$_ZN4SkSL24MultiArgumentConstructorD0Ev = comdat any

$_ZNK4SkSL24MultiArgumentConstructor14cloneArgumentsEv = comdat any

$_ZN4SkSL7LiteralIfED0Ev = comdat any

$_ZNK4SkSL7LiteralIfE11descriptionEv = comdat any

$_ZNK4SkSL7LiteralIfE21isCompileTimeConstantEv = comdat any

$_ZNK4SkSL7LiteralIfE15compareConstantERKNS_10ExpressionE = comdat any

$_ZNK4SkSL7LiteralIfE11hasPropertyENS_10Expression8PropertyE = comdat any

$_ZNK4SkSL7LiteralIfE12coercionCostERKNS_4TypeE = comdat any

$_ZNK4SkSL7LiteralIfE24getConstantSubexpressionEi = comdat any

$_ZNK4SkSL7LiteralIfE5cloneEv = comdat any

$_ZN4SkSL4TypeD2Ev = comdat any

$_ZN4SkSL4TypeD0Ev = comdat any

$_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE6rehashEm = comdat any

$_ZNK4SkSL6LayouteqERKS0_ = comdat any

$_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE8__rehashEm = comdat any

$_ZN4SkSL14InterfaceBlockD0Ev = comdat any

$_ZNK4SkSL14InterfaceBlock11descriptionEv = comdat any

$_ZNK4SkSL14InterfaceBlock5cloneEv = comdat any

$_ZNK4SkSL9Modifiers11descriptionEv = comdat any

$_ZNK4SkSL4Type5Field11descriptionEv = comdat any

$_ZNK4SkSL6Layout11descriptionEv = comdat any

$_ZN4SkSL11SymbolTable13WrapIfBuiltinENSt3__110shared_ptrIS0_EE = comdat any

$_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEED2Ev = comdat any

$_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEED0Ev = comdat any

$_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEE16__on_zero_sharedEv = comdat any

$_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEE21__on_zero_shared_weakEv = comdat any

$_ZN4SkSL11SymbolTableD2Ev = comdat any

$_ZN4SkSL7LiteralIbED0Ev = comdat any

$_ZNK4SkSL7LiteralIbE11descriptionEv = comdat any

$_ZNK4SkSL7LiteralIbE21isCompileTimeConstantEv = comdat any

$_ZNK4SkSL7LiteralIbE15compareConstantERKNS_10ExpressionE = comdat any

$_ZNK4SkSL7LiteralIbE11hasPropertyENS_10Expression8PropertyE = comdat any

$_ZNK4SkSL7LiteralIbE24getConstantSubexpressionEi = comdat any

$_ZNK4SkSL7LiteralIbE5cloneEv = comdat any

$_ZNK4SkSL12OutputStream7isValidEv = comdat any

$_ZN4SkSL12StringStream6write8Eh = comdat any

$_ZN4SkSL12StringStream9writeTextEPKc = comdat any

$_ZN4SkSL12StringStream5writeEPKvm = comdat any

$_ZN4SkSL12StringStreamD0Ev = comdat any

$_ZNSt3__15stackIjNS_5dequeIjNS_9allocatorIjEEEEED2Ev = comdat any

$_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EEaSEOS7_ = comdat any

$_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE = comdat any

$_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_ = comdat any

$_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringEjEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_S9_S7_Lb1EEENS_9allocatorIS4_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEERKT_ = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringEjEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_S9_S7_Lb1EEENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSK_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringEjEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_S9_S7_Lb1EEENS_9allocatorIS4_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringEjEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_S9_S7_Lb1EEENS_9allocatorIS4_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL19SPIRVVectorConstantEjEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_S9_S7_Lb1EEENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS3_JNS_4pairIKS3_jEEEEENSH_INS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL19SPIRVVectorConstantEjEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_S9_S7_Lb1EEENS_9allocatorIS4_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL19SPIRVVectorConstantEjEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_S9_S7_Lb1EEENS_9allocatorIS4_EEE8__rehashEm = comdat any

$_ZN4SkSL18SPIRVCodeGenerator6LValueD2Ev = comdat any

$_ZN4SkSL13PointerLValueD0Ev = comdat any

$_ZN4SkSL13PointerLValue10getPointerEv = comdat any

$_ZNK4SkSL13PointerLValue21isMemoryObjectPointerEv = comdat any

$_ZN4SkSL18SPIRVCodeGenerator6LValue12applySwizzleERK9SkSTArrayILi4EaLb0EERKNS_4TypeE = comdat any

$_ZN4SkSL13PointerLValue4loadERNS_12OutputStreamE = comdat any

$_ZN4SkSL13PointerLValue5storeEjRNS_12OutputStreamE = comdat any

$_ZN4SkSL18SPIRVCodeGenerator6LValue10getPointerEv = comdat any

$_ZNK4SkSL18SPIRVCodeGenerator6LValue21isMemoryObjectPointerEv = comdat any

$_ZN4SkSL13SwizzleLValueD2Ev = comdat any

$_ZN4SkSL13SwizzleLValueD0Ev = comdat any

$_ZN4SkSL13SwizzleLValue12applySwizzleERK9SkSTArrayILi4EaLb0EERKNS_4TypeE = comdat any

$_ZN4SkSL13SwizzleLValue4loadERNS_12OutputStreamE = comdat any

$_ZN4SkSL13SwizzleLValue5storeEjRNS_12OutputStreamE = comdat any

$_ZN8SkTArrayIaLb0EE12checkReallocEiNS0_11ReallocTypeE = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIKN4SkSL6SymbolENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL19SPIRVNumberConstantEjEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_S9_S7_Lb1EEENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS3_JNS_4pairIKS3_jEEEEENSH_INS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL19SPIRVNumberConstantEjEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_S9_S7_Lb1EEENS_9allocatorIS4_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL19SPIRVNumberConstantEjEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_S9_S7_Lb1EEENS_9allocatorIS4_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__15dequeIjNS_9allocatorIjEEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEE9push_backEOS1_ = comdat any

$_ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEE10push_frontEOS1_ = comdat any

$_ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEE10push_frontERKS1_ = comdat any

$_ZN4SkSL25SingleArgumentConstructorD2Ev = comdat any

$_ZN4SkSL16ConstructorSplatD0Ev = comdat any

$_ZNK4SkSL16ConstructorSplat24getConstantSubexpressionEi = comdat any

$_ZNK4SkSL16ConstructorSplat5cloneEv = comdat any

$_ZN4SkSL25SingleArgumentConstructor12argumentSpanEv = comdat any

$_ZNK4SkSL25SingleArgumentConstructor12argumentSpanEv = comdat any

$_ZN4SkSL25SingleArgumentConstructorD0Ev = comdat any

$_ZN4SkSL19ExpressionStatementD2Ev = comdat any

$_ZN4SkSL19ExpressionStatementD0Ev = comdat any

$_ZNK4SkSL19ExpressionStatement11descriptionEv = comdat any

$_ZNK4SkSL9Statement7isEmptyEv = comdat any

$_ZNK4SkSL19ExpressionStatement5cloneEv = comdat any

$_ZN4SkSL18FunctionDefinitionD2Ev = comdat any

$_ZN4SkSL18FunctionDefinitionD0Ev = comdat any

$_ZNK4SkSL18FunctionDefinition11descriptionEv = comdat any

$_ZNK4SkSL18FunctionDefinition5cloneEv = comdat any

$_ZNSt3__111make_uniqueIN4SkSL18FunctionDefinitionEJRKiPKNS1_19FunctionDeclarationEbNS_10unique_ptrINS1_9StatementENS_14default_deleteIS9_EEEERKNS_13unordered_setIS7_NS_4hashIS7_EENS_8equal_toIS7_EENS_9allocatorIS7_EEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZTVN4SkSL7LiteralIlEE = comdat any

$_ZTVN4SkSL19ConstructorCompoundE = comdat any

$_ZTVN4SkSL24MultiArgumentConstructorE = comdat any

$_ZTVN4SkSL7LiteralIfEE = comdat any

$_ZTVN4SkSL4TypeE = comdat any

$_ZTVN4SkSL14InterfaceBlockE = comdat any

$_ZTVNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEEE = comdat any

$_ZTVN4SkSL7LiteralIbEE = comdat any

$_ZTVN4SkSL12StringStreamE = comdat any

$_ZTVN4SkSL13PointerLValueE = comdat any

$_ZTVN4SkSL13SwizzleLValueE = comdat any

$_ZTVN4SkSL16ConstructorSplatE = comdat any

$_ZTVN4SkSL25SingleArgumentConstructorE = comdat any

$_ZTVN4SkSL19ExpressionStatementE = comdat any

$_ZTVN4SkSL18FunctionDefinitionE = comdat any

@.str = private unnamed_addr constant [7 x i8] c"type '\00", align 1
@.str.1 = private unnamed_addr constant [24 x i8] c"' is not permitted here\00", align 1
@.str.2 = private unnamed_addr constant [18 x i8] c"offset of field '\00", align 1
@.str.3 = private unnamed_addr constant [20 x i8] c"' must be at least \00", align 1
@.str.4 = private unnamed_addr constant [25 x i8] c"' must be a multiple of \00", align 1
@.str.5 = private unnamed_addr constant [49 x i8] c"runtime-sized arrays are not supported in SPIR-V\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.7 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.10 = private unnamed_addr constant [24 x i8] c"unsupported intrinsic '\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.12 = private unnamed_addr constant [11 x i8] c"function '\00", align 1
@.str.13 = private unnamed_addr constant [17 x i8] c"' is not defined\00", align 1
@.str.14 = private unnamed_addr constant [19 x i8] c"unsupported cast: \00", align 1
@.str.15 = private unnamed_addr constant [5 x i8] c" to \00", align 1
@.str.16 = private unnamed_addr constant [6 x i8] c"sk_in\00", align 1
@.str.17 = private unnamed_addr constant [39 x i8] c"unable to retrieve lvalue from swizzle\00", align 1
@.str.18 = private unnamed_addr constant [27 x i8] c"RTHeightOffset is negative\00", align 1
@.str.19 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.20 = private unnamed_addr constant [13 x i8] c"u_skRTHeight\00", align 1
@.str.21 = private unnamed_addr constant [24 x i8] c"sksl_synthetic_uniforms\00", align 1
@.str.22 = private unnamed_addr constant [42 x i8] c"layout(binding=...) is required in SPIR-V\00", align 1
@.str.23 = private unnamed_addr constant [38 x i8] c"layout(set=...) is required in SPIR-V\00", align 1
@.str.24 = private unnamed_addr constant [44 x i8] c"unsupported operand for binary expression: \00", align 1
@.str.25 = private unnamed_addr constant [34 x i8] c"unsupported mixed-type expression\00", align 1
@.str.26 = private unnamed_addr constant [18 x i8] c"unsupported token\00", align 1
@.str.27 = private unnamed_addr constant [13 x i8] c"sk_FragColor\00", align 1
@.str.28 = private unnamed_addr constant [36 x i8] c"SPIR-V does not support returning '\00", align 1
@.str.29 = private unnamed_addr constant [14 x i8] c"' from main()\00", align 1
@.str.30 = private unnamed_addr constant [44 x i8] c"SPIR-V does not support parameter of type '\00", align 1
@.str.31 = private unnamed_addr constant [12 x i8] c"' to main()\00", align 1
@.str.32 = private unnamed_addr constant [12 x i8] c"_entrypoint\00", align 1
@_ZZN4SkSL18SPIRVCodeGenerator18writeUniformBufferENSt3__110shared_ptrINS_11SymbolTableEEEE18kUniformBufferName = internal constant [15 x i8] c"_UniformBuffer\00", align 1
@.str.33 = private unnamed_addr constant [43 x i8] c"program does not contain a main() function\00", align 1
@.str.34 = private unnamed_addr constant [13 x i8] c"GLSL.std.450\00", align 1
@.str.35 = private unnamed_addr constant [67 x i8] c"../../third_party/skia/src/sksl/codegen/SkSLSPIRVCodeGenerator.cpp\00", align 1
@.str.36 = private unnamed_addr constant [45 x i8] c"cannot write this kind of program to SPIR-V\0A\00", align 1
@_ZTVN4SkSL18SPIRVCodeGeneratorE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::SPIRVCodeGenerator"*)* @_ZN4SkSL18SPIRVCodeGeneratorD2Ev to i8*), i8* bitcast (void (%"class.SkSL::SPIRVCodeGenerator"*)* @_ZN4SkSL18SPIRVCodeGeneratorD0Ev to i8*), i8* bitcast (i1 (%"class.SkSL::SPIRVCodeGenerator"*)* @_ZN4SkSL18SPIRVCodeGenerator12generateCodeEv to i8*)] }, align 8
@.str.38 = private unnamed_addr constant [51 x i8] c"../../third_party/skia/src/sksl/SkSLMemoryLayout.h\00", align 1
@.str.39 = private unnamed_addr constant [33 x i8] c"cannot determine size of type %s\00", align 1
@.str.40 = private unnamed_addr constant [28 x i8] c"type does not have a stride\00", align 1
@_ZTVN4SkSL7LiteralIlEE = linkonce_odr hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::IRNode"*)* @_ZN4SkSL6IRNodeD2Ev to i8*), i8* bitcast (void (%"class.SkSL::Literal"*)* @_ZN4SkSL7LiteralIlED0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::Literal"*)* @_ZNK4SkSL7LiteralIlE11descriptionEv to i8*), i8* bitcast (%"class.SkSL::Type"* (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression4typeEv to i8*), i8* bitcast (i1 (%"class.SkSL::Literal"*)* @_ZNK4SkSL7LiteralIlE21isCompileTimeConstantEv to i8*), i8* bitcast (i32 (%"class.SkSL::Literal"*, %"class.SkSL::Expression"*)* @_ZNK4SkSL7LiteralIlE15compareConstantERKNS_10ExpressionE to i8*), i8* bitcast (i1 (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression19isConstantOrUniformEv to i8*), i8* bitcast (i1 (%"class.SkSL::Literal"*, i32)* @_ZNK4SkSL7LiteralIlE11hasPropertyENS_10Expression8PropertyE to i8*), i8* bitcast ({ i64, i8 } (%"class.SkSL::Literal"*, %"class.SkSL::Type"*)* @_ZNK4SkSL7LiteralIlE12coercionCostERKNS_4TypeE to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::Literal"*, i32)* @_ZNK4SkSL7LiteralIlE24getConstantSubexpressionEi to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::Literal"*)* @_ZNK4SkSL7LiteralIlE5cloneEv to i8*)] }, comdat, align 8
@_ZTVN4SkSL19ConstructorCompoundE = linkonce_odr hidden unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::MultiArgumentConstructor"*)* @_ZN4SkSL24MultiArgumentConstructorD2Ev to i8*), i8* bitcast (void (%"class.SkSL::ConstructorCompound"*)* @_ZN4SkSL19ConstructorCompoundD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::AnyConstructor"*)* @_ZNK4SkSL14AnyConstructor11descriptionEv to i8*), i8* bitcast (%"class.SkSL::Type"* (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression4typeEv to i8*), i8* bitcast (i1 (%"class.SkSL::AnyConstructor"*)* @_ZNK4SkSL14AnyConstructor21isCompileTimeConstantEv to i8*), i8* bitcast (i32 (%"class.SkSL::AnyConstructor"*, %"class.SkSL::Expression"*)* @_ZNK4SkSL14AnyConstructor15compareConstantERKNS_10ExpressionE to i8*), i8* bitcast (i1 (%"class.SkSL::AnyConstructor"*)* @_ZNK4SkSL14AnyConstructor19isConstantOrUniformEv to i8*), i8* bitcast (i1 (%"class.SkSL::AnyConstructor"*, i32)* @_ZNK4SkSL14AnyConstructor11hasPropertyENS_10Expression8PropertyE to i8*), i8* bitcast ({ i64, i8 } (%"class.SkSL::Expression"*, %"class.SkSL::Type"*)* @_ZNK4SkSL10Expression12coercionCostERKNS_4TypeE to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::AnyConstructor"*, i32)* @_ZNK4SkSL14AnyConstructor24getConstantSubexpressionEi to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::ConstructorCompound"*)* @_ZNK4SkSL19ConstructorCompound5cloneEv to i8*), i8* bitcast ({ %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::MultiArgumentConstructor"*)* @_ZN4SkSL24MultiArgumentConstructor12argumentSpanEv to i8*), i8* bitcast ({ %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::MultiArgumentConstructor"*)* @_ZNK4SkSL24MultiArgumentConstructor12argumentSpanEv to i8*)] }, comdat, align 8
@_ZTVN4SkSL24MultiArgumentConstructorE = linkonce_odr hidden unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::MultiArgumentConstructor"*)* @_ZN4SkSL24MultiArgumentConstructorD2Ev to i8*), i8* bitcast (void (%"class.SkSL::MultiArgumentConstructor"*)* @_ZN4SkSL24MultiArgumentConstructorD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::AnyConstructor"*)* @_ZNK4SkSL14AnyConstructor11descriptionEv to i8*), i8* bitcast (%"class.SkSL::Type"* (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression4typeEv to i8*), i8* bitcast (i1 (%"class.SkSL::AnyConstructor"*)* @_ZNK4SkSL14AnyConstructor21isCompileTimeConstantEv to i8*), i8* bitcast (i32 (%"class.SkSL::AnyConstructor"*, %"class.SkSL::Expression"*)* @_ZNK4SkSL14AnyConstructor15compareConstantERKNS_10ExpressionE to i8*), i8* bitcast (i1 (%"class.SkSL::AnyConstructor"*)* @_ZNK4SkSL14AnyConstructor19isConstantOrUniformEv to i8*), i8* bitcast (i1 (%"class.SkSL::AnyConstructor"*, i32)* @_ZNK4SkSL14AnyConstructor11hasPropertyENS_10Expression8PropertyE to i8*), i8* bitcast ({ i64, i8 } (%"class.SkSL::Expression"*, %"class.SkSL::Type"*)* @_ZNK4SkSL10Expression12coercionCostERKNS_4TypeE to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::AnyConstructor"*, i32)* @_ZNK4SkSL14AnyConstructor24getConstantSubexpressionEi to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast ({ %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::MultiArgumentConstructor"*)* @_ZN4SkSL24MultiArgumentConstructor12argumentSpanEv to i8*), i8* bitcast ({ %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::MultiArgumentConstructor"*)* @_ZNK4SkSL24MultiArgumentConstructor12argumentSpanEv to i8*)] }, comdat, align 8
@_ZTVN4SkSL14AnyConstructorE = external unnamed_addr constant { [15 x i8*] }, align 8
@_ZTVN4SkSL7LiteralIfEE = linkonce_odr hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::IRNode"*)* @_ZN4SkSL6IRNodeD2Ev to i8*), i8* bitcast (void (%"class.SkSL::Literal.430"*)* @_ZN4SkSL7LiteralIfED0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::Literal.430"*)* @_ZNK4SkSL7LiteralIfE11descriptionEv to i8*), i8* bitcast (%"class.SkSL::Type"* (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression4typeEv to i8*), i8* bitcast (i1 (%"class.SkSL::Literal.430"*)* @_ZNK4SkSL7LiteralIfE21isCompileTimeConstantEv to i8*), i8* bitcast (i32 (%"class.SkSL::Literal.430"*, %"class.SkSL::Expression"*)* @_ZNK4SkSL7LiteralIfE15compareConstantERKNS_10ExpressionE to i8*), i8* bitcast (i1 (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression19isConstantOrUniformEv to i8*), i8* bitcast (i1 (%"class.SkSL::Literal.430"*, i32)* @_ZNK4SkSL7LiteralIfE11hasPropertyENS_10Expression8PropertyE to i8*), i8* bitcast ({ i64, i8 } (%"class.SkSL::Literal.430"*, %"class.SkSL::Type"*)* @_ZNK4SkSL7LiteralIfE12coercionCostERKNS_4TypeE to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::Literal.430"*, i32)* @_ZNK4SkSL7LiteralIfE24getConstantSubexpressionEi to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::Literal.430"*)* @_ZNK4SkSL7LiteralIfE5cloneEv to i8*)] }, comdat, align 8
@_ZTVN4SkSL4TypeE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::Type"*)* @_ZN4SkSL4TypeD2Ev to i8*), i8* bitcast (void (%"class.SkSL::Type"*)* @_ZN4SkSL4TypeD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::Type"*)* @_ZNK4SkSL4Type11descriptionEv to i8*)] }, comdat, align 8
@.str.41 = private unnamed_addr constant [2 x i8] c"S\00", align 1
@_ZTVN4SkSL14InterfaceBlockE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::InterfaceBlock"*)* @_ZN4SkSL14InterfaceBlockD2Ev to i8*), i8* bitcast (void (%"class.SkSL::InterfaceBlock"*)* @_ZN4SkSL14InterfaceBlockD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::InterfaceBlock"*)* @_ZNK4SkSL14InterfaceBlock11descriptionEv to i8*), i8* bitcast (%"class.SkSL::ProgramElement"* (%"class.SkSL::InterfaceBlock"*)* @_ZNK4SkSL14InterfaceBlock5cloneEv to i8*)] }, comdat, align 8
@.str.42 = private unnamed_addr constant [4 x i8] c" {\0A\00", align 1
@.str.43 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.44 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@.str.45 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.46 = private unnamed_addr constant [5 x i8] c"[%d]\00", align 1
@.str.47 = private unnamed_addr constant [3 x i8] c"[]\00", align 1
@.str.48 = private unnamed_addr constant [2 x i8] c";\00", align 1
@.str.49 = private unnamed_addr constant [9 x i8] c"uniform \00", align 1
@.str.50 = private unnamed_addr constant [7 x i8] c"const \00", align 1
@.str.51 = private unnamed_addr constant [6 x i8] c"flat \00", align 1
@.str.52 = private unnamed_addr constant [15 x i8] c"noperspective \00", align 1
@.str.53 = private unnamed_addr constant [21 x i8] c"sk_has_side_effects \00", align 1
@.str.54 = private unnamed_addr constant [10 x i8] c"noinline \00", align 1
@.str.55 = private unnamed_addr constant [7 x i8] c"inout \00", align 1
@.str.56 = private unnamed_addr constant [4 x i8] c"in \00", align 1
@.str.57 = private unnamed_addr constant [5 x i8] c"out \00", align 1
@.str.58 = private unnamed_addr constant [12 x i8] c"location = \00", align 1
@.str.59 = private unnamed_addr constant [10 x i8] c"offset = \00", align 1
@.str.60 = private unnamed_addr constant [11 x i8] c"binding = \00", align 1
@.str.61 = private unnamed_addr constant [9 x i8] c"index = \00", align 1
@.str.62 = private unnamed_addr constant [7 x i8] c"set = \00", align 1
@.str.63 = private unnamed_addr constant [11 x i8] c"builtin = \00", align 1
@.str.64 = private unnamed_addr constant [26 x i8] c"input_attachment_index = \00", align 1
@.str.65 = private unnamed_addr constant [18 x i8] c"origin_upper_left\00", align 1
@.str.66 = private unnamed_addr constant [28 x i8] c"blend_support_all_equations\00", align 1
@.str.67 = private unnamed_addr constant [14 x i8] c"push_constant\00", align 1
@.str.68 = private unnamed_addr constant [14 x i8] c"srgb_unpremul\00", align 1
@.str.69 = private unnamed_addr constant [7 x i8] c"points\00", align 1
@.str.70 = private unnamed_addr constant [6 x i8] c"lines\00", align 1
@.str.71 = private unnamed_addr constant [11 x i8] c"line_strip\00", align 1
@.str.72 = private unnamed_addr constant [16 x i8] c"lines_adjacency\00", align 1
@.str.73 = private unnamed_addr constant [10 x i8] c"triangles\00", align 1
@.str.74 = private unnamed_addr constant [15 x i8] c"triangle_strip\00", align 1
@.str.75 = private unnamed_addr constant [20 x i8] c"triangles_adjacency\00", align 1
@.str.76 = private unnamed_addr constant [16 x i8] c"max_vertices = \00", align 1
@.str.77 = private unnamed_addr constant [15 x i8] c"invocations = \00", align 1
@.str.78 = private unnamed_addr constant [8 x i8] c"when = \00", align 1
@.str.79 = private unnamed_addr constant [9 x i8] c"layout (\00", align 1
@.str.80 = private unnamed_addr constant [16 x i8] c"/* key */ const\00", align 1
@_ZTVNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEEE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEED2Ev to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEED0Ev to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEE16__on_zero_sharedEv to i8*), i8* bitcast (i8* (%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"*)* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEE21__on_zero_shared_weakEv to i8*)] }, comdat, align 8
@_ZTVN4SkSL7LiteralIbEE = linkonce_odr hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::IRNode"*)* @_ZN4SkSL6IRNodeD2Ev to i8*), i8* bitcast (void (%"class.SkSL::Literal.429"*)* @_ZN4SkSL7LiteralIbED0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::Literal.429"*)* @_ZNK4SkSL7LiteralIbE11descriptionEv to i8*), i8* bitcast (%"class.SkSL::Type"* (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression4typeEv to i8*), i8* bitcast (i1 (%"class.SkSL::Literal.429"*)* @_ZNK4SkSL7LiteralIbE21isCompileTimeConstantEv to i8*), i8* bitcast (i32 (%"class.SkSL::Literal.429"*, %"class.SkSL::Expression"*)* @_ZNK4SkSL7LiteralIbE15compareConstantERKNS_10ExpressionE to i8*), i8* bitcast (i1 (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression19isConstantOrUniformEv to i8*), i8* bitcast (i1 (%"class.SkSL::Literal.429"*, i32)* @_ZNK4SkSL7LiteralIbE11hasPropertyENS_10Expression8PropertyE to i8*), i8* bitcast ({ i64, i8 } (%"class.SkSL::Expression"*, %"class.SkSL::Type"*)* @_ZNK4SkSL10Expression12coercionCostERKNS_4TypeE to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::Literal.429"*, i32)* @_ZNK4SkSL7LiteralIbE24getConstantSubexpressionEi to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::Literal.429"*)* @_ZNK4SkSL7LiteralIbE5cloneEv to i8*)] }, comdat, align 8
@.str.81 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.82 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.83 = private unnamed_addr constant [33 x i8] c"math is unsupported on type '%s'\00", align 1
@_ZTVN4SkSL12StringStreamE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.SkSL::OutputStream"*)* @_ZNK4SkSL12OutputStream7isValidEv to i8*), i8* bitcast (void (%"class.SkSL::StringStream"*, i8)* @_ZN4SkSL12StringStream6write8Eh to i8*), i8* bitcast (void (%"class.SkSL::StringStream"*, i8*)* @_ZN4SkSL12StringStream9writeTextEPKc to i8*), i8* bitcast (void (%"class.SkSL::StringStream"*, i8*, i64)* @_ZN4SkSL12StringStream5writeEPKvm to i8*), i8* bitcast (void (%"class.SkSL::StringStream"*)* @_ZN4SkSL12StringStreamD2Ev to i8*), i8* bitcast (void (%"class.SkSL::StringStream"*)* @_ZN4SkSL12StringStreamD0Ev to i8*)] }, comdat, align 8
@_ZTV22SkDynamicMemoryWStream = external unnamed_addr constant { [7 x i8*] }, align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@_ZN6SkOpts7hash_fnE = external local_unnamed_addr global i32 (i8*, i64, i32)*, align 8
@_ZTVN4SkSL13PointerLValueE = linkonce_odr hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)* @_ZN4SkSL18SPIRVCodeGenerator6LValueD2Ev to i8*), i8* bitcast (void (%"class.SkSL::PointerLValue"*)* @_ZN4SkSL13PointerLValueD0Ev to i8*), i8* bitcast (i32 (%"class.SkSL::PointerLValue"*)* @_ZN4SkSL13PointerLValue10getPointerEv to i8*), i8* bitcast (i1 (%"class.SkSL::PointerLValue"*)* @_ZNK4SkSL13PointerLValue21isMemoryObjectPointerEv to i8*), i8* bitcast (i1 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %class.SkSTArray.431*, %"class.SkSL::Type"*)* @_ZN4SkSL18SPIRVCodeGenerator6LValue12applySwizzleERK9SkSTArrayILi4EaLb0EERKNS_4TypeE to i8*), i8* bitcast (i32 (%"class.SkSL::PointerLValue"*, %"class.SkSL::OutputStream"*)* @_ZN4SkSL13PointerLValue4loadERNS_12OutputStreamE to i8*), i8* bitcast (void (%"class.SkSL::PointerLValue"*, i32, %"class.SkSL::OutputStream"*)* @_ZN4SkSL13PointerLValue5storeEjRNS_12OutputStreamE to i8*)] }, comdat, align 8
@_ZTVN4SkSL13SwizzleLValueE = linkonce_odr hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::SwizzleLValue"*)* @_ZN4SkSL13SwizzleLValueD2Ev to i8*), i8* bitcast (void (%"class.SkSL::SwizzleLValue"*)* @_ZN4SkSL13SwizzleLValueD0Ev to i8*), i8* bitcast (i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*)* @_ZN4SkSL18SPIRVCodeGenerator6LValue10getPointerEv to i8*), i8* bitcast (i1 (%"class.SkSL::SPIRVCodeGenerator::LValue"*)* @_ZNK4SkSL18SPIRVCodeGenerator6LValue21isMemoryObjectPointerEv to i8*), i8* bitcast (i1 (%"class.SkSL::SwizzleLValue"*, %class.SkSTArray.431*, %"class.SkSL::Type"*)* @_ZN4SkSL13SwizzleLValue12applySwizzleERK9SkSTArrayILi4EaLb0EERKNS_4TypeE to i8*), i8* bitcast (i32 (%"class.SkSL::SwizzleLValue"*, %"class.SkSL::OutputStream"*)* @_ZN4SkSL13SwizzleLValue4loadERNS_12OutputStreamE to i8*), i8* bitcast (void (%"class.SkSL::SwizzleLValue"*, i32, %"class.SkSL::OutputStream"*)* @_ZN4SkSL13SwizzleLValue5storeEjRNS_12OutputStreamE to i8*)] }, comdat, align 8
@_ZTVN4SkSL8VariableE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN4SkSL16ConstructorSplatE = linkonce_odr hidden unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::SingleArgumentConstructor"*)* @_ZN4SkSL25SingleArgumentConstructorD2Ev to i8*), i8* bitcast (void (%"class.SkSL::ConstructorSplat"*)* @_ZN4SkSL16ConstructorSplatD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::AnyConstructor"*)* @_ZNK4SkSL14AnyConstructor11descriptionEv to i8*), i8* bitcast (%"class.SkSL::Type"* (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression4typeEv to i8*), i8* bitcast (i1 (%"class.SkSL::AnyConstructor"*)* @_ZNK4SkSL14AnyConstructor21isCompileTimeConstantEv to i8*), i8* bitcast (i32 (%"class.SkSL::AnyConstructor"*, %"class.SkSL::Expression"*)* @_ZNK4SkSL14AnyConstructor15compareConstantERKNS_10ExpressionE to i8*), i8* bitcast (i1 (%"class.SkSL::AnyConstructor"*)* @_ZNK4SkSL14AnyConstructor19isConstantOrUniformEv to i8*), i8* bitcast (i1 (%"class.SkSL::AnyConstructor"*, i32)* @_ZNK4SkSL14AnyConstructor11hasPropertyENS_10Expression8PropertyE to i8*), i8* bitcast ({ i64, i8 } (%"class.SkSL::Expression"*, %"class.SkSL::Type"*)* @_ZNK4SkSL10Expression12coercionCostERKNS_4TypeE to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::ConstructorSplat"*, i32)* @_ZNK4SkSL16ConstructorSplat24getConstantSubexpressionEi to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::ConstructorSplat"*)* @_ZNK4SkSL16ConstructorSplat5cloneEv to i8*), i8* bitcast ({ %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::SingleArgumentConstructor"*)* @_ZN4SkSL25SingleArgumentConstructor12argumentSpanEv to i8*), i8* bitcast ({ %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::SingleArgumentConstructor"*)* @_ZNK4SkSL25SingleArgumentConstructor12argumentSpanEv to i8*)] }, comdat, align 8
@_ZTVN4SkSL25SingleArgumentConstructorE = linkonce_odr hidden unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::SingleArgumentConstructor"*)* @_ZN4SkSL25SingleArgumentConstructorD2Ev to i8*), i8* bitcast (void (%"class.SkSL::SingleArgumentConstructor"*)* @_ZN4SkSL25SingleArgumentConstructorD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::AnyConstructor"*)* @_ZNK4SkSL14AnyConstructor11descriptionEv to i8*), i8* bitcast (%"class.SkSL::Type"* (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression4typeEv to i8*), i8* bitcast (i1 (%"class.SkSL::AnyConstructor"*)* @_ZNK4SkSL14AnyConstructor21isCompileTimeConstantEv to i8*), i8* bitcast (i32 (%"class.SkSL::AnyConstructor"*, %"class.SkSL::Expression"*)* @_ZNK4SkSL14AnyConstructor15compareConstantERKNS_10ExpressionE to i8*), i8* bitcast (i1 (%"class.SkSL::AnyConstructor"*)* @_ZNK4SkSL14AnyConstructor19isConstantOrUniformEv to i8*), i8* bitcast (i1 (%"class.SkSL::AnyConstructor"*, i32)* @_ZNK4SkSL14AnyConstructor11hasPropertyENS_10Expression8PropertyE to i8*), i8* bitcast ({ i64, i8 } (%"class.SkSL::Expression"*, %"class.SkSL::Type"*)* @_ZNK4SkSL10Expression12coercionCostERKNS_4TypeE to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::AnyConstructor"*, i32)* @_ZNK4SkSL14AnyConstructor24getConstantSubexpressionEi to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast ({ %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::SingleArgumentConstructor"*)* @_ZN4SkSL25SingleArgumentConstructor12argumentSpanEv to i8*), i8* bitcast ({ %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::SingleArgumentConstructor"*)* @_ZNK4SkSL25SingleArgumentConstructor12argumentSpanEv to i8*)] }, comdat, align 8
@_ZTVN4SkSL12FunctionCallE = external unnamed_addr constant { [13 x i8*] }, align 8
@_ZTVN4SkSL16BinaryExpressionE = external unnamed_addr constant { [13 x i8*] }, align 8
@_ZTVN4SkSL19ExpressionStatementE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::ExpressionStatement"*)* @_ZN4SkSL19ExpressionStatementD2Ev to i8*), i8* bitcast (void (%"class.SkSL::ExpressionStatement"*)* @_ZN4SkSL19ExpressionStatementD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::ExpressionStatement"*)* @_ZNK4SkSL19ExpressionStatement11descriptionEv to i8*), i8* bitcast (i1 (%"class.SkSL::Statement"*)* @_ZNK4SkSL9Statement7isEmptyEv to i8*), i8* bitcast (%"class.SkSL::Statement"* (%"class.SkSL::ExpressionStatement"*)* @_ZNK4SkSL19ExpressionStatement5cloneEv to i8*)] }, comdat, align 8
@_ZTVN4SkSL18FunctionDefinitionE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::FunctionDefinition"*)* @_ZN4SkSL18FunctionDefinitionD2Ev to i8*), i8* bitcast (void (%"class.SkSL::FunctionDefinition"*)* @_ZN4SkSL18FunctionDefinitionD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::FunctionDefinition"*)* @_ZNK4SkSL18FunctionDefinition11descriptionEv to i8*), i8* bitcast (%"class.SkSL::ProgramElement"* (%"class.SkSL::FunctionDefinition"*)* @_ZNK4SkSL18FunctionDefinition5cloneEv to i8*)] }, comdat, align 8
@switch.table._ZN4SkSL18SPIRVCodeGenerator32writeGeometryShaderExecutionModeEjRNS_12OutputStreamE = private unnamed_addr constant [7 x i32] [i32 1, i32 2, i32 1, i32 4, i32 3, i32 1, i32 6], align 4
@switch.table._ZN4SkSL18SPIRVCodeGenerator32writeGeometryShaderExecutionModeEjRNS_12OutputStreamE.84 = private unnamed_addr constant [7 x i32] [i32 19, i32 20, i32 19, i32 21, i32 22, i32 19, i32 23], align 4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18SPIRVCodeGenerator15setupIntrinsicsEv(%"class.SkSL::SPIRVCodeGenerator"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::tuple.630", align 8
  %3 = alloca %"class.std::__1::tuple.633", align 1
  %4 = alloca %"class.std::__1::tuple.630", align 8
  %5 = alloca %"class.std::__1::tuple.633", align 1
  %6 = alloca %"class.std::__1::tuple.630", align 8
  %7 = alloca %"class.std::__1::tuple.633", align 1
  %8 = alloca %"class.std::__1::tuple.630", align 8
  %9 = alloca %"class.std::__1::tuple.633", align 1
  %10 = alloca %"class.std::__1::tuple.630", align 8
  %11 = alloca %"class.std::__1::tuple.633", align 1
  %12 = alloca %"class.std::__1::tuple.630", align 8
  %13 = alloca %"class.std::__1::tuple.633", align 1
  %14 = alloca %"class.std::__1::tuple.630", align 8
  %15 = alloca %"class.std::__1::tuple.633", align 1
  %16 = alloca %"class.std::__1::tuple.630", align 8
  %17 = alloca %"class.std::__1::tuple.633", align 1
  %18 = alloca %"class.std::__1::tuple.630", align 8
  %19 = alloca %"class.std::__1::tuple.633", align 1
  %20 = alloca %"class.std::__1::tuple.630", align 8
  %21 = alloca %"class.std::__1::tuple.633", align 1
  %22 = alloca %"class.std::__1::tuple.630", align 8
  %23 = alloca %"class.std::__1::tuple.633", align 1
  %24 = alloca %"class.std::__1::tuple.630", align 8
  %25 = alloca %"class.std::__1::tuple.633", align 1
  %26 = alloca %"class.std::__1::tuple.630", align 8
  %27 = alloca %"class.std::__1::tuple.633", align 1
  %28 = alloca %"class.std::__1::tuple.630", align 8
  %29 = alloca %"class.std::__1::tuple.633", align 1
  %30 = alloca %"class.std::__1::tuple.630", align 8
  %31 = alloca %"class.std::__1::tuple.633", align 1
  %32 = alloca %"class.std::__1::tuple.630", align 8
  %33 = alloca %"class.std::__1::tuple.633", align 1
  %34 = alloca %"class.std::__1::tuple.630", align 8
  %35 = alloca %"class.std::__1::tuple.633", align 1
  %36 = alloca %"class.std::__1::tuple.630", align 8
  %37 = alloca %"class.std::__1::tuple.633", align 1
  %38 = alloca %"class.std::__1::tuple.630", align 8
  %39 = alloca %"class.std::__1::tuple.633", align 1
  %40 = alloca %"class.std::__1::tuple.630", align 8
  %41 = alloca %"class.std::__1::tuple.633", align 1
  %42 = alloca %"class.std::__1::tuple.630", align 8
  %43 = alloca %"class.std::__1::tuple.633", align 1
  %44 = alloca %"class.std::__1::tuple.630", align 8
  %45 = alloca %"class.std::__1::tuple.633", align 1
  %46 = alloca %"class.std::__1::tuple.630", align 8
  %47 = alloca %"class.std::__1::tuple.633", align 1
  %48 = alloca %"class.std::__1::tuple.630", align 8
  %49 = alloca %"class.std::__1::tuple.633", align 1
  %50 = alloca %"class.std::__1::tuple.630", align 8
  %51 = alloca %"class.std::__1::tuple.633", align 1
  %52 = alloca %"class.std::__1::tuple.630", align 8
  %53 = alloca %"class.std::__1::tuple.633", align 1
  %54 = alloca %"class.std::__1::tuple.630", align 8
  %55 = alloca %"class.std::__1::tuple.633", align 1
  %56 = alloca %"class.std::__1::tuple.630", align 8
  %57 = alloca %"class.std::__1::tuple.633", align 1
  %58 = alloca %"class.std::__1::tuple.630", align 8
  %59 = alloca %"class.std::__1::tuple.633", align 1
  %60 = alloca %"class.std::__1::tuple.630", align 8
  %61 = alloca %"class.std::__1::tuple.633", align 1
  %62 = alloca %"class.std::__1::tuple.630", align 8
  %63 = alloca %"class.std::__1::tuple.633", align 1
  %64 = alloca %"class.std::__1::tuple.630", align 8
  %65 = alloca %"class.std::__1::tuple.633", align 1
  %66 = alloca %"class.std::__1::tuple.630", align 8
  %67 = alloca %"class.std::__1::tuple.633", align 1
  %68 = alloca %"class.std::__1::tuple.630", align 8
  %69 = alloca %"class.std::__1::tuple.633", align 1
  %70 = alloca %"class.std::__1::tuple.630", align 8
  %71 = alloca %"class.std::__1::tuple.633", align 1
  %72 = alloca %"class.std::__1::tuple.630", align 8
  %73 = alloca %"class.std::__1::tuple.633", align 1
  %74 = alloca %"class.std::__1::tuple.630", align 8
  %75 = alloca %"class.std::__1::tuple.633", align 1
  %76 = alloca %"class.std::__1::tuple.630", align 8
  %77 = alloca %"class.std::__1::tuple.633", align 1
  %78 = alloca %"class.std::__1::tuple.630", align 8
  %79 = alloca %"class.std::__1::tuple.633", align 1
  %80 = alloca %"class.std::__1::tuple.630", align 8
  %81 = alloca %"class.std::__1::tuple.633", align 1
  %82 = alloca %"class.std::__1::tuple.630", align 8
  %83 = alloca %"class.std::__1::tuple.633", align 1
  %84 = alloca %"class.std::__1::tuple.630", align 8
  %85 = alloca %"class.std::__1::tuple.633", align 1
  %86 = alloca %"class.std::__1::tuple.630", align 8
  %87 = alloca %"class.std::__1::tuple.633", align 1
  %88 = alloca %"class.std::__1::tuple.630", align 8
  %89 = alloca %"class.std::__1::tuple.633", align 1
  %90 = alloca %"class.std::__1::tuple.630", align 8
  %91 = alloca %"class.std::__1::tuple.633", align 1
  %92 = alloca %"class.std::__1::tuple.630", align 8
  %93 = alloca %"class.std::__1::tuple.633", align 1
  %94 = alloca %"class.std::__1::tuple.630", align 8
  %95 = alloca %"class.std::__1::tuple.633", align 1
  %96 = alloca %"class.std::__1::tuple.630", align 8
  %97 = alloca %"class.std::__1::tuple.633", align 1
  %98 = alloca %"class.std::__1::tuple.630", align 8
  %99 = alloca %"class.std::__1::tuple.633", align 1
  %100 = alloca %"class.std::__1::tuple.630", align 8
  %101 = alloca %"class.std::__1::tuple.633", align 1
  %102 = alloca %"class.std::__1::tuple.630", align 8
  %103 = alloca %"class.std::__1::tuple.633", align 1
  %104 = alloca %"class.std::__1::tuple.630", align 8
  %105 = alloca %"class.std::__1::tuple.633", align 1
  %106 = alloca %"class.std::__1::tuple.630", align 8
  %107 = alloca %"class.std::__1::tuple.633", align 1
  %108 = alloca %"class.std::__1::tuple.630", align 8
  %109 = alloca %"class.std::__1::tuple.633", align 1
  %110 = alloca %"class.std::__1::tuple.630", align 8
  %111 = alloca %"class.std::__1::tuple.633", align 1
  %112 = alloca %"class.std::__1::tuple.630", align 8
  %113 = alloca %"class.std::__1::tuple.633", align 1
  %114 = alloca %"class.std::__1::tuple.630", align 8
  %115 = alloca %"class.std::__1::tuple.633", align 1
  %116 = alloca %"class.std::__1::tuple.630", align 8
  %117 = alloca %"class.std::__1::tuple.633", align 1
  %118 = alloca %"class.std::__1::tuple.630", align 8
  %119 = alloca %"class.std::__1::tuple.633", align 1
  %120 = alloca %"class.std::__1::tuple.630", align 8
  %121 = alloca %"class.std::__1::tuple.633", align 1
  %122 = alloca %"class.std::__1::tuple.630", align 8
  %123 = alloca %"class.std::__1::tuple.633", align 1
  %124 = alloca %"class.std::__1::tuple.630", align 8
  %125 = alloca %"class.std::__1::tuple.633", align 1
  %126 = alloca %"class.std::__1::tuple.630", align 8
  %127 = alloca %"class.std::__1::tuple.633", align 1
  %128 = alloca %"class.std::__1::tuple.630", align 8
  %129 = alloca %"class.std::__1::tuple.633", align 1
  %130 = alloca %"class.std::__1::tuple.630", align 8
  %131 = alloca %"class.std::__1::tuple.633", align 1
  %132 = alloca %"class.std::__1::tuple.630", align 8
  %133 = alloca %"class.std::__1::tuple.633", align 1
  %134 = alloca %"class.std::__1::tuple.630", align 8
  %135 = alloca %"class.std::__1::tuple.633", align 1
  %136 = alloca %"class.std::__1::tuple.630", align 8
  %137 = alloca %"class.std::__1::tuple.633", align 1
  %138 = alloca %"class.std::__1::tuple.630", align 8
  %139 = alloca %"class.std::__1::tuple.633", align 1
  %140 = alloca %"class.std::__1::tuple.630", align 8
  %141 = alloca %"class.std::__1::tuple.633", align 1
  %142 = alloca %"class.std::__1::tuple.630", align 8
  %143 = alloca %"class.std::__1::tuple.633", align 1
  %144 = alloca %"class.std::__1::tuple.630", align 8
  %145 = alloca %"class.std::__1::tuple.633", align 1
  %146 = alloca %"class.std::__1::tuple.630", align 8
  %147 = alloca %"class.std::__1::tuple.633", align 1
  %148 = alloca %"class.std::__1::tuple.630", align 8
  %149 = alloca %"class.std::__1::tuple.633", align 1
  %150 = alloca %"class.std::__1::tuple.630", align 8
  %151 = alloca %"class.std::__1::tuple.633", align 1
  %152 = alloca %"class.std::__1::tuple.630", align 8
  %153 = alloca %"class.std::__1::tuple.633", align 1
  %154 = alloca %"class.std::__1::tuple.630", align 8
  %155 = alloca %"class.std::__1::tuple.633", align 1
  %156 = alloca %"class.std::__1::tuple.630", align 8
  %157 = alloca %"class.std::__1::tuple.633", align 1
  %158 = alloca %"class.std::__1::tuple.630", align 8
  %159 = alloca %"class.std::__1::tuple.633", align 1
  %160 = alloca %"class.std::__1::tuple.630", align 8
  %161 = alloca %"class.std::__1::tuple.633", align 1
  %162 = alloca %"class.std::__1::tuple.630", align 8
  %163 = alloca %"class.std::__1::tuple.633", align 1
  %164 = alloca %"class.std::__1::tuple.630", align 8
  %165 = alloca %"class.std::__1::tuple.633", align 1
  %166 = alloca %"class.std::__1::tuple.630", align 8
  %167 = alloca %"class.std::__1::tuple.633", align 1
  %168 = alloca %"class.std::__1::tuple.630", align 8
  %169 = alloca %"class.std::__1::tuple.633", align 1
  %170 = alloca %"class.std::__1::tuple.630", align 8
  %171 = alloca %"class.std::__1::tuple.633", align 1
  %172 = alloca %"class.std::__1::tuple.630", align 8
  %173 = alloca %"class.std::__1::tuple.633", align 1
  %174 = alloca %"class.std::__1::tuple.630", align 8
  %175 = alloca %"class.std::__1::tuple.633", align 1
  %176 = alloca %"class.std::__1::tuple.630", align 8
  %177 = alloca %"class.std::__1::tuple.633", align 1
  %178 = alloca %"class.std::__1::tuple.630", align 8
  %179 = alloca %"class.std::__1::tuple.633", align 1
  %180 = alloca %"class.std::__1::tuple.630", align 8
  %181 = alloca %"class.std::__1::tuple.633", align 1
  %182 = alloca %"class.std::__1::tuple.630", align 8
  %183 = alloca %"class.std::__1::tuple.633", align 1
  %184 = alloca %"class.std::__1::tuple.630", align 8
  %185 = alloca %"class.std::__1::tuple.633", align 1
  %186 = alloca %"class.std::__1::tuple.630", align 8
  %187 = alloca %"class.std::__1::tuple.633", align 1
  %188 = alloca i32, align 4
  %189 = alloca i32, align 4
  %190 = alloca i32, align 4
  %191 = alloca i32, align 4
  %192 = alloca i32, align 4
  %193 = alloca i32, align 4
  %194 = alloca i32, align 4
  %195 = alloca i32, align 4
  %196 = alloca i32, align 4
  %197 = alloca i32, align 4
  %198 = alloca i32, align 4
  %199 = alloca i32, align 4
  %200 = alloca i32, align 4
  %201 = alloca i32, align 4
  %202 = alloca i32, align 4
  %203 = alloca i32, align 4
  %204 = alloca i32, align 4
  %205 = alloca i32, align 4
  %206 = alloca i32, align 4
  %207 = alloca i32, align 4
  %208 = alloca i32, align 4
  %209 = alloca i32, align 4
  %210 = alloca i32, align 4
  %211 = alloca i32, align 4
  %212 = alloca i32, align 4
  %213 = alloca i32, align 4
  %214 = alloca i32, align 4
  %215 = alloca i32, align 4
  %216 = alloca i32, align 4
  %217 = alloca i32, align 4
  %218 = alloca i32, align 4
  %219 = alloca i32, align 4
  %220 = alloca i32, align 4
  %221 = alloca i32, align 4
  %222 = alloca i32, align 4
  %223 = alloca i32, align 4
  %224 = alloca i32, align 4
  %225 = alloca i32, align 4
  %226 = alloca i32, align 4
  %227 = alloca i32, align 4
  %228 = alloca i32, align 4
  %229 = alloca i32, align 4
  %230 = alloca i32, align 4
  %231 = alloca i32, align 4
  %232 = alloca i32, align 4
  %233 = alloca i32, align 4
  %234 = alloca i32, align 4
  %235 = alloca i32, align 4
  %236 = alloca i32, align 4
  %237 = alloca i32, align 4
  %238 = alloca i32, align 4
  %239 = alloca i32, align 4
  %240 = alloca i32, align 4
  %241 = alloca i32, align 4
  %242 = alloca i32, align 4
  %243 = alloca i32, align 4
  %244 = alloca i32, align 4
  %245 = alloca i32, align 4
  %246 = alloca i32, align 4
  %247 = alloca i32, align 4
  %248 = alloca i32, align 4
  %249 = alloca i32, align 4
  %250 = alloca i32, align 4
  %251 = alloca i32, align 4
  %252 = alloca i32, align 4
  %253 = alloca i32, align 4
  %254 = alloca i32, align 4
  %255 = alloca i32, align 4
  %256 = alloca i32, align 4
  %257 = alloca i32, align 4
  %258 = alloca i32, align 4
  %259 = alloca i32, align 4
  %260 = alloca i32, align 4
  %261 = alloca i32, align 4
  %262 = alloca i32, align 4
  %263 = alloca i32, align 4
  %264 = alloca i32, align 4
  %265 = alloca i32, align 4
  %266 = alloca i32, align 4
  %267 = alloca i32, align 4
  %268 = alloca i32, align 4
  %269 = alloca i32, align 4
  %270 = alloca i32, align 4
  %271 = alloca i32, align 4
  %272 = alloca i32, align 4
  %273 = alloca i32, align 4
  %274 = alloca i32, align 4
  %275 = alloca i32, align 4
  %276 = alloca i32, align 4
  %277 = alloca i32, align 4
  %278 = alloca i32, align 4
  %279 = alloca i32, align 4
  %280 = alloca i32, align 4
  %281 = bitcast i32* %188 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %281) #14
  store i32 72, i32* %188, align 4
  %282 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 7, i32 0
  %283 = bitcast %"class.std::__1::tuple.630"* %184 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %283) #14
  %284 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %184, i64 0, i32 0, i32 0, i32 0
  store i32* %188, i32** %284, align 8
  %285 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %185, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %285) #14
  %286 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %188, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %184, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %185) #14
  %287 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %286, 0
  %288 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %287, i64 2
  %289 = bitcast %"struct.std::__1::__hash_node_base.113"* %288 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %285) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %283) #14
  %290 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %289, i64 0, i32 1, i32 0, i32 0, i32 0
  %291 = bitcast i32* %290 to <4 x i32>*
  store <4 x i32> <i32 0, i32 1, i32 1, i32 1>, <4 x i32>* %291, align 4
  %292 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %289, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 1, i32* %292, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %281) #14
  %293 = bitcast i32* %189 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %293) #14
  store i32 71, i32* %189, align 4
  %294 = bitcast %"class.std::__1::tuple.630"* %178 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %294) #14
  %295 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %178, i64 0, i32 0, i32 0, i32 0
  store i32* %189, i32** %295, align 8
  %296 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %179, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %296) #14
  %297 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %189, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %178, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %179) #14
  %298 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %297, 0
  %299 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %298, i64 2
  %300 = bitcast %"struct.std::__1::__hash_node_base.113"* %299 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %296) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %294) #14
  %301 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %300, i64 0, i32 1, i32 0, i32 0, i32 0
  %302 = bitcast i32* %301 to <4 x i32>*
  store <4 x i32> <i32 0, i32 2, i32 2, i32 2>, <4 x i32>* %302, align 4
  %303 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %300, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 2, i32* %303, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %293) #14
  %304 = bitcast i32* %190 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %304) #14
  store i32 85, i32* %190, align 4
  %305 = bitcast %"class.std::__1::tuple.630"* %172 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %305) #14
  %306 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %172, i64 0, i32 0, i32 0, i32 0
  store i32* %190, i32** %306, align 8
  %307 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %173, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %307) #14
  %308 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %190, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %172, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %173) #14
  %309 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %308, 0
  %310 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %309, i64 2
  %311 = bitcast %"struct.std::__1::__hash_node_base.113"* %310 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %307) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %305) #14
  %312 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %311, i64 0, i32 1, i32 0, i32 0, i32 0
  %313 = bitcast i32* %312 to <4 x i32>*
  store <4 x i32> <i32 0, i32 3, i32 3, i32 3>, <4 x i32>* %313, align 4
  %314 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %311, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 3, i32* %314, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %304) #14
  %315 = bitcast i32* %191 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %315) #14
  store i32 0, i32* %191, align 4
  %316 = bitcast %"class.std::__1::tuple.630"* %166 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %316) #14
  %317 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %166, i64 0, i32 0, i32 0, i32 0
  store i32* %191, i32** %317, align 8
  %318 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %167, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %318) #14
  %319 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %191, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %166, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %167) #14
  %320 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %319, 0
  %321 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %320, i64 2
  %322 = bitcast %"struct.std::__1::__hash_node_base.113"* %321 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %318) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %316) #14
  %323 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %322, i64 0, i32 1, i32 0, i32 0, i32 0
  %324 = bitcast i32* %323 to <4 x i32>*
  store <4 x i32> <i32 0, i32 4, i32 5, i32 5>, <4 x i32>* %324, align 4
  %325 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %322, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 1, i32* %325, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %315) #14
  %326 = bitcast i32* %192 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %326) #14
  store i32 75, i32* %192, align 4
  %327 = bitcast %"class.std::__1::tuple.630"* %160 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %327) #14
  %328 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %160, i64 0, i32 0, i32 0, i32 0
  store i32* %192, i32** %328, align 8
  %329 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %161, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %329) #14
  %330 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %192, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %160, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %161) #14
  %331 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %330, 0
  %332 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %331, i64 2
  %333 = bitcast %"struct.std::__1::__hash_node_base.113"* %332 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %329) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %327) #14
  %334 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %333, i64 0, i32 1, i32 0, i32 0, i32 0
  %335 = bitcast i32* %334 to <4 x i32>*
  store <4 x i32> <i32 0, i32 6, i32 7, i32 7>, <4 x i32>* %335, align 4
  %336 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %333, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 1, i32* %336, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %326) #14
  %337 = bitcast i32* %193 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %337) #14
  store i32 31, i32* %193, align 4
  %338 = bitcast %"class.std::__1::tuple.630"* %154 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %338) #14
  %339 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %154, i64 0, i32 0, i32 0, i32 0
  store i32* %193, i32** %339, align 8
  %340 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %155, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %340) #14
  %341 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %193, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %154, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %155) #14
  %342 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %341, 0
  %343 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %342, i64 2
  %344 = bitcast %"struct.std::__1::__hash_node_base.113"* %343 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %340) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %338) #14
  %345 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %344, i64 0, i32 1, i32 0, i32 0, i32 0
  %346 = bitcast i32* %345 to <4 x i32>*
  store <4 x i32> <i32 0, i32 8, i32 8, i32 8>, <4 x i32>* %346, align 4
  %347 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %344, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 8, i32* %347, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %337) #14
  %348 = bitcast i32* %194 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %348) #14
  store i32 10, i32* %194, align 4
  %349 = bitcast %"class.std::__1::tuple.630"* %148 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %349) #14
  %350 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %148, i64 0, i32 0, i32 0, i32 0
  store i32* %194, i32** %350, align 8
  %351 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %149, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %351) #14
  %352 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %194, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %148, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %149) #14
  %353 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %352, 0
  %354 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %353, i64 2
  %355 = bitcast %"struct.std::__1::__hash_node_base.113"* %354 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %351) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %349) #14
  %356 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %355, i64 0, i32 1, i32 0, i32 0, i32 0
  %357 = bitcast i32* %356 to <4 x i32>*
  store <4 x i32> <i32 0, i32 9, i32 9, i32 9>, <4 x i32>* %357, align 4
  %358 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %355, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 9, i32* %358, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %348) #14
  %359 = bitcast i32* %195 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %359) #14
  store i32 33, i32* %195, align 4
  %360 = bitcast %"class.std::__1::tuple.630"* %142 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %360) #14
  %361 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %142, i64 0, i32 0, i32 0, i32 0
  store i32* %195, i32** %361, align 8
  %362 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %143, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %362) #14
  %363 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %195, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %142, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %143) #14
  %364 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %363, 0
  %365 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %364, i64 2
  %366 = bitcast %"struct.std::__1::__hash_node_base.113"* %365 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %362) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %360) #14
  %367 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %366, i64 0, i32 1, i32 0, i32 0, i32 0
  %368 = bitcast i32* %367 to <4 x i32>*
  store <4 x i32> <i32 0, i32 10, i32 10, i32 10>, <4 x i32>* %368, align 4
  %369 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %366, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 10, i32* %369, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %359) #14
  %370 = bitcast i32* %196 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %370) #14
  store i32 68, i32* %196, align 4
  %371 = bitcast %"class.std::__1::tuple.630"* %136 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %371) #14
  %372 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %136, i64 0, i32 0, i32 0, i32 0
  store i32* %196, i32** %372, align 8
  %373 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %137, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %373) #14
  %374 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %196, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %136, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %137) #14
  %375 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %374, 0
  %376 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %375, i64 2
  %377 = bitcast %"struct.std::__1::__hash_node_base.113"* %376 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %373) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %371) #14
  %378 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %377, i64 0, i32 1, i32 0, i32 0, i32 0
  %379 = bitcast i32* %378 to <4 x i32>*
  store <4 x i32> <i32 0, i32 11, i32 11, i32 11>, <4 x i32>* %379, align 4
  %380 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %377, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 11, i32* %380, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %370) #14
  %381 = bitcast i32* %197 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %381) #14
  store i32 15, i32* %197, align 4
  %382 = bitcast %"class.std::__1::tuple.630"* %130 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %382) #14
  %383 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %130, i64 0, i32 0, i32 0, i32 0
  store i32* %197, i32** %383, align 8
  %384 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %131, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %384) #14
  %385 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %197, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %130, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %131) #14
  %386 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %385, 0
  %387 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %386, i64 2
  %388 = bitcast %"struct.std::__1::__hash_node_base.113"* %387 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %384) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %382) #14
  %389 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %388, i64 0, i32 1, i32 0, i32 0, i32 0
  %390 = bitcast i32* %389 to <4 x i32>*
  store <4 x i32> <i32 0, i32 12, i32 12, i32 12>, <4 x i32>* %390, align 4
  %391 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %388, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 12, i32* %391, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %381) #14
  %392 = bitcast i32* %198 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %392) #14
  store i32 77, i32* %198, align 4
  %393 = bitcast %"class.std::__1::tuple.630"* %124 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %393) #14
  %394 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %124, i64 0, i32 0, i32 0, i32 0
  store i32* %198, i32** %394, align 8
  %395 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %125, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %395) #14
  %396 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %198, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %124, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %125) #14
  %397 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %396, 0
  %398 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %397, i64 2
  %399 = bitcast %"struct.std::__1::__hash_node_base.113"* %398 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %395) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %393) #14
  %400 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %399, i64 0, i32 1, i32 0, i32 0, i32 0
  %401 = bitcast i32* %400 to <4 x i32>*
  store <4 x i32> <i32 0, i32 13, i32 13, i32 13>, <4 x i32>* %401, align 4
  %402 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %399, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 13, i32* %402, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %392) #14
  %403 = bitcast i32* %199 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %403) #14
  store i32 13, i32* %199, align 4
  %404 = bitcast %"class.std::__1::tuple.630"* %118 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %404) #14
  %405 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %118, i64 0, i32 0, i32 0, i32 0
  store i32* %199, i32** %405, align 8
  %406 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %119, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %406) #14
  %407 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %199, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %118, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %119) #14
  %408 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %407, 0
  %409 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %408, i64 2
  %410 = bitcast %"struct.std::__1::__hash_node_base.113"* %409 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %406) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %404) #14
  %411 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %410, i64 0, i32 1, i32 0, i32 0, i32 0
  %412 = bitcast i32* %411 to <4 x i32>*
  store <4 x i32> <i32 0, i32 14, i32 14, i32 14>, <4 x i32>* %412, align 4
  %413 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %410, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 14, i32* %413, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %403) #14
  %414 = bitcast i32* %200 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %414) #14
  store i32 83, i32* %200, align 4
  %415 = bitcast %"class.std::__1::tuple.630"* %112 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %415) #14
  %416 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %112, i64 0, i32 0, i32 0, i32 0
  store i32* %200, i32** %416, align 8
  %417 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %113, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %417) #14
  %418 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %200, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %112, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %113) #14
  %419 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %418, 0
  %420 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %419, i64 2
  %421 = bitcast %"struct.std::__1::__hash_node_base.113"* %420 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %417) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %415) #14
  %422 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %421, i64 0, i32 1, i32 0, i32 0, i32 0
  %423 = bitcast i32* %422 to <4 x i32>*
  store <4 x i32> <i32 0, i32 15, i32 15, i32 15>, <4 x i32>* %423, align 4
  %424 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %421, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 15, i32* %424, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %414) #14
  %425 = bitcast i32* %201 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %425) #14
  store i32 6, i32* %201, align 4
  %426 = bitcast %"class.std::__1::tuple.630"* %106 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %426) #14
  %427 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %106, i64 0, i32 0, i32 0, i32 0
  store i32* %201, i32** %427, align 8
  %428 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %107, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %428) #14
  %429 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %201, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %106, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %107) #14
  %430 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %429, 0
  %431 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %430, i64 2
  %432 = bitcast %"struct.std::__1::__hash_node_base.113"* %431 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %428) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %426) #14
  %433 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %432, i64 0, i32 1, i32 0, i32 0, i32 0
  %434 = bitcast i32* %433 to <4 x i32>*
  store <4 x i32> <i32 0, i32 16, i32 16, i32 16>, <4 x i32>* %434, align 4
  %435 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %432, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 16, i32* %435, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %425) #14
  %436 = bitcast i32* %202 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %436) #14
  store i32 2, i32* %202, align 4
  %437 = bitcast %"class.std::__1::tuple.630"* %100 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %437) #14
  %438 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %100, i64 0, i32 0, i32 0, i32 0
  store i32* %202, i32** %438, align 8
  %439 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %101, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %439) #14
  %440 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %202, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %100, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %101) #14
  %441 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %440, 0
  %442 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %441, i64 2
  %443 = bitcast %"struct.std::__1::__hash_node_base.113"* %442 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %439) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %437) #14
  %444 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %443, i64 0, i32 1, i32 0, i32 0, i32 0
  %445 = bitcast i32* %444 to <4 x i32>*
  store <4 x i32> <i32 0, i32 17, i32 17, i32 17>, <4 x i32>* %445, align 4
  %446 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %443, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 17, i32* %446, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %436) #14
  %447 = bitcast i32* %203 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %447) #14
  store i32 8, i32* %203, align 4
  %448 = bitcast %"class.std::__1::tuple.630"* %94 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %448) #14
  %449 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %94, i64 0, i32 0, i32 0, i32 0
  store i32* %203, i32** %449, align 8
  %450 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %95, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %450) #14
  %451 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %203, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %94, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %95) #14
  %452 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %451, 0
  %453 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %452, i64 2
  %454 = bitcast %"struct.std::__1::__hash_node_base.113"* %453 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %450) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %448) #14
  %455 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %454, i64 0, i32 1, i32 0, i32 0, i32 0
  %456 = bitcast i32* %455 to <4 x i32>*
  store <4 x i32> <i32 2, i32 0, i32 0, i32 0>, <4 x i32>* %456, align 4
  %457 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %454, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 0, i32* %457, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %447) #14
  %458 = bitcast i32* %204 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %458) #14
  store i32 76, i32* %204, align 4
  %459 = bitcast %"class.std::__1::tuple.630"* %88 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %459) #14
  %460 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %88, i64 0, i32 0, i32 0, i32 0
  store i32* %204, i32** %460, align 8
  %461 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %89, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %461) #14
  %462 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %204, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %88, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %89) #14
  %463 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %462, 0
  %464 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %463, i64 2
  %465 = bitcast %"struct.std::__1::__hash_node_base.113"* %464 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %461) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %459) #14
  %466 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %465, i64 0, i32 1, i32 0, i32 0, i32 0
  %467 = bitcast i32* %466 to <4 x i32>*
  store <4 x i32> <i32 0, i32 19, i32 19, i32 19>, <4 x i32>* %467, align 4
  %468 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %465, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 19, i32* %468, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %458) #14
  %469 = bitcast i32* %205 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %469) #14
  store i32 12, i32* %205, align 4
  %470 = bitcast %"class.std::__1::tuple.630"* %82 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %470) #14
  %471 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %82, i64 0, i32 0, i32 0, i32 0
  store i32* %205, i32** %471, align 8
  %472 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %83, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %472) #14
  %473 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %205, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %82, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %83) #14
  %474 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %473, 0
  %475 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %474, i64 2
  %476 = bitcast %"struct.std::__1::__hash_node_base.113"* %475 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %472) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %470) #14
  %477 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %476, i64 0, i32 1, i32 0, i32 0, i32 0
  %478 = bitcast i32* %477 to <4 x i32>*
  store <4 x i32> <i32 0, i32 20, i32 20, i32 20>, <4 x i32>* %478, align 4
  %479 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %476, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 20, i32* %479, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %469) #14
  %480 = bitcast i32* %206 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %480) #14
  store i32 82, i32* %206, align 4
  %481 = bitcast %"class.std::__1::tuple.630"* %76 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %481) #14
  %482 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %76, i64 0, i32 0, i32 0, i32 0
  store i32* %206, i32** %482, align 8
  %483 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %77, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %483) #14
  %484 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %206, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %76, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %77) #14
  %485 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %484, 0
  %486 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %485, i64 2
  %487 = bitcast %"struct.std::__1::__hash_node_base.113"* %486 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %483) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %481) #14
  %488 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %487, i64 0, i32 1, i32 0, i32 0, i32 0
  %489 = bitcast i32* %488 to <4 x i32>*
  store <4 x i32> <i32 0, i32 21, i32 21, i32 21>, <4 x i32>* %489, align 4
  %490 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %487, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 21, i32* %490, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %480) #14
  %491 = bitcast i32* %207 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %491) #14
  store i32 5, i32* %207, align 4
  %492 = bitcast %"class.std::__1::tuple.630"* %70 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %492) #14
  %493 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %70, i64 0, i32 0, i32 0, i32 0
  store i32* %207, i32** %493, align 8
  %494 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %71, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %494) #14
  %495 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %207, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %70, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %71) #14
  %496 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %495, 0
  %497 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %496, i64 2
  %498 = bitcast %"struct.std::__1::__hash_node_base.113"* %497 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %494) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %492) #14
  %499 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %498, i64 0, i32 1, i32 0, i32 0, i32 0
  %500 = bitcast i32* %499 to <4 x i32>*
  store <4 x i32> <i32 0, i32 22, i32 22, i32 22>, <4 x i32>* %500, align 4
  %501 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %498, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 22, i32* %501, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %491) #14
  %502 = bitcast i32* %208 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %502) #14
  store i32 1, i32* %208, align 4
  %503 = bitcast %"class.std::__1::tuple.630"* %64 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %503) #14
  %504 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %64, i64 0, i32 0, i32 0, i32 0
  store i32* %208, i32** %504, align 8
  %505 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %65, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %505) #14
  %506 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %208, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %64, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %65) #14
  %507 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %506, 0
  %508 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %507, i64 2
  %509 = bitcast %"struct.std::__1::__hash_node_base.113"* %508 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %505) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %503) #14
  %510 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %509, i64 0, i32 1, i32 0, i32 0, i32 0
  %511 = bitcast i32* %510 to <4 x i32>*
  store <4 x i32> <i32 0, i32 23, i32 23, i32 23>, <4 x i32>* %511, align 4
  %512 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %509, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 23, i32* %512, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %502) #14
  %513 = bitcast i32* %209 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %513) #14
  store i32 7, i32* %209, align 4
  %514 = bitcast %"class.std::__1::tuple.630"* %58 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %514) #14
  %515 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %58, i64 0, i32 0, i32 0, i32 0
  store i32* %209, i32** %515, align 8
  %516 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %59, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %516) #14
  %517 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %209, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %58, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %59) #14
  %518 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %517, 0
  %519 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %518, i64 2
  %520 = bitcast %"struct.std::__1::__hash_node_base.113"* %519 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %516) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %514) #14
  %521 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %520, i64 0, i32 1, i32 0, i32 0, i32 0
  %522 = bitcast i32* %521 to <4 x i32>*
  store <4 x i32> <i32 0, i32 24, i32 24, i32 24>, <4 x i32>* %522, align 4
  %523 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %520, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 24, i32* %523, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %513) #14
  %524 = bitcast i32* %210 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %524) #14
  store i32 67, i32* %210, align 4
  %525 = bitcast %"class.std::__1::tuple.630"* %52 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %525) #14
  %526 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %52, i64 0, i32 0, i32 0, i32 0
  store i32* %210, i32** %526, align 8
  %527 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %53, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %527) #14
  %528 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %210, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %52, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %53) #14
  %529 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %528, 0
  %530 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %529, i64 2
  %531 = bitcast %"struct.std::__1::__hash_node_base.113"* %530 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %527) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %525) #14
  %532 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %531, i64 0, i32 1, i32 0, i32 0, i32 0
  %533 = bitcast i32* %532 to <4 x i32>*
  store <4 x i32> <i32 0, i32 26, i32 26, i32 26>, <4 x i32>* %533, align 4
  %534 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %531, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 26, i32* %534, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %524) #14
  %535 = bitcast i32* %211 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %535) #14
  store i32 25, i32* %211, align 4
  %536 = bitcast %"class.std::__1::tuple.630"* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %536) #14
  %537 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %46, i64 0, i32 0, i32 0, i32 0
  store i32* %211, i32** %537, align 8
  %538 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %47, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %538) #14
  %539 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %211, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %46, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %47) #14
  %540 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %539, 0
  %541 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %540, i64 2
  %542 = bitcast %"struct.std::__1::__hash_node_base.113"* %541 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %538) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %536) #14
  %543 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %542, i64 0, i32 1, i32 0, i32 0, i32 0
  %544 = bitcast i32* %543 to <4 x i32>*
  store <4 x i32> <i32 0, i32 27, i32 27, i32 27>, <4 x i32>* %544, align 4
  %545 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %542, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 27, i32* %545, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %535) #14
  %546 = bitcast i32* %212 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %546) #14
  store i32 48, i32* %212, align 4
  %547 = bitcast %"class.std::__1::tuple.630"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %547) #14
  %548 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %40, i64 0, i32 0, i32 0, i32 0
  store i32* %212, i32** %548, align 8
  %549 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %41, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %549) #14
  %550 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %212, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %40, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %41) #14
  %551 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %550, 0
  %552 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %551, i64 2
  %553 = bitcast %"struct.std::__1::__hash_node_base.113"* %552 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %549) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %547) #14
  %554 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %553, i64 0, i32 1, i32 0, i32 0, i32 0
  %555 = bitcast i32* %554 to <4 x i32>*
  store <4 x i32> <i32 0, i32 28, i32 28, i32 28>, <4 x i32>* %555, align 4
  %556 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %553, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 28, i32* %556, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %546) #14
  %557 = bitcast i32* %213 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %557) #14
  store i32 24, i32* %213, align 4
  %558 = bitcast %"class.std::__1::tuple.630"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %558) #14
  %559 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %34, i64 0, i32 0, i32 0, i32 0
  store i32* %213, i32** %559, align 8
  %560 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %35, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %560) #14
  %561 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %213, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %34, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %35) #14
  %562 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %561, 0
  %563 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %562, i64 2
  %564 = bitcast %"struct.std::__1::__hash_node_base.113"* %563 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %560) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %558) #14
  %565 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %564, i64 0, i32 1, i32 0, i32 0, i32 0
  %566 = bitcast i32* %565 to <4 x i32>*
  store <4 x i32> <i32 0, i32 29, i32 29, i32 29>, <4 x i32>* %566, align 4
  %567 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %564, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 29, i32* %567, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %557) #14
  %568 = bitcast i32* %214 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %568) #14
  store i32 47, i32* %214, align 4
  %569 = bitcast %"class.std::__1::tuple.630"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %569) #14
  %570 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %28, i64 0, i32 0, i32 0, i32 0
  store i32* %214, i32** %570, align 8
  %571 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %29, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %571) #14
  %572 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %214, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %28, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %29) #14
  %573 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %572, 0
  %574 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %573, i64 2
  %575 = bitcast %"struct.std::__1::__hash_node_base.113"* %574 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %571) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %569) #14
  %576 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %575, i64 0, i32 1, i32 0, i32 0, i32 0
  %577 = bitcast i32* %576 to <4 x i32>*
  store <4 x i32> <i32 0, i32 30, i32 30, i32 30>, <4 x i32>* %577, align 4
  %578 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %575, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 30, i32* %578, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %568) #14
  %579 = bitcast i32* %215 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %579) #14
  store i32 79, i32* %215, align 4
  %580 = bitcast %"class.std::__1::tuple.630"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %580) #14
  %581 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %22, i64 0, i32 0, i32 0, i32 0
  store i32* %215, i32** %581, align 8
  %582 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %23, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %582) #14
  %583 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %215, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %22, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %23) #14
  %584 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %583, 0
  %585 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %584, i64 2
  %586 = bitcast %"struct.std::__1::__hash_node_base.113"* %585 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %582) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %580) #14
  %587 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %586, i64 0, i32 1, i32 0, i32 0, i32 0
  %588 = bitcast i32* %587 to <4 x i32>*
  store <4 x i32> <i32 0, i32 31, i32 31, i32 31>, <4 x i32>* %588, align 4
  %589 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %586, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 31, i32* %589, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %579) #14
  %590 = bitcast i32* %216 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %590) #14
  store i32 40, i32* %216, align 4
  %591 = bitcast %"class.std::__1::tuple.630"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %591) #14
  %592 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %16, i64 0, i32 0, i32 0, i32 0
  store i32* %216, i32** %592, align 8
  %593 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %17, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %593) #14
  %594 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %216, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %16, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %17) #14
  %595 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %594, 0
  %596 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %595, i64 2
  %597 = bitcast %"struct.std::__1::__hash_node_base.113"* %596 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %593) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %591) #14
  %598 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %597, i64 0, i32 1, i32 0, i32 0, i32 0
  %599 = bitcast i32* %598 to <4 x i32>*
  store <4 x i32> <i32 0, i32 34, i32 34, i32 34>, <4 x i32>* %599, align 4
  %600 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %597, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 34, i32* %600, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %590) #14
  %601 = bitcast i32* %217 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %601) #14
  store i32 60, i32* %217, align 4
  %602 = bitcast %"class.std::__1::tuple.630"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %602) #14
  %603 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %10, i64 0, i32 0, i32 0, i32 0
  store i32* %217, i32** %603, align 8
  %604 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %604) #14
  %605 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %217, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %10, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %11) #14
  %606 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %605, 0
  %607 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %606, i64 2
  %608 = bitcast %"struct.std::__1::__hash_node_base.113"* %607 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %604) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %602) #14
  %609 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %608, i64 0, i32 1, i32 0, i32 0, i32 0
  %610 = bitcast i32* %609 to <4 x i32>*
  store <4 x i32> <i32 1, i32 147, i32 147, i32 147>, <4 x i32>* %610, align 4
  %611 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %608, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 147, i32* %611, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %601) #14
  %612 = bitcast i32* %218 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %612) #14
  store i32 84, i32* %218, align 4
  %613 = bitcast %"class.std::__1::tuple.630"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %613) #14
  %614 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %4, i64 0, i32 0, i32 0, i32 0
  store i32* %218, i32** %614, align 8
  %615 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %615) #14
  %616 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %218, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %5) #14
  %617 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %616, 0
  %618 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %617, i64 2
  %619 = bitcast %"struct.std::__1::__hash_node_base.113"* %618 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %615) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %613) #14
  %620 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %619, i64 0, i32 1, i32 0, i32 0, i32 0
  %621 = bitcast i32* %620 to <4 x i32>*
  store <4 x i32> <i32 1, i32 84, i32 84, i32 84>, <4 x i32>* %621, align 4
  %622 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %619, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 84, i32* %622, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %612) #14
  %623 = bitcast i32* %219 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %623) #14
  store i32 41, i32* %219, align 4
  %624 = bitcast %"class.std::__1::tuple.630"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %624) #14
  %625 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %2, i64 0, i32 0, i32 0, i32 0
  store i32* %219, i32** %625, align 8
  %626 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %626) #14
  %627 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %219, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %2, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %3) #14
  %628 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %627, 0
  %629 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %628, i64 2
  %630 = bitcast %"struct.std::__1::__hash_node_base.113"* %629 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %626) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %624) #14
  %631 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %630, i64 0, i32 1, i32 0, i32 0, i32 0
  %632 = bitcast i32* %631 to <4 x i32>*
  store <4 x i32> <i32 1, i32 157, i32 157, i32 157>, <4 x i32>* %632, align 4
  %633 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %630, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 157, i32* %633, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %623) #14
  %634 = bitcast i32* %220 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %634) #14
  store i32 42, i32* %220, align 4
  %635 = bitcast %"class.std::__1::tuple.630"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %635) #14
  %636 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %6, i64 0, i32 0, i32 0, i32 0
  store i32* %220, i32** %636, align 8
  %637 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %637) #14
  %638 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %220, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %7) #14
  %639 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %638, 0
  %640 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %639, i64 2
  %641 = bitcast %"struct.std::__1::__hash_node_base.113"* %640 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %637) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %635) #14
  %642 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %641, i64 0, i32 1, i32 0, i32 0, i32 0
  %643 = bitcast i32* %642 to <4 x i32>*
  store <4 x i32> <i32 1, i32 156, i32 156, i32 156>, <4 x i32>* %643, align 4
  %644 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %641, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 156, i32* %644, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %634) #14
  %645 = bitcast i32* %221 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %645) #14
  store i32 39, i32* %221, align 4
  %646 = bitcast %"class.std::__1::tuple.630"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %646) #14
  %647 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %8, i64 0, i32 0, i32 0, i32 0
  store i32* %221, i32** %647, align 8
  %648 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %648) #14
  %649 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %221, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %8, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %9) #14
  %650 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %649, 0
  %651 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %650, i64 2
  %652 = bitcast %"struct.std::__1::__hash_node_base.113"* %651 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %648) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %646) #14
  %653 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %652, i64 0, i32 1, i32 0, i32 0, i32 0
  %654 = bitcast i32* %653 to <4 x i32>*
  store <4 x i32> <i32 0, i32 32, i32 32, i32 32>, <4 x i32>* %654, align 4
  %655 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %652, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 32, i32* %655, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %645) #14
  %656 = bitcast i32* %222 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %656) #14
  store i32 16, i32* %222, align 4
  %657 = bitcast %"class.std::__1::tuple.630"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %657) #14
  %658 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %12, i64 0, i32 0, i32 0, i32 0
  store i32* %222, i32** %658, align 8
  %659 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %13, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %659) #14
  %660 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %222, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %12, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %13) #14
  %661 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %660, 0
  %662 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %661, i64 2
  %663 = bitcast %"struct.std::__1::__hash_node_base.113"* %662 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %659) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %657) #14
  %664 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %663, i64 0, i32 1, i32 0, i32 0, i32 0
  %665 = bitcast i32* %664 to <4 x i32>*
  store <4 x i32> <i32 0, i32 33, i32 33, i32 33>, <4 x i32>* %665, align 4
  %666 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %663, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 33, i32* %666, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %656) #14
  %667 = bitcast i32* %223 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %667) #14
  store i32 50, i32* %223, align 4
  %668 = bitcast %"class.std::__1::tuple.630"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %668) #14
  %669 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %14, i64 0, i32 0, i32 0, i32 0
  store i32* %223, i32** %669, align 8
  %670 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %15, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %670) #14
  %671 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %223, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %14, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %15) #14
  %672 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %671, 0
  %673 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %672, i64 2
  %674 = bitcast %"struct.std::__1::__hash_node_base.113"* %673 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %670) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %668) #14
  %675 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %674, i64 0, i32 1, i32 0, i32 0, i32 0
  %676 = bitcast i32* %675 to <4 x i32>*
  store <4 x i32> <i32 2, i32 2, i32 2, i32 2>, <4 x i32>* %676, align 4
  %677 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %674, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 2, i32* %677, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %667) #14
  %678 = bitcast i32* %224 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %678) #14
  store i32 51, i32* %224, align 4
  %679 = bitcast %"class.std::__1::tuple.630"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %679) #14
  %680 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %18, i64 0, i32 0, i32 0, i32 0
  store i32* %224, i32** %680, align 8
  %681 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %19, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %681) #14
  %682 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %224, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %18, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %19) #14
  %683 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %682, 0
  %684 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %683, i64 2
  %685 = bitcast %"struct.std::__1::__hash_node_base.113"* %684 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %681) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %679) #14
  %686 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %685, i64 0, i32 1, i32 0, i32 0, i32 0
  %687 = bitcast i32* %686 to <4 x i32>*
  store <4 x i32> <i32 0, i32 34, i32 34, i32 34>, <4 x i32>* %687, align 4
  %688 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %685, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 34, i32* %688, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %678) #14
  %689 = bitcast i32* %225 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %689) #14
  store i32 56, i32* %225, align 4
  %690 = bitcast %"class.std::__1::tuple.630"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %690) #14
  %691 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %20, i64 0, i32 0, i32 0, i32 0
  store i32* %225, i32** %691, align 8
  %692 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %21, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %692) #14
  %693 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %225, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %20, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %21) #14
  %694 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %693, 0
  %695 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %694, i64 2
  %696 = bitcast %"struct.std::__1::__hash_node_base.113"* %695 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %692) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %690) #14
  %697 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %696, i64 0, i32 1, i32 0, i32 0, i32 0
  %698 = bitcast i32* %697 to <4 x i32>*
  store <4 x i32> <i32 2, i32 6, i32 6, i32 6>, <4 x i32>* %698, align 4
  %699 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %696, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 6, i32* %699, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %689) #14
  %700 = bitcast i32* %226 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %700) #14
  store i32 55, i32* %226, align 4
  %701 = bitcast %"class.std::__1::tuple.630"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %701) #14
  %702 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %24, i64 0, i32 0, i32 0, i32 0
  store i32* %226, i32** %702, align 8
  %703 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %25, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %703) #14
  %704 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %226, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %24, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %25) #14
  %705 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %704, 0
  %706 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %705, i64 2
  %707 = bitcast %"struct.std::__1::__hash_node_base.113"* %706 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %703) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %701) #14
  %708 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %707, i64 0, i32 1, i32 0, i32 0, i32 0
  %709 = bitcast i32* %708 to <4 x i32>*
  store <4 x i32> <i32 0, i32 35, i32 35, i32 35>, <4 x i32>* %709, align 4
  %710 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %707, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 35, i32* %710, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %700) #14
  %711 = bitcast i32* %227 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %711) #14
  store i32 53, i32* %227, align 4
  %712 = bitcast %"class.std::__1::tuple.630"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %712) #14
  %713 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %26, i64 0, i32 0, i32 0, i32 0
  store i32* %227, i32** %713, align 8
  %714 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %27, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %714) #14
  %715 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %227, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %26, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %27) #14
  %716 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %715, 0
  %717 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %716, i64 2
  %718 = bitcast %"struct.std::__1::__hash_node_base.113"* %717 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %714) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %712) #14
  %719 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %718, i64 0, i32 1, i32 0, i32 0, i32 0
  %720 = bitcast i32* %719 to <4 x i32>*
  store <4 x i32> <i32 2, i32 4, i32 4, i32 4>, <4 x i32>* %720, align 4
  %721 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %718, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 4, i32* %721, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %711) #14
  %722 = bitcast i32* %228 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %722) #14
  store i32 52, i32* %228, align 4
  %723 = bitcast %"class.std::__1::tuple.630"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %723) #14
  %724 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %30, i64 0, i32 0, i32 0, i32 0
  store i32* %228, i32** %724, align 8
  %725 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %31, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %725) #14
  %726 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %228, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %30, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %31) #14
  %727 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %726, 0
  %728 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %727, i64 2
  %729 = bitcast %"struct.std::__1::__hash_node_base.113"* %728 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %725) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %723) #14
  %730 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %729, i64 0, i32 1, i32 0, i32 0, i32 0
  %731 = bitcast i32* %730 to <4 x i32>*
  store <4 x i32> <i32 2, i32 3, i32 3, i32 3>, <4 x i32>* %731, align 4
  %732 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %729, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 3, i32* %732, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %722) #14
  %733 = bitcast i32* %229 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %733) #14
  store i32 11, i32* %229, align 4
  %734 = bitcast %"class.std::__1::tuple.630"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %734) #14
  %735 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %32, i64 0, i32 0, i32 0, i32 0
  store i32* %229, i32** %735, align 8
  %736 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %33, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %736) #14
  %737 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %229, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %32, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %33) #14
  %738 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %737, 0
  %739 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %738, i64 2
  %740 = bitcast %"struct.std::__1::__hash_node_base.113"* %739 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %736) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %734) #14
  %741 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %740, i64 0, i32 1, i32 0, i32 0, i32 0
  %742 = bitcast i32* %741 to <4 x i32>*
  store <4 x i32> <i32 2, i32 1, i32 1, i32 1>, <4 x i32>* %742, align 4
  %743 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %740, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 1, i32* %743, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %733) #14
  %744 = bitcast i32* %230 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %744) #14
  store i32 74, i32* %230, align 4
  %745 = bitcast %"class.std::__1::tuple.630"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %745) #14
  %746 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %36, i64 0, i32 0, i32 0, i32 0
  store i32* %230, i32** %746, align 8
  %747 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %37, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %747) #14
  %748 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %230, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %36, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %37) #14
  %749 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %748, 0
  %750 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %749, i64 2
  %751 = bitcast %"struct.std::__1::__hash_node_base.113"* %750 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %747) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %745) #14
  %752 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %751, i64 0, i32 1, i32 0, i32 0, i32 0
  %753 = bitcast i32* %752 to <4 x i32>*
  store <4 x i32> <i32 2, i32 8, i32 8, i32 8>, <4 x i32>* %753, align 4
  %754 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %751, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 8, i32* %754, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %744) #14
  %755 = bitcast i32* %231 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %755) #14
  store i32 20, i32* %231, align 4
  %756 = bitcast %"class.std::__1::tuple.630"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %756) #14
  %757 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %38, i64 0, i32 0, i32 0, i32 0
  store i32* %231, i32** %757, align 8
  %758 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %39, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %758) #14
  %759 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %231, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %38, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %39) #14
  %760 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %759, 0
  %761 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %760, i64 2
  %762 = bitcast %"struct.std::__1::__hash_node_base.113"* %761 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %758) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %756) #14
  %763 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %762, i64 0, i32 1, i32 0, i32 0, i32 0
  %764 = bitcast i32* %763 to <4 x i32>*
  store <4 x i32> <i32 1, i32 148, i32 1, i32 1>, <4 x i32>* %764, align 4
  %765 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %762, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 1, i32* %765, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %755) #14
  %766 = bitcast i32* %232 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %766) #14
  store i32 54, i32* %232, align 4
  %767 = bitcast %"class.std::__1::tuple.630"* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %767) #14
  %768 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %42, i64 0, i32 0, i32 0, i32 0
  store i32* %232, i32** %768, align 8
  %769 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %43, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %769) #14
  %770 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %232, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %42, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %43) #14
  %771 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %770, 0
  %772 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %771, i64 2
  %773 = bitcast %"struct.std::__1::__hash_node_base.113"* %772 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %769) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %767) #14
  %774 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %773, i64 0, i32 1, i32 0, i32 0, i32 0
  %775 = bitcast i32* %774 to <4 x i32>*
  store <4 x i32> <i32 2, i32 5, i32 5, i32 5>, <4 x i32>* %775, align 4
  %776 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %773, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 5, i32* %776, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %766) #14
  %777 = bitcast i32* %233 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %777) #14
  store i32 80, i32* %233, align 4
  %778 = bitcast %"class.std::__1::tuple.630"* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %778) #14
  %779 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %44, i64 0, i32 0, i32 0, i32 0
  store i32* %233, i32** %779, align 8
  %780 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %45, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %780) #14
  %781 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %233, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %44, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %45) #14
  %782 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %781, 0
  %783 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %782, i64 2
  %784 = bitcast %"struct.std::__1::__hash_node_base.113"* %783 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %780) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %778) #14
  %785 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %784, i64 0, i32 1, i32 0, i32 0, i32 0
  %786 = bitcast i32* %785 to <4 x i32>*
  store <4 x i32> <i32 2, i32 11, i32 11, i32 11>, <4 x i32>* %786, align 4
  %787 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %784, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 11, i32* %787, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %777) #14
  %788 = bitcast i32* %234 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %788) #14
  store i32 78, i32* %234, align 4
  %789 = bitcast %"class.std::__1::tuple.630"* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %789) #14
  %790 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %48, i64 0, i32 0, i32 0, i32 0
  store i32* %234, i32** %790, align 8
  %791 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %49, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %791) #14
  %792 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %234, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %48, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %49) #14
  %793 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %792, 0
  %794 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %793, i64 2
  %795 = bitcast %"struct.std::__1::__hash_node_base.113"* %794 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %791) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %789) #14
  %796 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %795, i64 0, i32 1, i32 0, i32 0, i32 0
  %797 = bitcast i32* %796 to <4 x i32>*
  store <4 x i32> <i32 2, i32 10, i32 10, i32 10>, <4 x i32>* %797, align 4
  %798 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %795, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 10, i32* %798, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %788) #14
  %799 = bitcast i32* %235 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %799) #14
  store i32 32, i32* %235, align 4
  %800 = bitcast %"class.std::__1::tuple.630"* %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %800) #14
  %801 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %50, i64 0, i32 0, i32 0, i32 0
  store i32* %235, i32** %801, align 8
  %802 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %51, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %802) #14
  %803 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %235, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %50, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %51) #14
  %804 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %803, 0
  %805 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %804, i64 2
  %806 = bitcast %"struct.std::__1::__hash_node_base.113"* %805 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %802) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %800) #14
  %807 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %806, i64 0, i32 1, i32 0, i32 0, i32 0
  %808 = bitcast i32* %807 to <4 x i32>*
  store <4 x i32> <i32 0, i32 50, i32 50, i32 50>, <4 x i32>* %808, align 4
  %809 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %806, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 50, i32* %809, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %799) #14
  %810 = bitcast i32* %236 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %810) #14
  store i32 34, i32* %236, align 4
  %811 = bitcast %"class.std::__1::tuple.630"* %54 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %811) #14
  %812 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %54, i64 0, i32 0, i32 0, i32 0
  store i32* %236, i32** %812, align 8
  %813 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %55, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %813) #14
  %814 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %236, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %54, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %55) #14
  %815 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %814, 0
  %816 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %815, i64 2
  %817 = bitcast %"struct.std::__1::__hash_node_base.113"* %816 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %813) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %811) #14
  %818 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %817, i64 0, i32 1, i32 0, i32 0, i32 0
  %819 = bitcast i32* %818 to <4 x i32>*
  store <4 x i32> <i32 0, i32 51, i32 51, i32 51>, <4 x i32>* %819, align 4
  %820 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %817, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 51, i32* %820, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %810) #14
  %821 = bitcast i32* %237 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %821) #14
  store i32 43, i32* %237, align 4
  %822 = bitcast %"class.std::__1::tuple.630"* %56 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %822) #14
  %823 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %56, i64 0, i32 0, i32 0, i32 0
  store i32* %237, i32** %823, align 8
  %824 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %57, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %824) #14
  %825 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %237, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %56, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %57) #14
  %826 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %825, 0
  %827 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %826, i64 2
  %828 = bitcast %"struct.std::__1::__hash_node_base.113"* %827 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %824) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %822) #14
  %829 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %828, i64 0, i32 1, i32 0, i32 0, i32 0
  %830 = bitcast i32* %829 to <4 x i32>*
  store <4 x i32> <i32 0, i32 53, i32 53, i32 53>, <4 x i32>* %830, align 4
  %831 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %828, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 53, i32* %831, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %821) #14
  %832 = bitcast i32* %238 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %832) #14
  store i32 64, i32* %238, align 4
  %833 = bitcast %"class.std::__1::tuple.630"* %60 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %833) #14
  %834 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %60, i64 0, i32 0, i32 0, i32 0
  store i32* %238, i32** %834, align 8
  %835 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %61, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %835) #14
  %836 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %238, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %60, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %61) #14
  %837 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %836, 0
  %838 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %837, i64 2
  %839 = bitcast %"struct.std::__1::__hash_node_base.113"* %838 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %835) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %833) #14
  %840 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %839, i64 0, i32 1, i32 0, i32 0, i32 0
  %841 = bitcast i32* %840 to <4 x i32>*
  store <4 x i32> <i32 0, i32 54, i32 54, i32 54>, <4 x i32>* %841, align 4
  %842 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %839, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 54, i32* %842, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %832) #14
  %843 = bitcast i32* %239 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %843) #14
  store i32 90, i32* %239, align 4
  %844 = bitcast %"class.std::__1::tuple.630"* %62 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %844) #14
  %845 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %62, i64 0, i32 0, i32 0, i32 0
  store i32* %239, i32** %845, align 8
  %846 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %63, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %846) #14
  %847 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %239, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %62, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %63) #14
  %848 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %847, 0
  %849 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %848, i64 2
  %850 = bitcast %"struct.std::__1::__hash_node_base.113"* %849 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %846) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %844) #14
  %851 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %850, i64 0, i32 1, i32 0, i32 0, i32 0
  %852 = bitcast i32* %851 to <4 x i32>*
  store <4 x i32> <i32 0, i32 63, i32 63, i32 63>, <4 x i32>* %852, align 4
  %853 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %850, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 63, i32* %853, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %843) #14
  %854 = bitcast i32* %240 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %854) #14
  store i32 66, i32* %240, align 4
  %855 = bitcast %"class.std::__1::tuple.630"* %66 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %855) #14
  %856 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %66, i64 0, i32 0, i32 0, i32 0
  store i32* %240, i32** %856, align 8
  %857 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %67, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %857) #14
  %858 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %240, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %66, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %67) #14
  %859 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %858, 0
  %860 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %859, i64 2
  %861 = bitcast %"struct.std::__1::__hash_node_base.113"* %860 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %857) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %855) #14
  %862 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %861, i64 0, i32 1, i32 0, i32 0, i32 0
  %863 = bitcast i32* %862 to <4 x i32>*
  store <4 x i32> <i32 0, i32 55, i32 55, i32 55>, <4 x i32>* %863, align 4
  %864 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %861, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 55, i32* %864, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %854) #14
  %865 = bitcast i32* %241 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %865) #14
  store i32 92, i32* %241, align 4
  %866 = bitcast %"class.std::__1::tuple.630"* %68 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %866) #14
  %867 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %68, i64 0, i32 0, i32 0, i32 0
  store i32* %241, i32** %867, align 8
  %868 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %69, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %868) #14
  %869 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %241, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %68, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %69) #14
  %870 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %869, 0
  %871 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %870, i64 2
  %872 = bitcast %"struct.std::__1::__hash_node_base.113"* %871 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %868) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %866) #14
  %873 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %872, i64 0, i32 1, i32 0, i32 0, i32 0
  %874 = bitcast i32* %873 to <4 x i32>*
  store <4 x i32> <i32 0, i32 64, i32 64, i32 64>, <4 x i32>* %874, align 4
  %875 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %872, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 64, i32* %875, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %865) #14
  %876 = bitcast i32* %242 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %876) #14
  store i32 63, i32* %242, align 4
  %877 = bitcast %"class.std::__1::tuple.630"* %72 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %877) #14
  %878 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %72, i64 0, i32 0, i32 0, i32 0
  store i32* %242, i32** %878, align 8
  %879 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %73, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %879) #14
  %880 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %242, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %72, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %73) #14
  %881 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %880, 0
  %882 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %881, i64 2
  %883 = bitcast %"struct.std::__1::__hash_node_base.113"* %882 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %879) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %877) #14
  %884 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %883, i64 0, i32 1, i32 0, i32 0, i32 0
  %885 = bitcast i32* %884 to <4 x i32>*
  store <4 x i32> <i32 0, i32 56, i32 56, i32 56>, <4 x i32>* %885, align 4
  %886 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %883, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 56, i32* %886, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %876) #14
  %887 = bitcast i32* %243 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %887) #14
  store i32 89, i32* %243, align 4
  %888 = bitcast %"class.std::__1::tuple.630"* %74 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %888) #14
  %889 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %74, i64 0, i32 0, i32 0, i32 0
  store i32* %243, i32** %889, align 8
  %890 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %75, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %890) #14
  %891 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %243, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %74, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %75) #14
  %892 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %891, 0
  %893 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %892, i64 2
  %894 = bitcast %"struct.std::__1::__hash_node_base.113"* %893 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %890) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %888) #14
  %895 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %894, i64 0, i32 1, i32 0, i32 0, i32 0
  %896 = bitcast i32* %895 to <4 x i32>*
  store <4 x i32> <i32 0, i32 60, i32 60, i32 60>, <4 x i32>* %896, align 4
  %897 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %894, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 60, i32* %897, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %887) #14
  %898 = bitcast i32* %244 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %898) #14
  store i32 65, i32* %244, align 4
  %899 = bitcast %"class.std::__1::tuple.630"* %78 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %899) #14
  %900 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %78, i64 0, i32 0, i32 0, i32 0
  store i32* %244, i32** %900, align 8
  %901 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %79, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %901) #14
  %902 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %244, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %78, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %79) #14
  %903 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %902, 0
  %904 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %903, i64 2
  %905 = bitcast %"struct.std::__1::__hash_node_base.113"* %904 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %901) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %899) #14
  %906 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %905, i64 0, i32 1, i32 0, i32 0, i32 0
  %907 = bitcast i32* %906 to <4 x i32>*
  store <4 x i32> <i32 0, i32 57, i32 57, i32 57>, <4 x i32>* %907, align 4
  %908 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %905, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 57, i32* %908, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %898) #14
  %909 = bitcast i32* %245 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %909) #14
  store i32 91, i32* %245, align 4
  %910 = bitcast %"class.std::__1::tuple.630"* %80 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %910) #14
  %911 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %80, i64 0, i32 0, i32 0, i32 0
  store i32* %245, i32** %911, align 8
  %912 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %81, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %912) #14
  %913 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %245, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %80, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %81) #14
  %914 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %913, 0
  %915 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %914, i64 2
  %916 = bitcast %"struct.std::__1::__hash_node_base.113"* %915 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %912) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %910) #14
  %917 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %916, i64 0, i32 1, i32 0, i32 0, i32 0
  %918 = bitcast i32* %917 to <4 x i32>*
  store <4 x i32> <i32 0, i32 61, i32 61, i32 61>, <4 x i32>* %918, align 4
  %919 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %916, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 61, i32* %919, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %909) #14
  %920 = bitcast i32* %246 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %920) #14
  store i32 62, i32* %246, align 4
  %921 = bitcast %"class.std::__1::tuple.630"* %84 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %921) #14
  %922 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %84, i64 0, i32 0, i32 0, i32 0
  store i32* %246, i32** %922, align 8
  %923 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %85, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %923) #14
  %924 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %246, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %84, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %85) #14
  %925 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %924, 0
  %926 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %925, i64 2
  %927 = bitcast %"struct.std::__1::__hash_node_base.113"* %926 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %923) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %921) #14
  %928 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %927, i64 0, i32 1, i32 0, i32 0, i32 0
  %929 = bitcast i32* %928 to <4 x i32>*
  store <4 x i32> <i32 0, i32 58, i32 58, i32 58>, <4 x i32>* %929, align 4
  %930 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %927, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 58, i32* %930, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %920) #14
  %931 = bitcast i32* %247 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %931) #14
  store i32 88, i32* %247, align 4
  %932 = bitcast %"class.std::__1::tuple.630"* %86 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %932) #14
  %933 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %86, i64 0, i32 0, i32 0, i32 0
  store i32* %247, i32** %933, align 8
  %934 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %87, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %934) #14
  %935 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %247, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %86, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %87) #14
  %936 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %935, 0
  %937 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %936, i64 2
  %938 = bitcast %"struct.std::__1::__hash_node_base.113"* %937 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %934) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %932) #14
  %939 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %938, i64 0, i32 1, i32 0, i32 0, i32 0
  %940 = bitcast i32* %939 to <4 x i32>*
  store <4 x i32> <i32 0, i32 62, i32 62, i32 62>, <4 x i32>* %940, align 4
  %941 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %938, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 62, i32* %941, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %931) #14
  %942 = bitcast i32* %248 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %942) #14
  store i32 61, i32* %248, align 4
  %943 = bitcast %"class.std::__1::tuple.630"* %90 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %943) #14
  %944 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %90, i64 0, i32 0, i32 0, i32 0
  store i32* %248, i32** %944, align 8
  %945 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %91, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %945) #14
  %946 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %248, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %90, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %91) #14
  %947 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %946, 0
  %948 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %947, i64 2
  %949 = bitcast %"struct.std::__1::__hash_node_base.113"* %948 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %945) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %943) #14
  %950 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %949, i64 0, i32 1, i32 0, i32 0, i32 0
  %951 = bitcast i32* %950 to <4 x i32>*
  store <4 x i32> <i32 0, i32 59, i32 59, i32 59>, <4 x i32>* %951, align 4
  %952 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %949, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 59, i32* %952, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %942) #14
  %953 = bitcast i32* %249 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %953) #14
  store i32 87, i32* %249, align 4
  %954 = bitcast %"class.std::__1::tuple.630"* %92 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %954) #14
  %955 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %92, i64 0, i32 0, i32 0, i32 0
  store i32* %249, i32** %955, align 8
  %956 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %93, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %956) #14
  %957 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %249, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %92, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %93) #14
  %958 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %957, 0
  %959 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %958, i64 2
  %960 = bitcast %"struct.std::__1::__hash_node_base.113"* %959 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %956) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %954) #14
  %961 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %960, i64 0, i32 1, i32 0, i32 0, i32 0
  %962 = bitcast i32* %961 to <4 x i32>*
  store <4 x i32> <i32 0, i32 65, i32 65, i32 65>, <4 x i32>* %962, align 4
  %963 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %960, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 65, i32* %963, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %953) #14
  %964 = bitcast i32* %250 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %964) #14
  store i32 44, i32* %250, align 4
  %965 = bitcast %"class.std::__1::tuple.630"* %96 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %965) #14
  %966 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %96, i64 0, i32 0, i32 0, i32 0
  store i32* %250, i32** %966, align 8
  %967 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %97, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %967) #14
  %968 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %250, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %96, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %97) #14
  %969 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %968, 0
  %970 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %969, i64 2
  %971 = bitcast %"struct.std::__1::__hash_node_base.113"* %970 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %967) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %965) #14
  %972 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %971, i64 0, i32 1, i32 0, i32 0, i32 0
  %973 = bitcast i32* %972 to <4 x i32>*
  store <4 x i32> <i32 0, i32 66, i32 66, i32 66>, <4 x i32>* %973, align 4
  %974 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %971, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 66, i32* %974, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %964) #14
  %975 = bitcast i32* %251 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %975) #14
  store i32 19, i32* %251, align 4
  %976 = bitcast %"class.std::__1::tuple.630"* %98 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %976) #14
  %977 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %98, i64 0, i32 0, i32 0, i32 0
  store i32* %251, i32** %977, align 8
  %978 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %99, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %978) #14
  %979 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %251, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %98, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %99) #14
  %980 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %979, 0
  %981 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %980, i64 2
  %982 = bitcast %"struct.std::__1::__hash_node_base.113"* %981 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %978) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %976) #14
  %983 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %982, i64 0, i32 1, i32 0, i32 0, i32 0
  %984 = bitcast i32* %983 to <4 x i32>*
  store <4 x i32> <i32 0, i32 67, i32 67, i32 67>, <4 x i32>* %984, align 4
  %985 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %982, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 67, i32* %985, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %975) #14
  %986 = bitcast i32* %252 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %986) #14
  store i32 14, i32* %252, align 4
  %987 = bitcast %"class.std::__1::tuple.630"* %102 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %987) #14
  %988 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %102, i64 0, i32 0, i32 0, i32 0
  store i32* %252, i32** %988, align 8
  %989 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %103, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %989) #14
  %990 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %252, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %102, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %103) #14
  %991 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %990, 0
  %992 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %991, i64 2
  %993 = bitcast %"struct.std::__1::__hash_node_base.113"* %992 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %989) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %987) #14
  %994 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %993, i64 0, i32 1, i32 0, i32 0, i32 0
  %995 = bitcast i32* %994 to <4 x i32>*
  store <4 x i32> <i32 0, i32 68, i32 68, i32 68>, <4 x i32>* %995, align 4
  %996 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %993, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 68, i32* %996, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %986) #14
  %997 = bitcast i32* %253 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %997) #14
  store i32 57, i32* %253, align 4
  %998 = bitcast %"class.std::__1::tuple.630"* %104 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %998) #14
  %999 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %104, i64 0, i32 0, i32 0, i32 0
  store i32* %253, i32** %999, align 8
  %1000 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %105, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1000) #14
  %1001 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %253, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %104, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %105) #14
  %1002 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %1001, 0
  %1003 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %1002, i64 2
  %1004 = bitcast %"struct.std::__1::__hash_node_base.113"* %1003 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1000) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %998) #14
  %1005 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1004, i64 0, i32 1, i32 0, i32 0, i32 0
  %1006 = bitcast i32* %1005 to <4 x i32>*
  store <4 x i32> <i32 0, i32 69, i32 69, i32 69>, <4 x i32>* %1006, align 4
  %1007 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1004, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 69, i32* %1007, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %997) #14
  %1008 = bitcast i32* %254 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1008) #14
  store i32 26, i32* %254, align 4
  %1009 = bitcast %"class.std::__1::tuple.630"* %108 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1009) #14
  %1010 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %108, i64 0, i32 0, i32 0, i32 0
  store i32* %254, i32** %1010, align 8
  %1011 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %109, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1011) #14
  %1012 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %254, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %108, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %109) #14
  %1013 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %1012, 0
  %1014 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %1013, i64 2
  %1015 = bitcast %"struct.std::__1::__hash_node_base.113"* %1014 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1011) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1009) #14
  %1016 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1015, i64 0, i32 1, i32 0, i32 0, i32 0
  %1017 = bitcast i32* %1016 to <4 x i32>*
  store <4 x i32> <i32 0, i32 70, i32 70, i32 70>, <4 x i32>* %1017, align 4
  %1018 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1015, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 70, i32* %1018, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1008) #14
  %1019 = bitcast i32* %255 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1019) #14
  store i32 69, i32* %255, align 4
  %1020 = bitcast %"class.std::__1::tuple.630"* %110 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1020) #14
  %1021 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %110, i64 0, i32 0, i32 0, i32 0
  store i32* %255, i32** %1021, align 8
  %1022 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %111, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1022) #14
  %1023 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %255, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %110, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %111) #14
  %1024 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %1023, 0
  %1025 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %1024, i64 2
  %1026 = bitcast %"struct.std::__1::__hash_node_base.113"* %1025 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1022) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1020) #14
  %1027 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1026, i64 0, i32 1, i32 0, i32 0, i32 0
  %1028 = bitcast i32* %1027 to <4 x i32>*
  store <4 x i32> <i32 0, i32 71, i32 71, i32 71>, <4 x i32>* %1028, align 4
  %1029 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1026, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 71, i32* %1029, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1019) #14
  %1030 = bitcast i32* %256 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1030) #14
  store i32 70, i32* %256, align 4
  %1031 = bitcast %"class.std::__1::tuple.630"* %114 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1031) #14
  %1032 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %114, i64 0, i32 0, i32 0, i32 0
  store i32* %256, i32** %1032, align 8
  %1033 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %115, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1033) #14
  %1034 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %256, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %114, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %115) #14
  %1035 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %1034, 0
  %1036 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %1035, i64 2
  %1037 = bitcast %"struct.std::__1::__hash_node_base.113"* %1036 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1033) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1031) #14
  %1038 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1037, i64 0, i32 1, i32 0, i32 0, i32 0
  %1039 = bitcast i32* %1038 to <4 x i32>*
  store <4 x i32> <i32 0, i32 72, i32 72, i32 72>, <4 x i32>* %1039, align 4
  %1040 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1037, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 72, i32* %1040, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1030) #14
  %1041 = bitcast i32* %257 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1041) #14
  store i32 9, i32* %257, align 4
  %1042 = bitcast %"class.std::__1::tuple.630"* %116 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1042) #14
  %1043 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %116, i64 0, i32 0, i32 0, i32 0
  store i32* %257, i32** %1043, align 8
  %1044 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %117, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1044) #14
  %1045 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %257, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %116, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %117) #14
  %1046 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %1045, 0
  %1047 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %1046, i64 2
  %1048 = bitcast %"struct.std::__1::__hash_node_base.113"* %1047 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1044) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1042) #14
  %1049 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1048, i64 0, i32 1, i32 0, i32 0, i32 0
  %1050 = bitcast i32* %1049 to <4 x i32>*
  store <4 x i32> <i32 1, i32 205, i32 205, i32 205>, <4 x i32>* %1050, align 4
  %1051 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1048, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 205, i32* %1051, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1041) #14
  %1052 = bitcast i32* %258 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1052) #14
  store i32 27, i32* %258, align 4
  %1053 = bitcast %"class.std::__1::tuple.630"* %120 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1053) #14
  %1054 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %120, i64 0, i32 0, i32 0, i32 0
  store i32* %258, i32** %1054, align 8
  %1055 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %121, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1055) #14
  %1056 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %258, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %120, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %121) #14
  %1057 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %1056, 0
  %1058 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %1057, i64 2
  %1059 = bitcast %"struct.std::__1::__hash_node_base.113"* %1058 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1055) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1053) #14
  %1060 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1059, i64 0, i32 1, i32 0, i32 0, i32 0
  %1061 = bitcast i32* %1060 to <4 x i32>*
  store <4 x i32> <i32 0, i32 73, i32 73, i32 73>, <4 x i32>* %1061, align 4
  %1062 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1059, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 73, i32* %1062, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1052) #14
  %1063 = bitcast i32* %259 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1063) #14
  store i32 28, i32* %259, align 4
  %1064 = bitcast %"class.std::__1::tuple.630"* %122 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1064) #14
  %1065 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %122, i64 0, i32 0, i32 0, i32 0
  store i32* %259, i32** %1065, align 8
  %1066 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %123, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1066) #14
  %1067 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %259, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %122, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %123) #14
  %1068 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %1067, 0
  %1069 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %1068, i64 2
  %1070 = bitcast %"struct.std::__1::__hash_node_base.113"* %1069 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1066) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1064) #14
  %1071 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1070, i64 0, i32 1, i32 0, i32 0, i32 0
  %1072 = bitcast i32* %1071 to <4 x i32>*
  store <4 x i32> <i32 0, i32 74, i32 74, i32 75>, <4 x i32>* %1072, align 4
  %1073 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1070, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 1, i32* %1073, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1063) #14
  %1074 = bitcast i32* %260 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1074) #14
  store i32 17, i32* %260, align 4
  %1075 = bitcast %"class.std::__1::tuple.630"* %126 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1075) #14
  %1076 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %126, i64 0, i32 0, i32 0, i32 0
  store i32* %260, i32** %1076, align 8
  %1077 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %127, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1077) #14
  %1078 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %260, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %126, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %127) #14
  %1079 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %1078, 0
  %1080 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %1079, i64 2
  %1081 = bitcast %"struct.std::__1::__hash_node_base.113"* %1080 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1077) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1075) #14
  %1082 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1081, i64 0, i32 1, i32 0, i32 0, i32 0
  %1083 = bitcast i32* %1082 to <4 x i32>*
  store <4 x i32> <i32 1, i32 207, i32 1, i32 1>, <4 x i32>* %1083, align 4
  %1084 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1081, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 1, i32* %1084, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1074) #14
  %1085 = bitcast i32* %261 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1085) #14
  store i32 18, i32* %261, align 4
  %1086 = bitcast %"class.std::__1::tuple.630"* %128 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1086) #14
  %1087 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %128, i64 0, i32 0, i32 0, i32 0
  store i32* %261, i32** %1087, align 8
  %1088 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %129, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1088) #14
  %1089 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %261, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %128, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %129) #14
  %1090 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %1089, 0
  %1091 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %1090, i64 2
  %1092 = bitcast %"struct.std::__1::__hash_node_base.113"* %1091 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1088) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1086) #14
  %1093 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1092, i64 0, i32 1, i32 0, i32 0, i32 0
  %1094 = bitcast i32* %1093 to <4 x i32>*
  store <4 x i32> <i32 2, i32 7, i32 7, i32 7>, <4 x i32>* %1094, align 4
  %1095 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1092, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 7, i32* %1095, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1085) #14
  %1096 = bitcast i32* %262 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1096) #14
  store i32 35, i32* %262, align 4
  %1097 = bitcast %"class.std::__1::tuple.630"* %132 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1097) #14
  %1098 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %132, i64 0, i32 0, i32 0, i32 0
  store i32* %262, i32** %1098, align 8
  %1099 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %133, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1099) #14
  %1100 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %262, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %132, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %133) #14
  %1101 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %1100, 0
  %1102 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %1101, i64 2
  %1103 = bitcast %"struct.std::__1::__hash_node_base.113"* %1102 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1099) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1097) #14
  %1104 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1103, i64 0, i32 1, i32 0, i32 0, i32 0
  %1105 = bitcast i32* %1104 to <4 x i32>*
  store <4 x i32> <i32 1, i32 209, i32 1, i32 1>, <4 x i32>* %1105, align 4
  %1106 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1103, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 1, i32* %1106, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1096) #14
  %1107 = bitcast i32* %263 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1107) #14
  store i32 49, i32* %263, align 4
  %1108 = bitcast %"class.std::__1::tuple.630"* %134 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1108) #14
  %1109 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %134, i64 0, i32 0, i32 0, i32 0
  store i32* %263, i32** %1109, align 8
  %1110 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %135, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1110) #14
  %1111 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %263, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %134, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %135) #14
  %1112 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %1111, 0
  %1113 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %1112, i64 2
  %1114 = bitcast %"struct.std::__1::__hash_node_base.113"* %1113 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1110) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1108) #14
  %1115 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1114, i64 0, i32 1, i32 0, i32 0, i32 0
  %1116 = bitcast i32* %1115 to <4 x i32>*
  store <4 x i32> <i32 2, i32 9, i32 9, i32 9>, <4 x i32>* %1116, align 4
  %1117 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1114, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 9, i32* %1117, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1107) #14
  %1118 = bitcast i32* %264 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1118) #14
  store i32 73, i32* %264, align 4
  %1119 = bitcast %"class.std::__1::tuple.630"* %138 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1119) #14
  %1120 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %138, i64 0, i32 0, i32 0, i32 0
  store i32* %264, i32** %1120, align 8
  %1121 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %139, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1121) #14
  %1122 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %264, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %138, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %139) #14
  %1123 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %1122, 0
  %1124 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %1123, i64 2
  %1125 = bitcast %"struct.std::__1::__hash_node_base.113"* %1124 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1121) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1119) #14
  %1126 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1125, i64 0, i32 1, i32 0, i32 0, i32 0
  %1127 = bitcast i32* %1126 to <4 x i32>*
  store <4 x i32> <i32 2, i32 13, i32 13, i32 13>, <4 x i32>* %1127, align 4
  %1128 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1125, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 13, i32* %1128, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1118) #14
  %1129 = bitcast i32* %265 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1129) #14
  store i32 81, i32* %265, align 4
  %1130 = bitcast %"class.std::__1::tuple.630"* %140 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1130) #14
  %1131 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %140, i64 0, i32 0, i32 0, i32 0
  store i32* %265, i32** %1131, align 8
  %1132 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %141, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1132) #14
  %1133 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %265, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %140, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %141) #14
  %1134 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %1133, 0
  %1135 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %1134, i64 2
  %1136 = bitcast %"struct.std::__1::__hash_node_base.113"* %1135 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1132) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1130) #14
  %1137 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1136, i64 0, i32 1, i32 0, i32 0, i32 0
  %1138 = bitcast i32* %1137 to <4 x i32>*
  store <4 x i32> <i32 2, i32 12, i32 12, i32 12>, <4 x i32>* %1138, align 4
  %1139 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1136, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 12, i32* %1139, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1129) #14
  %1140 = bitcast i32* %266 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1140) #14
  store i32 29, i32* %266, align 4
  %1141 = bitcast %"class.std::__1::tuple.630"* %144 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1141) #14
  %1142 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %144, i64 0, i32 0, i32 0, i32 0
  store i32* %266, i32** %1142, align 8
  %1143 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %145, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1143) #14
  %1144 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %266, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %144, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %145) #14
  %1145 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %1144, 0
  %1146 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %1145, i64 2
  %1147 = bitcast %"struct.std::__1::__hash_node_base.113"* %1146 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1143) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1141) #14
  %1148 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1147, i64 0, i32 1, i32 0, i32 0, i32 0
  %1149 = bitcast i32* %1148 to <4 x i32>*
  store <4 x i32> <i32 1, i32 124, i32 124, i32 124>, <4 x i32>* %1149, align 4
  %1150 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1147, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 124, i32* %1150, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1140) #14
  %1151 = bitcast i32* %267 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1151) #14
  store i32 30, i32* %267, align 4
  %1152 = bitcast %"class.std::__1::tuple.630"* %146 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1152) #14
  %1153 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %146, i64 0, i32 0, i32 0, i32 0
  store i32* %267, i32** %1153, align 8
  %1154 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %147, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1154) #14
  %1155 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %267, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %146, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %147) #14
  %1156 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %1155, 0
  %1157 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %1156, i64 2
  %1158 = bitcast %"struct.std::__1::__hash_node_base.113"* %1157 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1154) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1152) #14
  %1159 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1158, i64 0, i32 1, i32 0, i32 0, i32 0
  %1160 = bitcast i32* %1159 to <4 x i32>*
  store <4 x i32> <i32 1, i32 124, i32 124, i32 124>, <4 x i32>* %1160, align 4
  %1161 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1158, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 124, i32* %1161, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1151) #14
  %1162 = bitcast i32* %268 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1162) #14
  store i32 38, i32* %268, align 4
  %1163 = bitcast %"class.std::__1::tuple.630"* %150 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1163) #14
  %1164 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %150, i64 0, i32 0, i32 0, i32 0
  store i32* %268, i32** %1164, align 8
  %1165 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %151, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1165) #14
  %1166 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %268, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %150, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %151) #14
  %1167 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %1166, 0
  %1168 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %1167, i64 2
  %1169 = bitcast %"struct.std::__1::__hash_node_base.113"* %1168 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1165) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1163) #14
  %1170 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1169, i64 0, i32 1, i32 0, i32 0, i32 0
  %1171 = bitcast i32* %1170 to <4 x i32>*
  store <4 x i32> <i32 1, i32 124, i32 124, i32 124>, <4 x i32>* %1171, align 4
  %1172 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1169, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 124, i32* %1172, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1162) #14
  %1173 = bitcast i32* %269 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1173) #14
  store i32 86, i32* %269, align 4
  %1174 = bitcast %"class.std::__1::tuple.630"* %152 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1174) #14
  %1175 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %152, i64 0, i32 0, i32 0, i32 0
  store i32* %269, i32** %1175, align 8
  %1176 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %153, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1176) #14
  %1177 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %269, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %152, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %153) #14
  %1178 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %1177, 0
  %1179 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %1178, i64 2
  %1180 = bitcast %"struct.std::__1::__hash_node_base.113"* %1179 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1176) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1174) #14
  %1181 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1180, i64 0, i32 1, i32 0, i32 0, i32 0
  %1182 = bitcast i32* %1181 to <4 x i32>*
  store <4 x i32> <i32 1, i32 124, i32 124, i32 124>, <4 x i32>* %1182, align 4
  %1183 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1180, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 124, i32* %1183, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1173) #14
  %1184 = bitcast i32* %270 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1184) #14
  store i32 4, i32* %270, align 4
  %1185 = bitcast %"class.std::__1::tuple.630"* %156 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1185) #14
  %1186 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %156, i64 0, i32 0, i32 0, i32 0
  store i32* %270, i32** %1186, align 8
  %1187 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %157, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1187) #14
  %1188 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %270, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %156, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %157) #14
  %1189 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %1188, 0
  %1190 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %1189, i64 2
  %1191 = bitcast %"struct.std::__1::__hash_node_base.113"* %1190 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1187) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1185) #14
  %1192 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1191, i64 0, i32 1, i32 0, i32 0, i32 0
  %1193 = bitcast i32* %1192 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %1193, align 4
  %1194 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1191, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 154, i32* %1194, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1184) #14
  %1195 = bitcast i32* %271 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1195) #14
  store i32 3, i32* %271, align 4
  %1196 = bitcast %"class.std::__1::tuple.630"* %158 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1196) #14
  %1197 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %158, i64 0, i32 0, i32 0, i32 0
  store i32* %271, i32** %1197, align 8
  %1198 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %159, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1198) #14
  %1199 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %271, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %158, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %159) #14
  %1200 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %1199, 0
  %1201 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %1200, i64 2
  %1202 = bitcast %"struct.std::__1::__hash_node_base.113"* %1201 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1198) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1196) #14
  %1203 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1202, i64 0, i32 1, i32 0, i32 0, i32 0
  %1204 = bitcast i32* %1203 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %1204, align 4
  %1205 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1202, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 155, i32* %1205, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1195) #14
  %1206 = bitcast i32* %272 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1206) #14
  store i32 59, i32* %272, align 4
  %1207 = bitcast %"class.std::__1::tuple.630"* %162 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1207) #14
  %1208 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %162, i64 0, i32 0, i32 0, i32 0
  store i32* %272, i32** %1208, align 8
  %1209 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %163, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1209) #14
  %1210 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %272, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %162, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %163) #14
  %1211 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %1210, 0
  %1212 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %1211, i64 2
  %1213 = bitcast %"struct.std::__1::__hash_node_base.113"* %1212 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1209) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1207) #14
  %1214 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1213, i64 0, i32 1, i32 0, i32 0, i32 0
  %1215 = bitcast i32* %1214 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %1215, align 4
  %1216 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1213, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 168, i32* %1216, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1206) #14
  %1217 = bitcast i32* %273 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1217) #14
  store i32 23, i32* %273, align 4
  %1218 = bitcast %"class.std::__1::tuple.630"* %164 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1218) #14
  %1219 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %164, i64 0, i32 0, i32 0, i32 0
  store i32* %273, i32** %1219, align 8
  %1220 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %165, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1220) #14
  %1221 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %273, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %164, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %165) #14
  %1222 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %1221, 0
  %1223 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %1222, i64 2
  %1224 = bitcast %"struct.std::__1::__hash_node_base.113"* %1223 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1220) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1218) #14
  %1225 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1224, i64 0, i32 1, i32 0, i32 0, i32 0
  %1226 = bitcast i32* %1225 to <4 x i32>*
  store <4 x i32> <i32 1, i32 180, i32 170, i32 170>, <4 x i32>* %1226, align 4
  %1227 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1224, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 164, i32* %1227, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1217) #14
  %1228 = bitcast i32* %274 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1228) #14
  store i32 58, i32* %274, align 4
  %1229 = bitcast %"class.std::__1::tuple.630"* %168 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1229) #14
  %1230 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %168, i64 0, i32 0, i32 0, i32 0
  store i32* %274, i32** %1230, align 8
  %1231 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %169, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1231) #14
  %1232 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %274, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %168, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %169) #14
  %1233 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %1232, 0
  %1234 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %1233, i64 2
  %1235 = bitcast %"struct.std::__1::__hash_node_base.113"* %1234 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1231) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1229) #14
  %1236 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1235, i64 0, i32 1, i32 0, i32 0, i32 0
  %1237 = bitcast i32* %1236 to <4 x i32>*
  store <4 x i32> <i32 1, i32 182, i32 171, i32 171>, <4 x i32>* %1237, align 4
  %1238 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1235, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 165, i32* %1238, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1228) #14
  %1239 = bitcast i32* %275 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1239) #14
  store i32 46, i32* %275, align 4
  %1240 = bitcast %"class.std::__1::tuple.630"* %170 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1240) #14
  %1241 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %170, i64 0, i32 0, i32 0, i32 0
  store i32* %275, i32** %1241, align 8
  %1242 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %171, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1242) #14
  %1243 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %275, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %170, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %171) #14
  %1244 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %1243, 0
  %1245 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %1244, i64 2
  %1246 = bitcast %"struct.std::__1::__hash_node_base.113"* %1245 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1242) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1240) #14
  %1247 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1246, i64 0, i32 1, i32 0, i32 0, i32 0
  %1248 = bitcast i32* %1247 to <4 x i32>*
  store <4 x i32> <i32 1, i32 184, i32 177, i32 176>, <4 x i32>* %1248, align 4
  %1249 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1246, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 1, i32* %1249, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1239) #14
  %1250 = bitcast i32* %276 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1250) #14
  store i32 45, i32* %276, align 4
  %1251 = bitcast %"class.std::__1::tuple.630"* %174 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1251) #14
  %1252 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %174, i64 0, i32 0, i32 0, i32 0
  store i32* %276, i32** %1252, align 8
  %1253 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %175, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1253) #14
  %1254 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %276, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %174, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %175) #14
  %1255 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %1254, 0
  %1256 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %1255, i64 2
  %1257 = bitcast %"struct.std::__1::__hash_node_base.113"* %1256 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1253) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1251) #14
  %1258 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1257, i64 0, i32 1, i32 0, i32 0, i32 0
  %1259 = bitcast i32* %1258 to <4 x i32>*
  store <4 x i32> <i32 1, i32 188, i32 179, i32 178>, <4 x i32>* %1259, align 4
  %1260 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1257, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 1, i32* %1260, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1250) #14
  %1261 = bitcast i32* %277 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1261) #14
  store i32 37, i32* %277, align 4
  %1262 = bitcast %"class.std::__1::tuple.630"* %176 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1262) #14
  %1263 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %176, i64 0, i32 0, i32 0, i32 0
  store i32* %277, i32** %1263, align 8
  %1264 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %177, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1264) #14
  %1265 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %277, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %176, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %177) #14
  %1266 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %1265, 0
  %1267 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %1266, i64 2
  %1268 = bitcast %"struct.std::__1::__hash_node_base.113"* %1267 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1264) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1262) #14
  %1269 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1268, i64 0, i32 1, i32 0, i32 0, i32 0
  %1270 = bitcast i32* %1269 to <4 x i32>*
  store <4 x i32> <i32 1, i32 186, i32 173, i32 172>, <4 x i32>* %1270, align 4
  %1271 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1268, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 1, i32* %1271, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1261) #14
  %1272 = bitcast i32* %278 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1272) #14
  store i32 36, i32* %278, align 4
  %1273 = bitcast %"class.std::__1::tuple.630"* %180 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1273) #14
  %1274 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %180, i64 0, i32 0, i32 0, i32 0
  store i32* %278, i32** %1274, align 8
  %1275 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %181, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1275) #14
  %1276 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %278, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %180, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %181) #14
  %1277 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %1276, 0
  %1278 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %1277, i64 2
  %1279 = bitcast %"struct.std::__1::__hash_node_base.113"* %1278 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1275) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1273) #14
  %1280 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1279, i64 0, i32 1, i32 0, i32 0, i32 0
  %1281 = bitcast i32* %1280 to <4 x i32>*
  store <4 x i32> <i32 1, i32 190, i32 175, i32 174>, <4 x i32>* %1281, align 4
  %1282 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1279, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 1, i32* %1282, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1272) #14
  %1283 = bitcast i32* %279 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1283) #14
  store i32 21, i32* %279, align 4
  %1284 = bitcast %"class.std::__1::tuple.630"* %182 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1284) #14
  %1285 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %182, i64 0, i32 0, i32 0, i32 0
  store i32* %279, i32** %1285, align 8
  %1286 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %183, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1286) #14
  %1287 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %279, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %182, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %183) #14
  %1288 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %1287, 0
  %1289 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %1288, i64 2
  %1290 = bitcast %"struct.std::__1::__hash_node_base.113"* %1289 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1286) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1284) #14
  %1291 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1290, i64 0, i32 1, i32 0, i32 0, i32 0
  %1292 = bitcast i32* %1291 to <4 x i32>*
  store <4 x i32> <i32 1, i32 218, i32 218, i32 218>, <4 x i32>* %1292, align 4
  %1293 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1290, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 218, i32* %1293, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1283) #14
  %1294 = bitcast i32* %280 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1294) #14
  store i32 22, i32* %280, align 4
  %1295 = bitcast %"class.std::__1::tuple.630"* %186 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1295) #14
  %1296 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %186, i64 0, i32 0, i32 0, i32 0
  store i32* %280, i32** %1296, align 8
  %1297 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %187, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1297) #14
  %1298 = call { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"* %282, i32* nonnull dereferenceable(4) %280, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.630"* nonnull dereferenceable(8) %186, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %187) #14
  %1299 = extractvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %1298, 0
  %1300 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %1299, i64 2
  %1301 = bitcast %"struct.std::__1::__hash_node_base.113"* %1300 to %"struct.std::__1::pair.436"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1297) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1295) #14
  %1302 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1301, i64 0, i32 1, i32 0, i32 0, i32 0
  %1303 = bitcast i32* %1302 to <4 x i32>*
  store <4 x i32> <i32 1, i32 219, i32 219, i32 219>, <4 x i32>* %1303, align 4
  %1304 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %1301, i64 0, i32 1, i32 0, i32 4, i32 0
  store i32 219, i32* %1304, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1294) #14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18SPIRVCodeGenerator9writeWordEiRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* nocapture readnone, i32, %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  store i32 %1, i32* %4, align 4
  %5 = bitcast i32* %4 to i8*
  %6 = bitcast %"class.SkSL::OutputStream"* %2 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %7 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %7, i64 3
  %9 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %8, align 8
  call void %9(%"class.SkSL::OutputStream"* %2, i8* nonnull %5, i64 4) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, i32, i32, %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  switch i32 %1, label %22 [
    i32 253, label %8
    i32 254, label %8
    i32 252, label %8
    i32 251, label %8
    i32 249, label %8
    i32 250, label %8
    i32 43, label %35
    i32 41, label %35
    i32 42, label %35
    i32 44, label %35
    i32 19, label %35
    i32 21, label %35
    i32 22, label %35
    i32 20, label %35
    i32 23, label %35
    i32 24, label %35
    i32 28, label %35
    i32 32, label %35
    i32 33, label %35
    i32 29, label %35
    i32 30, label %35
    i32 25, label %35
    i32 27, label %35
    i32 26, label %35
    i32 59, label %35
    i32 54, label %35
    i32 55, label %35
    i32 56, label %35
    i32 16, label %35
    i32 14, label %35
    i32 17, label %35
    i32 11, label %35
    i32 15, label %35
    i32 3, label %35
    i32 4, label %35
    i32 5, label %35
    i32 6, label %35
    i32 71, label %35
    i32 72, label %35
  ]

8:                                                ; preds = %4, %4, %4, %4, %4, %4
  %9 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 26
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %21

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %14, 1
  store i32 %15, i32* %13, align 8
  store i32 %14, i32* %9, align 4
  tail call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 248, i32 2, %"class.SkSL::OutputStream"* dereferenceable(8) %3) #14
  %16 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #14
  store i32 %14, i32* %6, align 4
  %17 = bitcast %"class.SkSL::OutputStream"* %3 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %18 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %18, i64 3
  %20 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %19, align 8
  call void %20(%"class.SkSL::OutputStream"* %3, i8* nonnull %16, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #14
  br label %21

21:                                               ; preds = %12, %8
  store i32 0, i32* %9, align 4
  br label %35

22:                                               ; preds = %4
  %23 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 26
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %35

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %28 = load i32, i32* %27, align 8
  %29 = add i32 %28, 1
  store i32 %29, i32* %27, align 8
  store i32 %28, i32* %23, align 4
  tail call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 248, i32 2, %"class.SkSL::OutputStream"* dereferenceable(8) %3) #14
  %30 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %30) #14
  store i32 %28, i32* %5, align 4
  %31 = bitcast %"class.SkSL::OutputStream"* %3 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %32 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %32, i64 3
  %34 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %33, align 8
  call void %34(%"class.SkSL::OutputStream"* %3, i8* nonnull %30, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #14
  br label %35

35:                                               ; preds = %22, %26, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %21
  %36 = shl i32 %2, 16
  %37 = or i32 %36, %1
  %38 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %38)
  store i32 %37, i32* %7, align 4
  %39 = bitcast %"class.SkSL::OutputStream"* %3 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %40 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %40, i64 3
  %42 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %41, align 8
  call void %42(%"class.SkSL::OutputStream"* %3, i8* nonnull %38, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %38)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18SPIRVCodeGenerator10writeLabelEjRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, i32, %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 26
  store i32 %1, i32* %5, align 4
  tail call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 248, i32 2, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %6 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #14
  store i32 %1, i32* %4, align 4
  %7 = bitcast %"class.SkSL::OutputStream"* %2 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %8 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %8, i64 3
  %10 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %9, align 8
  call void %10(%"class.SkSL::OutputStream"* %2, i8* nonnull %6, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator6nextIdEPKNS_4TypeE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::Type"* readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = icmp eq %"class.SkSL::Type"* %1, null
  br i1 %6, label %56, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 6
  %9 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %8, align 8
  %10 = icmp eq %"class.SkSL::Type"* %9, null
  %11 = select i1 %10, %"class.SkSL::Type"* %1, %"class.SkSL::Type"* %9
  %12 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %11, i64 0, i32 4
  %13 = load i32, i32* %12, align 4
  %14 = icmp ult i32 %13, 3
  br i1 %14, label %19, label %15

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 3
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 6
  br i1 %18, label %19, label %56

19:                                               ; preds = %7, %15
  %20 = icmp eq %"class.SkSL::Type"* %9, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %19, %21
  %22 = phi %"class.SkSL::Type"* [ %24, %21 ], [ %9, %19 ]
  %23 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %22, i64 0, i32 6
  %24 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %23, align 8
  %25 = icmp eq %"class.SkSL::Type"* %24, null
  br i1 %25, label %26, label %21

26:                                               ; preds = %21, %19
  %27 = phi %"class.SkSL::Type"* [ %1, %19 ], [ %22, %21 ]
  %28 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %27, i64 0, i32 16
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %56

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 1
  %33 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %32, align 8
  %34 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %33, i64 0, i32 1, i32 0, i32 0, i32 0
  %35 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %34, align 8
  %36 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %35, i64 0, i32 1, i32 3
  %37 = load i8, i8* %36, align 1, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %56

39:                                               ; preds = %31
  %40 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %41 = load i32, i32* %40, align 8
  %42 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %43 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %43) #14
  store i32 196679, i32* %3, align 4
  %44 = bitcast %"class.SkSL::OutputStream"* %42 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %45 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %45, i64 3
  %47 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %46, align 8
  call void %47(%"class.SkSL::OutputStream"* %42, i8* nonnull %43, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %43) #14
  %48 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %48) #14
  store i32 %41, i32* %5, align 4
  %49 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %44, align 8
  %50 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %49, i64 3
  %51 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %50, align 8
  call void %51(%"class.SkSL::OutputStream"* %42, i8* nonnull %48, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %48) #14
  %52 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %52) #14
  store i32 0, i32* %4, align 4
  %53 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %44, align 8
  %54 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %53, i64 3
  %55 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %54, align 8
  call void %55(%"class.SkSL::OutputStream"* %42, i8* nonnull %52, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %52) #14
  br label %56

56:                                               ; preds = %2, %15, %26, %31, %39
  %57 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %58 = load i32, i32* %57, align 8
  %59 = add i32 %58, 1
  store i32 %59, i32* %57, align 8
  ret i32 %58
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18SPIRVCodeGenerator16writeInstructionE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, i32, i32, %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  tail call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 %1, i32 2, %"class.SkSL::OutputStream"* dereferenceable(8) %3)
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6)
  store i32 %2, i32* %5, align 4
  %7 = bitcast %"class.SkSL::OutputStream"* %3 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %8 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %8, i64 3
  %10 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %9, align 8
  call void %10(%"class.SkSL::OutputStream"* %3, i8* nonnull %6, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18SPIRVCodeGenerator16writeInstructionE6SpvOp_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, i32, %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 %1, i32 1, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18SPIRVCodeGenerator11writeStringEPKcmRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* nocapture readnone, i8*, i64, %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = bitcast %"class.SkSL::OutputStream"* %3 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %7 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %7, i64 3
  %9 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %8, align 8
  tail call void %9(%"class.SkSL::OutputStream"* %3, i8* %1, i64 %2) #14
  %10 = and i64 %2, 3
  switch i64 %10, label %30 [
    i64 1, label %15
    i64 2, label %11
    i64 3, label %13
  ]

11:                                               ; preds = %4
  %12 = bitcast %"class.SkSL::OutputStream"* %3 to void (%"class.SkSL::OutputStream"*, i8)***
  br label %20

13:                                               ; preds = %4
  %14 = bitcast %"class.SkSL::OutputStream"* %3 to void (%"class.SkSL::OutputStream"*, i8)***
  br label %25

15:                                               ; preds = %4
  %16 = bitcast %"class.SkSL::OutputStream"* %3 to void (%"class.SkSL::OutputStream"*, i8)***
  %17 = load void (%"class.SkSL::OutputStream"*, i8)**, void (%"class.SkSL::OutputStream"*, i8)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8)*, void (%"class.SkSL::OutputStream"*, i8)** %17, i64 1
  %19 = load void (%"class.SkSL::OutputStream"*, i8)*, void (%"class.SkSL::OutputStream"*, i8)** %18, align 8
  tail call void %19(%"class.SkSL::OutputStream"* %3, i8 zeroext 0) #14
  br label %20

20:                                               ; preds = %11, %15
  %21 = phi void (%"class.SkSL::OutputStream"*, i8)*** [ %12, %11 ], [ %16, %15 ]
  %22 = load void (%"class.SkSL::OutputStream"*, i8)**, void (%"class.SkSL::OutputStream"*, i8)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8)*, void (%"class.SkSL::OutputStream"*, i8)** %22, i64 1
  %24 = load void (%"class.SkSL::OutputStream"*, i8)*, void (%"class.SkSL::OutputStream"*, i8)** %23, align 8
  tail call void %24(%"class.SkSL::OutputStream"* %3, i8 zeroext 0) #14
  br label %25

25:                                               ; preds = %13, %20
  %26 = phi void (%"class.SkSL::OutputStream"*, i8)*** [ %14, %13 ], [ %21, %20 ]
  %27 = load void (%"class.SkSL::OutputStream"*, i8)**, void (%"class.SkSL::OutputStream"*, i8)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8)*, void (%"class.SkSL::OutputStream"*, i8)** %27, i64 1
  %29 = load void (%"class.SkSL::OutputStream"*, i8)*, void (%"class.SkSL::OutputStream"*, i8)** %28, align 8
  tail call void %29(%"class.SkSL::OutputStream"* %3, i8 zeroext 0) #14
  br label %35

30:                                               ; preds = %4
  %31 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %31)
  store i32 0, i32* %5, align 4
  %32 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %6, align 8
  %33 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %32, i64 3
  %34 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %33, align 8
  call void %34(%"class.SkSL::OutputStream"* %3, i8* nonnull %31, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %31)
  br label %35

35:                                               ; preds = %30, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18SPIRVCodeGenerator16writeInstructionE6SpvOp_NS_14StringFragmentERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, i32, i8*, i64, %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = add i64 %3, 4
  %8 = lshr i64 %7, 2
  %9 = trunc i64 %8 to i32
  %10 = add i32 %9, 1
  tail call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 %1, i32 %10, %"class.SkSL::OutputStream"* dereferenceable(8) %4)
  %11 = bitcast %"class.SkSL::OutputStream"* %4 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %12 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %12, i64 3
  %14 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %13, align 8
  tail call void %14(%"class.SkSL::OutputStream"* %4, i8* %2, i64 %3) #14
  %15 = and i64 %3, 3
  switch i64 %15, label %35 [
    i64 1, label %20
    i64 2, label %16
    i64 3, label %18
  ]

16:                                               ; preds = %5
  %17 = bitcast %"class.SkSL::OutputStream"* %4 to void (%"class.SkSL::OutputStream"*, i8)***
  br label %25

18:                                               ; preds = %5
  %19 = bitcast %"class.SkSL::OutputStream"* %4 to void (%"class.SkSL::OutputStream"*, i8)***
  br label %30

20:                                               ; preds = %5
  %21 = bitcast %"class.SkSL::OutputStream"* %4 to void (%"class.SkSL::OutputStream"*, i8)***
  %22 = load void (%"class.SkSL::OutputStream"*, i8)**, void (%"class.SkSL::OutputStream"*, i8)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8)*, void (%"class.SkSL::OutputStream"*, i8)** %22, i64 1
  %24 = load void (%"class.SkSL::OutputStream"*, i8)*, void (%"class.SkSL::OutputStream"*, i8)** %23, align 8
  tail call void %24(%"class.SkSL::OutputStream"* %4, i8 zeroext 0) #14
  br label %25

25:                                               ; preds = %20, %16
  %26 = phi void (%"class.SkSL::OutputStream"*, i8)*** [ %17, %16 ], [ %21, %20 ]
  %27 = load void (%"class.SkSL::OutputStream"*, i8)**, void (%"class.SkSL::OutputStream"*, i8)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8)*, void (%"class.SkSL::OutputStream"*, i8)** %27, i64 1
  %29 = load void (%"class.SkSL::OutputStream"*, i8)*, void (%"class.SkSL::OutputStream"*, i8)** %28, align 8
  tail call void %29(%"class.SkSL::OutputStream"* %4, i8 zeroext 0) #14
  br label %30

30:                                               ; preds = %25, %18
  %31 = phi void (%"class.SkSL::OutputStream"*, i8)*** [ %19, %18 ], [ %26, %25 ]
  %32 = load void (%"class.SkSL::OutputStream"*, i8)**, void (%"class.SkSL::OutputStream"*, i8)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8)*, void (%"class.SkSL::OutputStream"*, i8)** %32, i64 1
  %34 = load void (%"class.SkSL::OutputStream"*, i8)*, void (%"class.SkSL::OutputStream"*, i8)** %33, align 8
  tail call void %34(%"class.SkSL::OutputStream"* %4, i8 zeroext 0) #14
  br label %40

35:                                               ; preds = %5
  %36 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %36) #14
  store i32 0, i32* %6, align 4
  %37 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %11, align 8
  %38 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %37, i64 3
  %39 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %38, align 8
  call void %39(%"class.SkSL::OutputStream"* %4, i8* nonnull %36, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %36) #14
  br label %40

40:                                               ; preds = %30, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18SPIRVCodeGenerator16writeInstructionE6SpvOp_iNS_14StringFragmentERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, i32, i32, i8*, i64, %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = add i64 %4, 4
  %10 = lshr i64 %9, 2
  %11 = trunc i64 %10 to i32
  %12 = add i32 %11, 2
  tail call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 %1, i32 %12, %"class.SkSL::OutputStream"* dereferenceable(8) %5)
  %13 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13)
  store i32 %2, i32* %8, align 4
  %14 = bitcast %"class.SkSL::OutputStream"* %5 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %15 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %15, i64 3
  %17 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %16, align 8
  call void %17(%"class.SkSL::OutputStream"* %5, i8* nonnull %13, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13)
  %18 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %14, align 8
  %19 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %18, i64 3
  %20 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %19, align 8
  call void %20(%"class.SkSL::OutputStream"* %5, i8* %3, i64 %4) #14
  %21 = and i64 %4, 3
  switch i64 %21, label %41 [
    i64 1, label %26
    i64 2, label %22
    i64 3, label %24
  ]

22:                                               ; preds = %6
  %23 = bitcast %"class.SkSL::OutputStream"* %5 to void (%"class.SkSL::OutputStream"*, i8)***
  br label %31

24:                                               ; preds = %6
  %25 = bitcast %"class.SkSL::OutputStream"* %5 to void (%"class.SkSL::OutputStream"*, i8)***
  br label %36

26:                                               ; preds = %6
  %27 = bitcast %"class.SkSL::OutputStream"* %5 to void (%"class.SkSL::OutputStream"*, i8)***
  %28 = load void (%"class.SkSL::OutputStream"*, i8)**, void (%"class.SkSL::OutputStream"*, i8)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8)*, void (%"class.SkSL::OutputStream"*, i8)** %28, i64 1
  %30 = load void (%"class.SkSL::OutputStream"*, i8)*, void (%"class.SkSL::OutputStream"*, i8)** %29, align 8
  call void %30(%"class.SkSL::OutputStream"* %5, i8 zeroext 0) #14
  br label %31

31:                                               ; preds = %26, %22
  %32 = phi void (%"class.SkSL::OutputStream"*, i8)*** [ %23, %22 ], [ %27, %26 ]
  %33 = load void (%"class.SkSL::OutputStream"*, i8)**, void (%"class.SkSL::OutputStream"*, i8)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8)*, void (%"class.SkSL::OutputStream"*, i8)** %33, i64 1
  %35 = load void (%"class.SkSL::OutputStream"*, i8)*, void (%"class.SkSL::OutputStream"*, i8)** %34, align 8
  call void %35(%"class.SkSL::OutputStream"* %5, i8 zeroext 0) #14
  br label %36

36:                                               ; preds = %31, %24
  %37 = phi void (%"class.SkSL::OutputStream"*, i8)*** [ %25, %24 ], [ %32, %31 ]
  %38 = load void (%"class.SkSL::OutputStream"*, i8)**, void (%"class.SkSL::OutputStream"*, i8)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8)*, void (%"class.SkSL::OutputStream"*, i8)** %38, i64 1
  %40 = load void (%"class.SkSL::OutputStream"*, i8)*, void (%"class.SkSL::OutputStream"*, i8)** %39, align 8
  call void %40(%"class.SkSL::OutputStream"* %5, i8 zeroext 0) #14
  br label %46

41:                                               ; preds = %6
  %42 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %42) #14
  store i32 0, i32* %7, align 4
  %43 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %14, align 8
  %44 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %43, i64 3
  %45 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %44, align 8
  call void %45(%"class.SkSL::OutputStream"* %5, i8* nonnull %42, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %42) #14
  br label %46

46:                                               ; preds = %36, %41
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18SPIRVCodeGenerator16writeInstructionE6SpvOp_iiNS_14StringFragmentERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, i32, i32, i32, i8*, i64, %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = add i64 %5, 4
  %12 = lshr i64 %11, 2
  %13 = trunc i64 %12 to i32
  %14 = add i32 %13, 3
  tail call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 %1, i32 %14, %"class.SkSL::OutputStream"* dereferenceable(8) %6)
  %15 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15)
  store i32 %2, i32* %10, align 4
  %16 = bitcast %"class.SkSL::OutputStream"* %6 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %17 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %17, i64 3
  %19 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %18, align 8
  call void %19(%"class.SkSL::OutputStream"* %6, i8* nonnull %15, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15)
  %20 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20)
  store i32 %3, i32* %9, align 4
  %21 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %16, align 8
  %22 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %21, i64 3
  %23 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %22, align 8
  call void %23(%"class.SkSL::OutputStream"* %6, i8* nonnull %20, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20)
  %24 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %16, align 8
  %25 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %24, i64 3
  %26 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %25, align 8
  call void %26(%"class.SkSL::OutputStream"* %6, i8* %4, i64 %5) #14
  %27 = and i64 %5, 3
  switch i64 %27, label %47 [
    i64 1, label %32
    i64 2, label %28
    i64 3, label %30
  ]

28:                                               ; preds = %7
  %29 = bitcast %"class.SkSL::OutputStream"* %6 to void (%"class.SkSL::OutputStream"*, i8)***
  br label %37

30:                                               ; preds = %7
  %31 = bitcast %"class.SkSL::OutputStream"* %6 to void (%"class.SkSL::OutputStream"*, i8)***
  br label %42

32:                                               ; preds = %7
  %33 = bitcast %"class.SkSL::OutputStream"* %6 to void (%"class.SkSL::OutputStream"*, i8)***
  %34 = load void (%"class.SkSL::OutputStream"*, i8)**, void (%"class.SkSL::OutputStream"*, i8)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8)*, void (%"class.SkSL::OutputStream"*, i8)** %34, i64 1
  %36 = load void (%"class.SkSL::OutputStream"*, i8)*, void (%"class.SkSL::OutputStream"*, i8)** %35, align 8
  call void %36(%"class.SkSL::OutputStream"* %6, i8 zeroext 0) #14
  br label %37

37:                                               ; preds = %32, %28
  %38 = phi void (%"class.SkSL::OutputStream"*, i8)*** [ %29, %28 ], [ %33, %32 ]
  %39 = load void (%"class.SkSL::OutputStream"*, i8)**, void (%"class.SkSL::OutputStream"*, i8)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8)*, void (%"class.SkSL::OutputStream"*, i8)** %39, i64 1
  %41 = load void (%"class.SkSL::OutputStream"*, i8)*, void (%"class.SkSL::OutputStream"*, i8)** %40, align 8
  call void %41(%"class.SkSL::OutputStream"* %6, i8 zeroext 0) #14
  br label %42

42:                                               ; preds = %37, %30
  %43 = phi void (%"class.SkSL::OutputStream"*, i8)*** [ %31, %30 ], [ %38, %37 ]
  %44 = load void (%"class.SkSL::OutputStream"*, i8)**, void (%"class.SkSL::OutputStream"*, i8)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8)*, void (%"class.SkSL::OutputStream"*, i8)** %44, i64 1
  %46 = load void (%"class.SkSL::OutputStream"*, i8)*, void (%"class.SkSL::OutputStream"*, i8)** %45, align 8
  call void %46(%"class.SkSL::OutputStream"* %6, i8 zeroext 0) #14
  br label %52

47:                                               ; preds = %7
  %48 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %48) #14
  store i32 0, i32* %8, align 4
  %49 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %16, align 8
  %50 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %49, i64 3
  %51 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %50, align 8
  call void %51(%"class.SkSL::OutputStream"* %6, i8* nonnull %48, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %48) #14
  br label %52

52:                                               ; preds = %42, %47
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18SPIRVCodeGenerator16writeInstructionE6SpvOp_iiRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, i32, i32, i32, %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  tail call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 %1, i32 3, %"class.SkSL::OutputStream"* dereferenceable(8) %4)
  %8 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8)
  store i32 %2, i32* %7, align 4
  %9 = bitcast %"class.SkSL::OutputStream"* %4 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %10 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %10, i64 3
  %12 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %11, align 8
  call void %12(%"class.SkSL::OutputStream"* %4, i8* nonnull %8, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8)
  %13 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13)
  store i32 %3, i32* %6, align 4
  %14 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %9, align 8
  %15 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %14, i64 3
  %16 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %15, align 8
  call void %16(%"class.SkSL::OutputStream"* %4, i8* nonnull %13, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18SPIRVCodeGenerator16writeInstructionE6SpvOp_iiiRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, i32, i32, i32, i32, %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  tail call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 %1, i32 4, %"class.SkSL::OutputStream"* dereferenceable(8) %5)
  %10 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10)
  store i32 %2, i32* %9, align 4
  %11 = bitcast %"class.SkSL::OutputStream"* %5 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %12 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %12, i64 3
  %14 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %13, align 8
  call void %14(%"class.SkSL::OutputStream"* %5, i8* nonnull %10, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10)
  %15 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15)
  store i32 %3, i32* %8, align 4
  %16 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %11, align 8
  %17 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %16, i64 3
  %18 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %17, align 8
  call void %18(%"class.SkSL::OutputStream"* %5, i8* nonnull %15, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15)
  %19 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19)
  store i32 %4, i32* %7, align 4
  %20 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %11, align 8
  %21 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %20, i64 3
  %22 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %21, align 8
  call void %22(%"class.SkSL::OutputStream"* %5, i8* nonnull %19, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18SPIRVCodeGenerator16writeInstructionE6SpvOp_iiiiRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, i32, i32, i32, i32, i32, %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  tail call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 %1, i32 5, %"class.SkSL::OutputStream"* dereferenceable(8) %6)
  %12 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12)
  store i32 %2, i32* %11, align 4
  %13 = bitcast %"class.SkSL::OutputStream"* %6 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %14 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %14, i64 3
  %16 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %15, align 8
  call void %16(%"class.SkSL::OutputStream"* %6, i8* nonnull %12, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12)
  %17 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17)
  store i32 %3, i32* %10, align 4
  %18 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %13, align 8
  %19 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %18, i64 3
  %20 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %19, align 8
  call void %20(%"class.SkSL::OutputStream"* %6, i8* nonnull %17, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17)
  %21 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21)
  store i32 %4, i32* %9, align 4
  %22 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %13, align 8
  %23 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %22, i64 3
  %24 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %23, align 8
  call void %24(%"class.SkSL::OutputStream"* %6, i8* nonnull %21, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21)
  %25 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25)
  store i32 %5, i32* %8, align 4
  %26 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %13, align 8
  %27 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %26, i64 3
  %28 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %27, align 8
  call void %28(%"class.SkSL::OutputStream"* %6, i8* nonnull %25, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18SPIRVCodeGenerator16writeInstructionE6SpvOp_iiiiiRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, i32, i32, i32, i32, i32, i32, %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  tail call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 %1, i32 6, %"class.SkSL::OutputStream"* dereferenceable(8) %7)
  %14 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14)
  store i32 %2, i32* %13, align 4
  %15 = bitcast %"class.SkSL::OutputStream"* %7 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %16 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %16, i64 3
  %18 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %17, align 8
  call void %18(%"class.SkSL::OutputStream"* %7, i8* nonnull %14, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14)
  %19 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19)
  store i32 %3, i32* %12, align 4
  %20 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %15, align 8
  %21 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %20, i64 3
  %22 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %21, align 8
  call void %22(%"class.SkSL::OutputStream"* %7, i8* nonnull %19, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19)
  %23 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23)
  store i32 %4, i32* %11, align 4
  %24 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %15, align 8
  %25 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %24, i64 3
  %26 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %25, align 8
  call void %26(%"class.SkSL::OutputStream"* %7, i8* nonnull %23, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23)
  %27 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27)
  store i32 %5, i32* %10, align 4
  %28 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %15, align 8
  %29 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %28, i64 3
  %30 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %29, align 8
  call void %30(%"class.SkSL::OutputStream"* %7, i8* nonnull %27, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27)
  %31 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %31)
  store i32 %6, i32* %9, align 4
  %32 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %15, align 8
  %33 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %32, i64 3
  %34 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %33, align 8
  call void %34(%"class.SkSL::OutputStream"* %7, i8* nonnull %31, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %31)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18SPIRVCodeGenerator16writeInstructionE6SpvOp_iiiiiiRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, i32, i32, i32, i32, i32, i32, i32, %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  tail call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 %1, i32 7, %"class.SkSL::OutputStream"* dereferenceable(8) %8)
  %16 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16)
  store i32 %2, i32* %15, align 4
  %17 = bitcast %"class.SkSL::OutputStream"* %8 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %18 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %18, i64 3
  %20 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %19, align 8
  call void %20(%"class.SkSL::OutputStream"* %8, i8* nonnull %16, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16)
  %21 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21)
  store i32 %3, i32* %14, align 4
  %22 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %17, align 8
  %23 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %22, i64 3
  %24 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %23, align 8
  call void %24(%"class.SkSL::OutputStream"* %8, i8* nonnull %21, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21)
  %25 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25)
  store i32 %4, i32* %13, align 4
  %26 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %17, align 8
  %27 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %26, i64 3
  %28 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %27, align 8
  call void %28(%"class.SkSL::OutputStream"* %8, i8* nonnull %25, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25)
  %29 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29)
  store i32 %5, i32* %12, align 4
  %30 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %17, align 8
  %31 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %30, i64 3
  %32 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %31, align 8
  call void %32(%"class.SkSL::OutputStream"* %8, i8* nonnull %29, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29)
  %33 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33)
  store i32 %6, i32* %11, align 4
  %34 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %17, align 8
  %35 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %34, i64 3
  %36 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %35, align 8
  call void %36(%"class.SkSL::OutputStream"* %8, i8* nonnull %33, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33)
  %37 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %37)
  store i32 %7, i32* %10, align 4
  %38 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %17, align 8
  %39 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %38, i64 3
  %40 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %39, align 8
  call void %40(%"class.SkSL::OutputStream"* %8, i8* nonnull %37, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18SPIRVCodeGenerator16writeInstructionE6SpvOp_iiiiiiiRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, i32, i32, i32, i32, i32, i32, i32, i32, %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  tail call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 %1, i32 8, %"class.SkSL::OutputStream"* dereferenceable(8) %9)
  %18 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18)
  store i32 %2, i32* %17, align 4
  %19 = bitcast %"class.SkSL::OutputStream"* %9 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %20 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %20, i64 3
  %22 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %21, align 8
  call void %22(%"class.SkSL::OutputStream"* %9, i8* nonnull %18, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18)
  %23 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23)
  store i32 %3, i32* %16, align 4
  %24 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %19, align 8
  %25 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %24, i64 3
  %26 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %25, align 8
  call void %26(%"class.SkSL::OutputStream"* %9, i8* nonnull %23, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23)
  %27 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27)
  store i32 %4, i32* %15, align 4
  %28 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %19, align 8
  %29 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %28, i64 3
  %30 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %29, align 8
  call void %30(%"class.SkSL::OutputStream"* %9, i8* nonnull %27, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27)
  %31 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %31)
  store i32 %5, i32* %14, align 4
  %32 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %19, align 8
  %33 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %32, i64 3
  %34 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %33, align 8
  call void %34(%"class.SkSL::OutputStream"* %9, i8* nonnull %31, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %31)
  %35 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %35)
  store i32 %6, i32* %13, align 4
  %36 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %19, align 8
  %37 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %36, i64 3
  %38 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %37, align 8
  call void %38(%"class.SkSL::OutputStream"* %9, i8* nonnull %35, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %35)
  %39 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %39)
  store i32 %7, i32* %12, align 4
  %40 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %19, align 8
  %41 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %40, i64 3
  %42 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %41, align 8
  call void %42(%"class.SkSL::OutputStream"* %9, i8* nonnull %39, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %39)
  %43 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %43)
  store i32 %8, i32* %11, align 4
  %44 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %19, align 8
  %45 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %44, i64 3
  %46 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %45, align 8
  call void %46(%"class.SkSL::OutputStream"* %9, i8* nonnull %43, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %43)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18SPIRVCodeGenerator16writeInstructionE6SpvOp_iiiiiiiiRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  tail call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 %1, i32 9, %"class.SkSL::OutputStream"* dereferenceable(8) %10)
  %20 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20)
  store i32 %2, i32* %19, align 4
  %21 = bitcast %"class.SkSL::OutputStream"* %10 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %22 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %22, i64 3
  %24 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %23, align 8
  call void %24(%"class.SkSL::OutputStream"* %10, i8* nonnull %20, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20)
  %25 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25)
  store i32 %3, i32* %18, align 4
  %26 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %21, align 8
  %27 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %26, i64 3
  %28 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %27, align 8
  call void %28(%"class.SkSL::OutputStream"* %10, i8* nonnull %25, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25)
  %29 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29)
  store i32 %4, i32* %17, align 4
  %30 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %21, align 8
  %31 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %30, i64 3
  %32 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %31, align 8
  call void %32(%"class.SkSL::OutputStream"* %10, i8* nonnull %29, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29)
  %33 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33)
  store i32 %5, i32* %16, align 4
  %34 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %21, align 8
  %35 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %34, i64 3
  %36 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %35, align 8
  call void %36(%"class.SkSL::OutputStream"* %10, i8* nonnull %33, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33)
  %37 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %37)
  store i32 %6, i32* %15, align 4
  %38 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %21, align 8
  %39 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %38, i64 3
  %40 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %39, align 8
  call void %40(%"class.SkSL::OutputStream"* %10, i8* nonnull %37, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37)
  %41 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %41)
  store i32 %7, i32* %14, align 4
  %42 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %21, align 8
  %43 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %42, i64 3
  %44 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %43, align 8
  call void %44(%"class.SkSL::OutputStream"* %10, i8* nonnull %41, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %41)
  %45 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %45)
  store i32 %8, i32* %13, align 4
  %46 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %21, align 8
  %47 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %46, i64 3
  %48 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %47, align 8
  call void %48(%"class.SkSL::OutputStream"* %10, i8* nonnull %45, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %45)
  %49 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %49)
  store i32 %9, i32* %12, align 4
  %50 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %21, align 8
  %51 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %50, i64 3
  %52 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %51, align 8
  call void %52(%"class.SkSL::OutputStream"* %10, i8* nonnull %49, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %49)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18SPIRVCodeGenerator17writeCapabilitiesERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* nocapture readonly, %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 4
  %10 = bitcast i32* %4 to i8*
  %11 = bitcast %"class.SkSL::OutputStream"* %1 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %12 = bitcast i32* %7 to i8*
  br label %21

13:                                               ; preds = %35
  %14 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 1
  %15 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %14, align 8
  %16 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %15, i64 0, i32 1, i32 0, i32 0, i32 0
  %17 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %16, align 8
  %18 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %17, i64 0, i32 0
  %19 = load i8, i8* %18, align 8
  %20 = icmp eq i8 %19, 2
  br i1 %20, label %39, label %48

21:                                               ; preds = %35, %2
  %22 = phi i64 [ 1, %2 ], [ %37, %35 ]
  %23 = phi i64 [ 0, %2 ], [ %36, %35 ]
  %24 = load i64, i64* %9, align 8
  %25 = and i64 %24, %22
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %21
  %28 = trunc i64 %23 to i32
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #14
  store i32 131089, i32* %4, align 4
  %29 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %11, align 8
  %30 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %29, i64 3
  %31 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %30, align 8
  call void %31(%"class.SkSL::OutputStream"* %1, i8* nonnull %10, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #14
  store i32 %28, i32* %7, align 4
  %32 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %11, align 8
  %33 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %32, i64 3
  %34 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %33, align 8
  call void %34(%"class.SkSL::OutputStream"* %1, i8* nonnull %12, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #14
  br label %35

35:                                               ; preds = %21, %27
  %36 = add nuw nsw i64 %23, 1
  %37 = shl i64 %22, 1
  %38 = icmp eq i64 %36, 58
  br i1 %38, label %13, label %21

39:                                               ; preds = %13
  %40 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %40) #14
  store i32 131089, i32* %3, align 4
  %41 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %11, align 8
  %42 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %41, i64 3
  %43 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %42, align 8
  call void %43(%"class.SkSL::OutputStream"* %1, i8* nonnull %40, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40) #14
  %44 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %44) #14
  store i32 2, i32* %6, align 4
  %45 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %11, align 8
  %46 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %45, i64 3
  %47 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %46, align 8
  call void %47(%"class.SkSL::OutputStream"* %1, i8* nonnull %44, i64 4) #14
  br label %57

48:                                               ; preds = %13
  %49 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %49) #14
  store i32 131089, i32* %5, align 4
  %50 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %11, align 8
  %51 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %50, i64 3
  %52 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %51, align 8
  call void %52(%"class.SkSL::OutputStream"* %1, i8* nonnull %49, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %49) #14
  %53 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %53) #14
  store i32 1, i32* %8, align 4
  %54 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %11, align 8
  %55 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %54, i64 3
  %56 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %55, align 8
  call void %56(%"class.SkSL::OutputStream"* %1, i8* nonnull %53, i64 4) #14
  br label %57

57:                                               ; preds = %48, %39
  %58 = phi i8* [ %53, %48 ], [ %44, %39 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %58) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator6nextIdENS0_9PrecisionE(%"class.SkSL::SPIRVCodeGenerator"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = icmp eq i32 %1, 1
  br i1 %6, label %7, label %32

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 1
  %9 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %8, align 8
  %10 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %9, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %10, align 8
  %12 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %11, i64 0, i32 1, i32 3
  %13 = load i8, i8* %12, align 1, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %32

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %19 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #14
  store i32 196679, i32* %3, align 4
  %20 = bitcast %"class.SkSL::OutputStream"* %18 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %21 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %21, i64 3
  %23 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %22, align 8
  call void %23(%"class.SkSL::OutputStream"* %18, i8* nonnull %19, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #14
  %24 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #14
  store i32 %17, i32* %5, align 4
  %25 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %20, align 8
  %26 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %25, i64 3
  %27 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %26, align 8
  call void %27(%"class.SkSL::OutputStream"* %18, i8* nonnull %24, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #14
  %28 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #14
  store i32 0, i32* %4, align 4
  %29 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %20, align 8
  %30 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %29, i64 3
  %31 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %30, align 8
  call void %31(%"class.SkSL::OutputStream"* %18, i8* nonnull %28, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #14
  br label %32

32:                                               ; preds = %7, %15, %2
  %33 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %34 = load i32, i32* %33, align 8
  %35 = add i32 %34, 1
  store i32 %35, i32* %33, align 8
  ret i32 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18SPIRVCodeGenerator11writeStructERKNS_4TypeERKNS_12MemoryLayoutEj(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::Type"* nocapture readonly dereferenceable(184), %"class.SkSL::MemoryLayout"* dereferenceable(4), i32) local_unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca %"class.SkSL::String", align 8
  %27 = alloca %"class.std::__1::vector.382", align 8
  %28 = alloca %"class.SkSL::String", align 8
  %29 = alloca %"class.SkSL::String", align 8
  %30 = alloca %"class.SkSL::String", align 8
  %31 = alloca %"class.SkSL::String", align 8
  %32 = alloca %"class.SkSL::String", align 8
  %33 = alloca %"class.SkSL::String", align 8
  %34 = alloca %"class.SkSL::String", align 8
  %35 = alloca %"class.SkSL::String", align 8
  %36 = alloca %"class.SkSL::String", align 8
  %37 = alloca %"class.SkSL::String", align 8
  %38 = alloca %"class.SkSL::String", align 8
  %39 = alloca %"class.SkSL::String", align 8
  %40 = alloca %"class.SkSL::String", align 8
  %41 = bitcast %"class.SkSL::String"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #14
  %42 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 0, i32 1, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 0, i32 1, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = icmp ugt i64 %45, -17
  br i1 %46, label %47, label %49

47:                                               ; preds = %4
  %48 = bitcast %"class.SkSL::String"* %26 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %48) #15
  unreachable

49:                                               ; preds = %4
  %50 = icmp ult i64 %45, 23
  br i1 %50, label %60, label %51

51:                                               ; preds = %49
  %52 = add nuw i64 %45, 16
  %53 = and i64 %52, -16
  %54 = tail call i8* @_Znwm(i64 %53) #16
  %55 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %54, i8** %55, align 8
  %56 = or i64 %53, -9223372036854775808
  %57 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %45, i64* %58, align 8
  %59 = bitcast %"class.SkSL::String"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %65

60:                                               ; preds = %49
  %61 = trunc i64 %45 to i8
  %62 = bitcast %"class.SkSL::String"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  store i8 %61, i8* %63, align 1
  %64 = icmp eq i64 %45, 0
  br i1 %64, label %68, label %65

65:                                               ; preds = %60, %51
  %66 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %62, %60 ], [ %59, %51 ]
  %67 = phi i8* [ %41, %60 ], [ %54, %51 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %67, i8* align 1 %43, i64 %45, i1 false) #14
  br label %68

68:                                               ; preds = %60, %65
  %69 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %62, %60 ], [ %66, %65 ]
  %70 = phi i8* [ %41, %60 ], [ %67, %65 ]
  %71 = getelementptr inbounds i8, i8* %70, i64 %45
  store i8 0, i8* %71, align 1
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %69, i64 0, i32 1, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  %75 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load i8*, i8** %75, align 8
  %77 = select i1 %74, i8* %76, i8* %41
  %78 = call i64 @strlen(i8* %77) #17
  %79 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 18, i32 0
  call void @_ZN4SkSL18SPIRVCodeGenerator16writeInstructionE6SpvOp_iNS_14StringFragmentERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 5, i32 %3, i8* %77, i64 %78, %"class.SkSL::OutputStream"* dereferenceable(8) %79)
  %80 = load i8, i8* %72, align 1
  %81 = icmp slt i8 %80, 0
  br i1 %81, label %82, label %84

82:                                               ; preds = %68
  %83 = load i8*, i8** %75, align 8
  call void @_ZdlPv(i8* %83) #16
  br label %84

84:                                               ; preds = %68, %82
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #14
  %85 = bitcast %"class.std::__1::vector.382"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %85) #14
  %86 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %27, i64 0, i32 0, i32 0
  %87 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %27, i64 0, i32 0, i32 1
  %88 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %27, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %85, i8 0, i64 24, i1 false) #14
  %89 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 10
  %90 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %89, i64 0, i32 0, i32 0
  %91 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %90, align 8
  %92 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 10, i32 0, i32 1
  %93 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %92, align 8
  %94 = icmp eq %"struct.SkSL::Type::Field"* %91, %93
  %95 = bitcast i32** %87 to i64*
  br i1 %94, label %102, label %96

96:                                               ; preds = %84
  %97 = bitcast %"class.std::__1::vector.382"* %27 to i64*
  %98 = bitcast i32** %88 to i64*
  br label %126

99:                                               ; preds = %186
  %100 = load i64, i64* %95, align 8
  %101 = load i64, i64* %97, align 8
  br label %102

102:                                              ; preds = %84, %99
  %103 = phi i64 [ %101, %99 ], [ 0, %84 ]
  %104 = phi i64 [ %100, %99 ], [ 0, %84 ]
  %105 = sub i64 %104, %103
  %106 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 15, i32 0
  %107 = trunc i64 %105 to i32
  %108 = shl i32 %107, 14
  %109 = add i32 %108, 131072
  %110 = and i32 %109, -65536
  %111 = or i32 %110, 30
  %112 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %112) #14
  store i32 %111, i32* %11, align 4
  %113 = bitcast %"class.SkSL::OutputStream"* %106 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %114 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %113, align 8
  %115 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %114, i64 3
  %116 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %115, align 8
  call void %116(%"class.SkSL::OutputStream"* %106, i8* nonnull %112, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %112) #14
  %117 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %117)
  store i32 %3, i32* %10, align 4
  %118 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %113, align 8
  %119 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %118, i64 3
  %120 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %119, align 8
  call void %120(%"class.SkSL::OutputStream"* %106, i8* nonnull %117, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %117)
  %121 = load i32*, i32** %86, align 8
  %122 = load i32*, i32** %87, align 8
  %123 = icmp eq i32* %121, %122
  br i1 %123, label %193, label %124

124:                                              ; preds = %102
  %125 = bitcast i32* %9 to i8*
  br label %267

126:                                              ; preds = %189, %96
  %127 = phi i64 [ 0, %96 ], [ %192, %189 ]
  %128 = phi i32* [ null, %96 ], [ %191, %189 ]
  %129 = phi i32* [ null, %96 ], [ %190, %189 ]
  %130 = phi %"struct.SkSL::Type::Field"* [ %91, %96 ], [ %187, %189 ]
  %131 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %130, i64 0, i32 2
  %132 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %131, align 8
  %133 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %132, %"class.SkSL::MemoryLayout"* dereferenceable(4) %2)
  %134 = icmp ult i32* %129, %128
  %135 = ptrtoint i32* %128 to i64
  br i1 %134, label %136, label %139

136:                                              ; preds = %126
  store i32 %133, i32* %129, align 4
  %137 = getelementptr inbounds i32, i32* %129, i64 1
  %138 = ptrtoint i32* %137 to i64
  store i64 %138, i64* %95, align 8
  br label %186

139:                                              ; preds = %126
  %140 = ptrtoint i32* %129 to i64
  %141 = load i64, i64* %97, align 8
  %142 = sub i64 %140, %141
  %143 = ashr exact i64 %142, 2
  %144 = add nsw i64 %143, 1
  %145 = icmp ugt i64 %144, 4611686018427387903
  br i1 %145, label %146, label %148

146:                                              ; preds = %139
  %147 = bitcast %"class.std::__1::vector.382"* %27 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %147) #15
  unreachable

148:                                              ; preds = %139
  %149 = sub i64 %135, %141
  %150 = ashr exact i64 %149, 2
  %151 = icmp ult i64 %150, 2305843009213693951
  br i1 %151, label %152, label %160

152:                                              ; preds = %148
  %153 = ashr exact i64 %149, 1
  %154 = icmp ult i64 %153, %144
  %155 = select i1 %154, i64 %144, i64 %153
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %165, label %157

157:                                              ; preds = %152
  %158 = icmp ugt i64 %155, 4611686018427387903
  br i1 %158, label %159, label %160

159:                                              ; preds = %157
  call void @abort() #15
  unreachable

160:                                              ; preds = %157, %148
  %161 = phi i64 [ %155, %157 ], [ 4611686018427387903, %148 ]
  %162 = shl i64 %161, 2
  %163 = call i8* @_Znwm(i64 %162) #16
  %164 = bitcast i8* %163 to i32*
  br label %165

165:                                              ; preds = %160, %152
  %166 = phi i64 [ %161, %160 ], [ 0, %152 ]
  %167 = phi i32* [ %164, %160 ], [ null, %152 ]
  %168 = getelementptr inbounds i32, i32* %167, i64 %143
  %169 = getelementptr inbounds i32, i32* %167, i64 %166
  %170 = ptrtoint i32* %169 to i64
  store i32 %133, i32* %168, align 4
  %171 = getelementptr inbounds i32, i32* %168, i64 1
  %172 = ptrtoint i32* %171 to i64
  %173 = sub i64 %127, %141
  %174 = ashr exact i64 %173, 2
  %175 = sub nsw i64 0, %174
  %176 = getelementptr inbounds i32, i32* %168, i64 %175
  %177 = ptrtoint i32* %176 to i64
  %178 = icmp sgt i64 %173, 0
  br i1 %178, label %179, label %182

179:                                              ; preds = %165
  %180 = bitcast i32* %176 to i8*
  %181 = inttoptr i64 %141 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %180, i8* align 4 %181, i64 %173, i1 false) #14
  br label %182

182:                                              ; preds = %179, %165
  store i64 %177, i64* %97, align 8
  store i64 %172, i64* %95, align 8
  store i64 %170, i64* %98, align 8
  %183 = icmp eq i64 %141, 0
  br i1 %183, label %186, label %184

184:                                              ; preds = %182
  %185 = inttoptr i64 %141 to i8*
  call void @_ZdlPv(i8* %185) #16
  br label %186

186:                                              ; preds = %136, %182, %184
  %187 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %130, i64 1
  %188 = icmp eq %"struct.SkSL::Type::Field"* %187, %93
  br i1 %188, label %99, label %189

189:                                              ; preds = %186
  %190 = load i32*, i32** %87, align 8
  %191 = load i32*, i32** %88, align 8
  %192 = ptrtoint i32* %190 to i64
  br label %126

193:                                              ; preds = %267, %102
  %194 = bitcast %"struct.SkSL::Type::Field"** %92 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = bitcast %"class.std::__1::vector.19"* %89 to i64*
  %197 = load i64, i64* %196, align 8
  %198 = sub i64 %195, %197
  %199 = sdiv exact i64 %198, 104
  %200 = trunc i64 %199 to i32
  %201 = icmp sgt i32 %200, 0
  br i1 %201, label %202, label %591

202:                                              ; preds = %193
  %203 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 2
  %204 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 0, i32 0, i32 1
  %205 = bitcast %"class.SkSL::String"* %32 to i8*
  %206 = bitcast %"class.SkSL::String"* %33 to i8*
  %207 = bitcast %"class.SkSL::String"* %34 to i8*
  %208 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %209 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %210 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %211 = bitcast %"class.SkSL::String"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %212 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %211, i64 0, i32 1, i32 0
  %213 = bitcast %"class.SkSL::String"* %35 to i8*
  %214 = bitcast %"class.SkSL::String"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %215 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %214, i64 0, i32 1, i32 0
  %216 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = bitcast %"class.SkSL::String"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %218 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %217, i64 0, i32 1, i32 0
  %219 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %220 = bitcast %"class.SkSL::String"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %221 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %220, i64 0, i32 1, i32 0
  %222 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %223 = bitcast %"class.SkSL::String"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %224 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %223, i64 0, i32 1, i32 0
  %225 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %226 = bitcast %"class.SkSL::String"* %37 to i8*
  %227 = bitcast %"class.SkSL::String"* %38 to i8*
  %228 = bitcast %"class.SkSL::String"* %39 to i8*
  %229 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %230 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %231 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %232 = bitcast %"class.SkSL::String"* %39 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %233 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %232, i64 0, i32 1, i32 0
  %234 = bitcast %"class.SkSL::String"* %40 to i8*
  %235 = bitcast %"class.SkSL::String"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %236 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %235, i64 0, i32 1, i32 0
  %237 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %238 = bitcast %"class.SkSL::String"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %239 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %238, i64 0, i32 1, i32 0
  %240 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %241 = bitcast %"class.SkSL::String"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %242 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %241, i64 0, i32 1, i32 0
  %243 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %244 = bitcast %"class.SkSL::String"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %245 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %244, i64 0, i32 1, i32 0
  %246 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %247 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %248 = bitcast i32* %5 to i8*
  %249 = bitcast %"class.SkSL::OutputStream"* %247 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %250 = bitcast i32* %15 to i8*
  %251 = bitcast i32* %14 to i8*
  %252 = bitcast i32* %13 to i8*
  %253 = bitcast i32* %12 to i8*
  %254 = bitcast i32* %6 to i8*
  %255 = bitcast i32* %18 to i8*
  %256 = bitcast i32* %17 to i8*
  %257 = bitcast i32* %16 to i8*
  %258 = bitcast i32* %7 to i8*
  %259 = bitcast i32* %22 to i8*
  %260 = bitcast i32* %21 to i8*
  %261 = bitcast i32* %20 to i8*
  %262 = bitcast i32* %19 to i8*
  %263 = bitcast i32* %8 to i8*
  %264 = bitcast i32* %25 to i8*
  %265 = bitcast i32* %24 to i8*
  %266 = bitcast i32* %23 to i8*
  br label %275

267:                                              ; preds = %124, %267
  %268 = phi i32* [ %121, %124 ], [ %273, %267 ]
  %269 = load i32, i32* %268, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %125)
  store i32 %269, i32* %9, align 4
  %270 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %113, align 8
  %271 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %270, i64 3
  %272 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %271, align 8
  call void %272(%"class.SkSL::OutputStream"* %106, i8* nonnull %125, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %125)
  %273 = getelementptr inbounds i32, i32* %268, i64 1
  %274 = icmp eq i32* %273, %122
  br i1 %274, label %193, label %267

275:                                              ; preds = %202, %581
  %276 = phi i64 [ %197, %202 ], [ %585, %581 ]
  %277 = phi i64 [ 0, %202 ], [ %583, %581 ]
  %278 = phi i64 [ 0, %202 ], [ %582, %581 ]
  %279 = inttoptr i64 %276 to %"struct.SkSL::Type::Field"*
  %280 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %279, i64 %277, i32 2
  %281 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %280, align 8
  %282 = call i64 @_ZN4SkSL12MemoryLayout17LayoutIsSupportedERKNS_4TypeE(%"class.SkSL::Type"* dereferenceable(184) %281)
  %283 = icmp eq i64 %282, 0
  br i1 %283, label %284, label %345

284:                                              ; preds = %275
  %285 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %203, align 8
  %286 = load i32, i32* %204, align 8
  %287 = bitcast %"class.SkSL::String"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %287) #14
  %288 = bitcast %"class.SkSL::String"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %288) #14
  %289 = bitcast %"class.SkSL::Type"** %280 to %"class.SkSL::Symbol"**
  %290 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %289, align 8
  %291 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %290, i64 0, i32 1, i32 0
  %292 = load i8*, i8** %291, align 8
  %293 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %290, i64 0, i32 1, i32 1
  %294 = load i64, i64* %293, align 8
  %295 = icmp ugt i64 %294, -17
  br i1 %295, label %296, label %298

296:                                              ; preds = %284
  %297 = bitcast %"class.SkSL::String"* %30 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %297) #15
  unreachable

298:                                              ; preds = %284
  %299 = icmp ult i64 %294, 23
  br i1 %299, label %308, label %300

300:                                              ; preds = %298
  %301 = add nuw i64 %294, 16
  %302 = and i64 %301, -16
  %303 = call i8* @_Znwm(i64 %302) #16
  %304 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %303, i8** %304, align 8
  %305 = or i64 %302, -9223372036854775808
  %306 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %294, i64* %307, align 8
  br label %313

308:                                              ; preds = %298
  %309 = trunc i64 %294 to i8
  %310 = bitcast %"class.SkSL::String"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %311 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %310, i64 0, i32 1, i32 0
  store i8 %309, i8* %311, align 1
  %312 = icmp eq i64 %294, 0
  br i1 %312, label %315, label %313

313:                                              ; preds = %308, %300
  %314 = phi i8* [ %303, %300 ], [ %288, %308 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %314, i8* align 1 %292, i64 %294, i1 false) #14
  br label %315

315:                                              ; preds = %308, %313
  %316 = phi i8* [ %288, %308 ], [ %314, %313 ]
  %317 = getelementptr inbounds i8, i8* %316, i64 %294
  store i8 0, i8* %317, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %29, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %30) #14
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %28, %"class.SkSL::String"* nonnull %29, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0)) #14
  %318 = bitcast %"class.SkSL::ErrorReporter"* %285 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %319 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %318, align 8
  %320 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %319, i64 2
  %321 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %320, align 8
  call void %321(%"class.SkSL::ErrorReporter"* %285, i32 %286, %"class.SkSL::String"* nonnull %28) #14
  %322 = bitcast %"class.SkSL::String"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %323 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %322, i64 0, i32 1, i32 0
  %324 = load i8, i8* %323, align 1
  %325 = icmp slt i8 %324, 0
  br i1 %325, label %326, label %329

326:                                              ; preds = %315
  %327 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %328 = load i8*, i8** %327, align 8
  call void @_ZdlPv(i8* %328) #16
  br label %329

329:                                              ; preds = %315, %326
  %330 = bitcast %"class.SkSL::String"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %331 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %330, i64 0, i32 1, i32 0
  %332 = load i8, i8* %331, align 1
  %333 = icmp slt i8 %332, 0
  br i1 %333, label %334, label %337

334:                                              ; preds = %329
  %335 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %336 = load i8*, i8** %335, align 8
  call void @_ZdlPv(i8* %336) #16
  br label %337

337:                                              ; preds = %329, %334
  %338 = bitcast %"class.SkSL::String"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %339 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %338, i64 0, i32 1, i32 0
  %340 = load i8, i8* %339, align 1
  %341 = icmp slt i8 %340, 0
  br i1 %341, label %342, label %580

342:                                              ; preds = %337
  %343 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %344 = load i8*, i8** %343, align 8
  call void @_ZdlPv(i8* %344) #16
  br label %580

345:                                              ; preds = %275
  %346 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %280, align 8
  %347 = call i64 @_ZNK4SkSL12MemoryLayout4sizeERKNS_4TypeE(%"class.SkSL::MemoryLayout"* %2, %"class.SkSL::Type"* dereferenceable(184) %346)
  %348 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %280, align 8
  %349 = call i64 @_ZNK4SkSL12MemoryLayout9alignmentERKNS_4TypeE(%"class.SkSL::MemoryLayout"* %2, %"class.SkSL::Type"* dereferenceable(184) %348)
  %350 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %279, i64 %277, i32 0, i32 0
  %351 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %279, i64 %277, i32 0, i32 0, i32 2
  %352 = load i32, i32* %351, align 8
  %353 = icmp sgt i32 %352, -1
  br i1 %353, label %354, label %474

354:                                              ; preds = %345
  %355 = trunc i64 %278 to i32
  %356 = icmp slt i32 %352, %355
  br i1 %356, label %357, label %412

357:                                              ; preds = %354
  %358 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %203, align 8
  %359 = load i32, i32* %204, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %205) #14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %206) #14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %207) #14
  %360 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %279, i64 %277, i32 1, i32 0
  %361 = load i8*, i8** %360, align 8
  %362 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %279, i64 %277, i32 1, i32 1
  %363 = load i64, i64* %362, align 8
  %364 = icmp ugt i64 %363, -17
  br i1 %364, label %365, label %367

365:                                              ; preds = %357
  %366 = bitcast %"class.SkSL::String"* %34 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %366) #15
  unreachable

367:                                              ; preds = %357
  %368 = icmp ult i64 %363, 23
  br i1 %368, label %374, label %369

369:                                              ; preds = %367
  %370 = add nuw i64 %363, 16
  %371 = and i64 %370, -16
  %372 = call i8* @_Znwm(i64 %371) #16
  store i8* %372, i8** %208, align 8
  %373 = or i64 %371, -9223372036854775808
  store i64 %373, i64* %209, align 8
  store i64 %363, i64* %210, align 8
  br label %377

374:                                              ; preds = %367
  %375 = trunc i64 %363 to i8
  store i8 %375, i8* %212, align 1
  %376 = icmp eq i64 %363, 0
  br i1 %376, label %379, label %377

377:                                              ; preds = %374, %369
  %378 = phi i8* [ %372, %369 ], [ %207, %374 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %378, i8* align 1 %361, i64 %363, i1 false) #14
  br label %379

379:                                              ; preds = %374, %377
  %380 = phi i8* [ %207, %374 ], [ %378, %377 ]
  %381 = getelementptr inbounds i8, i8* %380, i64 %363
  store i8 0, i8* %381, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %33, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %34) #14
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %32, %"class.SkSL::String"* nonnull %33, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.3, i64 0, i64 0)) #14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %213) #14
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %35, i32 %355) #14
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %31, %"class.SkSL::String"* nonnull %32, %"class.SkSL::String"* nonnull dereferenceable(24) %35) #14
  %382 = bitcast %"class.SkSL::ErrorReporter"* %358 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %383 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %382, align 8
  %384 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %383, i64 2
  %385 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %384, align 8
  call void %385(%"class.SkSL::ErrorReporter"* %358, i32 %359, %"class.SkSL::String"* nonnull %31) #14
  %386 = load i8, i8* %215, align 1
  %387 = icmp slt i8 %386, 0
  br i1 %387, label %388, label %390

388:                                              ; preds = %379
  %389 = load i8*, i8** %216, align 8
  call void @_ZdlPv(i8* %389) #16
  br label %390

390:                                              ; preds = %379, %388
  %391 = load i8, i8* %218, align 1
  %392 = icmp slt i8 %391, 0
  br i1 %392, label %393, label %395

393:                                              ; preds = %390
  %394 = load i8*, i8** %219, align 8
  call void @_ZdlPv(i8* %394) #16
  br label %395

395:                                              ; preds = %390, %393
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %213) #14
  %396 = load i8, i8* %221, align 1
  %397 = icmp slt i8 %396, 0
  br i1 %397, label %398, label %400

398:                                              ; preds = %395
  %399 = load i8*, i8** %222, align 8
  call void @_ZdlPv(i8* %399) #16
  br label %400

400:                                              ; preds = %395, %398
  %401 = load i8, i8* %224, align 1
  %402 = icmp slt i8 %401, 0
  br i1 %402, label %403, label %405

403:                                              ; preds = %400
  %404 = load i8*, i8** %225, align 8
  call void @_ZdlPv(i8* %404) #16
  br label %405

405:                                              ; preds = %400, %403
  %406 = load i8, i8* %212, align 1
  %407 = icmp slt i8 %406, 0
  br i1 %407, label %408, label %410

408:                                              ; preds = %405
  %409 = load i8*, i8** %208, align 8
  call void @_ZdlPv(i8* %409) #16
  br label %410

410:                                              ; preds = %405, %408
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %207) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %206) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %205) #14
  %411 = load i32, i32* %351, align 8
  br label %412

412:                                              ; preds = %410, %354
  %413 = phi i32 [ %411, %410 ], [ %352, %354 ]
  %414 = sext i32 %413 to i64
  %415 = urem i64 %414, %349
  %416 = icmp eq i64 %415, 0
  br i1 %416, label %480, label %417

417:                                              ; preds = %412
  %418 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %203, align 8
  %419 = load i32, i32* %204, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %226) #14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %227) #14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %228) #14
  %420 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %279, i64 %277, i32 1, i32 0
  %421 = load i8*, i8** %420, align 8
  %422 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %279, i64 %277, i32 1, i32 1
  %423 = load i64, i64* %422, align 8
  %424 = icmp ugt i64 %423, -17
  br i1 %424, label %425, label %427

425:                                              ; preds = %417
  %426 = bitcast %"class.SkSL::String"* %39 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %426) #15
  unreachable

427:                                              ; preds = %417
  %428 = icmp ult i64 %423, 23
  br i1 %428, label %434, label %429

429:                                              ; preds = %427
  %430 = add nuw i64 %423, 16
  %431 = and i64 %430, -16
  %432 = call i8* @_Znwm(i64 %431) #16
  store i8* %432, i8** %229, align 8
  %433 = or i64 %431, -9223372036854775808
  store i64 %433, i64* %230, align 8
  store i64 %423, i64* %231, align 8
  br label %437

434:                                              ; preds = %427
  %435 = trunc i64 %423 to i8
  store i8 %435, i8* %233, align 1
  %436 = icmp eq i64 %423, 0
  br i1 %436, label %439, label %437

437:                                              ; preds = %434, %429
  %438 = phi i8* [ %432, %429 ], [ %228, %434 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %438, i8* align 1 %421, i64 %423, i1 false) #14
  br label %439

439:                                              ; preds = %434, %437
  %440 = phi i8* [ %228, %434 ], [ %438, %437 ]
  %441 = getelementptr inbounds i8, i8* %440, i64 %423
  store i8 0, i8* %441, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %38, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %39) #14
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %37, %"class.SkSL::String"* nonnull %38, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.4, i64 0, i64 0)) #14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %234) #14
  %442 = trunc i64 %349 to i32
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %40, i32 %442) #14
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %36, %"class.SkSL::String"* nonnull %37, %"class.SkSL::String"* nonnull dereferenceable(24) %40) #14
  %443 = bitcast %"class.SkSL::ErrorReporter"* %418 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %444 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %443, align 8
  %445 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %444, i64 2
  %446 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %445, align 8
  call void %446(%"class.SkSL::ErrorReporter"* %418, i32 %419, %"class.SkSL::String"* nonnull %36) #14
  %447 = load i8, i8* %236, align 1
  %448 = icmp slt i8 %447, 0
  br i1 %448, label %449, label %451

449:                                              ; preds = %439
  %450 = load i8*, i8** %237, align 8
  call void @_ZdlPv(i8* %450) #16
  br label %451

451:                                              ; preds = %439, %449
  %452 = load i8, i8* %239, align 1
  %453 = icmp slt i8 %452, 0
  br i1 %453, label %454, label %456

454:                                              ; preds = %451
  %455 = load i8*, i8** %240, align 8
  call void @_ZdlPv(i8* %455) #16
  br label %456

456:                                              ; preds = %451, %454
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %234) #14
  %457 = load i8, i8* %242, align 1
  %458 = icmp slt i8 %457, 0
  br i1 %458, label %459, label %461

459:                                              ; preds = %456
  %460 = load i8*, i8** %243, align 8
  call void @_ZdlPv(i8* %460) #16
  br label %461

461:                                              ; preds = %456, %459
  %462 = load i8, i8* %245, align 1
  %463 = icmp slt i8 %462, 0
  br i1 %463, label %464, label %466

464:                                              ; preds = %461
  %465 = load i8*, i8** %246, align 8
  call void @_ZdlPv(i8* %465) #16
  br label %466

466:                                              ; preds = %461, %464
  %467 = load i8, i8* %233, align 1
  %468 = icmp slt i8 %467, 0
  br i1 %468, label %469, label %471

469:                                              ; preds = %466
  %470 = load i8*, i8** %229, align 8
  call void @_ZdlPv(i8* %470) #16
  br label %471

471:                                              ; preds = %466, %469
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %228) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %227) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %226) #14
  %472 = load i32, i32* %351, align 8
  %473 = sext i32 %472 to i64
  br label %480

474:                                              ; preds = %345
  %475 = urem i64 %278, %349
  %476 = icmp eq i64 %475, 0
  %477 = sub i64 %349, %475
  %478 = select i1 %476, i64 0, i64 %477
  %479 = add i64 %478, %278
  br label %480

480:                                              ; preds = %471, %412, %474
  %481 = phi i64 [ %479, %474 ], [ %414, %412 ], [ %473, %471 ]
  %482 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %279, i64 %277, i32 1, i32 0
  %483 = load i8*, i8** %482, align 8
  %484 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %279, i64 %277, i32 1, i32 1
  %485 = load i64, i64* %484, align 8
  %486 = trunc i64 %277 to i32
  call void @_ZN4SkSL18SPIRVCodeGenerator16writeInstructionE6SpvOp_iiNS_14StringFragmentERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 6, i32 %3, i32 %486, i8* %483, i64 %485, %"class.SkSL::OutputStream"* dereferenceable(8) %79)
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeLayoutERKNS_6LayoutEji(%"class.SkSL::SPIRVCodeGenerator"* %0, %"struct.SkSL::Layout"* dereferenceable(72) %350, i32 %3, i32 %486)
  %487 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %279, i64 %277, i32 0, i32 0, i32 6
  %488 = load i32, i32* %487, align 8
  %489 = icmp slt i32 %488, 0
  br i1 %489, label %490, label %507

490:                                              ; preds = %480
  %491 = trunc i64 %481 to i32
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %248) #14
  store i32 327752, i32* %5, align 4
  %492 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %249, align 8
  %493 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %492, i64 3
  %494 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %493, align 8
  call void %494(%"class.SkSL::OutputStream"* %247, i8* nonnull %248, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %248) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %250) #14
  store i32 %3, i32* %15, align 4
  %495 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %249, align 8
  %496 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %495, i64 3
  %497 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %496, align 8
  call void %497(%"class.SkSL::OutputStream"* %247, i8* nonnull %250, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %250) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %251) #14
  store i32 %486, i32* %14, align 4
  %498 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %249, align 8
  %499 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %498, i64 3
  %500 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %499, align 8
  call void %500(%"class.SkSL::OutputStream"* %247, i8* nonnull %251, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %251) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %252) #14
  store i32 35, i32* %13, align 4
  %501 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %249, align 8
  %502 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %501, i64 3
  %503 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %502, align 8
  call void %503(%"class.SkSL::OutputStream"* %247, i8* nonnull %252, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %252) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %253) #14
  store i32 %491, i32* %12, align 4
  %504 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %249, align 8
  %505 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %504, i64 3
  %506 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %505, align 8
  call void %506(%"class.SkSL::OutputStream"* %247, i8* nonnull %253, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %253) #14
  br label %507

507:                                              ; preds = %490, %480
  %508 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %280, align 8
  %509 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %508, i64 0, i32 3
  %510 = load i32, i32* %509, align 8
  %511 = icmp eq i32 %510, 4
  br i1 %511, label %512, label %544

512:                                              ; preds = %507
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %254) #14
  store i32 262216, i32* %6, align 4
  %513 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %249, align 8
  %514 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %513, i64 3
  %515 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %514, align 8
  call void %515(%"class.SkSL::OutputStream"* %247, i8* nonnull %254, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %254) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %255) #14
  store i32 %3, i32* %18, align 4
  %516 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %249, align 8
  %517 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %516, i64 3
  %518 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %517, align 8
  call void %518(%"class.SkSL::OutputStream"* %247, i8* nonnull %255, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %255) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %256) #14
  store i32 %486, i32* %17, align 4
  %519 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %249, align 8
  %520 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %519, i64 3
  %521 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %520, align 8
  call void %521(%"class.SkSL::OutputStream"* %247, i8* nonnull %256, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %256) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %257) #14
  store i32 5, i32* %16, align 4
  %522 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %249, align 8
  %523 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %522, i64 3
  %524 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %523, align 8
  call void %524(%"class.SkSL::OutputStream"* %247, i8* nonnull %257, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %257) #14
  %525 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %280, align 8
  %526 = call i64 @_ZNK4SkSL12MemoryLayout6strideERKNS_4TypeE(%"class.SkSL::MemoryLayout"* %2, %"class.SkSL::Type"* dereferenceable(184) %525)
  %527 = trunc i64 %526 to i32
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %258) #14
  store i32 327752, i32* %7, align 4
  %528 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %249, align 8
  %529 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %528, i64 3
  %530 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %529, align 8
  call void %530(%"class.SkSL::OutputStream"* %247, i8* nonnull %258, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %258) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %259) #14
  store i32 %3, i32* %22, align 4
  %531 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %249, align 8
  %532 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %531, i64 3
  %533 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %532, align 8
  call void %533(%"class.SkSL::OutputStream"* %247, i8* nonnull %259, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %259) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %260) #14
  store i32 %486, i32* %21, align 4
  %534 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %249, align 8
  %535 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %534, i64 3
  %536 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %535, align 8
  call void %536(%"class.SkSL::OutputStream"* %247, i8* nonnull %260, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %260) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %261) #14
  store i32 7, i32* %20, align 4
  %537 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %249, align 8
  %538 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %537, i64 3
  %539 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %538, align 8
  call void %539(%"class.SkSL::OutputStream"* %247, i8* nonnull %261, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %261) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %262) #14
  store i32 %527, i32* %19, align 4
  %540 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %249, align 8
  %541 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %540, i64 3
  %542 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %541, align 8
  call void %542(%"class.SkSL::OutputStream"* %247, i8* nonnull %262, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %262) #14
  %543 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %280, align 8
  br label %544

544:                                              ; preds = %512, %507
  %545 = phi %"class.SkSL::Type"* [ %543, %512 ], [ %508, %507 ]
  br label %546

546:                                              ; preds = %546, %544
  %547 = phi %"class.SkSL::Type"* [ %545, %544 ], [ %549, %546 ]
  %548 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %547, i64 0, i32 6
  %549 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %548, align 8
  %550 = icmp eq %"class.SkSL::Type"* %549, null
  br i1 %550, label %551, label %546

551:                                              ; preds = %546
  %552 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %547, i64 0, i32 16
  %553 = load i8, i8* %552, align 8, !range !2
  %554 = icmp eq i8 %553, 0
  br i1 %554, label %555, label %569

555:                                              ; preds = %551
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %263) #14
  store i32 262216, i32* %8, align 4
  %556 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %249, align 8
  %557 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %556, i64 3
  %558 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %557, align 8
  call void %558(%"class.SkSL::OutputStream"* %247, i8* nonnull %263, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %263) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %264) #14
  store i32 %3, i32* %25, align 4
  %559 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %249, align 8
  %560 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %559, i64 3
  %561 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %560, align 8
  call void %561(%"class.SkSL::OutputStream"* %247, i8* nonnull %264, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %264) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %265) #14
  store i32 %486, i32* %24, align 4
  %562 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %249, align 8
  %563 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %562, i64 3
  %564 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %563, align 8
  call void %564(%"class.SkSL::OutputStream"* %247, i8* nonnull %265, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %265) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %266) #14
  store i32 0, i32* %23, align 4
  %565 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %249, align 8
  %566 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %565, i64 3
  %567 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %566, align 8
  call void %567(%"class.SkSL::OutputStream"* %247, i8* nonnull %266, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %266) #14
  %568 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %280, align 8
  br label %569

569:                                              ; preds = %551, %555
  %570 = phi %"class.SkSL::Type"* [ %545, %551 ], [ %568, %555 ]
  %571 = add i64 %481, %347
  %572 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %570, i64 0, i32 3
  %573 = load i32, i32* %572, align 8
  switch i32 %573, label %581 [
    i32 0, label %574
    i32 9, label %574
  ]

574:                                              ; preds = %569, %569
  %575 = urem i64 %571, %349
  %576 = icmp eq i64 %575, 0
  br i1 %576, label %581, label %577

577:                                              ; preds = %574
  %578 = add i64 %571, %349
  %579 = sub i64 %578, %575
  br label %581

580:                                              ; preds = %342, %337
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %288) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %287) #14
  br label %591

581:                                              ; preds = %569, %574, %577
  %582 = phi i64 [ %571, %574 ], [ %579, %577 ], [ %571, %569 ]
  %583 = add nuw nsw i64 %277, 1
  %584 = load i64, i64* %194, align 8
  %585 = load i64, i64* %196, align 8
  %586 = sub i64 %584, %585
  %587 = sdiv exact i64 %586, 104
  %588 = shl i64 %587, 32
  %589 = ashr exact i64 %588, 32
  %590 = icmp slt i64 %583, %589
  br i1 %590, label %275, label %591

591:                                              ; preds = %581, %193, %580
  %592 = load i32*, i32** %86, align 8
  %593 = icmp eq i32* %592, null
  br i1 %593, label %597, label %594

594:                                              ; preds = %591
  %595 = ptrtoint i32* %592 to i64
  store i64 %595, i64* %95, align 8
  %596 = bitcast i32* %592 to i8*
  call void @_ZdlPv(i8* %596) #16
  br label %597

597:                                              ; preds = %591, %594
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %85) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::Type"* dereferenceable(184), %"class.SkSL::MemoryLayout"* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca %"class.std::__1::tuple.652", align 8
  %20 = alloca %"class.std::__1::tuple.633", align 1
  %21 = alloca i32, align 4
  %22 = alloca %"class.std::__1::tuple.652", align 8
  %23 = alloca %"class.std::__1::tuple.633", align 1
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = alloca i32, align 4
  %42 = alloca i32, align 4
  %43 = alloca i32, align 4
  %44 = alloca i32, align 4
  %45 = alloca i32, align 4
  %46 = alloca i32, align 4
  %47 = alloca i32, align 4
  %48 = alloca i32, align 4
  %49 = alloca i32, align 4
  %50 = alloca i32, align 4
  %51 = alloca i32, align 4
  %52 = alloca i32, align 4
  %53 = alloca i32, align 4
  %54 = alloca i32, align 4
  %55 = alloca i32, align 4
  %56 = alloca i32, align 4
  %57 = alloca <2 x i64>, align 16
  %58 = bitcast <2 x i64>* %57 to %"struct.SkSL::StringFragment"*
  %59 = alloca <2 x i64>, align 16
  %60 = bitcast <2 x i64>* %59 to %"struct.SkSL::StringFragment"*
  %61 = alloca <2 x i64>, align 16
  %62 = bitcast <2 x i64>* %61 to %"struct.SkSL::StringFragment"*
  %63 = alloca i32, align 4
  %64 = alloca i32, align 4
  %65 = alloca i32, align 4
  %66 = alloca <2 x i64>, align 16
  %67 = bitcast <2 x i64>* %66 to %"struct.SkSL::StringFragment"*
  %68 = alloca <2 x i64>, align 16
  %69 = bitcast <2 x i64>* %68 to %"struct.SkSL::StringFragment"*
  %70 = alloca i32, align 4
  %71 = alloca i32, align 4
  %72 = alloca i32, align 4
  %73 = alloca <2 x i64>, align 16
  %74 = bitcast <2 x i64>* %73 to %"struct.SkSL::StringFragment"*
  %75 = alloca <2 x i64>, align 16
  %76 = bitcast <2 x i64>* %75 to %"struct.SkSL::StringFragment"*
  %77 = alloca <2 x i64>, align 16
  %78 = bitcast <2 x i64>* %77 to %"struct.SkSL::StringFragment"*
  %79 = alloca i32, align 4
  %80 = alloca %"class.SkSL::String", align 8
  %81 = alloca %"class.SkSL::String", align 8
  %82 = alloca %"class.SkSL::String", align 8
  %83 = alloca %"class.SkSL::String", align 8
  %84 = alloca %"class.SkSL::String", align 8
  %85 = alloca %"class.SkSL::Literal", align 8
  %86 = tail call dereferenceable(184) %"class.SkSL::Type"* @_ZN4SkSL18SPIRVCodeGenerator13getActualTypeERKNS_4TypeE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %1)
  %87 = bitcast %"class.SkSL::String"* %80 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %87) #14
  %88 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %80, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %80, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %90 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %80, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %91 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %86, i64 0, i32 0, i32 1, i32 0
  %92 = bitcast %"class.SkSL::String"* %80 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %92, i8 -86, i64 24, i1 false)
  %93 = load i8*, i8** %91, align 8
  %94 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %86, i64 0, i32 0, i32 1, i32 1
  %95 = load i64, i64* %94, align 8
  %96 = icmp ugt i64 %95, -17
  br i1 %96, label %97, label %99

97:                                               ; preds = %3
  %98 = bitcast %"class.SkSL::String"* %80 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %98) #15
  unreachable

99:                                               ; preds = %3
  %100 = icmp ult i64 %95, 23
  br i1 %100, label %106, label %101

101:                                              ; preds = %99
  %102 = add nuw i64 %95, 16
  %103 = and i64 %102, -16
  %104 = tail call i8* @_Znwm(i64 %103) #16
  store i8* %104, i8** %88, align 8
  %105 = or i64 %103, -9223372036854775808
  store i64 %105, i64* %90, align 8
  store i64 %95, i64* %89, align 8
  br label %111

106:                                              ; preds = %99
  %107 = trunc i64 %95 to i8
  %108 = bitcast %"class.SkSL::String"* %80 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %109 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %108, i64 0, i32 1, i32 0
  store i8 %107, i8* %109, align 1
  %110 = icmp eq i64 %95, 0
  br i1 %110, label %113, label %111

111:                                              ; preds = %106, %101
  %112 = phi i8* [ %104, %101 ], [ %87, %106 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %112, i8* align 1 %93, i64 %95, i1 false) #14
  br label %113

113:                                              ; preds = %106, %111
  %114 = phi i8* [ %87, %106 ], [ %112, %111 ]
  %115 = getelementptr inbounds i8, i8* %114, i64 %95
  store i8 0, i8* %115, align 1
  %116 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %86, i64 0, i32 3
  %117 = load i32, i32* %116, align 8
  switch i32 %117, label %131 [
    i32 9, label %118
    i32 0, label %118
  ]

118:                                              ; preds = %113, %113
  %119 = bitcast %"class.SkSL::String"* %81 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %119) #14
  %120 = getelementptr inbounds %"class.SkSL::MemoryLayout", %"class.SkSL::MemoryLayout"* %2, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %81, i32 %121) #14
  %122 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* nonnull %80, %"class.SkSL::String"* nonnull dereferenceable(24) %81) #14
  %123 = bitcast %"class.SkSL::String"* %81 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %123, i64 0, i32 1, i32 0
  %125 = load i8, i8* %124, align 1
  %126 = icmp slt i8 %125, 0
  br i1 %126, label %127, label %130

127:                                              ; preds = %118
  %128 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = load i8*, i8** %128, align 8
  call void @_ZdlPv(i8* %129) #16
  br label %130

130:                                              ; preds = %118, %127
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %119) #14
  br label %131

131:                                              ; preds = %113, %130
  %132 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 12, i32 0
  %133 = call %"struct.std::__1::__hash_node_base.218"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringEjEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_S9_S7_Lb1EEENS_9allocatorIS4_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEERKT_(%"class.std::__1::__hash_table.214"* %132, %"class.SkSL::String"* nonnull dereferenceable(24) %80) #14
  %134 = icmp eq %"struct.std::__1::__hash_node_base.218"* %133, null
  br i1 %134, label %135, label %678

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %137 = load i32, i32* %136, align 8
  %138 = add i32 %137, 1
  store i32 %138, i32* %136, align 8
  %139 = load i32, i32* %116, align 8
  switch i32 %139, label %670 [
    i32 8, label %140
    i32 1, label %305
    i32 11, label %324
    i32 4, label %350
    i32 9, label %375
    i32 0, label %376
    i32 6, label %548
    i32 7, label %581
    i32 10, label %592
    i32 12, label %659
  ]

140:                                              ; preds = %135
  %141 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %86, i64 0, i32 4
  %142 = load i32, i32* %141, align 4
  %143 = icmp eq i32 %142, 3
  br i1 %143, label %144, label %155

144:                                              ; preds = %140
  %145 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 15, i32 0
  %146 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %146) #14
  store i32 131092, i32* %18, align 4
  %147 = bitcast %"class.SkSL::OutputStream"* %145 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %148 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %147, align 8
  %149 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %148, i64 3
  %150 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %149, align 8
  call void %150(%"class.SkSL::OutputStream"* %145, i8* nonnull %146, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %146) #14
  %151 = bitcast i32* %79 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %151) #14
  store i32 %137, i32* %79, align 4
  %152 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %147, align 8
  %153 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %152, i64 3
  %154 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %153, align 8
  call void %154(%"class.SkSL::OutputStream"* %145, i8* nonnull %151, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %151) #14
  br label %670

155:                                              ; preds = %140
  %156 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 1
  %157 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %156, align 8
  %158 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %157, i64 0, i32 0, i32 8, i32 0, i32 0, i32 0
  %159 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %158, align 8
  %160 = bitcast <2 x i64>* %77 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %160) #14
  %161 = bitcast i8** %91 to <2 x i64>*
  %162 = load <2 x i64>, <2 x i64>* %161, align 8
  store <2 x i64> %162, <2 x i64>* %77, align 16
  %163 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %159, i64 0, i32 0, i32 1, i32 0
  %164 = load i8*, i8** %163, align 8
  %165 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %159, i64 0, i32 0, i32 1, i32 1
  %166 = load i64, i64* %165, align 8
  %167 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %78, i8* %164, i64 %166) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %160) #14
  br i1 %167, label %192, label %168

168:                                              ; preds = %155
  %169 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %156, align 8
  %170 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %169, i64 0, i32 0, i32 16, i32 0, i32 0, i32 0
  %171 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %170, align 8
  %172 = bitcast <2 x i64>* %75 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %172) #14
  %173 = bitcast i8** %91 to <2 x i64>*
  %174 = load <2 x i64>, <2 x i64>* %173, align 8
  store <2 x i64> %174, <2 x i64>* %75, align 16
  %175 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %171, i64 0, i32 0, i32 1, i32 0
  %176 = load i8*, i8** %175, align 8
  %177 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %171, i64 0, i32 0, i32 1, i32 1
  %178 = load i64, i64* %177, align 8
  %179 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %76, i8* %176, i64 %178) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %172) #14
  br i1 %179, label %192, label %180

180:                                              ; preds = %168
  %181 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %156, align 8
  %182 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %181, i64 0, i32 0, i32 31, i32 0, i32 0, i32 0
  %183 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %182, align 8
  %184 = bitcast <2 x i64>* %73 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %184) #14
  %185 = bitcast i8** %91 to <2 x i64>*
  %186 = load <2 x i64>, <2 x i64>* %185, align 8
  store <2 x i64> %186, <2 x i64>* %73, align 16
  %187 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %183, i64 0, i32 0, i32 1, i32 0
  %188 = load i8*, i8** %187, align 8
  %189 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %183, i64 0, i32 0, i32 1, i32 1
  %190 = load i64, i64* %189, align 8
  %191 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %74, i8* %188, i64 %190) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %184) #14
  br i1 %191, label %192, label %211

192:                                              ; preds = %180, %168, %155
  %193 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 15, i32 0
  %194 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %194) #14
  store i32 262165, i32* %17, align 4
  %195 = bitcast %"class.SkSL::OutputStream"* %193 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %196 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %195, align 8
  %197 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %196, i64 3
  %198 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %197, align 8
  call void %198(%"class.SkSL::OutputStream"* %193, i8* nonnull %194, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %194) #14
  %199 = bitcast i32* %72 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %199) #14
  store i32 %137, i32* %72, align 4
  %200 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %195, align 8
  %201 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %200, i64 3
  %202 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %201, align 8
  call void %202(%"class.SkSL::OutputStream"* %193, i8* nonnull %199, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %199) #14
  %203 = bitcast i32* %71 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %203) #14
  store i32 32, i32* %71, align 4
  %204 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %195, align 8
  %205 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %204, i64 3
  %206 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %205, align 8
  call void %206(%"class.SkSL::OutputStream"* %193, i8* nonnull %203, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %203) #14
  %207 = bitcast i32* %70 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %207) #14
  store i32 1, i32* %70, align 4
  %208 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %195, align 8
  %209 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %208, i64 3
  %210 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %209, align 8
  call void %210(%"class.SkSL::OutputStream"* %193, i8* nonnull %207, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %207) #14
  br label %670

211:                                              ; preds = %180
  %212 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %156, align 8
  %213 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %212, i64 0, i32 0, i32 12, i32 0, i32 0, i32 0
  %214 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %213, align 8
  %215 = bitcast <2 x i64>* %68 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %215) #14
  %216 = bitcast i8** %91 to <2 x i64>*
  %217 = load <2 x i64>, <2 x i64>* %216, align 8
  store <2 x i64> %217, <2 x i64>* %68, align 16
  %218 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %214, i64 0, i32 0, i32 1, i32 0
  %219 = load i8*, i8** %218, align 8
  %220 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %214, i64 0, i32 0, i32 1, i32 1
  %221 = load i64, i64* %220, align 8
  %222 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %69, i8* %219, i64 %221) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %215) #14
  br i1 %222, label %235, label %223

223:                                              ; preds = %211
  %224 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %156, align 8
  %225 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %224, i64 0, i32 0, i32 20, i32 0, i32 0, i32 0
  %226 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %225, align 8
  %227 = bitcast <2 x i64>* %66 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %227) #14
  %228 = bitcast i8** %91 to <2 x i64>*
  %229 = load <2 x i64>, <2 x i64>* %228, align 8
  store <2 x i64> %229, <2 x i64>* %66, align 16
  %230 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %226, i64 0, i32 0, i32 1, i32 0
  %231 = load i8*, i8** %230, align 8
  %232 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %226, i64 0, i32 0, i32 1, i32 1
  %233 = load i64, i64* %232, align 8
  %234 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %67, i8* %231, i64 %233) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %227) #14
  br i1 %234, label %235, label %254

235:                                              ; preds = %223, %211
  %236 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 15, i32 0
  %237 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %237) #14
  store i32 262165, i32* %16, align 4
  %238 = bitcast %"class.SkSL::OutputStream"* %236 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %239 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %238, align 8
  %240 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %239, i64 3
  %241 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %240, align 8
  call void %241(%"class.SkSL::OutputStream"* %236, i8* nonnull %237, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %237) #14
  %242 = bitcast i32* %65 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %242) #14
  store i32 %137, i32* %65, align 4
  %243 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %238, align 8
  %244 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %243, i64 3
  %245 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %244, align 8
  call void %245(%"class.SkSL::OutputStream"* %236, i8* nonnull %242, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %242) #14
  %246 = bitcast i32* %64 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %246) #14
  store i32 32, i32* %64, align 4
  %247 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %238, align 8
  %248 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %247, i64 3
  %249 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %248, align 8
  call void %249(%"class.SkSL::OutputStream"* %236, i8* nonnull %246, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %246) #14
  %250 = bitcast i32* %63 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %250) #14
  store i32 0, i32* %63, align 4
  %251 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %238, align 8
  %252 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %251, i64 3
  %253 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %252, align 8
  call void %253(%"class.SkSL::OutputStream"* %236, i8* nonnull %250, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %250) #14
  br label %670

254:                                              ; preds = %223
  %255 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %156, align 8
  %256 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %255, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %257 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %256, align 8
  %258 = bitcast <2 x i64>* %61 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %258) #14
  %259 = bitcast i8** %91 to <2 x i64>*
  %260 = load <2 x i64>, <2 x i64>* %259, align 8
  store <2 x i64> %260, <2 x i64>* %61, align 16
  %261 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %257, i64 0, i32 0, i32 1, i32 0
  %262 = load i8*, i8** %261, align 8
  %263 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %257, i64 0, i32 0, i32 1, i32 1
  %264 = load i64, i64* %263, align 8
  %265 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %62, i8* %262, i64 %264) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %258) #14
  br i1 %265, label %290, label %266

266:                                              ; preds = %254
  %267 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %156, align 8
  %268 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %267, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %269 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %268, align 8
  %270 = bitcast <2 x i64>* %59 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %270) #14
  %271 = bitcast i8** %91 to <2 x i64>*
  %272 = load <2 x i64>, <2 x i64>* %271, align 8
  store <2 x i64> %272, <2 x i64>* %59, align 16
  %273 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %269, i64 0, i32 0, i32 1, i32 0
  %274 = load i8*, i8** %273, align 8
  %275 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %269, i64 0, i32 0, i32 1, i32 1
  %276 = load i64, i64* %275, align 8
  %277 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %60, i8* %274, i64 %276) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %270) #14
  br i1 %277, label %290, label %278

278:                                              ; preds = %266
  %279 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %156, align 8
  %280 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %279, i64 0, i32 0, i32 30, i32 0, i32 0, i32 0
  %281 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %280, align 8
  %282 = bitcast <2 x i64>* %57 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %282) #14
  %283 = bitcast i8** %91 to <2 x i64>*
  %284 = load <2 x i64>, <2 x i64>* %283, align 8
  store <2 x i64> %284, <2 x i64>* %57, align 16
  %285 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %281, i64 0, i32 0, i32 1, i32 0
  %286 = load i8*, i8** %285, align 8
  %287 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %281, i64 0, i32 0, i32 1, i32 1
  %288 = load i64, i64* %287, align 8
  %289 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %58, i8* %286, i64 %288) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %282) #14
  br i1 %289, label %290, label %670

290:                                              ; preds = %278, %266, %254
  %291 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 15, i32 0
  %292 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %292) #14
  store i32 196630, i32* %15, align 4
  %293 = bitcast %"class.SkSL::OutputStream"* %291 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %294 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %293, align 8
  %295 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %294, i64 3
  %296 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %295, align 8
  call void %296(%"class.SkSL::OutputStream"* %291, i8* nonnull %292, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %292) #14
  %297 = bitcast i32* %56 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %297) #14
  store i32 %137, i32* %56, align 4
  %298 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %293, align 8
  %299 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %298, i64 3
  %300 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %299, align 8
  call void %300(%"class.SkSL::OutputStream"* %291, i8* nonnull %297, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %297) #14
  %301 = bitcast i32* %55 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %301) #14
  store i32 32, i32* %55, align 4
  %302 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %293, align 8
  %303 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %302, i64 3
  %304 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %303, align 8
  call void %304(%"class.SkSL::OutputStream"* %291, i8* nonnull %301, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %301) #14
  br label %670

305:                                              ; preds = %135
  %306 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 15, i32 0
  %307 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %307) #14
  store i32 262165, i32* %14, align 4
  %308 = bitcast %"class.SkSL::OutputStream"* %306 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %309 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %308, align 8
  %310 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %309, i64 3
  %311 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %310, align 8
  call void %311(%"class.SkSL::OutputStream"* %306, i8* nonnull %307, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %307) #14
  %312 = bitcast i32* %54 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %312) #14
  store i32 %137, i32* %54, align 4
  %313 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %308, align 8
  %314 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %313, i64 3
  %315 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %314, align 8
  call void %315(%"class.SkSL::OutputStream"* %306, i8* nonnull %312, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %312) #14
  %316 = bitcast i32* %53 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %316) #14
  store i32 32, i32* %53, align 4
  %317 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %308, align 8
  %318 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %317, i64 3
  %319 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %318, align 8
  call void %319(%"class.SkSL::OutputStream"* %306, i8* nonnull %316, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %316) #14
  %320 = bitcast i32* %52 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %320) #14
  store i32 1, i32* %52, align 4
  %321 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %308, align 8
  %322 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %321, i64 3
  %323 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %322, align 8
  call void %323(%"class.SkSL::OutputStream"* %306, i8* nonnull %320, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %320) #14
  br label %670

324:                                              ; preds = %135
  %325 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %86, i64 0, i32 6
  %326 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %325, align 8
  %327 = icmp eq %"class.SkSL::Type"* %326, null
  %328 = select i1 %327, %"class.SkSL::Type"* %86, %"class.SkSL::Type"* %326
  %329 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %328, %"class.SkSL::MemoryLayout"* dereferenceable(4) %2)
  %330 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %86, i64 0, i32 8
  %331 = load i32, i32* %330, align 8
  %332 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 15, i32 0
  %333 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %333) #14
  store i32 262167, i32* %13, align 4
  %334 = bitcast %"class.SkSL::OutputStream"* %332 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %335 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %334, align 8
  %336 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %335, i64 3
  %337 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %336, align 8
  call void %337(%"class.SkSL::OutputStream"* %332, i8* nonnull %333, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %333) #14
  %338 = bitcast i32* %51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %338) #14
  store i32 %137, i32* %51, align 4
  %339 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %334, align 8
  %340 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %339, i64 3
  %341 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %340, align 8
  call void %341(%"class.SkSL::OutputStream"* %332, i8* nonnull %338, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %338) #14
  %342 = bitcast i32* %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %342) #14
  store i32 %329, i32* %50, align 4
  %343 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %334, align 8
  %344 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %343, i64 3
  %345 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %344, align 8
  call void %345(%"class.SkSL::OutputStream"* %332, i8* nonnull %342, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %342) #14
  %346 = bitcast i32* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %346) #14
  store i32 %331, i32* %49, align 4
  %347 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %334, align 8
  %348 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %347, i64 3
  %349 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %348, align 8
  call void %349(%"class.SkSL::OutputStream"* %332, i8* nonnull %346, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %346) #14
  br label %670

350:                                              ; preds = %135
  %351 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 1
  %352 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %351, align 8
  %353 = call dereferenceable(184) %"class.SkSL::Type"* @_ZN4SkSL15IndexExpression9IndexTypeERKNS_7ContextERKNS_4TypeE(%"class.SkSL::Context"* dereferenceable(744) %352, %"class.SkSL::Type"* dereferenceable(184) %86) #14
  %354 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %353, %"class.SkSL::MemoryLayout"* dereferenceable(4) %2)
  %355 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %86, i64 0, i32 8
  %356 = load i32, i32* %355, align 8
  %357 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 15, i32 0
  %358 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %358) #14
  store i32 262168, i32* %12, align 4
  %359 = bitcast %"class.SkSL::OutputStream"* %357 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %360 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %359, align 8
  %361 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %360, i64 3
  %362 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %361, align 8
  call void %362(%"class.SkSL::OutputStream"* %357, i8* nonnull %358, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %358) #14
  %363 = bitcast i32* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %363) #14
  store i32 %137, i32* %48, align 4
  %364 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %359, align 8
  %365 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %364, i64 3
  %366 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %365, align 8
  call void %366(%"class.SkSL::OutputStream"* %357, i8* nonnull %363, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %363) #14
  %367 = bitcast i32* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %367) #14
  store i32 %354, i32* %47, align 4
  %368 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %359, align 8
  %369 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %368, i64 3
  %370 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %369, align 8
  call void %370(%"class.SkSL::OutputStream"* %357, i8* nonnull %367, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %367) #14
  %371 = bitcast i32* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %371) #14
  store i32 %356, i32* %46, align 4
  %372 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %359, align 8
  %373 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %372, i64 3
  %374 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %373, align 8
  call void %374(%"class.SkSL::OutputStream"* %357, i8* nonnull %371, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %371) #14
  br label %670

375:                                              ; preds = %135
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeStructERKNS_4TypeERKNS_12MemoryLayoutEj(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %86, %"class.SkSL::MemoryLayout"* dereferenceable(4) %2, i32 %137)
  br label %670

376:                                              ; preds = %135
  %377 = call i64 @_ZN4SkSL12MemoryLayout17LayoutIsSupportedERKNS_4TypeE(%"class.SkSL::Type"* dereferenceable(184) %86)
  %378 = icmp eq i64 %377, 0
  br i1 %378, label %379, label %441

379:                                              ; preds = %376
  %380 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 2
  %381 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %380, align 8
  %382 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %86, i64 0, i32 0, i32 0, i32 1
  %383 = load i32, i32* %382, align 8
  %384 = bitcast %"class.SkSL::String"* %83 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %384) #14
  %385 = bitcast %"class.SkSL::String"* %84 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %385) #14
  %386 = load i8*, i8** %91, align 8
  %387 = load i64, i64* %94, align 8
  %388 = icmp ugt i64 %387, -17
  br i1 %388, label %389, label %391

389:                                              ; preds = %379
  %390 = bitcast %"class.SkSL::String"* %84 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %390) #15
  unreachable

391:                                              ; preds = %379
  %392 = icmp ult i64 %387, 23
  br i1 %392, label %401, label %393

393:                                              ; preds = %391
  %394 = add nuw i64 %387, 16
  %395 = and i64 %394, -16
  %396 = call i8* @_Znwm(i64 %395) #16
  %397 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %84, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %396, i8** %397, align 8
  %398 = or i64 %395, -9223372036854775808
  %399 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %84, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %398, i64* %399, align 8
  %400 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %84, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %387, i64* %400, align 8
  br label %406

401:                                              ; preds = %391
  %402 = trunc i64 %387 to i8
  %403 = bitcast %"class.SkSL::String"* %84 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %404 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %403, i64 0, i32 1, i32 0
  store i8 %402, i8* %404, align 1
  %405 = icmp eq i64 %387, 0
  br i1 %405, label %408, label %406

406:                                              ; preds = %401, %393
  %407 = phi i8* [ %396, %393 ], [ %385, %401 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %407, i8* align 1 %386, i64 %387, i1 false) #14
  br label %408

408:                                              ; preds = %401, %406
  %409 = phi i8* [ %385, %401 ], [ %407, %406 ]
  %410 = getelementptr inbounds i8, i8* %409, i64 %387
  store i8 0, i8* %410, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %83, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %84) #14
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %82, %"class.SkSL::String"* nonnull %83, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0)) #14
  %411 = bitcast %"class.SkSL::ErrorReporter"* %381 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %412 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %411, align 8
  %413 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %412, i64 2
  %414 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %413, align 8
  call void %414(%"class.SkSL::ErrorReporter"* %381, i32 %383, %"class.SkSL::String"* nonnull %82) #14
  %415 = bitcast %"class.SkSL::String"* %82 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %416 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %415, i64 0, i32 1, i32 0
  %417 = load i8, i8* %416, align 1
  %418 = icmp slt i8 %417, 0
  br i1 %418, label %419, label %422

419:                                              ; preds = %408
  %420 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %82, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %421 = load i8*, i8** %420, align 8
  call void @_ZdlPv(i8* %421) #16
  br label %422

422:                                              ; preds = %408, %419
  %423 = bitcast %"class.SkSL::String"* %83 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %424 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %423, i64 0, i32 1, i32 0
  %425 = load i8, i8* %424, align 1
  %426 = icmp slt i8 %425, 0
  br i1 %426, label %427, label %430

427:                                              ; preds = %422
  %428 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %429 = load i8*, i8** %428, align 8
  call void @_ZdlPv(i8* %429) #16
  br label %430

430:                                              ; preds = %422, %427
  %431 = bitcast %"class.SkSL::String"* %84 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %432 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %431, i64 0, i32 1, i32 0
  %433 = load i8, i8* %432, align 1
  %434 = icmp slt i8 %433, 0
  br i1 %434, label %435, label %438

435:                                              ; preds = %430
  %436 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %84, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %437 = load i8*, i8** %436, align 8
  call void @_ZdlPv(i8* %437) #16
  br label %438

438:                                              ; preds = %430, %435
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %385) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %384) #14
  %439 = load i32, i32* %136, align 8
  %440 = add i32 %439, 1
  store i32 %440, i32* %136, align 8
  br label %682

441:                                              ; preds = %376
  %442 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %86, i64 0, i32 8
  %443 = load i32, i32* %442, align 8
  %444 = icmp sgt i32 %443, 0
  br i1 %444, label %445, label %504

445:                                              ; preds = %441
  %446 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %86, i64 0, i32 6
  %447 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %446, align 8
  %448 = icmp eq %"class.SkSL::Type"* %447, null
  %449 = select i1 %448, %"class.SkSL::Type"* %86, %"class.SkSL::Type"* %447
  %450 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %449, %"class.SkSL::MemoryLayout"* dereferenceable(4) %2)
  %451 = bitcast %"class.SkSL::Literal"* %85 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %451) #14
  %452 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %85, i64 0, i32 0, i32 0, i32 0
  %453 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %85, i64 0, i32 0, i32 0, i32 1
  %454 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %85, i64 0, i32 0, i32 0, i32 2
  %455 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %85, i64 0, i32 0, i32 1
  %456 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %85, i64 0, i32 1
  %457 = load i32, i32* %442, align 8
  %458 = sext i32 %457 to i64
  %459 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 1
  %460 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %459, align 8
  %461 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %460, i64 0, i32 0, i32 8, i32 0, i32 0, i32 0
  %462 = bitcast %"class.SkSL::Type"** %461 to i64*
  %463 = load i64, i64* %462, align 8
  store i32 -1, i32* %453, align 8
  store i32 43, i32* %454, align 4
  %464 = bitcast %"class.SkSL::Type"** %455 to i64*
  store i64 %463, i64* %464, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIlEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %452, align 8
  store i64 %458, i64* %456, align 8
  %465 = call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeIntLiteralERKNS_7LiteralIlEE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Literal"* nonnull dereferenceable(32) %85)
  %466 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 15, i32 0
  %467 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %467) #14
  store i32 262172, i32* %11, align 4
  %468 = bitcast %"class.SkSL::OutputStream"* %466 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %469 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %468, align 8
  %470 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %469, i64 3
  %471 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %470, align 8
  call void %471(%"class.SkSL::OutputStream"* %466, i8* nonnull %467, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %467) #14
  %472 = bitcast i32* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %472) #14
  store i32 %137, i32* %45, align 4
  %473 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %468, align 8
  %474 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %473, i64 3
  %475 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %474, align 8
  call void %475(%"class.SkSL::OutputStream"* %466, i8* nonnull %472, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %472) #14
  %476 = bitcast i32* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %476) #14
  store i32 %450, i32* %44, align 4
  %477 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %468, align 8
  %478 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %477, i64 3
  %479 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %478, align 8
  call void %479(%"class.SkSL::OutputStream"* %466, i8* nonnull %476, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %476) #14
  %480 = bitcast i32* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %480) #14
  store i32 %465, i32* %43, align 4
  %481 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %468, align 8
  %482 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %481, i64 3
  %483 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %482, align 8
  call void %483(%"class.SkSL::OutputStream"* %466, i8* nonnull %480, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %480) #14
  %484 = call i64 @_ZNK4SkSL12MemoryLayout6strideERKNS_4TypeE(%"class.SkSL::MemoryLayout"* %2, %"class.SkSL::Type"* dereferenceable(184) %86)
  %485 = trunc i64 %484 to i32
  %486 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %487 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %487) #14
  store i32 262215, i32* %10, align 4
  %488 = bitcast %"class.SkSL::OutputStream"* %486 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %489 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %488, align 8
  %490 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %489, i64 3
  %491 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %490, align 8
  call void %491(%"class.SkSL::OutputStream"* %486, i8* nonnull %487, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %487) #14
  %492 = bitcast i32* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %492) #14
  store i32 %137, i32* %42, align 4
  %493 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %488, align 8
  %494 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %493, i64 3
  %495 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %494, align 8
  call void %495(%"class.SkSL::OutputStream"* %486, i8* nonnull %492, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %492) #14
  %496 = bitcast i32* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %496) #14
  store i32 6, i32* %41, align 4
  %497 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %488, align 8
  %498 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %497, i64 3
  %499 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %498, align 8
  call void %499(%"class.SkSL::OutputStream"* %486, i8* nonnull %496, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %496) #14
  %500 = bitcast i32* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %500) #14
  store i32 %485, i32* %40, align 4
  %501 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %488, align 8
  %502 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %501, i64 3
  %503 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %502, align 8
  call void %503(%"class.SkSL::OutputStream"* %486, i8* nonnull %500, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %500) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %451) #14
  br label %670

504:                                              ; preds = %441
  %505 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 2
  %506 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %505, align 8
  %507 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %86, i64 0, i32 0, i32 0, i32 1
  %508 = load i32, i32* %507, align 8
  call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %506, i32 %508, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.5, i64 0, i64 0))
  %509 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %86, i64 0, i32 6
  %510 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %509, align 8
  %511 = icmp eq %"class.SkSL::Type"* %510, null
  %512 = select i1 %511, %"class.SkSL::Type"* %86, %"class.SkSL::Type"* %510
  %513 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %512, %"class.SkSL::MemoryLayout"* dereferenceable(4) %2)
  %514 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 15, i32 0
  %515 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %515) #14
  store i32 196637, i32* %9, align 4
  %516 = bitcast %"class.SkSL::OutputStream"* %514 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %517 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %516, align 8
  %518 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %517, i64 3
  %519 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %518, align 8
  call void %519(%"class.SkSL::OutputStream"* %514, i8* nonnull %515, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %515) #14
  %520 = bitcast i32* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %520) #14
  store i32 %137, i32* %39, align 4
  %521 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %516, align 8
  %522 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %521, i64 3
  %523 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %522, align 8
  call void %523(%"class.SkSL::OutputStream"* %514, i8* nonnull %520, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %520) #14
  %524 = bitcast i32* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %524) #14
  store i32 %513, i32* %38, align 4
  %525 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %516, align 8
  %526 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %525, i64 3
  %527 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %526, align 8
  call void %527(%"class.SkSL::OutputStream"* %514, i8* nonnull %524, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %524) #14
  %528 = call i64 @_ZNK4SkSL12MemoryLayout6strideERKNS_4TypeE(%"class.SkSL::MemoryLayout"* %2, %"class.SkSL::Type"* dereferenceable(184) %86)
  %529 = trunc i64 %528 to i32
  %530 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %531 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %531) #14
  store i32 262215, i32* %8, align 4
  %532 = bitcast %"class.SkSL::OutputStream"* %530 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %533 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %532, align 8
  %534 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %533, i64 3
  %535 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %534, align 8
  call void %535(%"class.SkSL::OutputStream"* %530, i8* nonnull %531, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %531) #14
  %536 = bitcast i32* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %536) #14
  store i32 %137, i32* %37, align 4
  %537 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %532, align 8
  %538 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %537, i64 3
  %539 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %538, align 8
  call void %539(%"class.SkSL::OutputStream"* %530, i8* nonnull %536, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %536) #14
  %540 = bitcast i32* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %540) #14
  store i32 6, i32* %36, align 4
  %541 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %532, align 8
  %542 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %541, i64 3
  %543 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %542, align 8
  call void %543(%"class.SkSL::OutputStream"* %530, i8* nonnull %540, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %540) #14
  %544 = bitcast i32* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %544) #14
  store i32 %529, i32* %35, align 4
  %545 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %532, align 8
  %546 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %545, i64 3
  %547 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %546, align 8
  call void %547(%"class.SkSL::OutputStream"* %530, i8* nonnull %544, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %544) #14
  br label %670

548:                                              ; preds = %135
  %549 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %86, i64 0, i32 11
  %550 = load i32, i32* %549, align 8
  %551 = icmp eq i32 %550, 6
  br i1 %551, label %670, label %552

552:                                              ; preds = %548
  %553 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %86, i64 0, i32 17
  %554 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %553, align 8
  %555 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %554, %"class.SkSL::MemoryLayout"* dereferenceable(4) %2)
  %556 = load i32, i32* %549, align 8
  %557 = icmp eq i32 %556, 5
  br i1 %557, label %558, label %563

558:                                              ; preds = %552
  %559 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 4
  %560 = load i64, i64* %559, align 8
  %561 = or i64 %560, 70368744177664
  store i64 %561, i64* %559, align 8
  %562 = load i32, i32* %549, align 8
  br label %563

563:                                              ; preds = %558, %552
  %564 = phi i32 [ %562, %558 ], [ %556, %552 ]
  %565 = icmp eq i32 %564, 6
  br i1 %565, label %670, label %566

566:                                              ; preds = %563
  %567 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 15, i32 0
  %568 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %568) #14
  store i32 196635, i32* %7, align 4
  %569 = bitcast %"class.SkSL::OutputStream"* %567 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %570 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %569, align 8
  %571 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %570, i64 3
  %572 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %571, align 8
  call void %572(%"class.SkSL::OutputStream"* %567, i8* nonnull %568, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %568) #14
  %573 = bitcast i32* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %573) #14
  store i32 %137, i32* %34, align 4
  %574 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %569, align 8
  %575 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %574, i64 3
  %576 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %575, align 8
  call void %576(%"class.SkSL::OutputStream"* %567, i8* nonnull %573, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %573) #14
  %577 = bitcast i32* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %577) #14
  store i32 %555, i32* %33, align 4
  %578 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %569, align 8
  %579 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %578, i64 3
  %580 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %579, align 8
  call void %580(%"class.SkSL::OutputStream"* %567, i8* nonnull %577, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %577) #14
  br label %670

581:                                              ; preds = %135
  %582 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 15, i32 0
  %583 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %583) #14
  store i32 131098, i32* %6, align 4
  %584 = bitcast %"class.SkSL::OutputStream"* %582 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %585 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %584, align 8
  %586 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %585, i64 3
  %587 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %586, align 8
  call void %587(%"class.SkSL::OutputStream"* %582, i8* nonnull %583, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %583) #14
  %588 = bitcast i32* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %588) #14
  store i32 %137, i32* %32, align 4
  %589 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %584, align 8
  %590 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %589, i64 3
  %591 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %590, align 8
  call void %591(%"class.SkSL::OutputStream"* %582, i8* nonnull %588, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %588) #14
  br label %670

592:                                              ; preds = %135
  %593 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 1
  %594 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %593, align 8
  %595 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %594, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %596 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %595, align 8
  %597 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %596, %"class.SkSL::MemoryLayout"* dereferenceable(4) %2)
  %598 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %86, i64 0, i32 11
  %599 = load i32, i32* %598, align 8
  %600 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %86, i64 0, i32 12
  %601 = load i8, i8* %600, align 4, !range !2
  %602 = zext i8 %601 to i32
  %603 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %86, i64 0, i32 13
  %604 = load i8, i8* %603, align 1, !range !2
  %605 = zext i8 %604 to i32
  %606 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %86, i64 0, i32 14
  %607 = load i8, i8* %606, align 2, !range !2
  %608 = zext i8 %607 to i32
  %609 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %86, i64 0, i32 15
  %610 = load i8, i8* %609, align 1, !range !2
  %611 = icmp eq i8 %610, 0
  %612 = select i1 %611, i32 2, i32 1
  %613 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 15, i32 0
  %614 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %614) #14
  store i32 589849, i32* %5, align 4
  %615 = bitcast %"class.SkSL::OutputStream"* %613 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %616 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %615, align 8
  %617 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %616, i64 3
  %618 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %617, align 8
  call void %618(%"class.SkSL::OutputStream"* %613, i8* nonnull %614, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %614) #14
  %619 = bitcast i32* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %619) #14
  store i32 %137, i32* %31, align 4
  %620 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %615, align 8
  %621 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %620, i64 3
  %622 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %621, align 8
  call void %622(%"class.SkSL::OutputStream"* %613, i8* nonnull %619, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %619) #14
  %623 = bitcast i32* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %623) #14
  store i32 %597, i32* %30, align 4
  %624 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %615, align 8
  %625 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %624, i64 3
  %626 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %625, align 8
  call void %626(%"class.SkSL::OutputStream"* %613, i8* nonnull %623, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %623) #14
  %627 = bitcast i32* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %627) #14
  store i32 %599, i32* %29, align 4
  %628 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %615, align 8
  %629 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %628, i64 3
  %630 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %629, align 8
  call void %630(%"class.SkSL::OutputStream"* %613, i8* nonnull %627, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %627) #14
  %631 = bitcast i32* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %631) #14
  store i32 %602, i32* %28, align 4
  %632 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %615, align 8
  %633 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %632, i64 3
  %634 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %633, align 8
  call void %634(%"class.SkSL::OutputStream"* %613, i8* nonnull %631, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %631) #14
  %635 = bitcast i32* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %635) #14
  store i32 %605, i32* %27, align 4
  %636 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %615, align 8
  %637 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %636, i64 3
  %638 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %637, align 8
  call void %638(%"class.SkSL::OutputStream"* %613, i8* nonnull %635, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %635) #14
  %639 = bitcast i32* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %639) #14
  store i32 %608, i32* %26, align 4
  %640 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %615, align 8
  %641 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %640, i64 3
  %642 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %641, align 8
  call void %642(%"class.SkSL::OutputStream"* %613, i8* nonnull %639, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %639) #14
  %643 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %643) #14
  store i32 %612, i32* %25, align 4
  %644 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %615, align 8
  %645 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %644, i64 3
  %646 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %645, align 8
  call void %646(%"class.SkSL::OutputStream"* %613, i8* nonnull %643, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %643) #14
  %647 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %647) #14
  store i32 0, i32* %24, align 4
  %648 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %615, align 8
  %649 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %648, i64 3
  %650 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %649, align 8
  call void %650(%"class.SkSL::OutputStream"* %613, i8* nonnull %647, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %647) #14
  %651 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 11, i32 0
  %652 = bitcast %"class.std::__1::tuple.652"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %652) #14
  %653 = getelementptr inbounds %"class.std::__1::tuple.652", %"class.std::__1::tuple.652"* %22, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::String"* %80, %"class.SkSL::String"** %653, align 8
  %654 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %23, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %654) #14
  %655 = call { %"struct.std::__1::__hash_node_base.218"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringEjEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_S9_S7_Lb1EEENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSK_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.214"* %651, %"class.SkSL::String"* nonnull dereferenceable(24) %80, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.652"* nonnull dereferenceable(8) %22, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %23) #14
  %656 = extractvalue { %"struct.std::__1::__hash_node_base.218"*, i8 } %655, 0
  %657 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218", %"struct.std::__1::__hash_node_base.218"* %656, i64 5
  %658 = bitcast %"struct.std::__1::__hash_node_base.218"* %657 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %654) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %652) #14
  store i32 %137, i32* %658, align 4
  br label %670

659:                                              ; preds = %135
  %660 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 15, i32 0
  %661 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %661) #14
  store i32 131091, i32* %4, align 4
  %662 = bitcast %"class.SkSL::OutputStream"* %660 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %663 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %662, align 8
  %664 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %663, i64 3
  %665 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %664, align 8
  call void %665(%"class.SkSL::OutputStream"* %660, i8* nonnull %661, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %661) #14
  %666 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %666) #14
  store i32 %137, i32* %21, align 4
  %667 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %662, align 8
  %668 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %667, i64 3
  %669 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %668, align 8
  call void %669(%"class.SkSL::OutputStream"* %660, i8* nonnull %666, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %666) #14
  br label %670

670:                                              ; preds = %135, %548, %566, %563, %659, %445, %504, %144, %235, %278, %290, %192, %592, %581, %375, %350, %324, %305
  %671 = bitcast %"class.std::__1::tuple.652"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %671) #14
  %672 = getelementptr inbounds %"class.std::__1::tuple.652", %"class.std::__1::tuple.652"* %19, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::String"* %80, %"class.SkSL::String"** %672, align 8
  %673 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %20, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %673) #14
  %674 = call { %"struct.std::__1::__hash_node_base.218"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringEjEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_S9_S7_Lb1EEENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSK_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.214"* %132, %"class.SkSL::String"* nonnull dereferenceable(24) %80, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.652"* nonnull dereferenceable(8) %19, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %20) #14
  %675 = extractvalue { %"struct.std::__1::__hash_node_base.218"*, i8 } %674, 0
  %676 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218", %"struct.std::__1::__hash_node_base.218"* %675, i64 5
  %677 = bitcast %"struct.std::__1::__hash_node_base.218"* %676 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %673) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %671) #14
  store i32 %137, i32* %677, align 4
  br label %682

678:                                              ; preds = %131
  %679 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218", %"struct.std::__1::__hash_node_base.218"* %133, i64 5
  %680 = bitcast %"struct.std::__1::__hash_node_base.218"* %679 to i32*
  %681 = load i32, i32* %680, align 8
  br label %682

682:                                              ; preds = %438, %670, %678
  %683 = phi i32 [ %681, %678 ], [ %137, %670 ], [ %439, %438 ]
  %684 = bitcast %"class.SkSL::String"* %80 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %685 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %684, i64 0, i32 1, i32 0
  %686 = load i8, i8* %685, align 1
  %687 = icmp slt i8 %686, 0
  br i1 %687, label %688, label %690

688:                                              ; preds = %682
  %689 = load i8*, i8** %88, align 8
  call void @_ZdlPv(i8* %689) #16
  br label %690

690:                                              ; preds = %682, %688
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %87) #14
  ret i32 %683
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4SkSL12MemoryLayout17LayoutIsSupportedERKNS_4TypeE(%"class.SkSL::Type"* dereferenceable(184)) local_unnamed_addr #0 comdat align 2 {
  br label %2

2:                                                ; preds = %6, %1
  %3 = phi %"class.SkSL::Type"* [ %0, %1 ], [ %10, %6 ]
  %4 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %3, i64 0, i32 3
  %5 = load i32, i32* %4, align 8
  switch i32 %5, label %27 [
    i32 8, label %26
    i32 1, label %26
    i32 11, label %26
    i32 4, label %26
    i32 0, label %6
    i32 9, label %11
  ]

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %3, i64 0, i32 6
  %8 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %7, align 8
  %9 = icmp eq %"class.SkSL::Type"* %8, null
  %10 = select i1 %9, %"class.SkSL::Type"* %3, %"class.SkSL::Type"* %8
  br label %2

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %3, i64 0, i32 10, i32 0, i32 0
  %13 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %12, align 8
  %14 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %3, i64 0, i32 10, i32 0, i32 1
  %15 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %14, align 8
  %16 = icmp eq %"struct.SkSL::Type::Field"* %13, %15
  br i1 %16, label %27, label %19

17:                                               ; preds = %19
  %18 = icmp eq %"struct.SkSL::Type::Field"* %25, %15
  br i1 %18, label %27, label %19

19:                                               ; preds = %11, %17
  %20 = phi %"struct.SkSL::Type::Field"* [ %25, %17 ], [ %13, %11 ]
  %21 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %20, i64 0, i32 2
  %22 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %21, align 8
  %23 = tail call i64 @_ZN4SkSL12MemoryLayout17LayoutIsSupportedERKNS_4TypeE(%"class.SkSL::Type"* dereferenceable(184) %22) #14
  %24 = icmp eq i64 %23, 0
  %25 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %20, i64 1
  br i1 %24, label %27, label %17

26:                                               ; preds = %2, %2, %2, %2
  br label %27

27:                                               ; preds = %17, %19, %2, %26, %11
  %28 = phi i64 [ 1, %11 ], [ 1, %26 ], [ 0, %2 ], [ 1, %17 ], [ 0, %19 ]
  ret i64 %28
}

declare void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* sret, i8*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* sret, %"class.SkSL::String"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4SkSL12MemoryLayout4sizeERKNS_4TypeE(%"class.SkSL::MemoryLayout"*, %"class.SkSL::Type"* dereferenceable(184)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 3
  %5 = load i32, i32* %4, align 8
  switch i32 %5, label %70 [
    i32 8, label %6
    i32 1, label %108
    i32 11, label %11
    i32 4, label %34
    i32 0, label %34
    i32 9, label %40
  ]

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 4
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 3
  %10 = select i1 %9, i64 1, i64 4
  br label %108

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.SkSL::MemoryLayout", %"class.SkSL::MemoryLayout"* %0, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 2
  %15 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 8
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 3
  %18 = and i1 %14, %17
  br i1 %18, label %19, label %26

19:                                               ; preds = %11
  %20 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 6
  %21 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %20, align 8
  %22 = icmp eq %"class.SkSL::Type"* %21, null
  %23 = select i1 %22, %"class.SkSL::Type"* %1, %"class.SkSL::Type"* %21
  %24 = tail call i64 @_ZNK4SkSL12MemoryLayout4sizeERKNS_4TypeE(%"class.SkSL::MemoryLayout"* %0, %"class.SkSL::Type"* dereferenceable(184) %23)
  %25 = shl i64 %24, 2
  br label %108

26:                                               ; preds = %11
  %27 = sext i32 %16 to i64
  %28 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 6
  %29 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %28, align 8
  %30 = icmp eq %"class.SkSL::Type"* %29, null
  %31 = select i1 %30, %"class.SkSL::Type"* %1, %"class.SkSL::Type"* %29
  %32 = tail call i64 @_ZNK4SkSL12MemoryLayout4sizeERKNS_4TypeE(%"class.SkSL::MemoryLayout"* %0, %"class.SkSL::Type"* dereferenceable(184) %31)
  %33 = mul i64 %32, %27
  br label %108

34:                                               ; preds = %2, %2
  %35 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 8
  %36 = load i32, i32* %35, align 8
  %37 = sext i32 %36 to i64
  %38 = tail call i64 @_ZNK4SkSL12MemoryLayout6strideERKNS_4TypeE(%"class.SkSL::MemoryLayout"* %0, %"class.SkSL::Type"* dereferenceable(184) %1)
  %39 = mul i64 %38, %37
  br label %108

40:                                               ; preds = %2
  %41 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 10, i32 0, i32 0
  %42 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %41, align 8
  %43 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 10, i32 0, i32 1
  %44 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %43, align 8
  %45 = icmp eq %"struct.SkSL::Type::Field"* %42, %44
  br i1 %45, label %48, label %54

46:                                               ; preds = %54
  %47 = add i64 %67, -1
  br label %48

48:                                               ; preds = %46, %40
  %49 = phi i64 [ -1, %40 ], [ %47, %46 ]
  %50 = tail call i64 @_ZNK4SkSL12MemoryLayout9alignmentERKNS_4TypeE(%"class.SkSL::MemoryLayout"* %0, %"class.SkSL::Type"* dereferenceable(184) %1)
  %51 = add i64 %49, %50
  %52 = sub i64 0, %50
  %53 = and i64 %51, %52
  br label %108

54:                                               ; preds = %40, %54
  %55 = phi i64 [ %67, %54 ], [ 0, %40 ]
  %56 = phi %"struct.SkSL::Type::Field"* [ %68, %54 ], [ %42, %40 ]
  %57 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %56, i64 0, i32 2
  %58 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %57, align 8
  %59 = tail call i64 @_ZNK4SkSL12MemoryLayout9alignmentERKNS_4TypeE(%"class.SkSL::MemoryLayout"* %0, %"class.SkSL::Type"* dereferenceable(184) %58)
  %60 = urem i64 %55, %59
  %61 = icmp eq i64 %60, 0
  %62 = sub i64 %59, %60
  %63 = select i1 %61, i64 0, i64 %62
  %64 = add i64 %63, %55
  %65 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %57, align 8
  %66 = tail call i64 @_ZNK4SkSL12MemoryLayout4sizeERKNS_4TypeE(%"class.SkSL::MemoryLayout"* %0, %"class.SkSL::Type"* dereferenceable(184) %65)
  %67 = add i64 %64, %66
  %68 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %56, i64 1
  %69 = icmp eq %"struct.SkSL::Type::Field"* %68, %44
  br i1 %69, label %46, label %54

70:                                               ; preds = %2
  %71 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #14
  %72 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 0, i32 1, i32 0
  %73 = load i8*, i8** %72, align 8
  %74 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 0, i32 1, i32 1
  %75 = load i64, i64* %74, align 8
  %76 = icmp ugt i64 %75, -17
  br i1 %76, label %77, label %79

77:                                               ; preds = %70
  %78 = bitcast %"class.SkSL::String"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %78) #15
  unreachable

79:                                               ; preds = %70
  %80 = icmp ult i64 %75, 23
  br i1 %80, label %90, label %81

81:                                               ; preds = %79
  %82 = add nuw i64 %75, 16
  %83 = and i64 %82, -16
  %84 = tail call i8* @_Znwm(i64 %83) #16
  %85 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %84, i8** %85, align 8
  %86 = or i64 %83, -9223372036854775808
  %87 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %86, i64* %87, align 8
  %88 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %75, i64* %88, align 8
  %89 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %95

90:                                               ; preds = %79
  %91 = trunc i64 %75 to i8
  %92 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  store i8 %91, i8* %93, align 1
  %94 = icmp eq i64 %75, 0
  br i1 %94, label %98, label %95

95:                                               ; preds = %90, %81
  %96 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %92, %90 ], [ %89, %81 ]
  %97 = phi i8* [ %71, %90 ], [ %84, %81 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %97, i8* align 1 %73, i64 %75, i1 false) #14
  br label %98

98:                                               ; preds = %90, %95
  %99 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %92, %90 ], [ %96, %95 ]
  %100 = phi i8* [ %71, %90 ], [ %97, %95 ]
  %101 = getelementptr inbounds i8, i8* %100, i64 %75
  store i8 0, i8* %101, align 1
  %102 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %99, i64 0, i32 1, i32 0
  %103 = load i8, i8* %102, align 1
  %104 = icmp slt i8 %103, 0
  %105 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  %107 = select i1 %104, i8* %106, i8* %71
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.38, i64 0, i64 0), i32 140, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.39, i64 0, i64 0), i8* %107) #15
  unreachable

108:                                              ; preds = %2, %6, %48, %34, %26, %19
  %109 = phi i64 [ %53, %48 ], [ %39, %34 ], [ %25, %19 ], [ %33, %26 ], [ %10, %6 ], [ 4, %2 ]
  ret i64 %109
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4SkSL12MemoryLayout9alignmentERKNS_4TypeE(%"class.SkSL::MemoryLayout"*, %"class.SkSL::Type"* dereferenceable(184)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 3
  %5 = load i32, i32* %4, align 8
  switch i32 %5, label %74 [
    i32 8, label %6
    i32 1, label %6
    i32 11, label %8
    i32 4, label %20
    i32 0, label %38
    i32 9, label %50
  ]

6:                                                ; preds = %2, %2
  %7 = tail call i64 @_ZNK4SkSL12MemoryLayout4sizeERKNS_4TypeE(%"class.SkSL::MemoryLayout"* %0, %"class.SkSL::Type"* dereferenceable(184) %1)
  br label %112

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 6
  %10 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %9, align 8
  %11 = icmp eq %"class.SkSL::Type"* %10, null
  %12 = select i1 %11, %"class.SkSL::Type"* %1, %"class.SkSL::Type"* %10
  %13 = tail call i64 @_ZNK4SkSL12MemoryLayout4sizeERKNS_4TypeE(%"class.SkSL::MemoryLayout"* %0, %"class.SkSL::Type"* dereferenceable(184) %12)
  %14 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 8
  %15 = load i32, i32* %14, align 8
  %16 = srem i32 %15, 2
  %17 = add nsw i32 %16, %15
  %18 = sext i32 %17 to i64
  %19 = mul i64 %13, %18
  br label %112

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 6
  %22 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %21, align 8
  %23 = icmp eq %"class.SkSL::Type"* %22, null
  %24 = select i1 %23, %"class.SkSL::Type"* %1, %"class.SkSL::Type"* %22
  %25 = tail call i64 @_ZNK4SkSL12MemoryLayout4sizeERKNS_4TypeE(%"class.SkSL::MemoryLayout"* %0, %"class.SkSL::Type"* dereferenceable(184) %24)
  %26 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 9
  %27 = load i32, i32* %26, align 4
  %28 = srem i32 %27, 2
  %29 = add nsw i32 %28, %27
  %30 = sext i32 %29 to i64
  %31 = mul i64 %25, %30
  %32 = getelementptr inbounds %"class.SkSL::MemoryLayout", %"class.SkSL::MemoryLayout"* %0, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  switch i32 %33, label %37 [
    i32 0, label %34
    i32 1, label %112
    i32 2, label %112
  ]

34:                                               ; preds = %20
  %35 = add i64 %31, 15
  %36 = and i64 %35, -16
  br label %112

37:                                               ; preds = %20
  tail call void @llvm.trap() #14
  unreachable

38:                                               ; preds = %2
  %39 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 6
  %40 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %39, align 8
  %41 = icmp eq %"class.SkSL::Type"* %40, null
  %42 = select i1 %41, %"class.SkSL::Type"* %1, %"class.SkSL::Type"* %40
  %43 = tail call i64 @_ZNK4SkSL12MemoryLayout9alignmentERKNS_4TypeE(%"class.SkSL::MemoryLayout"* %0, %"class.SkSL::Type"* dereferenceable(184) %42)
  %44 = getelementptr inbounds %"class.SkSL::MemoryLayout", %"class.SkSL::MemoryLayout"* %0, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  switch i32 %45, label %49 [
    i32 0, label %46
    i32 1, label %112
    i32 2, label %112
  ]

46:                                               ; preds = %38
  %47 = add i64 %43, 15
  %48 = and i64 %47, -16
  br label %112

49:                                               ; preds = %38
  tail call void @llvm.trap() #14
  unreachable

50:                                               ; preds = %2
  %51 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 10, i32 0, i32 0
  %52 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %51, align 8
  %53 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 10, i32 0, i32 1
  %54 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %53, align 8
  %55 = icmp eq %"struct.SkSL::Type::Field"* %52, %54
  br i1 %55, label %56, label %64

56:                                               ; preds = %64, %50
  %57 = phi i64 [ 0, %50 ], [ %71, %64 ]
  %58 = getelementptr inbounds %"class.SkSL::MemoryLayout", %"class.SkSL::MemoryLayout"* %0, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  switch i32 %59, label %63 [
    i32 0, label %60
    i32 1, label %112
    i32 2, label %112
  ]

60:                                               ; preds = %56
  %61 = add i64 %57, 15
  %62 = and i64 %61, -16
  br label %112

63:                                               ; preds = %56
  tail call void @llvm.trap() #14
  unreachable

64:                                               ; preds = %50, %64
  %65 = phi i64 [ %71, %64 ], [ 0, %50 ]
  %66 = phi %"struct.SkSL::Type::Field"* [ %72, %64 ], [ %52, %50 ]
  %67 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %66, i64 0, i32 2
  %68 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %67, align 8
  %69 = tail call i64 @_ZNK4SkSL12MemoryLayout9alignmentERKNS_4TypeE(%"class.SkSL::MemoryLayout"* %0, %"class.SkSL::Type"* dereferenceable(184) %68)
  %70 = icmp ugt i64 %69, %65
  %71 = select i1 %70, i64 %69, i64 %65
  %72 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %66, i64 1
  %73 = icmp eq %"struct.SkSL::Type::Field"* %72, %54
  br i1 %73, label %56, label %64

74:                                               ; preds = %2
  %75 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #14
  %76 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 0, i32 1, i32 0
  %77 = load i8*, i8** %76, align 8
  %78 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 0, i32 1, i32 1
  %79 = load i64, i64* %78, align 8
  %80 = icmp ugt i64 %79, -17
  br i1 %80, label %81, label %83

81:                                               ; preds = %74
  %82 = bitcast %"class.SkSL::String"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %82) #15
  unreachable

83:                                               ; preds = %74
  %84 = icmp ult i64 %79, 23
  br i1 %84, label %94, label %85

85:                                               ; preds = %83
  %86 = add nuw i64 %79, 16
  %87 = and i64 %86, -16
  %88 = tail call i8* @_Znwm(i64 %87) #16
  %89 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %88, i8** %89, align 8
  %90 = or i64 %87, -9223372036854775808
  %91 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %90, i64* %91, align 8
  %92 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %79, i64* %92, align 8
  %93 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %99

94:                                               ; preds = %83
  %95 = trunc i64 %79 to i8
  %96 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %96, i64 0, i32 1, i32 0
  store i8 %95, i8* %97, align 1
  %98 = icmp eq i64 %79, 0
  br i1 %98, label %102, label %99

99:                                               ; preds = %94, %85
  %100 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %96, %94 ], [ %93, %85 ]
  %101 = phi i8* [ %75, %94 ], [ %88, %85 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %101, i8* align 1 %77, i64 %79, i1 false) #14
  br label %102

102:                                              ; preds = %94, %99
  %103 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %96, %94 ], [ %100, %99 ]
  %104 = phi i8* [ %75, %94 ], [ %101, %99 ]
  %105 = getelementptr inbounds i8, i8* %104, i64 %79
  store i8 0, i8* %105, align 1
  %106 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %103, i64 0, i32 1, i32 0
  %107 = load i8, i8* %106, align 1
  %108 = icmp slt i8 %107, 0
  %109 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load i8*, i8** %109, align 8
  %111 = select i1 %108, i8* %110, i8* %75
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.38, i64 0, i64 0), i32 73, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.39, i64 0, i64 0), i8* %111) #15
  unreachable

112:                                              ; preds = %60, %56, %56, %46, %38, %38, %34, %20, %20, %8, %6
  %113 = phi i64 [ %19, %8 ], [ %7, %6 ], [ %36, %34 ], [ %31, %20 ], [ %31, %20 ], [ %48, %46 ], [ %43, %38 ], [ %43, %38 ], [ %62, %60 ], [ %57, %56 ], [ %57, %56 ]
  ret i64 %113
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* sret, %"class.SkSL::String"*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* sret, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18SPIRVCodeGenerator11writeLayoutERKNS_6LayoutEji(%"class.SkSL::SPIRVCodeGenerator"*, %"struct.SkSL::Layout"* nocapture readonly dereferenceable(72), i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = icmp sgt i32 %36, -1
  br i1 %37, label %38, label %61

38:                                               ; preds = %4
  %39 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %40 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %40) #14
  store i32 327752, i32* %10, align 4
  %41 = bitcast %"class.SkSL::OutputStream"* %39 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %42 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %42, i64 3
  %44 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %43, align 8
  call void %44(%"class.SkSL::OutputStream"* %39, i8* nonnull %40, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40) #14
  %45 = bitcast i32* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %45) #14
  store i32 %2, i32* %34, align 4
  %46 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %41, align 8
  %47 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %46, i64 3
  %48 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %47, align 8
  call void %48(%"class.SkSL::OutputStream"* %39, i8* nonnull %45, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %45) #14
  %49 = bitcast i32* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %49) #14
  store i32 %3, i32* %33, align 4
  %50 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %41, align 8
  %51 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %50, i64 3
  %52 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %51, align 8
  call void %52(%"class.SkSL::OutputStream"* %39, i8* nonnull %49, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %49) #14
  %53 = bitcast i32* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %53) #14
  store i32 30, i32* %32, align 4
  %54 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %41, align 8
  %55 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %54, i64 3
  %56 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %55, align 8
  call void %56(%"class.SkSL::OutputStream"* %39, i8* nonnull %53, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %53) #14
  %57 = bitcast i32* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %57) #14
  store i32 %36, i32* %31, align 4
  %58 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %41, align 8
  %59 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %58, i64 3
  %60 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %59, align 8
  call void %60(%"class.SkSL::OutputStream"* %39, i8* nonnull %57, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %57) #14
  br label %61

61:                                               ; preds = %38, %4
  %62 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 3
  %63 = load i32, i32* %62, align 4
  %64 = icmp sgt i32 %63, -1
  br i1 %64, label %65, label %88

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %67 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %67) #14
  store i32 327752, i32* %9, align 4
  %68 = bitcast %"class.SkSL::OutputStream"* %66 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %69 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %69, i64 3
  %71 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %70, align 8
  call void %71(%"class.SkSL::OutputStream"* %66, i8* nonnull %67, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %67) #14
  %72 = bitcast i32* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %72) #14
  store i32 %2, i32* %30, align 4
  %73 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %68, align 8
  %74 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %73, i64 3
  %75 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %74, align 8
  call void %75(%"class.SkSL::OutputStream"* %66, i8* nonnull %72, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %72) #14
  %76 = bitcast i32* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %76) #14
  store i32 %3, i32* %29, align 4
  %77 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %68, align 8
  %78 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %77, i64 3
  %79 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %78, align 8
  call void %79(%"class.SkSL::OutputStream"* %66, i8* nonnull %76, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %76) #14
  %80 = bitcast i32* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %80) #14
  store i32 33, i32* %28, align 4
  %81 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %68, align 8
  %82 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %81, i64 3
  %83 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %82, align 8
  call void %83(%"class.SkSL::OutputStream"* %66, i8* nonnull %80, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %80) #14
  %84 = bitcast i32* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %84) #14
  store i32 %63, i32* %27, align 4
  %85 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %68, align 8
  %86 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %85, i64 3
  %87 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %86, align 8
  call void %87(%"class.SkSL::OutputStream"* %66, i8* nonnull %84, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %84) #14
  br label %88

88:                                               ; preds = %65, %61
  %89 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 4
  %90 = load i32, i32* %89, align 8
  %91 = icmp sgt i32 %90, -1
  br i1 %91, label %92, label %115

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %94 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %94) #14
  store i32 327752, i32* %8, align 4
  %95 = bitcast %"class.SkSL::OutputStream"* %93 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %96 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %95, align 8
  %97 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %96, i64 3
  %98 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %97, align 8
  call void %98(%"class.SkSL::OutputStream"* %93, i8* nonnull %94, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %94) #14
  %99 = bitcast i32* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %99) #14
  store i32 %2, i32* %26, align 4
  %100 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %95, align 8
  %101 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %100, i64 3
  %102 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %101, align 8
  call void %102(%"class.SkSL::OutputStream"* %93, i8* nonnull %99, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %99) #14
  %103 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %103) #14
  store i32 %3, i32* %25, align 4
  %104 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %95, align 8
  %105 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %104, i64 3
  %106 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %105, align 8
  call void %106(%"class.SkSL::OutputStream"* %93, i8* nonnull %103, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %103) #14
  %107 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %107) #14
  store i32 32, i32* %24, align 4
  %108 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %95, align 8
  %109 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %108, i64 3
  %110 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %109, align 8
  call void %110(%"class.SkSL::OutputStream"* %93, i8* nonnull %107, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %107) #14
  %111 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %111) #14
  store i32 %90, i32* %23, align 4
  %112 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %95, align 8
  %113 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %112, i64 3
  %114 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %113, align 8
  call void %114(%"class.SkSL::OutputStream"* %93, i8* nonnull %111, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %111) #14
  br label %115

115:                                              ; preds = %92, %88
  %116 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 5
  %117 = load i32, i32* %116, align 4
  %118 = icmp sgt i32 %117, -1
  br i1 %118, label %119, label %142

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %121 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %121) #14
  store i32 327752, i32* %7, align 4
  %122 = bitcast %"class.SkSL::OutputStream"* %120 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %123 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %122, align 8
  %124 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %123, i64 3
  %125 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %124, align 8
  call void %125(%"class.SkSL::OutputStream"* %120, i8* nonnull %121, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %121) #14
  %126 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %126) #14
  store i32 %2, i32* %22, align 4
  %127 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %122, align 8
  %128 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %127, i64 3
  %129 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %128, align 8
  call void %129(%"class.SkSL::OutputStream"* %120, i8* nonnull %126, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %126) #14
  %130 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %130) #14
  store i32 %3, i32* %21, align 4
  %131 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %122, align 8
  %132 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %131, i64 3
  %133 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %132, align 8
  call void %133(%"class.SkSL::OutputStream"* %120, i8* nonnull %130, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %130) #14
  %134 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %134) #14
  store i32 34, i32* %20, align 4
  %135 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %122, align 8
  %136 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %135, i64 3
  %137 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %136, align 8
  call void %137(%"class.SkSL::OutputStream"* %120, i8* nonnull %134, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %134) #14
  %138 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %138) #14
  store i32 %117, i32* %19, align 4
  %139 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %122, align 8
  %140 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %139, i64 3
  %141 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %140, align 8
  call void %141(%"class.SkSL::OutputStream"* %120, i8* nonnull %138, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %138) #14
  br label %142

142:                                              ; preds = %119, %115
  %143 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 7
  %144 = load i32, i32* %143, align 4
  %145 = icmp sgt i32 %144, -1
  br i1 %145, label %146, label %169

146:                                              ; preds = %142
  %147 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %148 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %148) #14
  store i32 327751, i32* %6, align 4
  %149 = bitcast %"class.SkSL::OutputStream"* %147 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %150 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %149, align 8
  %151 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %150, i64 3
  %152 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %151, align 8
  call void %152(%"class.SkSL::OutputStream"* %147, i8* nonnull %148, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %148) #14
  %153 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %153) #14
  store i32 %2, i32* %18, align 4
  %154 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %149, align 8
  %155 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %154, i64 3
  %156 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %155, align 8
  call void %156(%"class.SkSL::OutputStream"* %147, i8* nonnull %153, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %153) #14
  %157 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %157) #14
  store i32 %3, i32* %17, align 4
  %158 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %149, align 8
  %159 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %158, i64 3
  %160 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %159, align 8
  call void %160(%"class.SkSL::OutputStream"* %147, i8* nonnull %157, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %157) #14
  %161 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %161) #14
  store i32 43, i32* %16, align 4
  %162 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %149, align 8
  %163 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %162, i64 3
  %164 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %163, align 8
  call void %164(%"class.SkSL::OutputStream"* %147, i8* nonnull %161, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %161) #14
  %165 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %165) #14
  store i32 %144, i32* %15, align 4
  %166 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %149, align 8
  %167 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %166, i64 3
  %168 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %167, align 8
  call void %168(%"class.SkSL::OutputStream"* %147, i8* nonnull %165, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %165) #14
  br label %169

169:                                              ; preds = %146, %142
  %170 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 6
  %171 = load i32, i32* %170, align 8
  %172 = icmp sgt i32 %171, -1
  br i1 %172, label %173, label %196

173:                                              ; preds = %169
  %174 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %175 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %175) #14
  store i32 327752, i32* %5, align 4
  %176 = bitcast %"class.SkSL::OutputStream"* %174 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %177 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %176, align 8
  %178 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %177, i64 3
  %179 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %178, align 8
  call void %179(%"class.SkSL::OutputStream"* %174, i8* nonnull %175, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %175) #14
  %180 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %180) #14
  store i32 %2, i32* %14, align 4
  %181 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %176, align 8
  %182 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %181, i64 3
  %183 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %182, align 8
  call void %183(%"class.SkSL::OutputStream"* %174, i8* nonnull %180, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %180) #14
  %184 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %184) #14
  store i32 %3, i32* %13, align 4
  %185 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %176, align 8
  %186 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %185, i64 3
  %187 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %186, align 8
  call void %187(%"class.SkSL::OutputStream"* %174, i8* nonnull %184, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %184) #14
  %188 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %188) #14
  store i32 11, i32* %12, align 4
  %189 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %176, align 8
  %190 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %189, i64 3
  %191 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %190, align 8
  call void %191(%"class.SkSL::OutputStream"* %174, i8* nonnull %188, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %188) #14
  %192 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %192) #14
  store i32 %171, i32* %11, align 4
  %193 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %176, align 8
  %194 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %193, i64 3
  %195 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %194, align 8
  call void %195(%"class.SkSL::OutputStream"* %174, i8* nonnull %192, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %192) #14
  br label %196

196:                                              ; preds = %173, %169
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4SkSL12MemoryLayout6strideERKNS_4TypeE(%"class.SkSL::MemoryLayout"*, %"class.SkSL::Type"* dereferenceable(184)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %52 [
    i32 4, label %5
    i32 0, label %23
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 6
  %7 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %6, align 8
  %8 = icmp eq %"class.SkSL::Type"* %7, null
  %9 = select i1 %8, %"class.SkSL::Type"* %1, %"class.SkSL::Type"* %7
  %10 = tail call i64 @_ZNK4SkSL12MemoryLayout4sizeERKNS_4TypeE(%"class.SkSL::MemoryLayout"* %0, %"class.SkSL::Type"* dereferenceable(184) %9)
  %11 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 9
  %12 = load i32, i32* %11, align 4
  %13 = srem i32 %12, 2
  %14 = add nsw i32 %13, %12
  %15 = sext i32 %14 to i64
  %16 = mul i64 %10, %15
  %17 = getelementptr inbounds %"class.SkSL::MemoryLayout", %"class.SkSL::MemoryLayout"* %0, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  switch i32 %18, label %22 [
    i32 0, label %19
    i32 1, label %53
    i32 2, label %53
  ]

19:                                               ; preds = %5
  %20 = add i64 %16, 15
  %21 = and i64 %20, -16
  br label %53

22:                                               ; preds = %5
  tail call void @llvm.trap() #14
  unreachable

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 6
  %25 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %24, align 8
  %26 = icmp eq %"class.SkSL::Type"* %25, null
  %27 = select i1 %26, %"class.SkSL::Type"* %1, %"class.SkSL::Type"* %25
  %28 = tail call i64 @_ZNK4SkSL12MemoryLayout4sizeERKNS_4TypeE(%"class.SkSL::MemoryLayout"* %0, %"class.SkSL::Type"* dereferenceable(184) %27)
  %29 = trunc i64 %28 to i32
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %31, label %48

31:                                               ; preds = %23
  %32 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %24, align 8
  %33 = icmp eq %"class.SkSL::Type"* %32, null
  %34 = select i1 %33, %"class.SkSL::Type"* %1, %"class.SkSL::Type"* %32
  %35 = tail call i64 @_ZNK4SkSL12MemoryLayout9alignmentERKNS_4TypeE(%"class.SkSL::MemoryLayout"* %0, %"class.SkSL::Type"* dereferenceable(184) %34)
  %36 = trunc i64 %35 to i32
  %37 = add nsw i32 %29, -1
  %38 = add i32 %37, %36
  %39 = srem i32 %38, %36
  %40 = sub nsw i32 %38, %39
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %"class.SkSL::MemoryLayout", %"class.SkSL::MemoryLayout"* %0, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  switch i32 %43, label %47 [
    i32 0, label %44
    i32 1, label %48
    i32 2, label %48
  ]

44:                                               ; preds = %31
  %45 = add nsw i64 %41, 15
  %46 = and i64 %45, -16
  br label %48

47:                                               ; preds = %31
  tail call void @llvm.trap() #14
  unreachable

48:                                               ; preds = %44, %31, %31, %23
  %49 = phi i64 [ %28, %23 ], [ %46, %44 ], [ %41, %31 ], [ %41, %31 ]
  %50 = shl i64 %49, 32
  %51 = ashr exact i64 %50, 32
  br label %53

52:                                               ; preds = %2
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.38, i64 0, i64 0), i32 98, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.40, i64 0, i64 0)) #15
  unreachable

53:                                               ; preds = %19, %5, %5, %48
  %54 = phi i64 [ %51, %48 ], [ %21, %19 ], [ %16, %5 ], [ %16, %5 ]
  ret i64 %54
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(184) %"class.SkSL::Type"* @_ZN4SkSL18SPIRVCodeGenerator13getActualTypeERKNS_4TypeE(%"class.SkSL::SPIRVCodeGenerator"* nocapture readonly, %"class.SkSL::Type"* readonly dereferenceable(184)) local_unnamed_addr #0 align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"struct.SkSL::StringFragment"*
  %5 = alloca <2 x i64>, align 16
  %6 = bitcast <2 x i64>* %5 to %"struct.SkSL::StringFragment"*
  %7 = alloca <2 x i64>, align 16
  %8 = bitcast <2 x i64>* %7 to %"struct.SkSL::StringFragment"*
  %9 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 4
  %10 = load i32, i32* %9, align 4
  switch i32 %10, label %16 [
    i32 0, label %11
    i32 1, label %20
  ]

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 1
  %13 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %12, align 8
  %14 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %14, align 8
  br label %110

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 3
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %25

20:                                               ; preds = %2, %16
  %21 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 1
  %22 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %21, align 8
  %23 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %22, i64 0, i32 0, i32 8, i32 0, i32 0, i32 0
  %24 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %23, align 8
  br label %110

25:                                               ; preds = %16
  %26 = icmp eq i32 %10, 2
  br i1 %26, label %27, label %32

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 1
  %29 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %28, align 8
  %30 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %29, i64 0, i32 0, i32 12, i32 0, i32 0, i32 0
  %31 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %30, align 8
  br label %110

32:                                               ; preds = %25
  switch i32 %18, label %110 [
    i32 4, label %33
    i32 11, label %33
  ]

33:                                               ; preds = %32, %32
  %34 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 6
  %35 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %34, align 8
  %36 = icmp eq %"class.SkSL::Type"* %35, null
  %37 = select i1 %36, %"class.SkSL::Type"* %1, %"class.SkSL::Type"* %35
  %38 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 1
  %39 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %38, align 8
  %40 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %39, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %41 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %40, align 8
  %42 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #14
  %43 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %37, i64 0, i32 0, i32 1, i32 0
  %44 = bitcast i8** %43 to <2 x i64>*
  %45 = load <2 x i64>, <2 x i64>* %44, align 8
  store <2 x i64> %45, <2 x i64>* %3, align 16
  %46 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %41, i64 0, i32 0, i32 1, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %41, i64 0, i32 0, i32 1, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %4, i8* %47, i64 %49) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #14
  br i1 %50, label %51, label %60

51:                                               ; preds = %33
  %52 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %38, align 8
  %53 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %53, align 8
  %55 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 8
  %56 = load i32, i32* %55, align 8
  %57 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 9
  %58 = load i32, i32* %57, align 4
  %59 = call dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL4Type10toCompoundERKNS_7ContextEii(%"class.SkSL::Type"* %54, %"class.SkSL::Context"* dereferenceable(744) %52, i32 %56, i32 %58) #14
  br label %110

60:                                               ; preds = %33
  %61 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %34, align 8
  %62 = icmp eq %"class.SkSL::Type"* %61, null
  %63 = select i1 %62, %"class.SkSL::Type"* %1, %"class.SkSL::Type"* %61
  %64 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %38, align 8
  %65 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %64, i64 0, i32 0, i32 16, i32 0, i32 0, i32 0
  %66 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %65, align 8
  %67 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %67) #14
  %68 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %63, i64 0, i32 0, i32 1, i32 0
  %69 = bitcast i8** %68 to <2 x i64>*
  %70 = load <2 x i64>, <2 x i64>* %69, align 8
  store <2 x i64> %70, <2 x i64>* %5, align 16
  %71 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %66, i64 0, i32 0, i32 1, i32 0
  %72 = load i8*, i8** %71, align 8
  %73 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %66, i64 0, i32 0, i32 1, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %6, i8* %72, i64 %74) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67) #14
  br i1 %75, label %76, label %85

76:                                               ; preds = %60
  %77 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %38, align 8
  %78 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %77, i64 0, i32 0, i32 8, i32 0, i32 0, i32 0
  %79 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %78, align 8
  %80 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 8
  %81 = load i32, i32* %80, align 8
  %82 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 9
  %83 = load i32, i32* %82, align 4
  %84 = call dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL4Type10toCompoundERKNS_7ContextEii(%"class.SkSL::Type"* %79, %"class.SkSL::Context"* dereferenceable(744) %77, i32 %81, i32 %83) #14
  br label %110

85:                                               ; preds = %60
  %86 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %34, align 8
  %87 = icmp eq %"class.SkSL::Type"* %86, null
  %88 = select i1 %87, %"class.SkSL::Type"* %1, %"class.SkSL::Type"* %86
  %89 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %38, align 8
  %90 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %89, i64 0, i32 0, i32 20, i32 0, i32 0, i32 0
  %91 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %90, align 8
  %92 = bitcast <2 x i64>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %92) #14
  %93 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %88, i64 0, i32 0, i32 1, i32 0
  %94 = bitcast i8** %93 to <2 x i64>*
  %95 = load <2 x i64>, <2 x i64>* %94, align 8
  store <2 x i64> %95, <2 x i64>* %7, align 16
  %96 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %91, i64 0, i32 0, i32 1, i32 0
  %97 = load i8*, i8** %96, align 8
  %98 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %91, i64 0, i32 0, i32 1, i32 1
  %99 = load i64, i64* %98, align 8
  %100 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %8, i8* %97, i64 %99) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %92) #14
  br i1 %100, label %101, label %110

101:                                              ; preds = %85
  %102 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %38, align 8
  %103 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %102, i64 0, i32 0, i32 12, i32 0, i32 0, i32 0
  %104 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %103, align 8
  %105 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 8
  %106 = load i32, i32* %105, align 8
  %107 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 9
  %108 = load i32, i32* %107, align 4
  %109 = call dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL4Type10toCompoundERKNS_7ContextEii(%"class.SkSL::Type"* %104, %"class.SkSL::Context"* dereferenceable(744) %102, i32 %106, i32 %108) #14
  br label %110

110:                                              ; preds = %32, %85, %101, %76, %51, %27, %20, %11
  %111 = phi %"class.SkSL::Type"* [ %15, %11 ], [ %24, %20 ], [ %31, %27 ], [ %59, %51 ], [ %84, %76 ], [ %109, %101 ], [ %1, %85 ], [ %1, %32 ]
  ret %"class.SkSL::Type"* %111
}

declare dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL4Type10toCompoundERKNS_7ContextEii(%"class.SkSL::Type"*, %"class.SkSL::Context"* dereferenceable(744), i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::Type"* dereferenceable(184)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %4 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %1, %"class.SkSL::MemoryLayout"* dereferenceable(4) %3)
  ret i32 %4
}

declare dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #2

declare dereferenceable(184) %"class.SkSL::Type"* @_ZN4SkSL15IndexExpression9IndexTypeERKNS_7ContextERKNS_4TypeE(%"class.SkSL::Context"* dereferenceable(744), %"class.SkSL::Type"* dereferenceable(184)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator15writeIntLiteralERKNS_7LiteralIlEE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::Literal"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %"struct.std::__1::pair.495", align 8
  %8 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %1, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %1, i64 0, i32 0, i32 1
  %11 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %10, align 8
  %12 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %11, i64 0, i32 4
  %13 = load i32, i32* %12, align 4
  %14 = bitcast %"struct.std::__1::pair.495"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #14
  %15 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %7, i64 0, i32 0, i32 0
  store i64 %9, i64* %15, align 8
  %16 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %7, i64 0, i32 0, i32 1
  store i32 %13, i32* %16, align 8
  %17 = getelementptr inbounds i8, i8* %14, i64 12
  %18 = bitcast i8* %17 to i32*
  store i32 -1431655766, i32* %18, align 4
  %19 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %7, i64 0, i32 1
  store i32 -1, i32* %19, align 8
  %20 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 22, i32 0
  %21 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %7, i64 0, i32 0
  %22 = call { %"struct.std::__1::__hash_node_base.245"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL19SPIRVNumberConstantEjEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_S9_S7_Lb1EEENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS3_JNS_4pairIKS3_jEEEEENSH_INS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.241"* %20, %"struct.SkSL::SPIRVNumberConstant"* nonnull dereferenceable(16) %21, %"struct.std::__1::pair.495"* nonnull dereferenceable(24) %7) #14
  %23 = extractvalue { %"struct.std::__1::__hash_node_base.245"*, i8 } %22, 0
  %24 = extractvalue { %"struct.std::__1::__hash_node_base.245"*, i8 } %22, 1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #14
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %30

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base.245", %"struct.std::__1::__hash_node_base.245"* %23, i64 4
  %28 = bitcast %"struct.std::__1::__hash_node_base.245"* %27 to i32*
  %29 = load i32, i32* %28, align 8
  br label %59

30:                                               ; preds = %2
  %31 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %32 = load i32, i32* %31, align 8
  %33 = add i32 %32, 1
  store i32 %33, i32* %31, align 8
  %34 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %10, align 8
  %35 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %36 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %34, %"class.SkSL::MemoryLayout"* dereferenceable(4) %35) #14
  %37 = load i64, i64* %8, align 8
  %38 = trunc i64 %37 to i32
  %39 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 15, i32 0
  %40 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %40) #14
  store i32 262187, i32* %3, align 4
  %41 = bitcast %"class.SkSL::OutputStream"* %39 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %42 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %42, i64 3
  %44 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %43, align 8
  call void %44(%"class.SkSL::OutputStream"* %39, i8* nonnull %40, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40) #14
  %45 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %45) #14
  store i32 %36, i32* %6, align 4
  %46 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %41, align 8
  %47 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %46, i64 3
  %48 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %47, align 8
  call void %48(%"class.SkSL::OutputStream"* %39, i8* nonnull %45, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %45) #14
  %49 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %49) #14
  store i32 %32, i32* %5, align 4
  %50 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %41, align 8
  %51 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %50, i64 3
  %52 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %51, align 8
  call void %52(%"class.SkSL::OutputStream"* %39, i8* nonnull %49, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %49) #14
  %53 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %53) #14
  store i32 %38, i32* %4, align 4
  %54 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %41, align 8
  %55 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %54, i64 3
  %56 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %55, align 8
  call void %56(%"class.SkSL::OutputStream"* %39, i8* nonnull %53, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %53) #14
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.245", %"struct.std::__1::__hash_node_base.245"* %23, i64 4
  %58 = bitcast %"struct.std::__1::__hash_node_base.245"* %57 to i32*
  store i32 %32, i32* %58, align 8
  br label %59

59:                                               ; preds = %26, %30
  %60 = phi i32 [ %29, %26 ], [ %32, %30 ]
  ret i32 %60
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"*, i32, i8*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.SkSL::String", align 8
  %5 = tail call i64 @strlen(i8* %2) #14
  %6 = icmp ugt i64 %5, -17
  br i1 %6, label %7, label %9

7:                                                ; preds = %3
  %8 = bitcast %"class.SkSL::String"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %8) #15
  unreachable

9:                                                ; preds = %3
  %10 = icmp ult i64 %5, 23
  br i1 %10, label %20, label %11

11:                                               ; preds = %9
  %12 = add nuw i64 %5, 16
  %13 = and i64 %12, -16
  %14 = tail call i8* @_Znwm(i64 %13) #16
  %15 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %14, i8** %15, align 8
  %16 = or i64 %13, -9223372036854775808
  %17 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %5, i64* %18, align 8
  %19 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %26

20:                                               ; preds = %9
  %21 = trunc i64 %5 to i8
  %22 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  store i8 %21, i8* %23, align 1
  %24 = bitcast %"class.SkSL::String"* %4 to i8*
  %25 = icmp eq i64 %5, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20, %11
  %27 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %22, %20 ], [ %19, %11 ]
  %28 = phi i8* [ %24, %20 ], [ %14, %11 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* align 1 %2, i64 %5, i1 false) #14
  br label %29

29:                                               ; preds = %20, %26
  %30 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %22, %20 ], [ %27, %26 ]
  %31 = phi i8* [ %24, %20 ], [ %28, %26 ]
  %32 = getelementptr inbounds i8, i8* %31, i64 %5
  store i8 0, i8* %32, align 1
  %33 = bitcast %"class.SkSL::ErrorReporter"* %0 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %34 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %34, i64 2
  %36 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %35, align 8
  call void %36(%"class.SkSL::ErrorReporter"* %0, i32 %1, %"class.SkSL::String"* nonnull %4) #14
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %42) #16
  br label %43

43:                                               ; preds = %29, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator12getImageTypeERKNS_4TypeE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::Type"* dereferenceable(184)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::tuple.652", align 8
  %4 = alloca %"class.std::__1::tuple.633", align 1
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca <2 x i64>, align 16
  %7 = bitcast <2 x i64>* %6 to %"struct.SkSL::StringFragment"*
  %8 = alloca %"class.SkSL::String", align 8
  %9 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %10 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %1, %"class.SkSL::MemoryLayout"* dereferenceable(4) %9) #14
  %11 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #14
  %12 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = bitcast <2 x i64>* %6 to i8*
  %14 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #14
  %15 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 0, i32 1, i32 0
  %16 = bitcast i8** %15 to <2 x i64>*
  %17 = load <2 x i64>, <2 x i64>* %16, align 8
  store <2 x i64> %17, <2 x i64>* %6, align 16
  %18 = bitcast %"class.SkSL::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #14
  %19 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2, i32 0
  %20 = load i32, i32* %19, align 8
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %8, i32 %20) #14
  call void @_ZNK4SkSL14StringFragmentplERKNS_6StringE(%"class.SkSL::String"* nonnull sret %5, %"struct.SkSL::StringFragment"* nonnull %7, %"class.SkSL::String"* nonnull dereferenceable(24) %8) #14
  %21 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %2
  %26 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %27) #16
  br label %28

28:                                               ; preds = %2, %25
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #14
  %29 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 11, i32 0
  %30 = bitcast %"class.std::__1::tuple.652"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #14
  %31 = getelementptr inbounds %"class.std::__1::tuple.652", %"class.std::__1::tuple.652"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::String"* %5, %"class.SkSL::String"** %31, align 8
  %32 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %32) #14
  %33 = call { %"struct.std::__1::__hash_node_base.218"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringEjEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_S9_S7_Lb1EEENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSK_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.214"* %29, %"class.SkSL::String"* nonnull dereferenceable(24) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.652"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %4) #14
  %34 = extractvalue { %"struct.std::__1::__hash_node_base.218"*, i8 } %33, 0
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218", %"struct.std::__1::__hash_node_base.218"* %34, i64 5
  %36 = bitcast %"struct.std::__1::__hash_node_base.218"* %35 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %32) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #14
  %37 = load i32, i32* %36, align 4
  %38 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %28
  %43 = load i8*, i8** %12, align 8
  call void @_ZdlPv(i8* %43) #16
  br label %44

44:                                               ; preds = %28, %42
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #14
  ret i32 %37
}

declare void @_ZNK4SkSL14StringFragmentplERKNS_6StringE(%"class.SkSL::String"* sret, %"struct.SkSL::StringFragment"*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator15getFunctionTypeERKNS_19FunctionDeclarationE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::FunctionDeclaration"* nocapture readonly dereferenceable(96)) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %"class.std::__1::tuple.652", align 8
  %7 = alloca %"class.std::__1::tuple.633", align 1
  %8 = alloca i32, align 4
  %9 = alloca %"class.SkSL::String", align 8
  %10 = alloca %"class.SkSL::String", align 8
  %11 = alloca %"class.SkSL::String", align 8
  %12 = alloca %"class.SkSL::String", align 8
  %13 = alloca %"class.SkSL::String", align 8
  %14 = alloca %"class.std::__1::vector.382", align 8
  %15 = bitcast %"class.SkSL::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #14
  %16 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.SkSL::String"* %10 to i8*
  %18 = bitcast %"class.SkSL::String"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #14
  %19 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %1, i64 0, i32 4
  %20 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %19, align 8
  %21 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %22 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %20, %"class.SkSL::MemoryLayout"* dereferenceable(4) %21) #14
  call void @_ZN4SkSL9to_stringEj(%"class.SkSL::String"* nonnull sret %10, i32 %22) #14
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %9, %"class.SkSL::String"* nonnull %10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #14
  %23 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @_ZdlPv(i8* %29) #16
  br label %30

30:                                               ; preds = %2, %27
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #14
  %31 = bitcast %"class.SkSL::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #14
  %32 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 24, i1 false) #14
  %33 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %1, i64 0, i32 3
  %34 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %1, i64 0, i32 3, i32 0, i32 1
  %35 = bitcast %"class.SkSL::Variable"*** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.std::__1::vector.422"* %33 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %36, %38
  br i1 %39, label %53, label %40

40:                                               ; preds = %30
  %41 = bitcast %"class.SkSL::String"* %12 to i8*
  %42 = bitcast %"class.SkSL::String"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = bitcast %"class.SkSL::String"* %12 to i16*
  %45 = getelementptr inbounds i8, i8* %41, i64 2
  %46 = bitcast %"class.SkSL::String"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %48 = bitcast %"class.SkSL::String"* %13 to i8*
  %49 = getelementptr inbounds %"class.std::__1::vector.422", %"class.std::__1::vector.422"* %33, i64 0, i32 0, i32 0
  %50 = bitcast %"class.SkSL::String"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %58

53:                                               ; preds = %78, %30
  %54 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* nonnull %9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #14
  %55 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 12, i32 0
  %56 = call %"struct.std::__1::__hash_node_base.218"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringEjEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_S9_S7_Lb1EEENS_9allocatorIS4_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEERKT_(%"class.std::__1::__hash_table.214"* %55, %"class.SkSL::String"* nonnull dereferenceable(24) %9) #14
  %57 = icmp eq %"struct.std::__1::__hash_node_base.218"* %56, null
  br i1 %57, label %85, label %229

58:                                               ; preds = %40, %78
  %59 = phi i64 [ 0, %40 ], [ %79, %78 ]
  %60 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* nonnull %9, %"class.SkSL::String"* nonnull dereferenceable(24) %11) #14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #14
  store i8 2, i8* %43, align 1
  store i16 8236, i16* %44, align 8
  store i8 0, i8* %45, align 2
  %61 = load i8, i8* %47, align 1
  %62 = icmp slt i8 %61, 0
  br i1 %62, label %63, label %65

63:                                               ; preds = %58
  %64 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %64) #16
  br label %65

65:                                               ; preds = %58, %63
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %31, i8* nonnull align 8 %41, i64 24, i1 false) #14
  %66 = load %"class.SkSL::Variable"**, %"class.SkSL::Variable"*** %49, align 8
  %67 = getelementptr inbounds %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %66, i64 %59
  %68 = bitcast %"class.SkSL::Variable"** %67 to %"class.SkSL::Symbol"**
  %69 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %68, align 8
  %70 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %69, i64 0, i32 2
  %71 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %70, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #14
  %72 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %71, %"class.SkSL::MemoryLayout"* dereferenceable(4) %21) #14
  call void @_ZN4SkSL9to_stringEj(%"class.SkSL::String"* nonnull sret %13, i32 %72) #14
  %73 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* nonnull %9, %"class.SkSL::String"* nonnull dereferenceable(24) %13) #14
  %74 = load i8, i8* %51, align 1
  %75 = icmp slt i8 %74, 0
  br i1 %75, label %76, label %78

76:                                               ; preds = %65
  %77 = load i8*, i8** %52, align 8
  call void @_ZdlPv(i8* %77) #16
  br label %78

78:                                               ; preds = %65, %76
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #14
  %79 = add nuw i64 %59, 1
  %80 = load i64, i64* %35, align 8
  %81 = load i64, i64* %37, align 8
  %82 = sub i64 %80, %81
  %83 = ashr exact i64 %82, 3
  %84 = icmp ult i64 %79, %83
  br i1 %84, label %58, label %53

85:                                               ; preds = %53
  %86 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %87 = load i32, i32* %86, align 8
  %88 = add i32 %87, 1
  store i32 %88, i32* %86, align 8
  %89 = load i64, i64* %35, align 8
  %90 = load i64, i64* %37, align 8
  %91 = sub i64 %89, %90
  %92 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %19, align 8
  %93 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %92, %"class.SkSL::MemoryLayout"* dereferenceable(4) %21) #14
  %94 = bitcast %"class.std::__1::vector.382"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %94) #14
  %95 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %14, i64 0, i32 0, i32 0
  %96 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %14, i64 0, i32 0, i32 1
  %97 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %14, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %94, i8 0, i64 24, i1 false) #14
  %98 = load i64, i64* %35, align 8
  %99 = load i64, i64* %37, align 8
  %100 = icmp eq i64 %98, %99
  br i1 %100, label %105, label %101

101:                                              ; preds = %85
  %102 = bitcast i32** %96 to i64*
  %103 = bitcast %"class.std::__1::vector.382"* %14 to i64*
  %104 = bitcast i32** %97 to i64*
  br label %130

105:                                              ; preds = %195, %85
  %106 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 15, i32 0
  %107 = trunc i64 %91 to i32
  %108 = shl i32 %107, 13
  %109 = add i32 %108, 196608
  %110 = and i32 %109, -65536
  %111 = or i32 %110, 33
  %112 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %112) #14
  store i32 %111, i32* %4, align 4
  %113 = bitcast %"class.SkSL::OutputStream"* %106 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %114 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %113, align 8
  %115 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %114, i64 3
  %116 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %115, align 8
  call void %116(%"class.SkSL::OutputStream"* %106, i8* nonnull %112, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %112) #14
  %117 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %117)
  store i32 %87, i32* %3, align 4
  %118 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %113, align 8
  %119 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %118, i64 3
  %120 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %119, align 8
  call void %120(%"class.SkSL::OutputStream"* %106, i8* nonnull %117, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %117)
  %121 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %121)
  store i32 %93, i32* %5, align 4
  %122 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %113, align 8
  %123 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %122, i64 3
  %124 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %123, align 8
  call void %124(%"class.SkSL::OutputStream"* %106, i8* nonnull %121, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %121)
  %125 = load i32*, i32** %95, align 8
  %126 = load i32*, i32** %96, align 8
  %127 = icmp eq i32* %125, %126
  br i1 %127, label %206, label %128

128:                                              ; preds = %105
  %129 = bitcast i32* %8 to i8*
  br label %221

130:                                              ; preds = %202, %101
  %131 = phi i64 [ 0, %101 ], [ %205, %202 ]
  %132 = phi i32* [ null, %101 ], [ %204, %202 ]
  %133 = phi i32* [ null, %101 ], [ %203, %202 ]
  %134 = phi i64 [ %99, %101 ], [ %198, %202 ]
  %135 = phi i64 [ 0, %101 ], [ %196, %202 ]
  %136 = inttoptr i64 %134 to %"class.SkSL::Variable"**
  %137 = getelementptr inbounds %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %136, i64 %135
  %138 = bitcast %"class.SkSL::Variable"** %137 to %"class.SkSL::Symbol"**
  %139 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %138, align 8
  %140 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %139, i64 0, i32 2
  %141 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %140, align 8
  %142 = call i32 @_ZN4SkSL18SPIRVCodeGenerator14getPointerTypeERKNS_4TypeERKNS_12MemoryLayoutE16SpvStorageClass_(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %141, %"class.SkSL::MemoryLayout"* dereferenceable(4) %21, i32 7) #14
  %143 = icmp ult i32* %133, %132
  %144 = ptrtoint i32* %132 to i64
  br i1 %143, label %145, label %148

145:                                              ; preds = %130
  store i32 %142, i32* %133, align 4
  %146 = getelementptr inbounds i32, i32* %133, i64 1
  %147 = ptrtoint i32* %146 to i64
  store i64 %147, i64* %102, align 8
  br label %195

148:                                              ; preds = %130
  %149 = ptrtoint i32* %133 to i64
  %150 = load i64, i64* %103, align 8
  %151 = sub i64 %149, %150
  %152 = ashr exact i64 %151, 2
  %153 = add nsw i64 %152, 1
  %154 = icmp ugt i64 %153, 4611686018427387903
  br i1 %154, label %155, label %157

155:                                              ; preds = %148
  %156 = bitcast %"class.std::__1::vector.382"* %14 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %156) #15
  unreachable

157:                                              ; preds = %148
  %158 = sub i64 %144, %150
  %159 = ashr exact i64 %158, 2
  %160 = icmp ult i64 %159, 2305843009213693951
  br i1 %160, label %161, label %169

161:                                              ; preds = %157
  %162 = ashr exact i64 %158, 1
  %163 = icmp ult i64 %162, %153
  %164 = select i1 %163, i64 %153, i64 %162
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %174, label %166

166:                                              ; preds = %161
  %167 = icmp ugt i64 %164, 4611686018427387903
  br i1 %167, label %168, label %169

168:                                              ; preds = %166
  call void @abort() #15
  unreachable

169:                                              ; preds = %166, %157
  %170 = phi i64 [ %164, %166 ], [ 4611686018427387903, %157 ]
  %171 = shl i64 %170, 2
  %172 = call i8* @_Znwm(i64 %171) #16
  %173 = bitcast i8* %172 to i32*
  br label %174

174:                                              ; preds = %169, %161
  %175 = phi i64 [ %170, %169 ], [ 0, %161 ]
  %176 = phi i32* [ %173, %169 ], [ null, %161 ]
  %177 = getelementptr inbounds i32, i32* %176, i64 %152
  %178 = getelementptr inbounds i32, i32* %176, i64 %175
  %179 = ptrtoint i32* %178 to i64
  store i32 %142, i32* %177, align 4
  %180 = getelementptr inbounds i32, i32* %177, i64 1
  %181 = ptrtoint i32* %180 to i64
  %182 = sub i64 %131, %150
  %183 = ashr exact i64 %182, 2
  %184 = sub nsw i64 0, %183
  %185 = getelementptr inbounds i32, i32* %177, i64 %184
  %186 = ptrtoint i32* %185 to i64
  %187 = icmp sgt i64 %182, 0
  br i1 %187, label %188, label %191

188:                                              ; preds = %174
  %189 = bitcast i32* %185 to i8*
  %190 = inttoptr i64 %150 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %189, i8* align 4 %190, i64 %182, i1 false) #14
  br label %191

191:                                              ; preds = %188, %174
  store i64 %186, i64* %103, align 8
  store i64 %181, i64* %102, align 8
  store i64 %179, i64* %104, align 8
  %192 = icmp eq i64 %150, 0
  br i1 %192, label %195, label %193

193:                                              ; preds = %191
  %194 = inttoptr i64 %150 to i8*
  call void @_ZdlPv(i8* %194) #16
  br label %195

195:                                              ; preds = %145, %191, %193
  %196 = add nuw i64 %135, 1
  %197 = load i64, i64* %35, align 8
  %198 = load i64, i64* %37, align 8
  %199 = sub i64 %197, %198
  %200 = ashr exact i64 %199, 3
  %201 = icmp ult i64 %196, %200
  br i1 %201, label %202, label %105

202:                                              ; preds = %195
  %203 = load i32*, i32** %96, align 8
  %204 = load i32*, i32** %97, align 8
  %205 = ptrtoint i32* %203 to i64
  br label %130

206:                                              ; preds = %221, %105
  %207 = bitcast %"class.std::__1::tuple.652"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %207) #14
  %208 = getelementptr inbounds %"class.std::__1::tuple.652", %"class.std::__1::tuple.652"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::String"* %9, %"class.SkSL::String"** %208, align 8
  %209 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %209) #14
  %210 = call { %"struct.std::__1::__hash_node_base.218"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringEjEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_S9_S7_Lb1EEENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSK_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.214"* %55, %"class.SkSL::String"* nonnull dereferenceable(24) %9, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.652"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %7) #14
  %211 = extractvalue { %"struct.std::__1::__hash_node_base.218"*, i8 } %210, 0
  %212 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218", %"struct.std::__1::__hash_node_base.218"* %211, i64 5
  %213 = bitcast %"struct.std::__1::__hash_node_base.218"* %212 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %209) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %207) #14
  store i32 %87, i32* %213, align 4
  %214 = load i32*, i32** %95, align 8
  %215 = icmp eq i32* %214, null
  br i1 %215, label %220, label %216

216:                                              ; preds = %206
  %217 = ptrtoint i32* %214 to i64
  %218 = bitcast i32** %96 to i64*
  store i64 %217, i64* %218, align 8
  %219 = bitcast i32* %214 to i8*
  call void @_ZdlPv(i8* %219) #16
  br label %220

220:                                              ; preds = %206, %216
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %94) #14
  br label %233

221:                                              ; preds = %128, %221
  %222 = phi i32* [ %125, %128 ], [ %227, %221 ]
  %223 = load i32, i32* %222, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %129)
  store i32 %223, i32* %8, align 4
  %224 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %113, align 8
  %225 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %224, i64 3
  %226 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %225, align 8
  call void %226(%"class.SkSL::OutputStream"* %106, i8* nonnull %129, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %129)
  %227 = getelementptr inbounds i32, i32* %222, i64 1
  %228 = icmp eq i32* %227, %126
  br i1 %228, label %206, label %221

229:                                              ; preds = %53
  %230 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218", %"struct.std::__1::__hash_node_base.218"* %56, i64 5
  %231 = bitcast %"struct.std::__1::__hash_node_base.218"* %230 to i32*
  %232 = load i32, i32* %231, align 8
  br label %233

233:                                              ; preds = %229, %220
  %234 = phi i32 [ %87, %220 ], [ %232, %229 ]
  %235 = bitcast %"class.SkSL::String"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %236 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %235, i64 0, i32 1, i32 0
  %237 = load i8, i8* %236, align 1
  %238 = icmp slt i8 %237, 0
  br i1 %238, label %239, label %241

239:                                              ; preds = %233
  %240 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %240) #16
  br label %241

241:                                              ; preds = %233, %239
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #14
  %242 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %243 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %242, i64 0, i32 1, i32 0
  %244 = load i8, i8* %243, align 1
  %245 = icmp slt i8 %244, 0
  br i1 %245, label %246, label %248

246:                                              ; preds = %241
  %247 = load i8*, i8** %16, align 8
  call void @_ZdlPv(i8* %247) #16
  br label %248

248:                                              ; preds = %241, %246
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #14
  ret i32 %234
}

declare void @_ZN4SkSL9to_stringEj(%"class.SkSL::String"* sret, i32) local_unnamed_addr #2

declare dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator14getPointerTypeERKNS_4TypeE16SpvStorageClass_(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::Type"* dereferenceable(184), i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %5 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator14getPointerTypeERKNS_4TypeERKNS_12MemoryLayoutE16SpvStorageClass_(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %1, %"class.SkSL::MemoryLayout"* dereferenceable(4) %4, i32 %2)
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator14getPointerTypeERKNS_4TypeERKNS_12MemoryLayoutE16SpvStorageClass_(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::Type"* dereferenceable(184), %"class.SkSL::MemoryLayout"* nocapture readonly dereferenceable(4), i32) local_unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %"class.std::__1::tuple.652", align 8
  %10 = alloca %"class.std::__1::tuple.633", align 1
  %11 = alloca %"class.SkSL::String", align 8
  %12 = alloca %"class.SkSL::String", align 8
  %13 = alloca %"class.SkSL::String", align 8
  %14 = alloca %"class.SkSL::String", align 8
  %15 = alloca %"class.SkSL::String", align 8
  %16 = alloca %"class.SkSL::String", align 8
  %17 = tail call dereferenceable(184) %"class.SkSL::Type"* @_ZN4SkSL18SPIRVCodeGenerator13getActualTypeERKNS_4TypeE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %1)
  %18 = bitcast %"class.SkSL::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #14
  %19 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.SkSL::String"* %12 to i8*
  %21 = bitcast %"class.SkSL::String"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #14
  %22 = bitcast %"class.SkSL::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #14
  %23 = bitcast %"class.SkSL::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #14
  %24 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %17, i64 0, i32 18
  %25 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %24, align 8, !noalias !3
  %26 = icmp eq %"class.SkSL::Type"* %25, null
  %27 = select i1 %26, %"class.SkSL::Type"* %17, %"class.SkSL::Type"* %25
  %28 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %27, i64 0, i32 0, i32 1, i32 0
  %29 = load i8*, i8** %28, align 8, !noalias !3
  %30 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %27, i64 0, i32 0, i32 1, i32 1
  %31 = load i64, i64* %30, align 8, !noalias !3
  %32 = icmp ugt i64 %31, -17
  br i1 %32, label %33, label %35

33:                                               ; preds = %4
  %34 = bitcast %"class.SkSL::String"* %14 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %34) #15
  unreachable

35:                                               ; preds = %4
  %36 = icmp ult i64 %31, 23
  br i1 %36, label %45, label %37

37:                                               ; preds = %35
  %38 = add nuw i64 %31, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #16
  %41 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %40, i8** %41, align 8, !alias.scope !3
  %42 = or i64 %39, -9223372036854775808
  %43 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %42, i64* %43, align 8, !alias.scope !3
  %44 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %31, i64* %44, align 8, !alias.scope !3
  br label %50

45:                                               ; preds = %35
  %46 = trunc i64 %31 to i8
  %47 = bitcast %"class.SkSL::String"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  store i8 %46, i8* %48, align 1, !alias.scope !3
  %49 = icmp eq i64 %31, 0
  br i1 %49, label %52, label %50

50:                                               ; preds = %45, %37
  %51 = phi i8* [ %40, %37 ], [ %23, %45 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %51, i8* align 1 %29, i64 %31, i1 false) #14
  br label %52

52:                                               ; preds = %45, %50
  %53 = phi i8* [ %23, %45 ], [ %51, %50 ]
  %54 = getelementptr inbounds i8, i8* %53, i64 %31
  store i8 0, i8* %54, align 1
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %13, %"class.SkSL::String"* nonnull %14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #14
  %55 = bitcast %"class.SkSL::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #14
  %56 = getelementptr inbounds %"class.SkSL::MemoryLayout", %"class.SkSL::MemoryLayout"* %2, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %15, i32 %57) #14
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %12, %"class.SkSL::String"* nonnull %13, %"class.SkSL::String"* nonnull dereferenceable(24) %15) #14
  %58 = bitcast %"class.SkSL::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #14
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %16, i32 %3) #14
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %11, %"class.SkSL::String"* nonnull %12, %"class.SkSL::String"* nonnull dereferenceable(24) %16) #14
  %59 = bitcast %"class.SkSL::String"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %52
  %64 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  call void @_ZdlPv(i8* %65) #16
  br label %66

66:                                               ; preds = %52, %63
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #14
  %67 = bitcast %"class.SkSL::String"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  call void @_ZdlPv(i8* %73) #16
  br label %74

74:                                               ; preds = %66, %71
  %75 = bitcast %"class.SkSL::String"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load i8*, i8** %80, align 8
  call void @_ZdlPv(i8* %81) #16
  br label %82

82:                                               ; preds = %74, %79
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #14
  %83 = bitcast %"class.SkSL::String"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %83, i64 0, i32 1, i32 0
  %85 = load i8, i8* %84, align 1
  %86 = icmp slt i8 %85, 0
  br i1 %86, label %87, label %90

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load i8*, i8** %88, align 8
  call void @_ZdlPv(i8* %89) #16
  br label %90

90:                                               ; preds = %82, %87
  %91 = bitcast %"class.SkSL::String"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %92 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %91, i64 0, i32 1, i32 0
  %93 = load i8, i8* %92, align 1
  %94 = icmp slt i8 %93, 0
  br i1 %94, label %95, label %98

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load i8*, i8** %96, align 8
  call void @_ZdlPv(i8* %97) #16
  br label %98

98:                                               ; preds = %90, %95
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #14
  %99 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 12, i32 0
  %100 = call %"struct.std::__1::__hash_node_base.218"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringEjEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_S9_S7_Lb1EEENS_9allocatorIS4_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEERKT_(%"class.std::__1::__hash_table.214"* %99, %"class.SkSL::String"* nonnull dereferenceable(24) %11) #14
  %101 = icmp eq %"struct.std::__1::__hash_node_base.218"* %100, null
  br i1 %101, label %102, label %133

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %104 = load i32, i32* %103, align 8
  %105 = add i32 %104, 1
  store i32 %105, i32* %103, align 8
  %106 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %107 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %17, %"class.SkSL::MemoryLayout"* dereferenceable(4) %106) #14
  %108 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 15, i32 0
  %109 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %109) #14
  store i32 262176, i32* %5, align 4
  %110 = bitcast %"class.SkSL::OutputStream"* %108 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %111 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %110, align 8
  %112 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %111, i64 3
  %113 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %112, align 8
  call void %113(%"class.SkSL::OutputStream"* %108, i8* nonnull %109, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %109) #14
  %114 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %114) #14
  store i32 %104, i32* %8, align 4
  %115 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %110, align 8
  %116 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %115, i64 3
  %117 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %116, align 8
  call void %117(%"class.SkSL::OutputStream"* %108, i8* nonnull %114, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %114) #14
  %118 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %118) #14
  store i32 %3, i32* %7, align 4
  %119 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %110, align 8
  %120 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %119, i64 3
  %121 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %120, align 8
  call void %121(%"class.SkSL::OutputStream"* %108, i8* nonnull %118, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %118) #14
  %122 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %122) #14
  store i32 %107, i32* %6, align 4
  %123 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %110, align 8
  %124 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %123, i64 3
  %125 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %124, align 8
  call void %125(%"class.SkSL::OutputStream"* %108, i8* nonnull %122, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %122) #14
  %126 = bitcast %"class.std::__1::tuple.652"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %126) #14
  %127 = getelementptr inbounds %"class.std::__1::tuple.652", %"class.std::__1::tuple.652"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::String"* %11, %"class.SkSL::String"** %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %128) #14
  %129 = call { %"struct.std::__1::__hash_node_base.218"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringEjEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_S9_S7_Lb1EEENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSK_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.214"* %99, %"class.SkSL::String"* nonnull dereferenceable(24) %11, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.652"* nonnull dereferenceable(8) %9, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %10) #14
  %130 = extractvalue { %"struct.std::__1::__hash_node_base.218"*, i8 } %129, 0
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218", %"struct.std::__1::__hash_node_base.218"* %130, i64 5
  %132 = bitcast %"struct.std::__1::__hash_node_base.218"* %131 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %128) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %126) #14
  store i32 %104, i32* %132, align 4
  br label %137

133:                                              ; preds = %98
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218", %"struct.std::__1::__hash_node_base.218"* %100, i64 5
  %135 = bitcast %"struct.std::__1::__hash_node_base.218"* %134 to i32*
  %136 = load i32, i32* %135, align 8
  br label %137

137:                                              ; preds = %133, %102
  %138 = phi i32 [ %104, %102 ], [ %136, %133 ]
  %139 = bitcast %"class.SkSL::String"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %140 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %139, i64 0, i32 1, i32 0
  %141 = load i8, i8* %140, align 1
  %142 = icmp slt i8 %141, 0
  br i1 %142, label %143, label %145

143:                                              ; preds = %137
  %144 = load i8*, i8** %19, align 8
  call void @_ZdlPv(i8* %144) #16
  br label %145

145:                                              ; preds = %137, %143
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #14
  ret i32 %138
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::Expression"* dereferenceable(24), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %92 [
    i32 30, label %6
    i32 31, label %9
    i32 33, label %12
    i32 40, label %12
    i32 36, label %15
    i32 37, label %18
    i32 38, label %32
    i32 39, label %35
    i32 34, label %38
    i32 35, label %49
    i32 43, label %52
    i32 44, label %55
    i32 45, label %68
    i32 47, label %71
    i32 49, label %74
    i32 50, label %77
    i32 52, label %80
    i32 55, label %83
    i32 53, label %86
    i32 48, label %89
  ]

6:                                                ; preds = %3
  %7 = bitcast %"class.SkSL::Expression"* %1 to %"class.SkSL::BinaryExpression"*
  %8 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator21writeBinaryExpressionERKNS_16BinaryExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::BinaryExpression"* dereferenceable(48) %7, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  br label %92

9:                                                ; preds = %3
  %10 = bitcast %"class.SkSL::Expression"* %1 to %"class.SkSL::Literal.429"*
  %11 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator16writeBoolLiteralERKNS_7LiteralIbEE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Literal.429"* dereferenceable(32) %10)
  br label %92

12:                                               ; preds = %3, %3
  %13 = tail call dereferenceable(32) %"class.SkSL::AnyConstructor"* @_ZNK4SkSL10Expression16asAnyConstructorEv(%"class.SkSL::Expression"* %1) #14
  %14 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator25writeCompositeConstructorERKNS_14AnyConstructorERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::AnyConstructor"* dereferenceable(32) %13, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  br label %92

15:                                               ; preds = %3
  %16 = bitcast %"class.SkSL::Expression"* %1 to %"class.SkSL::ConstructorDiagonalMatrix"*
  %17 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator30writeConstructorDiagonalMatrixERKNS_25ConstructorDiagonalMatrixERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::ConstructorDiagonalMatrix"* dereferenceable(72) %16, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  br label %92

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 1, i32 0, i32 1
  %20 = bitcast i32* %19 to %"class.SkSL::Expression"**
  %21 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %20, align 8
  %22 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %21, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %23 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %20, align 8
  %24 = bitcast %"class.SkSL::Expression"* %23 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %25 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %24, align 8
  %26 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %25, i64 3
  %27 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %26, align 8
  %28 = tail call dereferenceable(184) %"class.SkSL::Type"* %27(%"class.SkSL::Expression"* %23) #14
  %29 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 0, i32 1
  %30 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %29, align 8
  %31 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeMatrixCopyEjRKNS_4TypeES3_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 %22, %"class.SkSL::Type"* dereferenceable(184) %28, %"class.SkSL::Type"* dereferenceable(184) %30, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  ret i32 %31

32:                                               ; preds = %3
  %33 = bitcast %"class.SkSL::Expression"* %1 to %"class.SkSL::ConstructorScalarCast"*
  %34 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator26writeConstructorScalarCastERKNS_21ConstructorScalarCastERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::ConstructorScalarCast"* dereferenceable(40) %33, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  br label %92

35:                                               ; preds = %3
  %36 = bitcast %"class.SkSL::Expression"* %1 to %"class.SkSL::ConstructorSplat"*
  %37 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator21writeConstructorSplatERKNS_16ConstructorSplatERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::ConstructorSplat"* dereferenceable(40) %36, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  br label %92

38:                                               ; preds = %3
  %39 = bitcast %"class.SkSL::Expression"* %1 to %"class.SkSL::ConstructorCompound"*
  %40 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 0, i32 1
  %41 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %40, align 8
  %42 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %41, i64 0, i32 3
  %43 = load i32, i32* %42, align 8
  %44 = icmp eq i32 %43, 4
  br i1 %44, label %45, label %47

45:                                               ; preds = %38
  %46 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator22writeMatrixConstructorERKNS_19ConstructorCompoundERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::ConstructorCompound"* dereferenceable(64) %39, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  br label %92

47:                                               ; preds = %38
  %48 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator22writeVectorConstructorERKNS_19ConstructorCompoundERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::ConstructorCompound"* dereferenceable(64) %39, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  br label %92

49:                                               ; preds = %3
  %50 = bitcast %"class.SkSL::Expression"* %1 to %"class.SkSL::ConstructorCompoundCast"*
  %51 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator28writeConstructorCompoundCastERKNS_23ConstructorCompoundCastERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::ConstructorCompoundCast"* dereferenceable(40) %50, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  br label %92

52:                                               ; preds = %3
  %53 = bitcast %"class.SkSL::Expression"* %1 to %"class.SkSL::Literal"*
  %54 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeIntLiteralERKNS_7LiteralIlEE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Literal"* dereferenceable(32) %53)
  br label %92

55:                                               ; preds = %3
  %56 = tail call %"class.SkSL::SPIRVCodeGenerator::LValue"* @_ZN4SkSL18SPIRVCodeGenerator9getLValueERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %1, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %57 = bitcast %"class.SkSL::SPIRVCodeGenerator::LValue"* %56 to i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)***
  %58 = load i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)**, i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)*** %57, align 8
  %59 = getelementptr inbounds i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)*, i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)** %58, i64 5
  %60 = load i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)*, i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)** %59, align 8
  %61 = tail call i32 %60(%"class.SkSL::SPIRVCodeGenerator::LValue"* %56, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %62 = icmp eq %"class.SkSL::SPIRVCodeGenerator::LValue"* %56, null
  br i1 %62, label %92, label %63

63:                                               ; preds = %55
  %64 = bitcast %"class.SkSL::SPIRVCodeGenerator::LValue"* %56 to void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)***
  %65 = load void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)**, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)** %65, i64 1
  %67 = load void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)** %66, align 8
  tail call void %67(%"class.SkSL::SPIRVCodeGenerator::LValue"* nonnull %56) #14
  br label %92

68:                                               ; preds = %3
  %69 = bitcast %"class.SkSL::Expression"* %1 to %"class.SkSL::Literal.430"*
  %70 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator17writeFloatLiteralERKNS_7LiteralIfEE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Literal.430"* dereferenceable(32) %69)
  br label %92

71:                                               ; preds = %3
  %72 = bitcast %"class.SkSL::Expression"* %1 to %"class.SkSL::FunctionCall"*
  %73 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator17writeFunctionCallERKNS_12FunctionCallERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::FunctionCall"* dereferenceable(64) %72, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  br label %92

74:                                               ; preds = %3
  %75 = bitcast %"class.SkSL::Expression"* %1 to %"class.SkSL::PrefixExpression"*
  %76 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator21writePrefixExpressionERKNS_16PrefixExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::PrefixExpression"* dereferenceable(40) %75, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  br label %92

77:                                               ; preds = %3
  %78 = bitcast %"class.SkSL::Expression"* %1 to %"class.SkSL::PostfixExpression"*
  %79 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator22writePostfixExpressionERKNS_17PostfixExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::PostfixExpression"* dereferenceable(40) %78, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  br label %92

80:                                               ; preds = %3
  %81 = bitcast %"class.SkSL::Expression"* %1 to %"struct.SkSL::Swizzle"*
  %82 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator12writeSwizzleERKNS_7SwizzleERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"struct.SkSL::Swizzle"* dereferenceable(56) %81, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  br label %92

83:                                               ; preds = %3
  %84 = bitcast %"class.SkSL::Expression"* %1 to %"class.SkSL::VariableReference"*
  %85 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator22writeVariableReferenceERKNS_17VariableReferenceERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::VariableReference"* dereferenceable(40) %84, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  br label %92

86:                                               ; preds = %3
  %87 = bitcast %"class.SkSL::Expression"* %1 to %"class.SkSL::TernaryExpression"*
  %88 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator22writeTernaryExpressionERKNS_17TernaryExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::TernaryExpression"* dereferenceable(48) %87, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  br label %92

89:                                               ; preds = %3
  %90 = bitcast %"class.SkSL::Expression"* %1 to %"struct.SkSL::IndexExpression"*
  %91 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator20writeIndexExpressionERKNS_15IndexExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"struct.SkSL::IndexExpression"* dereferenceable(40) %90, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  br label %92

92:                                               ; preds = %63, %55, %47, %45, %3, %89, %86, %83, %80, %77, %74, %71, %68, %52, %49, %35, %32, %15, %12, %9, %6
  %93 = phi i32 [ %91, %89 ], [ %88, %86 ], [ %85, %83 ], [ %82, %80 ], [ %79, %77 ], [ %76, %74 ], [ %73, %71 ], [ %70, %68 ], [ %54, %52 ], [ %51, %49 ], [ %37, %35 ], [ %34, %32 ], [ %17, %15 ], [ %14, %12 ], [ %11, %9 ], [ %8, %6 ], [ -1, %3 ], [ %46, %45 ], [ %48, %47 ], [ %61, %55 ], [ %61, %63 ]
  ret i32 %93
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator21writeBinaryExpressionERKNS_16BinaryExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::BinaryExpression"* nocapture readonly dereferenceable(48), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.SkSL::Operator", align 4
  %5 = alloca %"class.SkSL::Literal.430", align 8
  %6 = getelementptr inbounds %"class.SkSL::BinaryExpression", %"class.SkSL::BinaryExpression"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %6, align 8
  %8 = getelementptr inbounds %"class.SkSL::BinaryExpression", %"class.SkSL::BinaryExpression"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %9 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %8, align 8
  %10 = bitcast %"class.SkSL::Operator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #14
  %11 = getelementptr inbounds %"class.SkSL::Operator", %"class.SkSL::Operator"* %4, i64 0, i32 0
  %12 = getelementptr inbounds %"class.SkSL::BinaryExpression", %"class.SkSL::BinaryExpression"* %1, i64 0, i32 2, i32 0
  %13 = load i32, i32* %12, align 8
  store i32 %13, i32* %11, align 4
  switch i32 %13, label %31 [
    i32 64, label %14
    i32 59, label %27
    i32 57, label %29
  ]

14:                                               ; preds = %3
  %15 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %9, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %16 = tail call %"class.SkSL::SPIRVCodeGenerator::LValue"* @_ZN4SkSL18SPIRVCodeGenerator9getLValueERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %7, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %17 = bitcast %"class.SkSL::SPIRVCodeGenerator::LValue"* %16 to void (%"class.SkSL::SPIRVCodeGenerator::LValue"*, i32, %"class.SkSL::OutputStream"*)***
  %18 = load void (%"class.SkSL::SPIRVCodeGenerator::LValue"*, i32, %"class.SkSL::OutputStream"*)**, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*, i32, %"class.SkSL::OutputStream"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.SkSL::SPIRVCodeGenerator::LValue"*, i32, %"class.SkSL::OutputStream"*)*, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*, i32, %"class.SkSL::OutputStream"*)** %18, i64 6
  %20 = load void (%"class.SkSL::SPIRVCodeGenerator::LValue"*, i32, %"class.SkSL::OutputStream"*)*, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*, i32, %"class.SkSL::OutputStream"*)** %19, align 8
  tail call void %20(%"class.SkSL::SPIRVCodeGenerator::LValue"* %16, i32 %15, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %21 = icmp eq %"class.SkSL::SPIRVCodeGenerator::LValue"* %16, null
  br i1 %21, label %108, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.SkSL::SPIRVCodeGenerator::LValue"* %16 to void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)***
  %24 = load void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)**, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)** %24, i64 1
  %26 = load void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)** %25, align 8
  tail call void %26(%"class.SkSL::SPIRVCodeGenerator::LValue"* nonnull %16) #14
  br label %108

27:                                               ; preds = %3
  %28 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeLogicalAndERKNS_10ExpressionES3_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %7, %"class.SkSL::Expression"* dereferenceable(24) %9, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  br label %108

29:                                               ; preds = %3
  %30 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator14writeLogicalOrERKNS_10ExpressionES3_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %7, %"class.SkSL::Expression"* dereferenceable(24) %9, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  br label %108

31:                                               ; preds = %3
  %32 = call zeroext i1 @_ZNK4SkSL8Operator12isAssignmentEv(%"class.SkSL::Operator"* nonnull %4) #14
  br i1 %32, label %33, label %40

33:                                               ; preds = %31
  %34 = call %"class.SkSL::SPIRVCodeGenerator::LValue"* @_ZN4SkSL18SPIRVCodeGenerator9getLValueERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %7, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %35 = bitcast %"class.SkSL::SPIRVCodeGenerator::LValue"* %34 to i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)***
  %36 = load i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)**, i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)*** %35, align 8
  %37 = getelementptr inbounds i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)*, i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)** %36, i64 5
  %38 = load i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)*, i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)** %37, align 8
  %39 = call i32 %38(%"class.SkSL::SPIRVCodeGenerator::LValue"* %34, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  br label %42

40:                                               ; preds = %31
  %41 = call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %7, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi %"class.SkSL::SPIRVCodeGenerator::LValue"* [ %34, %33 ], [ null, %40 ]
  %44 = phi i32 [ %39, %33 ], [ %41, %40 ]
  %45 = load i32, i32* %11, align 4
  %46 = icmp eq i32 %45, 49
  br i1 %46, label %47, label %79

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %9, i64 0, i32 0, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 45
  br i1 %50, label %51, label %79

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %9, i64 1
  %53 = bitcast %"class.SkSL::Expression"* %52 to float*
  %54 = load float, float* %53, align 8
  %55 = call float @llvm.fabs.f32(float %54) #18
  %56 = fcmp one float %55, 0x7FF0000000000000
  %57 = fcmp une float %54, 0.000000e+00
  %58 = and i1 %57, %56
  br i1 %58, label %59, label %79

59:                                               ; preds = %51
  store i32 48, i32* %11, align 4
  %60 = bitcast %"class.SkSL::Literal.430"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %60) #14
  %61 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %5, i64 0, i32 0, i32 0, i32 0
  %62 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %5, i64 0, i32 0, i32 0, i32 1
  %63 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %5, i64 0, i32 0, i32 0, i32 2
  %64 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %5, i64 0, i32 0, i32 1
  %65 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %5, i64 0, i32 1
  %66 = bitcast %"class.SkSL::Literal.430"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 -86, i64 24, i1 false)
  store float 0xFFFFFFFFE0000000, float* %65, align 8
  %67 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %5, i64 0, i32 2, i64 0
  %68 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %9, i64 0, i32 0, i32 1
  %69 = bitcast i8* %67 to i32*
  store i32 -1431655766, i32* %69, align 4
  %70 = load i32, i32* %68, align 8
  %71 = fdiv float 1.000000e+00, %54
  %72 = bitcast %"class.SkSL::Expression"* %9 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %73 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %72, align 8
  %74 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %73, i64 3
  %75 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %74, align 8
  %76 = call dereferenceable(184) %"class.SkSL::Type"* %75(%"class.SkSL::Expression"* %9) #14
  store i32 %70, i32* %62, align 8
  store i32 45, i32* %63, align 4
  store %"class.SkSL::Type"* %76, %"class.SkSL::Type"** %64, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIfEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %61, align 8
  store float %71, float* %65, align 8
  %77 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %5, i64 0, i32 0
  %78 = call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* nonnull dereferenceable(24) %77, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %60) #14
  br label %82

79:                                               ; preds = %51, %47, %42
  %80 = call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %9, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %81 = bitcast %"class.SkSL::Expression"* %9 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  br label %82

82:                                               ; preds = %79, %59
  %83 = phi %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** [ %81, %79 ], [ %72, %59 ]
  %84 = phi i32 [ %80, %79 ], [ %78, %59 ]
  %85 = bitcast %"class.SkSL::Expression"* %7 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %86 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %85, align 8
  %87 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %86, i64 3
  %88 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %87, align 8
  %89 = call dereferenceable(184) %"class.SkSL::Type"* %88(%"class.SkSL::Expression"* %7) #14
  %90 = call i32 @_ZNK4SkSL8Operator16removeAssignmentEv(%"class.SkSL::Operator"* nonnull %4) #14
  %91 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %83, align 8
  %92 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %91, i64 3
  %93 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %92, align 8
  %94 = call dereferenceable(184) %"class.SkSL::Type"* %93(%"class.SkSL::Expression"* %9) #14
  %95 = getelementptr inbounds %"class.SkSL::BinaryExpression", %"class.SkSL::BinaryExpression"* %1, i64 0, i32 0, i32 1
  %96 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %95, align 8
  %97 = call i32 @_ZN4SkSL18SPIRVCodeGenerator21writeBinaryExpressionERKNS_4TypeEjNS_8OperatorES3_jS3_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %89, i32 %44, i32 %90, %"class.SkSL::Type"* dereferenceable(184) %94, i32 %84, %"class.SkSL::Type"* dereferenceable(184) %96, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %98 = icmp eq %"class.SkSL::SPIRVCodeGenerator::LValue"* %43, null
  br i1 %98, label %108, label %99

99:                                               ; preds = %82
  %100 = bitcast %"class.SkSL::SPIRVCodeGenerator::LValue"* %43 to void (%"class.SkSL::SPIRVCodeGenerator::LValue"*, i32, %"class.SkSL::OutputStream"*)***
  %101 = load void (%"class.SkSL::SPIRVCodeGenerator::LValue"*, i32, %"class.SkSL::OutputStream"*)**, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*, i32, %"class.SkSL::OutputStream"*)*** %100, align 8
  %102 = getelementptr inbounds void (%"class.SkSL::SPIRVCodeGenerator::LValue"*, i32, %"class.SkSL::OutputStream"*)*, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*, i32, %"class.SkSL::OutputStream"*)** %101, i64 6
  %103 = load void (%"class.SkSL::SPIRVCodeGenerator::LValue"*, i32, %"class.SkSL::OutputStream"*)*, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*, i32, %"class.SkSL::OutputStream"*)** %102, align 8
  call void %103(%"class.SkSL::SPIRVCodeGenerator::LValue"* nonnull %43, i32 %97, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %104 = bitcast %"class.SkSL::SPIRVCodeGenerator::LValue"* %43 to void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)***
  %105 = load void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)**, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*** %104, align 8
  %106 = getelementptr inbounds void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)** %105, i64 1
  %107 = load void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)** %106, align 8
  call void %107(%"class.SkSL::SPIRVCodeGenerator::LValue"* nonnull %43) #14
  br label %108

108:                                              ; preds = %82, %99, %22, %14, %29, %27
  %109 = phi i32 [ %30, %29 ], [ %28, %27 ], [ %15, %14 ], [ %15, %22 ], [ %97, %99 ], [ %97, %82 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #14
  ret i32 %109
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator16writeBoolLiteralERKNS_7LiteralIbEE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::Literal.429"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = getelementptr inbounds %"class.SkSL::Literal.429", %"class.SkSL::Literal.429"* %1, i64 0, i32 1
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %39, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 20
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %66

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %18 = load i32, i32* %17, align 8
  %19 = add i32 %18, 1
  store i32 %19, i32* %17, align 8
  store i32 %18, i32* %13, align 8
  %20 = getelementptr inbounds %"class.SkSL::Literal.429", %"class.SkSL::Literal.429"* %1, i64 0, i32 0, i32 1
  %21 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %20, align 8
  %22 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %23 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %21, %"class.SkSL::MemoryLayout"* dereferenceable(4) %22) #14
  %24 = load i32, i32* %13, align 8
  %25 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 15, i32 0
  %26 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26) #14
  store i32 196649, i32* %3, align 4
  %27 = bitcast %"class.SkSL::OutputStream"* %25 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %28 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %28, i64 3
  %30 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %29, align 8
  call void %30(%"class.SkSL::OutputStream"* %25, i8* nonnull %26, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #14
  %31 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %31) #14
  store i32 %23, i32* %5, align 4
  %32 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %27, align 8
  %33 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %32, i64 3
  %34 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %33, align 8
  call void %34(%"class.SkSL::OutputStream"* %25, i8* nonnull %31, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %31) #14
  %35 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %35) #14
  store i32 %24, i32* %4, align 4
  %36 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %27, align 8
  %37 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %36, i64 3
  %38 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %37, align 8
  call void %38(%"class.SkSL::OutputStream"* %25, i8* nonnull %35, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %35) #14
  br label %66

39:                                               ; preds = %2
  %40 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 21
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %66

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %45 = load i32, i32* %44, align 8
  %46 = add i32 %45, 1
  store i32 %46, i32* %44, align 8
  store i32 %45, i32* %40, align 4
  %47 = getelementptr inbounds %"class.SkSL::Literal.429", %"class.SkSL::Literal.429"* %1, i64 0, i32 0, i32 1
  %48 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %47, align 8
  %49 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %50 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %48, %"class.SkSL::MemoryLayout"* dereferenceable(4) %49) #14
  %51 = load i32, i32* %40, align 4
  %52 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 15, i32 0
  %53 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %53) #14
  store i32 196650, i32* %6, align 4
  %54 = bitcast %"class.SkSL::OutputStream"* %52 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %55 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %55, i64 3
  %57 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %56, align 8
  call void %57(%"class.SkSL::OutputStream"* %52, i8* nonnull %53, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %53) #14
  %58 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %58) #14
  store i32 %50, i32* %8, align 4
  %59 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %54, align 8
  %60 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %59, i64 3
  %61 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %60, align 8
  call void %61(%"class.SkSL::OutputStream"* %52, i8* nonnull %58, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %58) #14
  %62 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %62) #14
  store i32 %51, i32* %7, align 4
  %63 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %54, align 8
  %64 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %63, i64 3
  %65 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %64, align 8
  call void %65(%"class.SkSL::OutputStream"* %52, i8* nonnull %62, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %62) #14
  br label %66

66:                                               ; preds = %39, %43, %12, %16
  %67 = phi i32* [ %13, %16 ], [ %13, %12 ], [ %40, %43 ], [ %40, %39 ]
  %68 = load i32, i32* %67, align 4
  ret i32 %68
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator25writeCompositeConstructorERKNS_14AnyConstructorERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::AnyConstructor"* dereferenceable(32), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector.382", align 8
  %5 = bitcast %"class.SkSL::AnyConstructor"* %1 to { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)***
  %6 = load { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)**, { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)*** %5, align 8
  %7 = getelementptr inbounds { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)** %6, i64 12
  %8 = load { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)** %7, align 8
  %9 = tail call { %"class.std::__1::unique_ptr.336"*, i64 } %8(%"class.SkSL::AnyConstructor"* %1) #14
  %10 = extractvalue { %"class.std::__1::unique_ptr.336"*, i64 } %9, 0
  %11 = extractvalue { %"class.std::__1::unique_ptr.336"*, i64 } %9, 1
  %12 = bitcast %"class.std::__1::vector.382"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #14
  %13 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %4, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %4, i64 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 24, i1 false) #14
  %16 = bitcast i32** %15 to i64*
  %17 = bitcast %"class.std::__1::vector.382"* %4 to i64*
  %18 = icmp eq i64 %11, 0
  br i1 %18, label %33, label %19

19:                                               ; preds = %3
  %20 = icmp ugt i64 %11, 4611686018427387903
  br i1 %20, label %21, label %22

21:                                               ; preds = %19
  tail call void @abort() #15
  unreachable

22:                                               ; preds = %19
  %23 = bitcast i32** %14 to i64*
  %24 = shl i64 %11, 2
  %25 = tail call i8* @_Znwm(i64 %24) #16
  %26 = bitcast i8* %25 to i32*
  %27 = ptrtoint i8* %25 to i64
  %28 = getelementptr inbounds i32, i32* %26, i64 %11
  %29 = ptrtoint i32* %28 to i64
  %30 = ptrtoint i8* %25 to i64
  store i64 %30, i64* %17, align 8
  store i64 %27, i64* %23, align 8
  store i64 %29, i64* %16, align 8
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %10, i64 %11
  %32 = bitcast i32** %14 to i64*
  br label %48

33:                                               ; preds = %108, %3
  %34 = getelementptr inbounds %"class.SkSL::AnyConstructor", %"class.SkSL::AnyConstructor"* %1, i64 0, i32 0
  %35 = bitcast %"class.SkSL::AnyConstructor"* %1 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %36 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %35, align 8
  %37 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %36, i64 3
  %38 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %37, align 8
  %39 = tail call dereferenceable(184) %"class.SkSL::Type"* %38(%"class.SkSL::Expression"* %34) #14
  %40 = call i32 @_ZN4SkSL18SPIRVCodeGenerator14writeCompositeERKNSt3__16vectorIjNS1_9allocatorIjEEEERKNS_4TypeERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.std::__1::vector.382"* nonnull dereferenceable(24) %4, %"class.SkSL::Type"* dereferenceable(184) %39, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %41 = load i32*, i32** %13, align 8
  %42 = icmp eq i32* %41, null
  br i1 %42, label %47, label %43

43:                                               ; preds = %33
  %44 = ptrtoint i32* %41 to i64
  %45 = bitcast i32** %14 to i64*
  store i64 %44, i64* %45, align 8
  %46 = bitcast i32* %41 to i8*
  tail call void @_ZdlPv(i8* %46) #16
  br label %47

47:                                               ; preds = %33, %43
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #14
  ret i32 %40

48:                                               ; preds = %113, %22
  %49 = phi i64 [ %27, %22 ], [ %109, %113 ]
  %50 = phi i32* [ %28, %22 ], [ %114, %113 ]
  %51 = phi i32* [ %26, %22 ], [ %110, %113 ]
  %52 = phi %"class.std::__1::unique_ptr.336"* [ %10, %22 ], [ %111, %113 ]
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %52, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %53, align 8
  %55 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %54, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %56 = icmp ult i32* %51, %50
  %57 = ptrtoint i32* %50 to i64
  br i1 %56, label %58, label %61

58:                                               ; preds = %48
  store i32 %55, i32* %51, align 4
  %59 = getelementptr inbounds i32, i32* %51, i64 1
  %60 = ptrtoint i32* %59 to i64
  store i64 %60, i64* %32, align 8
  br label %108

61:                                               ; preds = %48
  %62 = ptrtoint i32* %51 to i64
  %63 = load i64, i64* %17, align 8
  %64 = sub i64 %62, %63
  %65 = ashr exact i64 %64, 2
  %66 = add nsw i64 %65, 1
  %67 = icmp ugt i64 %66, 4611686018427387903
  br i1 %67, label %68, label %70

68:                                               ; preds = %61
  %69 = bitcast %"class.std::__1::vector.382"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %69) #15
  unreachable

70:                                               ; preds = %61
  %71 = sub i64 %57, %63
  %72 = ashr exact i64 %71, 2
  %73 = icmp ult i64 %72, 2305843009213693951
  br i1 %73, label %74, label %82

74:                                               ; preds = %70
  %75 = ashr exact i64 %71, 1
  %76 = icmp ult i64 %75, %66
  %77 = select i1 %76, i64 %66, i64 %75
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %87, label %79

79:                                               ; preds = %74
  %80 = icmp ugt i64 %77, 4611686018427387903
  br i1 %80, label %81, label %82

81:                                               ; preds = %79
  tail call void @abort() #15
  unreachable

82:                                               ; preds = %79, %70
  %83 = phi i64 [ %77, %79 ], [ 4611686018427387903, %70 ]
  %84 = shl i64 %83, 2
  %85 = tail call i8* @_Znwm(i64 %84) #16
  %86 = bitcast i8* %85 to i32*
  br label %87

87:                                               ; preds = %82, %74
  %88 = phi i64 [ %83, %82 ], [ 0, %74 ]
  %89 = phi i32* [ %86, %82 ], [ null, %74 ]
  %90 = getelementptr inbounds i32, i32* %89, i64 %65
  %91 = getelementptr inbounds i32, i32* %89, i64 %88
  %92 = ptrtoint i32* %91 to i64
  store i32 %55, i32* %90, align 4
  %93 = getelementptr inbounds i32, i32* %90, i64 1
  %94 = ptrtoint i32* %93 to i64
  %95 = sub i64 %49, %63
  %96 = ashr exact i64 %95, 2
  %97 = sub nsw i64 0, %96
  %98 = getelementptr inbounds i32, i32* %90, i64 %97
  %99 = ptrtoint i32* %98 to i64
  %100 = icmp sgt i64 %95, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %87
  %102 = bitcast i32* %98 to i8*
  %103 = inttoptr i64 %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %102, i8* align 4 %103, i64 %95, i1 false) #14
  br label %104

104:                                              ; preds = %101, %87
  store i64 %99, i64* %17, align 8
  store i64 %94, i64* %32, align 8
  store i64 %92, i64* %16, align 8
  %105 = icmp eq i64 %63, 0
  br i1 %105, label %108, label %106

106:                                              ; preds = %104
  %107 = inttoptr i64 %63 to i8*
  tail call void @_ZdlPv(i8* %107) #16
  br label %108

108:                                              ; preds = %58, %104, %106
  %109 = phi i64 [ %60, %58 ], [ %94, %104 ], [ %94, %106 ]
  %110 = phi i32* [ %59, %58 ], [ %93, %104 ], [ %93, %106 ]
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %52, i64 1
  %112 = icmp eq %"class.std::__1::unique_ptr.336"* %111, %31
  br i1 %112, label %33, label %113

113:                                              ; preds = %108
  %114 = load i32*, i32** %15, align 8
  br label %48
}

declare dereferenceable(32) %"class.SkSL::AnyConstructor"* @_ZNK4SkSL10Expression16asAnyConstructorEv(%"class.SkSL::Expression"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator30writeConstructorDiagonalMatrixERKNS_25ConstructorDiagonalMatrixERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::ConstructorDiagonalMatrix"* nocapture readonly dereferenceable(72), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds %"class.SkSL::ConstructorDiagonalMatrix", %"class.SkSL::ConstructorDiagonalMatrix"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %7, align 8
  %9 = getelementptr inbounds %"class.SkSL::ConstructorDiagonalMatrix", %"class.SkSL::ConstructorDiagonalMatrix"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %9, align 8
  %11 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %10, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %12 = icmp eq %"class.SkSL::Type"* %8, null
  br i1 %12, label %61, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %8, i64 0, i32 6
  %15 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %14, align 8
  %16 = icmp eq %"class.SkSL::Type"* %15, null
  %17 = select i1 %16, %"class.SkSL::Type"* %8, %"class.SkSL::Type"* %15
  %18 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %17, i64 0, i32 4
  %19 = load i32, i32* %18, align 4
  %20 = icmp ult i32 %19, 3
  br i1 %20, label %25, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %8, i64 0, i32 3
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 6
  br i1 %24, label %25, label %61

25:                                               ; preds = %21, %13
  br i1 %16, label %31, label %26

26:                                               ; preds = %25, %26
  %27 = phi %"class.SkSL::Type"* [ %29, %26 ], [ %15, %25 ]
  %28 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %27, i64 0, i32 6
  %29 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %28, align 8
  %30 = icmp eq %"class.SkSL::Type"* %29, null
  br i1 %30, label %31, label %26

31:                                               ; preds = %26, %25
  %32 = phi %"class.SkSL::Type"* [ %8, %25 ], [ %27, %26 ]
  %33 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %32, i64 0, i32 16
  %34 = load i8, i8* %33, align 8, !range !2
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %36, label %61

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 1
  %38 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %37, align 8
  %39 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %38, i64 0, i32 1, i32 0, i32 0, i32 0
  %40 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %39, align 8
  %41 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %40, i64 0, i32 1, i32 3
  %42 = load i8, i8* %41, align 1, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %61

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %46 = load i32, i32* %45, align 8
  %47 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %48 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %48) #14
  store i32 196679, i32* %4, align 4
  %49 = bitcast %"class.SkSL::OutputStream"* %47 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %50 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %50, i64 3
  %52 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %51, align 8
  call void %52(%"class.SkSL::OutputStream"* %47, i8* nonnull %48, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %48) #14
  %53 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %53) #14
  store i32 %46, i32* %6, align 4
  %54 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %49, align 8
  %55 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %54, i64 3
  %56 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %55, align 8
  call void %56(%"class.SkSL::OutputStream"* %47, i8* nonnull %53, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %53) #14
  %57 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %57) #14
  store i32 0, i32* %5, align 4
  %58 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %49, align 8
  %59 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %58, i64 3
  %60 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %59, align 8
  call void %60(%"class.SkSL::OutputStream"* %47, i8* nonnull %57, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %57) #14
  br label %61

61:                                               ; preds = %3, %21, %31, %36, %44
  %62 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %63 = load i32, i32* %62, align 8
  %64 = add i32 %63, 1
  store i32 %64, i32* %62, align 8
  call void @_ZN4SkSL18SPIRVCodeGenerator23writeUniformScaleMatrixEjjRKNS_4TypeERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 %63, i32 %11, %"class.SkSL::Type"* dereferenceable(184) %8, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  ret i32 %63
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator28writeConstructorMatrixResizeERKNS_23ConstructorMatrixResizeERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::ConstructorMatrixResize"* nocapture readonly dereferenceable(104), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.SkSL::ConstructorMatrixResize", %"class.SkSL::ConstructorMatrixResize"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %4, align 8
  %6 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %5, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %7 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %4, align 8
  %8 = bitcast %"class.SkSL::Expression"* %7 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %9 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %9, i64 3
  %11 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %10, align 8
  %12 = tail call dereferenceable(184) %"class.SkSL::Type"* %11(%"class.SkSL::Expression"* %7) #14
  %13 = getelementptr inbounds %"class.SkSL::ConstructorMatrixResize", %"class.SkSL::ConstructorMatrixResize"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %14 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %13, align 8
  %15 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeMatrixCopyEjRKNS_4TypeES3_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 %6, %"class.SkSL::Type"* dereferenceable(184) %12, %"class.SkSL::Type"* dereferenceable(184) %14, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator26writeConstructorScalarCastERKNS_21ConstructorScalarCastERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::ConstructorScalarCast"* nocapture readonly dereferenceable(40), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca <2 x i64>, align 16
  %5 = bitcast <2 x i64>* %4 to %"struct.SkSL::StringFragment"*
  %6 = getelementptr inbounds %"class.SkSL::ConstructorScalarCast", %"class.SkSL::ConstructorScalarCast"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %6, align 8
  %8 = tail call dereferenceable(184) %"class.SkSL::Type"* @_ZN4SkSL18SPIRVCodeGenerator13getActualTypeERKNS_4TypeE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %7)
  %9 = getelementptr inbounds %"class.SkSL::ConstructorScalarCast", %"class.SkSL::ConstructorScalarCast"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %9, align 8
  %11 = bitcast %"class.SkSL::Expression"* %10 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %12 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %12, i64 3
  %14 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %13, align 8
  %15 = tail call dereferenceable(184) %"class.SkSL::Type"* %14(%"class.SkSL::Expression"* %10) #14
  %16 = tail call dereferenceable(184) %"class.SkSL::Type"* @_ZN4SkSL18SPIRVCodeGenerator13getActualTypeERKNS_4TypeE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %15)
  %17 = bitcast <2 x i64>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #14
  %18 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %8, i64 0, i32 0, i32 1, i32 0
  %19 = bitcast i8** %18 to <2 x i64>*
  %20 = load <2 x i64>, <2 x i64>* %19, align 8
  store <2 x i64> %20, <2 x i64>* %4, align 16
  %21 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %16, i64 0, i32 0, i32 1, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %16, i64 0, i32 0, i32 1, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %5, i8* %22, i64 %24) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #14
  %26 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %9, align 8
  %27 = call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %26, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  br i1 %25, label %35, label %28

28:                                               ; preds = %3
  %29 = bitcast %"class.SkSL::Expression"* %26 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %30 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %29, align 8
  %31 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %30, i64 3
  %32 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %31, align 8
  %33 = call dereferenceable(184) %"class.SkSL::Type"* %32(%"class.SkSL::Expression"* %26) #14
  %34 = call i32 @_ZN4SkSL18SPIRVCodeGenerator16castScalarToTypeEjRKNS_4TypeES3_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 %27, %"class.SkSL::Type"* dereferenceable(184) %33, %"class.SkSL::Type"* dereferenceable(184) %7, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  br label %35

35:                                               ; preds = %3, %28
  %36 = phi i32 [ %34, %28 ], [ %27, %3 ]
  ret i32 %36
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator21writeConstructorSplatERKNS_16ConstructorSplatERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::ConstructorSplat"* dereferenceable(40), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector.382", align 8
  %5 = getelementptr inbounds %"class.SkSL::ConstructorSplat", %"class.SkSL::ConstructorSplat"* %1, i64 0, i32 0, i32 0
  %6 = bitcast %"class.SkSL::ConstructorSplat"* %1 to { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)***
  %7 = load { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)**, { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)*** %6, align 8
  %8 = getelementptr inbounds { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)** %7, i64 12
  %9 = load { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)** %8, align 8
  %10 = tail call { %"class.std::__1::unique_ptr.336"*, i64 } %9(%"class.SkSL::AnyConstructor"* %5) #14
  %11 = extractvalue { %"class.std::__1::unique_ptr.336"*, i64 } %10, 0
  %12 = extractvalue { %"class.std::__1::unique_ptr.336"*, i64 } %10, 1
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %11, i64 %12
  %14 = icmp eq i64 %12, 0
  br i1 %14, label %27, label %17

15:                                               ; preds = %17
  %16 = icmp eq %"class.std::__1::unique_ptr.336"* %26, %13
  br i1 %16, label %27, label %17

17:                                               ; preds = %3, %15
  %18 = phi %"class.std::__1::unique_ptr.336"* [ %26, %15 ], [ %11, %3 ]
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %19, align 8
  %21 = bitcast %"class.SkSL::Expression"* %20 to i1 (%"class.SkSL::Expression"*)***
  %22 = load i1 (%"class.SkSL::Expression"*)**, i1 (%"class.SkSL::Expression"*)*** %21, align 8
  %23 = getelementptr inbounds i1 (%"class.SkSL::Expression"*)*, i1 (%"class.SkSL::Expression"*)** %22, i64 4
  %24 = load i1 (%"class.SkSL::Expression"*)*, i1 (%"class.SkSL::Expression"*)** %23, align 8
  %25 = tail call zeroext i1 %24(%"class.SkSL::Expression"* %20) #14
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %18, i64 1
  br i1 %25, label %15, label %29

27:                                               ; preds = %15, %3
  %28 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator19writeConstantVectorERKNS_14AnyConstructorE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::AnyConstructor"* dereferenceable(32) %5)
  br label %153

29:                                               ; preds = %17
  %30 = getelementptr inbounds %"class.SkSL::ConstructorSplat", %"class.SkSL::ConstructorSplat"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %31 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %30, align 8
  %32 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %31, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %33 = bitcast %"class.std::__1::vector.382"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #14
  %34 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %4, i64 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %4, i64 0, i32 0, i32 1
  %36 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %37 = getelementptr inbounds %"class.SkSL::ConstructorSplat", %"class.SkSL::ConstructorSplat"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %38 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %37, align 8
  %39 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %38, i64 0, i32 8
  %40 = load i32, i32* %39, align 8
  %41 = sext i32 %40 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 0, i64 24, i1 false) #14
  %42 = icmp eq i32 %40, 0
  br i1 %42, label %143, label %43

43:                                               ; preds = %29
  %44 = icmp slt i32 %40, 0
  br i1 %44, label %45, label %47

45:                                               ; preds = %43
  %46 = bitcast %"class.std::__1::vector.382"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %46) #15
  unreachable

47:                                               ; preds = %43
  %48 = shl nsw i64 %41, 2
  %49 = tail call i8* @_Znwm(i64 %48) #16
  %50 = bitcast i8* %49 to i32*
  %51 = bitcast i32** %35 to i8**
  store i8* %49, i8** %51, align 8
  %52 = bitcast %"class.std::__1::vector.382"* %4 to i8**
  store i8* %49, i8** %52, align 8
  %53 = getelementptr inbounds i32, i32* %50, i64 %41
  store i32* %53, i32** %36, align 8
  %54 = shl nsw i64 %41, 2
  %55 = add nsw i64 %54, -4
  %56 = lshr exact i64 %55, 2
  %57 = add nuw nsw i64 %56, 1
  %58 = icmp ult i64 %57, 8
  br i1 %58, label %133, label %59

59:                                               ; preds = %47
  %60 = and i64 %57, 9223372036854775800
  %61 = getelementptr i32, i32* %50, i64 %60
  %62 = insertelement <4 x i32> undef, i32 %32, i32 0
  %63 = shufflevector <4 x i32> %62, <4 x i32> undef, <4 x i32> zeroinitializer
  %64 = insertelement <4 x i32> undef, i32 %32, i32 0
  %65 = shufflevector <4 x i32> %64, <4 x i32> undef, <4 x i32> zeroinitializer
  %66 = add nsw i64 %60, -8
  %67 = lshr exact i64 %66, 3
  %68 = add nuw nsw i64 %67, 1
  %69 = and i64 %68, 7
  %70 = icmp ult i64 %66, 56
  br i1 %70, label %118, label %71

71:                                               ; preds = %59
  %72 = sub nsw i64 %68, %69
  br label %73

73:                                               ; preds = %73, %71
  %74 = phi i64 [ 0, %71 ], [ %115, %73 ]
  %75 = phi i64 [ %72, %71 ], [ %116, %73 ]
  %76 = getelementptr i32, i32* %50, i64 %74
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> %63, <4 x i32>* %77, align 4
  %78 = getelementptr i32, i32* %76, i64 4
  %79 = bitcast i32* %78 to <4 x i32>*
  store <4 x i32> %65, <4 x i32>* %79, align 4
  %80 = or i64 %74, 8
  %81 = getelementptr i32, i32* %50, i64 %80
  %82 = bitcast i32* %81 to <4 x i32>*
  store <4 x i32> %63, <4 x i32>* %82, align 4
  %83 = getelementptr i32, i32* %81, i64 4
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> %65, <4 x i32>* %84, align 4
  %85 = or i64 %74, 16
  %86 = getelementptr i32, i32* %50, i64 %85
  %87 = bitcast i32* %86 to <4 x i32>*
  store <4 x i32> %63, <4 x i32>* %87, align 4
  %88 = getelementptr i32, i32* %86, i64 4
  %89 = bitcast i32* %88 to <4 x i32>*
  store <4 x i32> %65, <4 x i32>* %89, align 4
  %90 = or i64 %74, 24
  %91 = getelementptr i32, i32* %50, i64 %90
  %92 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> %63, <4 x i32>* %92, align 4
  %93 = getelementptr i32, i32* %91, i64 4
  %94 = bitcast i32* %93 to <4 x i32>*
  store <4 x i32> %65, <4 x i32>* %94, align 4
  %95 = or i64 %74, 32
  %96 = getelementptr i32, i32* %50, i64 %95
  %97 = bitcast i32* %96 to <4 x i32>*
  store <4 x i32> %63, <4 x i32>* %97, align 4
  %98 = getelementptr i32, i32* %96, i64 4
  %99 = bitcast i32* %98 to <4 x i32>*
  store <4 x i32> %65, <4 x i32>* %99, align 4
  %100 = or i64 %74, 40
  %101 = getelementptr i32, i32* %50, i64 %100
  %102 = bitcast i32* %101 to <4 x i32>*
  store <4 x i32> %63, <4 x i32>* %102, align 4
  %103 = getelementptr i32, i32* %101, i64 4
  %104 = bitcast i32* %103 to <4 x i32>*
  store <4 x i32> %65, <4 x i32>* %104, align 4
  %105 = or i64 %74, 48
  %106 = getelementptr i32, i32* %50, i64 %105
  %107 = bitcast i32* %106 to <4 x i32>*
  store <4 x i32> %63, <4 x i32>* %107, align 4
  %108 = getelementptr i32, i32* %106, i64 4
  %109 = bitcast i32* %108 to <4 x i32>*
  store <4 x i32> %65, <4 x i32>* %109, align 4
  %110 = or i64 %74, 56
  %111 = getelementptr i32, i32* %50, i64 %110
  %112 = bitcast i32* %111 to <4 x i32>*
  store <4 x i32> %63, <4 x i32>* %112, align 4
  %113 = getelementptr i32, i32* %111, i64 4
  %114 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> %65, <4 x i32>* %114, align 4
  %115 = add i64 %74, 64
  %116 = add i64 %75, -8
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %73, !llvm.loop !6

118:                                              ; preds = %73, %59
  %119 = phi i64 [ 0, %59 ], [ %115, %73 ]
  %120 = icmp eq i64 %69, 0
  br i1 %120, label %131, label %121

121:                                              ; preds = %118, %121
  %122 = phi i64 [ %128, %121 ], [ %119, %118 ]
  %123 = phi i64 [ %129, %121 ], [ %69, %118 ]
  %124 = getelementptr i32, i32* %50, i64 %122
  %125 = bitcast i32* %124 to <4 x i32>*
  store <4 x i32> %63, <4 x i32>* %125, align 4
  %126 = getelementptr i32, i32* %124, i64 4
  %127 = bitcast i32* %126 to <4 x i32>*
  store <4 x i32> %65, <4 x i32>* %127, align 4
  %128 = add i64 %122, 8
  %129 = add i64 %123, -1
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %121, !llvm.loop !8

131:                                              ; preds = %121, %118
  %132 = icmp eq i64 %57, %60
  br i1 %132, label %139, label %133

133:                                              ; preds = %131, %47
  %134 = phi i32* [ %50, %47 ], [ %61, %131 ]
  br label %135

135:                                              ; preds = %133, %135
  %136 = phi i32* [ %137, %135 ], [ %134, %133 ]
  store i32 %32, i32* %136, align 4
  %137 = getelementptr inbounds i32, i32* %136, i64 1
  %138 = icmp eq i32* %137, %53
  br i1 %138, label %139, label %135, !llvm.loop !10

139:                                              ; preds = %135, %131
  %140 = bitcast i32** %35 to i64*
  %141 = ptrtoint i32* %53 to i64
  store i64 %141, i64* %140, align 8
  %142 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %37, align 8
  br label %143

143:                                              ; preds = %29, %139
  %144 = phi %"class.SkSL::Type"* [ %38, %29 ], [ %142, %139 ]
  %145 = call i32 @_ZN4SkSL18SPIRVCodeGenerator14writeCompositeERKNSt3__16vectorIjNS1_9allocatorIjEEEERKNS_4TypeERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.std::__1::vector.382"* nonnull dereferenceable(24) %4, %"class.SkSL::Type"* dereferenceable(184) %144, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %146 = load i32*, i32** %34, align 8
  %147 = icmp eq i32* %146, null
  br i1 %147, label %152, label %148

148:                                              ; preds = %143
  %149 = ptrtoint i32* %146 to i64
  %150 = bitcast i32** %35 to i64*
  store i64 %149, i64* %150, align 8
  %151 = bitcast i32* %146 to i8*
  tail call void @_ZdlPv(i8* %151) #16
  br label %152

152:                                              ; preds = %143, %148
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #14
  br label %153

153:                                              ; preds = %152, %27
  %154 = phi i32 [ %28, %27 ], [ %145, %152 ]
  ret i32 %154
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator24writeConstructorCompoundERKNS_19ConstructorCompoundERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::ConstructorCompound"* dereferenceable(64), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %5, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 4
  br i1 %8, label %9, label %11

9:                                                ; preds = %3
  %10 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator22writeMatrixConstructorERKNS_19ConstructorCompoundERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::ConstructorCompound"* dereferenceable(64) %1, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  br label %13

11:                                               ; preds = %3
  %12 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator22writeVectorConstructorERKNS_19ConstructorCompoundERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::ConstructorCompound"* dereferenceable(64) %1, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  br label %13

13:                                               ; preds = %11, %9
  %14 = phi i32 [ %10, %9 ], [ %12, %11 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator28writeConstructorCompoundCastERKNS_23ConstructorCompoundCastERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::ConstructorCompoundCast"* nocapture readonly dereferenceable(40), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca <2 x i64>, align 16
  %12 = bitcast <2 x i64>* %11 to %"struct.SkSL::StringFragment"*
  %13 = alloca %"class.std::__1::vector.382", align 16
  %14 = getelementptr inbounds %"class.SkSL::ConstructorCompoundCast", %"class.SkSL::ConstructorCompoundCast"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %15 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %14, align 8
  %16 = getelementptr inbounds %"class.SkSL::ConstructorCompoundCast", %"class.SkSL::ConstructorCompoundCast"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %17 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %16, align 8
  %18 = bitcast %"class.SkSL::Expression"* %17 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %19 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %18, align 8
  %20 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %19, i64 3
  %21 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %20, align 8
  %22 = tail call dereferenceable(184) %"class.SkSL::Type"* %21(%"class.SkSL::Expression"* %17) #14
  %23 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %16, align 8
  %24 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %23, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %25 = tail call dereferenceable(184) %"class.SkSL::Type"* @_ZN4SkSL18SPIRVCodeGenerator13getActualTypeERKNS_4TypeE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %15)
  %26 = tail call dereferenceable(184) %"class.SkSL::Type"* @_ZN4SkSL18SPIRVCodeGenerator13getActualTypeERKNS_4TypeE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %22)
  %27 = bitcast <2 x i64>* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #14
  %28 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %25, i64 0, i32 0, i32 1, i32 0
  %29 = bitcast i8** %28 to <2 x i64>*
  %30 = load <2 x i64>, <2 x i64>* %29, align 8
  store <2 x i64> %30, <2 x i64>* %11, align 16
  %31 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %26, i64 0, i32 0, i32 1, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %26, i64 0, i32 0, i32 1, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %12, i8* %32, i64 %34) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #14
  br i1 %35, label %215, label %36

36:                                               ; preds = %3
  %37 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %15, i64 0, i32 3
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %38, 4
  br i1 %39, label %40, label %42

40:                                               ; preds = %36
  %41 = call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeMatrixCopyEjRKNS_4TypeES3_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 %24, %"class.SkSL::Type"* dereferenceable(184) %22, %"class.SkSL::Type"* dereferenceable(184) %15, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  br label %215

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %22, i64 0, i32 6
  %44 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %43, align 8
  %45 = icmp eq %"class.SkSL::Type"* %44, null
  %46 = select i1 %45, %"class.SkSL::Type"* %22, %"class.SkSL::Type"* %44
  %47 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %15, i64 0, i32 6
  %48 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %47, align 8
  %49 = icmp eq %"class.SkSL::Type"* %48, null
  %50 = select i1 %49, %"class.SkSL::Type"* %15, %"class.SkSL::Type"* %48
  %51 = bitcast %"class.std::__1::vector.382"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #14
  %52 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %13, i64 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %13, i64 0, i32 0, i32 1
  %54 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %13, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %51, i8 0, i64 24, i1 false) #14
  %55 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %22, i64 0, i32 8
  %56 = load i32, i32* %55, align 8
  %57 = sext i32 %56 to i64
  %58 = bitcast i32** %54 to i64*
  %59 = bitcast %"class.std::__1::vector.382"* %13 to i64*
  %60 = icmp eq i32 %56, 0
  br i1 %60, label %94, label %61

61:                                               ; preds = %42
  %62 = icmp slt i32 %56, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %61
  call void @abort() #15
  unreachable

64:                                               ; preds = %61
  %65 = shl nsw i64 %57, 2
  %66 = call i8* @_Znwm(i64 %65) #16
  %67 = bitcast i8* %66 to i32*
  %68 = getelementptr inbounds i32, i32* %67, i64 %57
  %69 = ptrtoint i32* %68 to i64
  %70 = insertelement <2 x i8*> undef, i8* %66, i32 0
  %71 = shufflevector <2 x i8*> %70, <2 x i8*> undef, <2 x i32> zeroinitializer
  %72 = ptrtoint <2 x i8*> %71 to <2 x i64>
  %73 = bitcast %"class.std::__1::vector.382"* %13 to <2 x i64>*
  store <2 x i64> %72, <2 x i64>* %73, align 16
  store i64 %69, i64* %58, align 16
  %74 = load i32, i32* %55, align 8
  %75 = icmp sgt i32 %74, 0
  br i1 %75, label %76, label %94

76:                                               ; preds = %64
  %77 = icmp eq %"class.SkSL::Type"* %46, null
  %78 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %46, i64 0, i32 6
  %79 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %46, i64 0, i32 3
  %80 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 1
  %81 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %82 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %83 = bitcast i32* %8 to i8*
  %84 = bitcast %"class.SkSL::OutputStream"* %82 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %85 = bitcast i32* %10 to i8*
  %86 = bitcast i32* %9 to i8*
  %87 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %88 = bitcast i32* %7 to i8*
  %89 = bitcast %"class.SkSL::OutputStream"* %2 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %90 = bitcast i32* %6 to i8*
  %91 = bitcast i32* %5 to i8*
  %92 = bitcast i32* %4 to i8*
  %93 = bitcast i32** %53 to i64*
  br label %103

94:                                               ; preds = %211, %42, %64
  %95 = call i32 @_ZN4SkSL18SPIRVCodeGenerator14writeCompositeERKNSt3__16vectorIjNS1_9allocatorIjEEEERKNS_4TypeERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.std::__1::vector.382"* nonnull dereferenceable(24) %13, %"class.SkSL::Type"* dereferenceable(184) %15, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %96 = load i32*, i32** %52, align 16
  %97 = icmp eq i32* %96, null
  br i1 %97, label %102, label %98

98:                                               ; preds = %94
  %99 = ptrtoint i32* %96 to i64
  %100 = bitcast i32** %53 to i64*
  store i64 %99, i64* %100, align 8
  %101 = bitcast i32* %96 to i8*
  call void @_ZdlPv(i8* %101) #16
  br label %102

102:                                              ; preds = %94, %98
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #14
  br label %215

103:                                              ; preds = %76, %211
  %104 = phi i32 [ 0, %76 ], [ %212, %211 ]
  br i1 %77, label %144, label %105

105:                                              ; preds = %103
  %106 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %78, align 8
  %107 = icmp eq %"class.SkSL::Type"* %106, null
  %108 = select i1 %107, %"class.SkSL::Type"* %46, %"class.SkSL::Type"* %106
  %109 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %108, i64 0, i32 4
  %110 = load i32, i32* %109, align 4
  %111 = icmp ult i32 %110, 3
  br i1 %111, label %115, label %112

112:                                              ; preds = %105
  %113 = load i32, i32* %79, align 8
  %114 = icmp eq i32 %113, 6
  br i1 %114, label %115, label %144

115:                                              ; preds = %112, %105
  br i1 %107, label %121, label %116

116:                                              ; preds = %115, %116
  %117 = phi %"class.SkSL::Type"* [ %119, %116 ], [ %106, %115 ]
  %118 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %117, i64 0, i32 6
  %119 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %118, align 8
  %120 = icmp eq %"class.SkSL::Type"* %119, null
  br i1 %120, label %121, label %116

121:                                              ; preds = %116, %115
  %122 = phi %"class.SkSL::Type"* [ %46, %115 ], [ %117, %116 ]
  %123 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %122, i64 0, i32 16
  %124 = load i8, i8* %123, align 8, !range !2
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %126, label %144

126:                                              ; preds = %121
  %127 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %80, align 8
  %128 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %127, i64 0, i32 1, i32 0, i32 0, i32 0
  %129 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %128, align 8
  %130 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %129, i64 0, i32 1, i32 3
  %131 = load i8, i8* %130, align 1, !range !2
  %132 = icmp eq i8 %131, 0
  br i1 %132, label %133, label %144

133:                                              ; preds = %126
  %134 = load i32, i32* %81, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %83) #14
  store i32 196679, i32* %8, align 4
  %135 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %84, align 8
  %136 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %135, i64 3
  %137 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %136, align 8
  call void %137(%"class.SkSL::OutputStream"* %82, i8* nonnull %83, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %83) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %85) #14
  store i32 %134, i32* %10, align 4
  %138 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %84, align 8
  %139 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %138, i64 3
  %140 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %139, align 8
  call void %140(%"class.SkSL::OutputStream"* %82, i8* nonnull %85, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %85) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %86) #14
  store i32 0, i32* %9, align 4
  %141 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %84, align 8
  %142 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %141, i64 3
  %143 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %142, align 8
  call void %143(%"class.SkSL::OutputStream"* %82, i8* nonnull %86, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %86) #14
  br label %144

144:                                              ; preds = %103, %112, %121, %126, %133
  %145 = load i32, i32* %81, align 8
  %146 = add i32 %145, 1
  store i32 %146, i32* %81, align 8
  %147 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %46, %"class.SkSL::MemoryLayout"* dereferenceable(4) %87) #14
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 81, i32 5, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %88) #14
  store i32 %147, i32* %7, align 4
  %148 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %89, align 8
  %149 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %148, i64 3
  %150 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %149, align 8
  call void %150(%"class.SkSL::OutputStream"* %2, i8* nonnull %88, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %88) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %90) #14
  store i32 %145, i32* %6, align 4
  %151 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %89, align 8
  %152 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %151, i64 3
  %153 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %152, align 8
  call void %153(%"class.SkSL::OutputStream"* %2, i8* nonnull %90, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %90) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %91) #14
  store i32 %24, i32* %5, align 4
  %154 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %89, align 8
  %155 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %154, i64 3
  %156 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %155, align 8
  call void %156(%"class.SkSL::OutputStream"* %2, i8* nonnull %91, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %91) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %92) #14
  store i32 %104, i32* %4, align 4
  %157 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %89, align 8
  %158 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %157, i64 3
  %159 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %158, align 8
  call void %159(%"class.SkSL::OutputStream"* %2, i8* nonnull %92, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %92) #14
  %160 = call i32 @_ZN4SkSL18SPIRVCodeGenerator16castScalarToTypeEjRKNS_4TypeES3_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 %145, %"class.SkSL::Type"* dereferenceable(184) %46, %"class.SkSL::Type"* dereferenceable(184) %50, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %161 = load i32*, i32** %53, align 8
  %162 = load i32*, i32** %54, align 16
  %163 = icmp ult i32* %161, %162
  %164 = ptrtoint i32* %162 to i64
  br i1 %163, label %165, label %168

165:                                              ; preds = %144
  store i32 %160, i32* %161, align 4
  %166 = getelementptr inbounds i32, i32* %161, i64 1
  %167 = ptrtoint i32* %166 to i64
  store i64 %167, i64* %93, align 8
  br label %211

168:                                              ; preds = %144
  %169 = ptrtoint i32* %161 to i64
  %170 = load i64, i64* %59, align 16
  %171 = sub i64 %169, %170
  %172 = ashr exact i64 %171, 2
  %173 = add nsw i64 %172, 1
  %174 = icmp ugt i64 %173, 4611686018427387903
  br i1 %174, label %175, label %177

175:                                              ; preds = %168
  %176 = bitcast %"class.std::__1::vector.382"* %13 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %176) #15
  unreachable

177:                                              ; preds = %168
  %178 = sub i64 %164, %170
  %179 = ashr exact i64 %178, 2
  %180 = icmp ult i64 %179, 2305843009213693951
  br i1 %180, label %181, label %189

181:                                              ; preds = %177
  %182 = ashr exact i64 %178, 1
  %183 = icmp ult i64 %182, %173
  %184 = select i1 %183, i64 %173, i64 %182
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %194, label %186

186:                                              ; preds = %181
  %187 = icmp ugt i64 %184, 4611686018427387903
  br i1 %187, label %188, label %189

188:                                              ; preds = %186
  call void @abort() #15
  unreachable

189:                                              ; preds = %186, %177
  %190 = phi i64 [ %184, %186 ], [ 4611686018427387903, %177 ]
  %191 = shl i64 %190, 2
  %192 = call i8* @_Znwm(i64 %191) #16
  %193 = bitcast i8* %192 to i32*
  br label %194

194:                                              ; preds = %189, %181
  %195 = phi i64 [ %190, %189 ], [ 0, %181 ]
  %196 = phi i8* [ %192, %189 ], [ null, %181 ]
  %197 = phi i32* [ %193, %189 ], [ null, %181 ]
  %198 = getelementptr inbounds i32, i32* %197, i64 %172
  %199 = getelementptr inbounds i32, i32* %197, i64 %195
  %200 = ptrtoint i32* %199 to i64
  store i32 %160, i32* %198, align 4
  %201 = getelementptr inbounds i32, i32* %198, i64 1
  %202 = ptrtoint i32* %201 to i64
  %203 = ptrtoint i32* %197 to i64
  %204 = icmp sgt i64 %171, 0
  br i1 %204, label %205, label %207

205:                                              ; preds = %194
  %206 = inttoptr i64 %170 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %196, i8* align 4 %206, i64 %171, i1 false) #14
  br label %207

207:                                              ; preds = %205, %194
  store i64 %203, i64* %59, align 16
  store i64 %202, i64* %93, align 8
  store i64 %200, i64* %58, align 16
  %208 = icmp eq i64 %170, 0
  br i1 %208, label %211, label %209

209:                                              ; preds = %207
  %210 = inttoptr i64 %170 to i8*
  call void @_ZdlPv(i8* %210) #16
  br label %211

211:                                              ; preds = %165, %207, %209
  %212 = add nuw nsw i32 %104, 1
  %213 = load i32, i32* %55, align 8
  %214 = icmp slt i32 %212, %213
  br i1 %214, label %103, label %94

215:                                              ; preds = %3, %102, %40
  %216 = phi i32 [ %41, %40 ], [ %95, %102 ], [ %24, %3 ]
  ret i32 %216
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator16writeFieldAccessERKNS_11FieldAccessERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::FieldAccess"* dereferenceable(40), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.SkSL::FieldAccess", %"class.SkSL::FieldAccess"* %1, i64 0, i32 0
  %5 = tail call %"class.SkSL::SPIRVCodeGenerator::LValue"* @_ZN4SkSL18SPIRVCodeGenerator9getLValueERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %4, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %6 = bitcast %"class.SkSL::SPIRVCodeGenerator::LValue"* %5 to i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)***
  %7 = load i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)**, i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)*, i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)** %7, i64 5
  %9 = load i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)*, i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)** %8, align 8
  %10 = tail call i32 %9(%"class.SkSL::SPIRVCodeGenerator::LValue"* %5, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %11 = icmp eq %"class.SkSL::SPIRVCodeGenerator::LValue"* %5, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %3
  %13 = bitcast %"class.SkSL::SPIRVCodeGenerator::LValue"* %5 to void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)***
  %14 = load void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)**, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)** %14, i64 1
  %16 = load void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)** %15, align 8
  tail call void %16(%"class.SkSL::SPIRVCodeGenerator::LValue"* nonnull %5) #14
  br label %17

17:                                               ; preds = %3, %12
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator17writeFloatLiteralERKNS_7LiteralIfEE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::Literal.430"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %"struct.std::__1::pair.495", align 8
  %8 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %1, i64 0, i32 1
  %9 = bitcast float* %8 to i32*
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %1, i64 0, i32 0, i32 1
  %13 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %12, align 8
  %14 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %13, i64 0, i32 4
  %15 = load i32, i32* %14, align 4
  %16 = bitcast %"struct.std::__1::pair.495"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #14
  %17 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %7, i64 0, i32 0, i32 0
  store i64 %11, i64* %17, align 8
  %18 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %7, i64 0, i32 0, i32 1
  store i32 %15, i32* %18, align 8
  %19 = getelementptr inbounds i8, i8* %16, i64 12
  %20 = bitcast i8* %19 to i32*
  store i32 -1431655766, i32* %20, align 4
  %21 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %7, i64 0, i32 1
  store i32 -1, i32* %21, align 8
  %22 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 22, i32 0
  %23 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %7, i64 0, i32 0
  %24 = call { %"struct.std::__1::__hash_node_base.245"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL19SPIRVNumberConstantEjEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_S9_S7_Lb1EEENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS3_JNS_4pairIKS3_jEEEEENSH_INS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.241"* %22, %"struct.SkSL::SPIRVNumberConstant"* nonnull dereferenceable(16) %23, %"struct.std::__1::pair.495"* nonnull dereferenceable(24) %7) #14
  %25 = extractvalue { %"struct.std::__1::__hash_node_base.245"*, i8 } %24, 0
  %26 = extractvalue { %"struct.std::__1::__hash_node_base.245"*, i8 } %24, 1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #14
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %32

28:                                               ; preds = %2
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node_base.245", %"struct.std::__1::__hash_node_base.245"* %25, i64 4
  %30 = bitcast %"struct.std::__1::__hash_node_base.245"* %29 to i32*
  %31 = load i32, i32* %30, align 8
  br label %59

32:                                               ; preds = %2
  %33 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %34 = load i32, i32* %33, align 8
  %35 = add i32 %34, 1
  store i32 %35, i32* %33, align 8
  %36 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %12, align 8
  %37 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %38 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %36, %"class.SkSL::MemoryLayout"* dereferenceable(4) %37) #14
  %39 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 15, i32 0
  %40 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %40) #14
  store i32 262187, i32* %3, align 4
  %41 = bitcast %"class.SkSL::OutputStream"* %39 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %42 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %42, i64 3
  %44 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %43, align 8
  call void %44(%"class.SkSL::OutputStream"* %39, i8* nonnull %40, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40) #14
  %45 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %45) #14
  store i32 %38, i32* %6, align 4
  %46 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %41, align 8
  %47 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %46, i64 3
  %48 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %47, align 8
  call void %48(%"class.SkSL::OutputStream"* %39, i8* nonnull %45, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %45) #14
  %49 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %49) #14
  store i32 %34, i32* %5, align 4
  %50 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %41, align 8
  %51 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %50, i64 3
  %52 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %51, align 8
  call void %52(%"class.SkSL::OutputStream"* %39, i8* nonnull %49, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %49) #14
  %53 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %53) #14
  store i32 %10, i32* %4, align 4
  %54 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %41, align 8
  %55 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %54, i64 3
  %56 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %55, align 8
  call void %56(%"class.SkSL::OutputStream"* %39, i8* nonnull %53, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %53) #14
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.245", %"struct.std::__1::__hash_node_base.245"* %25, i64 4
  %58 = bitcast %"struct.std::__1::__hash_node_base.245"* %57 to i32*
  store i32 %34, i32* %58, align 8
  br label %59

59:                                               ; preds = %28, %32
  %60 = phi i32 [ %31, %28 ], [ %34, %32 ]
  ret i32 %60
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator17writeFunctionCallERKNS_12FunctionCallERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::FunctionCall"* nocapture readonly dereferenceable(64), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca %"class.SkSL::String", align 8
  %21 = alloca %"class.SkSL::String", align 8
  %22 = alloca %"class.SkSL::String", align 8
  %23 = alloca %"class.std::__1::vector.458", align 8
  %24 = alloca %"class.std::__1::vector.382", align 8
  %25 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 1
  %26 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %25, align 8
  %27 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %26, i64 0, i32 7
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, -1
  br i1 %29, label %36, label %30

30:                                               ; preds = %3
  %31 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %26, i64 0, i32 1
  %32 = load %"class.SkSL::FunctionDefinition"*, %"class.SkSL::FunctionDefinition"** %31, align 8
  %33 = icmp eq %"class.SkSL::FunctionDefinition"* %32, null
  br i1 %33, label %34, label %36

34:                                               ; preds = %30
  %35 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator18writeIntrinsicCallERKNS_12FunctionCallERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::FunctionCall"* dereferenceable(64) %1, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  br label %617

36:                                               ; preds = %3, %30
  %37 = ptrtoint %"class.SkSL::FunctionDeclaration"* %26 to i64
  %38 = lshr i64 %37, 32
  %39 = shl i64 %37, 3
  %40 = and i64 %39, 4294967288
  %41 = add nuw nsw i64 %40, 8
  %42 = xor i64 %41, %38
  %43 = mul i64 %42, -7070675565921424023
  %44 = lshr i64 %43, 47
  %45 = xor i64 %43, %38
  %46 = xor i64 %45, %44
  %47 = mul i64 %46, -7070675565921424023
  %48 = lshr i64 %47, 47
  %49 = xor i64 %48, %47
  %50 = mul i64 %49, -7070675565921424023
  %51 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %102, label %54

54:                                               ; preds = %36
  %55 = tail call i64 @llvm.ctpop.i64(i64 %52) #14, !range !12
  %56 = icmp ugt i64 %55, 1
  br i1 %56, label %60, label %57

57:                                               ; preds = %54
  %58 = add i64 %52, -1
  %59 = and i64 %58, %50
  br label %64

60:                                               ; preds = %54
  %61 = icmp ult i64 %50, %52
  br i1 %61, label %64, label %62

62:                                               ; preds = %60
  %63 = urem i64 %50, %52
  br label %64

64:                                               ; preds = %62, %60, %57
  %65 = phi i64 [ %59, %57 ], [ %63, %62 ], [ %50, %60 ]
  %66 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %66, align 8
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %67, i64 %65
  %69 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %68, align 8
  %70 = icmp eq %"struct.std::__1::__hash_node_base.138"* %69, null
  br i1 %70, label %102, label %71

71:                                               ; preds = %64
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %69, i64 0, i32 0
  %73 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %72, align 8
  %74 = icmp eq %"struct.std::__1::__hash_node_base.138"* %73, null
  br i1 %74, label %102, label %75

75:                                               ; preds = %71
  %76 = add i64 %52, -1
  br label %77

77:                                               ; preds = %98, %75
  %78 = phi %"struct.std::__1::__hash_node_base.138"* [ %73, %75 ], [ %100, %98 ]
  %79 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %78, i64 1
  %80 = bitcast %"struct.std::__1::__hash_node_base.138"* %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = icmp eq i64 %81, %50
  br i1 %82, label %93, label %83

83:                                               ; preds = %77
  br i1 %56, label %86, label %84

84:                                               ; preds = %83
  %85 = and i64 %81, %76
  br label %90

86:                                               ; preds = %83
  %87 = icmp ult i64 %81, %52
  br i1 %87, label %90, label %88

88:                                               ; preds = %86
  %89 = urem i64 %81, %52
  br label %90

90:                                               ; preds = %88, %86, %84
  %91 = phi i64 [ %85, %84 ], [ %89, %88 ], [ %81, %86 ]
  %92 = icmp eq i64 %91, %65
  br i1 %92, label %98, label %102

93:                                               ; preds = %77
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %78, i64 2
  %95 = bitcast %"struct.std::__1::__hash_node_base.138"* %94 to %"class.SkSL::FunctionDeclaration"**
  %96 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %95, align 8
  %97 = icmp eq %"class.SkSL::FunctionDeclaration"* %96, %26
  br i1 %97, label %137, label %98

98:                                               ; preds = %93, %90
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %78, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base.138"* %100, null
  br i1 %101, label %102, label %77

102:                                              ; preds = %90, %98, %64, %36, %71
  %103 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 2
  %104 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %103, align 8
  %105 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 0, i32 0, i32 1
  %106 = load i32, i32* %105, align 8
  %107 = bitcast %"class.SkSL::String"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %107) #14
  %108 = bitcast %"class.SkSL::String"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %108) #14
  call void @_ZNK4SkSL19FunctionDeclaration11descriptionEv(%"class.SkSL::String"* nonnull sret %22, %"class.SkSL::FunctionDeclaration"* %26) #14
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %21, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %22) #14
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %20, %"class.SkSL::String"* nonnull %21, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.13, i64 0, i64 0)) #14
  %109 = bitcast %"class.SkSL::ErrorReporter"* %104 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %110 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %109, align 8
  %111 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %110, i64 2
  %112 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %111, align 8
  call void %112(%"class.SkSL::ErrorReporter"* %104, i32 %106, %"class.SkSL::String"* nonnull %20) #14
  %113 = bitcast %"class.SkSL::String"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %114 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %113, i64 0, i32 1, i32 0
  %115 = load i8, i8* %114, align 1
  %116 = icmp slt i8 %115, 0
  br i1 %116, label %117, label %120

117:                                              ; preds = %102
  %118 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load i8*, i8** %118, align 8
  call void @_ZdlPv(i8* %119) #16
  br label %120

120:                                              ; preds = %102, %117
  %121 = bitcast %"class.SkSL::String"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %122 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %121, i64 0, i32 1, i32 0
  %123 = load i8, i8* %122, align 1
  %124 = icmp slt i8 %123, 0
  br i1 %124, label %125, label %128

125:                                              ; preds = %120
  %126 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load i8*, i8** %126, align 8
  call void @_ZdlPv(i8* %127) #16
  br label %128

128:                                              ; preds = %120, %125
  %129 = bitcast %"class.SkSL::String"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %130 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %129, i64 0, i32 1, i32 0
  %131 = load i8, i8* %130, align 1
  %132 = icmp slt i8 %131, 0
  br i1 %132, label %133, label %136

133:                                              ; preds = %128
  %134 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = load i8*, i8** %134, align 8
  call void @_ZdlPv(i8* %135) #16
  br label %136

136:                                              ; preds = %128, %133
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %108) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %107) #14
  br label %617

137:                                              ; preds = %93
  %138 = bitcast %"class.std::__1::vector.458"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %138) #14
  %139 = getelementptr inbounds %"class.std::__1::vector.458", %"class.std::__1::vector.458"* %23, i64 0, i32 0, i32 0
  %140 = getelementptr inbounds %"class.std::__1::vector.458", %"class.std::__1::vector.458"* %23, i64 0, i32 0, i32 1
  %141 = getelementptr inbounds %"class.std::__1::vector.458", %"class.std::__1::vector.458"* %23, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %138, i8 0, i64 24, i1 false) #14
  %142 = bitcast %"class.std::__1::vector.382"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %142) #14
  %143 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %24, i64 0, i32 0, i32 0
  %144 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %24, i64 0, i32 0, i32 1
  %145 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %24, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %142, i8 0, i64 24, i1 false) #14
  %146 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 24
  %147 = bitcast i8* %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = and i64 %148, 4294967294
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %153

151:                                              ; preds = %137
  %152 = bitcast %"class.SkSL::OutputStream"* %2 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  br label %174

153:                                              ; preds = %137
  %154 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 16
  %155 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %26, i64 0, i32 3, i32 0, i32 0
  %156 = bitcast i8* %154 to %"class.std::__1::unique_ptr.336"**
  %157 = bitcast i32** %144 to i64*
  %158 = bitcast %"class.std::__1::vector.382"* %24 to i64*
  %159 = bitcast i32** %145 to i64*
  %160 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %161 = bitcast %"struct.SkSL::(anonymous namespace)::TempVar"** %140 to i64*
  %162 = bitcast %"class.std::__1::vector.458"* %23 to i64*
  %163 = bitcast %"struct.SkSL::(anonymous namespace)::TempVar"** %141 to i64*
  %164 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %165 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 17, i32 0
  %166 = bitcast i32* %4 to i8*
  %167 = bitcast %"class.SkSL::OutputStream"* %165 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %168 = bitcast i32* %16 to i8*
  %169 = bitcast i32* %15 to i8*
  %170 = bitcast i32* %14 to i8*
  %171 = bitcast i32* %13 to i8*
  %172 = bitcast %"class.SkSL::OutputStream"* %2 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %173 = bitcast i32* %12 to i8*
  br label %208

174:                                              ; preds = %486, %151
  %175 = phi void (%"class.SkSL::OutputStream"*, i8*, i64)*** [ %152, %151 ], [ %172, %486 ]
  %176 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %177 = load i32, i32* %176, align 8
  %178 = add i32 %177, 1
  store i32 %178, i32* %176, align 8
  %179 = load i64, i64* %147, align 8
  %180 = lshr i64 %179, 1
  %181 = trunc i64 %180 to i32
  %182 = and i32 %181, 2147483647
  %183 = add nuw nsw i32 %182, 4
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 57, i32 %183, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %184 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 0, i32 1
  %185 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %184, align 8
  %186 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %187 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %185, %"class.SkSL::MemoryLayout"* dereferenceable(4) %186) #14
  %188 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %188)
  store i32 %187, i32* %19, align 4
  %189 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %175, align 8
  %190 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %189, i64 3
  %191 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %190, align 8
  call void %191(%"class.SkSL::OutputStream"* %2, i8* nonnull %188, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %188)
  %192 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %192)
  store i32 %177, i32* %18, align 4
  %193 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %175, align 8
  %194 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %193, i64 3
  %195 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %194, align 8
  call void %195(%"class.SkSL::OutputStream"* %2, i8* nonnull %192, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %192)
  %196 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %78, i64 3
  %197 = bitcast %"struct.std::__1::__hash_node_base.138"* %196 to i32*
  %198 = load i32, i32* %197, align 8
  %199 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %199)
  store i32 %198, i32* %17, align 4
  %200 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %175, align 8
  %201 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %200, i64 3
  %202 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %201, align 8
  call void %202(%"class.SkSL::OutputStream"* %2, i8* nonnull %199, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %199)
  %203 = load i32*, i32** %143, align 8
  %204 = load i32*, i32** %144, align 8
  %205 = icmp eq i32* %203, %204
  br i1 %205, label %492, label %206

206:                                              ; preds = %174
  %207 = bitcast i32* %11 to i8*
  br label %506

208:                                              ; preds = %153, %486
  %209 = phi i64 [ 0, %153 ], [ %487, %486 ]
  %210 = load %"class.SkSL::Variable"**, %"class.SkSL::Variable"*** %155, align 8
  %211 = getelementptr inbounds %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %210, i64 %209
  %212 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %211, align 8
  %213 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %212, i64 0, i32 2
  %214 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %213, align 8
  %215 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %214, i64 0, i32 1
  %216 = load i32, i32* %215, align 8
  %217 = and i32 %216, 4
  %218 = icmp eq i32 %217, 0
  %219 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %156, align 8
  %220 = shl i64 %209, 32
  %221 = ashr exact i64 %220, 32
  %222 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %219, i64 %221, i32 0, i32 0, i32 0
  %223 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %222, align 8
  br i1 %218, label %402, label %224

224:                                              ; preds = %208
  %225 = call %"class.SkSL::SPIRVCodeGenerator::LValue"* @_ZN4SkSL18SPIRVCodeGenerator9getLValueERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %223, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %226 = ptrtoint %"class.SkSL::SPIRVCodeGenerator::LValue"* %225 to i64
  %227 = bitcast %"class.SkSL::SPIRVCodeGenerator::LValue"* %225 to i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*)***
  %228 = load i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*)**, i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*** %227, align 8
  %229 = getelementptr inbounds i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*, i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*)** %228, i64 2
  %230 = load i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*, i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*)** %229, align 8
  %231 = call i32 %230(%"class.SkSL::SPIRVCodeGenerator::LValue"* %225) #14
  %232 = icmp eq i32 %231, -1
  br i1 %232, label %290, label %233

233:                                              ; preds = %224
  %234 = bitcast %"class.SkSL::SPIRVCodeGenerator::LValue"* %225 to i1 (%"class.SkSL::SPIRVCodeGenerator::LValue"*)***
  %235 = load i1 (%"class.SkSL::SPIRVCodeGenerator::LValue"*)**, i1 (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*** %234, align 8
  %236 = getelementptr inbounds i1 (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*, i1 (%"class.SkSL::SPIRVCodeGenerator::LValue"*)** %235, i64 3
  %237 = load i1 (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*, i1 (%"class.SkSL::SPIRVCodeGenerator::LValue"*)** %236, align 8
  %238 = call zeroext i1 %237(%"class.SkSL::SPIRVCodeGenerator::LValue"* %225) #14
  br i1 %238, label %239, label %290

239:                                              ; preds = %233
  %240 = load i32*, i32** %144, align 8
  %241 = load i32*, i32** %145, align 8
  %242 = icmp eq i32* %240, %241
  %243 = ptrtoint i32* %241 to i64
  br i1 %242, label %247, label %244

244:                                              ; preds = %239
  store i32 %231, i32* %240, align 4
  %245 = getelementptr inbounds i32, i32* %240, i64 1
  %246 = ptrtoint i32* %245 to i64
  store i64 %246, i64* %157, align 8
  br label %395

247:                                              ; preds = %239
  %248 = ptrtoint i32* %240 to i64
  %249 = load i64, i64* %158, align 8
  %250 = sub i64 %248, %249
  %251 = ashr exact i64 %250, 2
  %252 = add nsw i64 %251, 1
  %253 = icmp ugt i64 %252, 4611686018427387903
  br i1 %253, label %254, label %256

254:                                              ; preds = %247
  %255 = bitcast %"class.std::__1::vector.382"* %24 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %255) #15
  unreachable

256:                                              ; preds = %247
  %257 = sub i64 %243, %249
  %258 = ashr exact i64 %257, 2
  %259 = icmp ult i64 %258, 2305843009213693951
  br i1 %259, label %260, label %268

260:                                              ; preds = %256
  %261 = ashr exact i64 %257, 1
  %262 = icmp ult i64 %261, %252
  %263 = select i1 %262, i64 %252, i64 %261
  %264 = icmp eq i64 %263, 0
  br i1 %264, label %273, label %265

265:                                              ; preds = %260
  %266 = icmp ugt i64 %263, 4611686018427387903
  br i1 %266, label %267, label %268

267:                                              ; preds = %265
  call void @abort() #15
  unreachable

268:                                              ; preds = %265, %256
  %269 = phi i64 [ %263, %265 ], [ 4611686018427387903, %256 ]
  %270 = shl i64 %269, 2
  %271 = call i8* @_Znwm(i64 %270) #16
  %272 = bitcast i8* %271 to i32*
  br label %273

273:                                              ; preds = %268, %260
  %274 = phi i64 [ %269, %268 ], [ 0, %260 ]
  %275 = phi i8* [ %271, %268 ], [ null, %260 ]
  %276 = phi i32* [ %272, %268 ], [ null, %260 ]
  %277 = getelementptr inbounds i32, i32* %276, i64 %251
  %278 = getelementptr inbounds i32, i32* %276, i64 %274
  %279 = ptrtoint i32* %278 to i64
  store i32 %231, i32* %277, align 4
  %280 = getelementptr inbounds i32, i32* %277, i64 1
  %281 = ptrtoint i32* %280 to i64
  %282 = ptrtoint i32* %276 to i64
  %283 = icmp sgt i64 %250, 0
  br i1 %283, label %284, label %286

284:                                              ; preds = %273
  %285 = inttoptr i64 %249 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %275, i8* align 4 %285, i64 %250, i1 false) #14
  br label %286

286:                                              ; preds = %284, %273
  store i64 %282, i64* %158, align 8
  store i64 %281, i64* %157, align 8
  store i64 %279, i64* %159, align 8
  %287 = icmp eq i64 %249, 0
  br i1 %287, label %395, label %288

288:                                              ; preds = %286
  %289 = inttoptr i64 %249 to i8*
  call void @_ZdlPv(i8* %289) #16
  br label %395

290:                                              ; preds = %224, %233
  %291 = bitcast %"class.SkSL::SPIRVCodeGenerator::LValue"* %225 to i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)***
  %292 = load i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)**, i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)*** %291, align 8
  %293 = getelementptr inbounds i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)*, i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)** %292, i64 5
  %294 = load i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)*, i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)** %293, align 8
  %295 = call i32 %294(%"class.SkSL::SPIRVCodeGenerator::LValue"* %225, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %296 = load i32, i32* %160, align 8
  %297 = add i32 %296, 1
  store i32 %297, i32* %160, align 8
  %298 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %156, align 8
  %299 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %298, i64 %221, i32 0, i32 0, i32 0
  %300 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %299, align 8
  %301 = bitcast %"class.SkSL::Expression"* %300 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %302 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %301, align 8
  %303 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %302, i64 3
  %304 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %303, align 8
  %305 = call dereferenceable(184) %"class.SkSL::Type"* %304(%"class.SkSL::Expression"* %300) #14
  %306 = load %"struct.SkSL::(anonymous namespace)::TempVar"*, %"struct.SkSL::(anonymous namespace)::TempVar"** %140, align 8
  %307 = load %"struct.SkSL::(anonymous namespace)::TempVar"*, %"struct.SkSL::(anonymous namespace)::TempVar"** %141, align 8
  %308 = icmp ult %"struct.SkSL::(anonymous namespace)::TempVar"* %306, %307
  %309 = ptrtoint %"struct.SkSL::(anonymous namespace)::TempVar"* %307 to i64
  br i1 %308, label %310, label %317

310:                                              ; preds = %290
  %311 = getelementptr inbounds %"struct.SkSL::(anonymous namespace)::TempVar", %"struct.SkSL::(anonymous namespace)::TempVar"* %306, i64 0, i32 0
  store i32 %296, i32* %311, align 8
  %312 = getelementptr inbounds %"struct.SkSL::(anonymous namespace)::TempVar", %"struct.SkSL::(anonymous namespace)::TempVar"* %306, i64 0, i32 1
  store %"class.SkSL::Type"* %305, %"class.SkSL::Type"** %312, align 8
  %313 = getelementptr inbounds %"struct.SkSL::(anonymous namespace)::TempVar", %"struct.SkSL::(anonymous namespace)::TempVar"* %306, i64 0, i32 2
  %314 = bitcast %"class.std::__1::unique_ptr.437"* %313 to i64*
  store i64 %226, i64* %314, align 8
  %315 = getelementptr inbounds %"struct.SkSL::(anonymous namespace)::TempVar", %"struct.SkSL::(anonymous namespace)::TempVar"* %306, i64 1
  %316 = ptrtoint %"struct.SkSL::(anonymous namespace)::TempVar"* %315 to i64
  store i64 %316, i64* %161, align 8
  br label %406

317:                                              ; preds = %290
  %318 = ptrtoint %"struct.SkSL::(anonymous namespace)::TempVar"* %306 to i64
  %319 = load i64, i64* %162, align 8
  %320 = sub i64 %318, %319
  %321 = sdiv exact i64 %320, 24
  %322 = add nsw i64 %321, 1
  %323 = icmp ugt i64 %322, 768614336404564650
  %324 = inttoptr i64 %319 to %"struct.SkSL::(anonymous namespace)::TempVar"*
  br i1 %323, label %325, label %327

325:                                              ; preds = %317
  %326 = bitcast %"class.std::__1::vector.458"* %23 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %326) #15
  unreachable

327:                                              ; preds = %317
  %328 = sub i64 %309, %319
  %329 = sdiv exact i64 %328, 24
  %330 = icmp ult i64 %329, 384307168202282325
  br i1 %330, label %331, label %336

331:                                              ; preds = %327
  %332 = shl nsw i64 %329, 1
  %333 = icmp ult i64 %332, %322
  %334 = select i1 %333, i64 %322, i64 %332
  %335 = icmp eq i64 %334, 0
  br i1 %335, label %341, label %336

336:                                              ; preds = %331, %327
  %337 = phi i64 [ %334, %331 ], [ 768614336404564650, %327 ]
  %338 = mul i64 %337, 24
  %339 = call i8* @_Znwm(i64 %338) #16
  %340 = bitcast i8* %339 to %"struct.SkSL::(anonymous namespace)::TempVar"*
  br label %341

341:                                              ; preds = %336, %331
  %342 = phi i64 [ %337, %336 ], [ 0, %331 ]
  %343 = phi %"struct.SkSL::(anonymous namespace)::TempVar"* [ %340, %336 ], [ null, %331 ]
  %344 = getelementptr inbounds %"struct.SkSL::(anonymous namespace)::TempVar", %"struct.SkSL::(anonymous namespace)::TempVar"* %343, i64 %321
  %345 = getelementptr inbounds %"struct.SkSL::(anonymous namespace)::TempVar", %"struct.SkSL::(anonymous namespace)::TempVar"* %343, i64 %342
  %346 = ptrtoint %"struct.SkSL::(anonymous namespace)::TempVar"* %345 to i64
  %347 = getelementptr inbounds %"struct.SkSL::(anonymous namespace)::TempVar", %"struct.SkSL::(anonymous namespace)::TempVar"* %344, i64 0, i32 0
  store i32 %296, i32* %347, align 8
  %348 = getelementptr inbounds %"struct.SkSL::(anonymous namespace)::TempVar", %"struct.SkSL::(anonymous namespace)::TempVar"* %343, i64 %321, i32 1
  store %"class.SkSL::Type"* %305, %"class.SkSL::Type"** %348, align 8
  %349 = getelementptr inbounds %"struct.SkSL::(anonymous namespace)::TempVar", %"struct.SkSL::(anonymous namespace)::TempVar"* %343, i64 %321, i32 2
  %350 = bitcast %"class.std::__1::unique_ptr.437"* %349 to i64*
  store i64 %226, i64* %350, align 8
  %351 = getelementptr inbounds %"struct.SkSL::(anonymous namespace)::TempVar", %"struct.SkSL::(anonymous namespace)::TempVar"* %344, i64 1
  %352 = ptrtoint %"struct.SkSL::(anonymous namespace)::TempVar"* %351 to i64
  %353 = icmp eq %"struct.SkSL::(anonymous namespace)::TempVar"* %306, %324
  br i1 %353, label %371, label %354

354:                                              ; preds = %341, %354
  %355 = phi %"struct.SkSL::(anonymous namespace)::TempVar"* [ %357, %354 ], [ %344, %341 ]
  %356 = phi %"struct.SkSL::(anonymous namespace)::TempVar"* [ %358, %354 ], [ %306, %341 ]
  %357 = getelementptr inbounds %"struct.SkSL::(anonymous namespace)::TempVar", %"struct.SkSL::(anonymous namespace)::TempVar"* %355, i64 -1
  %358 = getelementptr inbounds %"struct.SkSL::(anonymous namespace)::TempVar", %"struct.SkSL::(anonymous namespace)::TempVar"* %356, i64 -1
  %359 = bitcast %"struct.SkSL::(anonymous namespace)::TempVar"* %357 to i8*
  %360 = bitcast %"struct.SkSL::(anonymous namespace)::TempVar"* %358 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %359, i8* align 8 %360, i64 16, i1 false) #14
  %361 = getelementptr inbounds %"struct.SkSL::(anonymous namespace)::TempVar", %"struct.SkSL::(anonymous namespace)::TempVar"* %355, i64 -1, i32 2
  %362 = getelementptr inbounds %"struct.SkSL::(anonymous namespace)::TempVar", %"struct.SkSL::(anonymous namespace)::TempVar"* %356, i64 -1, i32 2
  %363 = getelementptr inbounds %"class.std::__1::unique_ptr.437", %"class.std::__1::unique_ptr.437"* %362, i64 0, i32 0, i32 0, i32 0
  %364 = bitcast %"class.std::__1::unique_ptr.437"* %362 to i64*
  %365 = load i64, i64* %364, align 8
  store %"class.SkSL::SPIRVCodeGenerator::LValue"* null, %"class.SkSL::SPIRVCodeGenerator::LValue"** %363, align 8
  %366 = bitcast %"class.std::__1::unique_ptr.437"* %361 to i64*
  store i64 %365, i64* %366, align 8
  %367 = icmp eq %"struct.SkSL::(anonymous namespace)::TempVar"* %358, %324
  br i1 %367, label %368, label %354

368:                                              ; preds = %354
  %369 = load i64, i64* %162, align 8
  %370 = load %"struct.SkSL::(anonymous namespace)::TempVar"*, %"struct.SkSL::(anonymous namespace)::TempVar"** %140, align 8
  br label %371

371:                                              ; preds = %341, %368
  %372 = phi %"struct.SkSL::(anonymous namespace)::TempVar"* [ %370, %368 ], [ %306, %341 ]
  %373 = phi %"struct.SkSL::(anonymous namespace)::TempVar"* [ %357, %368 ], [ %344, %341 ]
  %374 = phi i64 [ %369, %368 ], [ %318, %341 ]
  %375 = ptrtoint %"struct.SkSL::(anonymous namespace)::TempVar"* %373 to i64
  store i64 %375, i64* %162, align 8
  store i64 %352, i64* %161, align 8
  store i64 %346, i64* %163, align 8
  %376 = inttoptr i64 %374 to %"struct.SkSL::(anonymous namespace)::TempVar"*
  %377 = icmp eq %"struct.SkSL::(anonymous namespace)::TempVar"* %372, %376
  br i1 %377, label %391, label %378

378:                                              ; preds = %371, %389
  %379 = phi %"struct.SkSL::(anonymous namespace)::TempVar"* [ %380, %389 ], [ %372, %371 ]
  %380 = getelementptr inbounds %"struct.SkSL::(anonymous namespace)::TempVar", %"struct.SkSL::(anonymous namespace)::TempVar"* %379, i64 -1
  %381 = getelementptr inbounds %"struct.SkSL::(anonymous namespace)::TempVar", %"struct.SkSL::(anonymous namespace)::TempVar"* %379, i64 -1, i32 2, i32 0, i32 0, i32 0
  %382 = load %"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::SPIRVCodeGenerator::LValue"** %381, align 8
  store %"class.SkSL::SPIRVCodeGenerator::LValue"* null, %"class.SkSL::SPIRVCodeGenerator::LValue"** %381, align 8
  %383 = icmp eq %"class.SkSL::SPIRVCodeGenerator::LValue"* %382, null
  br i1 %383, label %389, label %384

384:                                              ; preds = %378
  %385 = bitcast %"class.SkSL::SPIRVCodeGenerator::LValue"* %382 to void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)***
  %386 = load void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)**, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*** %385, align 8
  %387 = getelementptr inbounds void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)** %386, i64 1
  %388 = load void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)** %387, align 8
  call void %388(%"class.SkSL::SPIRVCodeGenerator::LValue"* nonnull %382) #14
  br label %389

389:                                              ; preds = %384, %378
  %390 = icmp eq %"struct.SkSL::(anonymous namespace)::TempVar"* %380, %376
  br i1 %390, label %391, label %378

391:                                              ; preds = %389, %371
  %392 = icmp eq i64 %374, 0
  br i1 %392, label %406, label %393

393:                                              ; preds = %391
  %394 = inttoptr i64 %374 to i8*
  call void @_ZdlPv(i8* %394) #16
  br label %406

395:                                              ; preds = %288, %286, %244
  %396 = icmp eq %"class.SkSL::SPIRVCodeGenerator::LValue"* %225, null
  br i1 %396, label %486, label %397

397:                                              ; preds = %395
  %398 = bitcast %"class.SkSL::SPIRVCodeGenerator::LValue"* %225 to void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)***
  %399 = load void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)**, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*** %398, align 8
  %400 = getelementptr inbounds void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)** %399, i64 1
  %401 = load void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)** %400, align 8
  call void %401(%"class.SkSL::SPIRVCodeGenerator::LValue"* nonnull %225) #14
  br label %486

402:                                              ; preds = %208
  %403 = call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %223, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %404 = load i32, i32* %160, align 8
  %405 = add i32 %404, 1
  store i32 %405, i32* %160, align 8
  br label %406

406:                                              ; preds = %310, %391, %393, %402
  %407 = phi i32 [ %404, %402 ], [ %296, %393 ], [ %296, %391 ], [ %296, %310 ]
  %408 = phi i32 [ %403, %402 ], [ %295, %393 ], [ %295, %391 ], [ %295, %310 ]
  %409 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %156, align 8
  %410 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %409, i64 %221, i32 0, i32 0, i32 0
  %411 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %410, align 8
  %412 = bitcast %"class.SkSL::Expression"* %411 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %413 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %412, align 8
  %414 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %413, i64 3
  %415 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %414, align 8
  %416 = call dereferenceable(184) %"class.SkSL::Type"* %415(%"class.SkSL::Expression"* %411) #14
  %417 = call i32 @_ZN4SkSL18SPIRVCodeGenerator14getPointerTypeERKNS_4TypeERKNS_12MemoryLayoutE16SpvStorageClass_(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %416, %"class.SkSL::MemoryLayout"* dereferenceable(4) %164, i32 7) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %166) #14
  store i32 262203, i32* %4, align 4
  %418 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %167, align 8
  %419 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %418, i64 3
  %420 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %419, align 8
  call void %420(%"class.SkSL::OutputStream"* %165, i8* nonnull %166, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %166) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %168) #14
  store i32 %417, i32* %16, align 4
  %421 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %167, align 8
  %422 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %421, i64 3
  %423 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %422, align 8
  call void %423(%"class.SkSL::OutputStream"* %165, i8* nonnull %168, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %168) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %169) #14
  store i32 %407, i32* %15, align 4
  %424 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %167, align 8
  %425 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %424, i64 3
  %426 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %425, align 8
  call void %426(%"class.SkSL::OutputStream"* %165, i8* nonnull %169, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %169) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %170) #14
  store i32 7, i32* %14, align 4
  %427 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %167, align 8
  %428 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %427, i64 3
  %429 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %428, align 8
  call void %429(%"class.SkSL::OutputStream"* %165, i8* nonnull %170, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %170) #14
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 62, i32 3, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %171) #14
  store i32 %407, i32* %13, align 4
  %430 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %172, align 8
  %431 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %430, i64 3
  %432 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %431, align 8
  call void %432(%"class.SkSL::OutputStream"* %2, i8* nonnull %171, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %171) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %173) #14
  store i32 %408, i32* %12, align 4
  %433 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %172, align 8
  %434 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %433, i64 3
  %435 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %434, align 8
  call void %435(%"class.SkSL::OutputStream"* %2, i8* nonnull %173, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %173) #14
  %436 = load i32*, i32** %144, align 8
  %437 = load i32*, i32** %145, align 8
  %438 = icmp eq i32* %436, %437
  %439 = ptrtoint i32* %437 to i64
  br i1 %438, label %443, label %440

440:                                              ; preds = %406
  store i32 %407, i32* %436, align 4
  %441 = getelementptr inbounds i32, i32* %436, i64 1
  %442 = ptrtoint i32* %441 to i64
  store i64 %442, i64* %157, align 8
  br label %486

443:                                              ; preds = %406
  %444 = ptrtoint i32* %436 to i64
  %445 = load i64, i64* %158, align 8
  %446 = sub i64 %444, %445
  %447 = ashr exact i64 %446, 2
  %448 = add nsw i64 %447, 1
  %449 = icmp ugt i64 %448, 4611686018427387903
  br i1 %449, label %450, label %452

450:                                              ; preds = %443
  %451 = bitcast %"class.std::__1::vector.382"* %24 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %451) #15
  unreachable

452:                                              ; preds = %443
  %453 = sub i64 %439, %445
  %454 = ashr exact i64 %453, 2
  %455 = icmp ult i64 %454, 2305843009213693951
  br i1 %455, label %456, label %464

456:                                              ; preds = %452
  %457 = ashr exact i64 %453, 1
  %458 = icmp ult i64 %457, %448
  %459 = select i1 %458, i64 %448, i64 %457
  %460 = icmp eq i64 %459, 0
  br i1 %460, label %469, label %461

461:                                              ; preds = %456
  %462 = icmp ugt i64 %459, 4611686018427387903
  br i1 %462, label %463, label %464

463:                                              ; preds = %461
  call void @abort() #15
  unreachable

464:                                              ; preds = %461, %452
  %465 = phi i64 [ %459, %461 ], [ 4611686018427387903, %452 ]
  %466 = shl i64 %465, 2
  %467 = call i8* @_Znwm(i64 %466) #16
  %468 = bitcast i8* %467 to i32*
  br label %469

469:                                              ; preds = %464, %456
  %470 = phi i64 [ %465, %464 ], [ 0, %456 ]
  %471 = phi i8* [ %467, %464 ], [ null, %456 ]
  %472 = phi i32* [ %468, %464 ], [ null, %456 ]
  %473 = getelementptr inbounds i32, i32* %472, i64 %447
  %474 = getelementptr inbounds i32, i32* %472, i64 %470
  %475 = ptrtoint i32* %474 to i64
  store i32 %407, i32* %473, align 4
  %476 = getelementptr inbounds i32, i32* %473, i64 1
  %477 = ptrtoint i32* %476 to i64
  %478 = ptrtoint i32* %472 to i64
  %479 = icmp sgt i64 %446, 0
  br i1 %479, label %480, label %482

480:                                              ; preds = %469
  %481 = inttoptr i64 %445 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %471, i8* align 4 %481, i64 %446, i1 false) #14
  br label %482

482:                                              ; preds = %480, %469
  store i64 %478, i64* %158, align 8
  store i64 %477, i64* %157, align 8
  store i64 %475, i64* %159, align 8
  %483 = icmp eq i64 %445, 0
  br i1 %483, label %486, label %484

484:                                              ; preds = %482
  %485 = inttoptr i64 %445 to i8*
  call void @_ZdlPv(i8* %485) #16
  br label %486

486:                                              ; preds = %397, %395, %484, %482, %440
  %487 = add nuw nsw i64 %209, 1
  %488 = load i64, i64* %147, align 8
  %489 = lshr i64 %488, 1
  %490 = and i64 %489, 2147483647
  %491 = icmp ult i64 %487, %490
  br i1 %491, label %208, label %174

492:                                              ; preds = %506, %174
  %493 = load %"struct.SkSL::(anonymous namespace)::TempVar"*, %"struct.SkSL::(anonymous namespace)::TempVar"** %139, align 8
  %494 = load %"struct.SkSL::(anonymous namespace)::TempVar"*, %"struct.SkSL::(anonymous namespace)::TempVar"** %140, align 8
  %495 = icmp eq %"struct.SkSL::(anonymous namespace)::TempVar"* %493, %494
  br i1 %495, label %514, label %496

496:                                              ; preds = %492
  %497 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 1
  %498 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %499 = bitcast i32* %8 to i8*
  %500 = bitcast %"class.SkSL::OutputStream"* %498 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %501 = bitcast i32* %10 to i8*
  %502 = bitcast i32* %9 to i8*
  %503 = bitcast i32* %7 to i8*
  %504 = bitcast i32* %6 to i8*
  %505 = bitcast i32* %5 to i8*
  br label %547

506:                                              ; preds = %206, %506
  %507 = phi i32* [ %203, %206 ], [ %512, %506 ]
  %508 = load i32, i32* %507, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %207)
  store i32 %508, i32* %11, align 4
  %509 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %175, align 8
  %510 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %509, i64 3
  %511 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %510, align 8
  call void %511(%"class.SkSL::OutputStream"* %2, i8* nonnull %207, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %207)
  %512 = getelementptr inbounds i32, i32* %507, i64 1
  %513 = icmp eq i32* %512, %204
  br i1 %513, label %492, label %506

514:                                              ; preds = %593, %492
  %515 = load i32*, i32** %143, align 8
  %516 = icmp eq i32* %515, null
  br i1 %516, label %521, label %517

517:                                              ; preds = %514
  %518 = ptrtoint i32* %515 to i64
  %519 = bitcast i32** %144 to i64*
  store i64 %518, i64* %519, align 8
  %520 = bitcast i32* %515 to i8*
  call void @_ZdlPv(i8* %520) #16
  br label %521

521:                                              ; preds = %514, %517
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %142) #14
  %522 = load %"struct.SkSL::(anonymous namespace)::TempVar"*, %"struct.SkSL::(anonymous namespace)::TempVar"** %139, align 8
  %523 = icmp eq %"struct.SkSL::(anonymous namespace)::TempVar"* %522, null
  br i1 %523, label %546, label %524

524:                                              ; preds = %521
  %525 = bitcast %"struct.SkSL::(anonymous namespace)::TempVar"* %522 to i8*
  %526 = load %"struct.SkSL::(anonymous namespace)::TempVar"*, %"struct.SkSL::(anonymous namespace)::TempVar"** %140, align 8
  %527 = icmp eq %"struct.SkSL::(anonymous namespace)::TempVar"* %526, %522
  br i1 %527, label %544, label %528

528:                                              ; preds = %524, %539
  %529 = phi %"struct.SkSL::(anonymous namespace)::TempVar"* [ %530, %539 ], [ %526, %524 ]
  %530 = getelementptr inbounds %"struct.SkSL::(anonymous namespace)::TempVar", %"struct.SkSL::(anonymous namespace)::TempVar"* %529, i64 -1
  %531 = getelementptr inbounds %"struct.SkSL::(anonymous namespace)::TempVar", %"struct.SkSL::(anonymous namespace)::TempVar"* %529, i64 -1, i32 2, i32 0, i32 0, i32 0
  %532 = load %"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::SPIRVCodeGenerator::LValue"** %531, align 8
  store %"class.SkSL::SPIRVCodeGenerator::LValue"* null, %"class.SkSL::SPIRVCodeGenerator::LValue"** %531, align 8
  %533 = icmp eq %"class.SkSL::SPIRVCodeGenerator::LValue"* %532, null
  br i1 %533, label %539, label %534

534:                                              ; preds = %528
  %535 = bitcast %"class.SkSL::SPIRVCodeGenerator::LValue"* %532 to void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)***
  %536 = load void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)**, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*** %535, align 8
  %537 = getelementptr inbounds void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)** %536, i64 1
  %538 = load void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)** %537, align 8
  call void %538(%"class.SkSL::SPIRVCodeGenerator::LValue"* nonnull %532) #14
  br label %539

539:                                              ; preds = %534, %528
  %540 = icmp eq %"struct.SkSL::(anonymous namespace)::TempVar"* %530, %522
  br i1 %540, label %541, label %528

541:                                              ; preds = %539
  %542 = bitcast %"class.std::__1::vector.458"* %23 to i8**
  %543 = load i8*, i8** %542, align 8
  br label %544

544:                                              ; preds = %541, %524
  %545 = phi i8* [ %543, %541 ], [ %525, %524 ]
  store %"struct.SkSL::(anonymous namespace)::TempVar"* %522, %"struct.SkSL::(anonymous namespace)::TempVar"** %140, align 8
  call void @_ZdlPv(i8* %545) #16
  br label %546

546:                                              ; preds = %521, %544
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %138) #14
  br label %617

547:                                              ; preds = %496, %593
  %548 = phi %"struct.SkSL::(anonymous namespace)::TempVar"* [ %493, %496 ], [ %615, %593 ]
  %549 = getelementptr inbounds %"struct.SkSL::(anonymous namespace)::TempVar", %"struct.SkSL::(anonymous namespace)::TempVar"* %548, i64 0, i32 1
  %550 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %549, align 8
  %551 = icmp eq %"class.SkSL::Type"* %550, null
  br i1 %551, label %593, label %552

552:                                              ; preds = %547
  %553 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %550, i64 0, i32 6
  %554 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %553, align 8
  %555 = icmp eq %"class.SkSL::Type"* %554, null
  %556 = select i1 %555, %"class.SkSL::Type"* %550, %"class.SkSL::Type"* %554
  %557 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %556, i64 0, i32 4
  %558 = load i32, i32* %557, align 4
  %559 = icmp ult i32 %558, 3
  br i1 %559, label %564, label %560

560:                                              ; preds = %552
  %561 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %550, i64 0, i32 3
  %562 = load i32, i32* %561, align 8
  %563 = icmp eq i32 %562, 6
  br i1 %563, label %564, label %593

564:                                              ; preds = %560, %552
  br i1 %555, label %570, label %565

565:                                              ; preds = %564, %565
  %566 = phi %"class.SkSL::Type"* [ %568, %565 ], [ %554, %564 ]
  %567 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %566, i64 0, i32 6
  %568 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %567, align 8
  %569 = icmp eq %"class.SkSL::Type"* %568, null
  br i1 %569, label %570, label %565

570:                                              ; preds = %565, %564
  %571 = phi %"class.SkSL::Type"* [ %550, %564 ], [ %566, %565 ]
  %572 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %571, i64 0, i32 16
  %573 = load i8, i8* %572, align 8, !range !2
  %574 = icmp eq i8 %573, 0
  br i1 %574, label %575, label %593

575:                                              ; preds = %570
  %576 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %497, align 8
  %577 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %576, i64 0, i32 1, i32 0, i32 0, i32 0
  %578 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %577, align 8
  %579 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %578, i64 0, i32 1, i32 3
  %580 = load i8, i8* %579, align 1, !range !2
  %581 = icmp eq i8 %580, 0
  br i1 %581, label %582, label %593

582:                                              ; preds = %575
  %583 = load i32, i32* %176, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %499) #14
  store i32 196679, i32* %8, align 4
  %584 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %500, align 8
  %585 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %584, i64 3
  %586 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %585, align 8
  call void %586(%"class.SkSL::OutputStream"* %498, i8* nonnull %499, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %499) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %501) #14
  store i32 %583, i32* %10, align 4
  %587 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %500, align 8
  %588 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %587, i64 3
  %589 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %588, align 8
  call void %589(%"class.SkSL::OutputStream"* %498, i8* nonnull %501, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %501) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %502) #14
  store i32 0, i32* %9, align 4
  %590 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %500, align 8
  %591 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %590, i64 3
  %592 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %591, align 8
  call void %592(%"class.SkSL::OutputStream"* %498, i8* nonnull %502, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %502) #14
  br label %593

593:                                              ; preds = %547, %560, %570, %575, %582
  %594 = load i32, i32* %176, align 8
  %595 = add i32 %594, 1
  store i32 %595, i32* %176, align 8
  %596 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %549, align 8
  %597 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %596, %"class.SkSL::MemoryLayout"* dereferenceable(4) %186) #14
  %598 = getelementptr inbounds %"struct.SkSL::(anonymous namespace)::TempVar", %"struct.SkSL::(anonymous namespace)::TempVar"* %548, i64 0, i32 0
  %599 = load i32, i32* %598, align 8
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 61, i32 4, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %503) #14
  store i32 %597, i32* %7, align 4
  %600 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %175, align 8
  %601 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %600, i64 3
  %602 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %601, align 8
  call void %602(%"class.SkSL::OutputStream"* %2, i8* nonnull %503, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %503) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %504) #14
  store i32 %594, i32* %6, align 4
  %603 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %175, align 8
  %604 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %603, i64 3
  %605 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %604, align 8
  call void %605(%"class.SkSL::OutputStream"* %2, i8* nonnull %504, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %504) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %505) #14
  store i32 %599, i32* %5, align 4
  %606 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %175, align 8
  %607 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %606, i64 3
  %608 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %607, align 8
  call void %608(%"class.SkSL::OutputStream"* %2, i8* nonnull %505, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %505) #14
  %609 = getelementptr inbounds %"struct.SkSL::(anonymous namespace)::TempVar", %"struct.SkSL::(anonymous namespace)::TempVar"* %548, i64 0, i32 2, i32 0, i32 0, i32 0
  %610 = load %"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::SPIRVCodeGenerator::LValue"** %609, align 8
  %611 = bitcast %"class.SkSL::SPIRVCodeGenerator::LValue"* %610 to void (%"class.SkSL::SPIRVCodeGenerator::LValue"*, i32, %"class.SkSL::OutputStream"*)***
  %612 = load void (%"class.SkSL::SPIRVCodeGenerator::LValue"*, i32, %"class.SkSL::OutputStream"*)**, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*, i32, %"class.SkSL::OutputStream"*)*** %611, align 8
  %613 = getelementptr inbounds void (%"class.SkSL::SPIRVCodeGenerator::LValue"*, i32, %"class.SkSL::OutputStream"*)*, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*, i32, %"class.SkSL::OutputStream"*)** %612, i64 6
  %614 = load void (%"class.SkSL::SPIRVCodeGenerator::LValue"*, i32, %"class.SkSL::OutputStream"*)*, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*, i32, %"class.SkSL::OutputStream"*)** %613, align 8
  call void %614(%"class.SkSL::SPIRVCodeGenerator::LValue"* %610, i32 %594, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %615 = getelementptr inbounds %"struct.SkSL::(anonymous namespace)::TempVar", %"struct.SkSL::(anonymous namespace)::TempVar"* %548, i64 1
  %616 = icmp eq %"struct.SkSL::(anonymous namespace)::TempVar"* %615, %494
  br i1 %616, label %514, label %547

617:                                              ; preds = %136, %546, %34
  %618 = phi i32 [ %35, %34 ], [ -1, %136 ], [ %177, %546 ]
  ret i32 %618
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator21writePrefixExpressionERKNS_16PrefixExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::PrefixExpression"* nocapture readonly dereferenceable(40), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = getelementptr inbounds %"class.SkSL::PrefixExpression", %"class.SkSL::PrefixExpression"* %1, i64 0, i32 0, i32 1
  %20 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %19, align 8
  %21 = getelementptr inbounds %"class.SkSL::PrefixExpression", %"class.SkSL::PrefixExpression"* %1, i64 0, i32 1, i32 0
  %22 = load i32, i32* %21, align 8
  switch i32 %22, label %229 [
    i32 47, label %23
    i32 46, label %123
    i32 44, label %127
    i32 45, label %156
    i32 60, label %185
    i32 56, label %207
  ]

23:                                               ; preds = %3
  %24 = icmp eq %"class.SkSL::Type"* %20, null
  br i1 %24, label %73, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %20, i64 0, i32 6
  %27 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %26, align 8
  %28 = icmp eq %"class.SkSL::Type"* %27, null
  %29 = select i1 %28, %"class.SkSL::Type"* %20, %"class.SkSL::Type"* %27
  %30 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %29, i64 0, i32 4
  %31 = load i32, i32* %30, align 4
  %32 = icmp ult i32 %31, 3
  br i1 %32, label %37, label %33

33:                                               ; preds = %25
  %34 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %20, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = icmp eq i32 %35, 6
  br i1 %36, label %37, label %73

37:                                               ; preds = %33, %25
  br i1 %28, label %43, label %38

38:                                               ; preds = %37, %38
  %39 = phi %"class.SkSL::Type"* [ %41, %38 ], [ %27, %37 ]
  %40 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %39, i64 0, i32 6
  %41 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %40, align 8
  %42 = icmp eq %"class.SkSL::Type"* %41, null
  br i1 %42, label %43, label %38

43:                                               ; preds = %38, %37
  %44 = phi %"class.SkSL::Type"* [ %20, %37 ], [ %39, %38 ]
  %45 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %44, i64 0, i32 16
  %46 = load i8, i8* %45, align 8, !range !2
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %48, label %73

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 1
  %50 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %49, align 8
  %51 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %50, i64 0, i32 1, i32 0, i32 0, i32 0
  %52 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %51, align 8
  %53 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %52, i64 0, i32 1, i32 3
  %54 = load i8, i8* %53, align 1, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %73

56:                                               ; preds = %48
  %57 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %58 = load i32, i32* %57, align 8
  %59 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %60 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %60) #14
  store i32 196679, i32* %16, align 4
  %61 = bitcast %"class.SkSL::OutputStream"* %59 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %62 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %62, i64 3
  %64 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %63, align 8
  call void %64(%"class.SkSL::OutputStream"* %59, i8* nonnull %60, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %60) #14
  %65 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %65) #14
  store i32 %58, i32* %18, align 4
  %66 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %61, align 8
  %67 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %66, i64 3
  %68 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %67, align 8
  call void %68(%"class.SkSL::OutputStream"* %59, i8* nonnull %65, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %65) #14
  %69 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %69) #14
  store i32 0, i32* %17, align 4
  %70 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %61, align 8
  %71 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %70, i64 3
  %72 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %71, align 8
  call void %72(%"class.SkSL::OutputStream"* %59, i8* nonnull %69, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %69) #14
  br label %73

73:                                               ; preds = %23, %33, %43, %48, %56
  %74 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %75 = load i32, i32* %74, align 8
  %76 = add i32 %75, 1
  store i32 %76, i32* %74, align 8
  %77 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %78 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %20, %"class.SkSL::MemoryLayout"* dereferenceable(4) %77) #14
  %79 = getelementptr inbounds %"class.SkSL::PrefixExpression", %"class.SkSL::PrefixExpression"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %80 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %79, align 8
  %81 = call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %80, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %82 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %20, i64 0, i32 3
  %83 = load i32, i32* %82, align 8
  switch i32 %83, label %229 [
    i32 8, label %84
    i32 11, label %84
    i32 4, label %84
    i32 1, label %109
  ]

84:                                               ; preds = %73, %73, %73
  %85 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %20, i64 0, i32 6
  %86 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %85, align 8
  %87 = icmp eq %"class.SkSL::Type"* %86, null
  %88 = select i1 %87, %"class.SkSL::Type"* %20, %"class.SkSL::Type"* %86
  %89 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %88, i64 0, i32 4
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %106

92:                                               ; preds = %84
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 127, i32 4, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %93 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %93) #14
  store i32 %78, i32* %15, align 4
  %94 = bitcast %"class.SkSL::OutputStream"* %2 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %95 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %94, align 8
  %96 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %95, i64 3
  %97 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %96, align 8
  call void %97(%"class.SkSL::OutputStream"* %2, i8* nonnull %93, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %93) #14
  %98 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %98) #14
  store i32 %75, i32* %14, align 4
  %99 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %94, align 8
  %100 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %99, i64 3
  %101 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %100, align 8
  call void %101(%"class.SkSL::OutputStream"* %2, i8* nonnull %98, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %98) #14
  %102 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %102) #14
  store i32 %81, i32* %13, align 4
  %103 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %94, align 8
  %104 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %103, i64 3
  %105 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %104, align 8
  call void %105(%"class.SkSL::OutputStream"* %2, i8* nonnull %102, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %102) #14
  br label %229

106:                                              ; preds = %84
  switch i32 %83, label %229 [
    i32 11, label %107
    i32 8, label %107
  ]

107:                                              ; preds = %106, %106
  %108 = icmp eq i32 %90, 1
  br i1 %108, label %109, label %229

109:                                              ; preds = %73, %107
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 126, i32 4, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %110 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %110) #14
  store i32 %78, i32* %12, align 4
  %111 = bitcast %"class.SkSL::OutputStream"* %2 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %112 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %111, align 8
  %113 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %112, i64 3
  %114 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %113, align 8
  call void %114(%"class.SkSL::OutputStream"* %2, i8* nonnull %110, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %110) #14
  %115 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %115) #14
  store i32 %75, i32* %11, align 4
  %116 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %111, align 8
  %117 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %116, i64 3
  %118 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %117, align 8
  call void %118(%"class.SkSL::OutputStream"* %2, i8* nonnull %115, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %115) #14
  %119 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %119) #14
  store i32 %81, i32* %10, align 4
  %120 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %111, align 8
  %121 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %120, i64 3
  %122 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %121, align 8
  call void %122(%"class.SkSL::OutputStream"* %2, i8* nonnull %119, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %119) #14
  br label %229

123:                                              ; preds = %3
  %124 = getelementptr inbounds %"class.SkSL::PrefixExpression", %"class.SkSL::PrefixExpression"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %125 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %124, align 8
  %126 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %125, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  br label %229

127:                                              ; preds = %3
  %128 = getelementptr inbounds %"class.SkSL::PrefixExpression", %"class.SkSL::PrefixExpression"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %129 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %128, align 8
  %130 = tail call %"class.SkSL::SPIRVCodeGenerator::LValue"* @_ZN4SkSL18SPIRVCodeGenerator9getLValueERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %129, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %131 = tail call fastcc %"class.SkSL::Expression"* @_ZN4SkSLL16create_literal_1ERKNS_7ContextERKNS_4TypeE(%"class.SkSL::Type"* dereferenceable(184) %20)
  %132 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %131, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %133 = icmp eq %"class.SkSL::Expression"* %131, null
  br i1 %133, label %139, label %134

134:                                              ; preds = %127
  %135 = bitcast %"class.SkSL::Expression"* %131 to void (%"class.SkSL::Expression"*)***
  %136 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %135, align 8
  %137 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %136, i64 1
  %138 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %137, align 8
  tail call void %138(%"class.SkSL::Expression"* nonnull %131) #14
  br label %139

139:                                              ; preds = %127, %134
  %140 = bitcast %"class.SkSL::SPIRVCodeGenerator::LValue"* %130 to i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)***
  %141 = load i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)**, i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)*** %140, align 8
  %142 = getelementptr inbounds i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)*, i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)** %141, i64 5
  %143 = load i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)*, i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)** %142, align 8
  %144 = tail call i32 %143(%"class.SkSL::SPIRVCodeGenerator::LValue"* %130, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %145 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator20writeBinaryOperationERKNS_4TypeES3_jj6SpvOp_S4_S4_S4_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %20, %"class.SkSL::Type"* dereferenceable(184) %20, i32 %144, i32 %132, i32 129, i32 128, i32 128, i32 1, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %146 = bitcast %"class.SkSL::SPIRVCodeGenerator::LValue"* %130 to void (%"class.SkSL::SPIRVCodeGenerator::LValue"*, i32, %"class.SkSL::OutputStream"*)***
  %147 = load void (%"class.SkSL::SPIRVCodeGenerator::LValue"*, i32, %"class.SkSL::OutputStream"*)**, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*, i32, %"class.SkSL::OutputStream"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.SkSL::SPIRVCodeGenerator::LValue"*, i32, %"class.SkSL::OutputStream"*)*, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*, i32, %"class.SkSL::OutputStream"*)** %147, i64 6
  %149 = load void (%"class.SkSL::SPIRVCodeGenerator::LValue"*, i32, %"class.SkSL::OutputStream"*)*, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*, i32, %"class.SkSL::OutputStream"*)** %148, align 8
  tail call void %149(%"class.SkSL::SPIRVCodeGenerator::LValue"* %130, i32 %145, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %150 = icmp eq %"class.SkSL::SPIRVCodeGenerator::LValue"* %130, null
  br i1 %150, label %229, label %151

151:                                              ; preds = %139
  %152 = bitcast %"class.SkSL::SPIRVCodeGenerator::LValue"* %130 to void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)***
  %153 = load void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)**, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*** %152, align 8
  %154 = getelementptr inbounds void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)** %153, i64 1
  %155 = load void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)** %154, align 8
  tail call void %155(%"class.SkSL::SPIRVCodeGenerator::LValue"* nonnull %130) #14
  br label %229

156:                                              ; preds = %3
  %157 = getelementptr inbounds %"class.SkSL::PrefixExpression", %"class.SkSL::PrefixExpression"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %158 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %157, align 8
  %159 = tail call %"class.SkSL::SPIRVCodeGenerator::LValue"* @_ZN4SkSL18SPIRVCodeGenerator9getLValueERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %158, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %160 = tail call fastcc %"class.SkSL::Expression"* @_ZN4SkSLL16create_literal_1ERKNS_7ContextERKNS_4TypeE(%"class.SkSL::Type"* dereferenceable(184) %20)
  %161 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %160, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %162 = icmp eq %"class.SkSL::Expression"* %160, null
  br i1 %162, label %168, label %163

163:                                              ; preds = %156
  %164 = bitcast %"class.SkSL::Expression"* %160 to void (%"class.SkSL::Expression"*)***
  %165 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %164, align 8
  %166 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %165, i64 1
  %167 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %166, align 8
  tail call void %167(%"class.SkSL::Expression"* nonnull %160) #14
  br label %168

168:                                              ; preds = %156, %163
  %169 = bitcast %"class.SkSL::SPIRVCodeGenerator::LValue"* %159 to i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)***
  %170 = load i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)**, i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)*** %169, align 8
  %171 = getelementptr inbounds i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)*, i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)** %170, i64 5
  %172 = load i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)*, i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)** %171, align 8
  %173 = tail call i32 %172(%"class.SkSL::SPIRVCodeGenerator::LValue"* %159, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %174 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator20writeBinaryOperationERKNS_4TypeES3_jj6SpvOp_S4_S4_S4_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %20, %"class.SkSL::Type"* dereferenceable(184) %20, i32 %173, i32 %161, i32 131, i32 130, i32 130, i32 1, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %175 = bitcast %"class.SkSL::SPIRVCodeGenerator::LValue"* %159 to void (%"class.SkSL::SPIRVCodeGenerator::LValue"*, i32, %"class.SkSL::OutputStream"*)***
  %176 = load void (%"class.SkSL::SPIRVCodeGenerator::LValue"*, i32, %"class.SkSL::OutputStream"*)**, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*, i32, %"class.SkSL::OutputStream"*)*** %175, align 8
  %177 = getelementptr inbounds void (%"class.SkSL::SPIRVCodeGenerator::LValue"*, i32, %"class.SkSL::OutputStream"*)*, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*, i32, %"class.SkSL::OutputStream"*)** %176, i64 6
  %178 = load void (%"class.SkSL::SPIRVCodeGenerator::LValue"*, i32, %"class.SkSL::OutputStream"*)*, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*, i32, %"class.SkSL::OutputStream"*)** %177, align 8
  tail call void %178(%"class.SkSL::SPIRVCodeGenerator::LValue"* %159, i32 %174, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %179 = icmp eq %"class.SkSL::SPIRVCodeGenerator::LValue"* %159, null
  br i1 %179, label %229, label %180

180:                                              ; preds = %168
  %181 = bitcast %"class.SkSL::SPIRVCodeGenerator::LValue"* %159 to void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)***
  %182 = load void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)**, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*** %181, align 8
  %183 = getelementptr inbounds void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)** %182, i64 1
  %184 = load void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)** %183, align 8
  tail call void %184(%"class.SkSL::SPIRVCodeGenerator::LValue"* nonnull %159) #14
  br label %229

185:                                              ; preds = %3
  %186 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %187 = load i32, i32* %186, align 8
  %188 = add i32 %187, 1
  store i32 %188, i32* %186, align 8
  %189 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %190 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %20, %"class.SkSL::MemoryLayout"* dereferenceable(4) %189) #14
  %191 = getelementptr inbounds %"class.SkSL::PrefixExpression", %"class.SkSL::PrefixExpression"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %192 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %191, align 8
  %193 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %192, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  tail call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 168, i32 4, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %194 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %194) #14
  store i32 %190, i32* %9, align 4
  %195 = bitcast %"class.SkSL::OutputStream"* %2 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %196 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %195, align 8
  %197 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %196, i64 3
  %198 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %197, align 8
  call void %198(%"class.SkSL::OutputStream"* %2, i8* nonnull %194, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %194) #14
  %199 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %199) #14
  store i32 %187, i32* %8, align 4
  %200 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %195, align 8
  %201 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %200, i64 3
  %202 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %201, align 8
  call void %202(%"class.SkSL::OutputStream"* %2, i8* nonnull %199, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %199) #14
  %203 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %203) #14
  store i32 %193, i32* %7, align 4
  %204 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %195, align 8
  %205 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %204, i64 3
  %206 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %205, align 8
  call void %206(%"class.SkSL::OutputStream"* %2, i8* nonnull %203, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %203) #14
  br label %229

207:                                              ; preds = %3
  %208 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %209 = load i32, i32* %208, align 8
  %210 = add i32 %209, 1
  store i32 %210, i32* %208, align 8
  %211 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %212 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %20, %"class.SkSL::MemoryLayout"* dereferenceable(4) %211) #14
  %213 = getelementptr inbounds %"class.SkSL::PrefixExpression", %"class.SkSL::PrefixExpression"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %214 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %213, align 8
  %215 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %214, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  tail call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 200, i32 4, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %216 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %216) #14
  store i32 %212, i32* %6, align 4
  %217 = bitcast %"class.SkSL::OutputStream"* %2 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %218 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %217, align 8
  %219 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %218, i64 3
  %220 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %219, align 8
  call void %220(%"class.SkSL::OutputStream"* %2, i8* nonnull %216, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %216) #14
  %221 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %221) #14
  store i32 %209, i32* %5, align 4
  %222 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %217, align 8
  %223 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %222, i64 3
  %224 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %223, align 8
  call void %224(%"class.SkSL::OutputStream"* %2, i8* nonnull %221, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %221) #14
  %225 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %225) #14
  store i32 %215, i32* %4, align 4
  %226 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %217, align 8
  %227 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %226, i64 3
  %228 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %227, align 8
  call void %228(%"class.SkSL::OutputStream"* %2, i8* nonnull %225, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %225) #14
  br label %229

229:                                              ; preds = %3, %73, %106, %180, %168, %151, %139, %92, %107, %109, %207, %185, %123
  %230 = phi i32 [ %209, %207 ], [ %187, %185 ], [ %126, %123 ], [ %75, %109 ], [ %75, %107 ], [ %75, %92 ], [ %145, %139 ], [ %145, %151 ], [ %174, %168 ], [ %174, %180 ], [ %75, %106 ], [ %75, %73 ], [ -1, %3 ]
  ret i32 %230
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator22writePostfixExpressionERKNS_17PostfixExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::PostfixExpression"* nocapture readonly dereferenceable(40), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.SkSL::PostfixExpression", %"class.SkSL::PostfixExpression"* %1, i64 0, i32 0, i32 1
  %5 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::PostfixExpression", %"class.SkSL::PostfixExpression"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %6, align 8
  %8 = tail call %"class.SkSL::SPIRVCodeGenerator::LValue"* @_ZN4SkSL18SPIRVCodeGenerator9getLValueERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %7, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %9 = bitcast %"class.SkSL::SPIRVCodeGenerator::LValue"* %8 to i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)***
  %10 = load i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)**, i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)*** %9, align 8
  %11 = getelementptr inbounds i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)*, i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)** %10, i64 5
  %12 = load i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)*, i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)** %11, align 8
  %13 = tail call i32 %12(%"class.SkSL::SPIRVCodeGenerator::LValue"* %8, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %14 = tail call fastcc %"class.SkSL::Expression"* @_ZN4SkSLL16create_literal_1ERKNS_7ContextERKNS_4TypeE(%"class.SkSL::Type"* dereferenceable(184) %5)
  %15 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %14, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %16 = icmp eq %"class.SkSL::Expression"* %14, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %3
  %18 = bitcast %"class.SkSL::Expression"* %14 to void (%"class.SkSL::Expression"*)***
  %19 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %19, i64 1
  %21 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %20, align 8
  tail call void %21(%"class.SkSL::Expression"* nonnull %14) #14
  br label %22

22:                                               ; preds = %3, %17
  %23 = getelementptr inbounds %"class.SkSL::PostfixExpression", %"class.SkSL::PostfixExpression"* %1, i64 0, i32 2, i32 0
  %24 = load i32, i32* %23, align 8
  switch i32 %24, label %37 [
    i32 44, label %25
    i32 45, label %31
  ]

25:                                               ; preds = %22
  %26 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator20writeBinaryOperationERKNS_4TypeES3_jj6SpvOp_S4_S4_S4_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %5, %"class.SkSL::Type"* dereferenceable(184) %5, i32 %13, i32 %15, i32 129, i32 128, i32 128, i32 1, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %27 = bitcast %"class.SkSL::SPIRVCodeGenerator::LValue"* %8 to void (%"class.SkSL::SPIRVCodeGenerator::LValue"*, i32, %"class.SkSL::OutputStream"*)***
  %28 = load void (%"class.SkSL::SPIRVCodeGenerator::LValue"*, i32, %"class.SkSL::OutputStream"*)**, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*, i32, %"class.SkSL::OutputStream"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.SkSL::SPIRVCodeGenerator::LValue"*, i32, %"class.SkSL::OutputStream"*)*, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*, i32, %"class.SkSL::OutputStream"*)** %28, i64 6
  %30 = load void (%"class.SkSL::SPIRVCodeGenerator::LValue"*, i32, %"class.SkSL::OutputStream"*)*, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*, i32, %"class.SkSL::OutputStream"*)** %29, align 8
  tail call void %30(%"class.SkSL::SPIRVCodeGenerator::LValue"* %8, i32 %26, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  br label %37

31:                                               ; preds = %22
  %32 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator20writeBinaryOperationERKNS_4TypeES3_jj6SpvOp_S4_S4_S4_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %5, %"class.SkSL::Type"* dereferenceable(184) %5, i32 %13, i32 %15, i32 131, i32 130, i32 130, i32 1, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %33 = bitcast %"class.SkSL::SPIRVCodeGenerator::LValue"* %8 to void (%"class.SkSL::SPIRVCodeGenerator::LValue"*, i32, %"class.SkSL::OutputStream"*)***
  %34 = load void (%"class.SkSL::SPIRVCodeGenerator::LValue"*, i32, %"class.SkSL::OutputStream"*)**, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*, i32, %"class.SkSL::OutputStream"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.SkSL::SPIRVCodeGenerator::LValue"*, i32, %"class.SkSL::OutputStream"*)*, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*, i32, %"class.SkSL::OutputStream"*)** %34, i64 6
  %36 = load void (%"class.SkSL::SPIRVCodeGenerator::LValue"*, i32, %"class.SkSL::OutputStream"*)*, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*, i32, %"class.SkSL::OutputStream"*)** %35, align 8
  tail call void %36(%"class.SkSL::SPIRVCodeGenerator::LValue"* %8, i32 %32, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  br label %37

37:                                               ; preds = %22, %31, %25
  %38 = phi i32 [ %13, %31 ], [ %13, %25 ], [ -1, %22 ]
  %39 = icmp eq %"class.SkSL::SPIRVCodeGenerator::LValue"* %8, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %37
  %41 = bitcast %"class.SkSL::SPIRVCodeGenerator::LValue"* %8 to void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)***
  %42 = load void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)**, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)** %42, i64 1
  %44 = load void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)** %43, align 8
  tail call void %44(%"class.SkSL::SPIRVCodeGenerator::LValue"* nonnull %8) #14
  br label %45

45:                                               ; preds = %37, %40
  ret i32 %38
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator12writeSwizzleERKNS_7SwizzleERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, %"struct.SkSL::Swizzle"* nocapture readonly dereferenceable(56), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = getelementptr inbounds %"struct.SkSL::Swizzle", %"struct.SkSL::Swizzle"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %17 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %16, align 8
  %18 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %17, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %19 = getelementptr inbounds %"struct.SkSL::Swizzle", %"struct.SkSL::Swizzle"* %1, i64 0, i32 0, i32 1
  %20 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %19, align 8
  %21 = icmp eq %"class.SkSL::Type"* %20, null
  br i1 %21, label %70, label %22

22:                                               ; preds = %3
  %23 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %20, i64 0, i32 6
  %24 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %23, align 8
  %25 = icmp eq %"class.SkSL::Type"* %24, null
  %26 = select i1 %25, %"class.SkSL::Type"* %20, %"class.SkSL::Type"* %24
  %27 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %26, i64 0, i32 4
  %28 = load i32, i32* %27, align 4
  %29 = icmp ult i32 %28, 3
  br i1 %29, label %34, label %30

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %20, i64 0, i32 3
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %32, 6
  br i1 %33, label %34, label %70

34:                                               ; preds = %30, %22
  br i1 %25, label %40, label %35

35:                                               ; preds = %34, %35
  %36 = phi %"class.SkSL::Type"* [ %38, %35 ], [ %24, %34 ]
  %37 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %36, i64 0, i32 6
  %38 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %37, align 8
  %39 = icmp eq %"class.SkSL::Type"* %38, null
  br i1 %39, label %40, label %35

40:                                               ; preds = %35, %34
  %41 = phi %"class.SkSL::Type"* [ %20, %34 ], [ %36, %35 ]
  %42 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %41, i64 0, i32 16
  %43 = load i8, i8* %42, align 8, !range !2
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %45, label %70

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 1
  %47 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %46, align 8
  %48 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %47, i64 0, i32 1, i32 0, i32 0, i32 0
  %49 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %48, align 8
  %50 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %49, i64 0, i32 1, i32 3
  %51 = load i8, i8* %50, align 1, !range !2
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %53, label %70

53:                                               ; preds = %45
  %54 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %55 = load i32, i32* %54, align 8
  %56 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %57 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %57) #14
  store i32 196679, i32* %13, align 4
  %58 = bitcast %"class.SkSL::OutputStream"* %56 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %59 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %59, i64 3
  %61 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %60, align 8
  call void %61(%"class.SkSL::OutputStream"* %56, i8* nonnull %57, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %57) #14
  %62 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %62) #14
  store i32 %55, i32* %15, align 4
  %63 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %58, align 8
  %64 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %63, i64 3
  %65 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %64, align 8
  call void %65(%"class.SkSL::OutputStream"* %56, i8* nonnull %62, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %62) #14
  %66 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %66) #14
  store i32 0, i32* %14, align 4
  %67 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %58, align 8
  %68 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %67, i64 3
  %69 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %68, align 8
  call void %69(%"class.SkSL::OutputStream"* %56, i8* nonnull %66, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %66) #14
  br label %70

70:                                               ; preds = %3, %30, %40, %45, %53
  %71 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %72 = load i32, i32* %71, align 8
  %73 = add i32 %72, 1
  store i32 %73, i32* %71, align 8
  %74 = getelementptr inbounds %"struct.SkSL::Swizzle", %"struct.SkSL::Swizzle"* %1, i64 0, i32 2, i32 0, i32 0, i64 8
  %75 = getelementptr inbounds %"struct.SkSL::Swizzle", %"struct.SkSL::Swizzle"* %1, i64 0, i32 2, i32 0, i32 0, i64 16
  %76 = bitcast i8* %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = lshr i64 %77, 1
  %79 = and i64 %78, 2147483647
  %80 = icmp eq i64 %79, 1
  br i1 %80, label %81, label %106

81:                                               ; preds = %70
  %82 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %19, align 8
  %83 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %84 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %82, %"class.SkSL::MemoryLayout"* dereferenceable(4) %83) #14
  %85 = bitcast i8* %74 to i8**
  %86 = load i8*, i8** %85, align 8
  %87 = load i8, i8* %86, align 1
  %88 = sext i8 %87 to i32
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 81, i32 5, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %89 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %89) #14
  store i32 %84, i32* %12, align 4
  %90 = bitcast %"class.SkSL::OutputStream"* %2 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %91 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %90, align 8
  %92 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %91, i64 3
  %93 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %92, align 8
  call void %93(%"class.SkSL::OutputStream"* %2, i8* nonnull %89, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %89) #14
  %94 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %94) #14
  store i32 %72, i32* %11, align 4
  %95 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %90, align 8
  %96 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %95, i64 3
  %97 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %96, align 8
  call void %97(%"class.SkSL::OutputStream"* %2, i8* nonnull %94, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %94) #14
  %98 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %98) #14
  store i32 %18, i32* %10, align 4
  %99 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %90, align 8
  %100 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %99, i64 3
  %101 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %100, align 8
  call void %101(%"class.SkSL::OutputStream"* %2, i8* nonnull %98, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %98) #14
  %102 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %102) #14
  store i32 %88, i32* %9, align 4
  %103 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %90, align 8
  %104 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %103, i64 3
  %105 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %104, align 8
  call void %105(%"class.SkSL::OutputStream"* %2, i8* nonnull %102, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %102) #14
  br label %149

106:                                              ; preds = %70
  %107 = trunc i64 %79 to i32
  %108 = add nuw nsw i32 %107, 5
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 79, i32 %108, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %109 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %19, align 8
  %110 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %111 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %109, %"class.SkSL::MemoryLayout"* dereferenceable(4) %110) #14
  %112 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %112)
  store i32 %111, i32* %8, align 4
  %113 = bitcast %"class.SkSL::OutputStream"* %2 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %114 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %113, align 8
  %115 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %114, i64 3
  %116 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %115, align 8
  call void %116(%"class.SkSL::OutputStream"* %2, i8* nonnull %112, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %112)
  %117 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %117)
  store i32 %72, i32* %7, align 4
  %118 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %113, align 8
  %119 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %118, i64 3
  %120 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %119, align 8
  call void %120(%"class.SkSL::OutputStream"* %2, i8* nonnull %117, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %117)
  %121 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %121)
  store i32 %18, i32* %6, align 4
  %122 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %113, align 8
  %123 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %122, i64 3
  %124 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %123, align 8
  call void %124(%"class.SkSL::OutputStream"* %2, i8* nonnull %121, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %121)
  %125 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %125)
  store i32 %18, i32* %5, align 4
  %126 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %113, align 8
  %127 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %126, i64 3
  %128 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %127, align 8
  call void %128(%"class.SkSL::OutputStream"* %2, i8* nonnull %125, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %125)
  %129 = bitcast i8* %74 to i8**
  %130 = load i8*, i8** %129, align 8
  %131 = icmp eq i8* %130, null
  br i1 %131, label %149, label %132

132:                                              ; preds = %106
  %133 = load i64, i64* %76, align 8
  %134 = lshr i64 %133, 1
  %135 = and i64 %134, 2147483647
  %136 = getelementptr inbounds i8, i8* %130, i64 %135
  %137 = icmp eq i64 %135, 0
  br i1 %137, label %149, label %138

138:                                              ; preds = %132
  %139 = bitcast i32* %4 to i8*
  br label %140

140:                                              ; preds = %138, %140
  %141 = phi i8* [ %130, %138 ], [ %147, %140 ]
  %142 = load i8, i8* %141, align 1
  %143 = sext i8 %142 to i32
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %139)
  store i32 %143, i32* %4, align 4
  %144 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %113, align 8
  %145 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %144, i64 3
  %146 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %145, align 8
  call void %146(%"class.SkSL::OutputStream"* %2, i8* nonnull %139, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %139)
  %147 = getelementptr inbounds i8, i8* %141, i64 1
  %148 = icmp eq i8* %147, %136
  br i1 %148, label %149, label %140

149:                                              ; preds = %140, %106, %132, %81
  ret i32 %72
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator22writeVariableReferenceERKNS_17VariableReferenceERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::VariableReference"* dereferenceable(40), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca %"class.std::__1::unique_ptr.305", align 8
  %30 = alloca [15 x i8], align 8
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca %"class.std::__1::vector.19", align 8
  %40 = alloca %"class.SkSL::String", align 8
  %41 = alloca %"class.std::__1::vector.19", align 16
  %42 = alloca %"struct.SkSL::Modifiers", align 8
  %43 = alloca %"class.SkSL::InterfaceBlock", align 8
  %44 = alloca %"class.SkSL::String", align 8
  %45 = alloca %"class.SkSL::String", align 8
  %46 = alloca %"class.SkSL::Literal", align 8
  %47 = alloca %"class.SkSL::Literal.430", align 8
  %48 = getelementptr inbounds %"class.SkSL::VariableReference", %"class.SkSL::VariableReference"* %1, i64 0, i32 0
  %49 = tail call %"class.SkSL::SPIRVCodeGenerator::LValue"* @_ZN4SkSL18SPIRVCodeGenerator9getLValueERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %48, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %50 = bitcast %"class.SkSL::SPIRVCodeGenerator::LValue"* %49 to i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)***
  %51 = load i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)**, i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)*** %50, align 8
  %52 = getelementptr inbounds i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)*, i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)** %51, i64 5
  %53 = load i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)*, i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)** %52, align 8
  %54 = tail call i32 %53(%"class.SkSL::SPIRVCodeGenerator::LValue"* %49, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %55 = icmp eq %"class.SkSL::SPIRVCodeGenerator::LValue"* %49, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %3
  %57 = bitcast %"class.SkSL::SPIRVCodeGenerator::LValue"* %49 to void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)***
  %58 = load void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)**, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)** %58, i64 1
  %60 = load void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)** %59, align 8
  tail call void %60(%"class.SkSL::SPIRVCodeGenerator::LValue"* nonnull %49) #14
  br label %61

61:                                               ; preds = %3, %56
  %62 = getelementptr inbounds %"class.SkSL::VariableReference", %"class.SkSL::VariableReference"* %1, i64 0, i32 1
  %63 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %62, align 8
  %64 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %63, i64 0, i32 2
  %65 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %64, align 8
  %66 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %65, i64 0, i32 0, i32 6
  %67 = load i32, i32* %66, align 8
  switch i32 %67, label %717 [
    i32 15, label %68
    i32 17, label %686
  ]

68:                                               ; preds = %61
  %69 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 1
  %70 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %69, align 8
  %71 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %70, i64 0, i32 1, i32 0, i32 0, i32 0
  %72 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %71, align 8
  %73 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %72, i64 0, i32 1, i32 0
  %74 = load i8, i8* %73, align 8, !range !2
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %717, label %76

76:                                               ; preds = %68
  %77 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %78 = load i32, i32* %77, align 8
  %79 = add i32 %78, 1
  store i32 %79, i32* %77, align 8
  %80 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 1
  %81 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %80, align 8
  %82 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %82, align 8
  %84 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %85 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %83, %"class.SkSL::MemoryLayout"* dereferenceable(4) %84) #14
  tail call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 81, i32 5, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %86 = bitcast i32* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %86) #14
  store i32 %85, i32* %38, align 4
  %87 = bitcast %"class.SkSL::OutputStream"* %2 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %88 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %87, align 8
  %89 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %88, i64 3
  %90 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %89, align 8
  call void %90(%"class.SkSL::OutputStream"* %2, i8* nonnull %86, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %86) #14
  %91 = bitcast i32* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %91) #14
  store i32 %78, i32* %37, align 4
  %92 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %87, align 8
  %93 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %92, i64 3
  %94 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %93, align 8
  call void %94(%"class.SkSL::OutputStream"* %2, i8* nonnull %91, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %91) #14
  %95 = bitcast i32* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %95) #14
  store i32 %54, i32* %36, align 4
  %96 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %87, align 8
  %97 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %96, i64 3
  %98 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %97, align 8
  call void %98(%"class.SkSL::OutputStream"* %2, i8* nonnull %95, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %95) #14
  %99 = bitcast i32* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %99) #14
  store i32 0, i32* %35, align 4
  %100 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %87, align 8
  %101 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %100, i64 3
  %102 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %101, align 8
  call void %102(%"class.SkSL::OutputStream"* %2, i8* nonnull %99, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %99) #14
  %103 = load i32, i32* %77, align 8
  %104 = add i32 %103, 1
  store i32 %104, i32* %77, align 8
  %105 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %80, align 8
  %106 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %105, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %106, align 8
  %108 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %107, %"class.SkSL::MemoryLayout"* dereferenceable(4) %84) #14
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 81, i32 5, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %109 = bitcast i32* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %109) #14
  store i32 %108, i32* %34, align 4
  %110 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %87, align 8
  %111 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %110, i64 3
  %112 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %111, align 8
  call void %112(%"class.SkSL::OutputStream"* %2, i8* nonnull %109, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %109) #14
  %113 = bitcast i32* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %113) #14
  store i32 %103, i32* %33, align 4
  %114 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %87, align 8
  %115 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %114, i64 3
  %116 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %115, align 8
  call void %116(%"class.SkSL::OutputStream"* %2, i8* nonnull %113, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %113) #14
  %117 = bitcast i32* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %117) #14
  store i32 %54, i32* %32, align 4
  %118 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %87, align 8
  %119 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %118, i64 3
  %120 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %119, align 8
  call void %120(%"class.SkSL::OutputStream"* %2, i8* nonnull %117, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %117) #14
  %121 = bitcast i32* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %121) #14
  store i32 1, i32* %31, align 4
  %122 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %87, align 8
  %123 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %122, i64 3
  %124 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %123, align 8
  call void %124(%"class.SkSL::OutputStream"* %2, i8* nonnull %121, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %121) #14
  %125 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %69, align 8
  %126 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %125, i64 0, i32 1, i32 0, i32 0, i32 0
  %127 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %126, align 8
  %128 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %127, i64 0, i32 1, i32 0
  %129 = load i8, i8* %128, align 8, !range !2
  %130 = icmp eq i8 %129, 0
  br i1 %130, label %605, label %131

131:                                              ; preds = %76
  %132 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 29
  %133 = load i32, i32* %132, align 8
  %134 = icmp eq i32 %133, -1
  br i1 %134, label %135, label %524

135:                                              ; preds = %131
  %136 = bitcast %"class.std::__1::vector.19"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %136) #14
  %137 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %39, i64 0, i32 0, i32 0
  %138 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %39, i64 0, i32 0, i32 1
  %139 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %39, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %136, i8 0, i64 24, i1 false) #14
  %140 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %126, align 8
  %141 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %140, i64 0, i32 1, i32 5
  %142 = load i32, i32* %141, align 8
  %143 = icmp slt i32 %142, 0
  br i1 %143, label %148, label %144

144:                                              ; preds = %135
  %145 = bitcast %"class.SkSL::Context"** %80 to i64**
  %146 = load i64*, i64** %145, align 8
  %147 = load i64, i64* %146, align 8
  br label %186

148:                                              ; preds = %135
  %149 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 2
  %150 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %149, align 8
  %151 = getelementptr inbounds %"class.SkSL::VariableReference", %"class.SkSL::VariableReference"* %1, i64 0, i32 0, i32 0, i32 1
  %152 = load i32, i32* %151, align 8
  call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %150, i32 %152, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.18, i64 0, i64 0))
  %153 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %69, align 8
  %154 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %153, i64 0, i32 1, i32 0, i32 0, i32 0
  %155 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %154, align 8
  %156 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %155, i64 0, i32 1, i32 5
  %157 = load i32, i32* %156, align 8
  %158 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %138, align 8
  %159 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %139, align 8
  %160 = ptrtoint %"struct.SkSL::Type::Field"* %158 to i64
  %161 = ptrtoint %"struct.SkSL::Type::Field"* %159 to i64
  %162 = bitcast %"class.SkSL::Context"** %80 to i64**
  %163 = load i64*, i64** %162, align 8
  %164 = load i64, i64* %163, align 8
  %165 = icmp ult %"struct.SkSL::Type::Field"* %158, %159
  br i1 %165, label %166, label %186

166:                                              ; preds = %148
  %167 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %158, i64 0, i32 0, i32 0, i32 0
  store i32 0, i32* %167, align 8
  %168 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %158, i64 0, i32 0, i32 0, i32 1
  store i32 -1, i32* %168, align 4
  %169 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %158, i64 0, i32 0, i32 0, i32 2
  store i32 %157, i32* %169, align 8
  %170 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %158, i64 0, i32 0, i32 0, i32 3
  %171 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %158, i64 0, i32 0, i32 0, i32 9
  %172 = bitcast i32* %170 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %172, i8 -1, i64 24, i1 false)
  store i32 1, i32* %171, align 4
  %173 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %158, i64 0, i32 0, i32 0, i32 10
  store i32 -1, i32* %173, align 8
  %174 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %158, i64 0, i32 0, i32 0, i32 12, i32 0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19, i64 0, i64 0), i8** %174, align 8
  %175 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %158, i64 0, i32 0, i32 0, i32 12, i32 1
  store i64 0, i64* %175, align 8
  %176 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %158, i64 0, i32 0, i32 0, i32 13
  store i32 0, i32* %176, align 8
  %177 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %158, i64 0, i32 0, i32 1
  store i32 0, i32* %177, align 8
  %178 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %158, i64 0, i32 1, i32 0
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20, i64 0, i64 0), i8** %178, align 8
  %179 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %158, i64 0, i32 1, i32 1
  store i64 12, i64* %179, align 8
  %180 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %158, i64 0, i32 2
  %181 = bitcast %"class.SkSL::Type"** %180 to i64*
  store i64 %164, i64* %181, align 8
  %182 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %158, i64 1
  %183 = ptrtoint %"struct.SkSL::Type::Field"* %182 to i64
  %184 = bitcast %"struct.SkSL::Type::Field"** %138 to i64*
  store i64 %183, i64* %184, align 8
  %185 = bitcast %"class.std::__1::vector.19"* %39 to i64*
  br label %250

186:                                              ; preds = %144, %148
  %187 = phi i64 [ %147, %144 ], [ %164, %148 ]
  %188 = phi i32 [ %142, %144 ], [ %157, %148 ]
  %189 = phi i64 [ 0, %144 ], [ %160, %148 ]
  %190 = phi i64 [ 0, %144 ], [ %161, %148 ]
  %191 = bitcast %"struct.SkSL::Type::Field"** %138 to i64*
  %192 = bitcast %"class.std::__1::vector.19"* %39 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = sub i64 %189, %193
  %195 = sdiv exact i64 %194, 104
  %196 = add nsw i64 %195, 1
  %197 = icmp ugt i64 %196, 177372539170284150
  br i1 %197, label %198, label %200

198:                                              ; preds = %186
  %199 = bitcast %"class.std::__1::vector.19"* %39 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %199) #15
  unreachable

200:                                              ; preds = %186
  %201 = bitcast %"struct.SkSL::Type::Field"** %139 to i64*
  %202 = sub i64 %190, %193
  %203 = sdiv exact i64 %202, 104
  %204 = icmp ult i64 %203, 88686269585142075
  br i1 %204, label %205, label %210

205:                                              ; preds = %200
  %206 = shl nsw i64 %203, 1
  %207 = icmp ult i64 %206, %196
  %208 = select i1 %207, i64 %196, i64 %206
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %215, label %210

210:                                              ; preds = %205, %200
  %211 = phi i64 [ %208, %205 ], [ 177372539170284150, %200 ]
  %212 = mul i64 %211, 104
  %213 = call i8* @_Znwm(i64 %212) #16
  %214 = bitcast i8* %213 to %"struct.SkSL::Type::Field"*
  br label %215

215:                                              ; preds = %210, %205
  %216 = phi i64 [ %211, %210 ], [ 0, %205 ]
  %217 = phi %"struct.SkSL::Type::Field"* [ %214, %210 ], [ null, %205 ]
  %218 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %217, i64 %195
  %219 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %217, i64 %216
  %220 = ptrtoint %"struct.SkSL::Type::Field"* %219 to i64
  %221 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %218, i64 0, i32 0, i32 0, i32 0
  store i32 0, i32* %221, align 8
  %222 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %217, i64 %195, i32 0, i32 0, i32 1
  store i32 -1, i32* %222, align 4
  %223 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %217, i64 %195, i32 0, i32 0, i32 2
  store i32 %188, i32* %223, align 8
  %224 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %217, i64 %195, i32 0, i32 0, i32 3
  %225 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %217, i64 %195, i32 0, i32 0, i32 9
  %226 = bitcast i32* %224 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %226, i8 -1, i64 24, i1 false)
  store i32 1, i32* %225, align 4
  %227 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %217, i64 %195, i32 0, i32 0, i32 10
  store i32 -1, i32* %227, align 8
  %228 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %217, i64 %195, i32 0, i32 0, i32 12, i32 0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19, i64 0, i64 0), i8** %228, align 8
  %229 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %217, i64 %195, i32 0, i32 0, i32 12, i32 1
  store i64 0, i64* %229, align 8
  %230 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %217, i64 %195, i32 0, i32 0, i32 13
  store i32 0, i32* %230, align 8
  %231 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %217, i64 %195, i32 0, i32 1
  store i32 0, i32* %231, align 8
  %232 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %217, i64 %195, i32 1, i32 0
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20, i64 0, i64 0), i8** %232, align 8
  %233 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %217, i64 %195, i32 1, i32 1
  store i64 12, i64* %233, align 8
  %234 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %217, i64 %195, i32 2
  %235 = bitcast %"class.SkSL::Type"** %234 to i64*
  store i64 %187, i64* %235, align 8
  %236 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %218, i64 1
  %237 = ptrtoint %"struct.SkSL::Type::Field"* %236 to i64
  %238 = sdiv exact i64 %194, -104
  %239 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %218, i64 %238
  %240 = ptrtoint %"struct.SkSL::Type::Field"* %239 to i64
  %241 = icmp sgt i64 %194, 0
  br i1 %241, label %242, label %245

242:                                              ; preds = %215
  %243 = bitcast %"struct.SkSL::Type::Field"* %239 to i8*
  %244 = inttoptr i64 %193 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %243, i8* align 8 %244, i64 %194, i1 false) #14
  br label %245

245:                                              ; preds = %242, %215
  store i64 %240, i64* %192, align 8
  store i64 %237, i64* %191, align 8
  store i64 %220, i64* %201, align 8
  %246 = icmp eq i64 %193, 0
  br i1 %246, label %250, label %247

247:                                              ; preds = %245
  %248 = inttoptr i64 %193 to i8*
  call void @_ZdlPv(i8* %248) #16
  %249 = load i64, i64* %191, align 8
  br label %250

250:                                              ; preds = %247, %245, %166
  %251 = phi i64* [ %192, %247 ], [ %192, %245 ], [ %185, %166 ]
  %252 = phi i64* [ %191, %247 ], [ %191, %245 ], [ %184, %166 ]
  %253 = phi i64 [ %249, %247 ], [ %237, %245 ], [ %183, %166 ]
  %254 = call i8* @_Znwm(i64 32) #16
  %255 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %254, i8** %255, align 8
  %256 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %257 = bitcast i64* %256 to <2 x i64>*
  store <2 x i64> <i64 23, i64 -9223372036854775776>, <2 x i64>* %257, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %254, i8* align 1 getelementptr inbounds ([24 x i8], [24 x i8]* @.str.21, i64 0, i64 0), i64 23, i1 false) #14
  %258 = getelementptr inbounds i8, i8* %254, i64 23
  store i8 0, i8* %258, align 1
  %259 = bitcast %"class.std::__1::vector.19"* %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %259, i8 0, i64 24, i1 false) #14
  %260 = load i64, i64* %251, align 8
  %261 = sub i64 %253, %260
  %262 = sdiv exact i64 %261, 104
  %263 = icmp eq i64 %261, 0
  %264 = ptrtoint i8* %254 to i64
  br i1 %263, label %287, label %265

265:                                              ; preds = %250
  %266 = icmp ugt i64 %262, 177372539170284150
  br i1 %266, label %267, label %269

267:                                              ; preds = %265
  %268 = bitcast %"class.std::__1::vector.19"* %41 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %268) #15
  unreachable

269:                                              ; preds = %265
  %270 = call i8* @_Znwm(i64 %261) #16
  %271 = bitcast i8* %270 to %"struct.SkSL::Type::Field"*
  %272 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %41, i64 0, i32 0, i32 1
  %273 = bitcast %"struct.SkSL::Type::Field"** %272 to i8**
  store i8* %270, i8** %273, align 8
  %274 = bitcast %"class.std::__1::vector.19"* %41 to i8**
  store i8* %270, i8** %274, align 16
  %275 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %271, i64 %262
  %276 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %41, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.SkSL::Type::Field"* %275, %"struct.SkSL::Type::Field"** %276, align 16
  %277 = bitcast %"struct.SkSL::Type::Field"** %272 to i64*
  %278 = ptrtoint i8* %270 to i64
  %279 = icmp sgt i64 %261, 0
  br i1 %279, label %280, label %285

280:                                              ; preds = %269
  %281 = udiv exact i64 %261, 104
  %282 = inttoptr i64 %260 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %270, i8* align 8 %282, i64 %261, i1 false) #14
  %283 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %271, i64 %281
  %284 = ptrtoint %"struct.SkSL::Type::Field"* %283 to i64
  br label %285

285:                                              ; preds = %280, %269
  %286 = phi i64 [ %284, %280 ], [ %278, %269 ]
  store i64 %286, i64* %277, align 8
  br label %287

287:                                              ; preds = %250, %285
  %288 = getelementptr inbounds [15 x i8], [15 x i8]* %30, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %288)
  %289 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 184) #14
  %290 = bitcast i8* %289 to %"class.SkSL::Type"*
  %291 = bitcast %"class.SkSL::String"* %40 to i8*
  %292 = bitcast i64* %256 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %288, i8* align 8 %292, i64 15, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %291, i8 0, i64 24, i1 false) #14
  %293 = bitcast %"class.std::__1::vector.19"* %41 to <2 x i64>*
  %294 = load <2 x i64>, <2 x i64>* %293, align 16
  %295 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %41, i64 0, i32 0, i32 2, i32 0, i32 0
  %296 = bitcast %"struct.SkSL::Type::Field"** %295 to i64*
  %297 = load i64, i64* %296, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %259, i8 0, i64 24, i1 false) #14
  %298 = bitcast i8* %289 to i32 (...)***
  %299 = getelementptr inbounds i8, i8* %289, i64 8
  %300 = bitcast i8* %299 to i32*
  store i32 -1, i32* %300, align 8
  %301 = getelementptr inbounds i8, i8* %289, i64 12
  %302 = bitcast i8* %301 to i32*
  store i32 13, i32* %302, align 4
  %303 = getelementptr inbounds i8, i8* %289, i64 16
  %304 = bitcast i8* %303 to i8**
  %305 = getelementptr inbounds i8, i8* %289, i64 24
  %306 = bitcast i8* %305 to i64*
  %307 = getelementptr inbounds i8, i8* %289, i64 32
  %308 = bitcast i8* %307 to i64*
  store i64 0, i64* %308, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %298, align 8
  %309 = getelementptr inbounds i8, i8* %289, i64 40
  %310 = bitcast i8* %309 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.41, i64 0, i64 0), i8** %310, align 8
  %311 = getelementptr inbounds i8, i8* %289, i64 48
  %312 = bitcast i8* %311 to i64*
  store i64 %264, i64* %312, align 8
  %313 = getelementptr inbounds i8, i8* %289, i64 56
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %313, i8* nonnull align 8 %288, i64 15, i1 false) #14
  %314 = getelementptr inbounds i8, i8* %289, i64 71
  store i8 -128, i8* %314, align 1
  %315 = getelementptr inbounds i8, i8* %289, i64 72
  %316 = bitcast i8* %315 to i32*
  store i32 9, i32* %316, align 8
  %317 = getelementptr inbounds i8, i8* %289, i64 76
  %318 = bitcast i8* %317 to i32*
  store i32 4, i32* %318, align 4
  %319 = getelementptr inbounds i8, i8* %289, i64 80
  %320 = bitcast i8* %319 to i32*
  store i32 -1, i32* %320, align 8
  %321 = getelementptr inbounds i8, i8* %289, i64 88
  %322 = getelementptr inbounds i8, i8* %289, i64 120
  %323 = bitcast i8* %322 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %321, i8 0, i64 32, i1 false) #14
  store i32 -1, i32* %323, align 8
  %324 = getelementptr inbounds i8, i8* %289, i64 124
  %325 = bitcast i8* %324 to i32*
  store i32 -1, i32* %325, align 4
  %326 = getelementptr inbounds i8, i8* %289, i64 128
  %327 = bitcast i8* %326 to <2 x i64>*
  store <2 x i64> %294, <2 x i64>* %327, align 8
  %328 = getelementptr inbounds i8, i8* %289, i64 144
  %329 = bitcast i8* %328 to i64*
  store i64 %297, i64* %329, align 8
  %330 = getelementptr inbounds i8, i8* %289, i64 152
  %331 = getelementptr inbounds i8, i8* %289, i64 168
  call void @llvm.memset.p0i8.i64(i8* align 8 %330, i8 0, i64 9, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* align 8 %331, i8 0, i64 16, i1 false) #14
  %332 = bitcast i8* %313 to i64*
  %333 = load i64, i64* %332, align 8
  store i8* %254, i8** %304, align 8
  store i64 %333, i64* %306, align 8
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %288)
  %334 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %41, i64 0, i32 0, i32 0
  %335 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %334, align 16
  %336 = icmp eq %"struct.SkSL::Type::Field"* %335, null
  br i1 %336, label %342, label %337

337:                                              ; preds = %287
  %338 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %41, i64 0, i32 0, i32 1
  %339 = bitcast %"struct.SkSL::Type::Field"** %338 to i64*
  %340 = ptrtoint %"struct.SkSL::Type::Field"* %335 to i64
  store i64 %340, i64* %339, align 8
  %341 = bitcast %"struct.SkSL::Type::Field"* %335 to i8*
  call void @_ZdlPv(i8* %341) #16
  br label %342

342:                                              ; preds = %287, %337
  %343 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %69, align 8
  %344 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %343, i64 0, i32 1, i32 0, i32 0, i32 0
  %345 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %344, align 8
  %346 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %345, i64 0, i32 1, i32 6
  %347 = load i32, i32* %346, align 4
  %348 = icmp eq i32 %347, -1
  br i1 %348, label %349, label %357

349:                                              ; preds = %342
  %350 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 2
  %351 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %350, align 8
  %352 = getelementptr inbounds %"class.SkSL::VariableReference", %"class.SkSL::VariableReference"* %1, i64 0, i32 0, i32 0, i32 1
  %353 = load i32, i32* %352, align 8
  call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %351, i32 %353, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22, i64 0, i64 0))
  %354 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %69, align 8
  %355 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %354, i64 0, i32 1, i32 0, i32 0, i32 0
  %356 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %355, align 8
  br label %357

357:                                              ; preds = %349, %342
  %358 = phi %"struct.SkSL::ProgramConfig"* [ %356, %349 ], [ %345, %342 ]
  %359 = phi %"struct.SkSL::Program"* [ %354, %349 ], [ %343, %342 ]
  %360 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %358, i64 0, i32 1, i32 7
  %361 = load i32, i32* %360, align 8
  %362 = icmp eq i32 %361, -1
  br i1 %362, label %363, label %371

363:                                              ; preds = %357
  %364 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 2
  %365 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %364, align 8
  %366 = getelementptr inbounds %"class.SkSL::VariableReference", %"class.SkSL::VariableReference"* %1, i64 0, i32 0, i32 0, i32 1
  %367 = load i32, i32* %366, align 8
  call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %365, i32 %367, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.23, i64 0, i64 0))
  %368 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %69, align 8
  %369 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %368, i64 0, i32 1, i32 0, i32 0, i32 0
  %370 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %369, align 8
  br label %371

371:                                              ; preds = %363, %357
  %372 = phi %"struct.SkSL::ProgramConfig"* [ %370, %363 ], [ %358, %357 ]
  %373 = phi %"struct.SkSL::Program"* [ %368, %363 ], [ %359, %357 ]
  %374 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %372, i64 0, i32 1, i32 17
  %375 = load i8, i8* %374, align 1, !range !2
  %376 = icmp ne i8 %375, 0
  %377 = select i1 %376, i32 2, i32 0
  %378 = bitcast %"struct.SkSL::Modifiers"* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %378) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %378, i8 -86, i64 80, i1 false)
  %379 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %42, i64 0, i32 0, i32 0
  store i32 %377, i32* %379, align 8
  %380 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %42, i64 0, i32 0, i32 1
  store i32 -1, i32* %380, align 4
  %381 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %42, i64 0, i32 0, i32 2
  store i32 -1, i32* %381, align 8
  %382 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %42, i64 0, i32 0, i32 3
  store i32 %347, i32* %382, align 4
  %383 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %42, i64 0, i32 0, i32 4
  store i32 -1, i32* %383, align 8
  %384 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %42, i64 0, i32 0, i32 5
  store i32 %361, i32* %384, align 4
  %385 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %42, i64 0, i32 0, i32 6
  %386 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %42, i64 0, i32 0, i32 12, i32 0
  %387 = bitcast i32* %385 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %387, i8 -1, i64 20, i1 false)
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19, i64 0, i64 0), i8** %386, align 8
  %388 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %42, i64 0, i32 0, i32 12, i32 1
  store i64 0, i64* %388, align 8
  %389 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %42, i64 0, i32 0, i32 13
  store i32 0, i32* %389, align 8
  %390 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %42, i64 0, i32 1
  store i32 8, i32* %390, align 8
  %391 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %373, i64 0, i32 8, i32 0, i32 0, i32 0
  %392 = load %"class.SkSL::ModifiersPool"*, %"class.SkSL::ModifiersPool"** %391, align 8
  %393 = getelementptr inbounds %"class.SkSL::ModifiersPool", %"class.SkSL::ModifiersPool"* %392, i64 0, i32 0, i32 0
  %394 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %393, %"struct.SkSL::Modifiers"* nonnull dereferenceable(80) %42, %"struct.SkSL::Modifiers"* nonnull dereferenceable(80) %42) #14
  %395 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %394, 0
  %396 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %395, i64 2
  %397 = ptrtoint %"struct.std::__1::__hash_node_base"* %396 to i64
  %398 = ptrtoint i8* %289 to i64
  %399 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 64) #14
  %400 = bitcast i8* %399 to i32 (...)***
  %401 = getelementptr inbounds i8, i8* %399, i64 8
  %402 = bitcast i8* %401 to i32*
  store i32 -1, i32* %402, align 8
  %403 = getelementptr inbounds i8, i8* %399, i64 12
  %404 = bitcast i8* %403 to i32*
  store i32 15, i32* %404, align 4
  %405 = getelementptr inbounds i8, i8* %399, i64 16
  %406 = bitcast i8* %405 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint ([24 x i8]* @.str.21 to i64), i64 23>, <2 x i64>* %406, align 8
  %407 = getelementptr inbounds i8, i8* %399, i64 32
  %408 = bitcast i8* %407 to i64*
  store i64 %398, i64* %408, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL8VariableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %400, align 8
  %409 = getelementptr inbounds i8, i8* %399, i64 40
  %410 = bitcast i8* %409 to %"class.SkSL::VarDeclaration"**
  store %"class.SkSL::VarDeclaration"* null, %"class.SkSL::VarDeclaration"** %410, align 8
  %411 = getelementptr inbounds i8, i8* %399, i64 48
  %412 = bitcast i8* %411 to i64*
  store i64 %397, i64* %412, align 8
  %413 = getelementptr inbounds i8, i8* %399, i64 56
  store i8 0, i8* %413, align 8
  %414 = getelementptr inbounds i8, i8* %399, i64 57
  store i8 0, i8* %414, align 1
  %415 = ptrtoint i8* %399 to i64
  %416 = bitcast %"class.std::__1::unique_ptr.305"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %416) #14
  %417 = bitcast %"class.std::__1::unique_ptr.305"* %29 to i64*
  store i64 %415, i64* %417, align 8
  %418 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 33, i32 1, i32 0, i32 1
  %419 = load %"class.std::__1::unique_ptr.305"*, %"class.std::__1::unique_ptr.305"** %418, align 8
  %420 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 33, i32 1, i32 0, i32 2, i32 0, i32 0
  %421 = load %"class.std::__1::unique_ptr.305"*, %"class.std::__1::unique_ptr.305"** %420, align 8
  %422 = icmp ult %"class.std::__1::unique_ptr.305"* %419, %421
  br i1 %422, label %423, label %429

423:                                              ; preds = %371
  %424 = getelementptr inbounds %"class.std::__1::unique_ptr.305", %"class.std::__1::unique_ptr.305"* %29, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %424, align 8
  %425 = bitcast %"class.std::__1::unique_ptr.305"* %419 to i64*
  store i64 %415, i64* %425, align 8
  %426 = getelementptr inbounds %"class.std::__1::unique_ptr.305", %"class.std::__1::unique_ptr.305"* %419, i64 1
  %427 = ptrtoint %"class.std::__1::unique_ptr.305"* %426 to i64
  %428 = bitcast %"class.std::__1::unique_ptr.305"** %418 to i64*
  store i64 %427, i64* %428, align 8
  br label %431

429:                                              ; preds = %371
  %430 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 33, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIKN4SkSL6SymbolENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.303"* %430, %"class.std::__1::unique_ptr.305"* nonnull dereferenceable(8) %29) #14
  br label %431

431:                                              ; preds = %429, %423
  %432 = getelementptr inbounds %"class.std::__1::unique_ptr.305", %"class.std::__1::unique_ptr.305"* %29, i64 0, i32 0, i32 0, i32 0
  %433 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %432, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %432, align 8
  %434 = icmp eq %"class.SkSL::Symbol"* %433, null
  br i1 %434, label %440, label %435

435:                                              ; preds = %431
  %436 = bitcast %"class.SkSL::Symbol"* %433 to void (%"class.SkSL::Symbol"*)***
  %437 = load void (%"class.SkSL::Symbol"*)**, void (%"class.SkSL::Symbol"*)*** %436, align 8
  %438 = getelementptr inbounds void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %437, i64 1
  %439 = load void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %438, align 8
  call void %439(%"class.SkSL::Symbol"* nonnull %433) #14
  br label %440

440:                                              ; preds = %431, %435
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %416) #14
  %441 = bitcast %"class.SkSL::InterfaceBlock"* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %441) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %441, i8 -86, i64 80, i1 false)
  %442 = call i8* @_Znwm(i64 32) #16
  %443 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %442, i8** %443, align 8
  %444 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %445 = bitcast i64* %444 to <2 x i64>*
  store <2 x i64> <i64 23, i64 -9223372036854775776>, <2 x i64>* %445, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %442, i8* align 1 getelementptr inbounds ([24 x i8], [24 x i8]* @.str.21, i64 0, i64 0), i64 23, i1 false) #14
  %446 = getelementptr inbounds i8, i8* %442, i64 23
  store i8 0, i8* %446, align 1
  %447 = bitcast %"class.SkSL::String"* %45 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %448 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %447, i64 0, i32 1, i32 0
  store i8 0, i8* %448, align 1
  %449 = bitcast %"class.SkSL::String"* %45 to i8*
  store i8 0, i8* %449, align 8
  %450 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 2
  %451 = bitcast %"class.SkSL::ErrorReporter"** %450 to i64*
  %452 = load i64, i64* %451, align 8
  %453 = call i8* @_Znwm(i64 128) #16
  %454 = bitcast i8* %453 to i32 (...)***
  %455 = getelementptr inbounds i8, i8* %453, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %455, i8 0, i64 16, i1 false) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %454, align 8
  %456 = getelementptr inbounds i8, i8* %453, i64 24
  %457 = getelementptr inbounds i8, i8* %453, i64 72
  %458 = getelementptr inbounds i8, i8* %453, i64 120
  call void @llvm.memset.p0i8.i64(i8* align 8 %457, i8 0, i64 48, i1 false) #14
  %459 = bitcast i8* %458 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 8 %456, i8 0, i64 41, i1 false)
  store i64 %452, i64* %459, align 8
  %460 = ptrtoint i8* %456 to i64
  %461 = ptrtoint i8* %453 to i64
  %462 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %43, i64 0, i32 0, i32 0, i32 1
  store i32 -1, i32* %462, align 8
  %463 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %43, i64 0, i32 0, i32 0, i32 2
  store i32 5, i32* %463, align 4
  %464 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %43, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL14InterfaceBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %464, align 8
  %465 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %43, i64 0, i32 1
  %466 = bitcast %"class.SkSL::Variable"** %465 to i8**
  store i8* %399, i8** %466, align 8
  %467 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %43, i64 0, i32 2
  %468 = bitcast %"class.SkSL::String"* %467 to i8*
  %469 = bitcast %"class.SkSL::String"* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %468, i8* nonnull align 8 %469, i64 24, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %469, i8 0, i64 24, i1 false) #14
  %470 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %43, i64 0, i32 3
  %471 = bitcast %"class.SkSL::String"* %470 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %471, i8* nonnull align 8 %449, i64 24, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %449, i8 0, i64 24, i1 false) #14
  %472 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %43, i64 0, i32 4
  store i32 0, i32* %472, align 8
  %473 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %43, i64 0, i32 5
  %474 = bitcast %"class.std::__1::shared_ptr.49"* %473 to i64*
  store i64 %460, i64* %474, align 8
  %475 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %43, i64 0, i32 5, i32 1
  %476 = bitcast %"class.std::__1::__shared_weak_count"** %475 to i64*
  store i64 %461, i64* %476, align 8
  %477 = call i32 @_ZN4SkSL18SPIRVCodeGenerator19writeInterfaceBlockERKNS_14InterfaceBlockEb(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::InterfaceBlock"* nonnull dereferenceable(96) %43, i1 zeroext false)
  store i32 %477, i32* %132, align 8
  %478 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 30
  store i32 0, i32* %478, align 4
  %479 = select i1 %376, i32 9, i32 2
  %480 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 31
  store i32 %479, i32* %480, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL14InterfaceBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %464, align 8
  %481 = getelementptr inbounds i8, i8* %453, i64 8
  %482 = bitcast i8* %481 to i64*
  %483 = atomicrmw add i64* %482, i64 -1 acq_rel
  %484 = icmp eq i64 %483, 0
  br i1 %484, label %485, label %492

485:                                              ; preds = %440
  %486 = bitcast i8* %453 to %"class.std::__1::__shared_weak_count"*
  %487 = bitcast i8* %453 to %"class.std::__1::__shared_count"*
  %488 = bitcast i8* %453 to void (%"class.std::__1::__shared_count"*)***
  %489 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %488, align 8
  %490 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %489, i64 2
  %491 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %490, align 8
  call void %491(%"class.std::__1::__shared_count"* nonnull %487) #14
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %486) #14
  br label %492

492:                                              ; preds = %485, %440
  %493 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %43, i64 0, i32 3, i32 0
  %494 = bitcast %"class.std::__1::basic_string"* %493 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %495 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %494, i64 0, i32 1, i32 0
  %496 = load i8, i8* %495, align 1
  %497 = icmp slt i8 %496, 0
  br i1 %497, label %498, label %501

498:                                              ; preds = %492
  %499 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %493, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %500 = load i8*, i8** %499, align 8
  call void @_ZdlPv(i8* %500) #16
  br label %501

501:                                              ; preds = %498, %492
  %502 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %43, i64 0, i32 2, i32 0
  %503 = bitcast %"class.std::__1::basic_string"* %502 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %504 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %503, i64 0, i32 1, i32 0
  %505 = load i8, i8* %504, align 1
  %506 = icmp slt i8 %505, 0
  br i1 %506, label %507, label %510

507:                                              ; preds = %501
  %508 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %502, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %509 = load i8*, i8** %508, align 8
  call void @_ZdlPv(i8* %509) #16
  br label %510

510:                                              ; preds = %501, %507
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %441) #14
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %378) #14
  %511 = icmp eq i8* %289, null
  br i1 %511, label %517, label %512

512:                                              ; preds = %510
  %513 = bitcast i8* %289 to void (%"class.SkSL::Type"*)***
  %514 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %513, align 8
  %515 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %514, i64 1
  %516 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %515, align 8
  call void %516(%"class.SkSL::Type"* nonnull %290) #14
  br label %517

517:                                              ; preds = %510, %512
  %518 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %137, align 8
  %519 = icmp eq %"struct.SkSL::Type::Field"* %518, null
  br i1 %519, label %523, label %520

520:                                              ; preds = %517
  %521 = ptrtoint %"struct.SkSL::Type::Field"* %518 to i64
  store i64 %521, i64* %252, align 8
  %522 = bitcast %"struct.SkSL::Type::Field"* %518 to i8*
  call void @_ZdlPv(i8* %522) #16
  br label %523

523:                                              ; preds = %517, %520
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %136) #14
  br label %524

524:                                              ; preds = %523, %131
  %525 = bitcast %"class.SkSL::Literal"* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %525) #14
  %526 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %46, i64 0, i32 0, i32 0, i32 0
  %527 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %46, i64 0, i32 0, i32 0, i32 1
  %528 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %46, i64 0, i32 0, i32 0, i32 2
  %529 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %46, i64 0, i32 0, i32 1
  %530 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %46, i64 0, i32 1
  %531 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 30
  %532 = load i32, i32* %531, align 4
  %533 = zext i32 %532 to i64
  %534 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %80, align 8
  %535 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %534, i64 0, i32 0, i32 8, i32 0, i32 0, i32 0
  %536 = bitcast %"class.SkSL::Type"** %535 to i64*
  %537 = load i64, i64* %536, align 8
  store i32 -1, i32* %527, align 8
  store i32 43, i32* %528, align 4
  %538 = bitcast %"class.SkSL::Type"** %529 to i64*
  store i64 %537, i64* %538, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIlEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %526, align 8
  store i64 %533, i64* %530, align 8
  %539 = call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeIntLiteralERKNS_7LiteralIlEE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Literal"* nonnull dereferenceable(32) %46)
  %540 = load i32, i32* %77, align 8
  %541 = add i32 %540, 1
  store i32 %541, i32* %77, align 8
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 65, i32 5, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %542 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %80, align 8
  %543 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %542, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %544 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %543, align 8
  %545 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 31
  %546 = load i32, i32* %545, align 8
  %547 = call i32 @_ZN4SkSL18SPIRVCodeGenerator14getPointerTypeERKNS_4TypeERKNS_12MemoryLayoutE16SpvStorageClass_(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %544, %"class.SkSL::MemoryLayout"* dereferenceable(4) %84, i32 %546) #14
  %548 = bitcast i32* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %548)
  store i32 %547, i32* %28, align 4
  %549 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %87, align 8
  %550 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %549, i64 3
  %551 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %550, align 8
  call void %551(%"class.SkSL::OutputStream"* %2, i8* nonnull %548, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %548)
  %552 = bitcast i32* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %552)
  store i32 %540, i32* %27, align 4
  %553 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %87, align 8
  %554 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %553, i64 3
  %555 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %554, align 8
  call void %555(%"class.SkSL::OutputStream"* %2, i8* nonnull %552, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %552)
  %556 = load i32, i32* %132, align 8
  %557 = bitcast i32* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %557)
  store i32 %556, i32* %26, align 4
  %558 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %87, align 8
  %559 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %558, i64 3
  %560 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %559, align 8
  call void %560(%"class.SkSL::OutputStream"* %2, i8* nonnull %557, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %557)
  %561 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %561)
  store i32 %539, i32* %25, align 4
  %562 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %87, align 8
  %563 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %562, i64 3
  %564 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %563, align 8
  call void %564(%"class.SkSL::OutputStream"* %2, i8* nonnull %561, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %561)
  %565 = load i32, i32* %77, align 8
  %566 = add i32 %565, 1
  store i32 %566, i32* %77, align 8
  %567 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %80, align 8
  %568 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %567, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %569 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %568, align 8
  %570 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %569, %"class.SkSL::MemoryLayout"* dereferenceable(4) %84) #14
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 61, i32 4, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %571 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %571) #14
  store i32 %570, i32* %24, align 4
  %572 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %87, align 8
  %573 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %572, i64 3
  %574 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %573, align 8
  call void %574(%"class.SkSL::OutputStream"* %2, i8* nonnull %571, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %571) #14
  %575 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %575) #14
  store i32 %565, i32* %23, align 4
  %576 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %87, align 8
  %577 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %576, i64 3
  %578 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %577, align 8
  call void %578(%"class.SkSL::OutputStream"* %2, i8* nonnull %575, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %575) #14
  %579 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %579) #14
  store i32 %540, i32* %22, align 4
  %580 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %87, align 8
  %581 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %580, i64 3
  %582 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %581, align 8
  call void %582(%"class.SkSL::OutputStream"* %2, i8* nonnull %579, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %579) #14
  %583 = load i32, i32* %77, align 8
  %584 = add i32 %583, 1
  store i32 %584, i32* %77, align 8
  %585 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %80, align 8
  %586 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %585, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %587 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %586, align 8
  %588 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %587, %"class.SkSL::MemoryLayout"* dereferenceable(4) %84) #14
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 131, i32 5, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %589 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %589) #14
  store i32 %588, i32* %21, align 4
  %590 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %87, align 8
  %591 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %590, i64 3
  %592 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %591, align 8
  call void %592(%"class.SkSL::OutputStream"* %2, i8* nonnull %589, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %589) #14
  %593 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %593) #14
  store i32 %583, i32* %20, align 4
  %594 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %87, align 8
  %595 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %594, i64 3
  %596 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %595, align 8
  call void %596(%"class.SkSL::OutputStream"* %2, i8* nonnull %593, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %593) #14
  %597 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %597) #14
  store i32 %565, i32* %19, align 4
  %598 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %87, align 8
  %599 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %598, i64 3
  %600 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %599, align 8
  call void %600(%"class.SkSL::OutputStream"* %2, i8* nonnull %597, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %597) #14
  %601 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %601) #14
  store i32 %103, i32* %18, align 4
  %602 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %87, align 8
  %603 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %602, i64 3
  %604 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %603, align 8
  call void %604(%"class.SkSL::OutputStream"* %2, i8* nonnull %601, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %601) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %525) #14
  br label %605

605:                                              ; preds = %76, %524
  %606 = phi i32 [ %583, %524 ], [ 0, %76 ]
  %607 = bitcast %"class.SkSL::Literal.430"* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %607) #14
  %608 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %47, i64 0, i32 0, i32 0, i32 0
  %609 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %47, i64 0, i32 0, i32 0, i32 1
  %610 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %47, i64 0, i32 0, i32 0, i32 2
  %611 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %47, i64 0, i32 0, i32 1
  %612 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %47, i64 0, i32 1
  %613 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %47, i64 0, i32 2, i64 0
  %614 = bitcast %"class.SkSL::Context"** %80 to i64**
  %615 = bitcast i8* %613 to i32*
  store i32 -1431655766, i32* %615, align 4
  %616 = load i64*, i64** %614, align 8
  %617 = load i64, i64* %616, align 8
  store i32 -1, i32* %609, align 8
  store i32 45, i32* %610, align 4
  %618 = bitcast %"class.SkSL::Type"** %611 to i64*
  store i64 %617, i64* %618, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIfEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %608, align 8
  store float 0.000000e+00, float* %612, align 8
  %619 = call i32 @_ZN4SkSL18SPIRVCodeGenerator17writeFloatLiteralERKNS_7LiteralIfEE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Literal.430"* nonnull dereferenceable(32) %47)
  %620 = load i32, i32* %77, align 8
  %621 = add i32 %620, 1
  store i32 %621, i32* %77, align 8
  %622 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %80, align 8
  %623 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %622, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %624 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %623, align 8
  %625 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %624, %"class.SkSL::MemoryLayout"* dereferenceable(4) %84) #14
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 81, i32 5, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %626 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %626) #14
  store i32 %625, i32* %17, align 4
  %627 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %87, align 8
  %628 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %627, i64 3
  %629 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %628, align 8
  call void %629(%"class.SkSL::OutputStream"* %2, i8* nonnull %626, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %626) #14
  %630 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %630) #14
  store i32 %620, i32* %16, align 4
  %631 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %87, align 8
  %632 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %631, i64 3
  %633 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %632, align 8
  call void %633(%"class.SkSL::OutputStream"* %2, i8* nonnull %630, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %630) #14
  %634 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %634) #14
  store i32 %54, i32* %15, align 4
  %635 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %87, align 8
  %636 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %635, i64 3
  %637 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %636, align 8
  call void %637(%"class.SkSL::OutputStream"* %2, i8* nonnull %634, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %634) #14
  %638 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %638) #14
  store i32 3, i32* %14, align 4
  %639 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %87, align 8
  %640 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %639, i64 3
  %641 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %640, align 8
  call void %641(%"class.SkSL::OutputStream"* %2, i8* nonnull %638, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %638) #14
  %642 = load i32, i32* %77, align 8
  %643 = add i32 %642, 1
  store i32 %643, i32* %77, align 8
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 80, i32 7, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %644 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %80, align 8
  %645 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %644, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %646 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %645, align 8
  %647 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %646, %"class.SkSL::MemoryLayout"* dereferenceable(4) %84) #14
  %648 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %648)
  store i32 %647, i32* %13, align 4
  %649 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %87, align 8
  %650 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %649, i64 3
  %651 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %650, align 8
  call void %651(%"class.SkSL::OutputStream"* %2, i8* nonnull %648, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %648)
  %652 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %652)
  store i32 %642, i32* %12, align 4
  %653 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %87, align 8
  %654 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %653, i64 3
  %655 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %654, align 8
  call void %655(%"class.SkSL::OutputStream"* %2, i8* nonnull %652, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %652)
  %656 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %656)
  store i32 %78, i32* %11, align 4
  %657 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %87, align 8
  %658 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %657, i64 3
  %659 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %658, align 8
  call void %659(%"class.SkSL::OutputStream"* %2, i8* nonnull %656, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %656)
  %660 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %69, align 8
  %661 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %660, i64 0, i32 1, i32 0, i32 0, i32 0
  %662 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %661, align 8
  %663 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %662, i64 0, i32 1, i32 0
  %664 = load i8, i8* %663, align 8, !range !2
  %665 = icmp eq i8 %664, 0
  br i1 %665, label %671, label %666

666:                                              ; preds = %605
  %667 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %667)
  store i32 %606, i32* %10, align 4
  %668 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %87, align 8
  %669 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %668, i64 3
  %670 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %669, align 8
  call void %670(%"class.SkSL::OutputStream"* %2, i8* nonnull %667, i64 4) #14
  br label %676

671:                                              ; preds = %605
  %672 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %672)
  store i32 %103, i32* %9, align 4
  %673 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %87, align 8
  %674 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %673, i64 3
  %675 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %674, align 8
  call void %675(%"class.SkSL::OutputStream"* %2, i8* nonnull %672, i64 4) #14
  br label %676

676:                                              ; preds = %671, %666
  %677 = phi i8* [ %672, %671 ], [ %667, %666 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %677)
  %678 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %678)
  store i32 %619, i32* %8, align 4
  %679 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %87, align 8
  %680 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %679, i64 3
  %681 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %680, align 8
  call void %681(%"class.SkSL::OutputStream"* %2, i8* nonnull %678, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %678)
  %682 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %682)
  store i32 %620, i32* %7, align 4
  %683 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %87, align 8
  %684 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %683, i64 3
  %685 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %684, align 8
  call void %685(%"class.SkSL::OutputStream"* %2, i8* nonnull %682, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %682)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %607) #14
  br label %717

686:                                              ; preds = %61
  %687 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 1
  %688 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %687, align 8
  %689 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %688, i64 0, i32 1, i32 0, i32 0, i32 0
  %690 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %689, align 8
  %691 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %690, i64 0, i32 1, i32 0
  %692 = load i8, i8* %691, align 8, !range !2
  %693 = icmp eq i8 %692, 0
  br i1 %693, label %694, label %717

694:                                              ; preds = %686
  %695 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %696 = load i32, i32* %695, align 8
  %697 = add i32 %696, 1
  store i32 %697, i32* %695, align 8
  %698 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 1
  %699 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %698, align 8
  %700 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %699, i64 0, i32 0, i32 24, i32 0, i32 0, i32 0
  %701 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %700, align 8
  %702 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %703 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %701, %"class.SkSL::MemoryLayout"* dereferenceable(4) %702) #14
  tail call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 168, i32 4, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %704 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %704) #14
  store i32 %703, i32* %6, align 4
  %705 = bitcast %"class.SkSL::OutputStream"* %2 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %706 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %705, align 8
  %707 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %706, i64 3
  %708 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %707, align 8
  call void %708(%"class.SkSL::OutputStream"* %2, i8* nonnull %704, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %704) #14
  %709 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %709) #14
  store i32 %696, i32* %5, align 4
  %710 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %705, align 8
  %711 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %710, i64 3
  %712 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %711, align 8
  call void %712(%"class.SkSL::OutputStream"* %2, i8* nonnull %709, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %709) #14
  %713 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %713) #14
  store i32 %54, i32* %4, align 4
  %714 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %705, align 8
  %715 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %714, i64 3
  %716 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %715, align 8
  call void %716(%"class.SkSL::OutputStream"* %2, i8* nonnull %713, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %713) #14
  br label %717

717:                                              ; preds = %61, %68, %686, %694, %676
  %718 = phi i32 [ %642, %676 ], [ %696, %694 ], [ %54, %686 ], [ %54, %68 ], [ %54, %61 ]
  ret i32 %718
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator22writeTernaryExpressionERKNS_17TernaryExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::TernaryExpression"* nocapture readonly dereferenceable(48), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = getelementptr inbounds %"class.SkSL::TernaryExpression", %"class.SkSL::TernaryExpression"* %1, i64 0, i32 0, i32 1
  %34 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %33, align 8
  %35 = getelementptr inbounds %"class.SkSL::TernaryExpression", %"class.SkSL::TernaryExpression"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %35, align 8
  %37 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %36, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %38 = getelementptr inbounds %"class.SkSL::TernaryExpression", %"class.SkSL::TernaryExpression"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %39 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %38, align 8
  %40 = bitcast %"class.SkSL::Expression"* %39 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %41 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %40, align 8
  %42 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %41, i64 3
  %43 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %42, align 8
  %44 = tail call dereferenceable(184) %"class.SkSL::Type"* %43(%"class.SkSL::Expression"* %39) #14
  %45 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %44, i64 0, i32 8
  %46 = load i32, i32* %45, align 8
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %94

48:                                               ; preds = %3
  %49 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %38, align 8
  %50 = bitcast %"class.SkSL::Expression"* %49 to i1 (%"class.SkSL::Expression"*)***
  %51 = load i1 (%"class.SkSL::Expression"*)**, i1 (%"class.SkSL::Expression"*)*** %50, align 8
  %52 = getelementptr inbounds i1 (%"class.SkSL::Expression"*)*, i1 (%"class.SkSL::Expression"*)** %51, i64 4
  %53 = load i1 (%"class.SkSL::Expression"*)*, i1 (%"class.SkSL::Expression"*)** %52, align 8
  %54 = tail call zeroext i1 %53(%"class.SkSL::Expression"* %49) #14
  br i1 %54, label %55, label %94

55:                                               ; preds = %48
  %56 = getelementptr inbounds %"class.SkSL::TernaryExpression", %"class.SkSL::TernaryExpression"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %57 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %56, align 8
  %58 = bitcast %"class.SkSL::Expression"* %57 to i1 (%"class.SkSL::Expression"*)***
  %59 = load i1 (%"class.SkSL::Expression"*)**, i1 (%"class.SkSL::Expression"*)*** %58, align 8
  %60 = getelementptr inbounds i1 (%"class.SkSL::Expression"*)*, i1 (%"class.SkSL::Expression"*)** %59, i64 4
  %61 = load i1 (%"class.SkSL::Expression"*)*, i1 (%"class.SkSL::Expression"*)** %60, align 8
  %62 = tail call zeroext i1 %61(%"class.SkSL::Expression"* %57) #14
  br i1 %62, label %63, label %94

63:                                               ; preds = %55
  %64 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %65 = load i32, i32* %64, align 8
  %66 = add i32 %65, 1
  store i32 %66, i32* %64, align 8
  %67 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %38, align 8
  %68 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %67, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %69 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %56, align 8
  %70 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %69, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %71 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %72 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %34, %"class.SkSL::MemoryLayout"* dereferenceable(4) %71) #14
  tail call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 169, i32 6, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %73 = bitcast i32* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %73) #14
  store i32 %72, i32* %32, align 4
  %74 = bitcast %"class.SkSL::OutputStream"* %2 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %75 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %75, i64 3
  %77 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %76, align 8
  call void %77(%"class.SkSL::OutputStream"* %2, i8* nonnull %73, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %73) #14
  %78 = bitcast i32* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %78) #14
  store i32 %65, i32* %31, align 4
  %79 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %74, align 8
  %80 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %79, i64 3
  %81 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %80, align 8
  call void %81(%"class.SkSL::OutputStream"* %2, i8* nonnull %78, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %78) #14
  %82 = bitcast i32* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %82) #14
  store i32 %37, i32* %30, align 4
  %83 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %74, align 8
  %84 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %83, i64 3
  %85 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %84, align 8
  call void %85(%"class.SkSL::OutputStream"* %2, i8* nonnull %82, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %82) #14
  %86 = bitcast i32* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %86) #14
  store i32 %68, i32* %29, align 4
  %87 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %74, align 8
  %88 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %87, i64 3
  %89 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %88, align 8
  call void %89(%"class.SkSL::OutputStream"* %2, i8* nonnull %86, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %86) #14
  %90 = bitcast i32* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %90) #14
  store i32 %70, i32* %28, align 4
  %91 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %74, align 8
  %92 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %91, i64 3
  %93 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %92, align 8
  call void %93(%"class.SkSL::OutputStream"* %2, i8* nonnull %90, i64 4) #14
  br label %249

94:                                               ; preds = %55, %48, %3
  %95 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %96 = load i32, i32* %95, align 8
  %97 = add i32 %96, 1
  store i32 %97, i32* %95, align 8
  %98 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %99 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator14getPointerTypeERKNS_4TypeERKNS_12MemoryLayoutE16SpvStorageClass_(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %34, %"class.SkSL::MemoryLayout"* dereferenceable(4) %98, i32 7) #14
  %100 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 17, i32 0
  %101 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %101) #14
  store i32 262203, i32* %4, align 4
  %102 = bitcast %"class.SkSL::OutputStream"* %100 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %103 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %102, align 8
  %104 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %103, i64 3
  %105 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %104, align 8
  call void %105(%"class.SkSL::OutputStream"* %100, i8* nonnull %101, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %101) #14
  %106 = bitcast i32* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %106) #14
  store i32 %99, i32* %27, align 4
  %107 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %102, align 8
  %108 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %107, i64 3
  %109 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %108, align 8
  call void %109(%"class.SkSL::OutputStream"* %100, i8* nonnull %106, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %106) #14
  %110 = bitcast i32* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %110) #14
  store i32 %96, i32* %26, align 4
  %111 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %102, align 8
  %112 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %111, i64 3
  %113 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %112, align 8
  call void %113(%"class.SkSL::OutputStream"* %100, i8* nonnull %110, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %110) #14
  %114 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %114) #14
  store i32 7, i32* %25, align 4
  %115 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %102, align 8
  %116 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %115, i64 3
  %117 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %116, align 8
  call void %117(%"class.SkSL::OutputStream"* %100, i8* nonnull %114, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %114) #14
  %118 = load i32, i32* %95, align 8
  %119 = add i32 %118, 1
  %120 = add i32 %118, 2
  %121 = add i32 %118, 3
  store i32 %121, i32* %95, align 8
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 247, i32 3, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %122 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %122) #14
  store i32 %120, i32* %24, align 4
  %123 = bitcast %"class.SkSL::OutputStream"* %2 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %124 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %123, align 8
  %125 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %124, i64 3
  %126 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %125, align 8
  call void %126(%"class.SkSL::OutputStream"* %2, i8* nonnull %122, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %122) #14
  %127 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %127) #14
  store i32 0, i32* %23, align 4
  %128 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %123, align 8
  %129 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %128, i64 3
  %130 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %129, align 8
  call void %130(%"class.SkSL::OutputStream"* %2, i8* nonnull %127, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %127) #14
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 250, i32 4, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %131 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %131) #14
  store i32 %37, i32* %22, align 4
  %132 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %123, align 8
  %133 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %132, i64 3
  %134 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %133, align 8
  call void %134(%"class.SkSL::OutputStream"* %2, i8* nonnull %131, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %131) #14
  %135 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %135) #14
  store i32 %118, i32* %21, align 4
  %136 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %123, align 8
  %137 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %136, i64 3
  %138 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %137, align 8
  call void %138(%"class.SkSL::OutputStream"* %2, i8* nonnull %135, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %135) #14
  %139 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %139) #14
  store i32 %119, i32* %20, align 4
  %140 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %123, align 8
  %141 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %140, i64 3
  %142 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %141, align 8
  call void %142(%"class.SkSL::OutputStream"* %2, i8* nonnull %139, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %139) #14
  %143 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 26
  store i32 %118, i32* %143, align 4
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 248, i32 2, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %144 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %144) #14
  store i32 %118, i32* %19, align 4
  %145 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %123, align 8
  %146 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %145, i64 3
  %147 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %146, align 8
  call void %147(%"class.SkSL::OutputStream"* %2, i8* nonnull %144, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %144) #14
  %148 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %38, align 8
  %149 = call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %148, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 62, i32 3, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %150 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %150) #14
  store i32 %96, i32* %18, align 4
  %151 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %123, align 8
  %152 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %151, i64 3
  %153 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %152, align 8
  call void %153(%"class.SkSL::OutputStream"* %2, i8* nonnull %150, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %150) #14
  %154 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %154) #14
  store i32 %149, i32* %17, align 4
  %155 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %123, align 8
  %156 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %155, i64 3
  %157 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %156, align 8
  call void %157(%"class.SkSL::OutputStream"* %2, i8* nonnull %154, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %154) #14
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 249, i32 2, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %158 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158) #14
  store i32 %120, i32* %16, align 4
  %159 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %123, align 8
  %160 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %159, i64 3
  %161 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %160, align 8
  call void %161(%"class.SkSL::OutputStream"* %2, i8* nonnull %158, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158) #14
  store i32 %119, i32* %143, align 4
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 248, i32 2, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %162 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %162) #14
  store i32 %119, i32* %15, align 4
  %163 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %123, align 8
  %164 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %163, i64 3
  %165 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %164, align 8
  call void %165(%"class.SkSL::OutputStream"* %2, i8* nonnull %162, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %162) #14
  %166 = getelementptr inbounds %"class.SkSL::TernaryExpression", %"class.SkSL::TernaryExpression"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %167 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %166, align 8
  %168 = call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %167, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 62, i32 3, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %169 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %169) #14
  store i32 %96, i32* %14, align 4
  %170 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %123, align 8
  %171 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %170, i64 3
  %172 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %171, align 8
  call void %172(%"class.SkSL::OutputStream"* %2, i8* nonnull %169, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %169) #14
  %173 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %173) #14
  store i32 %168, i32* %13, align 4
  %174 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %123, align 8
  %175 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %174, i64 3
  %176 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %175, align 8
  call void %176(%"class.SkSL::OutputStream"* %2, i8* nonnull %173, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %173) #14
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 249, i32 2, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %177 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %177) #14
  store i32 %120, i32* %12, align 4
  %178 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %123, align 8
  %179 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %178, i64 3
  %180 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %179, align 8
  call void %180(%"class.SkSL::OutputStream"* %2, i8* nonnull %177, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %177) #14
  store i32 %120, i32* %143, align 4
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 248, i32 2, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %181 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %181) #14
  store i32 %120, i32* %11, align 4
  %182 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %123, align 8
  %183 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %182, i64 3
  %184 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %183, align 8
  call void %184(%"class.SkSL::OutputStream"* %2, i8* nonnull %181, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %181) #14
  %185 = icmp eq %"class.SkSL::Type"* %34, null
  br i1 %185, label %233, label %186

186:                                              ; preds = %94
  %187 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %34, i64 0, i32 6
  %188 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %187, align 8
  %189 = icmp eq %"class.SkSL::Type"* %188, null
  %190 = select i1 %189, %"class.SkSL::Type"* %34, %"class.SkSL::Type"* %188
  %191 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %190, i64 0, i32 4
  %192 = load i32, i32* %191, align 4
  %193 = icmp ult i32 %192, 3
  br i1 %193, label %198, label %194

194:                                              ; preds = %186
  %195 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %34, i64 0, i32 3
  %196 = load i32, i32* %195, align 8
  %197 = icmp eq i32 %196, 6
  br i1 %197, label %198, label %233

198:                                              ; preds = %194, %186
  br i1 %189, label %204, label %199

199:                                              ; preds = %198, %199
  %200 = phi %"class.SkSL::Type"* [ %202, %199 ], [ %188, %198 ]
  %201 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %200, i64 0, i32 6
  %202 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %201, align 8
  %203 = icmp eq %"class.SkSL::Type"* %202, null
  br i1 %203, label %204, label %199

204:                                              ; preds = %199, %198
  %205 = phi %"class.SkSL::Type"* [ %34, %198 ], [ %200, %199 ]
  %206 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %205, i64 0, i32 16
  %207 = load i8, i8* %206, align 8, !range !2
  %208 = icmp eq i8 %207, 0
  br i1 %208, label %209, label %233

209:                                              ; preds = %204
  %210 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 1
  %211 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %210, align 8
  %212 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %211, i64 0, i32 1, i32 0, i32 0, i32 0
  %213 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %212, align 8
  %214 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %213, i64 0, i32 1, i32 3
  %215 = load i8, i8* %214, align 1, !range !2
  %216 = icmp eq i8 %215, 0
  br i1 %216, label %217, label %233

217:                                              ; preds = %209
  %218 = load i32, i32* %95, align 8
  %219 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %220 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %220) #14
  store i32 196679, i32* %8, align 4
  %221 = bitcast %"class.SkSL::OutputStream"* %219 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %222 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %221, align 8
  %223 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %222, i64 3
  %224 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %223, align 8
  call void %224(%"class.SkSL::OutputStream"* %219, i8* nonnull %220, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %220) #14
  %225 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %225) #14
  store i32 %218, i32* %10, align 4
  %226 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %221, align 8
  %227 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %226, i64 3
  %228 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %227, align 8
  call void %228(%"class.SkSL::OutputStream"* %219, i8* nonnull %225, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %225) #14
  %229 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %229) #14
  store i32 0, i32* %9, align 4
  %230 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %221, align 8
  %231 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %230, i64 3
  %232 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %231, align 8
  call void %232(%"class.SkSL::OutputStream"* %219, i8* nonnull %229, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %229) #14
  br label %233

233:                                              ; preds = %94, %194, %204, %209, %217
  %234 = load i32, i32* %95, align 8
  %235 = add i32 %234, 1
  store i32 %235, i32* %95, align 8
  %236 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %34, %"class.SkSL::MemoryLayout"* dereferenceable(4) %98) #14
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 61, i32 4, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %237 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %237) #14
  store i32 %236, i32* %7, align 4
  %238 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %123, align 8
  %239 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %238, i64 3
  %240 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %239, align 8
  call void %240(%"class.SkSL::OutputStream"* %2, i8* nonnull %237, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %237) #14
  %241 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %241) #14
  store i32 %234, i32* %6, align 4
  %242 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %123, align 8
  %243 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %242, i64 3
  %244 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %243, align 8
  call void %244(%"class.SkSL::OutputStream"* %2, i8* nonnull %241, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %241) #14
  %245 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %245) #14
  store i32 %96, i32* %5, align 4
  %246 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %123, align 8
  %247 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %246, i64 3
  %248 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %247, align 8
  call void %248(%"class.SkSL::OutputStream"* %2, i8* nonnull %245, i64 4) #14
  br label %249

249:                                              ; preds = %233, %63
  %250 = phi i8* [ %245, %233 ], [ %90, %63 ]
  %251 = phi i32 [ %234, %233 ], [ %65, %63 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %250) #14
  ret i32 %251
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator20writeIndexExpressionERKNS_15IndexExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, %"struct.SkSL::IndexExpression"* dereferenceable(40), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = getelementptr inbounds %"struct.SkSL::IndexExpression", %"struct.SkSL::IndexExpression"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %8, align 8
  %10 = bitcast %"class.SkSL::Expression"* %9 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %11 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %11, i64 3
  %13 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %12, align 8
  %14 = tail call dereferenceable(184) %"class.SkSL::Type"* %13(%"class.SkSL::Expression"* %9) #14
  %15 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %14, i64 0, i32 3
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 11
  br i1 %17, label %18, label %48

18:                                               ; preds = %3
  %19 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %8, align 8
  %20 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %19, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %21 = getelementptr inbounds %"struct.SkSL::IndexExpression", %"struct.SkSL::IndexExpression"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %22 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %21, align 8
  %23 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %22, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %24 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %25 = load i32, i32* %24, align 8
  %26 = add i32 %25, 1
  store i32 %26, i32* %24, align 8
  %27 = getelementptr inbounds %"struct.SkSL::IndexExpression", %"struct.SkSL::IndexExpression"* %1, i64 0, i32 0, i32 1
  %28 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %27, align 8
  %29 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %30 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %28, %"class.SkSL::MemoryLayout"* dereferenceable(4) %29) #14
  tail call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 77, i32 5, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %31 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %31) #14
  store i32 %30, i32* %7, align 4
  %32 = bitcast %"class.SkSL::OutputStream"* %2 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %33 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %33, i64 3
  %35 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %34, align 8
  call void %35(%"class.SkSL::OutputStream"* %2, i8* nonnull %31, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %31) #14
  %36 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %36) #14
  store i32 %25, i32* %6, align 4
  %37 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %32, align 8
  %38 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %37, i64 3
  %39 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %38, align 8
  call void %39(%"class.SkSL::OutputStream"* %2, i8* nonnull %36, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %36) #14
  %40 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %40) #14
  store i32 %20, i32* %5, align 4
  %41 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %32, align 8
  %42 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %41, i64 3
  %43 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %42, align 8
  call void %43(%"class.SkSL::OutputStream"* %2, i8* nonnull %40, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40) #14
  %44 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %44) #14
  store i32 %23, i32* %4, align 4
  %45 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %32, align 8
  %46 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %45, i64 3
  %47 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %46, align 8
  call void %47(%"class.SkSL::OutputStream"* %2, i8* nonnull %44, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %44) #14
  br label %62

48:                                               ; preds = %3
  %49 = getelementptr inbounds %"struct.SkSL::IndexExpression", %"struct.SkSL::IndexExpression"* %1, i64 0, i32 0
  %50 = tail call %"class.SkSL::SPIRVCodeGenerator::LValue"* @_ZN4SkSL18SPIRVCodeGenerator9getLValueERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %49, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %51 = bitcast %"class.SkSL::SPIRVCodeGenerator::LValue"* %50 to i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)***
  %52 = load i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)**, i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)*** %51, align 8
  %53 = getelementptr inbounds i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)*, i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)** %52, i64 5
  %54 = load i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)*, i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %"class.SkSL::OutputStream"*)** %53, align 8
  %55 = tail call i32 %54(%"class.SkSL::SPIRVCodeGenerator::LValue"* %50, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %56 = icmp eq %"class.SkSL::SPIRVCodeGenerator::LValue"* %50, null
  br i1 %56, label %62, label %57

57:                                               ; preds = %48
  %58 = bitcast %"class.SkSL::SPIRVCodeGenerator::LValue"* %50 to void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)***
  %59 = load void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)**, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)** %59, i64 1
  %61 = load void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)** %60, align 8
  tail call void %61(%"class.SkSL::SPIRVCodeGenerator::LValue"* nonnull %50) #14
  br label %62

62:                                               ; preds = %57, %48, %18
  %63 = phi i32 [ %25, %18 ], [ %55, %48 ], [ %55, %57 ]
  ret i32 %63
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator18writeIntrinsicCallERKNS_12FunctionCallERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::FunctionCall"* nocapture readonly dereferenceable(64), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca %"class.SkSL::String", align 8
  %19 = alloca %"class.SkSL::String", align 8
  %20 = alloca %"class.SkSL::String", align 8
  %21 = alloca %"class.std::__1::vector.382", align 8
  %22 = alloca %"class.std::__1::vector.382", align 8
  %23 = alloca %"class.SkSL::String", align 8
  %24 = alloca %"class.SkSL::String", align 8
  %25 = alloca %"class.SkSL::String", align 8
  %26 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 1
  %27 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %26, align 8
  %28 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %27, i64 0, i32 7
  %29 = load i32, i32* %28, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %82, label %34

34:                                               ; preds = %3
  %35 = tail call i64 @llvm.ctpop.i64(i64 %32) #14, !range !12
  %36 = icmp ugt i64 %35, 1
  br i1 %36, label %40, label %37

37:                                               ; preds = %34
  %38 = add i64 %32, -1
  %39 = and i64 %38, %30
  br label %44

40:                                               ; preds = %34
  %41 = icmp ugt i64 %32, %30
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %30, %32
  br label %44

44:                                               ; preds = %42, %40, %37
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %30, %40 ]
  %46 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.113"**, %"struct.std::__1::__hash_node_base.113"*** %46, align 8
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %47, i64 %45
  %49 = load %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base.113"* %49, null
  br i1 %50, label %82, label %51

51:                                               ; preds = %44
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %49, i64 0, i32 0
  %53 = load %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %52, align 8
  %54 = icmp eq %"struct.std::__1::__hash_node_base.113"* %53, null
  br i1 %54, label %82, label %55

55:                                               ; preds = %51
  %56 = add i64 %32, -1
  br label %57

57:                                               ; preds = %78, %55
  %58 = phi %"struct.std::__1::__hash_node_base.113"* [ %53, %55 ], [ %80, %78 ]
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %58, i64 1
  %60 = bitcast %"struct.std::__1::__hash_node_base.113"* %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = icmp eq i64 %61, %30
  br i1 %62, label %73, label %63

63:                                               ; preds = %57
  br i1 %36, label %66, label %64

64:                                               ; preds = %63
  %65 = and i64 %61, %56
  br label %70

66:                                               ; preds = %63
  %67 = icmp ult i64 %61, %32
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %61, %32
  br label %70

70:                                               ; preds = %68, %66, %64
  %71 = phi i64 [ %65, %64 ], [ %69, %68 ], [ %61, %66 ]
  %72 = icmp eq i64 %71, %45
  br i1 %72, label %78, label %82

73:                                               ; preds = %57
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %58, i64 2
  %75 = bitcast %"struct.std::__1::__hash_node_base.113"* %74 to i32*
  %76 = load i32, i32* %75, align 4
  %77 = icmp eq i32 %76, %29
  br i1 %77, label %117, label %78

78:                                               ; preds = %73, %70
  %79 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %58, i64 0, i32 0
  %80 = load %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %79, align 8
  %81 = icmp eq %"struct.std::__1::__hash_node_base.113"* %80, null
  br i1 %81, label %82, label %57

82:                                               ; preds = %70, %78, %44, %3, %51
  %83 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 2
  %84 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %83, align 8
  %85 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 0, i32 0, i32 1
  %86 = load i32, i32* %85, align 8
  %87 = bitcast %"class.SkSL::String"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %87) #14
  %88 = bitcast %"class.SkSL::String"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %88) #14
  call void @_ZNK4SkSL19FunctionDeclaration11descriptionEv(%"class.SkSL::String"* nonnull sret %20, %"class.SkSL::FunctionDeclaration"* %27) #14
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %19, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.10, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %20) #14
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %18, %"class.SkSL::String"* nonnull %19, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0)) #14
  %89 = bitcast %"class.SkSL::ErrorReporter"* %84 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %90 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %90, i64 2
  %92 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %91, align 8
  call void %92(%"class.SkSL::ErrorReporter"* %84, i32 %86, %"class.SkSL::String"* nonnull %18) #14
  %93 = bitcast %"class.SkSL::String"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %94 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %93, i64 0, i32 1, i32 0
  %95 = load i8, i8* %94, align 1
  %96 = icmp slt i8 %95, 0
  br i1 %96, label %97, label %100

97:                                               ; preds = %82
  %98 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load i8*, i8** %98, align 8
  call void @_ZdlPv(i8* %99) #16
  br label %100

100:                                              ; preds = %82, %97
  %101 = bitcast %"class.SkSL::String"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %102 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %101, i64 0, i32 1, i32 0
  %103 = load i8, i8* %102, align 1
  %104 = icmp slt i8 %103, 0
  br i1 %104, label %105, label %108

105:                                              ; preds = %100
  %106 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load i8*, i8** %106, align 8
  call void @_ZdlPv(i8* %107) #16
  br label %108

108:                                              ; preds = %100, %105
  %109 = bitcast %"class.SkSL::String"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %110 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %109, i64 0, i32 1, i32 0
  %111 = load i8, i8* %110, align 1
  %112 = icmp slt i8 %111, 0
  br i1 %112, label %113, label %116

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load i8*, i8** %114, align 8
  call void @_ZdlPv(i8* %115) #16
  br label %116

116:                                              ; preds = %108, %113
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %88) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %87) #14
  br label %755

117:                                              ; preds = %73
  %118 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 16
  %119 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 24
  %120 = bitcast i8* %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = and i64 %121, 4294967294
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %171, label %124

124:                                              ; preds = %117
  %125 = bitcast i8* %118 to %"class.std::__1::unique_ptr.336"**
  %126 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %125, align 8
  %127 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %126, i64 0, i32 0, i32 0, i32 0
  %128 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %127, align 8
  %129 = bitcast %"class.SkSL::Expression"* %128 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %130 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %129, align 8
  %131 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %130, i64 3
  %132 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %131, align 8
  %133 = tail call dereferenceable(184) %"class.SkSL::Type"* %132(%"class.SkSL::Expression"* %128) #14
  %134 = bitcast %"struct.std::__1::__hash_node_base.113"* %74 to %"struct.std::__1::pair.436"*
  %135 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %134, i64 0, i32 1, i32 0, i32 0, i32 0
  %136 = load i32, i32* %135, align 4
  %137 = icmp eq i32 %136, 2
  br i1 %137, label %149, label %138

138:                                              ; preds = %124
  %139 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %133, i64 0, i32 3
  %140 = load i32, i32* %139, align 8
  switch i32 %140, label %168 [
    i32 8, label %141
    i32 11, label %141
    i32 4, label %141
    i32 1, label %155
  ]

141:                                              ; preds = %138, %138, %138
  %142 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %133, i64 0, i32 6
  %143 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %142, align 8
  %144 = icmp eq %"class.SkSL::Type"* %143, null
  %145 = select i1 %144, %"class.SkSL::Type"* %133, %"class.SkSL::Type"* %143
  %146 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %145, i64 0, i32 4
  %147 = load i32, i32* %146, align 4
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %152

149:                                              ; preds = %141, %124
  %150 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %58, i64 3
  %151 = bitcast %"struct.std::__1::__hash_node_base.113"* %150 to i32*
  br label %177

152:                                              ; preds = %141
  switch i32 %140, label %168 [
    i32 11, label %153
    i32 8, label %153
  ]

153:                                              ; preds = %152, %152
  %154 = icmp eq i32 %147, 1
  br i1 %154, label %155, label %157

155:                                              ; preds = %138, %153
  %156 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %134, i64 0, i32 1, i32 0, i32 2, i32 0
  br label %177

157:                                              ; preds = %153
  switch i32 %140, label %168 [
    i32 8, label %158
    i32 11, label %158
  ]

158:                                              ; preds = %157, %157
  %159 = icmp eq i32 %147, 2
  br i1 %159, label %160, label %163

160:                                              ; preds = %158
  %161 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %58, i64 4
  %162 = bitcast %"struct.std::__1::__hash_node_base.113"* %161 to i32*
  br label %177

163:                                              ; preds = %158
  switch i32 %140, label %168 [
    i32 8, label %164
    i32 11, label %164
  ]

164:                                              ; preds = %163, %163
  %165 = icmp eq i32 %147, 3
  br i1 %165, label %166, label %168

166:                                              ; preds = %164
  %167 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %134, i64 0, i32 1, i32 0, i32 4, i32 0
  br label %177

168:                                              ; preds = %138, %152, %157, %163, %164
  %169 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %58, i64 3
  %170 = bitcast %"struct.std::__1::__hash_node_base.113"* %169 to i32*
  br label %177

171:                                              ; preds = %117
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %58, i64 3
  %173 = bitcast %"struct.std::__1::__hash_node_base.113"* %172 to i32*
  %174 = bitcast %"struct.std::__1::__hash_node_base.113"* %74 to %"struct.std::__1::pair.436"*
  %175 = getelementptr inbounds %"struct.std::__1::pair.436", %"struct.std::__1::pair.436"* %174, i64 0, i32 1, i32 0, i32 0, i32 0
  %176 = load i32, i32* %175, align 4
  br label %177

177:                                              ; preds = %149, %160, %168, %166, %155, %171
  %178 = phi i32 [ %176, %171 ], [ %136, %149 ], [ %136, %155 ], [ %136, %160 ], [ %136, %166 ], [ %136, %168 ]
  %179 = phi i32* [ %173, %171 ], [ %151, %149 ], [ %156, %155 ], [ %162, %160 ], [ %167, %166 ], [ %170, %168 ]
  %180 = load i32, i32* %179, align 4
  switch i32 %178, label %720 [
    i32 0, label %181
    i32 1, label %445
    i32 2, label %718
  ]

181:                                              ; preds = %177
  %182 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 0, i32 1
  %183 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %182, align 8
  %184 = icmp eq %"class.SkSL::Type"* %183, null
  br i1 %184, label %233, label %185

185:                                              ; preds = %181
  %186 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %183, i64 0, i32 6
  %187 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %186, align 8
  %188 = icmp eq %"class.SkSL::Type"* %187, null
  %189 = select i1 %188, %"class.SkSL::Type"* %183, %"class.SkSL::Type"* %187
  %190 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %189, i64 0, i32 4
  %191 = load i32, i32* %190, align 4
  %192 = icmp ult i32 %191, 3
  br i1 %192, label %197, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %183, i64 0, i32 3
  %195 = load i32, i32* %194, align 8
  %196 = icmp eq i32 %195, 6
  br i1 %196, label %197, label %233

197:                                              ; preds = %193, %185
  br i1 %188, label %203, label %198

198:                                              ; preds = %197, %198
  %199 = phi %"class.SkSL::Type"* [ %201, %198 ], [ %187, %197 ]
  %200 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %199, i64 0, i32 6
  %201 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %200, align 8
  %202 = icmp eq %"class.SkSL::Type"* %201, null
  br i1 %202, label %203, label %198

203:                                              ; preds = %198, %197
  %204 = phi %"class.SkSL::Type"* [ %183, %197 ], [ %199, %198 ]
  %205 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %204, i64 0, i32 16
  %206 = load i8, i8* %205, align 8, !range !2
  %207 = icmp eq i8 %206, 0
  br i1 %207, label %208, label %233

208:                                              ; preds = %203
  %209 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 1
  %210 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %209, align 8
  %211 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %210, i64 0, i32 1, i32 0, i32 0, i32 0
  %212 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %211, align 8
  %213 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %212, i64 0, i32 1, i32 3
  %214 = load i8, i8* %213, align 1, !range !2
  %215 = icmp eq i8 %214, 0
  br i1 %215, label %216, label %233

216:                                              ; preds = %208
  %217 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %218 = load i32, i32* %217, align 8
  %219 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %220 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %220) #14
  store i32 196679, i32* %15, align 4
  %221 = bitcast %"class.SkSL::OutputStream"* %219 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %222 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %221, align 8
  %223 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %222, i64 3
  %224 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %223, align 8
  call void %224(%"class.SkSL::OutputStream"* %219, i8* nonnull %220, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %220) #14
  %225 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %225) #14
  store i32 %218, i32* %17, align 4
  %226 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %221, align 8
  %227 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %226, i64 3
  %228 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %227, align 8
  call void %228(%"class.SkSL::OutputStream"* %219, i8* nonnull %225, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %225) #14
  %229 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %229) #14
  store i32 0, i32* %16, align 4
  %230 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %221, align 8
  %231 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %230, i64 3
  %232 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %231, align 8
  call void %232(%"class.SkSL::OutputStream"* %219, i8* nonnull %229, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %229) #14
  br label %233

233:                                              ; preds = %181, %193, %203, %208, %216
  %234 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %235 = load i32, i32* %234, align 8
  %236 = add i32 %235, 1
  store i32 %236, i32* %234, align 8
  %237 = bitcast %"class.std::__1::vector.382"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %237) #14
  %238 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %21, i64 0, i32 0, i32 0
  %239 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %21, i64 0, i32 0, i32 1
  %240 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %21, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %237, i8 0, i64 24, i1 false) #14
  %241 = load i64, i64* %120, align 8
  %242 = and i64 %241, 4294967294
  %243 = icmp eq i64 %242, 0
  br i1 %243, label %244, label %246

244:                                              ; preds = %233
  %245 = bitcast i32** %239 to i64*
  br label %255

246:                                              ; preds = %233
  %247 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %27, i64 0, i32 3, i32 0, i32 0
  %248 = bitcast i8* %118 to %"class.std::__1::unique_ptr.336"**
  %249 = bitcast i32** %239 to i64*
  %250 = bitcast %"class.std::__1::vector.382"* %21 to i64*
  %251 = bitcast i32** %240 to i64*
  br label %290

252:                                              ; preds = %422
  %253 = load i64, i64* %249, align 8
  %254 = load i64, i64* %250, align 8
  br label %255

255:                                              ; preds = %244, %252
  %256 = phi i64* [ %245, %244 ], [ %249, %252 ]
  %257 = phi i64 [ 0, %244 ], [ %254, %252 ]
  %258 = phi i64 [ 0, %244 ], [ %253, %252 ]
  %259 = sub i64 %258, %257
  %260 = lshr exact i64 %259, 2
  %261 = trunc i64 %260 to i32
  %262 = add nsw i32 %261, 5
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 12, i32 %262, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %263 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %182, align 8
  %264 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %265 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %263, %"class.SkSL::MemoryLayout"* dereferenceable(4) %264) #14
  %266 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %266)
  store i32 %265, i32* %14, align 4
  %267 = bitcast %"class.SkSL::OutputStream"* %2 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %268 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %267, align 8
  %269 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %268, i64 3
  %270 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %269, align 8
  call void %270(%"class.SkSL::OutputStream"* %2, i8* nonnull %266, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %266)
  %271 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %271)
  store i32 %235, i32* %13, align 4
  %272 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %267, align 8
  %273 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %272, i64 3
  %274 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %273, align 8
  call void %274(%"class.SkSL::OutputStream"* %2, i8* nonnull %271, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %271)
  %275 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 6
  %276 = load i32, i32* %275, align 4
  %277 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %277)
  store i32 %276, i32* %12, align 4
  %278 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %267, align 8
  %279 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %278, i64 3
  %280 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %279, align 8
  call void %280(%"class.SkSL::OutputStream"* %2, i8* nonnull %277, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %277)
  %281 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %281)
  store i32 %180, i32* %11, align 4
  %282 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %267, align 8
  %283 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %282, i64 3
  %284 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %283, align 8
  call void %284(%"class.SkSL::OutputStream"* %2, i8* nonnull %281, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %281)
  %285 = load i32*, i32** %238, align 8
  %286 = load i32*, i32** %239, align 8
  %287 = icmp eq i32* %285, %286
  br i1 %287, label %430, label %288

288:                                              ; preds = %255
  %289 = bitcast i32* %10 to i8*
  br label %437

290:                                              ; preds = %246, %422
  %291 = phi i64 [ 0, %246 ], [ %423, %422 ]
  %292 = load %"class.SkSL::Variable"**, %"class.SkSL::Variable"*** %247, align 8
  %293 = getelementptr inbounds %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %292, i64 %291
  %294 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %293, align 8
  %295 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %294, i64 0, i32 2
  %296 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %295, align 8
  %297 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %296, i64 0, i32 1
  %298 = load i32, i32* %297, align 8
  %299 = and i32 %298, 4
  %300 = icmp eq i32 %299, 0
  %301 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %248, align 8
  %302 = shl i64 %291, 32
  %303 = ashr exact i64 %302, 32
  %304 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %301, i64 %303, i32 0, i32 0, i32 0
  %305 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %304, align 8
  br i1 %300, label %370, label %306

306:                                              ; preds = %290
  %307 = call %"class.SkSL::SPIRVCodeGenerator::LValue"* @_ZN4SkSL18SPIRVCodeGenerator9getLValueERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %305, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %308 = bitcast %"class.SkSL::SPIRVCodeGenerator::LValue"* %307 to i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*)***
  %309 = load i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*)**, i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*** %308, align 8
  %310 = getelementptr inbounds i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*, i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*)** %309, i64 2
  %311 = load i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*, i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*)** %310, align 8
  %312 = call i32 %311(%"class.SkSL::SPIRVCodeGenerator::LValue"* %307) #14
  %313 = load i32*, i32** %239, align 8
  %314 = load i32*, i32** %240, align 8
  %315 = icmp ult i32* %313, %314
  %316 = ptrtoint i32* %314 to i64
  br i1 %315, label %317, label %320

317:                                              ; preds = %306
  store i32 %312, i32* %313, align 4
  %318 = getelementptr inbounds i32, i32* %313, i64 1
  %319 = ptrtoint i32* %318 to i64
  store i64 %319, i64* %249, align 8
  br label %363

320:                                              ; preds = %306
  %321 = ptrtoint i32* %313 to i64
  %322 = load i64, i64* %250, align 8
  %323 = sub i64 %321, %322
  %324 = ashr exact i64 %323, 2
  %325 = add nsw i64 %324, 1
  %326 = icmp ugt i64 %325, 4611686018427387903
  br i1 %326, label %327, label %329

327:                                              ; preds = %320
  %328 = bitcast %"class.std::__1::vector.382"* %21 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %328) #15
  unreachable

329:                                              ; preds = %320
  %330 = sub i64 %316, %322
  %331 = ashr exact i64 %330, 2
  %332 = icmp ult i64 %331, 2305843009213693951
  br i1 %332, label %333, label %341

333:                                              ; preds = %329
  %334 = ashr exact i64 %330, 1
  %335 = icmp ult i64 %334, %325
  %336 = select i1 %335, i64 %325, i64 %334
  %337 = icmp eq i64 %336, 0
  br i1 %337, label %346, label %338

338:                                              ; preds = %333
  %339 = icmp ugt i64 %336, 4611686018427387903
  br i1 %339, label %340, label %341

340:                                              ; preds = %338
  call void @abort() #15
  unreachable

341:                                              ; preds = %338, %329
  %342 = phi i64 [ %336, %338 ], [ 4611686018427387903, %329 ]
  %343 = shl i64 %342, 2
  %344 = call i8* @_Znwm(i64 %343) #16
  %345 = bitcast i8* %344 to i32*
  br label %346

346:                                              ; preds = %341, %333
  %347 = phi i64 [ %342, %341 ], [ 0, %333 ]
  %348 = phi i8* [ %344, %341 ], [ null, %333 ]
  %349 = phi i32* [ %345, %341 ], [ null, %333 ]
  %350 = getelementptr inbounds i32, i32* %349, i64 %324
  %351 = getelementptr inbounds i32, i32* %349, i64 %347
  %352 = ptrtoint i32* %351 to i64
  store i32 %312, i32* %350, align 4
  %353 = getelementptr inbounds i32, i32* %350, i64 1
  %354 = ptrtoint i32* %353 to i64
  %355 = ptrtoint i32* %349 to i64
  %356 = icmp sgt i64 %323, 0
  br i1 %356, label %357, label %359

357:                                              ; preds = %346
  %358 = inttoptr i64 %322 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %348, i8* align 4 %358, i64 %323, i1 false) #14
  br label %359

359:                                              ; preds = %357, %346
  store i64 %355, i64* %250, align 8
  store i64 %354, i64* %249, align 8
  store i64 %352, i64* %251, align 8
  %360 = icmp eq i64 %322, 0
  br i1 %360, label %363, label %361

361:                                              ; preds = %359
  %362 = inttoptr i64 %322 to i8*
  call void @_ZdlPv(i8* %362) #16
  br label %363

363:                                              ; preds = %317, %359, %361
  %364 = icmp eq %"class.SkSL::SPIRVCodeGenerator::LValue"* %307, null
  br i1 %364, label %422, label %365

365:                                              ; preds = %363
  %366 = bitcast %"class.SkSL::SPIRVCodeGenerator::LValue"* %307 to void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)***
  %367 = load void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)**, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*** %366, align 8
  %368 = getelementptr inbounds void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)** %367, i64 1
  %369 = load void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)** %368, align 8
  call void %369(%"class.SkSL::SPIRVCodeGenerator::LValue"* nonnull %307) #14
  br label %422

370:                                              ; preds = %290
  %371 = call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %305, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %372 = load i32*, i32** %239, align 8
  %373 = load i32*, i32** %240, align 8
  %374 = icmp ult i32* %372, %373
  %375 = ptrtoint i32* %373 to i64
  br i1 %374, label %376, label %379

376:                                              ; preds = %370
  store i32 %371, i32* %372, align 4
  %377 = getelementptr inbounds i32, i32* %372, i64 1
  %378 = ptrtoint i32* %377 to i64
  store i64 %378, i64* %249, align 8
  br label %422

379:                                              ; preds = %370
  %380 = ptrtoint i32* %372 to i64
  %381 = load i64, i64* %250, align 8
  %382 = sub i64 %380, %381
  %383 = ashr exact i64 %382, 2
  %384 = add nsw i64 %383, 1
  %385 = icmp ugt i64 %384, 4611686018427387903
  br i1 %385, label %386, label %388

386:                                              ; preds = %379
  %387 = bitcast %"class.std::__1::vector.382"* %21 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %387) #15
  unreachable

388:                                              ; preds = %379
  %389 = sub i64 %375, %381
  %390 = ashr exact i64 %389, 2
  %391 = icmp ult i64 %390, 2305843009213693951
  br i1 %391, label %392, label %400

392:                                              ; preds = %388
  %393 = ashr exact i64 %389, 1
  %394 = icmp ult i64 %393, %384
  %395 = select i1 %394, i64 %384, i64 %393
  %396 = icmp eq i64 %395, 0
  br i1 %396, label %405, label %397

397:                                              ; preds = %392
  %398 = icmp ugt i64 %395, 4611686018427387903
  br i1 %398, label %399, label %400

399:                                              ; preds = %397
  call void @abort() #15
  unreachable

400:                                              ; preds = %397, %388
  %401 = phi i64 [ %395, %397 ], [ 4611686018427387903, %388 ]
  %402 = shl i64 %401, 2
  %403 = call i8* @_Znwm(i64 %402) #16
  %404 = bitcast i8* %403 to i32*
  br label %405

405:                                              ; preds = %400, %392
  %406 = phi i64 [ %401, %400 ], [ 0, %392 ]
  %407 = phi i8* [ %403, %400 ], [ null, %392 ]
  %408 = phi i32* [ %404, %400 ], [ null, %392 ]
  %409 = getelementptr inbounds i32, i32* %408, i64 %383
  %410 = getelementptr inbounds i32, i32* %408, i64 %406
  %411 = ptrtoint i32* %410 to i64
  store i32 %371, i32* %409, align 4
  %412 = getelementptr inbounds i32, i32* %409, i64 1
  %413 = ptrtoint i32* %412 to i64
  %414 = ptrtoint i32* %408 to i64
  %415 = icmp sgt i64 %382, 0
  br i1 %415, label %416, label %418

416:                                              ; preds = %405
  %417 = inttoptr i64 %381 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %407, i8* align 4 %417, i64 %382, i1 false) #14
  br label %418

418:                                              ; preds = %416, %405
  store i64 %414, i64* %250, align 8
  store i64 %413, i64* %249, align 8
  store i64 %411, i64* %251, align 8
  %419 = icmp eq i64 %381, 0
  br i1 %419, label %422, label %420

420:                                              ; preds = %418
  %421 = inttoptr i64 %381 to i8*
  call void @_ZdlPv(i8* %421) #16
  br label %422

422:                                              ; preds = %420, %418, %376, %365, %363
  %423 = add nuw nsw i64 %291, 1
  %424 = load i64, i64* %120, align 8
  %425 = lshr i64 %424, 1
  %426 = and i64 %425, 2147483647
  %427 = icmp ult i64 %423, %426
  br i1 %427, label %290, label %252

428:                                              ; preds = %437
  %429 = load i32*, i32** %238, align 8
  br label %430

430:                                              ; preds = %428, %255
  %431 = phi i32* [ %429, %428 ], [ %285, %255 ]
  %432 = icmp eq i32* %431, null
  br i1 %432, label %436, label %433

433:                                              ; preds = %430
  %434 = ptrtoint i32* %431 to i64
  store i64 %434, i64* %256, align 8
  %435 = bitcast i32* %431 to i8*
  call void @_ZdlPv(i8* %435) #16
  br label %436

436:                                              ; preds = %430, %433
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %237) #14
  br label %755

437:                                              ; preds = %288, %437
  %438 = phi i32* [ %285, %288 ], [ %443, %437 ]
  %439 = load i32, i32* %438, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %289)
  store i32 %439, i32* %10, align 4
  %440 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %267, align 8
  %441 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %440, i64 3
  %442 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %441, align 8
  call void %442(%"class.SkSL::OutputStream"* %2, i8* nonnull %289, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %289)
  %443 = getelementptr inbounds i32, i32* %438, i64 1
  %444 = icmp eq i32* %443, %286
  br i1 %444, label %428, label %437

445:                                              ; preds = %177
  %446 = icmp eq i32 %180, 148
  br i1 %446, label %447, label %461

447:                                              ; preds = %445
  %448 = bitcast i8* %118 to %"class.std::__1::unique_ptr.336"**
  %449 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %448, align 8
  %450 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %449, i64 0, i32 0, i32 0, i32 0
  %451 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %450, align 8
  %452 = bitcast %"class.SkSL::Expression"* %451 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %453 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %452, align 8
  %454 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %453, i64 3
  %455 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %454, align 8
  %456 = tail call dereferenceable(184) %"class.SkSL::Type"* %455(%"class.SkSL::Expression"* %451) #14
  %457 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %456, i64 0, i32 3
  %458 = load i32, i32* %457, align 8
  %459 = icmp eq i32 %458, 8
  %460 = select i1 %459, i32 133, i32 148
  br label %461

461:                                              ; preds = %447, %445
  %462 = phi i32 [ %180, %445 ], [ %460, %447 ]
  %463 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 0, i32 1
  %464 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %463, align 8
  %465 = icmp eq %"class.SkSL::Type"* %464, null
  br i1 %465, label %514, label %466

466:                                              ; preds = %461
  %467 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %464, i64 0, i32 6
  %468 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %467, align 8
  %469 = icmp eq %"class.SkSL::Type"* %468, null
  %470 = select i1 %469, %"class.SkSL::Type"* %464, %"class.SkSL::Type"* %468
  %471 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %470, i64 0, i32 4
  %472 = load i32, i32* %471, align 4
  %473 = icmp ult i32 %472, 3
  br i1 %473, label %478, label %474

474:                                              ; preds = %466
  %475 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %464, i64 0, i32 3
  %476 = load i32, i32* %475, align 8
  %477 = icmp eq i32 %476, 6
  br i1 %477, label %478, label %514

478:                                              ; preds = %474, %466
  br i1 %469, label %484, label %479

479:                                              ; preds = %478, %479
  %480 = phi %"class.SkSL::Type"* [ %482, %479 ], [ %468, %478 ]
  %481 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %480, i64 0, i32 6
  %482 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %481, align 8
  %483 = icmp eq %"class.SkSL::Type"* %482, null
  br i1 %483, label %484, label %479

484:                                              ; preds = %479, %478
  %485 = phi %"class.SkSL::Type"* [ %464, %478 ], [ %480, %479 ]
  %486 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %485, i64 0, i32 16
  %487 = load i8, i8* %486, align 8, !range !2
  %488 = icmp eq i8 %487, 0
  br i1 %488, label %489, label %514

489:                                              ; preds = %484
  %490 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 1
  %491 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %490, align 8
  %492 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %491, i64 0, i32 1, i32 0, i32 0, i32 0
  %493 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %492, align 8
  %494 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %493, i64 0, i32 1, i32 3
  %495 = load i8, i8* %494, align 1, !range !2
  %496 = icmp eq i8 %495, 0
  br i1 %496, label %497, label %514

497:                                              ; preds = %489
  %498 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %499 = load i32, i32* %498, align 8
  %500 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %501 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %501) #14
  store i32 196679, i32* %7, align 4
  %502 = bitcast %"class.SkSL::OutputStream"* %500 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %503 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %502, align 8
  %504 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %503, i64 3
  %505 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %504, align 8
  call void %505(%"class.SkSL::OutputStream"* %500, i8* nonnull %501, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %501) #14
  %506 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %506) #14
  store i32 %499, i32* %9, align 4
  %507 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %502, align 8
  %508 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %507, i64 3
  %509 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %508, align 8
  call void %509(%"class.SkSL::OutputStream"* %500, i8* nonnull %506, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %506) #14
  %510 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %510) #14
  store i32 0, i32* %8, align 4
  %511 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %502, align 8
  %512 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %511, i64 3
  %513 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %512, align 8
  call void %513(%"class.SkSL::OutputStream"* %500, i8* nonnull %510, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %510) #14
  br label %514

514:                                              ; preds = %461, %474, %484, %489, %497
  %515 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %516 = load i32, i32* %515, align 8
  %517 = add i32 %516, 1
  store i32 %517, i32* %515, align 8
  %518 = bitcast %"class.std::__1::vector.382"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %518) #14
  %519 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %22, i64 0, i32 0, i32 0
  %520 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %22, i64 0, i32 0, i32 1
  %521 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %22, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %518, i8 0, i64 24, i1 false) #14
  %522 = load i64, i64* %120, align 8
  %523 = and i64 %522, 4294967294
  %524 = icmp eq i64 %523, 0
  br i1 %524, label %533, label %525

525:                                              ; preds = %514
  %526 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %27, i64 0, i32 3, i32 0, i32 0
  %527 = bitcast i8* %118 to %"class.std::__1::unique_ptr.336"**
  %528 = bitcast i32** %520 to i64*
  %529 = bitcast %"class.std::__1::vector.382"* %22 to i64*
  %530 = bitcast i32** %521 to i64*
  br label %539

531:                                              ; preds = %671
  %532 = trunc i64 %675 to i32
  br label %533

533:                                              ; preds = %531, %514
  %534 = phi i32 [ 0, %514 ], [ %532, %531 ]
  %535 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %463, align 8
  %536 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %535, i64 0, i32 3
  %537 = load i32, i32* %536, align 8
  %538 = icmp eq i32 %537, 12
  br i1 %538, label %691, label %677

539:                                              ; preds = %525, %671
  %540 = phi i64 [ 0, %525 ], [ %672, %671 ]
  %541 = load %"class.SkSL::Variable"**, %"class.SkSL::Variable"*** %526, align 8
  %542 = getelementptr inbounds %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %541, i64 %540
  %543 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %542, align 8
  %544 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %543, i64 0, i32 2
  %545 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %544, align 8
  %546 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %545, i64 0, i32 1
  %547 = load i32, i32* %546, align 8
  %548 = and i32 %547, 4
  %549 = icmp eq i32 %548, 0
  %550 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %527, align 8
  %551 = shl i64 %540, 32
  %552 = ashr exact i64 %551, 32
  %553 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %550, i64 %552, i32 0, i32 0, i32 0
  %554 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %553, align 8
  br i1 %549, label %619, label %555

555:                                              ; preds = %539
  %556 = call %"class.SkSL::SPIRVCodeGenerator::LValue"* @_ZN4SkSL18SPIRVCodeGenerator9getLValueERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %554, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %557 = bitcast %"class.SkSL::SPIRVCodeGenerator::LValue"* %556 to i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*)***
  %558 = load i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*)**, i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*** %557, align 8
  %559 = getelementptr inbounds i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*, i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*)** %558, i64 2
  %560 = load i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*, i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*)** %559, align 8
  %561 = call i32 %560(%"class.SkSL::SPIRVCodeGenerator::LValue"* %556) #14
  %562 = load i32*, i32** %520, align 8
  %563 = load i32*, i32** %521, align 8
  %564 = icmp ult i32* %562, %563
  %565 = ptrtoint i32* %563 to i64
  br i1 %564, label %566, label %569

566:                                              ; preds = %555
  store i32 %561, i32* %562, align 4
  %567 = getelementptr inbounds i32, i32* %562, i64 1
  %568 = ptrtoint i32* %567 to i64
  store i64 %568, i64* %528, align 8
  br label %612

569:                                              ; preds = %555
  %570 = ptrtoint i32* %562 to i64
  %571 = load i64, i64* %529, align 8
  %572 = sub i64 %570, %571
  %573 = ashr exact i64 %572, 2
  %574 = add nsw i64 %573, 1
  %575 = icmp ugt i64 %574, 4611686018427387903
  br i1 %575, label %576, label %578

576:                                              ; preds = %569
  %577 = bitcast %"class.std::__1::vector.382"* %22 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %577) #15
  unreachable

578:                                              ; preds = %569
  %579 = sub i64 %565, %571
  %580 = ashr exact i64 %579, 2
  %581 = icmp ult i64 %580, 2305843009213693951
  br i1 %581, label %582, label %590

582:                                              ; preds = %578
  %583 = ashr exact i64 %579, 1
  %584 = icmp ult i64 %583, %574
  %585 = select i1 %584, i64 %574, i64 %583
  %586 = icmp eq i64 %585, 0
  br i1 %586, label %595, label %587

587:                                              ; preds = %582
  %588 = icmp ugt i64 %585, 4611686018427387903
  br i1 %588, label %589, label %590

589:                                              ; preds = %587
  call void @abort() #15
  unreachable

590:                                              ; preds = %587, %578
  %591 = phi i64 [ %585, %587 ], [ 4611686018427387903, %578 ]
  %592 = shl i64 %591, 2
  %593 = call i8* @_Znwm(i64 %592) #16
  %594 = bitcast i8* %593 to i32*
  br label %595

595:                                              ; preds = %590, %582
  %596 = phi i64 [ %591, %590 ], [ 0, %582 ]
  %597 = phi i8* [ %593, %590 ], [ null, %582 ]
  %598 = phi i32* [ %594, %590 ], [ null, %582 ]
  %599 = getelementptr inbounds i32, i32* %598, i64 %573
  %600 = getelementptr inbounds i32, i32* %598, i64 %596
  %601 = ptrtoint i32* %600 to i64
  store i32 %561, i32* %599, align 4
  %602 = getelementptr inbounds i32, i32* %599, i64 1
  %603 = ptrtoint i32* %602 to i64
  %604 = ptrtoint i32* %598 to i64
  %605 = icmp sgt i64 %572, 0
  br i1 %605, label %606, label %608

606:                                              ; preds = %595
  %607 = inttoptr i64 %571 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %597, i8* align 4 %607, i64 %572, i1 false) #14
  br label %608

608:                                              ; preds = %606, %595
  store i64 %604, i64* %529, align 8
  store i64 %603, i64* %528, align 8
  store i64 %601, i64* %530, align 8
  %609 = icmp eq i64 %571, 0
  br i1 %609, label %612, label %610

610:                                              ; preds = %608
  %611 = inttoptr i64 %571 to i8*
  call void @_ZdlPv(i8* %611) #16
  br label %612

612:                                              ; preds = %566, %608, %610
  %613 = icmp eq %"class.SkSL::SPIRVCodeGenerator::LValue"* %556, null
  br i1 %613, label %671, label %614

614:                                              ; preds = %612
  %615 = bitcast %"class.SkSL::SPIRVCodeGenerator::LValue"* %556 to void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)***
  %616 = load void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)**, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*** %615, align 8
  %617 = getelementptr inbounds void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)** %616, i64 1
  %618 = load void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)** %617, align 8
  call void %618(%"class.SkSL::SPIRVCodeGenerator::LValue"* nonnull %556) #14
  br label %671

619:                                              ; preds = %539
  %620 = call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %554, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %621 = load i32*, i32** %520, align 8
  %622 = load i32*, i32** %521, align 8
  %623 = icmp ult i32* %621, %622
  %624 = ptrtoint i32* %622 to i64
  br i1 %623, label %625, label %628

625:                                              ; preds = %619
  store i32 %620, i32* %621, align 4
  %626 = getelementptr inbounds i32, i32* %621, i64 1
  %627 = ptrtoint i32* %626 to i64
  store i64 %627, i64* %528, align 8
  br label %671

628:                                              ; preds = %619
  %629 = ptrtoint i32* %621 to i64
  %630 = load i64, i64* %529, align 8
  %631 = sub i64 %629, %630
  %632 = ashr exact i64 %631, 2
  %633 = add nsw i64 %632, 1
  %634 = icmp ugt i64 %633, 4611686018427387903
  br i1 %634, label %635, label %637

635:                                              ; preds = %628
  %636 = bitcast %"class.std::__1::vector.382"* %22 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %636) #15
  unreachable

637:                                              ; preds = %628
  %638 = sub i64 %624, %630
  %639 = ashr exact i64 %638, 2
  %640 = icmp ult i64 %639, 2305843009213693951
  br i1 %640, label %641, label %649

641:                                              ; preds = %637
  %642 = ashr exact i64 %638, 1
  %643 = icmp ult i64 %642, %633
  %644 = select i1 %643, i64 %633, i64 %642
  %645 = icmp eq i64 %644, 0
  br i1 %645, label %654, label %646

646:                                              ; preds = %641
  %647 = icmp ugt i64 %644, 4611686018427387903
  br i1 %647, label %648, label %649

648:                                              ; preds = %646
  call void @abort() #15
  unreachable

649:                                              ; preds = %646, %637
  %650 = phi i64 [ %644, %646 ], [ 4611686018427387903, %637 ]
  %651 = shl i64 %650, 2
  %652 = call i8* @_Znwm(i64 %651) #16
  %653 = bitcast i8* %652 to i32*
  br label %654

654:                                              ; preds = %649, %641
  %655 = phi i64 [ %650, %649 ], [ 0, %641 ]
  %656 = phi i8* [ %652, %649 ], [ null, %641 ]
  %657 = phi i32* [ %653, %649 ], [ null, %641 ]
  %658 = getelementptr inbounds i32, i32* %657, i64 %632
  %659 = getelementptr inbounds i32, i32* %657, i64 %655
  %660 = ptrtoint i32* %659 to i64
  store i32 %620, i32* %658, align 4
  %661 = getelementptr inbounds i32, i32* %658, i64 1
  %662 = ptrtoint i32* %661 to i64
  %663 = ptrtoint i32* %657 to i64
  %664 = icmp sgt i64 %631, 0
  br i1 %664, label %665, label %667

665:                                              ; preds = %654
  %666 = inttoptr i64 %630 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %656, i8* align 4 %666, i64 %631, i1 false) #14
  br label %667

667:                                              ; preds = %665, %654
  store i64 %663, i64* %529, align 8
  store i64 %662, i64* %528, align 8
  store i64 %660, i64* %530, align 8
  %668 = icmp eq i64 %630, 0
  br i1 %668, label %671, label %669

669:                                              ; preds = %667
  %670 = inttoptr i64 %630 to i8*
  call void @_ZdlPv(i8* %670) #16
  br label %671

671:                                              ; preds = %669, %667, %625, %614, %612
  %672 = add nuw nsw i64 %540, 1
  %673 = load i64, i64* %120, align 8
  %674 = lshr i64 %673, 1
  %675 = and i64 %674, 2147483647
  %676 = icmp ult i64 %672, %675
  br i1 %676, label %539, label %531

677:                                              ; preds = %533
  %678 = add nuw nsw i32 %534, 3
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 %462, i32 %678, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %679 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %463, align 8
  %680 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %681 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %679, %"class.SkSL::MemoryLayout"* dereferenceable(4) %680) #14
  %682 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %682)
  store i32 %681, i32* %6, align 4
  %683 = bitcast %"class.SkSL::OutputStream"* %2 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %684 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %683, align 8
  %685 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %684, i64 3
  %686 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %685, align 8
  call void %686(%"class.SkSL::OutputStream"* %2, i8* nonnull %682, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %682)
  %687 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %687)
  store i32 %516, i32* %5, align 4
  %688 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %683, align 8
  %689 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %688, i64 3
  %690 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %689, align 8
  call void %690(%"class.SkSL::OutputStream"* %2, i8* nonnull %687, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %687)
  br label %693

691:                                              ; preds = %533
  %692 = add nuw nsw i32 %534, 1
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 %462, i32 %692, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  br label %693

693:                                              ; preds = %691, %677
  %694 = load i32*, i32** %519, align 8
  %695 = load i32*, i32** %520, align 8
  %696 = icmp eq i32* %694, %695
  br i1 %696, label %702, label %697

697:                                              ; preds = %693
  %698 = bitcast i32* %4 to i8*
  %699 = bitcast %"class.SkSL::OutputStream"* %2 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  br label %710

700:                                              ; preds = %710
  %701 = load i32*, i32** %519, align 8
  br label %702

702:                                              ; preds = %700, %693
  %703 = phi i32* [ %701, %700 ], [ %694, %693 ]
  %704 = icmp eq i32* %703, null
  br i1 %704, label %709, label %705

705:                                              ; preds = %702
  %706 = ptrtoint i32* %703 to i64
  %707 = bitcast i32** %520 to i64*
  store i64 %706, i64* %707, align 8
  %708 = bitcast i32* %703 to i8*
  call void @_ZdlPv(i8* %708) #16
  br label %709

709:                                              ; preds = %702, %705
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %518) #14
  br label %755

710:                                              ; preds = %697, %710
  %711 = phi i32* [ %694, %697 ], [ %716, %710 ]
  %712 = load i32, i32* %711, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %698)
  store i32 %712, i32* %4, align 4
  %713 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %699, align 8
  %714 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %713, i64 3
  %715 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %714, align 8
  call void %715(%"class.SkSL::OutputStream"* %2, i8* nonnull %698, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %698)
  %716 = getelementptr inbounds i32, i32* %711, i64 1
  %717 = icmp eq i32* %716, %695
  br i1 %717, label %700, label %710

718:                                              ; preds = %177
  %719 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator21writeSpecialIntrinsicERKNS_12FunctionCallENS0_16SpecialIntrinsicERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::FunctionCall"* dereferenceable(64) %1, i32 %180, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  br label %755

720:                                              ; preds = %177
  %721 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 2
  %722 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %721, align 8
  %723 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 0, i32 0, i32 1
  %724 = load i32, i32* %723, align 8
  %725 = bitcast %"class.SkSL::String"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %725) #14
  %726 = bitcast %"class.SkSL::String"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %726) #14
  call void @_ZNK4SkSL19FunctionDeclaration11descriptionEv(%"class.SkSL::String"* nonnull sret %25, %"class.SkSL::FunctionDeclaration"* %27) #14
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %24, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.10, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %25) #14
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %23, %"class.SkSL::String"* nonnull %24, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0)) #14
  %727 = bitcast %"class.SkSL::ErrorReporter"* %722 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %728 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %727, align 8
  %729 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %728, i64 2
  %730 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %729, align 8
  call void %730(%"class.SkSL::ErrorReporter"* %722, i32 %724, %"class.SkSL::String"* nonnull %23) #14
  %731 = bitcast %"class.SkSL::String"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %732 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %731, i64 0, i32 1, i32 0
  %733 = load i8, i8* %732, align 1
  %734 = icmp slt i8 %733, 0
  br i1 %734, label %735, label %738

735:                                              ; preds = %720
  %736 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %737 = load i8*, i8** %736, align 8
  call void @_ZdlPv(i8* %737) #16
  br label %738

738:                                              ; preds = %720, %735
  %739 = bitcast %"class.SkSL::String"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %740 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %739, i64 0, i32 1, i32 0
  %741 = load i8, i8* %740, align 1
  %742 = icmp slt i8 %741, 0
  br i1 %742, label %743, label %746

743:                                              ; preds = %738
  %744 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %745 = load i8*, i8** %744, align 8
  call void @_ZdlPv(i8* %745) #16
  br label %746

746:                                              ; preds = %738, %743
  %747 = bitcast %"class.SkSL::String"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %748 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %747, i64 0, i32 1, i32 0
  %749 = load i8, i8* %748, align 1
  %750 = icmp slt i8 %749, 0
  br i1 %750, label %751, label %754

751:                                              ; preds = %746
  %752 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %753 = load i8*, i8** %752, align 8
  call void @_ZdlPv(i8* %753) #16
  br label %754

754:                                              ; preds = %746, %751
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %726) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %725) #14
  br label %755

755:                                              ; preds = %436, %709, %718, %754, %116
  %756 = phi i32 [ -1, %116 ], [ -1, %754 ], [ %719, %718 ], [ %516, %709 ], [ %235, %436 ]
  ret i32 %756
}

declare void @_ZNK4SkSL19FunctionDeclaration11descriptionEv(%"class.SkSL::String"* sret, %"class.SkSL::FunctionDeclaration"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL10Expression4typeEv(%"class.SkSL::Expression"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %0, i64 0, i32 1
  %3 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %2, align 8
  ret %"class.SkSL::Type"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::SPIRVCodeGenerator::LValue"* @_ZN4SkSL18SPIRVCodeGenerator9getLValueERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::Expression"* dereferenceable(24), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca [15 x i8], align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca %"class.SkSL::Literal", align 8
  %23 = alloca %"class.SkSL::String", align 8
  %24 = alloca %"class.SkSL::MemoryLayout", align 4
  %25 = alloca %"class.std::__1::vector.382", align 8
  %26 = alloca %"class.SkSL::Literal", align 8
  %27 = bitcast %"class.SkSL::Expression"* %1 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %28 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %27, align 8
  %29 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %28, i64 3
  %30 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %29, align 8
  %31 = tail call dereferenceable(184) %"class.SkSL::Type"* %30(%"class.SkSL::Expression"* %1) #14
  br label %32

32:                                               ; preds = %32, %3
  %33 = phi %"class.SkSL::Type"* [ %31, %3 ], [ %35, %32 ]
  %34 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %33, i64 0, i32 6
  %35 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %34, align 8
  %36 = icmp eq %"class.SkSL::Type"* %35, null
  br i1 %36, label %37, label %32

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %33, i64 0, i32 16
  %39 = load i8, i8* %38, align 8, !range !2
  %40 = xor i8 %39, 1
  %41 = zext i8 %40 to i32
  %42 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  switch i32 %43, label %625 [
    i32 55, label %44
    i32 48, label %322
    i32 44, label %322
    i32 52, label %432
  ]

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 1
  %46 = bitcast %"class.SkSL::Expression"* %45 to %"class.SkSL::Variable"**
  %47 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %46, align 8
  %48 = ptrtoint %"class.SkSL::Variable"* %47 to i64
  %49 = lshr i64 %48, 32
  %50 = shl i64 %48, 3
  %51 = and i64 %50, 4294967288
  %52 = add nuw nsw i64 %51, 8
  %53 = xor i64 %52, %49
  %54 = mul i64 %53, -7070675565921424023
  %55 = lshr i64 %54, 47
  %56 = xor i64 %54, %49
  %57 = xor i64 %56, %55
  %58 = mul i64 %57, -7070675565921424023
  %59 = lshr i64 %58, 47
  %60 = xor i64 %59, %58
  %61 = mul i64 %60, -7070675565921424023
  %62 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 38, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %170, label %65

65:                                               ; preds = %44
  %66 = tail call i64 @llvm.ctpop.i64(i64 %63) #14, !range !12
  %67 = icmp ugt i64 %66, 1
  br i1 %67, label %71, label %68

68:                                               ; preds = %65
  %69 = add i64 %63, -1
  %70 = and i64 %61, %69
  br label %75

71:                                               ; preds = %65
  %72 = icmp ult i64 %61, %63
  br i1 %72, label %75, label %73

73:                                               ; preds = %71
  %74 = urem i64 %61, %63
  br label %75

75:                                               ; preds = %73, %71, %68
  %76 = phi i64 [ %70, %68 ], [ %74, %73 ], [ %61, %71 ]
  %77 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 38, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load %"struct.std::__1::__hash_node_base.194"**, %"struct.std::__1::__hash_node_base.194"*** %77, align 8
  %79 = getelementptr inbounds %"struct.std::__1::__hash_node_base.194"*, %"struct.std::__1::__hash_node_base.194"** %78, i64 %76
  %80 = load %"struct.std::__1::__hash_node_base.194"*, %"struct.std::__1::__hash_node_base.194"** %79, align 8
  %81 = icmp eq %"struct.std::__1::__hash_node_base.194"* %80, null
  br i1 %81, label %170, label %82

82:                                               ; preds = %75
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.194", %"struct.std::__1::__hash_node_base.194"* %80, i64 0, i32 0
  %84 = load %"struct.std::__1::__hash_node_base.194"*, %"struct.std::__1::__hash_node_base.194"** %83, align 8
  %85 = icmp eq %"struct.std::__1::__hash_node_base.194"* %84, null
  br i1 %85, label %170, label %86

86:                                               ; preds = %82
  %87 = add i64 %63, -1
  br label %88

88:                                               ; preds = %109, %86
  %89 = phi %"struct.std::__1::__hash_node_base.194"* [ %84, %86 ], [ %111, %109 ]
  %90 = getelementptr inbounds %"struct.std::__1::__hash_node_base.194", %"struct.std::__1::__hash_node_base.194"* %89, i64 1
  %91 = bitcast %"struct.std::__1::__hash_node_base.194"* %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = icmp eq i64 %61, %92
  br i1 %93, label %104, label %94

94:                                               ; preds = %88
  br i1 %67, label %97, label %95

95:                                               ; preds = %94
  %96 = and i64 %92, %87
  br label %101

97:                                               ; preds = %94
  %98 = icmp ult i64 %92, %63
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %92, %63
  br label %101

101:                                              ; preds = %99, %97, %95
  %102 = phi i64 [ %96, %95 ], [ %100, %99 ], [ %92, %97 ]
  %103 = icmp eq i64 %102, %76
  br i1 %103, label %109, label %170

104:                                              ; preds = %88
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base.194", %"struct.std::__1::__hash_node_base.194"* %89, i64 2
  %106 = bitcast %"struct.std::__1::__hash_node_base.194"* %105 to %"class.SkSL::Variable"**
  %107 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %106, align 8
  %108 = icmp eq %"class.SkSL::Variable"* %107, %47
  br i1 %108, label %113, label %109

109:                                              ; preds = %104, %101
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.194", %"struct.std::__1::__hash_node_base.194"* %89, i64 0, i32 0
  %111 = load %"struct.std::__1::__hash_node_base.194"*, %"struct.std::__1::__hash_node_base.194"** %110, align 8
  %112 = icmp eq %"struct.std::__1::__hash_node_base.194"* %111, null
  br i1 %112, label %170, label %88

113:                                              ; preds = %104
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base.194", %"struct.std::__1::__hash_node_base.194"* %89, i64 3
  %115 = bitcast %"struct.std::__1::__hash_node_base.194"* %114 to i32*
  %116 = load i32, i32* %115, align 8
  %117 = icmp sgt i32 %116, -1
  br i1 %117, label %118, label %170

118:                                              ; preds = %113
  %119 = bitcast %"class.SkSL::Literal"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %119) #14
  %120 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %22, i64 0, i32 0, i32 0, i32 0
  %121 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %22, i64 0, i32 0, i32 0, i32 1
  %122 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %22, i64 0, i32 0, i32 0, i32 2
  %123 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %22, i64 0, i32 0, i32 1
  %124 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %22, i64 0, i32 1
  %125 = sext i32 %116 to i64
  %126 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 1
  %127 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %126, align 8
  %128 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %127, i64 0, i32 0, i32 8, i32 0, i32 0, i32 0
  %129 = bitcast %"class.SkSL::Type"** %128 to i64*
  %130 = load i64, i64* %129, align 8
  store i32 -1, i32* %121, align 8
  store i32 43, i32* %122, align 4
  %131 = bitcast %"class.SkSL::Type"** %123 to i64*
  store i64 %130, i64* %131, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIlEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %120, align 8
  store i64 %125, i64* %124, align 8
  %132 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %133 = load i32, i32* %132, align 8
  %134 = add i32 %133, 1
  store i32 %134, i32* %132, align 8
  %135 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %136 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator14getPointerTypeERKNS_4TypeERKNS_12MemoryLayoutE16SpvStorageClass_(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %31, %"class.SkSL::MemoryLayout"* dereferenceable(4) %135, i32 2) #14
  %137 = call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeIntLiteralERKNS_7LiteralIlEE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Literal"* nonnull dereferenceable(32) %22)
  %138 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 39
  %139 = load i32, i32* %138, align 8
  tail call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 65, i32 5, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %140 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %140) #14
  store i32 %136, i32* %16, align 4
  %141 = bitcast %"class.SkSL::OutputStream"* %2 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %142 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %141, align 8
  %143 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %142, i64 3
  %144 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %143, align 8
  call void %144(%"class.SkSL::OutputStream"* %2, i8* nonnull %140, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %140) #14
  %145 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %145) #14
  store i32 %133, i32* %15, align 4
  %146 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %141, align 8
  %147 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %146, i64 3
  %148 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %147, align 8
  call void %148(%"class.SkSL::OutputStream"* %2, i8* nonnull %145, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %145) #14
  %149 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %149) #14
  store i32 %139, i32* %14, align 4
  %150 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %141, align 8
  %151 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %150, i64 3
  %152 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %151, align 8
  call void %152(%"class.SkSL::OutputStream"* %2, i8* nonnull %149, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %149) #14
  %153 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %153) #14
  store i32 %137, i32* %13, align 4
  %154 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %141, align 8
  %155 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %154, i64 3
  %156 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %155, align 8
  call void %156(%"class.SkSL::OutputStream"* %2, i8* nonnull %153, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %153) #14
  %157 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %31, %"class.SkSL::MemoryLayout"* dereferenceable(4) %135) #14
  %158 = call i8* @_Znwm(i64 32) #16
  %159 = bitcast i8* %158 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN4SkSL13PointerLValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %159, align 8
  %160 = getelementptr inbounds i8, i8* %158, i64 8
  %161 = bitcast i8* %160 to %"class.SkSL::SPIRVCodeGenerator"**
  store %"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::SPIRVCodeGenerator"** %161, align 8
  %162 = getelementptr inbounds i8, i8* %158, i64 16
  %163 = bitcast i8* %162 to i32*
  store i32 %133, i32* %163, align 8
  %164 = getelementptr inbounds i8, i8* %158, i64 20
  store i8 1, i8* %164, align 4
  %165 = getelementptr inbounds i8, i8* %158, i64 24
  %166 = bitcast i8* %165 to i32*
  store i32 %157, i32* %166, align 8
  %167 = getelementptr inbounds i8, i8* %158, i64 28
  %168 = bitcast i8* %167 to i32*
  store i32 %41, i32* %168, align 4
  %169 = ptrtoint i8* %158 to i64
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %119) #14
  br label %672

170:                                              ; preds = %109, %101, %82, %44, %75, %113
  %171 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %47, i64 0, i32 2
  %172 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %171, align 8
  %173 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %172, i64 0, i32 0, i32 6
  %174 = load i32, i32* %173, align 8
  %175 = icmp eq i32 %174, 10002
  br i1 %175, label %176, label %239

176:                                              ; preds = %170
  %177 = bitcast %"class.SkSL::String"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %178 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %177, i64 0, i32 1, i32 0
  store i8 5, i8* %178, align 1
  %179 = bitcast %"class.SkSL::String"* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %179, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i64 0, i64 0), i64 5, i1 false) #14
  %180 = getelementptr inbounds i8, i8* %179, i64 5
  store i8 0, i8* %180, align 1
  %181 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %47, i64 0, i32 0, i32 2
  %182 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %181, align 8
  %183 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %182, i64 0, i32 6
  %184 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %183, align 8
  %185 = icmp eq %"class.SkSL::Type"* %184, null
  %186 = select i1 %185, %"class.SkSL::Type"* %182, %"class.SkSL::Type"* %184
  %187 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 34
  %188 = load i32, i32* %187, align 8
  %189 = getelementptr inbounds [15 x i8], [15 x i8]* %12, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %189)
  %190 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 184) #14
  %191 = bitcast i8* %190 to %"class.SkSL::Type"*
  %192 = bitcast %"class.SkSL::String"* %23 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %195 = bitcast i64* %194 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %189, i8* align 8 %195, i64 15, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %179, i8 0, i64 24, i1 false) #14
  %196 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %186, i64 0, i32 1
  %197 = bitcast i8** %196 to i64*
  %198 = load i64, i64* %197, align 8
  %199 = bitcast i8* %190 to i32 (...)***
  %200 = getelementptr inbounds i8, i8* %190, i64 8
  %201 = bitcast i8* %200 to i32*
  store i32 -1, i32* %201, align 8
  %202 = getelementptr inbounds i8, i8* %190, i64 12
  %203 = bitcast i8* %202 to i32*
  store i32 13, i32* %203, align 4
  %204 = getelementptr inbounds i8, i8* %190, i64 16
  %205 = bitcast i8* %204 to i8**
  %206 = getelementptr inbounds i8, i8* %190, i64 24
  %207 = bitcast i8* %206 to i64*
  %208 = getelementptr inbounds i8, i8* %190, i64 32
  %209 = bitcast i8* %208 to i64*
  store i64 0, i64* %209, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %199, align 8
  %210 = getelementptr inbounds i8, i8* %190, i64 40
  %211 = bitcast i8* %210 to i64*
  store i64 %198, i64* %211, align 8
  %212 = getelementptr inbounds i8, i8* %190, i64 48
  %213 = bitcast i8* %212 to i64*
  store i64 %193, i64* %213, align 8
  %214 = getelementptr inbounds i8, i8* %190, i64 56
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %214, i8* nonnull align 8 %189, i64 15, i1 false) #14
  %215 = getelementptr inbounds i8, i8* %190, i64 71
  store i8 5, i8* %215, align 1
  %216 = getelementptr inbounds i8, i8* %190, i64 72
  %217 = bitcast i8* %216 to i32*
  store i32 0, i32* %217, align 8
  %218 = getelementptr inbounds i8, i8* %190, i64 76
  %219 = bitcast i8* %218 to i32*
  store i32 4, i32* %219, align 4
  %220 = getelementptr inbounds i8, i8* %190, i64 80
  %221 = bitcast i8* %220 to i32*
  store i32 -1, i32* %221, align 8
  %222 = getelementptr inbounds i8, i8* %190, i64 88
  %223 = bitcast i8* %222 to %"class.SkSL::Type"**
  store %"class.SkSL::Type"* %186, %"class.SkSL::Type"** %223, align 8
  %224 = getelementptr inbounds i8, i8* %190, i64 96
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %224, i8 0, i64 24, i1 false) #14
  %225 = getelementptr inbounds i8, i8* %190, i64 120
  %226 = bitcast i8* %225 to i32*
  store i32 %188, i32* %226, align 8
  %227 = getelementptr inbounds i8, i8* %190, i64 124
  %228 = bitcast i8* %227 to i32*
  store i32 1, i32* %228, align 4
  %229 = getelementptr inbounds i8, i8* %190, i64 128
  %230 = getelementptr inbounds i8, i8* %190, i64 168
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %229, i8 0, i64 33, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %230, i8 0, i64 16, i1 false) #14
  store i8* %212, i8** %205, align 8
  store i64 5, i64* %207, align 8
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %189)
  %231 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %232 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %191, %"class.SkSL::MemoryLayout"* dereferenceable(4) %231) #14
  %233 = icmp eq i8* %190, null
  br i1 %233, label %252, label %234

234:                                              ; preds = %176
  %235 = bitcast i8* %190 to void (%"class.SkSL::Type"*)***
  %236 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %235, align 8
  %237 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %236, i64 1
  %238 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %237, align 8
  tail call void %238(%"class.SkSL::Type"* nonnull %191) #14
  br label %252

239:                                              ; preds = %170
  %240 = bitcast %"class.SkSL::MemoryLayout"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %240) #14
  %241 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %172, i64 0, i32 0, i32 0
  %242 = load i32, i32* %241, align 8
  %243 = and i32 %242, 2
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %245, label %248

245:                                              ; preds = %239
  %246 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2, i32 0
  %247 = load i32, i32* %246, align 8
  br label %248

248:                                              ; preds = %239, %245
  %249 = phi i32 [ %247, %245 ], [ 1, %239 ]
  %250 = getelementptr inbounds %"class.SkSL::MemoryLayout", %"class.SkSL::MemoryLayout"* %24, i64 0, i32 0
  store i32 %249, i32* %250, align 4
  %251 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %31, %"class.SkSL::MemoryLayout"* nonnull dereferenceable(4) %24)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %240) #14
  br label %252

252:                                              ; preds = %234, %176, %248
  %253 = phi i32 [ %251, %248 ], [ %232, %176 ], [ %232, %234 ]
  %254 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %255 = load i64, i64* %254, align 8
  %256 = icmp eq i64 %255, 0
  br i1 %256, label %305, label %257

257:                                              ; preds = %252
  %258 = call i64 @llvm.ctpop.i64(i64 %255) #14, !range !12
  %259 = icmp ugt i64 %258, 1
  br i1 %259, label %263, label %260

260:                                              ; preds = %257
  %261 = add i64 %255, -1
  %262 = and i64 %261, %61
  br label %267

263:                                              ; preds = %257
  %264 = icmp ult i64 %61, %255
  br i1 %264, label %267, label %265

265:                                              ; preds = %263
  %266 = urem i64 %61, %255
  br label %267

267:                                              ; preds = %265, %263, %260
  %268 = phi i64 [ %262, %260 ], [ %266, %265 ], [ %61, %263 ]
  %269 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %270 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %269, align 8
  %271 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %270, i64 %268
  %272 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %271, align 8
  %273 = icmp eq %"struct.std::__1::__hash_node_base.166"* %272, null
  br i1 %273, label %305, label %274

274:                                              ; preds = %267
  %275 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %272, i64 0, i32 0
  %276 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %275, align 8
  %277 = icmp eq %"struct.std::__1::__hash_node_base.166"* %276, null
  br i1 %277, label %305, label %278

278:                                              ; preds = %274
  %279 = add i64 %255, -1
  br label %280

280:                                              ; preds = %301, %278
  %281 = phi %"struct.std::__1::__hash_node_base.166"* [ %276, %278 ], [ %303, %301 ]
  %282 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %281, i64 1
  %283 = bitcast %"struct.std::__1::__hash_node_base.166"* %282 to i64*
  %284 = load i64, i64* %283, align 8
  %285 = icmp eq i64 %284, %61
  br i1 %285, label %296, label %286

286:                                              ; preds = %280
  br i1 %259, label %289, label %287

287:                                              ; preds = %286
  %288 = and i64 %284, %279
  br label %293

289:                                              ; preds = %286
  %290 = icmp ult i64 %284, %255
  br i1 %290, label %293, label %291

291:                                              ; preds = %289
  %292 = urem i64 %284, %255
  br label %293

293:                                              ; preds = %291, %289, %287
  %294 = phi i64 [ %288, %287 ], [ %292, %291 ], [ %284, %289 ]
  %295 = icmp eq i64 %294, %268
  br i1 %295, label %301, label %305

296:                                              ; preds = %280
  %297 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %281, i64 2
  %298 = bitcast %"struct.std::__1::__hash_node_base.166"* %297 to %"class.SkSL::Variable"**
  %299 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %298, align 8
  %300 = icmp eq %"class.SkSL::Variable"* %299, %47
  br i1 %300, label %305, label %301

301:                                              ; preds = %296, %293
  %302 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %281, i64 0, i32 0
  %303 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %302, align 8
  %304 = icmp eq %"struct.std::__1::__hash_node_base.166"* %303, null
  br i1 %304, label %305, label %280

305:                                              ; preds = %301, %296, %293, %274, %267, %252
  %306 = phi %"struct.std::__1::__hash_node_base.166"* [ null, %267 ], [ null, %252 ], [ null, %274 ], [ %281, %296 ], [ null, %301 ], [ null, %293 ]
  %307 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %306, i64 3
  %308 = bitcast %"struct.std::__1::__hash_node_base.166"* %307 to i32*
  %309 = call i8* @_Znwm(i64 32) #16
  %310 = load i32, i32* %308, align 4
  %311 = bitcast i8* %309 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN4SkSL13PointerLValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %311, align 8
  %312 = getelementptr inbounds i8, i8* %309, i64 8
  %313 = bitcast i8* %312 to %"class.SkSL::SPIRVCodeGenerator"**
  store %"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::SPIRVCodeGenerator"** %313, align 8
  %314 = getelementptr inbounds i8, i8* %309, i64 16
  %315 = bitcast i8* %314 to i32*
  store i32 %310, i32* %315, align 8
  %316 = getelementptr inbounds i8, i8* %309, i64 20
  store i8 1, i8* %316, align 4
  %317 = getelementptr inbounds i8, i8* %309, i64 24
  %318 = bitcast i8* %317 to i32*
  store i32 %253, i32* %318, align 8
  %319 = getelementptr inbounds i8, i8* %309, i64 28
  %320 = bitcast i8* %319 to i32*
  store i32 %41, i32* %320, align 4
  %321 = ptrtoint i8* %309 to i64
  br label %672

322:                                              ; preds = %37, %37
  %323 = bitcast %"class.std::__1::vector.382"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %323) #14
  %324 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %25, i64 0, i32 0, i32 0
  %325 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %25, i64 0, i32 0, i32 1
  %326 = bitcast %"class.std::__1::vector.382"* %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %326, i8 -86, i64 24, i1 false)
  call void @_ZN4SkSL18SPIRVCodeGenerator14getAccessChainERKNS_10ExpressionERNS_12OutputStreamE(%"class.std::__1::vector.382"* nonnull sret %25, %"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %1, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %327 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %328 = load i32, i32* %327, align 8
  %329 = add i32 %328, 1
  store i32 %329, i32* %327, align 8
  %330 = bitcast i32** %325 to i64*
  %331 = load i64, i64* %330, align 8
  %332 = bitcast %"class.std::__1::vector.382"* %25 to i64*
  %333 = load i64, i64* %332, align 8
  %334 = sub i64 %331, %333
  %335 = lshr exact i64 %334, 2
  %336 = trunc i64 %335 to i32
  %337 = add i32 %336, 3
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 65, i32 %337, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  br label %338

338:                                              ; preds = %380, %322
  %339 = phi %"class.SkSL::Expression"* [ %1, %322 ], [ %382, %380 ]
  %340 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %339, i64 0, i32 0, i32 2
  %341 = load i32, i32* %340, align 4
  switch i32 %341, label %386 [
    i32 55, label %342
    i32 44, label %377
    i32 48, label %383
  ]

342:                                              ; preds = %338
  %343 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %339, i64 1
  %344 = bitcast %"class.SkSL::Expression"* %343 to %"class.SkSL::Variable"**
  %345 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %344, align 8
  %346 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %345, i64 0, i32 3
  %347 = load i8, i8* %346, align 8
  %348 = icmp eq i8 %347, 0
  br i1 %348, label %349, label %386

349:                                              ; preds = %342
  %350 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %345, i64 0, i32 2
  %351 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %350, align 8
  %352 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %351, i64 0, i32 1
  %353 = load i32, i32* %352, align 8
  %354 = and i32 %353, 2
  %355 = icmp eq i32 %354, 0
  br i1 %355, label %356, label %386

356:                                              ; preds = %349
  %357 = and i32 %353, 4
  %358 = icmp eq i32 %357, 0
  br i1 %358, label %359, label %386

359:                                              ; preds = %356
  %360 = and i32 %353, 8
  %361 = icmp eq i32 %360, 0
  br i1 %361, label %386, label %362

362:                                              ; preds = %359
  %363 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %351, i64 0, i32 0, i32 0
  %364 = load i32, i32* %363, align 8
  %365 = and i32 %364, 2
  %366 = icmp eq i32 %365, 0
  br i1 %366, label %367, label %386

367:                                              ; preds = %362
  %368 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %345, i64 0, i32 0, i32 2
  %369 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %368, align 8
  %370 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %369, i64 0, i32 3
  %371 = load i32, i32* %370, align 8
  %372 = and i32 %371, -2
  %373 = icmp eq i32 %372, 6
  br i1 %373, label %386, label %374

374:                                              ; preds = %367
  %375 = icmp eq i32 %371, 10
  %376 = select i1 %375, i32 0, i32 2
  br label %386

377:                                              ; preds = %338
  %378 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %339, i64 1, i32 0, i32 1
  %379 = bitcast i32* %378 to %"class.SkSL::Expression"**
  br label %380

380:                                              ; preds = %383, %377
  %381 = phi %"class.SkSL::Expression"** [ %379, %377 ], [ %385, %383 ]
  %382 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %381, align 8
  br label %338

383:                                              ; preds = %338
  %384 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %339, i64 1
  %385 = bitcast %"class.SkSL::Expression"* %384 to %"class.SkSL::Expression"**
  br label %380

386:                                              ; preds = %338, %342, %349, %356, %359, %362, %367, %374
  %387 = phi i32 [ 7, %342 ], [ %376, %374 ], [ 1, %349 ], [ 3, %356 ], [ 9, %362 ], [ 6, %359 ], [ 0, %367 ], [ 7, %338 ]
  %388 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %389 = call i32 @_ZN4SkSL18SPIRVCodeGenerator14getPointerTypeERKNS_4TypeERKNS_12MemoryLayoutE16SpvStorageClass_(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %31, %"class.SkSL::MemoryLayout"* dereferenceable(4) %388, i32 %387) #14
  %390 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %390)
  store i32 %389, i32* %11, align 4
  %391 = bitcast %"class.SkSL::OutputStream"* %2 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %392 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %391, align 8
  %393 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %392, i64 3
  %394 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %393, align 8
  call void %394(%"class.SkSL::OutputStream"* %2, i8* nonnull %390, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %390)
  %395 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %395)
  store i32 %328, i32* %10, align 4
  %396 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %391, align 8
  %397 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %396, i64 3
  %398 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %397, align 8
  call void %398(%"class.SkSL::OutputStream"* %2, i8* nonnull %395, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %395)
  %399 = load i32*, i32** %324, align 8
  %400 = load i32*, i32** %325, align 8
  %401 = icmp eq i32* %399, %400
  br i1 %401, label %404, label %402

402:                                              ; preds = %386
  %403 = bitcast i32* %9 to i8*
  br label %424

404:                                              ; preds = %424, %386
  %405 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %31, %"class.SkSL::MemoryLayout"* dereferenceable(4) %388) #14
  %406 = call i8* @_Znwm(i64 32) #16
  %407 = bitcast i8* %406 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN4SkSL13PointerLValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %407, align 8
  %408 = getelementptr inbounds i8, i8* %406, i64 8
  %409 = bitcast i8* %408 to %"class.SkSL::SPIRVCodeGenerator"**
  store %"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::SPIRVCodeGenerator"** %409, align 8
  %410 = getelementptr inbounds i8, i8* %406, i64 16
  %411 = bitcast i8* %410 to i32*
  store i32 %328, i32* %411, align 8
  %412 = getelementptr inbounds i8, i8* %406, i64 20
  store i8 0, i8* %412, align 4
  %413 = getelementptr inbounds i8, i8* %406, i64 24
  %414 = bitcast i8* %413 to i32*
  store i32 %405, i32* %414, align 8
  %415 = getelementptr inbounds i8, i8* %406, i64 28
  %416 = bitcast i8* %415 to i32*
  store i32 %41, i32* %416, align 4
  %417 = ptrtoint i8* %406 to i64
  %418 = load i32*, i32** %324, align 8
  %419 = icmp eq i32* %418, null
  br i1 %419, label %423, label %420

420:                                              ; preds = %404
  %421 = ptrtoint i32* %418 to i64
  store i64 %421, i64* %330, align 8
  %422 = bitcast i32* %418 to i8*
  call void @_ZdlPv(i8* %422) #16
  br label %423

423:                                              ; preds = %404, %420
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %323) #14
  br label %672

424:                                              ; preds = %402, %424
  %425 = phi i32* [ %399, %402 ], [ %430, %424 ]
  %426 = load i32, i32* %425, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %403)
  store i32 %426, i32* %9, align 4
  %427 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %391, align 8
  %428 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %427, i64 3
  %429 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %428, align 8
  call void %429(%"class.SkSL::OutputStream"* %2, i8* nonnull %403, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %403)
  %430 = getelementptr inbounds i32, i32* %425, i64 1
  %431 = icmp eq i32* %430, %400
  br i1 %431, label %404, label %424

432:                                              ; preds = %37
  %433 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 1
  %434 = bitcast %"class.SkSL::Expression"* %433 to %"class.SkSL::Expression"**
  %435 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %434, align 8
  %436 = tail call %"class.SkSL::SPIRVCodeGenerator::LValue"* @_ZN4SkSL18SPIRVCodeGenerator9getLValueERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %435, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %437 = ptrtoint %"class.SkSL::SPIRVCodeGenerator::LValue"* %436 to i64
  %438 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 1, i32 0, i32 1
  %439 = bitcast i32* %438 to %class.SkSTArray.431*
  %440 = bitcast %"class.SkSL::SPIRVCodeGenerator::LValue"* %436 to i1 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %class.SkSTArray.431*, %"class.SkSL::Type"*)***
  %441 = load i1 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %class.SkSTArray.431*, %"class.SkSL::Type"*)**, i1 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %class.SkSTArray.431*, %"class.SkSL::Type"*)*** %440, align 8
  %442 = getelementptr inbounds i1 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %class.SkSTArray.431*, %"class.SkSL::Type"*)*, i1 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %class.SkSTArray.431*, %"class.SkSL::Type"*)** %441, i64 4
  %443 = load i1 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %class.SkSTArray.431*, %"class.SkSL::Type"*)*, i1 (%"class.SkSL::SPIRVCodeGenerator::LValue"*, %class.SkSTArray.431*, %"class.SkSL::Type"*)** %442, align 8
  %444 = tail call zeroext i1 %443(%"class.SkSL::SPIRVCodeGenerator::LValue"* %436, %class.SkSTArray.431* dereferenceable(24) %439, %"class.SkSL::Type"* dereferenceable(184) %31) #14
  br i1 %444, label %672, label %445

445:                                              ; preds = %432
  %446 = bitcast %"class.SkSL::SPIRVCodeGenerator::LValue"* %436 to i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*)***
  %447 = load i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*)**, i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*** %446, align 8
  %448 = getelementptr inbounds i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*, i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*)** %447, i64 2
  %449 = load i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*, i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*)** %448, align 8
  %450 = tail call i32 %449(%"class.SkSL::SPIRVCodeGenerator::LValue"* %436) #14
  %451 = icmp eq i32 %450, -1
  br i1 %451, label %452, label %457

452:                                              ; preds = %445
  %453 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 2
  %454 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %453, align 8
  %455 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 0, i32 0, i32 1
  %456 = load i32, i32* %455, align 8
  tail call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %454, i32 %456, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.17, i64 0, i64 0))
  br label %457

457:                                              ; preds = %452, %445
  %458 = getelementptr inbounds i32, i32* %438, i64 2
  %459 = getelementptr inbounds i32, i32* %438, i64 4
  %460 = bitcast i32* %459 to i64*
  %461 = load i64, i64* %460, align 8
  %462 = and i64 %461, 4294967294
  %463 = icmp eq i64 %462, 2
  br i1 %463, label %464, label %566

464:                                              ; preds = %457
  %465 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %466 = load i32, i32* %465, align 8
  %467 = add i32 %466, 1
  store i32 %467, i32* %465, align 8
  br label %468

468:                                              ; preds = %514, %464
  %469 = phi %"class.SkSL::Expression"** [ %434, %464 ], [ %515, %514 ]
  %470 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %469, align 8
  %471 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %470, i64 0, i32 0, i32 2
  %472 = load i32, i32* %471, align 4
  switch i32 %472, label %516 [
    i32 55, label %473
    i32 44, label %508
    i32 48, label %511
  ]

473:                                              ; preds = %468
  %474 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %470, i64 1
  %475 = bitcast %"class.SkSL::Expression"* %474 to %"class.SkSL::Variable"**
  %476 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %475, align 8
  %477 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %476, i64 0, i32 3
  %478 = load i8, i8* %477, align 8
  %479 = icmp eq i8 %478, 0
  br i1 %479, label %480, label %516

480:                                              ; preds = %473
  %481 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %476, i64 0, i32 2
  %482 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %481, align 8
  %483 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %482, i64 0, i32 1
  %484 = load i32, i32* %483, align 8
  %485 = and i32 %484, 2
  %486 = icmp eq i32 %485, 0
  br i1 %486, label %487, label %516

487:                                              ; preds = %480
  %488 = and i32 %484, 4
  %489 = icmp eq i32 %488, 0
  br i1 %489, label %490, label %516

490:                                              ; preds = %487
  %491 = and i32 %484, 8
  %492 = icmp eq i32 %491, 0
  br i1 %492, label %516, label %493

493:                                              ; preds = %490
  %494 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %482, i64 0, i32 0, i32 0
  %495 = load i32, i32* %494, align 8
  %496 = and i32 %495, 2
  %497 = icmp eq i32 %496, 0
  br i1 %497, label %498, label %516

498:                                              ; preds = %493
  %499 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %476, i64 0, i32 0, i32 2
  %500 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %499, align 8
  %501 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %500, i64 0, i32 3
  %502 = load i32, i32* %501, align 8
  %503 = and i32 %502, -2
  %504 = icmp eq i32 %503, 6
  br i1 %504, label %516, label %505

505:                                              ; preds = %498
  %506 = icmp eq i32 %502, 10
  %507 = select i1 %506, i32 0, i32 2
  br label %516

508:                                              ; preds = %468
  %509 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %470, i64 1, i32 0, i32 1
  %510 = bitcast i32* %509 to %"class.SkSL::Expression"**
  br label %514

511:                                              ; preds = %468
  %512 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %470, i64 1
  %513 = bitcast %"class.SkSL::Expression"* %512 to %"class.SkSL::Expression"**
  br label %514

514:                                              ; preds = %511, %508
  %515 = phi %"class.SkSL::Expression"** [ %510, %508 ], [ %513, %511 ]
  br label %468

516:                                              ; preds = %468, %505, %498, %493, %490, %487, %480, %473
  %517 = phi i32 [ 7, %473 ], [ %507, %505 ], [ 1, %480 ], [ 3, %487 ], [ 9, %493 ], [ 6, %490 ], [ 0, %498 ], [ 7, %468 ]
  %518 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %519 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator14getPointerTypeERKNS_4TypeERKNS_12MemoryLayoutE16SpvStorageClass_(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %31, %"class.SkSL::MemoryLayout"* dereferenceable(4) %518, i32 %517) #14
  %520 = bitcast %"class.SkSL::Literal"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %520) #14
  %521 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %26, i64 0, i32 0, i32 0, i32 0
  %522 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %26, i64 0, i32 0, i32 0, i32 1
  %523 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %26, i64 0, i32 0, i32 0, i32 2
  %524 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %26, i64 0, i32 0, i32 1
  %525 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %26, i64 0, i32 1
  %526 = bitcast i32* %458 to i8**
  %527 = load i8*, i8** %526, align 8
  %528 = load i8, i8* %527, align 1
  %529 = sext i8 %528 to i64
  %530 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 1
  %531 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %530, align 8
  %532 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %531, i64 0, i32 0, i32 8, i32 0, i32 0, i32 0
  %533 = bitcast %"class.SkSL::Type"** %532 to i64*
  %534 = load i64, i64* %533, align 8
  store i32 -1, i32* %522, align 8
  store i32 43, i32* %523, align 4
  %535 = bitcast %"class.SkSL::Type"** %524 to i64*
  store i64 %534, i64* %535, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIlEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %521, align 8
  store i64 %529, i64* %525, align 8
  %536 = call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeIntLiteralERKNS_7LiteralIlEE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Literal"* nonnull dereferenceable(32) %26)
  tail call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 65, i32 5, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %537 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %537) #14
  store i32 %519, i32* %8, align 4
  %538 = bitcast %"class.SkSL::OutputStream"* %2 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %539 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %538, align 8
  %540 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %539, i64 3
  %541 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %540, align 8
  call void %541(%"class.SkSL::OutputStream"* %2, i8* nonnull %537, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %537) #14
  %542 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %542) #14
  store i32 %466, i32* %7, align 4
  %543 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %538, align 8
  %544 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %543, i64 3
  %545 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %544, align 8
  call void %545(%"class.SkSL::OutputStream"* %2, i8* nonnull %542, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %542) #14
  %546 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %546) #14
  store i32 %450, i32* %6, align 4
  %547 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %538, align 8
  %548 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %547, i64 3
  %549 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %548, align 8
  call void %549(%"class.SkSL::OutputStream"* %2, i8* nonnull %546, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %546) #14
  %550 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %550) #14
  store i32 %536, i32* %5, align 4
  %551 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %538, align 8
  %552 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %551, i64 3
  %553 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %552, align 8
  call void %553(%"class.SkSL::OutputStream"* %2, i8* nonnull %550, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %550) #14
  %554 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %31, %"class.SkSL::MemoryLayout"* dereferenceable(4) %518) #14
  %555 = call i8* @_Znwm(i64 32) #16
  %556 = bitcast i8* %555 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN4SkSL13PointerLValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %556, align 8
  %557 = getelementptr inbounds i8, i8* %555, i64 8
  %558 = bitcast i8* %557 to %"class.SkSL::SPIRVCodeGenerator"**
  store %"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::SPIRVCodeGenerator"** %558, align 8
  %559 = getelementptr inbounds i8, i8* %555, i64 16
  %560 = bitcast i8* %559 to i32*
  store i32 %466, i32* %560, align 8
  %561 = getelementptr inbounds i8, i8* %555, i64 20
  store i8 0, i8* %561, align 4
  %562 = getelementptr inbounds i8, i8* %555, i64 24
  %563 = bitcast i8* %562 to i32*
  store i32 %554, i32* %563, align 8
  %564 = getelementptr inbounds i8, i8* %555, i64 28
  %565 = bitcast i8* %564 to i32*
  store i32 %41, i32* %565, align 4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %520) #14
  br label %616

566:                                              ; preds = %457
  %567 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %434, align 8
  %568 = bitcast %"class.SkSL::Expression"* %567 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %569 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %568, align 8
  %570 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %569, i64 3
  %571 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %570, align 8
  %572 = tail call dereferenceable(184) %"class.SkSL::Type"* %571(%"class.SkSL::Expression"* %567) #14
  %573 = tail call i8* @_Znwm(i64 64) #16
  %574 = bitcast i8* %573 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN4SkSL13SwizzleLValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %574, align 8
  %575 = getelementptr inbounds i8, i8* %573, i64 8
  %576 = bitcast i8* %575 to %"class.SkSL::SPIRVCodeGenerator"**
  store %"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::SPIRVCodeGenerator"** %576, align 8
  %577 = getelementptr inbounds i8, i8* %573, i64 16
  %578 = bitcast i8* %577 to i32*
  store i32 %450, i32* %578, align 8
  %579 = getelementptr inbounds i8, i8* %573, i64 24
  %580 = getelementptr inbounds i8, i8* %573, i64 32
  %581 = getelementptr inbounds i8, i8* %573, i64 40
  %582 = bitcast i8* %581 to i64*
  %583 = bitcast i8* %580 to i8**
  store i8* %579, i8** %583, align 8
  store i64 34359738368, i64* %582, align 8
  %584 = bitcast i32* %438 to i8*
  %585 = icmp eq i8* %579, %584
  br i1 %585, label %611, label %586

586:                                              ; preds = %566
  %587 = bitcast i8* %580 to %class.SkTArray.433*
  store i64 34359738368, i64* %582, align 8
  %588 = load i64, i64* %460, align 8
  %589 = lshr i64 %588, 1
  %590 = trunc i64 %589 to i32
  %591 = and i32 %590, 2147483647
  tail call void @_ZN8SkTArrayIaLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray.433* %587, i32 %591, i32 0) #14
  %592 = load i64, i64* %460, align 8
  %593 = and i64 %592, 4294967294
  %594 = load i64, i64* %582, align 8
  %595 = and i64 %594, -4294967295
  %596 = or i64 %595, %593
  store i64 %596, i64* %582, align 8
  %597 = bitcast i32* %458 to i8**
  %598 = load i8*, i8** %597, align 8
  %599 = icmp eq i64 %593, 0
  br i1 %599, label %611, label %600

600:                                              ; preds = %586, %600
  %601 = phi i64 [ %606, %600 ], [ 0, %586 ]
  %602 = load i8*, i8** %583, align 8
  %603 = getelementptr inbounds i8, i8* %602, i64 %601
  %604 = getelementptr inbounds i8, i8* %598, i64 %601
  %605 = load i8, i8* %604, align 1
  store i8 %605, i8* %603, align 1
  %606 = add nuw nsw i64 %601, 1
  %607 = load i64, i64* %582, align 8
  %608 = lshr i64 %607, 1
  %609 = and i64 %608, 2147483647
  %610 = icmp ult i64 %606, %609
  br i1 %610, label %600, label %611

611:                                              ; preds = %600, %586, %566
  %612 = getelementptr inbounds i8, i8* %573, i64 48
  %613 = bitcast i8* %612 to %"class.SkSL::Type"**
  store %"class.SkSL::Type"* %572, %"class.SkSL::Type"** %613, align 8
  %614 = getelementptr inbounds i8, i8* %573, i64 56
  %615 = bitcast i8* %614 to %"class.SkSL::Type"**
  store %"class.SkSL::Type"* %31, %"class.SkSL::Type"** %615, align 8
  br label %616

616:                                              ; preds = %516, %611
  %617 = phi i8* [ %555, %516 ], [ %573, %611 ]
  %618 = ptrtoint i8* %617 to i64
  %619 = icmp eq %"class.SkSL::SPIRVCodeGenerator::LValue"* %436, null
  br i1 %619, label %672, label %620

620:                                              ; preds = %616
  %621 = bitcast %"class.SkSL::SPIRVCodeGenerator::LValue"* %436 to void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)***
  %622 = load void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)**, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*** %621, align 8
  %623 = getelementptr inbounds void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)** %622, i64 1
  %624 = load void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)** %623, align 8
  call void %624(%"class.SkSL::SPIRVCodeGenerator::LValue"* nonnull %436) #14
  br label %672

625:                                              ; preds = %37
  %626 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %627 = load i32, i32* %626, align 8
  %628 = add i32 %627, 1
  store i32 %628, i32* %626, align 8
  %629 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %630 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator14getPointerTypeERKNS_4TypeERKNS_12MemoryLayoutE16SpvStorageClass_(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %31, %"class.SkSL::MemoryLayout"* dereferenceable(4) %629, i32 7) #14
  %631 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 17, i32 0
  %632 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %632) #14
  store i32 262203, i32* %4, align 4
  %633 = bitcast %"class.SkSL::OutputStream"* %631 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %634 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %633, align 8
  %635 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %634, i64 3
  %636 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %635, align 8
  call void %636(%"class.SkSL::OutputStream"* %631, i8* nonnull %632, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %632) #14
  %637 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %637) #14
  store i32 %630, i32* %19, align 4
  %638 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %633, align 8
  %639 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %638, i64 3
  %640 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %639, align 8
  call void %640(%"class.SkSL::OutputStream"* %631, i8* nonnull %637, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %637) #14
  %641 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %641) #14
  store i32 %627, i32* %18, align 4
  %642 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %633, align 8
  %643 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %642, i64 3
  %644 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %643, align 8
  call void %644(%"class.SkSL::OutputStream"* %631, i8* nonnull %641, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %641) #14
  %645 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %645) #14
  store i32 7, i32* %17, align 4
  %646 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %633, align 8
  %647 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %646, i64 3
  %648 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %647, align 8
  call void %648(%"class.SkSL::OutputStream"* %631, i8* nonnull %645, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %645) #14
  %649 = call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %1, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 62, i32 3, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %650 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %650) #14
  store i32 %627, i32* %21, align 4
  %651 = bitcast %"class.SkSL::OutputStream"* %2 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %652 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %651, align 8
  %653 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %652, i64 3
  %654 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %653, align 8
  call void %654(%"class.SkSL::OutputStream"* %2, i8* nonnull %650, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %650) #14
  %655 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %655) #14
  store i32 %649, i32* %20, align 4
  %656 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %651, align 8
  %657 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %656, i64 3
  %658 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %657, align 8
  call void %658(%"class.SkSL::OutputStream"* %2, i8* nonnull %655, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %655) #14
  %659 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %31, %"class.SkSL::MemoryLayout"* dereferenceable(4) %629) #14
  %660 = call i8* @_Znwm(i64 32) #16
  %661 = bitcast i8* %660 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN4SkSL13PointerLValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %661, align 8
  %662 = getelementptr inbounds i8, i8* %660, i64 8
  %663 = bitcast i8* %662 to %"class.SkSL::SPIRVCodeGenerator"**
  store %"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::SPIRVCodeGenerator"** %663, align 8
  %664 = getelementptr inbounds i8, i8* %660, i64 16
  %665 = bitcast i8* %664 to i32*
  store i32 %627, i32* %665, align 8
  %666 = getelementptr inbounds i8, i8* %660, i64 20
  store i8 1, i8* %666, align 4
  %667 = getelementptr inbounds i8, i8* %660, i64 24
  %668 = bitcast i8* %667 to i32*
  store i32 %659, i32* %668, align 8
  %669 = getelementptr inbounds i8, i8* %660, i64 28
  %670 = bitcast i8* %669 to i32*
  store i32 %41, i32* %670, align 4
  %671 = ptrtoint i8* %660 to i64
  br label %672

672:                                              ; preds = %432, %620, %616, %118, %305, %625, %423
  %673 = phi i64 [ %671, %625 ], [ %417, %423 ], [ %169, %118 ], [ %321, %305 ], [ %618, %616 ], [ %618, %620 ], [ %437, %432 ]
  %674 = inttoptr i64 %673 to %"class.SkSL::SPIRVCodeGenerator::LValue"*
  ret %"class.SkSL::SPIRVCodeGenerator::LValue"* %674
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator21writeSpecialIntrinsicERKNS_12FunctionCallENS0_16SpecialIntrinsicERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::FunctionCall"* nocapture readonly dereferenceable(64), i32, %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca %"struct.SkSL::StringFragment", align 8
  %35 = alloca %"struct.SkSL::StringFragment", align 8
  %36 = alloca %"struct.SkSL::StringFragment", align 8
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = alloca i32, align 4
  %42 = alloca i32, align 4
  %43 = alloca i32, align 4
  %44 = alloca i32, align 4
  %45 = alloca i32, align 4
  %46 = alloca i32, align 4
  %47 = alloca i32, align 4
  %48 = alloca i32, align 4
  %49 = alloca i32, align 4
  %50 = alloca i32, align 4
  %51 = alloca i32, align 4
  %52 = alloca i32, align 4
  %53 = alloca i32, align 4
  %54 = alloca i32, align 4
  %55 = alloca i32, align 4
  %56 = alloca %"class.std::__1::vector.382", align 8
  %57 = alloca %class.SkSTArray, align 8
  %58 = alloca %"class.SkSL::ConstructorCompound", align 8
  %59 = alloca %class.SkSTArray, align 8
  %60 = alloca %"class.SkSL::Literal.430", align 8
  %61 = alloca %"class.std::__1::vector.382", align 8
  %62 = alloca %"class.std::__1::vector.382", align 8
  %63 = alloca %"class.std::__1::vector.382", align 8
  %64 = alloca %"class.std::__1::vector.382", align 8
  %65 = alloca %"class.std::__1::vector.382", align 8
  %66 = alloca %class.SkSTArray, align 8
  %67 = alloca %"class.std::__1::vector.382", align 8
  %68 = alloca %"class.std::__1::vector.382", align 8
  %69 = alloca %"class.std::__1::vector.382", align 8
  %70 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2
  %71 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 0, i32 1
  %72 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %71, align 8
  %73 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %74 = load i32, i32* %73, align 8
  %75 = add i32 %74, 1
  store i32 %75, i32* %73, align 8
  switch i32 %2, label %1027 [
    i32 0, label %76
    i32 9, label %226
    i32 12, label %256
    i32 13, label %497
    i32 6, label %658
    i32 7, label %730
    i32 1, label %820
    i32 3, label %832
    i32 4, label %844
    i32 5, label %856
    i32 8, label %868
    i32 10, label %991
    i32 11, label %1003
    i32 2, label %1015
  ]

76:                                               ; preds = %4
  %77 = bitcast %"class.std::__1::vector.382"* %56 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #14
  %78 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %56, i64 0, i32 0, i32 0
  %79 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %56, i64 0, i32 0, i32 1
  %80 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %56, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 0, i64 24, i1 false) #14
  %81 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 16
  %82 = bitcast i8* %81 to %"class.std::__1::unique_ptr.336"**
  %83 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %82, align 8
  %84 = icmp eq %"class.std::__1::unique_ptr.336"* %83, null
  br i1 %84, label %93, label %85

85:                                               ; preds = %76
  %86 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 24
  %87 = bitcast i8* %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = lshr i64 %88, 1
  %90 = and i64 %89, 2147483647
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %83, i64 %90
  %92 = icmp eq i64 %90, 0
  br i1 %92, label %93, label %96

93:                                               ; preds = %76, %85
  %94 = bitcast i32** %79 to i64*
  %95 = bitcast %"class.std::__1::vector.382"* %56 to i64*
  br label %102

96:                                               ; preds = %85
  %97 = bitcast i32** %79 to i64*
  %98 = bitcast %"class.std::__1::vector.382"* %56 to i64*
  %99 = bitcast i32** %80 to i64*
  br label %142

100:                                              ; preds = %202
  %101 = load i64, i64* %98, align 8
  br label %102

102:                                              ; preds = %93, %100
  %103 = phi i64* [ %95, %93 ], [ %98, %100 ]
  %104 = phi i64* [ %94, %93 ], [ %97, %100 ]
  %105 = phi i64 [ 0, %93 ], [ %101, %100 ]
  %106 = phi i64 [ 0, %93 ], [ %203, %100 ]
  %107 = sub i64 %106, %105
  %108 = lshr exact i64 %107, 2
  %109 = trunc i64 %108 to i32
  %110 = add nsw i32 %109, 5
  tail call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 12, i32 %110, %"class.SkSL::OutputStream"* dereferenceable(8) %3)
  %111 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %112 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %72, %"class.SkSL::MemoryLayout"* dereferenceable(4) %111) #14
  %113 = bitcast i32* %55 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %113)
  store i32 %112, i32* %55, align 4
  %114 = bitcast %"class.SkSL::OutputStream"* %3 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %115 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %114, align 8
  %116 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %115, i64 3
  %117 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %116, align 8
  call void %117(%"class.SkSL::OutputStream"* %3, i8* nonnull %113, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %113)
  %118 = bitcast i32* %54 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %118)
  store i32 %74, i32* %54, align 4
  %119 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %114, align 8
  %120 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %119, i64 3
  %121 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %120, align 8
  call void %121(%"class.SkSL::OutputStream"* %3, i8* nonnull %118, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %118)
  %122 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 6
  %123 = load i32, i32* %122, align 4
  %124 = bitcast i32* %53 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %124)
  store i32 %123, i32* %53, align 4
  %125 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %114, align 8
  %126 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %125, i64 3
  %127 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %126, align 8
  call void %127(%"class.SkSL::OutputStream"* %3, i8* nonnull %124, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %124)
  %128 = load i64, i64* %104, align 8
  %129 = load i64, i64* %103, align 8
  %130 = sub i64 %128, %129
  %131 = icmp eq i64 %130, 8
  %132 = select i1 %131, i32 25, i32 18
  %133 = bitcast i32* %52 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %133)
  store i32 %132, i32* %52, align 4
  %134 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %114, align 8
  %135 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %134, i64 3
  %136 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %135, align 8
  call void %136(%"class.SkSL::OutputStream"* %3, i8* nonnull %133, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %133)
  %137 = load i32*, i32** %78, align 8
  %138 = load i32*, i32** %79, align 8
  %139 = icmp eq i32* %137, %138
  br i1 %139, label %211, label %140

140:                                              ; preds = %102
  %141 = bitcast i32* %51 to i8*
  br label %218

142:                                              ; preds = %207, %96
  %143 = phi i64 [ 0, %96 ], [ %203, %207 ]
  %144 = phi i32* [ null, %96 ], [ %208, %207 ]
  %145 = phi i32* [ null, %96 ], [ %204, %207 ]
  %146 = phi %"class.std::__1::unique_ptr.336"* [ %83, %96 ], [ %205, %207 ]
  %147 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %146, i64 0, i32 0, i32 0, i32 0
  %148 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %147, align 8
  %149 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %148, %"class.SkSL::OutputStream"* dereferenceable(8) %3)
  %150 = icmp ult i32* %145, %144
  %151 = ptrtoint i32* %144 to i64
  br i1 %150, label %152, label %155

152:                                              ; preds = %142
  store i32 %149, i32* %145, align 4
  %153 = getelementptr inbounds i32, i32* %145, i64 1
  %154 = ptrtoint i32* %153 to i64
  store i64 %154, i64* %97, align 8
  br label %202

155:                                              ; preds = %142
  %156 = ptrtoint i32* %145 to i64
  %157 = load i64, i64* %98, align 8
  %158 = sub i64 %156, %157
  %159 = ashr exact i64 %158, 2
  %160 = add nsw i64 %159, 1
  %161 = icmp ugt i64 %160, 4611686018427387903
  br i1 %161, label %162, label %164

162:                                              ; preds = %155
  %163 = bitcast %"class.std::__1::vector.382"* %56 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %163) #15
  unreachable

164:                                              ; preds = %155
  %165 = sub i64 %151, %157
  %166 = ashr exact i64 %165, 2
  %167 = icmp ult i64 %166, 2305843009213693951
  br i1 %167, label %168, label %176

168:                                              ; preds = %164
  %169 = ashr exact i64 %165, 1
  %170 = icmp ult i64 %169, %160
  %171 = select i1 %170, i64 %160, i64 %169
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %181, label %173

173:                                              ; preds = %168
  %174 = icmp ugt i64 %171, 4611686018427387903
  br i1 %174, label %175, label %176

175:                                              ; preds = %173
  tail call void @abort() #15
  unreachable

176:                                              ; preds = %173, %164
  %177 = phi i64 [ %171, %173 ], [ 4611686018427387903, %164 ]
  %178 = shl i64 %177, 2
  %179 = tail call i8* @_Znwm(i64 %178) #16
  %180 = bitcast i8* %179 to i32*
  br label %181

181:                                              ; preds = %176, %168
  %182 = phi i64 [ %177, %176 ], [ 0, %168 ]
  %183 = phi i32* [ %180, %176 ], [ null, %168 ]
  %184 = getelementptr inbounds i32, i32* %183, i64 %159
  %185 = getelementptr inbounds i32, i32* %183, i64 %182
  %186 = ptrtoint i32* %185 to i64
  store i32 %149, i32* %184, align 4
  %187 = getelementptr inbounds i32, i32* %184, i64 1
  %188 = ptrtoint i32* %187 to i64
  %189 = sub i64 %143, %157
  %190 = ashr exact i64 %189, 2
  %191 = sub nsw i64 0, %190
  %192 = getelementptr inbounds i32, i32* %184, i64 %191
  %193 = ptrtoint i32* %192 to i64
  %194 = icmp sgt i64 %189, 0
  br i1 %194, label %195, label %198

195:                                              ; preds = %181
  %196 = bitcast i32* %192 to i8*
  %197 = inttoptr i64 %157 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %196, i8* align 4 %197, i64 %189, i1 false) #14
  br label %198

198:                                              ; preds = %195, %181
  store i64 %193, i64* %98, align 8
  store i64 %188, i64* %97, align 8
  store i64 %186, i64* %99, align 8
  %199 = icmp eq i64 %157, 0
  br i1 %199, label %202, label %200

200:                                              ; preds = %198
  %201 = inttoptr i64 %157 to i8*
  tail call void @_ZdlPv(i8* %201) #16
  br label %202

202:                                              ; preds = %152, %198, %200
  %203 = phi i64 [ %154, %152 ], [ %188, %198 ], [ %188, %200 ]
  %204 = phi i32* [ %153, %152 ], [ %187, %198 ], [ %187, %200 ]
  %205 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %146, i64 1
  %206 = icmp eq %"class.std::__1::unique_ptr.336"* %205, %91
  br i1 %206, label %100, label %207

207:                                              ; preds = %202
  %208 = load i32*, i32** %80, align 8
  br label %142

209:                                              ; preds = %218
  %210 = load i32*, i32** %78, align 8
  br label %211

211:                                              ; preds = %209, %102
  %212 = phi i32* [ %210, %209 ], [ %137, %102 ]
  %213 = icmp eq i32* %212, null
  br i1 %213, label %217, label %214

214:                                              ; preds = %211
  %215 = ptrtoint i32* %212 to i64
  store i64 %215, i64* %104, align 8
  %216 = bitcast i32* %212 to i8*
  call void @_ZdlPv(i8* %216) #16
  br label %217

217:                                              ; preds = %211, %214
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #14
  br label %1027

218:                                              ; preds = %140, %218
  %219 = phi i32* [ %137, %140 ], [ %224, %218 ]
  %220 = load i32, i32* %219, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %141)
  store i32 %220, i32* %51, align 4
  %221 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %114, align 8
  %222 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %221, i64 3
  %223 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %222, align 8
  call void %223(%"class.SkSL::OutputStream"* %3, i8* nonnull %141, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %141)
  %224 = getelementptr inbounds i32, i32* %219, i64 1
  %225 = icmp eq i32* %224, %138
  br i1 %225, label %209, label %218

226:                                              ; preds = %4
  %227 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 16
  %228 = bitcast i8* %227 to %"class.std::__1::unique_ptr.336"**
  %229 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %228, align 8
  %230 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %229, i64 0, i32 0, i32 0, i32 0
  %231 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %230, align 8
  %232 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %231, %"class.SkSL::OutputStream"* dereferenceable(8) %3)
  %233 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %228, align 8
  %234 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %233, i64 1, i32 0, i32 0, i32 0
  %235 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %234, align 8
  %236 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %235, %"class.SkSL::OutputStream"* dereferenceable(8) %3)
  %237 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %238 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %72, %"class.SkSL::MemoryLayout"* dereferenceable(4) %237) #14
  tail call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 86, i32 5, %"class.SkSL::OutputStream"* dereferenceable(8) %3) #14
  %239 = bitcast i32* %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %239) #14
  store i32 %238, i32* %50, align 4
  %240 = bitcast %"class.SkSL::OutputStream"* %3 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %241 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %240, align 8
  %242 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %241, i64 3
  %243 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %242, align 8
  call void %243(%"class.SkSL::OutputStream"* %3, i8* nonnull %239, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %239) #14
  %244 = bitcast i32* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %244) #14
  store i32 %74, i32* %49, align 4
  %245 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %240, align 8
  %246 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %245, i64 3
  %247 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %246, align 8
  call void %247(%"class.SkSL::OutputStream"* %3, i8* nonnull %244, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %244) #14
  %248 = bitcast i32* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %248) #14
  store i32 %232, i32* %48, align 4
  %249 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %240, align 8
  %250 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %249, i64 3
  %251 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %250, align 8
  call void %251(%"class.SkSL::OutputStream"* %3, i8* nonnull %248, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %248) #14
  %252 = bitcast i32* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %252) #14
  store i32 %236, i32* %47, align 4
  %253 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %240, align 8
  %254 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %253, i64 3
  %255 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %254, align 8
  call void %255(%"class.SkSL::OutputStream"* %3, i8* nonnull %252, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %252) #14
  br label %1027

256:                                              ; preds = %4
  %257 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 16
  %258 = bitcast i8* %257 to %"class.std::__1::unique_ptr.336"**
  %259 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %259, i64 0, i32 0, i32 0, i32 0
  %261 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %260, align 8
  %262 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %261, %"class.SkSL::OutputStream"* dereferenceable(8) %3)
  %263 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %57, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %263) #14
  %264 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %57, i64 0, i32 0, i32 0, i64 16
  %265 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %57, i64 0, i32 0, i32 0, i64 24
  %266 = bitcast i8* %265 to i64*
  %267 = bitcast i8* %264 to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %263, i8 -86, i64 16, i1 false)
  store i8* %263, i8** %267, align 8
  store i64 17179869184, i64* %266, align 8
  %268 = bitcast i8* %264 to %class.SkTArray*
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %268, i32 2, i32 0) #14
  %269 = load i64, i64* %266, align 8
  %270 = shl i64 %269, 32
  %271 = and i64 %270, 4294967296
  %272 = and i64 %269, -4294967297
  %273 = or i64 %271, %272
  store i64 %273, i64* %266, align 8
  %274 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 1
  %275 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %274, align 8
  %276 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %275, i64 0, i32 0, i32 31, i32 0, i32 0, i32 0
  %277 = bitcast %"class.SkSL::Type"** %276 to i64*
  %278 = load i64, i64* %277, align 8
  %279 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #14
  %280 = bitcast i8* %279 to i32 (...)***
  %281 = getelementptr inbounds i8, i8* %279, i64 8
  %282 = bitcast i8* %281 to i32*
  store i32 -1, i32* %282, align 8
  %283 = getelementptr inbounds i8, i8* %279, i64 12
  %284 = bitcast i8* %283 to i32*
  store i32 43, i32* %284, align 4
  %285 = getelementptr inbounds i8, i8* %279, i64 16
  %286 = bitcast i8* %285 to i64*
  store i64 %278, i64* %286, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIlEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %280, align 8
  %287 = getelementptr inbounds i8, i8* %279, i64 24
  %288 = bitcast i8* %287 to i64*
  store i64 0, i64* %288, align 8
  %289 = ptrtoint i8* %279 to i64
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %268, i32 1, i32 1) #14
  %290 = bitcast i8* %264 to %"class.std::__1::unique_ptr.336"**
  %291 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %290, align 8
  %292 = load i64, i64* %266, align 8
  %293 = lshr i64 %292, 1
  %294 = and i64 %293, 2147483647
  %295 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %291, i64 %294
  %296 = add i64 %292, 2
  %297 = and i64 %296, 4294967294
  %298 = and i64 %292, -4294967295
  %299 = or i64 %297, %298
  store i64 %299, i64* %266, align 8
  %300 = bitcast %"class.std::__1::unique_ptr.336"* %295 to i64*
  store i64 %289, i64* %300, align 8
  %301 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %274, align 8
  %302 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %301, i64 0, i32 0, i32 31, i32 0, i32 0, i32 0
  %303 = bitcast %"class.SkSL::Type"** %302 to i64*
  %304 = load i64, i64* %303, align 8
  %305 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #14
  %306 = bitcast i8* %305 to i32 (...)***
  %307 = getelementptr inbounds i8, i8* %305, i64 8
  %308 = bitcast i8* %307 to i32*
  store i32 -1, i32* %308, align 8
  %309 = getelementptr inbounds i8, i8* %305, i64 12
  %310 = bitcast i8* %309 to i32*
  store i32 43, i32* %310, align 4
  %311 = getelementptr inbounds i8, i8* %305, i64 16
  %312 = bitcast i8* %311 to i64*
  store i64 %304, i64* %312, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIlEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %306, align 8
  %313 = getelementptr inbounds i8, i8* %305, i64 24
  %314 = bitcast i8* %313 to i64*
  store i64 0, i64* %314, align 8
  %315 = ptrtoint i8* %305 to i64
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %268, i32 1, i32 1) #14
  %316 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %290, align 8
  %317 = load i64, i64* %266, align 8
  %318 = lshr i64 %317, 1
  %319 = and i64 %318, 2147483647
  %320 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %316, i64 %319
  %321 = add i64 %317, 2
  %322 = and i64 %321, 4294967294
  %323 = and i64 %317, -4294967295
  %324 = or i64 %322, %323
  store i64 %324, i64* %266, align 8
  %325 = bitcast %"class.std::__1::unique_ptr.336"* %320 to i64*
  store i64 %315, i64* %325, align 8
  %326 = bitcast %"class.SkSL::ConstructorCompound"* %58 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %326) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %326, i8 -86, i64 64, i1 false)
  %327 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %274, align 8
  %328 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %327, i64 0, i32 0, i32 9, i32 0, i32 0, i32 0
  %329 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %328, align 8
  %330 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %59, i64 0, i32 0, i32 0, i64 16
  %331 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %59, i64 0, i32 0, i32 0, i64 0
  %332 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %59, i64 0, i32 0, i32 0, i64 24
  %333 = bitcast i8* %332 to i64*
  %334 = bitcast i8* %330 to i8**
  store i8* %331, i8** %334, align 8
  store i64 17179869184, i64* %333, align 8
  %335 = bitcast i8* %330 to %class.SkTArray*
  %336 = call dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray* %335, %class.SkTArray* dereferenceable(16) %268) #14
  call void @_ZN4SkSL19ConstructorCompoundC2EiRKNS_4TypeE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS5_14default_deleteIS7_EEEELb0EE(%"class.SkSL::ConstructorCompound"* nonnull %58, i32 -1, %"class.SkSL::Type"* dereferenceable(184) %329, %class.SkSTArray* nonnull %59)
  %337 = load i64, i64* %333, align 8
  %338 = and i64 %337, 4294967294
  %339 = icmp eq i64 %338, 0
  br i1 %339, label %342, label %340

340:                                              ; preds = %256
  %341 = bitcast i8* %330 to %"class.std::__1::unique_ptr.336"**
  br label %346

342:                                              ; preds = %357, %256
  %343 = phi i64 [ %337, %256 ], [ %359, %357 ]
  %344 = and i64 %343, 1
  %345 = icmp eq i64 %344, 0
  br i1 %345, label %365, label %363

346:                                              ; preds = %357, %340
  %347 = phi i64 [ 0, %340 ], [ %358, %357 ]
  %348 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %341, align 8
  %349 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %348, i64 %347, i32 0, i32 0, i32 0
  %350 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %349, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %349, align 8
  %351 = icmp eq %"class.SkSL::Expression"* %350, null
  br i1 %351, label %357, label %352

352:                                              ; preds = %346
  %353 = bitcast %"class.SkSL::Expression"* %350 to void (%"class.SkSL::Expression"*)***
  %354 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %353, align 8
  %355 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %354, i64 1
  %356 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %355, align 8
  call void %356(%"class.SkSL::Expression"* nonnull %350) #14
  br label %357

357:                                              ; preds = %352, %346
  %358 = add nuw nsw i64 %347, 1
  %359 = load i64, i64* %333, align 8
  %360 = lshr i64 %359, 1
  %361 = and i64 %360, 2147483647
  %362 = icmp ult i64 %358, %361
  br i1 %362, label %346, label %342

363:                                              ; preds = %342
  %364 = load i8*, i8** %334, align 8
  call void @_Z7sk_freePv(i8* %364) #14
  br label %365

365:                                              ; preds = %342, %363
  %366 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %58, i64 0, i32 0, i32 0
  %367 = call i32 @_ZN4SkSL18SPIRVCodeGenerator19writeConstantVectorERKNS_14AnyConstructorE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::AnyConstructor"* nonnull dereferenceable(32) %366)
  %368 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 24
  %369 = bitcast i8* %368 to i64*
  %370 = load i64, i64* %369, align 8
  %371 = and i64 %370, 4294967294
  %372 = icmp eq i64 %371, 2
  br i1 %372, label %373, label %393

373:                                              ; preds = %365
  %374 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %375 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %72, %"class.SkSL::MemoryLayout"* dereferenceable(4) %374) #14
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 98, i32 5, %"class.SkSL::OutputStream"* dereferenceable(8) %3) #14
  %376 = bitcast i32* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %376) #14
  store i32 %375, i32* %46, align 4
  %377 = bitcast %"class.SkSL::OutputStream"* %3 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %378 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %377, align 8
  %379 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %378, i64 3
  %380 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %379, align 8
  call void %380(%"class.SkSL::OutputStream"* %3, i8* nonnull %376, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %376) #14
  %381 = bitcast i32* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %381) #14
  store i32 %74, i32* %45, align 4
  %382 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %377, align 8
  %383 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %382, i64 3
  %384 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %383, align 8
  call void %384(%"class.SkSL::OutputStream"* %3, i8* nonnull %381, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %381) #14
  %385 = bitcast i32* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %385) #14
  store i32 %262, i32* %44, align 4
  %386 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %377, align 8
  %387 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %386, i64 3
  %388 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %387, align 8
  call void %388(%"class.SkSL::OutputStream"* %3, i8* nonnull %385, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %385) #14
  %389 = bitcast i32* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %389) #14
  store i32 %367, i32* %43, align 4
  %390 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %377, align 8
  %391 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %390, i64 3
  %392 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %391, align 8
  call void %392(%"class.SkSL::OutputStream"* %3, i8* nonnull %389, i64 4) #14
  br label %425

393:                                              ; preds = %365
  %394 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %258, align 8
  %395 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %394, i64 1, i32 0, i32 0, i32 0
  %396 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %395, align 8
  %397 = call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %396, %"class.SkSL::OutputStream"* dereferenceable(8) %3)
  %398 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %399 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %72, %"class.SkSL::MemoryLayout"* dereferenceable(4) %398) #14
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 98, i32 7, %"class.SkSL::OutputStream"* dereferenceable(8) %3) #14
  %400 = bitcast i32* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %400) #14
  store i32 %399, i32* %42, align 4
  %401 = bitcast %"class.SkSL::OutputStream"* %3 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %402 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %401, align 8
  %403 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %402, i64 3
  %404 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %403, align 8
  call void %404(%"class.SkSL::OutputStream"* %3, i8* nonnull %400, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %400) #14
  %405 = bitcast i32* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %405) #14
  store i32 %74, i32* %41, align 4
  %406 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %401, align 8
  %407 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %406, i64 3
  %408 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %407, align 8
  call void %408(%"class.SkSL::OutputStream"* %3, i8* nonnull %405, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %405) #14
  %409 = bitcast i32* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %409) #14
  store i32 %262, i32* %40, align 4
  %410 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %401, align 8
  %411 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %410, i64 3
  %412 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %411, align 8
  call void %412(%"class.SkSL::OutputStream"* %3, i8* nonnull %409, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %409) #14
  %413 = bitcast i32* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %413) #14
  store i32 %367, i32* %39, align 4
  %414 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %401, align 8
  %415 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %414, i64 3
  %416 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %415, align 8
  call void %416(%"class.SkSL::OutputStream"* %3, i8* nonnull %413, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %413) #14
  %417 = bitcast i32* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %417) #14
  store i32 64, i32* %38, align 4
  %418 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %401, align 8
  %419 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %418, i64 3
  %420 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %419, align 8
  call void %420(%"class.SkSL::OutputStream"* %3, i8* nonnull %417, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %417) #14
  %421 = bitcast i32* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %421) #14
  store i32 %397, i32* %37, align 4
  %422 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %401, align 8
  %423 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %422, i64 3
  %424 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %423, align 8
  call void %424(%"class.SkSL::OutputStream"* %3, i8* nonnull %421, i64 4) #14
  br label %425

425:                                              ; preds = %393, %373
  %426 = phi i8* [ %421, %393 ], [ %389, %373 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %426) #14
  %427 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN4SkSL24MultiArgumentConstructorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %427, align 8
  %428 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %58, i64 0, i32 0, i32 1, i32 0, i32 0, i64 16
  %429 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %58, i64 0, i32 0, i32 1, i32 0, i32 0, i64 24
  %430 = bitcast i8* %429 to i64*
  %431 = load i64, i64* %430, align 8
  %432 = and i64 %431, 4294967294
  %433 = icmp eq i64 %432, 0
  br i1 %433, label %436, label %434

434:                                              ; preds = %425
  %435 = bitcast i8* %428 to %"class.std::__1::unique_ptr.336"**
  br label %440

436:                                              ; preds = %451, %425
  %437 = phi i64 [ %431, %425 ], [ %453, %451 ]
  %438 = and i64 %437, 1
  %439 = icmp eq i64 %438, 0
  br i1 %439, label %460, label %457

440:                                              ; preds = %451, %434
  %441 = phi i64 [ 0, %434 ], [ %452, %451 ]
  %442 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %435, align 8
  %443 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %442, i64 %441, i32 0, i32 0, i32 0
  %444 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %443, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %443, align 8
  %445 = icmp eq %"class.SkSL::Expression"* %444, null
  br i1 %445, label %451, label %446

446:                                              ; preds = %440
  %447 = bitcast %"class.SkSL::Expression"* %444 to void (%"class.SkSL::Expression"*)***
  %448 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %447, align 8
  %449 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %448, i64 1
  %450 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %449, align 8
  call void %450(%"class.SkSL::Expression"* nonnull %444) #14
  br label %451

451:                                              ; preds = %446, %440
  %452 = add nuw nsw i64 %441, 1
  %453 = load i64, i64* %430, align 8
  %454 = lshr i64 %453, 1
  %455 = and i64 %454, 2147483647
  %456 = icmp ult i64 %452, %455
  br i1 %456, label %440, label %436

457:                                              ; preds = %436
  %458 = bitcast i8* %428 to i8**
  %459 = load i8*, i8** %458, align 8
  call void @_Z7sk_freePv(i8* %459) #14
  br label %460

460:                                              ; preds = %457, %436
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN4SkSL14AnyConstructorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %427, align 8
  %461 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %58, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %462 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %461, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %461, align 8
  %463 = icmp eq %"class.SkSL::Expression"* %462, null
  br i1 %463, label %469, label %464

464:                                              ; preds = %460
  %465 = bitcast %"class.SkSL::Expression"* %462 to void (%"class.SkSL::Expression"*)***
  %466 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %465, align 8
  %467 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %466, i64 1
  %468 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %467, align 8
  call void %468(%"class.SkSL::Expression"* nonnull %462) #14
  br label %469

469:                                              ; preds = %460, %464
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %326) #14
  %470 = load i64, i64* %266, align 8
  %471 = and i64 %470, 4294967294
  %472 = icmp eq i64 %471, 0
  br i1 %472, label %473, label %477

473:                                              ; preds = %488, %469
  %474 = phi i64 [ %470, %469 ], [ %490, %488 ]
  %475 = and i64 %474, 1
  %476 = icmp eq i64 %475, 0
  br i1 %476, label %496, label %494

477:                                              ; preds = %469, %488
  %478 = phi i64 [ %489, %488 ], [ 0, %469 ]
  %479 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %290, align 8
  %480 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %479, i64 %478, i32 0, i32 0, i32 0
  %481 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %480, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %480, align 8
  %482 = icmp eq %"class.SkSL::Expression"* %481, null
  br i1 %482, label %488, label %483

483:                                              ; preds = %477
  %484 = bitcast %"class.SkSL::Expression"* %481 to void (%"class.SkSL::Expression"*)***
  %485 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %484, align 8
  %486 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %485, i64 1
  %487 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %486, align 8
  call void %487(%"class.SkSL::Expression"* nonnull %481) #14
  br label %488

488:                                              ; preds = %483, %477
  %489 = add nuw nsw i64 %478, 1
  %490 = load i64, i64* %266, align 8
  %491 = lshr i64 %490, 1
  %492 = and i64 %491, 2147483647
  %493 = icmp ult i64 %489, %492
  br i1 %493, label %477, label %473

494:                                              ; preds = %473
  %495 = load i8*, i8** %267, align 8
  call void @_Z7sk_freePv(i8* %495) #14
  br label %496

496:                                              ; preds = %473, %494
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %263) #14
  br label %1027

497:                                              ; preds = %4
  %498 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 16
  %499 = bitcast i8* %498 to %"class.std::__1::unique_ptr.336"**
  %500 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %499, align 8
  %501 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %500, i64 1, i32 0, i32 0, i32 0
  %502 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %501, align 8
  %503 = bitcast %"class.SkSL::Expression"* %502 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %504 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %503, align 8
  %505 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %504, i64 3
  %506 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %505, align 8
  %507 = tail call dereferenceable(184) %"class.SkSL::Type"* %506(%"class.SkSL::Expression"* %502) #14
  %508 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %499, align 8
  %509 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %508, i64 0, i32 0, i32 0, i32 0
  %510 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %509, align 8
  %511 = bitcast %"class.SkSL::Expression"* %510 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %512 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %511, align 8
  %513 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %512, i64 3
  %514 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %513, align 8
  %515 = tail call dereferenceable(184) %"class.SkSL::Type"* %514(%"class.SkSL::Expression"* %510) #14
  %516 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %515, i64 0, i32 11
  %517 = load i32, i32* %516, align 8
  switch i32 %517, label %545 [
    i32 0, label %518
    i32 1, label %522
    i32 2, label %526
  ]

518:                                              ; preds = %497
  %519 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 1
  %520 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %519, align 8
  %521 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %520, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %530

522:                                              ; preds = %497
  %523 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 1
  %524 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %523, align 8
  %525 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %524, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  br label %530

526:                                              ; preds = %497
  %527 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 1
  %528 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %527, align 8
  %529 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %528, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  br label %530

530:                                              ; preds = %518, %522, %526
  %531 = phi %"class.SkSL::Type"** [ %521, %518 ], [ %525, %522 ], [ %529, %526 ]
  %532 = phi %"struct.SkSL::StringFragment"* [ %36, %518 ], [ %35, %522 ], [ %34, %526 ]
  %533 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %531, align 8
  %534 = bitcast %"struct.SkSL::StringFragment"* %532 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %534) #14
  %535 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %507, i64 0, i32 0, i32 1, i32 0
  %536 = bitcast i8** %535 to <2 x i64>*
  %537 = load <2 x i64>, <2 x i64>* %536, align 8
  %538 = bitcast %"struct.SkSL::StringFragment"* %532 to <2 x i64>*
  store <2 x i64> %537, <2 x i64>* %538, align 8
  %539 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %533, i64 0, i32 0, i32 1, i32 0
  %540 = load i8*, i8** %539, align 8
  %541 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %533, i64 0, i32 0, i32 1, i32 1
  %542 = load i64, i64* %541, align 8
  %543 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %532, i8* %540, i64 %542) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %534) #14
  %544 = select i1 %543, i32 91, i32 87
  br label %545

545:                                              ; preds = %530, %497
  %546 = phi i32 [ 87, %497 ], [ %544, %530 ]
  %547 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %548 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %72, %"class.SkSL::MemoryLayout"* dereferenceable(4) %547) #14
  %549 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %499, align 8
  %550 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %549, i64 0, i32 0, i32 0, i32 0
  %551 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %550, align 8
  %552 = call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %551, %"class.SkSL::OutputStream"* dereferenceable(8) %3)
  %553 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %499, align 8
  %554 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %553, i64 1, i32 0, i32 0, i32 0
  %555 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %554, align 8
  %556 = call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %555, %"class.SkSL::OutputStream"* dereferenceable(8) %3)
  %557 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 24
  %558 = bitcast i8* %557 to i64*
  %559 = load i64, i64* %558, align 8
  %560 = and i64 %559, 4294967294
  %561 = icmp eq i64 %560, 6
  br i1 %561, label %562, label %592

562:                                              ; preds = %545
  %563 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %499, align 8
  %564 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %563, i64 2, i32 0, i32 0, i32 0
  %565 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %564, align 8
  %566 = call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %565, %"class.SkSL::OutputStream"* dereferenceable(8) %3)
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 %546, i32 7, %"class.SkSL::OutputStream"* dereferenceable(8) %3) #14
  %567 = bitcast i32* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %567) #14
  store i32 %548, i32* %33, align 4
  %568 = bitcast %"class.SkSL::OutputStream"* %3 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %569 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %568, align 8
  %570 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %569, i64 3
  %571 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %570, align 8
  call void %571(%"class.SkSL::OutputStream"* %3, i8* nonnull %567, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %567) #14
  %572 = bitcast i32* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %572) #14
  store i32 %74, i32* %32, align 4
  %573 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %568, align 8
  %574 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %573, i64 3
  %575 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %574, align 8
  call void %575(%"class.SkSL::OutputStream"* %3, i8* nonnull %572, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %572) #14
  %576 = bitcast i32* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %576) #14
  store i32 %552, i32* %31, align 4
  %577 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %568, align 8
  %578 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %577, i64 3
  %579 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %578, align 8
  call void %579(%"class.SkSL::OutputStream"* %3, i8* nonnull %576, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %576) #14
  %580 = bitcast i32* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %580) #14
  store i32 %556, i32* %30, align 4
  %581 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %568, align 8
  %582 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %581, i64 3
  %583 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %582, align 8
  call void %583(%"class.SkSL::OutputStream"* %3, i8* nonnull %580, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %580) #14
  %584 = bitcast i32* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %584) #14
  store i32 1, i32* %29, align 4
  %585 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %568, align 8
  %586 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %585, i64 3
  %587 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %586, align 8
  call void %587(%"class.SkSL::OutputStream"* %3, i8* nonnull %584, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %584) #14
  %588 = bitcast i32* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %588) #14
  store i32 %566, i32* %28, align 4
  %589 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %568, align 8
  %590 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %589, i64 3
  %591 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %590, align 8
  call void %591(%"class.SkSL::OutputStream"* %3, i8* nonnull %588, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %588) #14
  br label %1027

592:                                              ; preds = %545
  %593 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 1
  %594 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %593, align 8
  %595 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %594, i64 0, i32 1, i32 0, i32 0, i32 0
  %596 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %595, align 8
  %597 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %596, i64 0, i32 1, i32 4
  %598 = load i8, i8* %597, align 4, !range !2
  %599 = icmp eq i8 %598, 0
  br i1 %599, label %640, label %600

600:                                              ; preds = %592
  %601 = bitcast %"class.SkSL::Literal.430"* %60 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %601) #14
  %602 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %60, i64 0, i32 0, i32 0, i32 0
  %603 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %60, i64 0, i32 0, i32 0, i32 1
  %604 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %60, i64 0, i32 0, i32 0, i32 2
  %605 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %60, i64 0, i32 0, i32 1
  %606 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %60, i64 0, i32 1
  %607 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %60, i64 0, i32 2, i64 0
  %608 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 1
  %609 = bitcast %"class.SkSL::Context"** %608 to i64**
  %610 = bitcast i8* %607 to i32*
  store i32 -1431655766, i32* %610, align 4
  %611 = load i64*, i64** %609, align 8
  %612 = load i64, i64* %611, align 8
  store i32 -1, i32* %603, align 8
  store i32 45, i32* %604, align 4
  %613 = bitcast %"class.SkSL::Type"** %605 to i64*
  store i64 %612, i64* %613, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIfEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %602, align 8
  store float -5.000000e-01, float* %606, align 8
  %614 = call i32 @_ZN4SkSL18SPIRVCodeGenerator17writeFloatLiteralERKNS_7LiteralIfEE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Literal.430"* nonnull dereferenceable(32) %60)
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 %546, i32 7, %"class.SkSL::OutputStream"* dereferenceable(8) %3) #14
  %615 = bitcast i32* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %615) #14
  store i32 %548, i32* %27, align 4
  %616 = bitcast %"class.SkSL::OutputStream"* %3 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %617 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %616, align 8
  %618 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %617, i64 3
  %619 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %618, align 8
  call void %619(%"class.SkSL::OutputStream"* %3, i8* nonnull %615, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %615) #14
  %620 = bitcast i32* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %620) #14
  store i32 %74, i32* %26, align 4
  %621 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %616, align 8
  %622 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %621, i64 3
  %623 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %622, align 8
  call void %623(%"class.SkSL::OutputStream"* %3, i8* nonnull %620, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %620) #14
  %624 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %624) #14
  store i32 %552, i32* %25, align 4
  %625 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %616, align 8
  %626 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %625, i64 3
  %627 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %626, align 8
  call void %627(%"class.SkSL::OutputStream"* %3, i8* nonnull %624, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %624) #14
  %628 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %628) #14
  store i32 %556, i32* %24, align 4
  %629 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %616, align 8
  %630 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %629, i64 3
  %631 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %630, align 8
  call void %631(%"class.SkSL::OutputStream"* %3, i8* nonnull %628, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %628) #14
  %632 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %632) #14
  store i32 1, i32* %23, align 4
  %633 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %616, align 8
  %634 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %633, i64 3
  %635 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %634, align 8
  call void %635(%"class.SkSL::OutputStream"* %3, i8* nonnull %632, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %632) #14
  %636 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %636) #14
  store i32 %614, i32* %22, align 4
  %637 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %616, align 8
  %638 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %637, i64 3
  %639 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %638, align 8
  call void %639(%"class.SkSL::OutputStream"* %3, i8* nonnull %636, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %636) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %601) #14
  br label %1027

640:                                              ; preds = %592
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 %546, i32 5, %"class.SkSL::OutputStream"* dereferenceable(8) %3) #14
  %641 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %641) #14
  store i32 %548, i32* %21, align 4
  %642 = bitcast %"class.SkSL::OutputStream"* %3 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %643 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %642, align 8
  %644 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %643, i64 3
  %645 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %644, align 8
  call void %645(%"class.SkSL::OutputStream"* %3, i8* nonnull %641, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %641) #14
  %646 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %646) #14
  store i32 %74, i32* %20, align 4
  %647 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %642, align 8
  %648 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %647, i64 3
  %649 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %648, align 8
  call void %649(%"class.SkSL::OutputStream"* %3, i8* nonnull %646, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %646) #14
  %650 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %650) #14
  store i32 %552, i32* %19, align 4
  %651 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %642, align 8
  %652 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %651, i64 3
  %653 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %652, align 8
  call void %653(%"class.SkSL::OutputStream"* %3, i8* nonnull %650, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %650) #14
  %654 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %654) #14
  store i32 %556, i32* %18, align 4
  %655 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %642, align 8
  %656 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %655, i64 3
  %657 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %656, align 8
  call void %657(%"class.SkSL::OutputStream"* %3, i8* nonnull %654, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %654) #14
  br label %1027

658:                                              ; preds = %4
  %659 = bitcast %"class.std::__1::vector.382"* %61 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %659) #14
  %660 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %61, i64 0, i32 0, i32 0
  %661 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %61, i64 0, i32 0, i32 1
  %662 = bitcast %"class.std::__1::vector.382"* %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %662, i8 -86, i64 24, i1 false)
  call void @_ZN4SkSL18SPIRVCodeGenerator9vectorizeERK9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEELb0EERNS_12OutputStreamE(%"class.std::__1::vector.382"* nonnull sret %61, %"class.SkSL::SPIRVCodeGenerator"* %0, %class.SkSTArray* dereferenceable(32) %70, %"class.SkSL::OutputStream"* dereferenceable(8) %3)
  %663 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 16
  %664 = bitcast i8* %663 to %"class.std::__1::unique_ptr.336"**
  %665 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %664, align 8
  %666 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %665, i64 0, i32 0, i32 0, i32 0
  %667 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %666, align 8
  %668 = bitcast %"class.SkSL::Expression"* %667 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %669 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %668, align 8
  %670 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %669, i64 3
  %671 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %670, align 8
  %672 = call dereferenceable(184) %"class.SkSL::Type"* %671(%"class.SkSL::Expression"* %667) #14
  %673 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %672, i64 0, i32 3
  %674 = load i32, i32* %673, align 8
  switch i32 %674, label %722 [
    i32 8, label %675
    i32 11, label %675
    i32 4, label %675
    i32 1, label %689
  ]

675:                                              ; preds = %658, %658, %658
  %676 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %672, i64 0, i32 6
  %677 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %676, align 8
  %678 = icmp eq %"class.SkSL::Type"* %677, null
  %679 = select i1 %678, %"class.SkSL::Type"* %672, %"class.SkSL::Type"* %677
  %680 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %679, i64 0, i32 4
  %681 = load i32, i32* %680, align 4
  %682 = icmp eq i32 %681, 0
  br i1 %682, label %689, label %683

683:                                              ; preds = %675
  switch i32 %674, label %722 [
    i32 11, label %684
    i32 8, label %684
  ]

684:                                              ; preds = %683, %683
  %685 = icmp eq i32 %681, 1
  br i1 %685, label %689, label %686

686:                                              ; preds = %684
  switch i32 %674, label %722 [
    i32 8, label %687
    i32 11, label %687
  ]

687:                                              ; preds = %686, %686
  %688 = icmp eq i32 %681, 2
  br i1 %688, label %689, label %722

689:                                              ; preds = %658, %687, %684, %675
  %690 = phi i32 [ 141, %675 ], [ 139, %684 ], [ 137, %687 ], [ 139, %658 ]
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 %690, i32 5, %"class.SkSL::OutputStream"* dereferenceable(8) %3)
  %691 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %692 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %672, %"class.SkSL::MemoryLayout"* dereferenceable(4) %691) #14
  %693 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %693)
  store i32 %692, i32* %17, align 4
  %694 = bitcast %"class.SkSL::OutputStream"* %3 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %695 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %694, align 8
  %696 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %695, i64 3
  %697 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %696, align 8
  call void %697(%"class.SkSL::OutputStream"* %3, i8* nonnull %693, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %693)
  %698 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %698)
  store i32 %74, i32* %16, align 4
  %699 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %694, align 8
  %700 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %699, i64 3
  %701 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %700, align 8
  call void %701(%"class.SkSL::OutputStream"* %3, i8* nonnull %698, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %698)
  %702 = load i32*, i32** %660, align 8
  %703 = load i32, i32* %702, align 4
  %704 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %704)
  store i32 %703, i32* %15, align 4
  %705 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %694, align 8
  %706 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %705, i64 3
  %707 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %706, align 8
  call void %707(%"class.SkSL::OutputStream"* %3, i8* nonnull %704, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %704)
  %708 = load i32*, i32** %660, align 8
  %709 = getelementptr inbounds i32, i32* %708, i64 1
  %710 = load i32, i32* %709, align 4
  %711 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %711)
  store i32 %710, i32* %14, align 4
  %712 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %694, align 8
  %713 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %712, i64 3
  %714 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %713, align 8
  call void %714(%"class.SkSL::OutputStream"* %3, i8* nonnull %711, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %711)
  %715 = load i32*, i32** %660, align 8
  %716 = icmp eq i32* %715, null
  br i1 %716, label %721, label %717

717:                                              ; preds = %689
  %718 = ptrtoint i32* %715 to i64
  %719 = bitcast i32** %661 to i64*
  store i64 %718, i64* %719, align 8
  %720 = bitcast i32* %715 to i8*
  call void @_ZdlPv(i8* %720) #16
  br label %721

721:                                              ; preds = %689, %717
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %659) #14
  br label %1027

722:                                              ; preds = %658, %683, %686, %687
  %723 = load i32*, i32** %660, align 8
  %724 = icmp eq i32* %723, null
  br i1 %724, label %729, label %725

725:                                              ; preds = %722
  %726 = ptrtoint i32* %723 to i64
  %727 = bitcast i32** %661 to i64*
  store i64 %726, i64* %727, align 8
  %728 = bitcast i32* %723 to i8*
  call void @_ZdlPv(i8* %728) #16
  br label %729

729:                                              ; preds = %722, %725
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %659) #14
  br label %1027

730:                                              ; preds = %4
  %731 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 16
  %732 = bitcast i8* %731 to %"class.std::__1::unique_ptr.336"**
  %733 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %732, align 8
  %734 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %733, i64 0, i32 0, i32 0, i32 0
  %735 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %734, align 8
  %736 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %735, %"class.SkSL::OutputStream"* dereferenceable(8) %3)
  tail call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 208, i32 4, %"class.SkSL::OutputStream"* dereferenceable(8) %3)
  %737 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %738 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %72, %"class.SkSL::MemoryLayout"* dereferenceable(4) %737) #14
  %739 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %739)
  store i32 %738, i32* %13, align 4
  %740 = bitcast %"class.SkSL::OutputStream"* %3 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %741 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %740, align 8
  %742 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %741, i64 3
  %743 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %742, align 8
  call void %743(%"class.SkSL::OutputStream"* %3, i8* nonnull %739, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %739)
  %744 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %744)
  store i32 %74, i32* %12, align 4
  %745 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %740, align 8
  %746 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %745, i64 3
  %747 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %746, align 8
  call void %747(%"class.SkSL::OutputStream"* %3, i8* nonnull %744, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %744)
  %748 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %748)
  store i32 %736, i32* %11, align 4
  %749 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %740, align 8
  %750 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %749, i64 3
  %751 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %750, align 8
  call void %751(%"class.SkSL::OutputStream"* %3, i8* nonnull %748, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %748)
  %752 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 1
  %753 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %752, align 8
  %754 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %753, i64 0, i32 1, i32 0, i32 0, i32 0
  %755 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %754, align 8
  %756 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %755, i64 0, i32 1, i32 0
  %757 = load i8, i8* %756, align 8, !range !2
  %758 = icmp eq i8 %757, 0
  br i1 %758, label %1027, label %759

759:                                              ; preds = %730
  %760 = icmp eq %"class.SkSL::Type"* %72, null
  br i1 %760, label %804, label %761

761:                                              ; preds = %759
  %762 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %72, i64 0, i32 6
  %763 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %762, align 8
  %764 = icmp eq %"class.SkSL::Type"* %763, null
  %765 = select i1 %764, %"class.SkSL::Type"* %72, %"class.SkSL::Type"* %763
  %766 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %765, i64 0, i32 4
  %767 = load i32, i32* %766, align 4
  %768 = icmp ult i32 %767, 3
  br i1 %768, label %773, label %769

769:                                              ; preds = %761
  %770 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %72, i64 0, i32 3
  %771 = load i32, i32* %770, align 8
  %772 = icmp eq i32 %771, 6
  br i1 %772, label %773, label %804

773:                                              ; preds = %769, %761
  br i1 %764, label %779, label %774

774:                                              ; preds = %773, %774
  %775 = phi %"class.SkSL::Type"* [ %777, %774 ], [ %763, %773 ]
  %776 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %775, i64 0, i32 6
  %777 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %776, align 8
  %778 = icmp eq %"class.SkSL::Type"* %777, null
  br i1 %778, label %779, label %774

779:                                              ; preds = %774, %773
  %780 = phi %"class.SkSL::Type"* [ %72, %773 ], [ %775, %774 ]
  %781 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %780, i64 0, i32 16
  %782 = load i8, i8* %781, align 8, !range !2
  %783 = icmp eq i8 %782, 0
  br i1 %783, label %784, label %804

784:                                              ; preds = %779
  %785 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %755, i64 0, i32 1, i32 3
  %786 = load i8, i8* %785, align 1, !range !2
  %787 = icmp eq i8 %786, 0
  br i1 %787, label %788, label %804

788:                                              ; preds = %784
  %789 = load i32, i32* %73, align 8
  %790 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %791 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %791) #14
  store i32 196679, i32* %8, align 4
  %792 = bitcast %"class.SkSL::OutputStream"* %790 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %793 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %792, align 8
  %794 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %793, i64 3
  %795 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %794, align 8
  call void %795(%"class.SkSL::OutputStream"* %790, i8* nonnull %791, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %791) #14
  %796 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %796) #14
  store i32 %789, i32* %10, align 4
  %797 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %792, align 8
  %798 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %797, i64 3
  %799 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %798, align 8
  call void %799(%"class.SkSL::OutputStream"* %790, i8* nonnull %796, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %796) #14
  %800 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %800) #14
  store i32 0, i32* %9, align 4
  %801 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %792, align 8
  %802 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %801, i64 3
  %803 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %802, align 8
  call void %803(%"class.SkSL::OutputStream"* %790, i8* nonnull %800, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %800) #14
  br label %804

804:                                              ; preds = %759, %769, %779, %784, %788
  %805 = load i32, i32* %73, align 8
  %806 = add i32 %805, 1
  store i32 %806, i32* %73, align 8
  %807 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %72, %"class.SkSL::MemoryLayout"* dereferenceable(4) %737) #14
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 127, i32 4, %"class.SkSL::OutputStream"* dereferenceable(8) %3) #14
  %808 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %808) #14
  store i32 %807, i32* %7, align 4
  %809 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %740, align 8
  %810 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %809, i64 3
  %811 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %810, align 8
  call void %811(%"class.SkSL::OutputStream"* %3, i8* nonnull %808, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %808) #14
  %812 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %812) #14
  store i32 %805, i32* %6, align 4
  %813 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %740, align 8
  %814 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %813, i64 3
  %815 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %814, align 8
  call void %815(%"class.SkSL::OutputStream"* %3, i8* nonnull %812, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %812) #14
  %816 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %816) #14
  store i32 %74, i32* %5, align 4
  %817 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %740, align 8
  %818 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %817, i64 3
  %819 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %818, align 8
  call void %819(%"class.SkSL::OutputStream"* %3, i8* nonnull %816, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %816) #14
  br label %1027

820:                                              ; preds = %4
  %821 = bitcast %"class.std::__1::vector.382"* %62 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %821) #14
  %822 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %62, i64 0, i32 0, i32 0
  %823 = bitcast %"class.std::__1::vector.382"* %62 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %823, i8 -86, i64 24, i1 false)
  call void @_ZN4SkSL18SPIRVCodeGenerator9vectorizeERK9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEELb0EERNS_12OutputStreamE(%"class.std::__1::vector.382"* nonnull sret %62, %"class.SkSL::SPIRVCodeGenerator"* %0, %class.SkSTArray* dereferenceable(32) %70, %"class.SkSL::OutputStream"* dereferenceable(8) %3)
  call void @_ZN4SkSL18SPIRVCodeGenerator28writeGLSLExtendedInstructionERKNS_4TypeEjjjjRKNSt3__16vectorIjNS4_9allocatorIjEEEERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %72, i32 %74, i32 43, i32 45, i32 44, %"class.std::__1::vector.382"* nonnull dereferenceable(24) %62, %"class.SkSL::OutputStream"* dereferenceable(8) %3)
  %824 = load i32*, i32** %822, align 8
  %825 = icmp eq i32* %824, null
  br i1 %825, label %831, label %826

826:                                              ; preds = %820
  %827 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %62, i64 0, i32 0, i32 1
  %828 = ptrtoint i32* %824 to i64
  %829 = bitcast i32** %827 to i64*
  store i64 %828, i64* %829, align 8
  %830 = bitcast i32* %824 to i8*
  call void @_ZdlPv(i8* %830) #16
  br label %831

831:                                              ; preds = %820, %826
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %821) #14
  br label %1027

832:                                              ; preds = %4
  %833 = bitcast %"class.std::__1::vector.382"* %63 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %833) #14
  %834 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %63, i64 0, i32 0, i32 0
  %835 = bitcast %"class.std::__1::vector.382"* %63 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %835, i8 -86, i64 24, i1 false)
  call void @_ZN4SkSL18SPIRVCodeGenerator9vectorizeERK9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEELb0EERNS_12OutputStreamE(%"class.std::__1::vector.382"* nonnull sret %63, %"class.SkSL::SPIRVCodeGenerator"* %0, %class.SkSTArray* dereferenceable(32) %70, %"class.SkSL::OutputStream"* dereferenceable(8) %3)
  call void @_ZN4SkSL18SPIRVCodeGenerator28writeGLSLExtendedInstructionERKNS_4TypeEjjjjRKNSt3__16vectorIjNS4_9allocatorIjEEEERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %72, i32 %74, i32 40, i32 42, i32 41, %"class.std::__1::vector.382"* nonnull dereferenceable(24) %63, %"class.SkSL::OutputStream"* dereferenceable(8) %3)
  %836 = load i32*, i32** %834, align 8
  %837 = icmp eq i32* %836, null
  br i1 %837, label %843, label %838

838:                                              ; preds = %832
  %839 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %63, i64 0, i32 0, i32 1
  %840 = ptrtoint i32* %836 to i64
  %841 = bitcast i32** %839 to i64*
  store i64 %840, i64* %841, align 8
  %842 = bitcast i32* %836 to i8*
  call void @_ZdlPv(i8* %842) #16
  br label %843

843:                                              ; preds = %832, %838
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %833) #14
  br label %1027

844:                                              ; preds = %4
  %845 = bitcast %"class.std::__1::vector.382"* %64 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %845) #14
  %846 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %64, i64 0, i32 0, i32 0
  %847 = bitcast %"class.std::__1::vector.382"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %847, i8 -86, i64 24, i1 false)
  call void @_ZN4SkSL18SPIRVCodeGenerator9vectorizeERK9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEELb0EERNS_12OutputStreamE(%"class.std::__1::vector.382"* nonnull sret %64, %"class.SkSL::SPIRVCodeGenerator"* %0, %class.SkSTArray* dereferenceable(32) %70, %"class.SkSL::OutputStream"* dereferenceable(8) %3)
  call void @_ZN4SkSL18SPIRVCodeGenerator28writeGLSLExtendedInstructionERKNS_4TypeEjjjjRKNSt3__16vectorIjNS4_9allocatorIjEEEERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %72, i32 %74, i32 37, i32 39, i32 38, %"class.std::__1::vector.382"* nonnull dereferenceable(24) %64, %"class.SkSL::OutputStream"* dereferenceable(8) %3)
  %848 = load i32*, i32** %846, align 8
  %849 = icmp eq i32* %848, null
  br i1 %849, label %855, label %850

850:                                              ; preds = %844
  %851 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %64, i64 0, i32 0, i32 1
  %852 = ptrtoint i32* %848 to i64
  %853 = bitcast i32** %851 to i64*
  store i64 %852, i64* %853, align 8
  %854 = bitcast i32* %848 to i8*
  call void @_ZdlPv(i8* %854) #16
  br label %855

855:                                              ; preds = %844, %850
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %845) #14
  br label %1027

856:                                              ; preds = %4
  %857 = bitcast %"class.std::__1::vector.382"* %65 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %857) #14
  %858 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %65, i64 0, i32 0, i32 0
  %859 = bitcast %"class.std::__1::vector.382"* %65 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %859, i8 -86, i64 24, i1 false)
  call void @_ZN4SkSL18SPIRVCodeGenerator9vectorizeERK9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEELb0EERNS_12OutputStreamE(%"class.std::__1::vector.382"* nonnull sret %65, %"class.SkSL::SPIRVCodeGenerator"* %0, %class.SkSTArray* dereferenceable(32) %70, %"class.SkSL::OutputStream"* dereferenceable(8) %3)
  call void @_ZN4SkSL18SPIRVCodeGenerator28writeGLSLExtendedInstructionERKNS_4TypeEjjjjRKNSt3__16vectorIjNS4_9allocatorIjEEEERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %72, i32 %74, i32 46, i32 1, i32 1, %"class.std::__1::vector.382"* nonnull dereferenceable(24) %65, %"class.SkSL::OutputStream"* dereferenceable(8) %3)
  %860 = load i32*, i32** %858, align 8
  %861 = icmp eq i32* %860, null
  br i1 %861, label %867, label %862

862:                                              ; preds = %856
  %863 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %65, i64 0, i32 0, i32 1
  %864 = ptrtoint i32* %860 to i64
  %865 = bitcast i32** %863 to i64*
  store i64 %864, i64* %865, align 8
  %866 = bitcast i32* %860 to i8*
  call void @_ZdlPv(i8* %866) #16
  br label %867

867:                                              ; preds = %856, %862
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %857) #14
  br label %1027

868:                                              ; preds = %4
  %869 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %66, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %869) #14
  %870 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %66, i64 0, i32 0, i32 0, i64 16
  %871 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %66, i64 0, i32 0, i32 0, i64 24
  %872 = bitcast i8* %871 to i64*
  %873 = bitcast i8* %870 to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %869, i8 -86, i64 16, i1 false)
  store i8* %869, i8** %873, align 8
  store i64 17179869184, i64* %872, align 8
  %874 = bitcast i8* %870 to %class.SkTArray*
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %874, i32 3, i32 0) #14
  %875 = load i64, i64* %872, align 8
  %876 = shl i64 %875, 32
  %877 = and i64 %876, 4294967296
  %878 = and i64 %875, -4294967297
  %879 = or i64 %877, %878
  store i64 %879, i64* %872, align 8
  %880 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 16
  %881 = bitcast i8* %880 to %"class.std::__1::unique_ptr.336"**
  %882 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %881, align 8
  %883 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %882, i64 0, i32 0, i32 0, i32 0
  %884 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %883, align 8
  %885 = bitcast %"class.SkSL::Expression"* %884 to %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)***
  %886 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*** %885, align 8
  %887 = getelementptr inbounds %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %886, i64 10
  %888 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %887, align 8
  %889 = call %"class.SkSL::Expression"* %888(%"class.SkSL::Expression"* %884) #14
  %890 = ptrtoint %"class.SkSL::Expression"* %889 to i64
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %874, i32 1, i32 1) #14
  %891 = bitcast i8* %870 to %"class.std::__1::unique_ptr.336"**
  %892 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %891, align 8
  %893 = load i64, i64* %872, align 8
  %894 = lshr i64 %893, 1
  %895 = and i64 %894, 2147483647
  %896 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %892, i64 %895
  %897 = add i64 %893, 2
  %898 = and i64 %897, 4294967294
  %899 = and i64 %893, -4294967295
  %900 = or i64 %898, %899
  store i64 %900, i64* %872, align 8
  %901 = bitcast %"class.std::__1::unique_ptr.336"* %896 to i64*
  store i64 %890, i64* %901, align 8
  %902 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 1
  %903 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %902, align 8
  %904 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %903, i64 0, i32 0, i32 30, i32 0, i32 0, i32 0
  %905 = bitcast %"class.SkSL::Type"** %904 to i64*
  %906 = load i64, i64* %905, align 8
  %907 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #14
  %908 = bitcast i8* %907 to i32 (...)***
  %909 = getelementptr inbounds i8, i8* %907, i64 8
  %910 = bitcast i8* %909 to i32*
  store i32 -1, i32* %910, align 8
  %911 = getelementptr inbounds i8, i8* %907, i64 12
  %912 = bitcast i8* %911 to i32*
  store i32 45, i32* %912, align 4
  %913 = getelementptr inbounds i8, i8* %907, i64 16
  %914 = bitcast i8* %913 to i64*
  store i64 %906, i64* %914, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIfEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %908, align 8
  %915 = getelementptr inbounds i8, i8* %907, i64 24
  %916 = bitcast i8* %915 to float*
  store float 0.000000e+00, float* %916, align 8
  %917 = ptrtoint i8* %907 to i64
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %874, i32 1, i32 1) #14
  %918 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %891, align 8
  %919 = load i64, i64* %872, align 8
  %920 = lshr i64 %919, 1
  %921 = and i64 %920, 2147483647
  %922 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %918, i64 %921
  %923 = add i64 %919, 2
  %924 = and i64 %923, 4294967294
  %925 = and i64 %919, -4294967295
  %926 = or i64 %924, %925
  store i64 %926, i64* %872, align 8
  %927 = bitcast %"class.std::__1::unique_ptr.336"* %922 to i64*
  store i64 %917, i64* %927, align 8
  %928 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %902, align 8
  %929 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %928, i64 0, i32 0, i32 30, i32 0, i32 0, i32 0
  %930 = bitcast %"class.SkSL::Type"** %929 to i64*
  %931 = load i64, i64* %930, align 8
  %932 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #14
  %933 = bitcast i8* %932 to i32 (...)***
  %934 = getelementptr inbounds i8, i8* %932, i64 8
  %935 = bitcast i8* %934 to i32*
  store i32 -1, i32* %935, align 8
  %936 = getelementptr inbounds i8, i8* %932, i64 12
  %937 = bitcast i8* %936 to i32*
  store i32 45, i32* %937, align 4
  %938 = getelementptr inbounds i8, i8* %932, i64 16
  %939 = bitcast i8* %938 to i64*
  store i64 %931, i64* %939, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIfEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %933, align 8
  %940 = getelementptr inbounds i8, i8* %932, i64 24
  %941 = bitcast i8* %940 to float*
  store float 1.000000e+00, float* %941, align 8
  %942 = ptrtoint i8* %932 to i64
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %874, i32 1, i32 1) #14
  %943 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %891, align 8
  %944 = load i64, i64* %872, align 8
  %945 = lshr i64 %944, 1
  %946 = and i64 %945, 2147483647
  %947 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %943, i64 %946
  %948 = add i64 %944, 2
  %949 = and i64 %948, 4294967294
  %950 = and i64 %944, -4294967295
  %951 = or i64 %949, %950
  store i64 %951, i64* %872, align 8
  %952 = bitcast %"class.std::__1::unique_ptr.336"* %947 to i64*
  store i64 %942, i64* %952, align 8
  %953 = bitcast %"class.std::__1::vector.382"* %67 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %953) #14
  %954 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %67, i64 0, i32 0, i32 0
  %955 = bitcast %"class.std::__1::vector.382"* %67 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %955, i8 -86, i64 24, i1 false)
  call void @_ZN4SkSL18SPIRVCodeGenerator9vectorizeERK9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEELb0EERNS_12OutputStreamE(%"class.std::__1::vector.382"* nonnull sret %67, %"class.SkSL::SPIRVCodeGenerator"* %0, %class.SkSTArray* nonnull dereferenceable(32) %66, %"class.SkSL::OutputStream"* dereferenceable(8) %3)
  call void @_ZN4SkSL18SPIRVCodeGenerator28writeGLSLExtendedInstructionERKNS_4TypeEjjjjRKNSt3__16vectorIjNS4_9allocatorIjEEEERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %72, i32 %74, i32 43, i32 45, i32 44, %"class.std::__1::vector.382"* nonnull dereferenceable(24) %67, %"class.SkSL::OutputStream"* dereferenceable(8) %3)
  %956 = load i32*, i32** %954, align 8
  %957 = icmp eq i32* %956, null
  br i1 %957, label %963, label %958

958:                                              ; preds = %868
  %959 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %67, i64 0, i32 0, i32 1
  %960 = ptrtoint i32* %956 to i64
  %961 = bitcast i32** %959 to i64*
  store i64 %960, i64* %961, align 8
  %962 = bitcast i32* %956 to i8*
  call void @_ZdlPv(i8* %962) #16
  br label %963

963:                                              ; preds = %868, %958
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %953) #14
  %964 = load i64, i64* %872, align 8
  %965 = and i64 %964, 4294967294
  %966 = icmp eq i64 %965, 0
  br i1 %966, label %967, label %971

967:                                              ; preds = %982, %963
  %968 = phi i64 [ %964, %963 ], [ %984, %982 ]
  %969 = and i64 %968, 1
  %970 = icmp eq i64 %969, 0
  br i1 %970, label %990, label %988

971:                                              ; preds = %963, %982
  %972 = phi i64 [ %983, %982 ], [ 0, %963 ]
  %973 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %891, align 8
  %974 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %973, i64 %972, i32 0, i32 0, i32 0
  %975 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %974, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %974, align 8
  %976 = icmp eq %"class.SkSL::Expression"* %975, null
  br i1 %976, label %982, label %977

977:                                              ; preds = %971
  %978 = bitcast %"class.SkSL::Expression"* %975 to void (%"class.SkSL::Expression"*)***
  %979 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %978, align 8
  %980 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %979, i64 1
  %981 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %980, align 8
  call void %981(%"class.SkSL::Expression"* nonnull %975) #14
  br label %982

982:                                              ; preds = %977, %971
  %983 = add nuw nsw i64 %972, 1
  %984 = load i64, i64* %872, align 8
  %985 = lshr i64 %984, 1
  %986 = and i64 %985, 2147483647
  %987 = icmp ult i64 %983, %986
  br i1 %987, label %971, label %967

988:                                              ; preds = %967
  %989 = load i8*, i8** %873, align 8
  call void @_Z7sk_freePv(i8* %989) #14
  br label %990

990:                                              ; preds = %967, %988
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %869) #14
  br label %1027

991:                                              ; preds = %4
  %992 = bitcast %"class.std::__1::vector.382"* %68 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %992) #14
  %993 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %68, i64 0, i32 0, i32 0
  %994 = bitcast %"class.std::__1::vector.382"* %68 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %994, i8 -86, i64 24, i1 false)
  call void @_ZN4SkSL18SPIRVCodeGenerator9vectorizeERK9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEELb0EERNS_12OutputStreamE(%"class.std::__1::vector.382"* nonnull sret %68, %"class.SkSL::SPIRVCodeGenerator"* %0, %class.SkSTArray* dereferenceable(32) %70, %"class.SkSL::OutputStream"* dereferenceable(8) %3)
  call void @_ZN4SkSL18SPIRVCodeGenerator28writeGLSLExtendedInstructionERKNS_4TypeEjjjjRKNSt3__16vectorIjNS4_9allocatorIjEEEERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %72, i32 %74, i32 49, i32 1, i32 1, %"class.std::__1::vector.382"* nonnull dereferenceable(24) %68, %"class.SkSL::OutputStream"* dereferenceable(8) %3)
  %995 = load i32*, i32** %993, align 8
  %996 = icmp eq i32* %995, null
  br i1 %996, label %1002, label %997

997:                                              ; preds = %991
  %998 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %68, i64 0, i32 0, i32 1
  %999 = ptrtoint i32* %995 to i64
  %1000 = bitcast i32** %998 to i64*
  store i64 %999, i64* %1000, align 8
  %1001 = bitcast i32* %995 to i8*
  call void @_ZdlPv(i8* %1001) #16
  br label %1002

1002:                                             ; preds = %991, %997
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %992) #14
  br label %1027

1003:                                             ; preds = %4
  %1004 = bitcast %"class.std::__1::vector.382"* %69 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1004) #14
  %1005 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %69, i64 0, i32 0, i32 0
  %1006 = bitcast %"class.std::__1::vector.382"* %69 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1006, i8 -86, i64 24, i1 false)
  call void @_ZN4SkSL18SPIRVCodeGenerator9vectorizeERK9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEELb0EERNS_12OutputStreamE(%"class.std::__1::vector.382"* nonnull sret %69, %"class.SkSL::SPIRVCodeGenerator"* %0, %class.SkSTArray* dereferenceable(32) %70, %"class.SkSL::OutputStream"* dereferenceable(8) %3)
  call void @_ZN4SkSL18SPIRVCodeGenerator28writeGLSLExtendedInstructionERKNS_4TypeEjjjjRKNSt3__16vectorIjNS4_9allocatorIjEEEERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %72, i32 %74, i32 48, i32 1, i32 1, %"class.std::__1::vector.382"* nonnull dereferenceable(24) %69, %"class.SkSL::OutputStream"* dereferenceable(8) %3)
  %1007 = load i32*, i32** %1005, align 8
  %1008 = icmp eq i32* %1007, null
  br i1 %1008, label %1014, label %1009

1009:                                             ; preds = %1003
  %1010 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %69, i64 0, i32 0, i32 1
  %1011 = ptrtoint i32* %1007 to i64
  %1012 = bitcast i32** %1010 to i64*
  store i64 %1011, i64* %1012, align 8
  %1013 = bitcast i32* %1007 to i8*
  call void @_ZdlPv(i8* %1013) #16
  br label %1014

1014:                                             ; preds = %1003, %1009
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1004) #14
  br label %1027

1015:                                             ; preds = %4
  %1016 = getelementptr inbounds %"class.SkSL::FunctionCall", %"class.SkSL::FunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 16
  %1017 = bitcast i8* %1016 to %"class.std::__1::unique_ptr.336"**
  %1018 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %1017, align 8
  %1019 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %1018, i64 0, i32 0, i32 0, i32 0
  %1020 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %1019, align 8
  %1021 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %1020, %"class.SkSL::OutputStream"* dereferenceable(8) %3)
  %1022 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %1017, align 8
  %1023 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %1022, i64 1, i32 0, i32 0, i32 0
  %1024 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %1023, align 8
  %1025 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %1024, %"class.SkSL::OutputStream"* dereferenceable(8) %3)
  %1026 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator30writeComponentwiseMatrixBinaryERKNS_4TypeEjj6SpvOp_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %72, i32 %1021, i32 %1025, i32 133, %"class.SkSL::OutputStream"* dereferenceable(8) %3)
  br label %1027

1027:                                             ; preds = %217, %226, %496, %831, %843, %855, %867, %990, %1002, %1014, %1015, %4, %600, %640, %562, %721, %730, %804, %729
  %1028 = phi i32 [ 0, %729 ], [ %74, %4 ], [ %1026, %1015 ], [ %74, %1014 ], [ %74, %1002 ], [ %74, %990 ], [ %74, %867 ], [ %74, %855 ], [ %74, %843 ], [ %74, %831 ], [ %74, %496 ], [ %74, %226 ], [ %74, %217 ], [ %74, %600 ], [ %74, %640 ], [ %74, %562 ], [ %74, %721 ], [ %805, %804 ], [ %74, %730 ]
  ret i32 %1028
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18SPIRVCodeGenerator9vectorizeERK9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEELb0EERNS_12OutputStreamE(%"class.std::__1::vector.382"* noalias sret, %"class.SkSL::SPIRVCodeGenerator"*, %class.SkSTArray* nocapture readonly dereferenceable(32), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %2, i64 0, i32 0, i32 0, i64 16
  %12 = bitcast i8* %11 to %"class.std::__1::unique_ptr.336"**
  %13 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %12, align 8
  %14 = icmp eq %"class.std::__1::unique_ptr.336"* %13, null
  br i1 %14, label %23, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %2, i64 0, i32 0, i32 0, i64 24
  %17 = bitcast i8* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = lshr i64 %18, 1
  %20 = and i64 %19, 2147483647
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %13, i64 %20
  %22 = icmp eq i64 %20, 0
  br i1 %22, label %23, label %70

23:                                               ; preds = %94, %4, %15
  %24 = phi i32 [ 0, %15 ], [ 0, %4 ], [ %95, %94 ]
  %25 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %0, i64 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %27 = bitcast %"class.std::__1::vector.382"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 24, i1 false) #14
  %28 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %2, i64 0, i32 0, i32 0, i64 24
  %29 = bitcast i8* %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = lshr i64 %30, 1
  %32 = and i64 %31, 2147483647
  %33 = bitcast i32** %26 to i64*
  %34 = bitcast %"class.std::__1::vector.382"* %0 to i64*
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %46, label %36

36:                                               ; preds = %23
  %37 = shl nuw nsw i64 %32, 2
  %38 = tail call i8* @_Znwm(i64 %37) #16
  %39 = bitcast i8* %38 to i32*
  %40 = getelementptr inbounds i32, i32* %39, i64 %32
  %41 = ptrtoint i32* %40 to i64
  %42 = insertelement <2 x i8*> undef, i8* %38, i32 0
  %43 = shufflevector <2 x i8*> %42, <2 x i8*> undef, <2 x i32> zeroinitializer
  %44 = ptrtoint <2 x i8*> %43 to <2 x i64>
  %45 = bitcast %"class.std::__1::vector.382"* %0 to <2 x i64>*
  store <2 x i64> %44, <2 x i64>* %45, align 8
  store i64 %41, i64* %33, align 8
  br label %46

46:                                               ; preds = %36, %23
  %47 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %12, align 8
  %48 = icmp eq %"class.std::__1::unique_ptr.336"* %47, null
  br i1 %48, label %286, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %47, i64 %32
  %51 = icmp eq i64 %32, 0
  br i1 %51, label %286, label %52

52:                                               ; preds = %49
  %53 = icmp eq i32 %24, 0
  %54 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %1, i64 0, i32 0, i32 1
  %55 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %1, i64 0, i32 5
  %56 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %1, i64 0, i32 19, i32 0
  %57 = bitcast i32* %8 to i8*
  %58 = bitcast %"class.SkSL::OutputStream"* %56 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %59 = bitcast i32* %10 to i8*
  %60 = bitcast i32* %9 to i8*
  %61 = add nsw i32 %24, 3
  %62 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %1, i64 0, i32 1
  %63 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %1, i64 0, i32 2
  %64 = bitcast i32* %7 to i8*
  %65 = bitcast %"class.SkSL::OutputStream"* %3 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %66 = bitcast i32* %6 to i8*
  %67 = icmp sgt i32 %24, 0
  %68 = bitcast i32* %5 to i8*
  %69 = bitcast i32** %25 to i64*
  br label %98

70:                                               ; preds = %15, %94
  %71 = phi i32 [ %95, %94 ], [ 0, %15 ]
  %72 = phi %"class.std::__1::unique_ptr.336"* [ %96, %94 ], [ %13, %15 ]
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %73, align 8
  %75 = bitcast %"class.SkSL::Expression"* %74 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %76 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %75, align 8
  %77 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %76, i64 3
  %78 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %77, align 8
  %79 = tail call dereferenceable(184) %"class.SkSL::Type"* %78(%"class.SkSL::Expression"* %74) #14
  %80 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %79, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = icmp ne i32 %81, 11
  %83 = icmp ne i32 %71, 0
  %84 = or i1 %83, %82
  br i1 %84, label %94, label %85

85:                                               ; preds = %70
  %86 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %73, align 8
  %87 = bitcast %"class.SkSL::Expression"* %86 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %88 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %87, align 8
  %89 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %88, i64 3
  %90 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %89, align 8
  %91 = tail call dereferenceable(184) %"class.SkSL::Type"* %90(%"class.SkSL::Expression"* %86) #14
  %92 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %91, i64 0, i32 8
  %93 = load i32, i32* %92, align 8
  br label %94

94:                                               ; preds = %70, %85
  %95 = phi i32 [ %71, %70 ], [ %93, %85 ]
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %72, i64 1
  %97 = icmp eq %"class.std::__1::unique_ptr.336"* %96, %21
  br i1 %97, label %23, label %70

98:                                               ; preds = %52, %283
  %99 = phi %"class.std::__1::unique_ptr.336"* [ %47, %52 ], [ %284, %283 ]
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %99, i64 0, i32 0, i32 0, i32 0
  %101 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %100, align 8
  %102 = bitcast %"class.SkSL::Expression"* %101 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %103 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %102, align 8
  %104 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %103, i64 3
  %105 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %104, align 8
  %106 = call dereferenceable(184) %"class.SkSL::Type"* %105(%"class.SkSL::Expression"* %101) #14
  %107 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %100, align 8
  %108 = call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %1, %"class.SkSL::Expression"* dereferenceable(24) %107, %"class.SkSL::OutputStream"* dereferenceable(8) %3)
  br i1 %53, label %232, label %109

109:                                              ; preds = %98
  %110 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %106, i64 0, i32 3
  %111 = load i32, i32* %110, align 8
  %112 = icmp eq i32 %111, 8
  br i1 %112, label %113, label %232

113:                                              ; preds = %109
  %114 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %100, align 8
  %115 = bitcast %"class.SkSL::Expression"* %114 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %116 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %115, align 8
  %117 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %116, i64 3
  %118 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %117, align 8
  %119 = call dereferenceable(184) %"class.SkSL::Type"* %118(%"class.SkSL::Expression"* %114) #14
  %120 = icmp eq %"class.SkSL::Type"* %119, null
  br i1 %120, label %162, label %121

121:                                              ; preds = %113
  %122 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %119, i64 0, i32 6
  %123 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %122, align 8
  %124 = icmp eq %"class.SkSL::Type"* %123, null
  %125 = select i1 %124, %"class.SkSL::Type"* %119, %"class.SkSL::Type"* %123
  %126 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %125, i64 0, i32 4
  %127 = load i32, i32* %126, align 4
  %128 = icmp ult i32 %127, 3
  br i1 %128, label %133, label %129

129:                                              ; preds = %121
  %130 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %119, i64 0, i32 3
  %131 = load i32, i32* %130, align 8
  %132 = icmp eq i32 %131, 6
  br i1 %132, label %133, label %162

133:                                              ; preds = %129, %121
  br i1 %124, label %139, label %134

134:                                              ; preds = %133, %134
  %135 = phi %"class.SkSL::Type"* [ %137, %134 ], [ %123, %133 ]
  %136 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %135, i64 0, i32 6
  %137 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %136, align 8
  %138 = icmp eq %"class.SkSL::Type"* %137, null
  br i1 %138, label %139, label %134

139:                                              ; preds = %134, %133
  %140 = phi %"class.SkSL::Type"* [ %119, %133 ], [ %135, %134 ]
  %141 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %140, i64 0, i32 16
  %142 = load i8, i8* %141, align 8, !range !2
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %144, label %162

144:                                              ; preds = %139
  %145 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %54, align 8
  %146 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %145, i64 0, i32 1, i32 0, i32 0, i32 0
  %147 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %146, align 8
  %148 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %147, i64 0, i32 1, i32 3
  %149 = load i8, i8* %148, align 1, !range !2
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %151, label %162

151:                                              ; preds = %144
  %152 = load i32, i32* %55, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %57) #14
  store i32 196679, i32* %8, align 4
  %153 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %58, align 8
  %154 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %153, i64 3
  %155 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %154, align 8
  call void %155(%"class.SkSL::OutputStream"* %56, i8* nonnull %57, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %57) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %59) #14
  store i32 %152, i32* %10, align 4
  %156 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %58, align 8
  %157 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %156, i64 3
  %158 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %157, align 8
  call void %158(%"class.SkSL::OutputStream"* %56, i8* nonnull %59, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %59) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %60) #14
  store i32 0, i32* %9, align 4
  %159 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %58, align 8
  %160 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %159, i64 3
  %161 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %160, align 8
  call void %161(%"class.SkSL::OutputStream"* %56, i8* nonnull %60, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %60) #14
  br label %162

162:                                              ; preds = %113, %129, %139, %144, %151
  %163 = load i32, i32* %55, align 8
  %164 = add i32 %163, 1
  store i32 %164, i32* %55, align 8
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %1, i32 80, i32 %61, %"class.SkSL::OutputStream"* dereferenceable(8) %3)
  %165 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %62, align 8
  %166 = call dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL4Type10toCompoundERKNS_7ContextEii(%"class.SkSL::Type"* %106, %"class.SkSL::Context"* dereferenceable(744) %165, i32 %24, i32 1) #14
  %167 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %1, %"class.SkSL::Type"* dereferenceable(184) %166, %"class.SkSL::MemoryLayout"* dereferenceable(4) %63) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %64)
  store i32 %167, i32* %7, align 4
  %168 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %65, align 8
  %169 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %168, i64 3
  %170 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %169, align 8
  call void %170(%"class.SkSL::OutputStream"* %3, i8* nonnull %64, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %64)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %66)
  store i32 %163, i32* %6, align 4
  %171 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %65, align 8
  %172 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %171, i64 3
  %173 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %172, align 8
  call void %173(%"class.SkSL::OutputStream"* %3, i8* nonnull %66, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %66)
  br i1 %67, label %225, label %174

174:                                              ; preds = %225, %162
  %175 = load i32*, i32** %25, align 8
  %176 = load i32*, i32** %26, align 8
  %177 = icmp eq i32* %175, %176
  %178 = ptrtoint i32* %176 to i64
  br i1 %177, label %182, label %179

179:                                              ; preds = %174
  store i32 %163, i32* %175, align 4
  %180 = getelementptr inbounds i32, i32* %175, i64 1
  %181 = ptrtoint i32* %180 to i64
  store i64 %181, i64* %69, align 8
  br label %283

182:                                              ; preds = %174
  %183 = ptrtoint i32* %175 to i64
  %184 = load i64, i64* %34, align 8
  %185 = sub i64 %183, %184
  %186 = ashr exact i64 %185, 2
  %187 = add nsw i64 %186, 1
  %188 = icmp ugt i64 %187, 4611686018427387903
  br i1 %188, label %189, label %191

189:                                              ; preds = %182
  %190 = bitcast %"class.std::__1::vector.382"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %190) #15
  unreachable

191:                                              ; preds = %182
  %192 = sub i64 %178, %184
  %193 = ashr exact i64 %192, 2
  %194 = icmp ult i64 %193, 2305843009213693951
  br i1 %194, label %195, label %203

195:                                              ; preds = %191
  %196 = ashr exact i64 %192, 1
  %197 = icmp ult i64 %196, %187
  %198 = select i1 %197, i64 %187, i64 %196
  %199 = icmp eq i64 %198, 0
  br i1 %199, label %208, label %200

200:                                              ; preds = %195
  %201 = icmp ugt i64 %198, 4611686018427387903
  br i1 %201, label %202, label %203

202:                                              ; preds = %200
  call void @abort() #15
  unreachable

203:                                              ; preds = %200, %191
  %204 = phi i64 [ %198, %200 ], [ 4611686018427387903, %191 ]
  %205 = shl i64 %204, 2
  %206 = call i8* @_Znwm(i64 %205) #16
  %207 = bitcast i8* %206 to i32*
  br label %208

208:                                              ; preds = %203, %195
  %209 = phi i64 [ %204, %203 ], [ 0, %195 ]
  %210 = phi i8* [ %206, %203 ], [ null, %195 ]
  %211 = phi i32* [ %207, %203 ], [ null, %195 ]
  %212 = getelementptr inbounds i32, i32* %211, i64 %186
  %213 = getelementptr inbounds i32, i32* %211, i64 %209
  %214 = ptrtoint i32* %213 to i64
  store i32 %163, i32* %212, align 4
  %215 = getelementptr inbounds i32, i32* %212, i64 1
  %216 = ptrtoint i32* %215 to i64
  %217 = ptrtoint i32* %211 to i64
  %218 = icmp sgt i64 %185, 0
  br i1 %218, label %219, label %221

219:                                              ; preds = %208
  %220 = inttoptr i64 %184 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %210, i8* align 4 %220, i64 %185, i1 false) #14
  br label %221

221:                                              ; preds = %219, %208
  store i64 %217, i64* %34, align 8
  store i64 %216, i64* %69, align 8
  store i64 %214, i64* %33, align 8
  %222 = icmp eq i64 %184, 0
  br i1 %222, label %283, label %223

223:                                              ; preds = %221
  %224 = inttoptr i64 %184 to i8*
  call void @_ZdlPv(i8* %224) #16
  br label %283

225:                                              ; preds = %162, %225
  %226 = phi i32 [ %230, %225 ], [ 0, %162 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %68)
  store i32 %108, i32* %5, align 4
  %227 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %65, align 8
  %228 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %227, i64 3
  %229 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %228, align 8
  call void %229(%"class.SkSL::OutputStream"* %3, i8* nonnull %68, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %68)
  %230 = add nuw nsw i32 %226, 1
  %231 = icmp eq i32 %230, %24
  br i1 %231, label %174, label %225

232:                                              ; preds = %98, %109
  %233 = load i32*, i32** %25, align 8
  %234 = load i32*, i32** %26, align 8
  %235 = icmp eq i32* %233, %234
  %236 = ptrtoint i32* %234 to i64
  br i1 %235, label %240, label %237

237:                                              ; preds = %232
  store i32 %108, i32* %233, align 4
  %238 = getelementptr inbounds i32, i32* %233, i64 1
  %239 = ptrtoint i32* %238 to i64
  store i64 %239, i64* %69, align 8
  br label %283

240:                                              ; preds = %232
  %241 = ptrtoint i32* %233 to i64
  %242 = load i64, i64* %34, align 8
  %243 = sub i64 %241, %242
  %244 = ashr exact i64 %243, 2
  %245 = add nsw i64 %244, 1
  %246 = icmp ugt i64 %245, 4611686018427387903
  br i1 %246, label %247, label %249

247:                                              ; preds = %240
  %248 = bitcast %"class.std::__1::vector.382"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %248) #15
  unreachable

249:                                              ; preds = %240
  %250 = sub i64 %236, %242
  %251 = ashr exact i64 %250, 2
  %252 = icmp ult i64 %251, 2305843009213693951
  br i1 %252, label %253, label %261

253:                                              ; preds = %249
  %254 = ashr exact i64 %250, 1
  %255 = icmp ult i64 %254, %245
  %256 = select i1 %255, i64 %245, i64 %254
  %257 = icmp eq i64 %256, 0
  br i1 %257, label %266, label %258

258:                                              ; preds = %253
  %259 = icmp ugt i64 %256, 4611686018427387903
  br i1 %259, label %260, label %261

260:                                              ; preds = %258
  call void @abort() #15
  unreachable

261:                                              ; preds = %258, %249
  %262 = phi i64 [ %256, %258 ], [ 4611686018427387903, %249 ]
  %263 = shl i64 %262, 2
  %264 = call i8* @_Znwm(i64 %263) #16
  %265 = bitcast i8* %264 to i32*
  br label %266

266:                                              ; preds = %261, %253
  %267 = phi i64 [ %262, %261 ], [ 0, %253 ]
  %268 = phi i8* [ %264, %261 ], [ null, %253 ]
  %269 = phi i32* [ %265, %261 ], [ null, %253 ]
  %270 = getelementptr inbounds i32, i32* %269, i64 %244
  %271 = getelementptr inbounds i32, i32* %269, i64 %267
  %272 = ptrtoint i32* %271 to i64
  store i32 %108, i32* %270, align 4
  %273 = getelementptr inbounds i32, i32* %270, i64 1
  %274 = ptrtoint i32* %273 to i64
  %275 = ptrtoint i32* %269 to i64
  %276 = icmp sgt i64 %243, 0
  br i1 %276, label %277, label %279

277:                                              ; preds = %266
  %278 = inttoptr i64 %242 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %268, i8* align 4 %278, i64 %243, i1 false) #14
  br label %279

279:                                              ; preds = %277, %266
  store i64 %275, i64* %34, align 8
  store i64 %274, i64* %69, align 8
  store i64 %272, i64* %33, align 8
  %280 = icmp eq i64 %242, 0
  br i1 %280, label %283, label %281

281:                                              ; preds = %279
  %282 = inttoptr i64 %242 to i8*
  call void @_ZdlPv(i8* %282) #16
  br label %283

283:                                              ; preds = %281, %279, %237, %223, %221, %179
  %284 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %99, i64 1
  %285 = icmp eq %"class.std::__1::unique_ptr.336"* %284, %50
  br i1 %285, label %286, label %98

286:                                              ; preds = %283, %46, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18SPIRVCodeGenerator28writeGLSLExtendedInstructionERKNS_4TypeEjjjjRKNSt3__16vectorIjNS4_9allocatorIjEEEERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::Type"* dereferenceable(184), i32, i32, i32, i32, %"class.std::__1::vector.382"* nocapture readonly dereferenceable(24), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %6, i64 0, i32 0, i32 1
  %17 = bitcast i32** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::vector.382"* %6 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %18, %20
  %22 = lshr exact i64 %21, 2
  %23 = trunc i64 %22 to i32
  %24 = add i32 %23, 5
  tail call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 12, i32 %24, %"class.SkSL::OutputStream"* dereferenceable(8) %7)
  %25 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %26 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %1, %"class.SkSL::MemoryLayout"* dereferenceable(4) %25) #14
  %27 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27)
  store i32 %26, i32* %14, align 4
  %28 = bitcast %"class.SkSL::OutputStream"* %7 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %29 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %29, i64 3
  %31 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %30, align 8
  call void %31(%"class.SkSL::OutputStream"* %7, i8* nonnull %27, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27)
  %32 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %32)
  store i32 %2, i32* %13, align 4
  %33 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %28, align 8
  %34 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %33, i64 3
  %35 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %34, align 8
  call void %35(%"class.SkSL::OutputStream"* %7, i8* nonnull %32, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32)
  %36 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 6
  %37 = load i32, i32* %36, align 4
  %38 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %38)
  store i32 %37, i32* %12, align 4
  %39 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %28, align 8
  %40 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %39, i64 3
  %41 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %40, align 8
  call void %41(%"class.SkSL::OutputStream"* %7, i8* nonnull %38, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %38)
  %42 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 3
  %43 = load i32, i32* %42, align 8
  switch i32 %43, label %73 [
    i32 8, label %44
    i32 11, label %44
    i32 4, label %44
    i32 1, label %60
  ]

44:                                               ; preds = %8, %8, %8
  %45 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 6
  %46 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %45, align 8
  %47 = icmp eq %"class.SkSL::Type"* %46, null
  %48 = select i1 %47, %"class.SkSL::Type"* %1, %"class.SkSL::Type"* %46
  %49 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %48, i64 0, i32 4
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %57

52:                                               ; preds = %44
  %53 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %53)
  store i32 %3, i32* %10, align 4
  %54 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %28, align 8
  %55 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %54, i64 3
  %56 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %55, align 8
  call void %56(%"class.SkSL::OutputStream"* %7, i8* nonnull %53, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %53)
  br label %73

57:                                               ; preds = %44
  switch i32 %43, label %73 [
    i32 11, label %58
    i32 8, label %58
  ]

58:                                               ; preds = %57, %57
  %59 = icmp eq i32 %50, 1
  br i1 %59, label %60, label %65

60:                                               ; preds = %8, %58
  %61 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %61)
  store i32 %4, i32* %9, align 4
  %62 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %28, align 8
  %63 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %62, i64 3
  %64 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %63, align 8
  call void %64(%"class.SkSL::OutputStream"* %7, i8* nonnull %61, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %61)
  br label %73

65:                                               ; preds = %58
  switch i32 %43, label %73 [
    i32 8, label %66
    i32 11, label %66
  ]

66:                                               ; preds = %65, %65
  %67 = icmp eq i32 %50, 2
  br i1 %67, label %68, label %73

68:                                               ; preds = %66
  %69 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %69)
  store i32 %5, i32* %11, align 4
  %70 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %28, align 8
  %71 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %70, i64 3
  %72 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %71, align 8
  call void %72(%"class.SkSL::OutputStream"* %7, i8* nonnull %69, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %69)
  br label %73

73:                                               ; preds = %8, %57, %65, %60, %66, %68, %52
  %74 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %6, i64 0, i32 0, i32 0
  %75 = load i32*, i32** %74, align 8
  %76 = load i32*, i32** %16, align 8
  %77 = icmp eq i32* %75, %76
  br i1 %77, label %80, label %78

78:                                               ; preds = %73
  %79 = bitcast i32* %15 to i8*
  br label %81

80:                                               ; preds = %81, %73
  ret void

81:                                               ; preds = %78, %81
  %82 = phi i32* [ %75, %78 ], [ %87, %81 ]
  %83 = load i32, i32* %82, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %79)
  store i32 %83, i32* %15, align 4
  %84 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %28, align 8
  %85 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %84, i64 3
  %86 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %85, align 8
  call void %86(%"class.SkSL::OutputStream"* %7, i8* nonnull %79, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %79)
  %87 = getelementptr inbounds i32, i32* %82, i64 1
  %88 = icmp eq i32* %87, %76
  br i1 %88, label %80, label %81
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL19ConstructorCompoundC2EiRKNS_4TypeE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS5_14default_deleteIS7_EEEELb0EE(%"class.SkSL::ConstructorCompound"*, i32, %"class.SkSL::Type"* dereferenceable(184), %class.SkSTArray*) unnamed_addr #0 comdat align 2 {
  %5 = alloca %class.SkSTArray, align 8
  %6 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %5, i64 0, i32 0, i32 0, i64 16
  %7 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %5, i64 0, i32 0, i32 0, i64 0
  %8 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %5, i64 0, i32 0, i32 0, i64 24
  %9 = bitcast i8* %8 to i64*
  %10 = bitcast i8* %6 to i8**
  store i8* %7, i8** %10, align 8
  store i64 17179869184, i64* %9, align 8
  %11 = bitcast i8* %6 to %class.SkTArray*
  %12 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %3, i64 0, i32 0, i32 0, i64 16
  %13 = bitcast i8* %12 to %class.SkTArray*
  %14 = call dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray* %11, %class.SkTArray* dereferenceable(16) %13) #14
  %15 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i32 %1, i32* %16, align 8
  %17 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i32 34, i32* %17, align 4
  %18 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  store %"class.SkSL::Type"* %2, %"class.SkSL::Type"** %18, align 8
  %19 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %0, i64 0, i32 0, i32 0, i32 1
  %20 = bitcast %"class.std::__1::unique_ptr.336"* %19 to i64*
  store i64 0, i64* %20, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN4SkSL24MultiArgumentConstructorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %21 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 16
  %22 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %23 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 24
  %24 = bitcast i8* %23 to i64*
  %25 = bitcast i8* %21 to i8**
  store i8* %22, i8** %25, align 8
  store i64 17179869184, i64* %24, align 8
  %26 = bitcast i8* %21 to %class.SkTArray*
  %27 = call dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray* %26, %class.SkTArray* dereferenceable(16) %11) #14
  %28 = load i64, i64* %9, align 8
  %29 = and i64 %28, 4294967294
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %4
  %32 = bitcast i8* %6 to %"class.std::__1::unique_ptr.336"**
  br label %37

33:                                               ; preds = %48, %4
  %34 = phi i64 [ %28, %4 ], [ %50, %48 ]
  %35 = and i64 %34, 1
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %56, label %54

37:                                               ; preds = %48, %31
  %38 = phi i64 [ 0, %31 ], [ %49, %48 ]
  %39 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %32, align 8
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %39, i64 %38, i32 0, i32 0, i32 0
  %41 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %40, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %40, align 8
  %42 = icmp eq %"class.SkSL::Expression"* %41, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %37
  %44 = bitcast %"class.SkSL::Expression"* %41 to void (%"class.SkSL::Expression"*)***
  %45 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %45, i64 1
  %47 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %46, align 8
  call void %47(%"class.SkSL::Expression"* nonnull %41) #14
  br label %48

48:                                               ; preds = %43, %37
  %49 = add nuw nsw i64 %38, 1
  %50 = load i64, i64* %9, align 8
  %51 = lshr i64 %50, 1
  %52 = and i64 %51, 2147483647
  %53 = icmp ult i64 %49, %52
  br i1 %53, label %37, label %33

54:                                               ; preds = %33
  %55 = load i8*, i8** %10, align 8
  call void @_Z7sk_freePv(i8* %55) #14
  br label %56

56:                                               ; preds = %33, %54
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN4SkSL19ConstructorCompoundE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator19writeConstantVectorERKNS_14AnyConstructorE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::AnyConstructor"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %"struct.SkSL::SPIRVVectorConstant", align 4
  %11 = alloca %"struct.std::__1::pair.472", align 4
  %12 = getelementptr inbounds %"class.SkSL::AnyConstructor", %"class.SkSL::AnyConstructor"* %1, i64 0, i32 0
  %13 = bitcast %"class.SkSL::AnyConstructor"* %1 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %14 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %14, i64 3
  %16 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %15, align 8
  %17 = tail call dereferenceable(184) %"class.SkSL::Type"* %16(%"class.SkSL::Expression"* %12) #14
  %18 = bitcast %"struct.SkSL::SPIRVVectorConstant"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %18) #14
  %19 = getelementptr inbounds %"struct.SkSL::SPIRVVectorConstant", %"struct.SkSL::SPIRVVectorConstant"* %10, i64 0, i32 0
  %20 = getelementptr inbounds %"struct.SkSL::SPIRVVectorConstant", %"struct.SkSL::SPIRVVectorConstant"* %10, i64 0, i32 1, i64 0
  %21 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %22 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %17, %"class.SkSL::MemoryLayout"* dereferenceable(4) %21) #14
  store i32 %22, i32* %19, align 4
  %23 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %17, i64 0, i32 8
  %24 = bitcast i32* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %24, i8 -1, i64 16, i1 false)
  %25 = load i32, i32* %23, align 8
  %26 = icmp sgt i32 %25, 0
  br i1 %26, label %27, label %45

27:                                               ; preds = %2
  %28 = bitcast %"class.SkSL::AnyConstructor"* %1 to %"class.SkSL::Expression"* (%"class.SkSL::AnyConstructor"*, i32)***
  %29 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 15, i32 0
  br label %30

30:                                               ; preds = %27, %38
  %31 = phi i64 [ 0, %27 ], [ %41, %38 ]
  %32 = load %"class.SkSL::Expression"* (%"class.SkSL::AnyConstructor"*, i32)**, %"class.SkSL::Expression"* (%"class.SkSL::AnyConstructor"*, i32)*** %28, align 8
  %33 = getelementptr inbounds %"class.SkSL::Expression"* (%"class.SkSL::AnyConstructor"*, i32)*, %"class.SkSL::Expression"* (%"class.SkSL::AnyConstructor"*, i32)** %32, i64 9
  %34 = load %"class.SkSL::Expression"* (%"class.SkSL::AnyConstructor"*, i32)*, %"class.SkSL::Expression"* (%"class.SkSL::AnyConstructor"*, i32)** %33, align 8
  %35 = trunc i64 %31 to i32
  %36 = tail call %"class.SkSL::Expression"* %34(%"class.SkSL::AnyConstructor"* %1, i32 %35) #14
  %37 = icmp eq %"class.SkSL::Expression"* %36, null
  br i1 %37, label %150, label %38

38:                                               ; preds = %30
  %39 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* nonnull dereferenceable(24) %36, %"class.SkSL::OutputStream"* dereferenceable(8) %29)
  %40 = getelementptr inbounds %"struct.SkSL::SPIRVVectorConstant", %"struct.SkSL::SPIRVVectorConstant"* %10, i64 0, i32 1, i64 %31
  store i32 %39, i32* %40, align 4
  %41 = add nuw nsw i64 %31, 1
  %42 = load i32, i32* %23, align 8
  %43 = sext i32 %42 to i64
  %44 = icmp slt i64 %41, %43
  br i1 %44, label %30, label %45

45:                                               ; preds = %38, %2
  %46 = bitcast %"struct.std::__1::pair.472"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %46, i8* nonnull align 4 %18, i64 20, i1 false) #14
  %47 = getelementptr inbounds %"struct.std::__1::pair.472", %"struct.std::__1::pair.472"* %11, i64 0, i32 1
  store i32 -1, i32* %47, align 4
  %48 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 23, i32 0
  %49 = getelementptr inbounds %"struct.std::__1::pair.472", %"struct.std::__1::pair.472"* %11, i64 0, i32 0
  %50 = call { %"struct.std::__1::__hash_node_base.272"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL19SPIRVVectorConstantEjEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_S9_S7_Lb1EEENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS3_JNS_4pairIKS3_jEEEEENSH_INS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.268"* %48, %"struct.SkSL::SPIRVVectorConstant"* nonnull dereferenceable(20) %49, %"struct.std::__1::pair.472"* nonnull dereferenceable(24) %11) #14
  %51 = extractvalue { %"struct.std::__1::__hash_node_base.272"*, i8 } %50, 0
  %52 = extractvalue { %"struct.std::__1::__hash_node_base.272"*, i8 } %50, 1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #14
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %59

54:                                               ; preds = %45
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.272", %"struct.std::__1::__hash_node_base.272"* %51, i64 2
  %56 = bitcast %"struct.std::__1::__hash_node_base.272"* %55 to %"struct.std::__1::pair.472"*
  %57 = getelementptr inbounds %"struct.std::__1::pair.472", %"struct.std::__1::pair.472"* %56, i64 0, i32 1
  %58 = load i32, i32* %57, align 4
  br label %150

59:                                               ; preds = %45
  %60 = icmp eq %"class.SkSL::Type"* %17, null
  br i1 %60, label %109, label %61

61:                                               ; preds = %59
  %62 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %17, i64 0, i32 6
  %63 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %62, align 8
  %64 = icmp eq %"class.SkSL::Type"* %63, null
  %65 = select i1 %64, %"class.SkSL::Type"* %17, %"class.SkSL::Type"* %63
  %66 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %65, i64 0, i32 4
  %67 = load i32, i32* %66, align 4
  %68 = icmp ult i32 %67, 3
  br i1 %68, label %73, label %69

69:                                               ; preds = %61
  %70 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %17, i64 0, i32 3
  %71 = load i32, i32* %70, align 8
  %72 = icmp eq i32 %71, 6
  br i1 %72, label %73, label %109

73:                                               ; preds = %69, %61
  br i1 %64, label %79, label %74

74:                                               ; preds = %73, %74
  %75 = phi %"class.SkSL::Type"* [ %77, %74 ], [ %63, %73 ]
  %76 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %75, i64 0, i32 6
  %77 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %76, align 8
  %78 = icmp eq %"class.SkSL::Type"* %77, null
  br i1 %78, label %79, label %74

79:                                               ; preds = %74, %73
  %80 = phi %"class.SkSL::Type"* [ %17, %73 ], [ %75, %74 ]
  %81 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %80, i64 0, i32 16
  %82 = load i8, i8* %81, align 8, !range !2
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %84, label %109

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 1
  %86 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %85, align 8
  %87 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %86, i64 0, i32 1, i32 0, i32 0, i32 0
  %88 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %87, align 8
  %89 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %88, i64 0, i32 1, i32 3
  %90 = load i8, i8* %89, align 1, !range !2
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %92, label %109

92:                                               ; preds = %84
  %93 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %94 = load i32, i32* %93, align 8
  %95 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %96 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %96) #14
  store i32 196679, i32* %7, align 4
  %97 = bitcast %"class.SkSL::OutputStream"* %95 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %98 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %97, align 8
  %99 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %98, i64 3
  %100 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %99, align 8
  call void %100(%"class.SkSL::OutputStream"* %95, i8* nonnull %96, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %96) #14
  %101 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %101) #14
  store i32 %94, i32* %9, align 4
  %102 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %97, align 8
  %103 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %102, i64 3
  %104 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %103, align 8
  call void %104(%"class.SkSL::OutputStream"* %95, i8* nonnull %101, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %101) #14
  %105 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %105) #14
  store i32 0, i32* %8, align 4
  %106 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %97, align 8
  %107 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %106, i64 3
  %108 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %107, align 8
  call void %108(%"class.SkSL::OutputStream"* %95, i8* nonnull %105, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %105) #14
  br label %109

109:                                              ; preds = %59, %69, %79, %84, %92
  %110 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %111 = load i32, i32* %110, align 8
  %112 = add i32 %111, 1
  store i32 %112, i32* %110, align 8
  %113 = load i32, i32* %23, align 8
  %114 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 15, i32 0
  %115 = shl i32 %113, 16
  %116 = add i32 %115, 196608
  %117 = or i32 %116, 44
  %118 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %118) #14
  store i32 %117, i32* %6, align 4
  %119 = bitcast %"class.SkSL::OutputStream"* %114 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %120 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %119, align 8
  %121 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %120, i64 3
  %122 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %121, align 8
  call void %122(%"class.SkSL::OutputStream"* %114, i8* nonnull %118, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %118) #14
  %123 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %123)
  store i32 %22, i32* %5, align 4
  %124 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %119, align 8
  %125 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %124, i64 3
  %126 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %125, align 8
  call void %126(%"class.SkSL::OutputStream"* %114, i8* nonnull %123, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %123)
  %127 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %127)
  store i32 %111, i32* %4, align 4
  %128 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %119, align 8
  %129 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %128, i64 3
  %130 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %129, align 8
  call void %130(%"class.SkSL::OutputStream"* %114, i8* nonnull %127, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %127)
  %131 = load i32, i32* %23, align 8
  %132 = icmp sgt i32 %131, 0
  br i1 %132, label %133, label %135

133:                                              ; preds = %109
  %134 = bitcast i32* %3 to i8*
  br label %139

135:                                              ; preds = %139, %109
  %136 = getelementptr inbounds %"struct.std::__1::__hash_node_base.272", %"struct.std::__1::__hash_node_base.272"* %51, i64 2
  %137 = bitcast %"struct.std::__1::__hash_node_base.272"* %136 to %"struct.std::__1::pair.472"*
  %138 = getelementptr inbounds %"struct.std::__1::pair.472", %"struct.std::__1::pair.472"* %137, i64 0, i32 1
  store i32 %111, i32* %138, align 4
  br label %150

139:                                              ; preds = %133, %139
  %140 = phi i64 [ 0, %133 ], [ %146, %139 ]
  %141 = getelementptr inbounds %"struct.SkSL::SPIRVVectorConstant", %"struct.SkSL::SPIRVVectorConstant"* %10, i64 0, i32 1, i64 %140
  %142 = load i32, i32* %141, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %134)
  store i32 %142, i32* %3, align 4
  %143 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %119, align 8
  %144 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %143, i64 3
  %145 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %144, align 8
  call void %145(%"class.SkSL::OutputStream"* %114, i8* nonnull %134, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %134)
  %146 = add nuw nsw i64 %140, 1
  %147 = load i32, i32* %23, align 8
  %148 = sext i32 %147 to i64
  %149 = icmp slt i64 %146, %148
  br i1 %149, label %139, label %135

150:                                              ; preds = %30, %135, %54
  %151 = phi i32 [ %58, %54 ], [ %111, %135 ], [ -1, %30 ]
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %18) #14
  ret i32 %151
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator30writeComponentwiseMatrixBinaryERKNS_4TypeEjj6SpvOp_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::Type"* dereferenceable(184), i32, i32, i32, %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca %"class.std::__1::vector.382", align 16
  %29 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 6
  %30 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %29, align 8
  %31 = icmp eq %"class.SkSL::Type"* %30, null
  %32 = select i1 %31, %"class.SkSL::Type"* %1, %"class.SkSL::Type"* %30
  %33 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 1
  %34 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %33, align 8
  %35 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 9
  %36 = load i32, i32* %35, align 4
  %37 = tail call dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL4Type10toCompoundERKNS_7ContextEii(%"class.SkSL::Type"* %32, %"class.SkSL::Context"* dereferenceable(744) %34, i32 %36, i32 1) #14
  %38 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %39 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %37, %"class.SkSL::MemoryLayout"* dereferenceable(4) %38) #14
  %40 = bitcast %"class.std::__1::vector.382"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #14
  %41 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %28, i64 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %28, i64 0, i32 0, i32 1
  %43 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %28, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %40, i8 0, i64 24, i1 false) #14
  %44 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 8
  %45 = load i32, i32* %44, align 8
  %46 = sext i32 %45 to i64
  %47 = bitcast i32** %43 to i64*
  %48 = bitcast %"class.std::__1::vector.382"* %28 to i64*
  %49 = icmp eq i32 %45, 0
  br i1 %49, label %92, label %50

50:                                               ; preds = %6
  %51 = icmp slt i32 %45, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %50
  tail call void @abort() #15
  unreachable

53:                                               ; preds = %50
  %54 = shl nsw i64 %46, 2
  %55 = tail call i8* @_Znwm(i64 %54) #16
  %56 = bitcast i8* %55 to i32*
  %57 = getelementptr inbounds i32, i32* %56, i64 %46
  %58 = ptrtoint i32* %57 to i64
  %59 = insertelement <2 x i8*> undef, i8* %55, i32 0
  %60 = shufflevector <2 x i8*> %59, <2 x i8*> undef, <2 x i32> zeroinitializer
  %61 = ptrtoint <2 x i8*> %60 to <2 x i64>
  %62 = bitcast %"class.std::__1::vector.382"* %28 to <2 x i64>*
  store <2 x i64> %61, <2 x i64>* %62, align 16
  store i64 %58, i64* %47, align 16
  %63 = icmp eq %"class.SkSL::Type"* %1, null
  %64 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 3
  %65 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 1
  %66 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %67 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %68 = bitcast i32* %21 to i8*
  %69 = bitcast %"class.SkSL::OutputStream"* %67 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %70 = bitcast i32* %23 to i8*
  %71 = bitcast i32* %22 to i8*
  %72 = bitcast i32* %20 to i8*
  %73 = bitcast %"class.SkSL::OutputStream"* %5 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %74 = bitcast i32* %19 to i8*
  %75 = bitcast i32* %18 to i8*
  %76 = bitcast i32* %17 to i8*
  %77 = bitcast i32* %14 to i8*
  %78 = bitcast i32* %16 to i8*
  %79 = bitcast i32* %15 to i8*
  %80 = bitcast i32* %13 to i8*
  %81 = bitcast i32* %12 to i8*
  %82 = bitcast i32* %11 to i8*
  %83 = bitcast i32* %10 to i8*
  %84 = bitcast i32* %7 to i8*
  %85 = bitcast i32* %9 to i8*
  %86 = bitcast i32* %8 to i8*
  %87 = bitcast i32** %42 to i64*
  %88 = bitcast i32* %27 to i8*
  %89 = bitcast i32* %26 to i8*
  %90 = bitcast i32* %25 to i8*
  %91 = bitcast i32* %24 to i8*
  br label %101

92:                                               ; preds = %304, %6
  %93 = call i32 @_ZN4SkSL18SPIRVCodeGenerator14writeCompositeERKNSt3__16vectorIjNS1_9allocatorIjEEEERKNS_4TypeERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.std::__1::vector.382"* nonnull dereferenceable(24) %28, %"class.SkSL::Type"* dereferenceable(184) %1, %"class.SkSL::OutputStream"* dereferenceable(8) %5)
  %94 = load i32*, i32** %41, align 16
  %95 = icmp eq i32* %94, null
  br i1 %95, label %100, label %96

96:                                               ; preds = %92
  %97 = ptrtoint i32* %94 to i64
  %98 = bitcast i32** %42 to i64*
  store i64 %97, i64* %98, align 8
  %99 = bitcast i32* %94 to i8*
  call void @_ZdlPv(i8* %99) #16
  br label %100

100:                                              ; preds = %92, %96
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #14
  ret i32 %93

101:                                              ; preds = %53, %304
  %102 = phi i64 [ 0, %53 ], [ %320, %304 ]
  br i1 %63, label %142, label %103

103:                                              ; preds = %101
  %104 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %29, align 8
  %105 = icmp eq %"class.SkSL::Type"* %104, null
  %106 = select i1 %105, %"class.SkSL::Type"* %1, %"class.SkSL::Type"* %104
  %107 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %106, i64 0, i32 4
  %108 = load i32, i32* %107, align 4
  %109 = icmp ult i32 %108, 3
  %110 = load i32, i32* %64, align 8
  %111 = icmp eq i32 %110, 6
  %112 = or i1 %109, %111
  br i1 %112, label %113, label %142

113:                                              ; preds = %103
  br i1 %105, label %119, label %114

114:                                              ; preds = %113, %114
  %115 = phi %"class.SkSL::Type"* [ %117, %114 ], [ %104, %113 ]
  %116 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %115, i64 0, i32 6
  %117 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %116, align 8
  %118 = icmp eq %"class.SkSL::Type"* %117, null
  br i1 %118, label %119, label %114

119:                                              ; preds = %114, %113
  %120 = phi %"class.SkSL::Type"* [ %1, %113 ], [ %115, %114 ]
  %121 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %120, i64 0, i32 16
  %122 = load i8, i8* %121, align 8, !range !2
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %124, label %142

124:                                              ; preds = %119
  %125 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %65, align 8
  %126 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %125, i64 0, i32 1, i32 0, i32 0, i32 0
  %127 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %126, align 8
  %128 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %127, i64 0, i32 1, i32 3
  %129 = load i8, i8* %128, align 1, !range !2
  %130 = icmp eq i8 %129, 0
  br i1 %130, label %131, label %142

131:                                              ; preds = %124
  %132 = load i32, i32* %66, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %68) #14
  store i32 196679, i32* %21, align 4
  %133 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %69, align 8
  %134 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %133, i64 3
  %135 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %134, align 8
  call void %135(%"class.SkSL::OutputStream"* %67, i8* nonnull %68, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %68) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %70) #14
  store i32 %132, i32* %23, align 4
  %136 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %69, align 8
  %137 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %136, i64 3
  %138 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %137, align 8
  call void %138(%"class.SkSL::OutputStream"* %67, i8* nonnull %70, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %70) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %71) #14
  store i32 0, i32* %22, align 4
  %139 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %69, align 8
  %140 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %139, i64 3
  %141 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %140, align 8
  call void %141(%"class.SkSL::OutputStream"* %67, i8* nonnull %71, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %71) #14
  br label %142

142:                                              ; preds = %103, %101, %119, %124, %131
  %143 = load i32, i32* %66, align 8
  %144 = add i32 %143, 1
  store i32 %144, i32* %66, align 8
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 81, i32 5, %"class.SkSL::OutputStream"* dereferenceable(8) %5) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %72) #14
  store i32 %39, i32* %20, align 4
  %145 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %73, align 8
  %146 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %145, i64 3
  %147 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %146, align 8
  call void %147(%"class.SkSL::OutputStream"* %5, i8* nonnull %72, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %72) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %74) #14
  store i32 %143, i32* %19, align 4
  %148 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %73, align 8
  %149 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %148, i64 3
  %150 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %149, align 8
  call void %150(%"class.SkSL::OutputStream"* %5, i8* nonnull %74, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %74) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %75) #14
  store i32 %2, i32* %18, align 4
  %151 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %73, align 8
  %152 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %151, i64 3
  %153 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %152, align 8
  call void %153(%"class.SkSL::OutputStream"* %5, i8* nonnull %75, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %75) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %76) #14
  %154 = trunc i64 %102 to i32
  store i32 %154, i32* %17, align 4
  %155 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %73, align 8
  %156 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %155, i64 3
  %157 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %156, align 8
  call void %157(%"class.SkSL::OutputStream"* %5, i8* nonnull %76, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %76) #14
  br i1 %63, label %197, label %158

158:                                              ; preds = %142
  %159 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %29, align 8
  %160 = icmp eq %"class.SkSL::Type"* %159, null
  %161 = select i1 %160, %"class.SkSL::Type"* %1, %"class.SkSL::Type"* %159
  %162 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %161, i64 0, i32 4
  %163 = load i32, i32* %162, align 4
  %164 = icmp ult i32 %163, 3
  %165 = load i32, i32* %64, align 8
  %166 = icmp eq i32 %165, 6
  %167 = or i1 %164, %166
  br i1 %167, label %168, label %197

168:                                              ; preds = %158
  br i1 %160, label %174, label %169

169:                                              ; preds = %168, %169
  %170 = phi %"class.SkSL::Type"* [ %172, %169 ], [ %159, %168 ]
  %171 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %170, i64 0, i32 6
  %172 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %171, align 8
  %173 = icmp eq %"class.SkSL::Type"* %172, null
  br i1 %173, label %174, label %169

174:                                              ; preds = %169, %168
  %175 = phi %"class.SkSL::Type"* [ %1, %168 ], [ %170, %169 ]
  %176 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %175, i64 0, i32 16
  %177 = load i8, i8* %176, align 8, !range !2
  %178 = icmp eq i8 %177, 0
  br i1 %178, label %179, label %197

179:                                              ; preds = %174
  %180 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %65, align 8
  %181 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %180, i64 0, i32 1, i32 0, i32 0, i32 0
  %182 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %181, align 8
  %183 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %182, i64 0, i32 1, i32 3
  %184 = load i8, i8* %183, align 1, !range !2
  %185 = icmp eq i8 %184, 0
  br i1 %185, label %186, label %197

186:                                              ; preds = %179
  %187 = load i32, i32* %66, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %77) #14
  store i32 196679, i32* %14, align 4
  %188 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %69, align 8
  %189 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %188, i64 3
  %190 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %189, align 8
  call void %190(%"class.SkSL::OutputStream"* %67, i8* nonnull %77, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %77) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %78) #14
  store i32 %187, i32* %16, align 4
  %191 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %69, align 8
  %192 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %191, i64 3
  %193 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %192, align 8
  call void %193(%"class.SkSL::OutputStream"* %67, i8* nonnull %78, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %78) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %79) #14
  store i32 0, i32* %15, align 4
  %194 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %69, align 8
  %195 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %194, i64 3
  %196 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %195, align 8
  call void %196(%"class.SkSL::OutputStream"* %67, i8* nonnull %79, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %79) #14
  br label %197

197:                                              ; preds = %158, %142, %174, %179, %186
  %198 = load i32, i32* %66, align 8
  %199 = add i32 %198, 1
  store i32 %199, i32* %66, align 8
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 81, i32 5, %"class.SkSL::OutputStream"* dereferenceable(8) %5) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %80) #14
  store i32 %39, i32* %13, align 4
  %200 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %73, align 8
  %201 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %200, i64 3
  %202 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %201, align 8
  call void %202(%"class.SkSL::OutputStream"* %5, i8* nonnull %80, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %80) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %81) #14
  store i32 %198, i32* %12, align 4
  %203 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %73, align 8
  %204 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %203, i64 3
  %205 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %204, align 8
  call void %205(%"class.SkSL::OutputStream"* %5, i8* nonnull %81, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %81) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %82) #14
  store i32 %3, i32* %11, align 4
  %206 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %73, align 8
  %207 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %206, i64 3
  %208 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %207, align 8
  call void %208(%"class.SkSL::OutputStream"* %5, i8* nonnull %82, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %82) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %83) #14
  store i32 %154, i32* %10, align 4
  %209 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %73, align 8
  %210 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %209, i64 3
  %211 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %210, align 8
  call void %211(%"class.SkSL::OutputStream"* %5, i8* nonnull %83, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %83) #14
  br i1 %63, label %251, label %212

212:                                              ; preds = %197
  %213 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %29, align 8
  %214 = icmp eq %"class.SkSL::Type"* %213, null
  %215 = select i1 %214, %"class.SkSL::Type"* %1, %"class.SkSL::Type"* %213
  %216 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %215, i64 0, i32 4
  %217 = load i32, i32* %216, align 4
  %218 = icmp ult i32 %217, 3
  %219 = load i32, i32* %64, align 8
  %220 = icmp eq i32 %219, 6
  %221 = or i1 %218, %220
  br i1 %221, label %222, label %251

222:                                              ; preds = %212
  br i1 %214, label %228, label %223

223:                                              ; preds = %222, %223
  %224 = phi %"class.SkSL::Type"* [ %226, %223 ], [ %213, %222 ]
  %225 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %224, i64 0, i32 6
  %226 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %225, align 8
  %227 = icmp eq %"class.SkSL::Type"* %226, null
  br i1 %227, label %228, label %223

228:                                              ; preds = %223, %222
  %229 = phi %"class.SkSL::Type"* [ %1, %222 ], [ %224, %223 ]
  %230 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %229, i64 0, i32 16
  %231 = load i8, i8* %230, align 8, !range !2
  %232 = icmp eq i8 %231, 0
  br i1 %232, label %233, label %251

233:                                              ; preds = %228
  %234 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %65, align 8
  %235 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %234, i64 0, i32 1, i32 0, i32 0, i32 0
  %236 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %235, align 8
  %237 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %236, i64 0, i32 1, i32 3
  %238 = load i8, i8* %237, align 1, !range !2
  %239 = icmp eq i8 %238, 0
  br i1 %239, label %240, label %251

240:                                              ; preds = %233
  %241 = load i32, i32* %66, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %84) #14
  store i32 196679, i32* %7, align 4
  %242 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %69, align 8
  %243 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %242, i64 3
  %244 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %243, align 8
  call void %244(%"class.SkSL::OutputStream"* %67, i8* nonnull %84, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %84) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %85) #14
  store i32 %241, i32* %9, align 4
  %245 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %69, align 8
  %246 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %245, i64 3
  %247 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %246, align 8
  call void %247(%"class.SkSL::OutputStream"* %67, i8* nonnull %85, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %85) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %86) #14
  store i32 0, i32* %8, align 4
  %248 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %69, align 8
  %249 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %248, i64 3
  %250 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %249, align 8
  call void %250(%"class.SkSL::OutputStream"* %67, i8* nonnull %86, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %86) #14
  br label %251

251:                                              ; preds = %212, %197, %228, %233, %240
  %252 = load i32, i32* %66, align 8
  %253 = add i32 %252, 1
  store i32 %253, i32* %66, align 8
  %254 = load i32*, i32** %42, align 8
  %255 = load i32*, i32** %43, align 16
  %256 = icmp ult i32* %254, %255
  %257 = ptrtoint i32* %255 to i64
  br i1 %256, label %258, label %261

258:                                              ; preds = %251
  store i32 %252, i32* %254, align 4
  %259 = getelementptr inbounds i32, i32* %254, i64 1
  %260 = ptrtoint i32* %259 to i64
  store i64 %260, i64* %87, align 8
  br label %304

261:                                              ; preds = %251
  %262 = ptrtoint i32* %254 to i64
  %263 = load i64, i64* %48, align 16
  %264 = sub i64 %262, %263
  %265 = ashr exact i64 %264, 2
  %266 = add nsw i64 %265, 1
  %267 = icmp ugt i64 %266, 4611686018427387903
  br i1 %267, label %268, label %270

268:                                              ; preds = %261
  %269 = bitcast %"class.std::__1::vector.382"* %28 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %269) #15
  unreachable

270:                                              ; preds = %261
  %271 = sub i64 %257, %263
  %272 = ashr exact i64 %271, 2
  %273 = icmp ult i64 %272, 2305843009213693951
  br i1 %273, label %274, label %282

274:                                              ; preds = %270
  %275 = ashr exact i64 %271, 1
  %276 = icmp ult i64 %275, %266
  %277 = select i1 %276, i64 %266, i64 %275
  %278 = icmp eq i64 %277, 0
  br i1 %278, label %287, label %279

279:                                              ; preds = %274
  %280 = icmp ugt i64 %277, 4611686018427387903
  br i1 %280, label %281, label %282

281:                                              ; preds = %279
  call void @abort() #15
  unreachable

282:                                              ; preds = %279, %270
  %283 = phi i64 [ %277, %279 ], [ 4611686018427387903, %270 ]
  %284 = shl i64 %283, 2
  %285 = call i8* @_Znwm(i64 %284) #16
  %286 = bitcast i8* %285 to i32*
  br label %287

287:                                              ; preds = %282, %274
  %288 = phi i64 [ %283, %282 ], [ 0, %274 ]
  %289 = phi i8* [ %285, %282 ], [ null, %274 ]
  %290 = phi i32* [ %286, %282 ], [ null, %274 ]
  %291 = getelementptr inbounds i32, i32* %290, i64 %265
  %292 = getelementptr inbounds i32, i32* %290, i64 %288
  %293 = ptrtoint i32* %292 to i64
  store i32 %252, i32* %291, align 4
  %294 = getelementptr inbounds i32, i32* %291, i64 1
  %295 = ptrtoint i32* %294 to i64
  %296 = ptrtoint i32* %290 to i64
  %297 = icmp sgt i64 %264, 0
  br i1 %297, label %298, label %300

298:                                              ; preds = %287
  %299 = inttoptr i64 %263 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %289, i8* align 4 %299, i64 %264, i1 false) #14
  br label %300

300:                                              ; preds = %298, %287
  store i64 %296, i64* %48, align 16
  store i64 %295, i64* %87, align 8
  store i64 %293, i64* %47, align 16
  %301 = icmp eq i64 %263, 0
  br i1 %301, label %304, label %302

302:                                              ; preds = %300
  %303 = inttoptr i64 %263 to i8*
  call void @_ZdlPv(i8* %303) #16
  br label %304

304:                                              ; preds = %258, %300, %302
  %305 = load i32*, i32** %41, align 16
  %306 = getelementptr inbounds i32, i32* %305, i64 %102
  %307 = load i32, i32* %306, align 4
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 %4, i32 5, %"class.SkSL::OutputStream"* dereferenceable(8) %5) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %88) #14
  store i32 %39, i32* %27, align 4
  %308 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %73, align 8
  %309 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %308, i64 3
  %310 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %309, align 8
  call void %310(%"class.SkSL::OutputStream"* %5, i8* nonnull %88, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %88) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %89) #14
  store i32 %307, i32* %26, align 4
  %311 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %73, align 8
  %312 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %311, i64 3
  %313 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %312, align 8
  call void %313(%"class.SkSL::OutputStream"* %5, i8* nonnull %89, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %89) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %90) #14
  store i32 %143, i32* %25, align 4
  %314 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %73, align 8
  %315 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %314, i64 3
  %316 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %315, align 8
  call void %316(%"class.SkSL::OutputStream"* %5, i8* nonnull %90, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %90) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %91) #14
  store i32 %198, i32* %24, align 4
  %317 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %73, align 8
  %318 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %317, i64 3
  %319 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %318, align 8
  call void %319(%"class.SkSL::OutputStream"* %5, i8* nonnull %91, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %91) #14
  %320 = add nuw nsw i64 %102, 1
  %321 = load i32, i32* %44, align 8
  %322 = sext i32 %321 to i64
  %323 = icmp slt i64 %320, %322
  br i1 %323, label %101, label %92
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator16castScalarToTypeEjRKNS_4TypeES3_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, i32, %"class.SkSL::Type"* nocapture readonly dereferenceable(184), %"class.SkSL::Type"* dereferenceable(184), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = alloca %"class.SkSL::String", align 8
  %10 = alloca %"class.SkSL::String", align 8
  %11 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %3, i64 0, i32 4
  %12 = load i32, i32* %11, align 4
  switch i32 %12, label %21 [
    i32 0, label %13
    i32 1, label %15
    i32 2, label %17
    i32 3, label %19
  ]

13:                                               ; preds = %5
  %14 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator17castScalarToFloatEjRKNS_4TypeES3_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 %1, %"class.SkSL::Type"* dereferenceable(184) %2, %"class.SkSL::Type"* dereferenceable(184) %3, %"class.SkSL::OutputStream"* dereferenceable(8) %4)
  br label %134

15:                                               ; preds = %5
  %16 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator21castScalarToSignedIntEjRKNS_4TypeES3_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 %1, %"class.SkSL::Type"* dereferenceable(184) %2, %"class.SkSL::Type"* dereferenceable(184) %3, %"class.SkSL::OutputStream"* dereferenceable(8) %4)
  br label %134

17:                                               ; preds = %5
  %18 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator23castScalarToUnsignedIntEjRKNS_4TypeES3_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 %1, %"class.SkSL::Type"* dereferenceable(184) %2, %"class.SkSL::Type"* dereferenceable(184) %3, %"class.SkSL::OutputStream"* dereferenceable(8) %4)
  br label %134

19:                                               ; preds = %5
  %20 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator19castScalarToBooleanEjRKNS_4TypeES3_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 %1, %"class.SkSL::Type"* dereferenceable(184) %2, %"class.SkSL::Type"* dereferenceable(184) %3, %"class.SkSL::OutputStream"* dereferenceable(8) %4)
  br label %134

21:                                               ; preds = %5
  %22 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 2
  %23 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %22, align 8
  %24 = bitcast %"class.SkSL::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #14
  %25 = bitcast %"class.SkSL::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #14
  %26 = bitcast %"class.SkSL::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #14
  %27 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 18
  %28 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %27, align 8, !noalias !13
  %29 = icmp eq %"class.SkSL::Type"* %28, null
  %30 = select i1 %29, %"class.SkSL::Type"* %2, %"class.SkSL::Type"* %28
  %31 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %30, i64 0, i32 0, i32 1, i32 0
  %32 = load i8*, i8** %31, align 8, !noalias !13
  %33 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %30, i64 0, i32 0, i32 1, i32 1
  %34 = load i64, i64* %33, align 8, !noalias !13
  %35 = icmp ugt i64 %34, -17
  br i1 %35, label %36, label %38

36:                                               ; preds = %21
  %37 = bitcast %"class.SkSL::String"* %9 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %37) #15
  unreachable

38:                                               ; preds = %21
  %39 = icmp ult i64 %34, 23
  br i1 %39, label %48, label %40

40:                                               ; preds = %38
  %41 = add nuw i64 %34, 16
  %42 = and i64 %41, -16
  %43 = tail call i8* @_Znwm(i64 %42) #16
  %44 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %43, i8** %44, align 8, !alias.scope !13
  %45 = or i64 %42, -9223372036854775808
  %46 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %45, i64* %46, align 8, !alias.scope !13
  %47 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %34, i64* %47, align 8, !alias.scope !13
  br label %53

48:                                               ; preds = %38
  %49 = trunc i64 %34 to i8
  %50 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  store i8 %49, i8* %51, align 1, !alias.scope !13
  %52 = icmp eq i64 %34, 0
  br i1 %52, label %55, label %53

53:                                               ; preds = %48, %40
  %54 = phi i8* [ %43, %40 ], [ %26, %48 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %54, i8* align 1 %32, i64 %34, i1 false) #14
  br label %55

55:                                               ; preds = %48, %53
  %56 = phi i8* [ %26, %48 ], [ %54, %53 ]
  %57 = getelementptr inbounds i8, i8* %56, i64 %34
  store i8 0, i8* %57, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %8, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.14, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %9) #14
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %7, %"class.SkSL::String"* nonnull %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i64 0, i64 0)) #14
  %58 = bitcast %"class.SkSL::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #14
  %59 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %3, i64 0, i32 18
  %60 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %59, align 8, !noalias !18
  %61 = icmp eq %"class.SkSL::Type"* %60, null
  %62 = select i1 %61, %"class.SkSL::Type"* %3, %"class.SkSL::Type"* %60
  %63 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %62, i64 0, i32 0, i32 1, i32 0
  %64 = load i8*, i8** %63, align 8, !noalias !18
  %65 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %62, i64 0, i32 0, i32 1, i32 1
  %66 = load i64, i64* %65, align 8, !noalias !18
  %67 = icmp ugt i64 %66, -17
  br i1 %67, label %68, label %70

68:                                               ; preds = %55
  %69 = bitcast %"class.SkSL::String"* %10 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %69) #15
  unreachable

70:                                               ; preds = %55
  %71 = icmp ult i64 %66, 23
  br i1 %71, label %80, label %72

72:                                               ; preds = %70
  %73 = add nuw i64 %66, 16
  %74 = and i64 %73, -16
  %75 = call i8* @_Znwm(i64 %74) #16
  %76 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %75, i8** %76, align 8, !alias.scope !18
  %77 = or i64 %74, -9223372036854775808
  %78 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %77, i64* %78, align 8, !alias.scope !18
  %79 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %66, i64* %79, align 8, !alias.scope !18
  br label %85

80:                                               ; preds = %70
  %81 = trunc i64 %66 to i8
  %82 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %83 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %82, i64 0, i32 1, i32 0
  store i8 %81, i8* %83, align 1, !alias.scope !18
  %84 = icmp eq i64 %66, 0
  br i1 %84, label %87, label %85

85:                                               ; preds = %80, %72
  %86 = phi i8* [ %75, %72 ], [ %58, %80 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %86, i8* align 1 %64, i64 %66, i1 false) #14
  br label %87

87:                                               ; preds = %80, %85
  %88 = phi i8* [ %58, %80 ], [ %86, %85 ]
  %89 = getelementptr inbounds i8, i8* %88, i64 %66
  store i8 0, i8* %89, align 1
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %6, %"class.SkSL::String"* nonnull %7, %"class.SkSL::String"* nonnull dereferenceable(24) %10) #14
  %90 = bitcast %"class.SkSL::ErrorReporter"* %23 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %91 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %90, align 8
  %92 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %91, i64 2
  %93 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %92, align 8
  call void %93(%"class.SkSL::ErrorReporter"* %23, i32 -1, %"class.SkSL::String"* nonnull %6) #14
  %94 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %95 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %94, i64 0, i32 1, i32 0
  %96 = load i8, i8* %95, align 1
  %97 = icmp slt i8 %96, 0
  br i1 %97, label %98, label %101

98:                                               ; preds = %87
  %99 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load i8*, i8** %99, align 8
  call void @_ZdlPv(i8* %100) #16
  br label %101

101:                                              ; preds = %87, %98
  %102 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %103 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %102, i64 0, i32 1, i32 0
  %104 = load i8, i8* %103, align 1
  %105 = icmp slt i8 %104, 0
  br i1 %105, label %106, label %109

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load i8*, i8** %107, align 8
  call void @_ZdlPv(i8* %108) #16
  br label %109

109:                                              ; preds = %101, %106
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #14
  %110 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %111 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %110, i64 0, i32 1, i32 0
  %112 = load i8, i8* %111, align 1
  %113 = icmp slt i8 %112, 0
  br i1 %113, label %114, label %117

114:                                              ; preds = %109
  %115 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load i8*, i8** %115, align 8
  call void @_ZdlPv(i8* %116) #16
  br label %117

117:                                              ; preds = %109, %114
  %118 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %119 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %118, i64 0, i32 1, i32 0
  %120 = load i8, i8* %119, align 1
  %121 = icmp slt i8 %120, 0
  br i1 %121, label %122, label %125

122:                                              ; preds = %117
  %123 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load i8*, i8** %123, align 8
  call void @_ZdlPv(i8* %124) #16
  br label %125

125:                                              ; preds = %117, %122
  %126 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %127 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %126, i64 0, i32 1, i32 0
  %128 = load i8, i8* %127, align 1
  %129 = icmp slt i8 %128, 0
  br i1 %129, label %130, label %133

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load i8*, i8** %131, align 8
  call void @_ZdlPv(i8* %132) #16
  br label %133

133:                                              ; preds = %125, %130
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #14
  br label %134

134:                                              ; preds = %133, %19, %17, %15, %13
  %135 = phi i32 [ %14, %13 ], [ %16, %15 ], [ %18, %17 ], [ %20, %19 ], [ %1, %133 ]
  ret i32 %135
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator17castScalarToFloatEjRKNS_4TypeES3_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, i32, %"class.SkSL::Type"* nocapture readonly dereferenceable(184), %"class.SkSL::Type"* dereferenceable(184), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca %"class.SkSL::Literal.430", align 8
  %21 = alloca %"class.SkSL::Literal.430", align 8
  %22 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 4
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %162, label %25

25:                                               ; preds = %5
  %26 = icmp eq %"class.SkSL::Type"* %3, null
  br i1 %26, label %75, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %3, i64 0, i32 6
  %29 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %28, align 8
  %30 = icmp eq %"class.SkSL::Type"* %29, null
  %31 = select i1 %30, %"class.SkSL::Type"* %3, %"class.SkSL::Type"* %29
  %32 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %31, i64 0, i32 4
  %33 = load i32, i32* %32, align 4
  %34 = icmp ult i32 %33, 3
  br i1 %34, label %39, label %35

35:                                               ; preds = %27
  %36 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %3, i64 0, i32 3
  %37 = load i32, i32* %36, align 8
  %38 = icmp eq i32 %37, 6
  br i1 %38, label %39, label %75

39:                                               ; preds = %35, %27
  br i1 %30, label %45, label %40

40:                                               ; preds = %39, %40
  %41 = phi %"class.SkSL::Type"* [ %43, %40 ], [ %29, %39 ]
  %42 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %41, i64 0, i32 6
  %43 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %42, align 8
  %44 = icmp eq %"class.SkSL::Type"* %43, null
  br i1 %44, label %45, label %40

45:                                               ; preds = %40, %39
  %46 = phi %"class.SkSL::Type"* [ %3, %39 ], [ %41, %40 ]
  %47 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %46, i64 0, i32 16
  %48 = load i8, i8* %47, align 8, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %75

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 1
  %52 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %51, align 8
  %53 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %52, i64 0, i32 1, i32 0, i32 0, i32 0
  %54 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %53, align 8
  %55 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %54, i64 0, i32 1, i32 3
  %56 = load i8, i8* %55, align 1, !range !2
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %75

58:                                               ; preds = %50
  %59 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %60 = load i32, i32* %59, align 8
  %61 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %62 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %62) #14
  store i32 196679, i32* %14, align 4
  %63 = bitcast %"class.SkSL::OutputStream"* %61 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %64 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %63, align 8
  %65 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %64, i64 3
  %66 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %65, align 8
  call void %66(%"class.SkSL::OutputStream"* %61, i8* nonnull %62, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %62) #14
  %67 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %67) #14
  store i32 %60, i32* %16, align 4
  %68 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %63, align 8
  %69 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %68, i64 3
  %70 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %69, align 8
  call void %70(%"class.SkSL::OutputStream"* %61, i8* nonnull %67, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %67) #14
  %71 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %71) #14
  store i32 0, i32* %15, align 4
  %72 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %63, align 8
  %73 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %72, i64 3
  %74 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %73, align 8
  call void %74(%"class.SkSL::OutputStream"* %61, i8* nonnull %71, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %71) #14
  br label %75

75:                                               ; preds = %25, %35, %45, %50, %58
  %76 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %77 = load i32, i32* %76, align 8
  %78 = add i32 %77, 1
  store i32 %78, i32* %76, align 8
  %79 = load i32, i32* %22, align 4
  switch i32 %79, label %162 [
    i32 3, label %80
    i32 1, label %130
    i32 2, label %146
  ]

80:                                               ; preds = %75
  %81 = bitcast %"class.SkSL::Literal.430"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %81) #14
  %82 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %20, i64 0, i32 0, i32 0, i32 0
  %83 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %20, i64 0, i32 0, i32 0, i32 1
  %84 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %20, i64 0, i32 0, i32 0, i32 2
  %85 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %20, i64 0, i32 0, i32 1
  %86 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %20, i64 0, i32 1
  %87 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %20, i64 0, i32 2, i64 0
  %88 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 1
  %89 = bitcast %"class.SkSL::Context"** %88 to i64**
  %90 = bitcast i8* %87 to i32*
  store i32 -1431655766, i32* %90, align 4
  %91 = load i64*, i64** %89, align 8
  %92 = load i64, i64* %91, align 8
  store i32 -1, i32* %83, align 8
  store i32 45, i32* %84, align 4
  %93 = bitcast %"class.SkSL::Type"** %85 to i64*
  store i64 %92, i64* %93, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIfEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %82, align 8
  store float 1.000000e+00, float* %86, align 8
  %94 = call i32 @_ZN4SkSL18SPIRVCodeGenerator17writeFloatLiteralERKNS_7LiteralIfEE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Literal.430"* nonnull dereferenceable(32) %20)
  %95 = bitcast %"class.SkSL::Literal.430"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %95) #14
  %96 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %21, i64 0, i32 0, i32 0, i32 0
  %97 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %21, i64 0, i32 0, i32 0, i32 1
  %98 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %21, i64 0, i32 0, i32 0, i32 2
  %99 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %21, i64 0, i32 0, i32 1
  %100 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %21, i64 0, i32 1
  %101 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %21, i64 0, i32 2, i64 0
  %102 = bitcast i8* %101 to i32*
  store i32 -1431655766, i32* %102, align 4
  %103 = load i64*, i64** %89, align 8
  %104 = load i64, i64* %103, align 8
  store i32 -1, i32* %97, align 8
  store i32 45, i32* %98, align 4
  %105 = bitcast %"class.SkSL::Type"** %99 to i64*
  store i64 %104, i64* %105, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIfEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %96, align 8
  store float 0.000000e+00, float* %100, align 8
  %106 = call i32 @_ZN4SkSL18SPIRVCodeGenerator17writeFloatLiteralERKNS_7LiteralIfEE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Literal.430"* nonnull dereferenceable(32) %21)
  %107 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %108 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %3, %"class.SkSL::MemoryLayout"* dereferenceable(4) %107) #14
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 169, i32 6, %"class.SkSL::OutputStream"* dereferenceable(8) %4) #14
  %109 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %109) #14
  store i32 %108, i32* %13, align 4
  %110 = bitcast %"class.SkSL::OutputStream"* %4 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %111 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %110, align 8
  %112 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %111, i64 3
  %113 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %112, align 8
  call void %113(%"class.SkSL::OutputStream"* %4, i8* nonnull %109, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %109) #14
  %114 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %114) #14
  store i32 %77, i32* %12, align 4
  %115 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %110, align 8
  %116 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %115, i64 3
  %117 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %116, align 8
  call void %117(%"class.SkSL::OutputStream"* %4, i8* nonnull %114, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %114) #14
  %118 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %118) #14
  store i32 %1, i32* %11, align 4
  %119 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %110, align 8
  %120 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %119, i64 3
  %121 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %120, align 8
  call void %121(%"class.SkSL::OutputStream"* %4, i8* nonnull %118, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %118) #14
  %122 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %122) #14
  store i32 %94, i32* %10, align 4
  %123 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %110, align 8
  %124 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %123, i64 3
  %125 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %124, align 8
  call void %125(%"class.SkSL::OutputStream"* %4, i8* nonnull %122, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %122) #14
  %126 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %126) #14
  store i32 %106, i32* %9, align 4
  %127 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %110, align 8
  %128 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %127, i64 3
  %129 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %128, align 8
  call void %129(%"class.SkSL::OutputStream"* %4, i8* nonnull %126, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %126) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %95) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %81) #14
  br label %162

130:                                              ; preds = %75
  %131 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %132 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %3, %"class.SkSL::MemoryLayout"* dereferenceable(4) %131) #14
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 111, i32 4, %"class.SkSL::OutputStream"* dereferenceable(8) %4) #14
  %133 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %133) #14
  store i32 %132, i32* %8, align 4
  %134 = bitcast %"class.SkSL::OutputStream"* %4 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %135 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %134, align 8
  %136 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %135, i64 3
  %137 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %136, align 8
  call void %137(%"class.SkSL::OutputStream"* %4, i8* nonnull %133, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %133) #14
  %138 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %138) #14
  store i32 %77, i32* %7, align 4
  %139 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %134, align 8
  %140 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %139, i64 3
  %141 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %140, align 8
  call void %141(%"class.SkSL::OutputStream"* %4, i8* nonnull %138, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %138) #14
  %142 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %142) #14
  store i32 %1, i32* %6, align 4
  %143 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %134, align 8
  %144 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %143, i64 3
  %145 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %144, align 8
  call void %145(%"class.SkSL::OutputStream"* %4, i8* nonnull %142, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %142) #14
  br label %162

146:                                              ; preds = %75
  %147 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %148 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %3, %"class.SkSL::MemoryLayout"* dereferenceable(4) %147) #14
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 112, i32 4, %"class.SkSL::OutputStream"* dereferenceable(8) %4) #14
  %149 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %149) #14
  store i32 %148, i32* %19, align 4
  %150 = bitcast %"class.SkSL::OutputStream"* %4 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %151 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %150, align 8
  %152 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %151, i64 3
  %153 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %152, align 8
  call void %153(%"class.SkSL::OutputStream"* %4, i8* nonnull %149, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %149) #14
  %154 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %154) #14
  store i32 %77, i32* %18, align 4
  %155 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %150, align 8
  %156 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %155, i64 3
  %157 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %156, align 8
  call void %157(%"class.SkSL::OutputStream"* %4, i8* nonnull %154, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %154) #14
  %158 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158) #14
  store i32 %1, i32* %17, align 4
  %159 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %150, align 8
  %160 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %159, i64 3
  %161 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %160, align 8
  call void %161(%"class.SkSL::OutputStream"* %4, i8* nonnull %158, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158) #14
  br label %162

162:                                              ; preds = %75, %130, %146, %80, %5
  %163 = phi i32 [ %1, %5 ], [ %77, %130 ], [ %77, %146 ], [ %77, %80 ], [ -1, %75 ]
  ret i32 %163
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator21castScalarToSignedIntEjRKNS_4TypeES3_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, i32, %"class.SkSL::Type"* nocapture readonly dereferenceable(184), %"class.SkSL::Type"* dereferenceable(184), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca %"class.SkSL::Literal", align 8
  %21 = alloca %"class.SkSL::Literal", align 8
  %22 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 4
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %161, label %25

25:                                               ; preds = %5
  %26 = icmp eq %"class.SkSL::Type"* %3, null
  br i1 %26, label %75, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %3, i64 0, i32 6
  %29 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %28, align 8
  %30 = icmp eq %"class.SkSL::Type"* %29, null
  %31 = select i1 %30, %"class.SkSL::Type"* %3, %"class.SkSL::Type"* %29
  %32 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %31, i64 0, i32 4
  %33 = load i32, i32* %32, align 4
  %34 = icmp ult i32 %33, 3
  br i1 %34, label %39, label %35

35:                                               ; preds = %27
  %36 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %3, i64 0, i32 3
  %37 = load i32, i32* %36, align 8
  %38 = icmp eq i32 %37, 6
  br i1 %38, label %39, label %75

39:                                               ; preds = %35, %27
  br i1 %30, label %45, label %40

40:                                               ; preds = %39, %40
  %41 = phi %"class.SkSL::Type"* [ %43, %40 ], [ %29, %39 ]
  %42 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %41, i64 0, i32 6
  %43 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %42, align 8
  %44 = icmp eq %"class.SkSL::Type"* %43, null
  br i1 %44, label %45, label %40

45:                                               ; preds = %40, %39
  %46 = phi %"class.SkSL::Type"* [ %3, %39 ], [ %41, %40 ]
  %47 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %46, i64 0, i32 16
  %48 = load i8, i8* %47, align 8, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %75

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 1
  %52 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %51, align 8
  %53 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %52, i64 0, i32 1, i32 0, i32 0, i32 0
  %54 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %53, align 8
  %55 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %54, i64 0, i32 1, i32 3
  %56 = load i8, i8* %55, align 1, !range !2
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %75

58:                                               ; preds = %50
  %59 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %60 = load i32, i32* %59, align 8
  %61 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %62 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %62) #14
  store i32 196679, i32* %14, align 4
  %63 = bitcast %"class.SkSL::OutputStream"* %61 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %64 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %63, align 8
  %65 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %64, i64 3
  %66 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %65, align 8
  call void %66(%"class.SkSL::OutputStream"* %61, i8* nonnull %62, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %62) #14
  %67 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %67) #14
  store i32 %60, i32* %16, align 4
  %68 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %63, align 8
  %69 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %68, i64 3
  %70 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %69, align 8
  call void %70(%"class.SkSL::OutputStream"* %61, i8* nonnull %67, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %67) #14
  %71 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %71) #14
  store i32 0, i32* %15, align 4
  %72 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %63, align 8
  %73 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %72, i64 3
  %74 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %73, align 8
  call void %74(%"class.SkSL::OutputStream"* %61, i8* nonnull %71, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %71) #14
  br label %75

75:                                               ; preds = %25, %35, %45, %50, %58
  %76 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %77 = load i32, i32* %76, align 8
  %78 = add i32 %77, 1
  store i32 %78, i32* %76, align 8
  %79 = load i32, i32* %22, align 4
  switch i32 %79, label %161 [
    i32 3, label %80
    i32 0, label %129
    i32 2, label %145
  ]

80:                                               ; preds = %75
  %81 = bitcast %"class.SkSL::Literal"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %81) #14
  %82 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %20, i64 0, i32 0, i32 0, i32 0
  %83 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %20, i64 0, i32 0, i32 0, i32 1
  %84 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %20, i64 0, i32 0, i32 0, i32 2
  %85 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %20, i64 0, i32 0, i32 1
  %86 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %20, i64 0, i32 1
  %87 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 1
  %88 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %87, align 8
  %89 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %88, i64 0, i32 0, i32 8, i32 0, i32 0, i32 0
  %90 = bitcast %"class.SkSL::Type"** %89 to i64*
  %91 = load i64, i64* %90, align 8
  store i32 -1, i32* %83, align 8
  store i32 43, i32* %84, align 4
  %92 = bitcast %"class.SkSL::Type"** %85 to i64*
  store i64 %91, i64* %92, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIlEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %82, align 8
  store i64 1, i64* %86, align 8
  %93 = call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeIntLiteralERKNS_7LiteralIlEE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Literal"* nonnull dereferenceable(32) %20)
  %94 = bitcast %"class.SkSL::Literal"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %94) #14
  %95 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %21, i64 0, i32 0, i32 0, i32 0
  %96 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %21, i64 0, i32 0, i32 0, i32 1
  %97 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %21, i64 0, i32 0, i32 0, i32 2
  %98 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %21, i64 0, i32 0, i32 1
  %99 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %21, i64 0, i32 1
  %100 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %87, align 8
  %101 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %100, i64 0, i32 0, i32 8, i32 0, i32 0, i32 0
  %102 = bitcast %"class.SkSL::Type"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  store i32 -1, i32* %96, align 8
  store i32 43, i32* %97, align 4
  %104 = bitcast %"class.SkSL::Type"** %98 to i64*
  store i64 %103, i64* %104, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIlEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %95, align 8
  store i64 0, i64* %99, align 8
  %105 = call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeIntLiteralERKNS_7LiteralIlEE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Literal"* nonnull dereferenceable(32) %21)
  %106 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %107 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %3, %"class.SkSL::MemoryLayout"* dereferenceable(4) %106) #14
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 169, i32 6, %"class.SkSL::OutputStream"* dereferenceable(8) %4) #14
  %108 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %108) #14
  store i32 %107, i32* %13, align 4
  %109 = bitcast %"class.SkSL::OutputStream"* %4 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %110 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %109, align 8
  %111 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %110, i64 3
  %112 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %111, align 8
  call void %112(%"class.SkSL::OutputStream"* %4, i8* nonnull %108, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %108) #14
  %113 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %113) #14
  store i32 %77, i32* %12, align 4
  %114 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %109, align 8
  %115 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %114, i64 3
  %116 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %115, align 8
  call void %116(%"class.SkSL::OutputStream"* %4, i8* nonnull %113, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %113) #14
  %117 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %117) #14
  store i32 %1, i32* %11, align 4
  %118 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %109, align 8
  %119 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %118, i64 3
  %120 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %119, align 8
  call void %120(%"class.SkSL::OutputStream"* %4, i8* nonnull %117, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %117) #14
  %121 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %121) #14
  store i32 %93, i32* %10, align 4
  %122 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %109, align 8
  %123 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %122, i64 3
  %124 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %123, align 8
  call void %124(%"class.SkSL::OutputStream"* %4, i8* nonnull %121, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %121) #14
  %125 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %125) #14
  store i32 %105, i32* %9, align 4
  %126 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %109, align 8
  %127 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %126, i64 3
  %128 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %127, align 8
  call void %128(%"class.SkSL::OutputStream"* %4, i8* nonnull %125, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %125) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %94) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %81) #14
  br label %161

129:                                              ; preds = %75
  %130 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %131 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %3, %"class.SkSL::MemoryLayout"* dereferenceable(4) %130) #14
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 110, i32 4, %"class.SkSL::OutputStream"* dereferenceable(8) %4) #14
  %132 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %132) #14
  store i32 %131, i32* %8, align 4
  %133 = bitcast %"class.SkSL::OutputStream"* %4 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %134 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %133, align 8
  %135 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %134, i64 3
  %136 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %135, align 8
  call void %136(%"class.SkSL::OutputStream"* %4, i8* nonnull %132, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %132) #14
  %137 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %137) #14
  store i32 %77, i32* %7, align 4
  %138 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %133, align 8
  %139 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %138, i64 3
  %140 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %139, align 8
  call void %140(%"class.SkSL::OutputStream"* %4, i8* nonnull %137, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %137) #14
  %141 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %141) #14
  store i32 %1, i32* %6, align 4
  %142 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %133, align 8
  %143 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %142, i64 3
  %144 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %143, align 8
  call void %144(%"class.SkSL::OutputStream"* %4, i8* nonnull %141, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %141) #14
  br label %161

145:                                              ; preds = %75
  %146 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %147 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %3, %"class.SkSL::MemoryLayout"* dereferenceable(4) %146) #14
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 124, i32 4, %"class.SkSL::OutputStream"* dereferenceable(8) %4) #14
  %148 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %148) #14
  store i32 %147, i32* %19, align 4
  %149 = bitcast %"class.SkSL::OutputStream"* %4 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %150 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %149, align 8
  %151 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %150, i64 3
  %152 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %151, align 8
  call void %152(%"class.SkSL::OutputStream"* %4, i8* nonnull %148, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %148) #14
  %153 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %153) #14
  store i32 %77, i32* %18, align 4
  %154 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %149, align 8
  %155 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %154, i64 3
  %156 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %155, align 8
  call void %156(%"class.SkSL::OutputStream"* %4, i8* nonnull %153, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %153) #14
  %157 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %157) #14
  store i32 %1, i32* %17, align 4
  %158 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %149, align 8
  %159 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %158, i64 3
  %160 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %159, align 8
  call void %160(%"class.SkSL::OutputStream"* %4, i8* nonnull %157, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %157) #14
  br label %161

161:                                              ; preds = %75, %129, %145, %80, %5
  %162 = phi i32 [ %1, %5 ], [ %77, %129 ], [ %77, %145 ], [ %77, %80 ], [ -1, %75 ]
  ret i32 %162
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator23castScalarToUnsignedIntEjRKNS_4TypeES3_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, i32, %"class.SkSL::Type"* nocapture readonly dereferenceable(184), %"class.SkSL::Type"* dereferenceable(184), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca %"class.SkSL::Literal", align 8
  %21 = alloca %"class.SkSL::Literal", align 8
  %22 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 4
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 2
  br i1 %24, label %161, label %25

25:                                               ; preds = %5
  %26 = icmp eq %"class.SkSL::Type"* %3, null
  br i1 %26, label %75, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %3, i64 0, i32 6
  %29 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %28, align 8
  %30 = icmp eq %"class.SkSL::Type"* %29, null
  %31 = select i1 %30, %"class.SkSL::Type"* %3, %"class.SkSL::Type"* %29
  %32 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %31, i64 0, i32 4
  %33 = load i32, i32* %32, align 4
  %34 = icmp ult i32 %33, 3
  br i1 %34, label %39, label %35

35:                                               ; preds = %27
  %36 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %3, i64 0, i32 3
  %37 = load i32, i32* %36, align 8
  %38 = icmp eq i32 %37, 6
  br i1 %38, label %39, label %75

39:                                               ; preds = %35, %27
  br i1 %30, label %45, label %40

40:                                               ; preds = %39, %40
  %41 = phi %"class.SkSL::Type"* [ %43, %40 ], [ %29, %39 ]
  %42 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %41, i64 0, i32 6
  %43 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %42, align 8
  %44 = icmp eq %"class.SkSL::Type"* %43, null
  br i1 %44, label %45, label %40

45:                                               ; preds = %40, %39
  %46 = phi %"class.SkSL::Type"* [ %3, %39 ], [ %41, %40 ]
  %47 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %46, i64 0, i32 16
  %48 = load i8, i8* %47, align 8, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %75

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 1
  %52 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %51, align 8
  %53 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %52, i64 0, i32 1, i32 0, i32 0, i32 0
  %54 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %53, align 8
  %55 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %54, i64 0, i32 1, i32 3
  %56 = load i8, i8* %55, align 1, !range !2
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %75

58:                                               ; preds = %50
  %59 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %60 = load i32, i32* %59, align 8
  %61 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %62 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %62) #14
  store i32 196679, i32* %14, align 4
  %63 = bitcast %"class.SkSL::OutputStream"* %61 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %64 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %63, align 8
  %65 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %64, i64 3
  %66 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %65, align 8
  call void %66(%"class.SkSL::OutputStream"* %61, i8* nonnull %62, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %62) #14
  %67 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %67) #14
  store i32 %60, i32* %16, align 4
  %68 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %63, align 8
  %69 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %68, i64 3
  %70 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %69, align 8
  call void %70(%"class.SkSL::OutputStream"* %61, i8* nonnull %67, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %67) #14
  %71 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %71) #14
  store i32 0, i32* %15, align 4
  %72 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %63, align 8
  %73 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %72, i64 3
  %74 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %73, align 8
  call void %74(%"class.SkSL::OutputStream"* %61, i8* nonnull %71, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %71) #14
  br label %75

75:                                               ; preds = %25, %35, %45, %50, %58
  %76 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %77 = load i32, i32* %76, align 8
  %78 = add i32 %77, 1
  store i32 %78, i32* %76, align 8
  %79 = load i32, i32* %22, align 4
  switch i32 %79, label %161 [
    i32 3, label %80
    i32 0, label %129
    i32 1, label %145
  ]

80:                                               ; preds = %75
  %81 = bitcast %"class.SkSL::Literal"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %81) #14
  %82 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %20, i64 0, i32 0, i32 0, i32 0
  %83 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %20, i64 0, i32 0, i32 0, i32 1
  %84 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %20, i64 0, i32 0, i32 0, i32 2
  %85 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %20, i64 0, i32 0, i32 1
  %86 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %20, i64 0, i32 1
  %87 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 1
  %88 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %87, align 8
  %89 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %88, i64 0, i32 0, i32 12, i32 0, i32 0, i32 0
  %90 = bitcast %"class.SkSL::Type"** %89 to i64*
  %91 = load i64, i64* %90, align 8
  store i32 -1, i32* %83, align 8
  store i32 43, i32* %84, align 4
  %92 = bitcast %"class.SkSL::Type"** %85 to i64*
  store i64 %91, i64* %92, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIlEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %82, align 8
  store i64 1, i64* %86, align 8
  %93 = call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeIntLiteralERKNS_7LiteralIlEE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Literal"* nonnull dereferenceable(32) %20)
  %94 = bitcast %"class.SkSL::Literal"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %94) #14
  %95 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %21, i64 0, i32 0, i32 0, i32 0
  %96 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %21, i64 0, i32 0, i32 0, i32 1
  %97 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %21, i64 0, i32 0, i32 0, i32 2
  %98 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %21, i64 0, i32 0, i32 1
  %99 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %21, i64 0, i32 1
  %100 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %87, align 8
  %101 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %100, i64 0, i32 0, i32 12, i32 0, i32 0, i32 0
  %102 = bitcast %"class.SkSL::Type"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  store i32 -1, i32* %96, align 8
  store i32 43, i32* %97, align 4
  %104 = bitcast %"class.SkSL::Type"** %98 to i64*
  store i64 %103, i64* %104, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIlEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %95, align 8
  store i64 0, i64* %99, align 8
  %105 = call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeIntLiteralERKNS_7LiteralIlEE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Literal"* nonnull dereferenceable(32) %21)
  %106 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %107 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %3, %"class.SkSL::MemoryLayout"* dereferenceable(4) %106) #14
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 169, i32 6, %"class.SkSL::OutputStream"* dereferenceable(8) %4) #14
  %108 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %108) #14
  store i32 %107, i32* %13, align 4
  %109 = bitcast %"class.SkSL::OutputStream"* %4 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %110 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %109, align 8
  %111 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %110, i64 3
  %112 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %111, align 8
  call void %112(%"class.SkSL::OutputStream"* %4, i8* nonnull %108, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %108) #14
  %113 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %113) #14
  store i32 %77, i32* %12, align 4
  %114 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %109, align 8
  %115 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %114, i64 3
  %116 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %115, align 8
  call void %116(%"class.SkSL::OutputStream"* %4, i8* nonnull %113, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %113) #14
  %117 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %117) #14
  store i32 %1, i32* %11, align 4
  %118 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %109, align 8
  %119 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %118, i64 3
  %120 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %119, align 8
  call void %120(%"class.SkSL::OutputStream"* %4, i8* nonnull %117, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %117) #14
  %121 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %121) #14
  store i32 %93, i32* %10, align 4
  %122 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %109, align 8
  %123 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %122, i64 3
  %124 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %123, align 8
  call void %124(%"class.SkSL::OutputStream"* %4, i8* nonnull %121, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %121) #14
  %125 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %125) #14
  store i32 %105, i32* %9, align 4
  %126 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %109, align 8
  %127 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %126, i64 3
  %128 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %127, align 8
  call void %128(%"class.SkSL::OutputStream"* %4, i8* nonnull %125, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %125) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %94) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %81) #14
  br label %161

129:                                              ; preds = %75
  %130 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %131 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %3, %"class.SkSL::MemoryLayout"* dereferenceable(4) %130) #14
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 109, i32 4, %"class.SkSL::OutputStream"* dereferenceable(8) %4) #14
  %132 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %132) #14
  store i32 %131, i32* %8, align 4
  %133 = bitcast %"class.SkSL::OutputStream"* %4 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %134 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %133, align 8
  %135 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %134, i64 3
  %136 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %135, align 8
  call void %136(%"class.SkSL::OutputStream"* %4, i8* nonnull %132, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %132) #14
  %137 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %137) #14
  store i32 %77, i32* %7, align 4
  %138 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %133, align 8
  %139 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %138, i64 3
  %140 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %139, align 8
  call void %140(%"class.SkSL::OutputStream"* %4, i8* nonnull %137, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %137) #14
  %141 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %141) #14
  store i32 %1, i32* %6, align 4
  %142 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %133, align 8
  %143 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %142, i64 3
  %144 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %143, align 8
  call void %144(%"class.SkSL::OutputStream"* %4, i8* nonnull %141, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %141) #14
  br label %161

145:                                              ; preds = %75
  %146 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %147 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %3, %"class.SkSL::MemoryLayout"* dereferenceable(4) %146) #14
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 124, i32 4, %"class.SkSL::OutputStream"* dereferenceable(8) %4) #14
  %148 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %148) #14
  store i32 %147, i32* %19, align 4
  %149 = bitcast %"class.SkSL::OutputStream"* %4 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %150 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %149, align 8
  %151 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %150, i64 3
  %152 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %151, align 8
  call void %152(%"class.SkSL::OutputStream"* %4, i8* nonnull %148, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %148) #14
  %153 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %153) #14
  store i32 %77, i32* %18, align 4
  %154 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %149, align 8
  %155 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %154, i64 3
  %156 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %155, align 8
  call void %156(%"class.SkSL::OutputStream"* %4, i8* nonnull %153, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %153) #14
  %157 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %157) #14
  store i32 %1, i32* %17, align 4
  %158 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %149, align 8
  %159 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %158, i64 3
  %160 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %159, align 8
  call void %160(%"class.SkSL::OutputStream"* %4, i8* nonnull %157, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %157) #14
  br label %161

161:                                              ; preds = %75, %129, %145, %80, %5
  %162 = phi i32 [ %1, %5 ], [ %77, %129 ], [ %77, %145 ], [ %77, %80 ], [ -1, %75 ]
  ret i32 %162
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator19castScalarToBooleanEjRKNS_4TypeES3_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, i32, %"class.SkSL::Type"* nocapture readonly dereferenceable(184), %"class.SkSL::Type"* dereferenceable(184), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca %"class.SkSL::Literal", align 8
  %19 = alloca %"class.SkSL::Literal", align 8
  %20 = alloca %"class.SkSL::Literal.430", align 8
  %21 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 4
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 3
  br i1 %23, label %129, label %24

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %26 = load i32, i32* %25, align 8
  %27 = add i32 %26, 1
  store i32 %27, i32* %25, align 8
  %28 = load i32, i32* %21, align 4
  switch i32 %28, label %129 [
    i32 1, label %29
    i32 2, label %62
    i32 0, label %95
  ]

29:                                               ; preds = %24
  %30 = bitcast %"class.SkSL::Literal"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #14
  %31 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %18, i64 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %18, i64 0, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %18, i64 0, i32 0, i32 0, i32 2
  %34 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %18, i64 0, i32 0, i32 1
  %35 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %18, i64 0, i32 1
  %36 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 1
  %37 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %36, align 8
  %38 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %37, i64 0, i32 0, i32 8, i32 0, i32 0, i32 0
  %39 = bitcast %"class.SkSL::Type"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  store i32 -1, i32* %32, align 8
  store i32 43, i32* %33, align 4
  %41 = bitcast %"class.SkSL::Type"** %34 to i64*
  store i64 %40, i64* %41, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIlEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %31, align 8
  store i64 0, i64* %35, align 8
  %42 = call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeIntLiteralERKNS_7LiteralIlEE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Literal"* nonnull dereferenceable(32) %18)
  %43 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %44 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %3, %"class.SkSL::MemoryLayout"* dereferenceable(4) %43) #14
  tail call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 171, i32 5, %"class.SkSL::OutputStream"* dereferenceable(8) %4) #14
  %45 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %45) #14
  store i32 %44, i32* %13, align 4
  %46 = bitcast %"class.SkSL::OutputStream"* %4 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %47 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %47, i64 3
  %49 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %48, align 8
  call void %49(%"class.SkSL::OutputStream"* %4, i8* nonnull %45, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %45) #14
  %50 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %50) #14
  store i32 %26, i32* %12, align 4
  %51 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %46, align 8
  %52 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %51, i64 3
  %53 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %52, align 8
  call void %53(%"class.SkSL::OutputStream"* %4, i8* nonnull %50, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %50) #14
  %54 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %54) #14
  store i32 %1, i32* %11, align 4
  %55 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %46, align 8
  %56 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %55, i64 3
  %57 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %56, align 8
  call void %57(%"class.SkSL::OutputStream"* %4, i8* nonnull %54, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %54) #14
  %58 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %58) #14
  store i32 %42, i32* %10, align 4
  %59 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %46, align 8
  %60 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %59, i64 3
  %61 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %60, align 8
  call void %61(%"class.SkSL::OutputStream"* %4, i8* nonnull %58, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %58) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #14
  br label %129

62:                                               ; preds = %24
  %63 = bitcast %"class.SkSL::Literal"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %63) #14
  %64 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %19, i64 0, i32 0, i32 0, i32 0
  %65 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %19, i64 0, i32 0, i32 0, i32 1
  %66 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %19, i64 0, i32 0, i32 0, i32 2
  %67 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %19, i64 0, i32 0, i32 1
  %68 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %19, i64 0, i32 1
  %69 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 1
  %70 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %69, align 8
  %71 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %70, i64 0, i32 0, i32 12, i32 0, i32 0, i32 0
  %72 = bitcast %"class.SkSL::Type"** %71 to i64*
  %73 = load i64, i64* %72, align 8
  store i32 -1, i32* %65, align 8
  store i32 43, i32* %66, align 4
  %74 = bitcast %"class.SkSL::Type"** %67 to i64*
  store i64 %73, i64* %74, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIlEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %64, align 8
  store i64 0, i64* %68, align 8
  %75 = call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeIntLiteralERKNS_7LiteralIlEE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Literal"* nonnull dereferenceable(32) %19)
  %76 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %77 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %3, %"class.SkSL::MemoryLayout"* dereferenceable(4) %76) #14
  tail call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 171, i32 5, %"class.SkSL::OutputStream"* dereferenceable(8) %4) #14
  %78 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %78) #14
  store i32 %77, i32* %9, align 4
  %79 = bitcast %"class.SkSL::OutputStream"* %4 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %80 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %79, align 8
  %81 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %80, i64 3
  %82 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %81, align 8
  call void %82(%"class.SkSL::OutputStream"* %4, i8* nonnull %78, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %78) #14
  %83 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %83) #14
  store i32 %26, i32* %8, align 4
  %84 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %79, align 8
  %85 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %84, i64 3
  %86 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %85, align 8
  call void %86(%"class.SkSL::OutputStream"* %4, i8* nonnull %83, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %83) #14
  %87 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %87) #14
  store i32 %1, i32* %7, align 4
  %88 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %79, align 8
  %89 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %88, i64 3
  %90 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %89, align 8
  call void %90(%"class.SkSL::OutputStream"* %4, i8* nonnull %87, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %87) #14
  %91 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %91) #14
  store i32 %75, i32* %6, align 4
  %92 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %79, align 8
  %93 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %92, i64 3
  %94 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %93, align 8
  call void %94(%"class.SkSL::OutputStream"* %4, i8* nonnull %91, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %91) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %63) #14
  br label %129

95:                                               ; preds = %24
  %96 = bitcast %"class.SkSL::Literal.430"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %96) #14
  %97 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %20, i64 0, i32 0, i32 0, i32 0
  %98 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %20, i64 0, i32 0, i32 0, i32 1
  %99 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %20, i64 0, i32 0, i32 0, i32 2
  %100 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %20, i64 0, i32 0, i32 1
  %101 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %20, i64 0, i32 1
  %102 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %20, i64 0, i32 2, i64 0
  %103 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 1
  %104 = bitcast %"class.SkSL::Context"** %103 to i64**
  %105 = bitcast i8* %102 to i32*
  store i32 -1431655766, i32* %105, align 4
  %106 = load i64*, i64** %104, align 8
  %107 = load i64, i64* %106, align 8
  store i32 -1, i32* %98, align 8
  store i32 45, i32* %99, align 4
  %108 = bitcast %"class.SkSL::Type"** %100 to i64*
  store i64 %107, i64* %108, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIfEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %97, align 8
  store float 0.000000e+00, float* %101, align 8
  %109 = call i32 @_ZN4SkSL18SPIRVCodeGenerator17writeFloatLiteralERKNS_7LiteralIfEE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Literal.430"* nonnull dereferenceable(32) %20)
  %110 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %111 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %3, %"class.SkSL::MemoryLayout"* dereferenceable(4) %110) #14
  tail call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 183, i32 5, %"class.SkSL::OutputStream"* dereferenceable(8) %4) #14
  %112 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %112) #14
  store i32 %111, i32* %17, align 4
  %113 = bitcast %"class.SkSL::OutputStream"* %4 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %114 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %113, align 8
  %115 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %114, i64 3
  %116 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %115, align 8
  call void %116(%"class.SkSL::OutputStream"* %4, i8* nonnull %112, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %112) #14
  %117 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %117) #14
  store i32 %26, i32* %16, align 4
  %118 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %113, align 8
  %119 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %118, i64 3
  %120 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %119, align 8
  call void %120(%"class.SkSL::OutputStream"* %4, i8* nonnull %117, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %117) #14
  %121 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %121) #14
  store i32 %1, i32* %15, align 4
  %122 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %113, align 8
  %123 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %122, i64 3
  %124 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %123, align 8
  call void %124(%"class.SkSL::OutputStream"* %4, i8* nonnull %121, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %121) #14
  %125 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %125) #14
  store i32 %109, i32* %14, align 4
  %126 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %113, align 8
  %127 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %126, i64 3
  %128 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %127, align 8
  call void %128(%"class.SkSL::OutputStream"* %4, i8* nonnull %125, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %125) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %96) #14
  br label %129

129:                                              ; preds = %24, %62, %95, %29, %5
  %130 = phi i32 [ %1, %5 ], [ %26, %62 ], [ %26, %95 ], [ %26, %29 ], [ -1, %24 ]
  ret i32 %130
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL4Type11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::Type"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 18
  %4 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %3, align 8, !noalias !23
  %5 = icmp eq %"class.SkSL::Type"* %4, null
  %6 = select i1 %5, %"class.SkSL::Type"* %1, %"class.SkSL::Type"* %4
  %7 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %6, i64 0, i32 0, i32 1, i32 0
  %8 = load i8*, i8** %7, align 8, !noalias !23
  %9 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %6, i64 0, i32 0, i32 1, i32 1
  %10 = load i64, i64* %9, align 8, !noalias !23
  %11 = icmp ugt i64 %10, -17
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.SkSL::String"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = icmp ult i64 %10, 23
  br i1 %15, label %24, label %16

16:                                               ; preds = %14
  %17 = add nuw i64 %10, 16
  %18 = and i64 %17, -16
  %19 = tail call i8* @_Znwm(i64 %18) #16
  %20 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %19, i8** %20, align 8, !alias.scope !23
  %21 = or i64 %18, -9223372036854775808
  %22 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %21, i64* %22, align 8, !alias.scope !23
  %23 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %10, i64* %23, align 8, !alias.scope !23
  br label %30

24:                                               ; preds = %14
  %25 = trunc i64 %10 to i8
  %26 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  store i8 %25, i8* %27, align 1, !alias.scope !23
  %28 = bitcast %"class.SkSL::String"* %0 to i8*
  %29 = icmp eq i64 %10, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %24, %16
  %31 = phi i8* [ %19, %16 ], [ %28, %24 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %31, i8* align 1 %8, i64 %10, i1 false) #14
  br label %32

32:                                               ; preds = %24, %30
  %33 = phi i8* [ %28, %24 ], [ %31, %30 ]
  %34 = getelementptr inbounds i8, i8* %33, i64 %10
  store i8 0, i8* %34, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator21writeFloatConstructorERKNS_14AnyConstructorERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::AnyConstructor"* dereferenceable(32), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.SkSL::AnyConstructor"* %1 to { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)***
  %5 = load { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)**, { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)*** %4, align 8
  %6 = getelementptr inbounds { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)** %5, i64 12
  %7 = load { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)** %6, align 8
  %8 = tail call { %"class.std::__1::unique_ptr.336"*, i64 } %7(%"class.SkSL::AnyConstructor"* %1) #14
  %9 = extractvalue { %"class.std::__1::unique_ptr.336"*, i64 } %8, 0
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %10, align 8
  %12 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %11, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %13 = bitcast %"class.SkSL::Expression"* %11 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %14 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %14, i64 3
  %16 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %15, align 8
  %17 = tail call dereferenceable(184) %"class.SkSL::Type"* %16(%"class.SkSL::Expression"* %11) #14
  %18 = getelementptr inbounds %"class.SkSL::AnyConstructor", %"class.SkSL::AnyConstructor"* %1, i64 0, i32 0
  %19 = bitcast %"class.SkSL::AnyConstructor"* %1 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %20 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %19, align 8
  %21 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %20, i64 3
  %22 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %21, align 8
  %23 = tail call dereferenceable(184) %"class.SkSL::Type"* %22(%"class.SkSL::Expression"* %18) #14
  %24 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator17castScalarToFloatEjRKNS_4TypeES3_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 %12, %"class.SkSL::Type"* dereferenceable(184) %17, %"class.SkSL::Type"* dereferenceable(184) %23, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  ret i32 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator19writeIntConstructorERKNS_14AnyConstructorERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::AnyConstructor"* dereferenceable(32), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.SkSL::AnyConstructor"* %1 to { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)***
  %5 = load { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)**, { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)*** %4, align 8
  %6 = getelementptr inbounds { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)** %5, i64 12
  %7 = load { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)** %6, align 8
  %8 = tail call { %"class.std::__1::unique_ptr.336"*, i64 } %7(%"class.SkSL::AnyConstructor"* %1) #14
  %9 = extractvalue { %"class.std::__1::unique_ptr.336"*, i64 } %8, 0
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %10, align 8
  %12 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %11, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %13 = bitcast %"class.SkSL::Expression"* %11 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %14 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %14, i64 3
  %16 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %15, align 8
  %17 = tail call dereferenceable(184) %"class.SkSL::Type"* %16(%"class.SkSL::Expression"* %11) #14
  %18 = getelementptr inbounds %"class.SkSL::AnyConstructor", %"class.SkSL::AnyConstructor"* %1, i64 0, i32 0
  %19 = bitcast %"class.SkSL::AnyConstructor"* %1 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %20 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %19, align 8
  %21 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %20, i64 3
  %22 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %21, align 8
  %23 = tail call dereferenceable(184) %"class.SkSL::Type"* %22(%"class.SkSL::Expression"* %18) #14
  %24 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator21castScalarToSignedIntEjRKNS_4TypeES3_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 %12, %"class.SkSL::Type"* dereferenceable(184) %17, %"class.SkSL::Type"* dereferenceable(184) %23, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  ret i32 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator20writeUIntConstructorERKNS_14AnyConstructorERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::AnyConstructor"* dereferenceable(32), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.SkSL::AnyConstructor"* %1 to { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)***
  %5 = load { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)**, { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)*** %4, align 8
  %6 = getelementptr inbounds { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)** %5, i64 12
  %7 = load { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)** %6, align 8
  %8 = tail call { %"class.std::__1::unique_ptr.336"*, i64 } %7(%"class.SkSL::AnyConstructor"* %1) #14
  %9 = extractvalue { %"class.std::__1::unique_ptr.336"*, i64 } %8, 0
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %10, align 8
  %12 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %11, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %13 = bitcast %"class.SkSL::Expression"* %11 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %14 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %14, i64 3
  %16 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %15, align 8
  %17 = tail call dereferenceable(184) %"class.SkSL::Type"* %16(%"class.SkSL::Expression"* %11) #14
  %18 = getelementptr inbounds %"class.SkSL::AnyConstructor", %"class.SkSL::AnyConstructor"* %1, i64 0, i32 0
  %19 = bitcast %"class.SkSL::AnyConstructor"* %1 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %20 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %19, align 8
  %21 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %20, i64 3
  %22 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %21, align 8
  %23 = tail call dereferenceable(184) %"class.SkSL::Type"* %22(%"class.SkSL::Expression"* %18) #14
  %24 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator23castScalarToUnsignedIntEjRKNS_4TypeES3_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 %12, %"class.SkSL::Type"* dereferenceable(184) %17, %"class.SkSL::Type"* dereferenceable(184) %23, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  ret i32 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator23writeBooleanConstructorERKNS_14AnyConstructorERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::AnyConstructor"* dereferenceable(32), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.SkSL::AnyConstructor"* %1 to { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)***
  %5 = load { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)**, { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)*** %4, align 8
  %6 = getelementptr inbounds { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)** %5, i64 12
  %7 = load { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)** %6, align 8
  %8 = tail call { %"class.std::__1::unique_ptr.336"*, i64 } %7(%"class.SkSL::AnyConstructor"* %1) #14
  %9 = extractvalue { %"class.std::__1::unique_ptr.336"*, i64 } %8, 0
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %10, align 8
  %12 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %11, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %13 = bitcast %"class.SkSL::Expression"* %11 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %14 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %14, i64 3
  %16 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %15, align 8
  %17 = tail call dereferenceable(184) %"class.SkSL::Type"* %16(%"class.SkSL::Expression"* %11) #14
  %18 = getelementptr inbounds %"class.SkSL::AnyConstructor", %"class.SkSL::AnyConstructor"* %1, i64 0, i32 0
  %19 = bitcast %"class.SkSL::AnyConstructor"* %1 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %20 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %19, align 8
  %21 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %20, i64 3
  %22 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %21, align 8
  %23 = tail call dereferenceable(184) %"class.SkSL::Type"* %22(%"class.SkSL::Expression"* %18) #14
  %24 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator19castScalarToBooleanEjRKNS_4TypeES3_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 %12, %"class.SkSL::Type"* dereferenceable(184) %17, %"class.SkSL::Type"* dereferenceable(184) %23, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  ret i32 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18SPIRVCodeGenerator23writeUniformScaleMatrixEjjRKNS_4TypeERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, i32, i32, %"class.SkSL::Type"* dereferenceable(184), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %"class.SkSL::Literal.430", align 8
  %16 = alloca %"class.std::__1::vector.382", align 16
  %17 = bitcast %"class.SkSL::Literal.430"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #14
  %18 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %15, i64 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %15, i64 0, i32 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %15, i64 0, i32 0, i32 0, i32 2
  %21 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %15, i64 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %15, i64 0, i32 1
  %23 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %15, i64 0, i32 2, i64 0
  %24 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 1
  %25 = bitcast %"class.SkSL::Context"** %24 to i64**
  %26 = bitcast i8* %23 to i32*
  store i32 -1431655766, i32* %26, align 4
  %27 = load i64*, i64** %25, align 8
  %28 = load i64, i64* %27, align 8
  store i32 -1, i32* %19, align 8
  store i32 45, i32* %20, align 4
  %29 = bitcast %"class.SkSL::Type"** %21 to i64*
  store i64 %28, i64* %29, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIfEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  store float 0.000000e+00, float* %22, align 8
  %30 = call i32 @_ZN4SkSL18SPIRVCodeGenerator17writeFloatLiteralERKNS_7LiteralIfEE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Literal.430"* nonnull dereferenceable(32) %15)
  %31 = bitcast %"class.std::__1::vector.382"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #14
  %32 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %16, i64 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %16, i64 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %16, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %31, i8 0, i64 24, i1 false) #14
  %35 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %3, i64 0, i32 8
  %36 = load i32, i32* %35, align 8
  %37 = sext i32 %36 to i64
  %38 = bitcast i32** %34 to i64*
  %39 = bitcast %"class.std::__1::vector.382"* %16 to i64*
  %40 = icmp eq i32 %36, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %5
  %42 = icmp slt i32 %36, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %41
  tail call void @abort() #15
  unreachable

44:                                               ; preds = %5
  %45 = bitcast %"class.SkSL::OutputStream"* %4 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  br label %76

46:                                               ; preds = %41
  %47 = shl nsw i64 %37, 2
  %48 = tail call i8* @_Znwm(i64 %47) #16
  %49 = bitcast i8* %48 to i32*
  %50 = getelementptr inbounds i32, i32* %49, i64 %37
  %51 = ptrtoint i32* %50 to i64
  %52 = insertelement <2 x i8*> undef, i8* %48, i32 0
  %53 = shufflevector <2 x i8*> %52, <2 x i8*> undef, <2 x i32> zeroinitializer
  %54 = ptrtoint <2 x i8*> %53 to <2 x i64>
  %55 = bitcast %"class.std::__1::vector.382"* %16 to <2 x i64>*
  store <2 x i64> %54, <2 x i64>* %55, align 16
  store i64 %51, i64* %38, align 16
  %56 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %3, i64 0, i32 9
  %57 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %3, i64 0, i32 6
  %58 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %59 = bitcast i32* %6 to i8*
  %60 = bitcast %"class.SkSL::OutputStream"* %4 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %61 = icmp eq %"class.SkSL::Type"* %3, null
  %62 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %3, i64 0, i32 3
  %63 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 1
  %64 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %65 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %66 = bitcast i32* %7 to i8*
  %67 = bitcast %"class.SkSL::OutputStream"* %65 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %68 = bitcast i32* %9 to i8*
  %69 = bitcast i32* %8 to i8*
  %70 = bitcast i32* %10 to i8*
  %71 = bitcast i32** %33 to i64*
  %72 = bitcast i32* %13 to i8*
  %73 = load i32, i32* %56, align 4
  br label %94

74:                                               ; preds = %206
  %75 = add i32 %209, 3
  br label %76

76:                                               ; preds = %74, %44
  %77 = phi void (%"class.SkSL::OutputStream"*, i8*, i64)*** [ %45, %44 ], [ %60, %74 ]
  %78 = phi i32 [ 3, %44 ], [ %75, %74 ]
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 80, i32 %78, %"class.SkSL::OutputStream"* dereferenceable(8) %4)
  %79 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %80 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %3, %"class.SkSL::MemoryLayout"* dereferenceable(4) %79) #14
  %81 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %81)
  store i32 %80, i32* %12, align 4
  %82 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %77, align 8
  %83 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %82, i64 3
  %84 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %83, align 8
  call void %84(%"class.SkSL::OutputStream"* %4, i8* nonnull %81, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %81)
  %85 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %85)
  store i32 %1, i32* %11, align 4
  %86 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %77, align 8
  %87 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %86, i64 3
  %88 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %87, align 8
  call void %88(%"class.SkSL::OutputStream"* %4, i8* nonnull %85, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %85)
  %89 = load i32*, i32** %32, align 16
  %90 = load i32*, i32** %33, align 8
  %91 = icmp eq i32* %89, %90
  br i1 %91, label %223, label %92

92:                                               ; preds = %76
  %93 = bitcast i32* %14 to i8*
  br label %231

94:                                               ; preds = %46, %206
  %95 = phi i32 [ %73, %46 ], [ %207, %206 ]
  %96 = phi i32 [ 0, %46 ], [ %208, %206 ]
  %97 = add nsw i32 %95, 3
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 80, i32 %97, %"class.SkSL::OutputStream"* dereferenceable(8) %4)
  %98 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %57, align 8
  %99 = icmp eq %"class.SkSL::Type"* %98, null
  %100 = select i1 %99, %"class.SkSL::Type"* %3, %"class.SkSL::Type"* %98
  %101 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %24, align 8
  %102 = load i32, i32* %56, align 4
  %103 = call dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL4Type10toCompoundERKNS_7ContextEii(%"class.SkSL::Type"* %100, %"class.SkSL::Context"* dereferenceable(744) %101, i32 %102, i32 1) #14
  %104 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %103, %"class.SkSL::MemoryLayout"* dereferenceable(4) %58) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %59)
  store i32 %104, i32* %6, align 4
  %105 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %60, align 8
  %106 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %105, i64 3
  %107 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %106, align 8
  call void %107(%"class.SkSL::OutputStream"* %4, i8* nonnull %59, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %59)
  br i1 %61, label %147, label %108

108:                                              ; preds = %94
  %109 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %57, align 8
  %110 = icmp eq %"class.SkSL::Type"* %109, null
  %111 = select i1 %110, %"class.SkSL::Type"* %3, %"class.SkSL::Type"* %109
  %112 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %111, i64 0, i32 4
  %113 = load i32, i32* %112, align 4
  %114 = icmp ult i32 %113, 3
  %115 = load i32, i32* %62, align 8
  %116 = icmp eq i32 %115, 6
  %117 = or i1 %114, %116
  br i1 %117, label %118, label %147

118:                                              ; preds = %108
  br i1 %110, label %124, label %119

119:                                              ; preds = %118, %119
  %120 = phi %"class.SkSL::Type"* [ %122, %119 ], [ %109, %118 ]
  %121 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %120, i64 0, i32 6
  %122 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %121, align 8
  %123 = icmp eq %"class.SkSL::Type"* %122, null
  br i1 %123, label %124, label %119

124:                                              ; preds = %119, %118
  %125 = phi %"class.SkSL::Type"* [ %3, %118 ], [ %120, %119 ]
  %126 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %125, i64 0, i32 16
  %127 = load i8, i8* %126, align 8, !range !2
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %129, label %147

129:                                              ; preds = %124
  %130 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %63, align 8
  %131 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %130, i64 0, i32 1, i32 0, i32 0, i32 0
  %132 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %131, align 8
  %133 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %132, i64 0, i32 1, i32 3
  %134 = load i8, i8* %133, align 1, !range !2
  %135 = icmp eq i8 %134, 0
  br i1 %135, label %136, label %147

136:                                              ; preds = %129
  %137 = load i32, i32* %64, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %66) #14
  store i32 196679, i32* %7, align 4
  %138 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %67, align 8
  %139 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %138, i64 3
  %140 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %139, align 8
  call void %140(%"class.SkSL::OutputStream"* %65, i8* nonnull %66, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %66) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %68) #14
  store i32 %137, i32* %9, align 4
  %141 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %67, align 8
  %142 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %141, i64 3
  %143 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %142, align 8
  call void %143(%"class.SkSL::OutputStream"* %65, i8* nonnull %68, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %68) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %69) #14
  store i32 0, i32* %8, align 4
  %144 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %67, align 8
  %145 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %144, i64 3
  %146 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %145, align 8
  call void %146(%"class.SkSL::OutputStream"* %65, i8* nonnull %69, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %69) #14
  br label %147

147:                                              ; preds = %108, %94, %124, %129, %136
  %148 = load i32, i32* %64, align 8
  %149 = add i32 %148, 1
  store i32 %149, i32* %64, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %70)
  store i32 %148, i32* %10, align 4
  %150 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %60, align 8
  %151 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %150, i64 3
  %152 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %151, align 8
  call void %152(%"class.SkSL::OutputStream"* %4, i8* nonnull %70, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %70)
  %153 = load i32*, i32** %33, align 8
  %154 = load i32*, i32** %34, align 16
  %155 = icmp eq i32* %153, %154
  %156 = ptrtoint i32* %154 to i64
  br i1 %155, label %160, label %157

157:                                              ; preds = %147
  store i32 %148, i32* %153, align 4
  %158 = getelementptr inbounds i32, i32* %153, i64 1
  %159 = ptrtoint i32* %158 to i64
  store i64 %159, i64* %71, align 8
  br label %203

160:                                              ; preds = %147
  %161 = ptrtoint i32* %153 to i64
  %162 = load i64, i64* %39, align 16
  %163 = sub i64 %161, %162
  %164 = ashr exact i64 %163, 2
  %165 = add nsw i64 %164, 1
  %166 = icmp ugt i64 %165, 4611686018427387903
  br i1 %166, label %167, label %169

167:                                              ; preds = %160
  %168 = bitcast %"class.std::__1::vector.382"* %16 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %168) #15
  unreachable

169:                                              ; preds = %160
  %170 = sub i64 %156, %162
  %171 = ashr exact i64 %170, 2
  %172 = icmp ult i64 %171, 2305843009213693951
  br i1 %172, label %173, label %181

173:                                              ; preds = %169
  %174 = ashr exact i64 %170, 1
  %175 = icmp ult i64 %174, %165
  %176 = select i1 %175, i64 %165, i64 %174
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %186, label %178

178:                                              ; preds = %173
  %179 = icmp ugt i64 %176, 4611686018427387903
  br i1 %179, label %180, label %181

180:                                              ; preds = %178
  call void @abort() #15
  unreachable

181:                                              ; preds = %178, %169
  %182 = phi i64 [ %176, %178 ], [ 4611686018427387903, %169 ]
  %183 = shl i64 %182, 2
  %184 = call i8* @_Znwm(i64 %183) #16
  %185 = bitcast i8* %184 to i32*
  br label %186

186:                                              ; preds = %181, %173
  %187 = phi i64 [ %182, %181 ], [ 0, %173 ]
  %188 = phi i8* [ %184, %181 ], [ null, %173 ]
  %189 = phi i32* [ %185, %181 ], [ null, %173 ]
  %190 = getelementptr inbounds i32, i32* %189, i64 %164
  %191 = getelementptr inbounds i32, i32* %189, i64 %187
  %192 = ptrtoint i32* %191 to i64
  store i32 %148, i32* %190, align 4
  %193 = getelementptr inbounds i32, i32* %190, i64 1
  %194 = ptrtoint i32* %193 to i64
  %195 = ptrtoint i32* %189 to i64
  %196 = icmp sgt i64 %163, 0
  br i1 %196, label %197, label %199

197:                                              ; preds = %186
  %198 = inttoptr i64 %162 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %188, i8* align 4 %198, i64 %163, i1 false) #14
  br label %199

199:                                              ; preds = %197, %186
  store i64 %195, i64* %39, align 16
  store i64 %194, i64* %71, align 8
  store i64 %192, i64* %38, align 16
  %200 = icmp eq i64 %162, 0
  br i1 %200, label %203, label %201

201:                                              ; preds = %199
  %202 = inttoptr i64 %162 to i8*
  call void @_ZdlPv(i8* %202) #16
  br label %203

203:                                              ; preds = %157, %199, %201
  %204 = load i32, i32* %56, align 4
  %205 = icmp sgt i32 %204, 0
  br i1 %205, label %211, label %206

206:                                              ; preds = %211, %203
  %207 = phi i32 [ %204, %203 ], [ %219, %211 ]
  %208 = add nuw nsw i32 %96, 1
  %209 = load i32, i32* %35, align 8
  %210 = icmp slt i32 %208, %209
  br i1 %210, label %94, label %74

211:                                              ; preds = %203, %211
  %212 = phi i32 [ %218, %211 ], [ 0, %203 ]
  %213 = icmp eq i32 %212, %96
  %214 = select i1 %213, i32 %2, i32 %30
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %72)
  store i32 %214, i32* %13, align 4
  %215 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %60, align 8
  %216 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %215, i64 3
  %217 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %216, align 8
  call void %217(%"class.SkSL::OutputStream"* %4, i8* nonnull %72, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %72)
  %218 = add nuw nsw i32 %212, 1
  %219 = load i32, i32* %56, align 4
  %220 = icmp slt i32 %218, %219
  br i1 %220, label %211, label %206

221:                                              ; preds = %231
  %222 = load i32*, i32** %32, align 16
  br label %223

223:                                              ; preds = %221, %76
  %224 = phi i32* [ %222, %221 ], [ %89, %76 ]
  %225 = icmp eq i32* %224, null
  br i1 %225, label %230, label %226

226:                                              ; preds = %223
  %227 = ptrtoint i32* %224 to i64
  %228 = bitcast i32** %33 to i64*
  store i64 %227, i64* %228, align 8
  %229 = bitcast i32* %224 to i8*
  call void @_ZdlPv(i8* %229) #16
  br label %230

230:                                              ; preds = %223, %226
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #14
  ret void

231:                                              ; preds = %92, %231
  %232 = phi i32* [ %89, %92 ], [ %237, %231 ]
  %233 = load i32, i32* %232, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %93)
  store i32 %233, i32* %14, align 4
  %234 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %77, align 8
  %235 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %234, i64 3
  %236 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %235, align 8
  call void %236(%"class.SkSL::OutputStream"* %4, i8* nonnull %93, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %93)
  %237 = getelementptr inbounds i32, i32* %232, i64 1
  %238 = icmp eq i32* %237, %90
  br i1 %238, label %221, label %231
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator15writeMatrixCopyEjRKNS_4TypeES3_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, i32, %"class.SkSL::Type"* dereferenceable(184), %"class.SkSL::Type"* dereferenceable(184), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca %"class.SkSL::Literal.430", align 8
  %35 = alloca %"class.SkSL::Literal.430", align 8
  %36 = alloca [4 x i32], align 16
  %37 = icmp eq %"class.SkSL::Type"* %3, null
  br i1 %37, label %86, label %38

38:                                               ; preds = %5
  %39 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %3, i64 0, i32 6
  %40 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %39, align 8
  %41 = icmp eq %"class.SkSL::Type"* %40, null
  %42 = select i1 %41, %"class.SkSL::Type"* %3, %"class.SkSL::Type"* %40
  %43 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %42, i64 0, i32 4
  %44 = load i32, i32* %43, align 4
  %45 = icmp ult i32 %44, 3
  br i1 %45, label %50, label %46

46:                                               ; preds = %38
  %47 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %3, i64 0, i32 3
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %48, 6
  br i1 %49, label %50, label %86

50:                                               ; preds = %46, %38
  br i1 %41, label %56, label %51

51:                                               ; preds = %50, %51
  %52 = phi %"class.SkSL::Type"* [ %54, %51 ], [ %40, %50 ]
  %53 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %52, i64 0, i32 6
  %54 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %53, align 8
  %55 = icmp eq %"class.SkSL::Type"* %54, null
  br i1 %55, label %56, label %51

56:                                               ; preds = %51, %50
  %57 = phi %"class.SkSL::Type"* [ %3, %50 ], [ %52, %51 ]
  %58 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %57, i64 0, i32 16
  %59 = load i8, i8* %58, align 8, !range !2
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %61, label %86

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 1
  %63 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %62, align 8
  %64 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %63, i64 0, i32 1, i32 0, i32 0, i32 0
  %65 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %64, align 8
  %66 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %65, i64 0, i32 1, i32 3
  %67 = load i8, i8* %66, align 1, !range !2
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %69, label %86

69:                                               ; preds = %61
  %70 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %71 = load i32, i32* %70, align 8
  %72 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %73 = bitcast i32* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %73) #14
  store i32 196679, i32* %31, align 4
  %74 = bitcast %"class.SkSL::OutputStream"* %72 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %75 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %75, i64 3
  %77 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %76, align 8
  call void %77(%"class.SkSL::OutputStream"* %72, i8* nonnull %73, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %73) #14
  %78 = bitcast i32* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %78) #14
  store i32 %71, i32* %33, align 4
  %79 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %74, align 8
  %80 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %79, i64 3
  %81 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %80, align 8
  call void %81(%"class.SkSL::OutputStream"* %72, i8* nonnull %78, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %78) #14
  %82 = bitcast i32* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %82) #14
  store i32 0, i32* %32, align 4
  %83 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %74, align 8
  %84 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %83, i64 3
  %85 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %84, align 8
  call void %85(%"class.SkSL::OutputStream"* %72, i8* nonnull %82, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %82) #14
  br label %86

86:                                               ; preds = %5, %46, %56, %61, %69
  %87 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %88 = load i32, i32* %87, align 8
  %89 = add i32 %88, 1
  store i32 %89, i32* %87, align 8
  %90 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 6
  %91 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %90, align 8
  %92 = icmp eq %"class.SkSL::Type"* %91, null
  %93 = select i1 %92, %"class.SkSL::Type"* %2, %"class.SkSL::Type"* %91
  %94 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 1
  %95 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %94, align 8
  %96 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 9
  %97 = load i32, i32* %96, align 4
  %98 = call dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL4Type10toCompoundERKNS_7ContextEii(%"class.SkSL::Type"* %93, %"class.SkSL::Context"* dereferenceable(744) %95, i32 %97, i32 1) #14
  %99 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %100 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %98, %"class.SkSL::MemoryLayout"* dereferenceable(4) %99) #14
  %101 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %3, i64 0, i32 6
  %102 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %101, align 8
  %103 = icmp eq %"class.SkSL::Type"* %102, null
  %104 = select i1 %103, %"class.SkSL::Type"* %3, %"class.SkSL::Type"* %102
  %105 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %94, align 8
  %106 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %3, i64 0, i32 9
  %107 = load i32, i32* %106, align 4
  %108 = call dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL4Type10toCompoundERKNS_7ContextEii(%"class.SkSL::Type"* %104, %"class.SkSL::Context"* dereferenceable(744) %105, i32 %107, i32 1) #14
  %109 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %108, %"class.SkSL::MemoryLayout"* dereferenceable(4) %99) #14
  %110 = bitcast %"class.SkSL::Literal.430"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %110) #14
  %111 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %34, i64 0, i32 0, i32 0, i32 0
  %112 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %34, i64 0, i32 0, i32 0, i32 1
  %113 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %34, i64 0, i32 0, i32 0, i32 2
  %114 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %34, i64 0, i32 0, i32 1
  %115 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %34, i64 0, i32 1
  %116 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %34, i64 0, i32 2, i64 0
  %117 = bitcast i8* %116 to i32*
  store i32 -1431655766, i32* %117, align 4
  %118 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %101, align 8
  %119 = icmp eq %"class.SkSL::Type"* %118, null
  %120 = select i1 %119, %"class.SkSL::Type"* %3, %"class.SkSL::Type"* %118
  store i32 -1, i32* %112, align 8
  store i32 45, i32* %113, align 4
  store %"class.SkSL::Type"* %120, %"class.SkSL::Type"** %114, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIfEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %111, align 8
  store float 0.000000e+00, float* %115, align 8
  %121 = call i32 @_ZN4SkSL18SPIRVCodeGenerator17writeFloatLiteralERKNS_7LiteralIfEE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Literal.430"* nonnull dereferenceable(32) %34)
  %122 = bitcast %"class.SkSL::Literal.430"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %122) #14
  %123 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %35, i64 0, i32 0, i32 0, i32 0
  %124 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %35, i64 0, i32 0, i32 0, i32 1
  %125 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %35, i64 0, i32 0, i32 0, i32 2
  %126 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %35, i64 0, i32 0, i32 1
  %127 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %35, i64 0, i32 1
  %128 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %35, i64 0, i32 2, i64 0
  %129 = bitcast i8* %128 to i32*
  store i32 -1431655766, i32* %129, align 4
  %130 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %101, align 8
  %131 = icmp eq %"class.SkSL::Type"* %130, null
  %132 = select i1 %131, %"class.SkSL::Type"* %3, %"class.SkSL::Type"* %130
  store i32 -1, i32* %124, align 8
  store i32 45, i32* %125, align 4
  store %"class.SkSL::Type"* %132, %"class.SkSL::Type"** %126, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIfEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %123, align 8
  store float 1.000000e+00, float* %127, align 8
  %133 = call i32 @_ZN4SkSL18SPIRVCodeGenerator17writeFloatLiteralERKNS_7LiteralIfEE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Literal.430"* nonnull dereferenceable(32) %35)
  %134 = bitcast [4 x i32]* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %134) #14
  %135 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %3, i64 0, i32 8
  %136 = bitcast [4 x i32]* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %136, i8 -86, i64 16, i1 false)
  %137 = load i32, i32* %135, align 8
  %138 = icmp sgt i32 %137, 0
  br i1 %138, label %141, label %139

139:                                              ; preds = %86
  %140 = bitcast %"class.SkSL::OutputStream"* %4 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  br label %170

141:                                              ; preds = %86
  %142 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 8
  %143 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %3, i64 0, i32 3
  %144 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 1
  %145 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %146 = bitcast i32* %18 to i8*
  %147 = bitcast %"class.SkSL::OutputStream"* %145 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %148 = bitcast i32* %20 to i8*
  %149 = bitcast i32* %19 to i8*
  %150 = bitcast i32* %27 to i8*
  %151 = bitcast %"class.SkSL::OutputStream"* %4 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %152 = bitcast i32* %28 to i8*
  %153 = bitcast i32* %29 to i8*
  %154 = bitcast i32* %17 to i8*
  %155 = bitcast i32* %16 to i8*
  %156 = bitcast i32* %15 to i8*
  %157 = bitcast i32* %14 to i8*
  %158 = bitcast i32* %11 to i8*
  %159 = bitcast i32* %13 to i8*
  %160 = bitcast i32* %12 to i8*
  %161 = bitcast i32* %6 to i8*
  %162 = bitcast i32* %21 to i8*
  %163 = bitcast i32* %24 to i8*
  %164 = bitcast i32* %25 to i8*
  %165 = bitcast i32* %26 to i8*
  %166 = bitcast i32* %10 to i8*
  %167 = bitcast i32* %9 to i8*
  %168 = bitcast i32* %8 to i8*
  %169 = bitcast i32* %7 to i8*
  br label %187

170:                                              ; preds = %369, %139
  %171 = phi void (%"class.SkSL::OutputStream"*, i8*, i64)*** [ %140, %139 ], [ %151, %369 ]
  %172 = phi i32 [ %137, %139 ], [ %373, %369 ]
  %173 = add nsw i32 %172, 3
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 80, i32 %173, %"class.SkSL::OutputStream"* dereferenceable(8) %4)
  %174 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %3, %"class.SkSL::MemoryLayout"* dereferenceable(4) %99) #14
  %175 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %175)
  store i32 %174, i32* %23, align 4
  %176 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %171, align 8
  %177 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %176, i64 3
  %178 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %177, align 8
  call void %178(%"class.SkSL::OutputStream"* %4, i8* nonnull %175, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %175)
  %179 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %179)
  store i32 %88, i32* %22, align 4
  %180 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %171, align 8
  %181 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %180, i64 3
  %182 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %181, align 8
  call void %182(%"class.SkSL::OutputStream"* %4, i8* nonnull %179, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %179)
  %183 = load i32, i32* %135, align 8
  %184 = icmp sgt i32 %183, 0
  br i1 %184, label %185, label %376

185:                                              ; preds = %170
  %186 = bitcast i32* %30 to i8*
  br label %377

187:                                              ; preds = %141, %369
  %188 = phi i64 [ 0, %141 ], [ %372, %369 ]
  %189 = load i32, i32* %142, align 8
  %190 = sext i32 %189 to i64
  %191 = icmp slt i64 %188, %190
  br i1 %37, label %231, label %192

192:                                              ; preds = %187
  %193 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %101, align 8
  %194 = icmp eq %"class.SkSL::Type"* %193, null
  %195 = select i1 %194, %"class.SkSL::Type"* %3, %"class.SkSL::Type"* %193
  %196 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %195, i64 0, i32 4
  %197 = load i32, i32* %196, align 4
  %198 = icmp ult i32 %197, 3
  %199 = load i32, i32* %143, align 8
  %200 = icmp eq i32 %199, 6
  %201 = or i1 %198, %200
  br i1 %201, label %202, label %231

202:                                              ; preds = %192
  br i1 %194, label %208, label %203

203:                                              ; preds = %202, %203
  %204 = phi %"class.SkSL::Type"* [ %206, %203 ], [ %193, %202 ]
  %205 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %204, i64 0, i32 6
  %206 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %205, align 8
  %207 = icmp eq %"class.SkSL::Type"* %206, null
  br i1 %207, label %208, label %203

208:                                              ; preds = %203, %202
  %209 = phi %"class.SkSL::Type"* [ %3, %202 ], [ %204, %203 ]
  %210 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %209, i64 0, i32 16
  %211 = load i8, i8* %210, align 8, !range !2
  %212 = icmp eq i8 %211, 0
  br i1 %212, label %213, label %231

213:                                              ; preds = %208
  %214 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %144, align 8
  %215 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %214, i64 0, i32 1, i32 0, i32 0, i32 0
  %216 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %215, align 8
  %217 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %216, i64 0, i32 1, i32 3
  %218 = load i8, i8* %217, align 1, !range !2
  %219 = icmp eq i8 %218, 0
  br i1 %219, label %220, label %231

220:                                              ; preds = %213
  %221 = load i32, i32* %87, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %146) #14
  store i32 196679, i32* %18, align 4
  %222 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %147, align 8
  %223 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %222, i64 3
  %224 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %223, align 8
  call void %224(%"class.SkSL::OutputStream"* %145, i8* nonnull %146, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %146) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %148) #14
  store i32 %221, i32* %20, align 4
  %225 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %147, align 8
  %226 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %225, i64 3
  %227 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %226, align 8
  call void %227(%"class.SkSL::OutputStream"* %145, i8* nonnull %148, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %148) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %149) #14
  store i32 0, i32* %19, align 4
  %228 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %147, align 8
  %229 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %228, i64 3
  %230 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %229, align 8
  call void %230(%"class.SkSL::OutputStream"* %145, i8* nonnull %149, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %149) #14
  br label %231

231:                                              ; preds = %192, %187, %208, %213, %220
  %232 = load i32, i32* %87, align 8
  %233 = add i32 %232, 1
  store i32 %233, i32* %87, align 8
  br i1 %191, label %234, label %347

234:                                              ; preds = %231
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 81, i32 5, %"class.SkSL::OutputStream"* dereferenceable(8) %4) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %154) #14
  store i32 %100, i32* %17, align 4
  %235 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %151, align 8
  %236 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %235, i64 3
  %237 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %236, align 8
  call void %237(%"class.SkSL::OutputStream"* %4, i8* nonnull %154, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %154) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %155) #14
  store i32 %232, i32* %16, align 4
  %238 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %151, align 8
  %239 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %238, i64 3
  %240 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %239, align 8
  call void %240(%"class.SkSL::OutputStream"* %4, i8* nonnull %155, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %155) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %156) #14
  store i32 %1, i32* %15, align 4
  %241 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %151, align 8
  %242 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %241, i64 3
  %243 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %242, align 8
  call void %243(%"class.SkSL::OutputStream"* %4, i8* nonnull %156, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %156) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %157) #14
  %244 = trunc i64 %188 to i32
  store i32 %244, i32* %14, align 4
  %245 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %151, align 8
  %246 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %245, i64 3
  %247 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %246, align 8
  call void %247(%"class.SkSL::OutputStream"* %4, i8* nonnull %157, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %157) #14
  %248 = load i32, i32* %96, align 4
  %249 = load i32, i32* %106, align 4
  %250 = icmp eq i32 %248, %249
  br i1 %250, label %369, label %251

251:                                              ; preds = %234
  %252 = icmp sgt i32 %249, %248
  br i1 %37, label %292, label %253

253:                                              ; preds = %251
  %254 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %101, align 8
  %255 = icmp eq %"class.SkSL::Type"* %254, null
  %256 = select i1 %255, %"class.SkSL::Type"* %3, %"class.SkSL::Type"* %254
  %257 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %256, i64 0, i32 4
  %258 = load i32, i32* %257, align 4
  %259 = icmp ult i32 %258, 3
  %260 = load i32, i32* %143, align 8
  %261 = icmp eq i32 %260, 6
  %262 = or i1 %259, %261
  br i1 %262, label %263, label %292

263:                                              ; preds = %253
  br i1 %255, label %269, label %264

264:                                              ; preds = %263, %264
  %265 = phi %"class.SkSL::Type"* [ %267, %264 ], [ %254, %263 ]
  %266 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %265, i64 0, i32 6
  %267 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %266, align 8
  %268 = icmp eq %"class.SkSL::Type"* %267, null
  br i1 %268, label %269, label %264

269:                                              ; preds = %264, %263
  %270 = phi %"class.SkSL::Type"* [ %3, %263 ], [ %265, %264 ]
  %271 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %270, i64 0, i32 16
  %272 = load i8, i8* %271, align 8, !range !2
  %273 = icmp eq i8 %272, 0
  br i1 %273, label %274, label %292

274:                                              ; preds = %269
  %275 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %144, align 8
  %276 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %275, i64 0, i32 1, i32 0, i32 0, i32 0
  %277 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %276, align 8
  %278 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %277, i64 0, i32 1, i32 3
  %279 = load i8, i8* %278, align 1, !range !2
  %280 = icmp eq i8 %279, 0
  br i1 %280, label %281, label %292

281:                                              ; preds = %274
  %282 = load i32, i32* %87, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158) #14
  store i32 196679, i32* %11, align 4
  %283 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %147, align 8
  %284 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %283, i64 3
  %285 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %284, align 8
  call void %285(%"class.SkSL::OutputStream"* %145, i8* nonnull %158, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %159) #14
  store i32 %282, i32* %13, align 4
  %286 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %147, align 8
  %287 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %286, i64 3
  %288 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %287, align 8
  call void %288(%"class.SkSL::OutputStream"* %145, i8* nonnull %159, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %159) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %160) #14
  store i32 0, i32* %12, align 4
  %289 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %147, align 8
  %290 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %289, i64 3
  %291 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %290, align 8
  call void %291(%"class.SkSL::OutputStream"* %145, i8* nonnull %160, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %160) #14
  br label %292

292:                                              ; preds = %253, %251, %269, %274, %281
  %293 = load i32, i32* %87, align 8
  %294 = add i32 %293, 1
  store i32 %294, i32* %87, align 8
  %295 = load i32, i32* %106, align 4
  br i1 %252, label %296, label %323

296:                                              ; preds = %292
  %297 = load i32, i32* %96, align 4
  %298 = add i32 %295, 4
  %299 = sub i32 %298, %297
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 80, i32 %299, %"class.SkSL::OutputStream"* dereferenceable(8) %4)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %166)
  store i32 %109, i32* %10, align 4
  %300 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %151, align 8
  %301 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %300, i64 3
  %302 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %301, align 8
  call void %302(%"class.SkSL::OutputStream"* %4, i8* nonnull %166, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %166)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %167)
  store i32 %293, i32* %9, align 4
  %303 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %151, align 8
  %304 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %303, i64 3
  %305 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %304, align 8
  call void %305(%"class.SkSL::OutputStream"* %4, i8* nonnull %167, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %167)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %168)
  store i32 %232, i32* %8, align 4
  %306 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %151, align 8
  %307 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %306, i64 3
  %308 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %307, align 8
  call void %308(%"class.SkSL::OutputStream"* %4, i8* nonnull %168, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %168)
  %309 = load i32, i32* %96, align 4
  %310 = load i32, i32* %106, align 4
  %311 = icmp slt i32 %309, %310
  br i1 %311, label %312, label %369

312:                                              ; preds = %296, %312
  %313 = phi i32 [ %320, %312 ], [ %309, %296 ]
  %314 = zext i32 %313 to i64
  %315 = icmp eq i64 %188, %314
  %316 = select i1 %315, i32 %133, i32 %121
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %169)
  store i32 %316, i32* %7, align 4
  %317 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %151, align 8
  %318 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %317, i64 3
  %319 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %318, align 8
  call void %319(%"class.SkSL::OutputStream"* %4, i8* nonnull %169, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %169)
  %320 = add nsw i32 %313, 1
  %321 = load i32, i32* %106, align 4
  %322 = icmp slt i32 %320, %321
  br i1 %322, label %312, label %369

323:                                              ; preds = %292
  %324 = add nsw i32 %295, 5
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 79, i32 %324, %"class.SkSL::OutputStream"* dereferenceable(8) %4)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %161)
  store i32 %109, i32* %6, align 4
  %325 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %151, align 8
  %326 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %325, i64 3
  %327 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %326, align 8
  call void %327(%"class.SkSL::OutputStream"* %4, i8* nonnull %161, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %161)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %162)
  store i32 %293, i32* %21, align 4
  %328 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %151, align 8
  %329 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %328, i64 3
  %330 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %329, align 8
  call void %330(%"class.SkSL::OutputStream"* %4, i8* nonnull %162, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %162)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %163)
  store i32 %232, i32* %24, align 4
  %331 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %151, align 8
  %332 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %331, i64 3
  %333 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %332, align 8
  call void %333(%"class.SkSL::OutputStream"* %4, i8* nonnull %163, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %163)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %164)
  store i32 %232, i32* %25, align 4
  %334 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %151, align 8
  %335 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %334, i64 3
  %336 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %335, align 8
  call void %336(%"class.SkSL::OutputStream"* %4, i8* nonnull %164, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %164)
  %337 = load i32, i32* %106, align 4
  %338 = icmp sgt i32 %337, 0
  br i1 %338, label %339, label %369

339:                                              ; preds = %323, %339
  %340 = phi i32 [ %344, %339 ], [ 0, %323 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %165)
  store i32 %340, i32* %26, align 4
  %341 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %151, align 8
  %342 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %341, i64 3
  %343 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %342, align 8
  call void %343(%"class.SkSL::OutputStream"* %4, i8* nonnull %165, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %165)
  %344 = add nuw nsw i32 %340, 1
  %345 = load i32, i32* %106, align 4
  %346 = icmp slt i32 %344, %345
  br i1 %346, label %339, label %369

347:                                              ; preds = %231
  %348 = load i32, i32* %106, align 4
  %349 = add nsw i32 %348, 3
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 80, i32 %349, %"class.SkSL::OutputStream"* dereferenceable(8) %4)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %150)
  store i32 %109, i32* %27, align 4
  %350 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %151, align 8
  %351 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %350, i64 3
  %352 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %351, align 8
  call void %352(%"class.SkSL::OutputStream"* %4, i8* nonnull %150, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %150)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %152)
  store i32 %232, i32* %28, align 4
  %353 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %151, align 8
  %354 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %353, i64 3
  %355 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %354, align 8
  call void %355(%"class.SkSL::OutputStream"* %4, i8* nonnull %152, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %152)
  %356 = load i32, i32* %106, align 4
  %357 = icmp sgt i32 %356, 0
  br i1 %357, label %358, label %369

358:                                              ; preds = %347, %358
  %359 = phi i32 [ %366, %358 ], [ 0, %347 ]
  %360 = zext i32 %359 to i64
  %361 = icmp eq i64 %188, %360
  %362 = select i1 %361, i32 %133, i32 %121
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %153)
  store i32 %362, i32* %29, align 4
  %363 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %151, align 8
  %364 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %363, i64 3
  %365 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %364, align 8
  call void %365(%"class.SkSL::OutputStream"* %4, i8* nonnull %153, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %153)
  %366 = add nuw nsw i32 %359, 1
  %367 = load i32, i32* %106, align 4
  %368 = icmp slt i32 %366, %367
  br i1 %368, label %358, label %369

369:                                              ; preds = %358, %339, %312, %347, %234, %296, %323
  %370 = phi i32 [ %232, %234 ], [ %293, %296 ], [ %293, %323 ], [ %232, %347 ], [ %293, %312 ], [ %293, %339 ], [ %232, %358 ]
  %371 = getelementptr inbounds [4 x i32], [4 x i32]* %36, i64 0, i64 %188
  store i32 %370, i32* %371, align 4
  %372 = add nuw nsw i64 %188, 1
  %373 = load i32, i32* %135, align 8
  %374 = sext i32 %373 to i64
  %375 = icmp slt i64 %372, %374
  br i1 %375, label %187, label %170

376:                                              ; preds = %377, %170
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %134) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %122) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %110) #14
  ret i32 %88

377:                                              ; preds = %185, %377
  %378 = phi i64 [ 0, %185 ], [ %384, %377 ]
  %379 = getelementptr inbounds [4 x i32], [4 x i32]* %36, i64 0, i64 %378
  %380 = load i32, i32* %379, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %186)
  store i32 %380, i32* %30, align 4
  %381 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %171, align 8
  %382 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %381, i64 3
  %383 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %382, align 8
  call void %383(%"class.SkSL::OutputStream"* %4, i8* nonnull %186, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %186)
  %384 = add nuw nsw i64 %378, 1
  %385 = load i32, i32* %135, align 8
  %386 = sext i32 %385 to i64
  %387 = icmp slt i64 %384, %386
  br i1 %387, label %377, label %376
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18SPIRVCodeGenerator14addColumnEntryEjNS0_9PrecisionEPNSt3__16vectorIjNS2_9allocatorIjEEEES7_PiijRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, i32, i32, %"class.std::__1::vector.382"*, %"class.std::__1::vector.382"*, i32* nocapture, i32, i32, %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = load i32, i32* %5, align 4
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %5, align 4
  %18 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %3, i64 0, i32 0, i32 1
  %19 = load i32*, i32** %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %21 = load i32*, i32** %20, align 8
  %22 = icmp eq i32* %19, %21
  %23 = ptrtoint i32* %21 to i64
  br i1 %22, label %28, label %24

24:                                               ; preds = %9
  store i32 %7, i32* %19, align 4
  %25 = getelementptr inbounds i32, i32* %19, i64 1
  %26 = ptrtoint i32* %25 to i64
  %27 = bitcast i32** %18 to i64*
  store i64 %26, i64* %27, align 8
  br label %84

28:                                               ; preds = %9
  %29 = ptrtoint i32* %19 to i64
  %30 = bitcast i32** %18 to i64*
  %31 = bitcast %"class.std::__1::vector.382"* %3 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %29, %32
  %34 = ashr exact i64 %33, 2
  %35 = add nsw i64 %34, 1
  %36 = icmp ugt i64 %35, 4611686018427387903
  br i1 %36, label %37, label %39

37:                                               ; preds = %28
  %38 = bitcast %"class.std::__1::vector.382"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %38) #15
  unreachable

39:                                               ; preds = %28
  %40 = bitcast i32** %20 to i64*
  %41 = sub i64 %23, %32
  %42 = ashr exact i64 %41, 2
  %43 = icmp ult i64 %42, 2305843009213693951
  br i1 %43, label %44, label %52

44:                                               ; preds = %39
  %45 = ashr exact i64 %41, 1
  %46 = icmp ult i64 %45, %35
  %47 = select i1 %46, i64 %35, i64 %45
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %57, label %49

49:                                               ; preds = %44
  %50 = icmp ugt i64 %47, 4611686018427387903
  br i1 %50, label %51, label %52

51:                                               ; preds = %49
  tail call void @abort() #15
  unreachable

52:                                               ; preds = %49, %39
  %53 = phi i64 [ %47, %49 ], [ 4611686018427387903, %39 ]
  %54 = shl i64 %53, 2
  %55 = tail call i8* @_Znwm(i64 %54) #16
  %56 = bitcast i8* %55 to i32*
  br label %57

57:                                               ; preds = %52, %44
  %58 = phi i64 [ %53, %52 ], [ 0, %44 ]
  %59 = phi i32* [ %56, %52 ], [ null, %44 ]
  %60 = getelementptr inbounds i32, i32* %59, i64 %34
  %61 = getelementptr inbounds i32, i32* %59, i64 %58
  %62 = ptrtoint i32* %61 to i64
  store i32 %7, i32* %60, align 4
  %63 = getelementptr inbounds i32, i32* %60, i64 1
  %64 = ptrtoint i32* %63 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %3, i64 0, i32 0, i32 0
  %66 = load i32*, i32** %65, align 8
  %67 = load i64, i64* %30, align 8
  %68 = ptrtoint i32* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 2
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds i32, i32* %60, i64 %71
  %73 = ptrtoint i32* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %57
  %76 = bitcast i32* %72 to i8*
  %77 = bitcast i32* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #14
  %78 = load i32*, i32** %65, align 8
  br label %79

79:                                               ; preds = %75, %57
  %80 = phi i32* [ %66, %57 ], [ %78, %75 ]
  store i64 %73, i64* %31, align 8
  store i64 %64, i64* %30, align 8
  store i64 %62, i64* %40, align 8
  %81 = icmp eq i32* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast i32* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #16
  br label %84

84:                                               ; preds = %24, %79, %82
  %85 = load i32, i32* %5, align 4
  %86 = icmp eq i32 %85, %6
  br i1 %86, label %87, label %221

87:                                               ; preds = %84
  store i32 0, i32* %5, align 4
  %88 = bitcast i32** %18 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.std::__1::vector.382"* %3 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = sub i64 %89, %91
  %93 = lshr exact i64 %92, 2
  %94 = trunc i64 %93 to i32
  %95 = add i32 %94, 3
  tail call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 80, i32 %95, %"class.SkSL::OutputStream"* dereferenceable(8) %8)
  %96 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %96)
  store i32 %1, i32* %15, align 4
  %97 = bitcast %"class.SkSL::OutputStream"* %8 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %98 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %97, align 8
  %99 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %98, i64 3
  %100 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %99, align 8
  call void %100(%"class.SkSL::OutputStream"* %8, i8* nonnull %96, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %96)
  %101 = icmp eq i32 %2, 1
  br i1 %101, label %102, label %127

102:                                              ; preds = %87
  %103 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 1
  %104 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %103, align 8
  %105 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %104, i64 0, i32 1, i32 0, i32 0, i32 0
  %106 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %105, align 8
  %107 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %106, i64 0, i32 1, i32 3
  %108 = load i8, i8* %107, align 1, !range !2
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %110, label %127

110:                                              ; preds = %102
  %111 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %112 = load i32, i32* %111, align 8
  %113 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %114 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %114) #14
  store i32 196679, i32* %12, align 4
  %115 = bitcast %"class.SkSL::OutputStream"* %113 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %116 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %115, align 8
  %117 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %116, i64 3
  %118 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %117, align 8
  call void %118(%"class.SkSL::OutputStream"* %113, i8* nonnull %114, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %114) #14
  %119 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %119) #14
  store i32 %112, i32* %14, align 4
  %120 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %115, align 8
  %121 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %120, i64 3
  %122 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %121, align 8
  call void %122(%"class.SkSL::OutputStream"* %113, i8* nonnull %119, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %119) #14
  %123 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %123) #14
  store i32 0, i32* %13, align 4
  %124 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %115, align 8
  %125 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %124, i64 3
  %126 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %125, align 8
  call void %126(%"class.SkSL::OutputStream"* %113, i8* nonnull %123, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %123) #14
  br label %127

127:                                              ; preds = %87, %102, %110
  %128 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %129 = load i32, i32* %128, align 8
  %130 = add i32 %129, 1
  store i32 %130, i32* %128, align 8
  %131 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %131)
  store i32 %129, i32* %11, align 4
  %132 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %97, align 8
  %133 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %132, i64 3
  %134 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %133, align 8
  call void %134(%"class.SkSL::OutputStream"* %8, i8* nonnull %131, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %131)
  %135 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %4, i64 0, i32 0, i32 1
  %136 = load i32*, i32** %135, align 8
  %137 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %138 = load i32*, i32** %137, align 8
  %139 = icmp eq i32* %136, %138
  %140 = ptrtoint i32* %138 to i64
  br i1 %139, label %145, label %141

141:                                              ; preds = %127
  store i32 %129, i32* %136, align 4
  %142 = getelementptr inbounds i32, i32* %136, i64 1
  %143 = ptrtoint i32* %142 to i64
  %144 = bitcast i32** %135 to i64*
  store i64 %143, i64* %144, align 8
  br label %201

145:                                              ; preds = %127
  %146 = ptrtoint i32* %136 to i64
  %147 = bitcast i32** %135 to i64*
  %148 = bitcast %"class.std::__1::vector.382"* %4 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = sub i64 %146, %149
  %151 = ashr exact i64 %150, 2
  %152 = add nsw i64 %151, 1
  %153 = icmp ugt i64 %152, 4611686018427387903
  br i1 %153, label %154, label %156

154:                                              ; preds = %145
  %155 = bitcast %"class.std::__1::vector.382"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %155) #15
  unreachable

156:                                              ; preds = %145
  %157 = bitcast i32** %137 to i64*
  %158 = sub i64 %140, %149
  %159 = ashr exact i64 %158, 2
  %160 = icmp ult i64 %159, 2305843009213693951
  br i1 %160, label %161, label %169

161:                                              ; preds = %156
  %162 = ashr exact i64 %158, 1
  %163 = icmp ult i64 %162, %152
  %164 = select i1 %163, i64 %152, i64 %162
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %174, label %166

166:                                              ; preds = %161
  %167 = icmp ugt i64 %164, 4611686018427387903
  br i1 %167, label %168, label %169

168:                                              ; preds = %166
  call void @abort() #15
  unreachable

169:                                              ; preds = %166, %156
  %170 = phi i64 [ %164, %166 ], [ 4611686018427387903, %156 ]
  %171 = shl i64 %170, 2
  %172 = call i8* @_Znwm(i64 %171) #16
  %173 = bitcast i8* %172 to i32*
  br label %174

174:                                              ; preds = %169, %161
  %175 = phi i64 [ %170, %169 ], [ 0, %161 ]
  %176 = phi i32* [ %173, %169 ], [ null, %161 ]
  %177 = getelementptr inbounds i32, i32* %176, i64 %151
  %178 = getelementptr inbounds i32, i32* %176, i64 %175
  %179 = ptrtoint i32* %178 to i64
  store i32 %129, i32* %177, align 4
  %180 = getelementptr inbounds i32, i32* %177, i64 1
  %181 = ptrtoint i32* %180 to i64
  %182 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %4, i64 0, i32 0, i32 0
  %183 = load i32*, i32** %182, align 8
  %184 = load i64, i64* %147, align 8
  %185 = ptrtoint i32* %183 to i64
  %186 = sub i64 %184, %185
  %187 = ashr exact i64 %186, 2
  %188 = sub nsw i64 0, %187
  %189 = getelementptr inbounds i32, i32* %177, i64 %188
  %190 = ptrtoint i32* %189 to i64
  %191 = icmp sgt i64 %186, 0
  br i1 %191, label %192, label %196

192:                                              ; preds = %174
  %193 = bitcast i32* %189 to i8*
  %194 = bitcast i32* %183 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %193, i8* align 4 %194, i64 %186, i1 false) #14
  %195 = load i32*, i32** %182, align 8
  br label %196

196:                                              ; preds = %192, %174
  %197 = phi i32* [ %183, %174 ], [ %195, %192 ]
  store i64 %190, i64* %148, align 8
  store i64 %181, i64* %147, align 8
  store i64 %179, i64* %157, align 8
  %198 = icmp eq i32* %197, null
  br i1 %198, label %201, label %199

199:                                              ; preds = %196
  %200 = bitcast i32* %197 to i8*
  call void @_ZdlPv(i8* %200) #16
  br label %201

201:                                              ; preds = %141, %196, %199
  %202 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %3, i64 0, i32 0, i32 0
  %203 = load i32*, i32** %202, align 8
  %204 = load i32*, i32** %18, align 8
  %205 = icmp eq i32* %203, %204
  %206 = ptrtoint i32* %203 to i64
  br i1 %205, label %211, label %207

207:                                              ; preds = %201
  %208 = bitcast i32* %10 to i8*
  br label %213

209:                                              ; preds = %213
  %210 = load i64, i64* %90, align 8
  br label %211

211:                                              ; preds = %209, %201
  %212 = phi i64 [ %210, %209 ], [ %206, %201 ]
  store i64 %212, i64* %88, align 8
  br label %221

213:                                              ; preds = %207, %213
  %214 = phi i32* [ %203, %207 ], [ %219, %213 ]
  %215 = load i32, i32* %214, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %208)
  store i32 %215, i32* %10, align 4
  %216 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %97, align 8
  %217 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %216, i64 3
  %218 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %217, align 8
  call void %218(%"class.SkSL::OutputStream"* %8, i8* nonnull %208, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %208)
  %219 = getelementptr inbounds i32, i32* %214, i64 1
  %220 = icmp eq i32* %219, %204
  br i1 %220, label %209, label %213

221:                                              ; preds = %211, %84
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator22writeMatrixConstructorERKNS_19ConstructorCompoundERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::ConstructorCompound"* nocapture readonly dereferenceable(64), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = alloca i32, align 4
  %42 = alloca %"class.std::__1::vector.382", align 8
  %43 = alloca [4 x i32], align 16
  %44 = alloca %"class.std::__1::vector.382", align 8
  %45 = alloca %"class.std::__1::vector.382", align 8
  %46 = alloca i32, align 4
  %47 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %48 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %47, align 8
  %49 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i64 16
  %50 = bitcast i8* %49 to %"class.std::__1::unique_ptr.336"**
  %51 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %50, align 8
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %51, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %52, align 8
  %54 = bitcast %"class.SkSL::Expression"* %53 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %55 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %54, align 8
  %56 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %55, i64 3
  %57 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %56, align 8
  %58 = tail call dereferenceable(184) %"class.SkSL::Type"* %57(%"class.SkSL::Expression"* %53) #14
  %59 = bitcast %"class.std::__1::vector.382"* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #14
  %60 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %42, i64 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %42, i64 0, i32 0, i32 1
  %62 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %42, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 0, i64 24, i1 false) #14
  %63 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i64 24
  %64 = bitcast i8* %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = lshr i64 %65, 1
  %67 = and i64 %66, 2147483647
  %68 = bitcast i32** %62 to i64*
  %69 = bitcast %"class.std::__1::vector.382"* %42 to i64*
  %70 = icmp eq i64 %67, 0
  br i1 %70, label %80, label %71

71:                                               ; preds = %3
  %72 = bitcast i32** %61 to i64*
  %73 = shl nuw nsw i64 %67, 2
  %74 = tail call i8* @_Znwm(i64 %73) #16
  %75 = bitcast i8* %74 to i32*
  %76 = ptrtoint i8* %74 to i64
  %77 = getelementptr inbounds i32, i32* %75, i64 %67
  %78 = ptrtoint i32* %77 to i64
  %79 = ptrtoint i8* %74 to i64
  store i64 %79, i64* %69, align 8
  store i64 %76, i64* %72, align 8
  store i64 %78, i64* %68, align 8
  br label %80

80:                                               ; preds = %71, %3
  %81 = phi i64 [ 0, %3 ], [ %76, %71 ]
  %82 = phi i32* [ null, %3 ], [ %77, %71 ]
  %83 = phi i32* [ null, %3 ], [ %75, %71 ]
  %84 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %50, align 8
  %85 = icmp eq %"class.std::__1::unique_ptr.336"* %84, null
  br i1 %85, label %91, label %86

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %84, i64 %67
  %88 = icmp eq i64 %67, 0
  br i1 %88, label %91, label %89

89:                                               ; preds = %86
  %90 = bitcast i32** %61 to i64*
  br label %157

91:                                               ; preds = %217, %80, %86
  %92 = phi i64 [ %81, %86 ], [ %81, %80 ], [ %218, %217 ]
  %93 = icmp eq %"class.SkSL::Type"* %48, null
  br i1 %93, label %144, label %94

94:                                               ; preds = %91
  %95 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %48, i64 0, i32 6
  %96 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %95, align 8
  %97 = icmp eq %"class.SkSL::Type"* %96, null
  %98 = select i1 %97, %"class.SkSL::Type"* %48, %"class.SkSL::Type"* %96
  %99 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %98, i64 0, i32 4
  %100 = load i32, i32* %99, align 4
  %101 = icmp ult i32 %100, 3
  br i1 %101, label %106, label %102

102:                                              ; preds = %94
  %103 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %48, i64 0, i32 3
  %104 = load i32, i32* %103, align 8
  %105 = icmp eq i32 %104, 6
  br i1 %105, label %106, label %144

106:                                              ; preds = %102, %94
  br i1 %97, label %112, label %107

107:                                              ; preds = %106, %107
  %108 = phi %"class.SkSL::Type"* [ %110, %107 ], [ %96, %106 ]
  %109 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %108, i64 0, i32 6
  %110 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %109, align 8
  %111 = icmp eq %"class.SkSL::Type"* %110, null
  br i1 %111, label %112, label %107

112:                                              ; preds = %107, %106
  %113 = phi %"class.SkSL::Type"* [ %48, %106 ], [ %108, %107 ]
  %114 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %113, i64 0, i32 16
  %115 = load i8, i8* %114, align 8, !range !2
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %117, label %144

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 1
  %119 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %118, align 8
  %120 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %119, i64 0, i32 1, i32 0, i32 0, i32 0
  %121 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %120, align 8
  %122 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %121, i64 0, i32 1, i32 3
  %123 = load i8, i8* %122, align 1, !range !2
  %124 = icmp eq i8 %123, 0
  br i1 %124, label %125, label %144

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %127 = load i32, i32* %126, align 8
  %128 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %129 = bitcast i32* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %129) #14
  store i32 196679, i32* %39, align 4
  %130 = bitcast %"class.SkSL::OutputStream"* %128 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %131 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %130, align 8
  %132 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %131, i64 3
  %133 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %132, align 8
  call void %133(%"class.SkSL::OutputStream"* %128, i8* nonnull %129, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %129) #14
  %134 = bitcast i32* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %134) #14
  store i32 %127, i32* %41, align 4
  %135 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %130, align 8
  %136 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %135, i64 3
  %137 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %136, align 8
  call void %137(%"class.SkSL::OutputStream"* %128, i8* nonnull %134, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %134) #14
  %138 = bitcast i32* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %138) #14
  store i32 0, i32* %40, align 4
  %139 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %130, align 8
  %140 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %139, i64 3
  %141 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %140, align 8
  call void %141(%"class.SkSL::OutputStream"* %128, i8* nonnull %138, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %138) #14
  %142 = bitcast i32** %61 to i64*
  %143 = load i64, i64* %142, align 8
  br label %144

144:                                              ; preds = %91, %102, %112, %117, %125
  %145 = phi i64 [ %92, %91 ], [ %92, %102 ], [ %92, %112 ], [ %92, %117 ], [ %143, %125 ]
  %146 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %147 = load i32, i32* %146, align 8
  %148 = add i32 %147, 1
  store i32 %148, i32* %146, align 8
  %149 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %48, i64 0, i32 9
  %150 = load i32, i32* %149, align 4
  %151 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %48, i64 0, i32 8
  %152 = load i32, i32* %151, align 8
  %153 = bitcast i32** %61 to i64*
  %154 = load i64, i64* %69, align 8
  %155 = sub i64 %145, %154
  %156 = icmp eq i64 %155, 4
  br i1 %156, label %224, label %466

157:                                              ; preds = %222, %89
  %158 = phi i64 [ %81, %89 ], [ %218, %222 ]
  %159 = phi i32* [ %82, %89 ], [ %223, %222 ]
  %160 = phi i32* [ %83, %89 ], [ %219, %222 ]
  %161 = phi %"class.std::__1::unique_ptr.336"* [ %84, %89 ], [ %220, %222 ]
  %162 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %161, i64 0, i32 0, i32 0, i32 0
  %163 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %162, align 8
  %164 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %163, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %165 = icmp ult i32* %160, %159
  %166 = ptrtoint i32* %159 to i64
  br i1 %165, label %167, label %170

167:                                              ; preds = %157
  store i32 %164, i32* %160, align 4
  %168 = getelementptr inbounds i32, i32* %160, i64 1
  %169 = ptrtoint i32* %168 to i64
  store i64 %169, i64* %90, align 8
  br label %217

170:                                              ; preds = %157
  %171 = ptrtoint i32* %160 to i64
  %172 = load i64, i64* %69, align 8
  %173 = sub i64 %171, %172
  %174 = ashr exact i64 %173, 2
  %175 = add nsw i64 %174, 1
  %176 = icmp ugt i64 %175, 4611686018427387903
  br i1 %176, label %177, label %179

177:                                              ; preds = %170
  %178 = bitcast %"class.std::__1::vector.382"* %42 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %178) #15
  unreachable

179:                                              ; preds = %170
  %180 = sub i64 %166, %172
  %181 = ashr exact i64 %180, 2
  %182 = icmp ult i64 %181, 2305843009213693951
  br i1 %182, label %183, label %191

183:                                              ; preds = %179
  %184 = ashr exact i64 %180, 1
  %185 = icmp ult i64 %184, %175
  %186 = select i1 %185, i64 %175, i64 %184
  %187 = icmp eq i64 %186, 0
  br i1 %187, label %196, label %188

188:                                              ; preds = %183
  %189 = icmp ugt i64 %186, 4611686018427387903
  br i1 %189, label %190, label %191

190:                                              ; preds = %188
  tail call void @abort() #15
  unreachable

191:                                              ; preds = %188, %179
  %192 = phi i64 [ %186, %188 ], [ 4611686018427387903, %179 ]
  %193 = shl i64 %192, 2
  %194 = tail call i8* @_Znwm(i64 %193) #16
  %195 = bitcast i8* %194 to i32*
  br label %196

196:                                              ; preds = %191, %183
  %197 = phi i64 [ %192, %191 ], [ 0, %183 ]
  %198 = phi i32* [ %195, %191 ], [ null, %183 ]
  %199 = getelementptr inbounds i32, i32* %198, i64 %174
  %200 = getelementptr inbounds i32, i32* %198, i64 %197
  %201 = ptrtoint i32* %200 to i64
  store i32 %164, i32* %199, align 4
  %202 = getelementptr inbounds i32, i32* %199, i64 1
  %203 = ptrtoint i32* %202 to i64
  %204 = sub i64 %158, %172
  %205 = ashr exact i64 %204, 2
  %206 = sub nsw i64 0, %205
  %207 = getelementptr inbounds i32, i32* %199, i64 %206
  %208 = ptrtoint i32* %207 to i64
  %209 = icmp sgt i64 %204, 0
  br i1 %209, label %210, label %213

210:                                              ; preds = %196
  %211 = bitcast i32* %207 to i8*
  %212 = inttoptr i64 %172 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %211, i8* align 4 %212, i64 %204, i1 false) #14
  br label %213

213:                                              ; preds = %210, %196
  store i64 %208, i64* %69, align 8
  store i64 %203, i64* %90, align 8
  store i64 %201, i64* %68, align 8
  %214 = icmp eq i64 %172, 0
  br i1 %214, label %217, label %215

215:                                              ; preds = %213
  %216 = inttoptr i64 %172 to i8*
  tail call void @_ZdlPv(i8* %216) #16
  br label %217

217:                                              ; preds = %167, %213, %215
  %218 = phi i64 [ %169, %167 ], [ %203, %213 ], [ %203, %215 ]
  %219 = phi i32* [ %168, %167 ], [ %202, %213 ], [ %202, %215 ]
  %220 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %161, i64 1
  %221 = icmp eq %"class.std::__1::unique_ptr.336"* %220, %87
  br i1 %221, label %91, label %222

222:                                              ; preds = %217
  %223 = load i32*, i32** %62, align 8
  br label %157

224:                                              ; preds = %144
  %225 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %58, i64 0, i32 3
  %226 = load i32, i32* %225, align 8
  %227 = icmp eq i32 %226, 11
  br i1 %227, label %228, label %466

228:                                              ; preds = %224
  %229 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %48, i64 0, i32 6
  %230 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %229, align 8
  %231 = icmp eq %"class.SkSL::Type"* %230, null
  %232 = select i1 %231, %"class.SkSL::Type"* %48, %"class.SkSL::Type"* %230
  %233 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %234 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %232, %"class.SkSL::MemoryLayout"* dereferenceable(4) %233) #14
  %235 = bitcast [4 x i32]* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %235) #14
  %236 = getelementptr inbounds [4 x i32], [4 x i32]* %43, i64 0, i64 0
  %237 = getelementptr inbounds [4 x i32], [4 x i32]* %43, i64 0, i64 1
  %238 = getelementptr inbounds [4 x i32], [4 x i32]* %43, i64 0, i64 2
  %239 = getelementptr inbounds [4 x i32], [4 x i32]* %43, i64 0, i64 3
  %240 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %48, i64 0, i32 3
  %241 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 1
  %242 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %243 = bitcast i32* %18 to i8*
  %244 = bitcast %"class.SkSL::OutputStream"* %242 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %245 = bitcast i32* %20 to i8*
  %246 = bitcast i32* %19 to i8*
  %247 = bitcast i32* %17 to i8*
  %248 = bitcast %"class.SkSL::OutputStream"* %2 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %249 = bitcast i32* %16 to i8*
  %250 = bitcast i32* %15 to i8*
  %251 = bitcast i32* %14 to i8*
  %252 = bitcast [4 x i32]* %43 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %252, i8 -86, i64 16, i1 false)
  br label %404

253:                                              ; preds = %445
  %254 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %229, align 8
  %255 = icmp eq %"class.SkSL::Type"* %254, null
  %256 = select i1 %255, %"class.SkSL::Type"* %48, %"class.SkSL::Type"* %254
  %257 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 1
  %258 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %257, align 8
  %259 = call dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL4Type10toCompoundERKNS_7ContextEii(%"class.SkSL::Type"* %256, %"class.SkSL::Context"* dereferenceable(744) %258, i32 2, i32 1) #14
  %260 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %259, %"class.SkSL::MemoryLayout"* dereferenceable(4) %233) #14
  br i1 %93, label %303, label %261

261:                                              ; preds = %253
  %262 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %229, align 8
  %263 = icmp eq %"class.SkSL::Type"* %262, null
  %264 = select i1 %263, %"class.SkSL::Type"* %48, %"class.SkSL::Type"* %262
  %265 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %264, i64 0, i32 4
  %266 = load i32, i32* %265, align 4
  %267 = icmp ult i32 %266, 3
  br i1 %267, label %271, label %268

268:                                              ; preds = %261
  %269 = load i32, i32* %240, align 8
  %270 = icmp eq i32 %269, 6
  br i1 %270, label %271, label %303

271:                                              ; preds = %268, %261
  br i1 %263, label %277, label %272

272:                                              ; preds = %271, %272
  %273 = phi %"class.SkSL::Type"* [ %275, %272 ], [ %262, %271 ]
  %274 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %273, i64 0, i32 6
  %275 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %274, align 8
  %276 = icmp eq %"class.SkSL::Type"* %275, null
  br i1 %276, label %277, label %272

277:                                              ; preds = %272, %271
  %278 = phi %"class.SkSL::Type"* [ %48, %271 ], [ %273, %272 ]
  %279 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %278, i64 0, i32 16
  %280 = load i8, i8* %279, align 8, !range !2
  %281 = icmp eq i8 %280, 0
  br i1 %281, label %282, label %303

282:                                              ; preds = %277
  %283 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %241, align 8
  %284 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %283, i64 0, i32 1, i32 0, i32 0, i32 0
  %285 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %284, align 8
  %286 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %285, i64 0, i32 1, i32 3
  %287 = load i8, i8* %286, align 1, !range !2
  %288 = icmp eq i8 %287, 0
  br i1 %288, label %289, label %303

289:                                              ; preds = %282
  %290 = load i32, i32* %146, align 8
  %291 = bitcast i32* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %291) #14
  store i32 196679, i32* %36, align 4
  %292 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %244, align 8
  %293 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %292, i64 3
  %294 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %293, align 8
  call void %294(%"class.SkSL::OutputStream"* %242, i8* nonnull %291, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %291) #14
  %295 = bitcast i32* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %295) #14
  store i32 %290, i32* %38, align 4
  %296 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %244, align 8
  %297 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %296, i64 3
  %298 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %297, align 8
  call void %298(%"class.SkSL::OutputStream"* %242, i8* nonnull %295, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %295) #14
  %299 = bitcast i32* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %299) #14
  store i32 0, i32* %37, align 4
  %300 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %244, align 8
  %301 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %300, i64 3
  %302 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %301, align 8
  call void %302(%"class.SkSL::OutputStream"* %242, i8* nonnull %299, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %299) #14
  br label %303

303:                                              ; preds = %253, %268, %277, %282, %289
  %304 = load i32, i32* %146, align 8
  %305 = add i32 %304, 1
  store i32 %305, i32* %146, align 8
  %306 = load i32, i32* %236, align 16
  %307 = load i32, i32* %237, align 4
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 80, i32 5, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %308 = bitcast i32* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %308) #14
  store i32 %260, i32* %35, align 4
  %309 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %248, align 8
  %310 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %309, i64 3
  %311 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %310, align 8
  call void %311(%"class.SkSL::OutputStream"* %2, i8* nonnull %308, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %308) #14
  %312 = bitcast i32* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %312) #14
  store i32 %304, i32* %34, align 4
  %313 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %248, align 8
  %314 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %313, i64 3
  %315 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %314, align 8
  call void %315(%"class.SkSL::OutputStream"* %2, i8* nonnull %312, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %312) #14
  %316 = bitcast i32* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %316) #14
  store i32 %306, i32* %33, align 4
  %317 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %248, align 8
  %318 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %317, i64 3
  %319 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %318, align 8
  call void %319(%"class.SkSL::OutputStream"* %2, i8* nonnull %316, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %316) #14
  %320 = bitcast i32* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %320) #14
  store i32 %307, i32* %32, align 4
  %321 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %248, align 8
  %322 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %321, i64 3
  %323 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %322, align 8
  call void %323(%"class.SkSL::OutputStream"* %2, i8* nonnull %320, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %320) #14
  br i1 %93, label %366, label %324

324:                                              ; preds = %303
  %325 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %229, align 8
  %326 = icmp eq %"class.SkSL::Type"* %325, null
  %327 = select i1 %326, %"class.SkSL::Type"* %48, %"class.SkSL::Type"* %325
  %328 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %327, i64 0, i32 4
  %329 = load i32, i32* %328, align 4
  %330 = icmp ult i32 %329, 3
  br i1 %330, label %334, label %331

331:                                              ; preds = %324
  %332 = load i32, i32* %240, align 8
  %333 = icmp eq i32 %332, 6
  br i1 %333, label %334, label %366

334:                                              ; preds = %331, %324
  br i1 %326, label %340, label %335

335:                                              ; preds = %334, %335
  %336 = phi %"class.SkSL::Type"* [ %338, %335 ], [ %325, %334 ]
  %337 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %336, i64 0, i32 6
  %338 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %337, align 8
  %339 = icmp eq %"class.SkSL::Type"* %338, null
  br i1 %339, label %340, label %335

340:                                              ; preds = %335, %334
  %341 = phi %"class.SkSL::Type"* [ %48, %334 ], [ %336, %335 ]
  %342 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %341, i64 0, i32 16
  %343 = load i8, i8* %342, align 8, !range !2
  %344 = icmp eq i8 %343, 0
  br i1 %344, label %345, label %366

345:                                              ; preds = %340
  %346 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %241, align 8
  %347 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %346, i64 0, i32 1, i32 0, i32 0, i32 0
  %348 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %347, align 8
  %349 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %348, i64 0, i32 1, i32 3
  %350 = load i8, i8* %349, align 1, !range !2
  %351 = icmp eq i8 %350, 0
  br i1 %351, label %352, label %366

352:                                              ; preds = %345
  %353 = load i32, i32* %146, align 8
  %354 = bitcast i32* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %354) #14
  store i32 196679, i32* %29, align 4
  %355 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %244, align 8
  %356 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %355, i64 3
  %357 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %356, align 8
  call void %357(%"class.SkSL::OutputStream"* %242, i8* nonnull %354, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %354) #14
  %358 = bitcast i32* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %358) #14
  store i32 %353, i32* %31, align 4
  %359 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %244, align 8
  %360 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %359, i64 3
  %361 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %360, align 8
  call void %361(%"class.SkSL::OutputStream"* %242, i8* nonnull %358, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %358) #14
  %362 = bitcast i32* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %362) #14
  store i32 0, i32* %30, align 4
  %363 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %244, align 8
  %364 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %363, i64 3
  %365 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %364, align 8
  call void %365(%"class.SkSL::OutputStream"* %242, i8* nonnull %362, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %362) #14
  br label %366

366:                                              ; preds = %303, %331, %340, %345, %352
  %367 = load i32, i32* %146, align 8
  %368 = add i32 %367, 1
  store i32 %368, i32* %146, align 8
  %369 = load i32, i32* %238, align 8
  %370 = load i32, i32* %239, align 4
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 80, i32 5, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %371 = bitcast i32* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %371) #14
  store i32 %260, i32* %28, align 4
  %372 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %248, align 8
  %373 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %372, i64 3
  %374 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %373, align 8
  call void %374(%"class.SkSL::OutputStream"* %2, i8* nonnull %371, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %371) #14
  %375 = bitcast i32* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %375) #14
  store i32 %367, i32* %27, align 4
  %376 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %248, align 8
  %377 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %376, i64 3
  %378 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %377, align 8
  call void %378(%"class.SkSL::OutputStream"* %2, i8* nonnull %375, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %375) #14
  %379 = bitcast i32* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %379) #14
  store i32 %369, i32* %26, align 4
  %380 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %248, align 8
  %381 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %380, i64 3
  %382 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %381, align 8
  call void %382(%"class.SkSL::OutputStream"* %2, i8* nonnull %379, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %379) #14
  %383 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %383) #14
  store i32 %370, i32* %25, align 4
  %384 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %248, align 8
  %385 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %384, i64 3
  %386 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %385, align 8
  call void %386(%"class.SkSL::OutputStream"* %2, i8* nonnull %383, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %383) #14
  %387 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %48, %"class.SkSL::MemoryLayout"* dereferenceable(4) %233) #14
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 80, i32 5, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %388 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %388) #14
  store i32 %387, i32* %24, align 4
  %389 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %248, align 8
  %390 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %389, i64 3
  %391 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %390, align 8
  call void %391(%"class.SkSL::OutputStream"* %2, i8* nonnull %388, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %388) #14
  %392 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %392) #14
  store i32 %147, i32* %23, align 4
  %393 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %248, align 8
  %394 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %393, i64 3
  %395 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %394, align 8
  call void %395(%"class.SkSL::OutputStream"* %2, i8* nonnull %392, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %392) #14
  %396 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %396) #14
  store i32 %304, i32* %22, align 4
  %397 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %248, align 8
  %398 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %397, i64 3
  %399 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %398, align 8
  call void %399(%"class.SkSL::OutputStream"* %2, i8* nonnull %396, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %396) #14
  %400 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %400) #14
  store i32 %367, i32* %21, align 4
  %401 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %248, align 8
  %402 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %401, i64 3
  %403 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %402, align 8
  call void %403(%"class.SkSL::OutputStream"* %2, i8* nonnull %400, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %400) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %235) #14
  br label %722

404:                                              ; preds = %445, %228
  %405 = phi i64 [ 0, %228 ], [ %464, %445 ]
  br i1 %93, label %445, label %406

406:                                              ; preds = %404
  %407 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %229, align 8
  %408 = icmp eq %"class.SkSL::Type"* %407, null
  %409 = select i1 %408, %"class.SkSL::Type"* %48, %"class.SkSL::Type"* %407
  %410 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %409, i64 0, i32 4
  %411 = load i32, i32* %410, align 4
  %412 = icmp ult i32 %411, 3
  br i1 %412, label %416, label %413

413:                                              ; preds = %406
  %414 = load i32, i32* %240, align 8
  %415 = icmp eq i32 %414, 6
  br i1 %415, label %416, label %445

416:                                              ; preds = %413, %406
  br i1 %408, label %422, label %417

417:                                              ; preds = %416, %417
  %418 = phi %"class.SkSL::Type"* [ %420, %417 ], [ %407, %416 ]
  %419 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %418, i64 0, i32 6
  %420 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %419, align 8
  %421 = icmp eq %"class.SkSL::Type"* %420, null
  br i1 %421, label %422, label %417

422:                                              ; preds = %417, %416
  %423 = phi %"class.SkSL::Type"* [ %48, %416 ], [ %418, %417 ]
  %424 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %423, i64 0, i32 16
  %425 = load i8, i8* %424, align 8, !range !2
  %426 = icmp eq i8 %425, 0
  br i1 %426, label %427, label %445

427:                                              ; preds = %422
  %428 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %241, align 8
  %429 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %428, i64 0, i32 1, i32 0, i32 0, i32 0
  %430 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %429, align 8
  %431 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %430, i64 0, i32 1, i32 3
  %432 = load i8, i8* %431, align 1, !range !2
  %433 = icmp eq i8 %432, 0
  br i1 %433, label %434, label %445

434:                                              ; preds = %427
  %435 = load i32, i32* %146, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %243) #14
  store i32 196679, i32* %18, align 4
  %436 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %244, align 8
  %437 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %436, i64 3
  %438 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %437, align 8
  call void %438(%"class.SkSL::OutputStream"* %242, i8* nonnull %243, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %243) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %245) #14
  store i32 %435, i32* %20, align 4
  %439 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %244, align 8
  %440 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %439, i64 3
  %441 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %440, align 8
  call void %441(%"class.SkSL::OutputStream"* %242, i8* nonnull %245, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %245) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %246) #14
  store i32 0, i32* %19, align 4
  %442 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %244, align 8
  %443 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %442, i64 3
  %444 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %443, align 8
  call void %444(%"class.SkSL::OutputStream"* %242, i8* nonnull %246, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %246) #14
  br label %445

445:                                              ; preds = %404, %413, %422, %427, %434
  %446 = load i32, i32* %146, align 8
  %447 = add i32 %446, 1
  store i32 %447, i32* %146, align 8
  %448 = getelementptr inbounds [4 x i32], [4 x i32]* %43, i64 0, i64 %405
  store i32 %446, i32* %448, align 4
  %449 = load i32*, i32** %60, align 8
  %450 = load i32, i32* %449, align 4
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 81, i32 5, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %247) #14
  store i32 %234, i32* %17, align 4
  %451 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %248, align 8
  %452 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %451, i64 3
  %453 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %452, align 8
  call void %453(%"class.SkSL::OutputStream"* %2, i8* nonnull %247, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %247) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %249) #14
  store i32 %446, i32* %16, align 4
  %454 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %248, align 8
  %455 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %454, i64 3
  %456 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %455, align 8
  call void %456(%"class.SkSL::OutputStream"* %2, i8* nonnull %249, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %249) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %250) #14
  store i32 %450, i32* %15, align 4
  %457 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %248, align 8
  %458 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %457, i64 3
  %459 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %458, align 8
  call void %459(%"class.SkSL::OutputStream"* %2, i8* nonnull %250, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %250) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %251) #14
  %460 = trunc i64 %405 to i32
  store i32 %460, i32* %14, align 4
  %461 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %248, align 8
  %462 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %461, i64 3
  %463 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %462, align 8
  call void %463(%"class.SkSL::OutputStream"* %2, i8* nonnull %251, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %251) #14
  %464 = add nuw nsw i64 %405, 1
  %465 = icmp eq i64 %464, 4
  br i1 %465, label %253, label %404

466:                                              ; preds = %224, %144
  %467 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %48, i64 0, i32 6
  %468 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %467, align 8
  %469 = icmp eq %"class.SkSL::Type"* %468, null
  %470 = select i1 %469, %"class.SkSL::Type"* %48, %"class.SkSL::Type"* %468
  %471 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 1
  %472 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %471, align 8
  %473 = call dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL4Type10toCompoundERKNS_7ContextEii(%"class.SkSL::Type"* %470, %"class.SkSL::Context"* dereferenceable(744) %472, i32 %150, i32 1) #14
  %474 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %475 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %473, %"class.SkSL::MemoryLayout"* dereferenceable(4) %474) #14
  %476 = bitcast %"class.std::__1::vector.382"* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %476) #14
  %477 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %44, i64 0, i32 0, i32 0
  %478 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %44, i64 0, i32 0, i32 1
  %479 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %44, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %476, i8 0, i64 24, i1 false) #14
  %480 = bitcast %"class.std::__1::vector.382"* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %480) #14
  %481 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %45, i64 0, i32 0, i32 0
  %482 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %45, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %480, i8 0, i64 24, i1 false) #14
  %483 = bitcast i32* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %483) #14
  store i32 0, i32* %46, align 4
  br label %484

484:                                              ; preds = %484, %466
  %485 = phi %"class.SkSL::Type"* [ %48, %466 ], [ %487, %484 ]
  %486 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %485, i64 0, i32 6
  %487 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %486, align 8
  %488 = icmp eq %"class.SkSL::Type"* %487, null
  br i1 %488, label %489, label %484

489:                                              ; preds = %484
  %490 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %485, i64 0, i32 16
  %491 = load i8, i8* %490, align 8, !range !2
  %492 = xor i8 %491, 1
  %493 = zext i8 %492 to i32
  %494 = load i64, i64* %153, align 8
  %495 = load i64, i64* %69, align 8
  %496 = icmp eq i64 %494, %495
  br i1 %496, label %497, label %499

497:                                              ; preds = %489
  %498 = bitcast %"class.SkSL::OutputStream"* %2 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  br label %514

499:                                              ; preds = %489
  %500 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 1
  %501 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %502 = bitcast i32* %9 to i8*
  %503 = bitcast %"class.SkSL::OutputStream"* %501 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %504 = bitcast i32* %11 to i8*
  %505 = bitcast i32* %10 to i8*
  %506 = bitcast i32* %8 to i8*
  %507 = bitcast %"class.SkSL::OutputStream"* %2 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %508 = bitcast i32* %7 to i8*
  %509 = bitcast i32* %6 to i8*
  %510 = bitcast i32* %5 to i8*
  %511 = bitcast i32** %478 to i64*
  %512 = bitcast %"class.std::__1::vector.382"* %44 to i64*
  %513 = bitcast i32** %479 to i64*
  br label %531

514:                                              ; preds = %690, %497
  %515 = phi void (%"class.SkSL::OutputStream"*, i8*, i64)*** [ %498, %497 ], [ %507, %690 ]
  %516 = add nsw i32 %152, 3
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 80, i32 %516, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %517 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %48, %"class.SkSL::MemoryLayout"* dereferenceable(4) %474) #14
  %518 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %518)
  store i32 %517, i32* %13, align 4
  %519 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %515, align 8
  %520 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %519, i64 3
  %521 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %520, align 8
  call void %521(%"class.SkSL::OutputStream"* %2, i8* nonnull %518, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %518)
  %522 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %522)
  store i32 %147, i32* %12, align 4
  %523 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %515, align 8
  %524 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %523, i64 3
  %525 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %524, align 8
  call void %525(%"class.SkSL::OutputStream"* %2, i8* nonnull %522, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %522)
  %526 = load i32*, i32** %477, align 8
  %527 = load i32*, i32** %478, align 8
  %528 = icmp eq i32* %526, %527
  br i1 %528, label %699, label %529

529:                                              ; preds = %514
  %530 = bitcast i32* %4 to i8*
  br label %714

531:                                              ; preds = %697, %499
  %532 = phi i32 [ 0, %499 ], [ %698, %697 ]
  %533 = phi i64 [ 0, %499 ], [ %691, %697 ]
  %534 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %50, align 8
  %535 = shl i64 %533, 32
  %536 = ashr exact i64 %535, 32
  %537 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %534, i64 %536, i32 0, i32 0, i32 0
  %538 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %537, align 8
  %539 = bitcast %"class.SkSL::Expression"* %538 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %540 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %539, align 8
  %541 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %540, i64 3
  %542 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %541, align 8
  %543 = call dereferenceable(184) %"class.SkSL::Type"* %542(%"class.SkSL::Expression"* %538) #14
  %544 = icmp eq i32 %532, 0
  br i1 %544, label %545, label %609

545:                                              ; preds = %531
  %546 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %543, i64 0, i32 3
  %547 = load i32, i32* %546, align 8
  %548 = icmp eq i32 %547, 11
  br i1 %548, label %549, label %609

549:                                              ; preds = %545
  %550 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %543, i64 0, i32 8
  %551 = load i32, i32* %550, align 8
  %552 = load i32, i32* %149, align 4
  %553 = icmp eq i32 %551, %552
  br i1 %553, label %554, label %609

554:                                              ; preds = %549
  %555 = load i32*, i32** %60, align 8
  %556 = getelementptr inbounds i32, i32* %555, i64 %533
  %557 = load i32*, i32** %478, align 8
  %558 = load i32*, i32** %479, align 8
  %559 = icmp eq i32* %557, %558
  %560 = ptrtoint i32* %558 to i64
  br i1 %559, label %565, label %561

561:                                              ; preds = %554
  %562 = load i32, i32* %556, align 4
  store i32 %562, i32* %557, align 4
  %563 = getelementptr inbounds i32, i32* %557, i64 1
  %564 = ptrtoint i32* %563 to i64
  store i64 %564, i64* %511, align 8
  br label %690

565:                                              ; preds = %554
  %566 = ptrtoint i32* %557 to i64
  %567 = load i64, i64* %512, align 8
  %568 = sub i64 %566, %567
  %569 = ashr exact i64 %568, 2
  %570 = add nsw i64 %569, 1
  %571 = icmp ugt i64 %570, 4611686018427387903
  br i1 %571, label %572, label %574

572:                                              ; preds = %565
  %573 = bitcast %"class.std::__1::vector.382"* %44 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %573) #15
  unreachable

574:                                              ; preds = %565
  %575 = sub i64 %560, %567
  %576 = ashr exact i64 %575, 2
  %577 = icmp ult i64 %576, 2305843009213693951
  br i1 %577, label %578, label %586

578:                                              ; preds = %574
  %579 = ashr exact i64 %575, 1
  %580 = icmp ult i64 %579, %570
  %581 = select i1 %580, i64 %570, i64 %579
  %582 = icmp eq i64 %581, 0
  br i1 %582, label %591, label %583

583:                                              ; preds = %578
  %584 = icmp ugt i64 %581, 4611686018427387903
  br i1 %584, label %585, label %586

585:                                              ; preds = %583
  call void @abort() #15
  unreachable

586:                                              ; preds = %583, %574
  %587 = phi i64 [ %581, %583 ], [ 4611686018427387903, %574 ]
  %588 = shl i64 %587, 2
  %589 = call i8* @_Znwm(i64 %588) #16
  %590 = bitcast i8* %589 to i32*
  br label %591

591:                                              ; preds = %586, %578
  %592 = phi i64 [ %587, %586 ], [ 0, %578 ]
  %593 = phi i8* [ %589, %586 ], [ null, %578 ]
  %594 = phi i32* [ %590, %586 ], [ null, %578 ]
  %595 = getelementptr inbounds i32, i32* %594, i64 %569
  %596 = getelementptr inbounds i32, i32* %594, i64 %592
  %597 = ptrtoint i32* %596 to i64
  %598 = load i32, i32* %556, align 4
  store i32 %598, i32* %595, align 4
  %599 = getelementptr inbounds i32, i32* %595, i64 1
  %600 = ptrtoint i32* %599 to i64
  %601 = ptrtoint i32* %594 to i64
  %602 = icmp sgt i64 %568, 0
  br i1 %602, label %603, label %605

603:                                              ; preds = %591
  %604 = inttoptr i64 %567 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %593, i8* align 4 %604, i64 %568, i1 false) #14
  br label %605

605:                                              ; preds = %603, %591
  store i64 %601, i64* %512, align 8
  store i64 %600, i64* %511, align 8
  store i64 %597, i64* %513, align 8
  %606 = icmp eq i64 %567, 0
  br i1 %606, label %690, label %607

607:                                              ; preds = %605
  %608 = inttoptr i64 %567 to i8*
  call void @_ZdlPv(i8* %608) #16
  br label %690

609:                                              ; preds = %549, %545, %531
  %610 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %543, i64 0, i32 8
  %611 = load i32, i32* %610, align 8
  %612 = icmp eq i32 %611, 1
  br i1 %612, label %613, label %617

613:                                              ; preds = %609
  %614 = load i32*, i32** %60, align 8
  %615 = getelementptr inbounds i32, i32* %614, i64 %533
  %616 = load i32, i32* %615, align 4
  call void @_ZN4SkSL18SPIRVCodeGenerator14addColumnEntryEjNS0_9PrecisionEPNSt3__16vectorIjNS2_9allocatorIjEEEES7_PiijRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 %475, i32 %493, %"class.std::__1::vector.382"* nonnull %45, %"class.std::__1::vector.382"* nonnull %44, i32* nonnull %46, i32 %150, i32 %616, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  br label %690

617:                                              ; preds = %609
  %618 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %543, i64 0, i32 6
  %619 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %618, align 8
  %620 = icmp eq %"class.SkSL::Type"* %619, null
  %621 = select i1 %620, %"class.SkSL::Type"* %543, %"class.SkSL::Type"* %619
  %622 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %621, %"class.SkSL::MemoryLayout"* dereferenceable(4) %474) #14
  %623 = load i32, i32* %610, align 8
  %624 = icmp sgt i32 %623, 0
  br i1 %624, label %625, label %690

625:                                              ; preds = %617
  %626 = icmp eq %"class.SkSL::Type"* %543, null
  %627 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %543, i64 0, i32 3
  br label %628

628:                                              ; preds = %625, %669
  %629 = phi i32 [ 0, %625 ], [ %687, %669 ]
  br i1 %626, label %669, label %630

630:                                              ; preds = %628
  %631 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %618, align 8
  %632 = icmp eq %"class.SkSL::Type"* %631, null
  %633 = select i1 %632, %"class.SkSL::Type"* %543, %"class.SkSL::Type"* %631
  %634 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %633, i64 0, i32 4
  %635 = load i32, i32* %634, align 4
  %636 = icmp ult i32 %635, 3
  %637 = load i32, i32* %627, align 8
  %638 = icmp eq i32 %637, 6
  %639 = or i1 %636, %638
  br i1 %639, label %640, label %669

640:                                              ; preds = %630
  br i1 %632, label %646, label %641

641:                                              ; preds = %640, %641
  %642 = phi %"class.SkSL::Type"* [ %644, %641 ], [ %631, %640 ]
  %643 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %642, i64 0, i32 6
  %644 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %643, align 8
  %645 = icmp eq %"class.SkSL::Type"* %644, null
  br i1 %645, label %646, label %641

646:                                              ; preds = %641, %640
  %647 = phi %"class.SkSL::Type"* [ %543, %640 ], [ %642, %641 ]
  %648 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %647, i64 0, i32 16
  %649 = load i8, i8* %648, align 8, !range !2
  %650 = icmp eq i8 %649, 0
  br i1 %650, label %651, label %669

651:                                              ; preds = %646
  %652 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %500, align 8
  %653 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %652, i64 0, i32 1, i32 0, i32 0, i32 0
  %654 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %653, align 8
  %655 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %654, i64 0, i32 1, i32 3
  %656 = load i8, i8* %655, align 1, !range !2
  %657 = icmp eq i8 %656, 0
  br i1 %657, label %658, label %669

658:                                              ; preds = %651
  %659 = load i32, i32* %146, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %502) #14
  store i32 196679, i32* %9, align 4
  %660 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %503, align 8
  %661 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %660, i64 3
  %662 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %661, align 8
  call void %662(%"class.SkSL::OutputStream"* %501, i8* nonnull %502, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %502) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %504) #14
  store i32 %659, i32* %11, align 4
  %663 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %503, align 8
  %664 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %663, i64 3
  %665 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %664, align 8
  call void %665(%"class.SkSL::OutputStream"* %501, i8* nonnull %504, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %504) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %505) #14
  store i32 0, i32* %10, align 4
  %666 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %503, align 8
  %667 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %666, i64 3
  %668 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %667, align 8
  call void %668(%"class.SkSL::OutputStream"* %501, i8* nonnull %505, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %505) #14
  br label %669

669:                                              ; preds = %630, %628, %646, %651, %658
  %670 = load i32, i32* %146, align 8
  %671 = add i32 %670, 1
  store i32 %671, i32* %146, align 8
  %672 = load i32*, i32** %60, align 8
  %673 = getelementptr inbounds i32, i32* %672, i64 %533
  %674 = load i32, i32* %673, align 4
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 81, i32 5, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %506) #14
  store i32 %622, i32* %8, align 4
  %675 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %507, align 8
  %676 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %675, i64 3
  %677 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %676, align 8
  call void %677(%"class.SkSL::OutputStream"* %2, i8* nonnull %506, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %506) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %508) #14
  store i32 %670, i32* %7, align 4
  %678 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %507, align 8
  %679 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %678, i64 3
  %680 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %679, align 8
  call void %680(%"class.SkSL::OutputStream"* %2, i8* nonnull %508, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %508) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %509) #14
  store i32 %674, i32* %6, align 4
  %681 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %507, align 8
  %682 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %681, i64 3
  %683 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %682, align 8
  call void %683(%"class.SkSL::OutputStream"* %2, i8* nonnull %509, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %509) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %510) #14
  store i32 %629, i32* %5, align 4
  %684 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %507, align 8
  %685 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %684, i64 3
  %686 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %685, align 8
  call void %686(%"class.SkSL::OutputStream"* %2, i8* nonnull %510, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %510) #14
  call void @_ZN4SkSL18SPIRVCodeGenerator14addColumnEntryEjNS0_9PrecisionEPNSt3__16vectorIjNS2_9allocatorIjEEEES7_PiijRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 %475, i32 %493, %"class.std::__1::vector.382"* nonnull %45, %"class.std::__1::vector.382"* nonnull %44, i32* nonnull %46, i32 %150, i32 %670, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %687 = add nuw nsw i32 %629, 1
  %688 = load i32, i32* %610, align 8
  %689 = icmp slt i32 %687, %688
  br i1 %689, label %628, label %690

690:                                              ; preds = %669, %617, %607, %605, %561, %613
  %691 = add nuw i64 %533, 1
  %692 = load i64, i64* %153, align 8
  %693 = load i64, i64* %69, align 8
  %694 = sub i64 %692, %693
  %695 = ashr exact i64 %694, 2
  %696 = icmp ult i64 %691, %695
  br i1 %696, label %697, label %514

697:                                              ; preds = %690
  %698 = load i32, i32* %46, align 4
  br label %531

699:                                              ; preds = %714, %514
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %483) #14
  %700 = load i32*, i32** %481, align 8
  %701 = icmp eq i32* %700, null
  br i1 %701, label %706, label %702

702:                                              ; preds = %699
  %703 = ptrtoint i32* %700 to i64
  %704 = bitcast i32** %482 to i64*
  store i64 %703, i64* %704, align 8
  %705 = bitcast i32* %700 to i8*
  call void @_ZdlPv(i8* %705) #16
  br label %706

706:                                              ; preds = %699, %702
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %480) #14
  %707 = load i32*, i32** %477, align 8
  %708 = icmp eq i32* %707, null
  br i1 %708, label %713, label %709

709:                                              ; preds = %706
  %710 = ptrtoint i32* %707 to i64
  %711 = bitcast i32** %478 to i64*
  store i64 %710, i64* %711, align 8
  %712 = bitcast i32* %707 to i8*
  call void @_ZdlPv(i8* %712) #16
  br label %713

713:                                              ; preds = %706, %709
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %476) #14
  br label %722

714:                                              ; preds = %529, %714
  %715 = phi i32* [ %526, %529 ], [ %720, %714 ]
  %716 = load i32, i32* %715, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %530)
  store i32 %716, i32* %4, align 4
  %717 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %515, align 8
  %718 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %717, i64 3
  %719 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %718, align 8
  call void %719(%"class.SkSL::OutputStream"* %2, i8* nonnull %530, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %530)
  %720 = getelementptr inbounds i32, i32* %715, i64 1
  %721 = icmp eq i32* %720, %527
  br i1 %721, label %699, label %714

722:                                              ; preds = %713, %366
  %723 = load i32*, i32** %60, align 8
  %724 = icmp eq i32* %723, null
  br i1 %724, label %728, label %725

725:                                              ; preds = %722
  %726 = ptrtoint i32* %723 to i64
  store i64 %726, i64* %153, align 8
  %727 = bitcast i32* %723 to i8*
  call void @_ZdlPv(i8* %727) #16
  br label %728

728:                                              ; preds = %722, %725
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #14
  ret i32 %147
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator22writeVectorConstructorERKNS_19ConstructorCompoundERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::ConstructorCompound"* dereferenceable(64), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %"class.std::__1::vector.382", align 8
  %12 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %13 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %12, align 8
  %14 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %13, i64 0, i32 6
  %15 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %14, align 8
  %16 = icmp eq %"class.SkSL::Type"* %15, null
  %17 = select i1 %16, %"class.SkSL::Type"* %13, %"class.SkSL::Type"* %15
  %18 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %1, i64 0, i32 0, i32 0
  %19 = bitcast %"class.SkSL::ConstructorCompound"* %1 to { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)***
  %20 = load { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)**, { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)*** %19, align 8
  %21 = getelementptr inbounds { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)** %20, i64 12
  %22 = load { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)** %21, align 8
  %23 = tail call { %"class.std::__1::unique_ptr.336"*, i64 } %22(%"class.SkSL::AnyConstructor"* %18) #14
  %24 = extractvalue { %"class.std::__1::unique_ptr.336"*, i64 } %23, 0
  %25 = extractvalue { %"class.std::__1::unique_ptr.336"*, i64 } %23, 1
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %24, i64 %25
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %40, label %30

28:                                               ; preds = %30
  %29 = icmp eq %"class.std::__1::unique_ptr.336"* %39, %26
  br i1 %29, label %40, label %30

30:                                               ; preds = %3, %28
  %31 = phi %"class.std::__1::unique_ptr.336"* [ %39, %28 ], [ %24, %3 ]
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %31, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %32, align 8
  %34 = bitcast %"class.SkSL::Expression"* %33 to i1 (%"class.SkSL::Expression"*)***
  %35 = load i1 (%"class.SkSL::Expression"*)**, i1 (%"class.SkSL::Expression"*)*** %34, align 8
  %36 = getelementptr inbounds i1 (%"class.SkSL::Expression"*)*, i1 (%"class.SkSL::Expression"*)** %35, i64 4
  %37 = load i1 (%"class.SkSL::Expression"*)*, i1 (%"class.SkSL::Expression"*)** %36, align 8
  %38 = tail call zeroext i1 %37(%"class.SkSL::Expression"* %33) #14
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %31, i64 1
  br i1 %38, label %28, label %42

40:                                               ; preds = %28, %3
  %41 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator19writeConstantVectorERKNS_14AnyConstructorE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::AnyConstructor"* dereferenceable(32) %18)
  br label %274

42:                                               ; preds = %30
  %43 = bitcast %"class.std::__1::vector.382"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #14
  %44 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %11, i64 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %11, i64 0, i32 0, i32 1
  %46 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 0, i64 24, i1 false) #14
  %47 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i64 24
  %48 = bitcast i8* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = and i64 %49, 4294967294
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %74, label %52

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i64 16
  %54 = bitcast i8* %53 to %"class.std::__1::unique_ptr.336"**
  %55 = bitcast i32** %45 to i64*
  %56 = bitcast %"class.std::__1::vector.382"* %11 to i64*
  %57 = bitcast i32** %46 to i64*
  %58 = icmp eq %"class.SkSL::Type"* %17, null
  %59 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %17, i64 0, i32 6
  %60 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %17, i64 0, i32 3
  %61 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 1
  %62 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %63 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %64 = bitcast i32* %8 to i8*
  %65 = bitcast %"class.SkSL::OutputStream"* %63 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %66 = bitcast i32* %10 to i8*
  %67 = bitcast i32* %9 to i8*
  %68 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %69 = bitcast i32* %7 to i8*
  %70 = bitcast %"class.SkSL::OutputStream"* %2 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %71 = bitcast i32* %6 to i8*
  %72 = bitcast i32* %5 to i8*
  %73 = bitcast i32* %4 to i8*
  br label %83

74:                                               ; preds = %268, %42
  %75 = call i32 @_ZN4SkSL18SPIRVCodeGenerator14writeCompositeERKNSt3__16vectorIjNS1_9allocatorIjEEEERKNS_4TypeERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.std::__1::vector.382"* nonnull dereferenceable(24) %11, %"class.SkSL::Type"* dereferenceable(184) %13, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %76 = load i32*, i32** %44, align 8
  %77 = icmp eq i32* %76, null
  br i1 %77, label %82, label %78

78:                                               ; preds = %74
  %79 = ptrtoint i32* %76 to i64
  %80 = bitcast i32** %45 to i64*
  store i64 %79, i64* %80, align 8
  %81 = bitcast i32* %76 to i8*
  call void @_ZdlPv(i8* %81) #16
  br label %82

82:                                               ; preds = %74, %78
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #14
  br label %274

83:                                               ; preds = %52, %268
  %84 = phi i64 [ 0, %52 ], [ %269, %268 ]
  %85 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %54, align 8
  %86 = shl i64 %84, 32
  %87 = ashr exact i64 %86, 32
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %85, i64 %87, i32 0, i32 0, i32 0
  %89 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %88, align 8
  %90 = bitcast %"class.SkSL::Expression"* %89 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %91 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %90, align 8
  %92 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %91, i64 3
  %93 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %92, align 8
  %94 = call dereferenceable(184) %"class.SkSL::Type"* %93(%"class.SkSL::Expression"* %89) #14
  %95 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %94, i64 0, i32 3
  %96 = load i32, i32* %95, align 8
  %97 = icmp eq i32 %96, 11
  %98 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %54, align 8
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %98, i64 %87, i32 0, i32 0, i32 0
  %100 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %99, align 8
  %101 = call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %100, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  br i1 %97, label %102, label %217

102:                                              ; preds = %83
  %103 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %94, i64 0, i32 8
  %104 = load i32, i32* %103, align 8
  %105 = icmp sgt i32 %104, 0
  br i1 %105, label %106, label %268

106:                                              ; preds = %102, %213
  %107 = phi i32 [ %214, %213 ], [ 0, %102 ]
  br i1 %58, label %147, label %108

108:                                              ; preds = %106
  %109 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %59, align 8
  %110 = icmp eq %"class.SkSL::Type"* %109, null
  %111 = select i1 %110, %"class.SkSL::Type"* %17, %"class.SkSL::Type"* %109
  %112 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %111, i64 0, i32 4
  %113 = load i32, i32* %112, align 4
  %114 = icmp ult i32 %113, 3
  br i1 %114, label %118, label %115

115:                                              ; preds = %108
  %116 = load i32, i32* %60, align 8
  %117 = icmp eq i32 %116, 6
  br i1 %117, label %118, label %147

118:                                              ; preds = %115, %108
  br i1 %110, label %124, label %119

119:                                              ; preds = %118, %119
  %120 = phi %"class.SkSL::Type"* [ %122, %119 ], [ %109, %118 ]
  %121 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %120, i64 0, i32 6
  %122 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %121, align 8
  %123 = icmp eq %"class.SkSL::Type"* %122, null
  br i1 %123, label %124, label %119

124:                                              ; preds = %119, %118
  %125 = phi %"class.SkSL::Type"* [ %17, %118 ], [ %120, %119 ]
  %126 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %125, i64 0, i32 16
  %127 = load i8, i8* %126, align 8, !range !2
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %129, label %147

129:                                              ; preds = %124
  %130 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %61, align 8
  %131 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %130, i64 0, i32 1, i32 0, i32 0, i32 0
  %132 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %131, align 8
  %133 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %132, i64 0, i32 1, i32 3
  %134 = load i8, i8* %133, align 1, !range !2
  %135 = icmp eq i8 %134, 0
  br i1 %135, label %136, label %147

136:                                              ; preds = %129
  %137 = load i32, i32* %62, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %64) #14
  store i32 196679, i32* %8, align 4
  %138 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %65, align 8
  %139 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %138, i64 3
  %140 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %139, align 8
  call void %140(%"class.SkSL::OutputStream"* %63, i8* nonnull %64, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %64) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %66) #14
  store i32 %137, i32* %10, align 4
  %141 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %65, align 8
  %142 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %141, i64 3
  %143 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %142, align 8
  call void %143(%"class.SkSL::OutputStream"* %63, i8* nonnull %66, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %66) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %67) #14
  store i32 0, i32* %9, align 4
  %144 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %65, align 8
  %145 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %144, i64 3
  %146 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %145, align 8
  call void %146(%"class.SkSL::OutputStream"* %63, i8* nonnull %67, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %67) #14
  br label %147

147:                                              ; preds = %106, %115, %124, %129, %136
  %148 = load i32, i32* %62, align 8
  %149 = add i32 %148, 1
  store i32 %149, i32* %62, align 8
  %150 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %17, %"class.SkSL::MemoryLayout"* dereferenceable(4) %68) #14
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 81, i32 5, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %69) #14
  store i32 %150, i32* %7, align 4
  %151 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %70, align 8
  %152 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %151, i64 3
  %153 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %152, align 8
  call void %153(%"class.SkSL::OutputStream"* %2, i8* nonnull %69, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %69) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %71) #14
  store i32 %148, i32* %6, align 4
  %154 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %70, align 8
  %155 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %154, i64 3
  %156 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %155, align 8
  call void %156(%"class.SkSL::OutputStream"* %2, i8* nonnull %71, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %71) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %72) #14
  store i32 %101, i32* %5, align 4
  %157 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %70, align 8
  %158 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %157, i64 3
  %159 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %158, align 8
  call void %159(%"class.SkSL::OutputStream"* %2, i8* nonnull %72, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %72) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %73) #14
  store i32 %107, i32* %4, align 4
  %160 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %70, align 8
  %161 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %160, i64 3
  %162 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %161, align 8
  call void %162(%"class.SkSL::OutputStream"* %2, i8* nonnull %73, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %73) #14
  %163 = load i32*, i32** %45, align 8
  %164 = load i32*, i32** %46, align 8
  %165 = icmp eq i32* %163, %164
  %166 = ptrtoint i32* %164 to i64
  br i1 %165, label %170, label %167

167:                                              ; preds = %147
  store i32 %148, i32* %163, align 4
  %168 = getelementptr inbounds i32, i32* %163, i64 1
  %169 = ptrtoint i32* %168 to i64
  store i64 %169, i64* %55, align 8
  br label %213

170:                                              ; preds = %147
  %171 = ptrtoint i32* %163 to i64
  %172 = load i64, i64* %56, align 8
  %173 = sub i64 %171, %172
  %174 = ashr exact i64 %173, 2
  %175 = add nsw i64 %174, 1
  %176 = icmp ugt i64 %175, 4611686018427387903
  br i1 %176, label %177, label %179

177:                                              ; preds = %170
  %178 = bitcast %"class.std::__1::vector.382"* %11 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %178) #15
  unreachable

179:                                              ; preds = %170
  %180 = sub i64 %166, %172
  %181 = ashr exact i64 %180, 2
  %182 = icmp ult i64 %181, 2305843009213693951
  br i1 %182, label %183, label %191

183:                                              ; preds = %179
  %184 = ashr exact i64 %180, 1
  %185 = icmp ult i64 %184, %175
  %186 = select i1 %185, i64 %175, i64 %184
  %187 = icmp eq i64 %186, 0
  br i1 %187, label %196, label %188

188:                                              ; preds = %183
  %189 = icmp ugt i64 %186, 4611686018427387903
  br i1 %189, label %190, label %191

190:                                              ; preds = %188
  call void @abort() #15
  unreachable

191:                                              ; preds = %188, %179
  %192 = phi i64 [ %186, %188 ], [ 4611686018427387903, %179 ]
  %193 = shl i64 %192, 2
  %194 = call i8* @_Znwm(i64 %193) #16
  %195 = bitcast i8* %194 to i32*
  br label %196

196:                                              ; preds = %191, %183
  %197 = phi i64 [ %192, %191 ], [ 0, %183 ]
  %198 = phi i8* [ %194, %191 ], [ null, %183 ]
  %199 = phi i32* [ %195, %191 ], [ null, %183 ]
  %200 = getelementptr inbounds i32, i32* %199, i64 %174
  %201 = getelementptr inbounds i32, i32* %199, i64 %197
  %202 = ptrtoint i32* %201 to i64
  store i32 %148, i32* %200, align 4
  %203 = getelementptr inbounds i32, i32* %200, i64 1
  %204 = ptrtoint i32* %203 to i64
  %205 = ptrtoint i32* %199 to i64
  %206 = icmp sgt i64 %173, 0
  br i1 %206, label %207, label %209

207:                                              ; preds = %196
  %208 = inttoptr i64 %172 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %198, i8* align 4 %208, i64 %173, i1 false) #14
  br label %209

209:                                              ; preds = %207, %196
  store i64 %205, i64* %56, align 8
  store i64 %204, i64* %55, align 8
  store i64 %202, i64* %57, align 8
  %210 = icmp eq i64 %172, 0
  br i1 %210, label %213, label %211

211:                                              ; preds = %209
  %212 = inttoptr i64 %172 to i8*
  call void @_ZdlPv(i8* %212) #16
  br label %213

213:                                              ; preds = %167, %209, %211
  %214 = add nuw nsw i32 %107, 1
  %215 = load i32, i32* %103, align 8
  %216 = icmp slt i32 %214, %215
  br i1 %216, label %106, label %268

217:                                              ; preds = %83
  %218 = load i32*, i32** %45, align 8
  %219 = load i32*, i32** %46, align 8
  %220 = icmp ult i32* %218, %219
  %221 = ptrtoint i32* %219 to i64
  br i1 %220, label %222, label %225

222:                                              ; preds = %217
  store i32 %101, i32* %218, align 4
  %223 = getelementptr inbounds i32, i32* %218, i64 1
  %224 = ptrtoint i32* %223 to i64
  store i64 %224, i64* %55, align 8
  br label %268

225:                                              ; preds = %217
  %226 = ptrtoint i32* %218 to i64
  %227 = load i64, i64* %56, align 8
  %228 = sub i64 %226, %227
  %229 = ashr exact i64 %228, 2
  %230 = add nsw i64 %229, 1
  %231 = icmp ugt i64 %230, 4611686018427387903
  br i1 %231, label %232, label %234

232:                                              ; preds = %225
  %233 = bitcast %"class.std::__1::vector.382"* %11 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %233) #15
  unreachable

234:                                              ; preds = %225
  %235 = sub i64 %221, %227
  %236 = ashr exact i64 %235, 2
  %237 = icmp ult i64 %236, 2305843009213693951
  br i1 %237, label %238, label %246

238:                                              ; preds = %234
  %239 = ashr exact i64 %235, 1
  %240 = icmp ult i64 %239, %230
  %241 = select i1 %240, i64 %230, i64 %239
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %251, label %243

243:                                              ; preds = %238
  %244 = icmp ugt i64 %241, 4611686018427387903
  br i1 %244, label %245, label %246

245:                                              ; preds = %243
  call void @abort() #15
  unreachable

246:                                              ; preds = %243, %234
  %247 = phi i64 [ %241, %243 ], [ 4611686018427387903, %234 ]
  %248 = shl i64 %247, 2
  %249 = call i8* @_Znwm(i64 %248) #16
  %250 = bitcast i8* %249 to i32*
  br label %251

251:                                              ; preds = %246, %238
  %252 = phi i64 [ %247, %246 ], [ 0, %238 ]
  %253 = phi i8* [ %249, %246 ], [ null, %238 ]
  %254 = phi i32* [ %250, %246 ], [ null, %238 ]
  %255 = getelementptr inbounds i32, i32* %254, i64 %229
  %256 = getelementptr inbounds i32, i32* %254, i64 %252
  %257 = ptrtoint i32* %256 to i64
  store i32 %101, i32* %255, align 4
  %258 = getelementptr inbounds i32, i32* %255, i64 1
  %259 = ptrtoint i32* %258 to i64
  %260 = ptrtoint i32* %254 to i64
  %261 = icmp sgt i64 %228, 0
  br i1 %261, label %262, label %264

262:                                              ; preds = %251
  %263 = inttoptr i64 %227 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %253, i8* align 4 %263, i64 %228, i1 false) #14
  br label %264

264:                                              ; preds = %262, %251
  store i64 %260, i64* %56, align 8
  store i64 %259, i64* %55, align 8
  store i64 %257, i64* %57, align 8
  %265 = icmp eq i64 %227, 0
  br i1 %265, label %268, label %266

266:                                              ; preds = %264
  %267 = inttoptr i64 %227 to i8*
  call void @_ZdlPv(i8* %267) #16
  br label %268

268:                                              ; preds = %213, %102, %266, %264, %222
  %269 = add nuw nsw i64 %84, 1
  %270 = load i64, i64* %48, align 8
  %271 = lshr i64 %270, 1
  %272 = and i64 %271, 2147483647
  %273 = icmp ult i64 %269, %272
  br i1 %273, label %83, label %74

274:                                              ; preds = %82, %40
  %275 = phi i32 [ %41, %40 ], [ %75, %82 ]
  ret i32 %275
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL14AnyConstructor21isCompileTimeConstantEv(%"class.SkSL::AnyConstructor"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.SkSL::AnyConstructor"* %0 to { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)***
  %3 = load { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)**, { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)*** %2, align 8
  %4 = getelementptr inbounds { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)** %3, i64 12
  %5 = load { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)** %4, align 8
  %6 = tail call { %"class.std::__1::unique_ptr.336"*, i64 } %5(%"class.SkSL::AnyConstructor"* %0) #14
  %7 = extractvalue { %"class.std::__1::unique_ptr.336"*, i64 } %6, 0
  %8 = extractvalue { %"class.std::__1::unique_ptr.336"*, i64 } %6, 1
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %7, i64 %8
  %10 = icmp eq i64 %8, 0
  br i1 %10, label %23, label %13

11:                                               ; preds = %13
  %12 = icmp eq %"class.std::__1::unique_ptr.336"* %22, %9
  br i1 %12, label %23, label %13

13:                                               ; preds = %1, %11
  %14 = phi %"class.std::__1::unique_ptr.336"* [ %22, %11 ], [ %7, %1 ]
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %15, align 8
  %17 = bitcast %"class.SkSL::Expression"* %16 to i1 (%"class.SkSL::Expression"*)***
  %18 = load i1 (%"class.SkSL::Expression"*)**, i1 (%"class.SkSL::Expression"*)*** %17, align 8
  %19 = getelementptr inbounds i1 (%"class.SkSL::Expression"*)*, i1 (%"class.SkSL::Expression"*)** %18, i64 4
  %20 = load i1 (%"class.SkSL::Expression"*)*, i1 (%"class.SkSL::Expression"*)** %19, align 8
  %21 = tail call zeroext i1 %20(%"class.SkSL::Expression"* %16) #14
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %14, i64 1
  br i1 %21, label %11, label %23

23:                                               ; preds = %13, %11, %1
  %24 = phi i1 [ true, %1 ], [ true, %11 ], [ false, %13 ]
  ret i1 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator14writeCompositeERKNSt3__16vectorIjNS1_9allocatorIjEEEERKNS_4TypeERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.std::__1::vector.382"* nocapture readonly dereferenceable(24), %"class.SkSL::Type"* dereferenceable(184), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = icmp eq %"class.SkSL::Type"* %2, null
  br i1 %11, label %60, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 6
  %14 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %13, align 8
  %15 = icmp eq %"class.SkSL::Type"* %14, null
  %16 = select i1 %15, %"class.SkSL::Type"* %2, %"class.SkSL::Type"* %14
  %17 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %16, i64 0, i32 4
  %18 = load i32, i32* %17, align 4
  %19 = icmp ult i32 %18, 3
  br i1 %19, label %24, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 3
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 6
  br i1 %23, label %24, label %60

24:                                               ; preds = %20, %12
  br i1 %15, label %30, label %25

25:                                               ; preds = %24, %25
  %26 = phi %"class.SkSL::Type"* [ %28, %25 ], [ %14, %24 ]
  %27 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %26, i64 0, i32 6
  %28 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %27, align 8
  %29 = icmp eq %"class.SkSL::Type"* %28, null
  br i1 %29, label %30, label %25

30:                                               ; preds = %25, %24
  %31 = phi %"class.SkSL::Type"* [ %2, %24 ], [ %26, %25 ]
  %32 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %31, i64 0, i32 16
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %60

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 1
  %37 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %36, align 8
  %38 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %37, i64 0, i32 1, i32 0, i32 0, i32 0
  %39 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %38, align 8
  %40 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %39, i64 0, i32 1, i32 3
  %41 = load i8, i8* %40, align 1, !range !2
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %43, label %60

43:                                               ; preds = %35
  %44 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %45 = load i32, i32* %44, align 8
  %46 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %47 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %47) #14
  store i32 196679, i32* %8, align 4
  %48 = bitcast %"class.SkSL::OutputStream"* %46 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %49 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %49, i64 3
  %51 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %50, align 8
  call void %51(%"class.SkSL::OutputStream"* %46, i8* nonnull %47, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %47) #14
  %52 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %52) #14
  store i32 %45, i32* %10, align 4
  %53 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %48, align 8
  %54 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %53, i64 3
  %55 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %54, align 8
  call void %55(%"class.SkSL::OutputStream"* %46, i8* nonnull %52, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %52) #14
  %56 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %56) #14
  store i32 0, i32* %9, align 4
  %57 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %48, align 8
  %58 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %57, i64 3
  %59 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %58, align 8
  call void %59(%"class.SkSL::OutputStream"* %46, i8* nonnull %56, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %56) #14
  br label %60

60:                                               ; preds = %4, %20, %30, %35, %43
  %61 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %62 = load i32, i32* %61, align 8
  %63 = add i32 %62, 1
  store i32 %63, i32* %61, align 8
  %64 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %1, i64 0, i32 0, i32 1
  %65 = bitcast i32** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = bitcast %"class.std::__1::vector.382"* %1 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = sub i64 %66, %68
  %70 = lshr exact i64 %69, 2
  %71 = trunc i64 %70 to i32
  %72 = add nsw i32 %71, 3
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 80, i32 %72, %"class.SkSL::OutputStream"* dereferenceable(8) %3)
  %73 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %74 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %2, %"class.SkSL::MemoryLayout"* dereferenceable(4) %73) #14
  %75 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %75)
  store i32 %74, i32* %7, align 4
  %76 = bitcast %"class.SkSL::OutputStream"* %3 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %77 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %77, i64 3
  %79 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %78, align 8
  call void %79(%"class.SkSL::OutputStream"* %3, i8* nonnull %75, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %75)
  %80 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %80)
  store i32 %62, i32* %6, align 4
  %81 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %76, align 8
  %82 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %81, i64 3
  %83 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %82, align 8
  call void %83(%"class.SkSL::OutputStream"* %3, i8* nonnull %80, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %80)
  %84 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %1, i64 0, i32 0, i32 0
  %85 = load i32*, i32** %84, align 8
  %86 = load i32*, i32** %64, align 8
  %87 = icmp eq i32* %85, %86
  br i1 %87, label %90, label %88

88:                                               ; preds = %60
  %89 = bitcast i32* %5 to i8*
  br label %91

90:                                               ; preds = %91, %60
  ret i32 %62

91:                                               ; preds = %88, %91
  %92 = phi i32* [ %85, %88 ], [ %97, %91 ]
  %93 = load i32, i32* %92, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %89)
  store i32 %93, i32* %5, align 4
  %94 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %76, align 8
  %95 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %94, i64 3
  %96 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %95, align 8
  call void %96(%"class.SkSL::OutputStream"* %3, i8* nonnull %89, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %89)
  %97 = getelementptr inbounds i32, i32* %92, i64 1
  %98 = icmp eq i32* %97, %86
  br i1 %98, label %90, label %91
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18SPIRVCodeGenerator14getAccessChainERKNS_10ExpressionERNS_12OutputStreamE(%"class.std::__1::vector.382"* noalias sret, %"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::Expression"* dereferenceable(24), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::vector.382", align 8
  %6 = alloca %"class.std::__1::vector.382", align 8
  %7 = alloca %"class.SkSL::Literal", align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %0, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = bitcast %"class.std::__1::vector.382"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #14
  %12 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %2, i64 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  switch i32 %13, label %186 [
    i32 48, label %14
    i32 44, label %93
  ]

14:                                               ; preds = %4
  %15 = bitcast %"class.std::__1::vector.382"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #14
  %16 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %2, i64 1
  %17 = bitcast %"class.SkSL::Expression"* %16 to %"class.SkSL::Expression"**
  %18 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %17, align 8
  call void @_ZN4SkSL18SPIRVCodeGenerator14getAccessChainERKNS_10ExpressionERNS_12OutputStreamE(%"class.std::__1::vector.382"* nonnull sret %5, %"class.SkSL::SPIRVCodeGenerator"* %1, %"class.SkSL::Expression"* dereferenceable(24) %18, %"class.SkSL::OutputStream"* dereferenceable(8) %3)
  %19 = load i32*, i32** %8, align 8
  %20 = icmp eq i32* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %14
  %22 = bitcast i32** %9 to i64*
  br label %27

23:                                               ; preds = %14
  %24 = ptrtoint i32* %19 to i64
  %25 = bitcast i32** %9 to i64*
  store i64 %24, i64* %25, align 8
  %26 = bitcast i32* %19 to i8*
  call void @_ZdlPv(i8* %26) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #14
  br label %27

27:                                               ; preds = %21, %23
  %28 = phi i64* [ %22, %21 ], [ %25, %23 ]
  %29 = bitcast %"class.std::__1::vector.382"* %5 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.std::__1::vector.382"* %0 to i64*
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %5, i64 0, i32 0, i32 1
  %33 = bitcast i32** %32 to i64*
  %34 = load i64, i64* %33, align 8
  store i64 %34, i64* %28, align 8
  %35 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %36 = bitcast i32** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast i32** %10 to i64*
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %2, i64 1, i32 0, i32 1
  %40 = bitcast i32* %39 to %"class.SkSL::Expression"**
  %41 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %40, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #14
  %42 = call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %1, %"class.SkSL::Expression"* dereferenceable(24) %41, %"class.SkSL::OutputStream"* dereferenceable(8) %3)
  %43 = load i32*, i32** %9, align 8
  %44 = load i32*, i32** %10, align 8
  %45 = icmp ult i32* %43, %44
  %46 = ptrtoint i32* %44 to i64
  br i1 %45, label %47, label %50

47:                                               ; preds = %27
  store i32 %42, i32* %43, align 4
  %48 = getelementptr inbounds i32, i32* %43, i64 1
  %49 = ptrtoint i32* %48 to i64
  store i64 %49, i64* %28, align 8
  br label %254

50:                                               ; preds = %27
  %51 = ptrtoint i32* %43 to i64
  %52 = load i64, i64* %31, align 8
  %53 = sub i64 %51, %52
  %54 = ashr exact i64 %53, 2
  %55 = add nsw i64 %54, 1
  %56 = icmp ugt i64 %55, 4611686018427387903
  br i1 %56, label %57, label %59

57:                                               ; preds = %50
  %58 = bitcast %"class.std::__1::vector.382"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %58) #15
  unreachable

59:                                               ; preds = %50
  %60 = sub i64 %46, %52
  %61 = ashr exact i64 %60, 2
  %62 = icmp ult i64 %61, 2305843009213693951
  br i1 %62, label %63, label %71

63:                                               ; preds = %59
  %64 = ashr exact i64 %60, 1
  %65 = icmp ult i64 %64, %55
  %66 = select i1 %65, i64 %55, i64 %64
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %76, label %68

68:                                               ; preds = %63
  %69 = icmp ugt i64 %66, 4611686018427387903
  br i1 %69, label %70, label %71

70:                                               ; preds = %68
  call void @abort() #15
  unreachable

71:                                               ; preds = %68, %59
  %72 = phi i64 [ %66, %68 ], [ 4611686018427387903, %59 ]
  %73 = shl i64 %72, 2
  %74 = call i8* @_Znwm(i64 %73) #16
  %75 = bitcast i8* %74 to i32*
  br label %76

76:                                               ; preds = %71, %63
  %77 = phi i64 [ %72, %71 ], [ 0, %63 ]
  %78 = phi i8* [ %74, %71 ], [ null, %63 ]
  %79 = phi i32* [ %75, %71 ], [ null, %63 ]
  %80 = getelementptr inbounds i32, i32* %79, i64 %54
  %81 = getelementptr inbounds i32, i32* %79, i64 %77
  %82 = ptrtoint i32* %81 to i64
  store i32 %42, i32* %80, align 4
  %83 = getelementptr inbounds i32, i32* %80, i64 1
  %84 = ptrtoint i32* %83 to i64
  %85 = ptrtoint i32* %79 to i64
  %86 = icmp sgt i64 %53, 0
  br i1 %86, label %87, label %89

87:                                               ; preds = %76
  %88 = inttoptr i64 %52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %78, i8* align 4 %88, i64 %53, i1 false) #14
  br label %89

89:                                               ; preds = %87, %76
  store i64 %85, i64* %31, align 8
  store i64 %84, i64* %28, align 8
  store i64 %82, i64* %38, align 8
  %90 = icmp eq i64 %52, 0
  br i1 %90, label %254, label %91

91:                                               ; preds = %89
  %92 = inttoptr i64 %52 to i8*
  call void @_ZdlPv(i8* %92) #16
  br label %254

93:                                               ; preds = %4
  %94 = bitcast %"class.std::__1::vector.382"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %94) #14
  %95 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %2, i64 1, i32 0, i32 1
  %96 = bitcast i32* %95 to %"class.SkSL::Expression"**
  %97 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %96, align 8
  call void @_ZN4SkSL18SPIRVCodeGenerator14getAccessChainERKNS_10ExpressionERNS_12OutputStreamE(%"class.std::__1::vector.382"* nonnull sret %6, %"class.SkSL::SPIRVCodeGenerator"* %1, %"class.SkSL::Expression"* dereferenceable(24) %97, %"class.SkSL::OutputStream"* dereferenceable(8) %3)
  %98 = load i32*, i32** %8, align 8
  %99 = icmp eq i32* %98, null
  br i1 %99, label %100, label %102

100:                                              ; preds = %93
  %101 = bitcast i32** %9 to i64*
  br label %106

102:                                              ; preds = %93
  %103 = ptrtoint i32* %98 to i64
  %104 = bitcast i32** %9 to i64*
  store i64 %103, i64* %104, align 8
  %105 = bitcast i32* %98 to i8*
  call void @_ZdlPv(i8* %105) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #14
  br label %106

106:                                              ; preds = %100, %102
  %107 = phi i64* [ %101, %100 ], [ %104, %102 ]
  %108 = bitcast %"class.std::__1::vector.382"* %6 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.std::__1::vector.382"* %0 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %6, i64 0, i32 0, i32 1
  %112 = bitcast i32** %111 to i64*
  %113 = load i64, i64* %112, align 8
  store i64 %113, i64* %107, align 8
  %114 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %115 = bitcast i32** %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = bitcast i32** %10 to i64*
  store i64 %116, i64* %117, align 8
  %118 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %2, i64 1
  %119 = bitcast %"class.SkSL::Expression"* %118 to i32*
  %120 = load i32, i32* %119, align 8
  %121 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %1, i64 0, i32 1
  %122 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %121, align 8
  %123 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %122, i64 0, i32 0, i32 8, i32 0, i32 0, i32 0
  %124 = bitcast %"class.SkSL::Type"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = sext i32 %120 to i64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %94) #14
  %127 = bitcast %"class.SkSL::Literal"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %127) #14
  %128 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %7, i64 0, i32 0, i32 0, i32 0
  %129 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %7, i64 0, i32 0, i32 0, i32 1
  %130 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %7, i64 0, i32 0, i32 0, i32 2
  %131 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %7, i64 0, i32 0, i32 1
  %132 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %7, i64 0, i32 1
  store i32 -1, i32* %129, align 8
  store i32 43, i32* %130, align 4
  %133 = bitcast %"class.SkSL::Type"** %131 to i64*
  store i64 %125, i64* %133, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIlEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %128, align 8
  store i64 %126, i64* %132, align 8
  %134 = call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeIntLiteralERKNS_7LiteralIlEE(%"class.SkSL::SPIRVCodeGenerator"* %1, %"class.SkSL::Literal"* nonnull dereferenceable(32) %7)
  %135 = load i32*, i32** %9, align 8
  %136 = load i32*, i32** %10, align 8
  %137 = icmp ult i32* %135, %136
  %138 = ptrtoint i32* %136 to i64
  br i1 %137, label %139, label %142

139:                                              ; preds = %106
  store i32 %134, i32* %135, align 4
  %140 = getelementptr inbounds i32, i32* %135, i64 1
  %141 = ptrtoint i32* %140 to i64
  store i64 %141, i64* %107, align 8
  br label %185

142:                                              ; preds = %106
  %143 = ptrtoint i32* %135 to i64
  %144 = load i64, i64* %110, align 8
  %145 = sub i64 %143, %144
  %146 = ashr exact i64 %145, 2
  %147 = add nsw i64 %146, 1
  %148 = icmp ugt i64 %147, 4611686018427387903
  br i1 %148, label %149, label %151

149:                                              ; preds = %142
  %150 = bitcast %"class.std::__1::vector.382"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %150) #15
  unreachable

151:                                              ; preds = %142
  %152 = sub i64 %138, %144
  %153 = ashr exact i64 %152, 2
  %154 = icmp ult i64 %153, 2305843009213693951
  br i1 %154, label %155, label %163

155:                                              ; preds = %151
  %156 = ashr exact i64 %152, 1
  %157 = icmp ult i64 %156, %147
  %158 = select i1 %157, i64 %147, i64 %156
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %168, label %160

160:                                              ; preds = %155
  %161 = icmp ugt i64 %158, 4611686018427387903
  br i1 %161, label %162, label %163

162:                                              ; preds = %160
  call void @abort() #15
  unreachable

163:                                              ; preds = %160, %151
  %164 = phi i64 [ %158, %160 ], [ 4611686018427387903, %151 ]
  %165 = shl i64 %164, 2
  %166 = call i8* @_Znwm(i64 %165) #16
  %167 = bitcast i8* %166 to i32*
  br label %168

168:                                              ; preds = %163, %155
  %169 = phi i64 [ %164, %163 ], [ 0, %155 ]
  %170 = phi i8* [ %166, %163 ], [ null, %155 ]
  %171 = phi i32* [ %167, %163 ], [ null, %155 ]
  %172 = getelementptr inbounds i32, i32* %171, i64 %146
  %173 = getelementptr inbounds i32, i32* %171, i64 %169
  %174 = ptrtoint i32* %173 to i64
  store i32 %134, i32* %172, align 4
  %175 = getelementptr inbounds i32, i32* %172, i64 1
  %176 = ptrtoint i32* %175 to i64
  %177 = ptrtoint i32* %171 to i64
  %178 = icmp sgt i64 %145, 0
  br i1 %178, label %179, label %181

179:                                              ; preds = %168
  %180 = inttoptr i64 %144 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %170, i8* align 4 %180, i64 %145, i1 false) #14
  br label %181

181:                                              ; preds = %179, %168
  store i64 %177, i64* %110, align 8
  store i64 %176, i64* %107, align 8
  store i64 %174, i64* %117, align 8
  %182 = icmp eq i64 %144, 0
  br i1 %182, label %185, label %183

183:                                              ; preds = %181
  %184 = inttoptr i64 %144 to i8*
  call void @_ZdlPv(i8* %184) #16
  br label %185

185:                                              ; preds = %139, %181, %183
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %127) #14
  br label %254

186:                                              ; preds = %4
  %187 = tail call %"class.SkSL::SPIRVCodeGenerator::LValue"* @_ZN4SkSL18SPIRVCodeGenerator9getLValueERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %1, %"class.SkSL::Expression"* dereferenceable(24) %2, %"class.SkSL::OutputStream"* dereferenceable(8) %3)
  %188 = bitcast %"class.SkSL::SPIRVCodeGenerator::LValue"* %187 to i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*)***
  %189 = load i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*)**, i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*** %188, align 8
  %190 = getelementptr inbounds i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*, i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*)** %189, i64 2
  %191 = load i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*, i32 (%"class.SkSL::SPIRVCodeGenerator::LValue"*)** %190, align 8
  %192 = tail call i32 %191(%"class.SkSL::SPIRVCodeGenerator::LValue"* %187) #14
  %193 = icmp eq %"class.SkSL::SPIRVCodeGenerator::LValue"* %187, null
  br i1 %193, label %199, label %194

194:                                              ; preds = %186
  %195 = bitcast %"class.SkSL::SPIRVCodeGenerator::LValue"* %187 to void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)***
  %196 = load void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)**, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*** %195, align 8
  %197 = getelementptr inbounds void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)** %196, i64 1
  %198 = load void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)*, void (%"class.SkSL::SPIRVCodeGenerator::LValue"*)** %197, align 8
  tail call void %198(%"class.SkSL::SPIRVCodeGenerator::LValue"* nonnull %187) #14
  br label %199

199:                                              ; preds = %186, %194
  %200 = load i32*, i32** %9, align 8
  %201 = load i32*, i32** %10, align 8
  %202 = icmp eq i32* %200, %201
  %203 = ptrtoint i32* %201 to i64
  br i1 %202, label %208, label %204

204:                                              ; preds = %199
  store i32 %192, i32* %200, align 4
  %205 = getelementptr inbounds i32, i32* %200, i64 1
  %206 = ptrtoint i32* %205 to i64
  %207 = bitcast i32** %9 to i64*
  store i64 %206, i64* %207, align 8
  br label %254

208:                                              ; preds = %199
  %209 = ptrtoint i32* %200 to i64
  %210 = bitcast i32** %9 to i64*
  %211 = bitcast %"class.std::__1::vector.382"* %0 to i64*
  %212 = load i64, i64* %211, align 8
  %213 = sub i64 %209, %212
  %214 = ashr exact i64 %213, 2
  %215 = add nsw i64 %214, 1
  %216 = icmp ugt i64 %215, 4611686018427387903
  br i1 %216, label %217, label %219

217:                                              ; preds = %208
  %218 = bitcast %"class.std::__1::vector.382"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %218) #15
  unreachable

219:                                              ; preds = %208
  %220 = bitcast i32** %10 to i64*
  %221 = sub i64 %203, %212
  %222 = ashr exact i64 %221, 2
  %223 = icmp ult i64 %222, 2305843009213693951
  br i1 %223, label %224, label %232

224:                                              ; preds = %219
  %225 = ashr exact i64 %221, 1
  %226 = icmp ult i64 %225, %215
  %227 = select i1 %226, i64 %215, i64 %225
  %228 = icmp eq i64 %227, 0
  br i1 %228, label %237, label %229

229:                                              ; preds = %224
  %230 = icmp ugt i64 %227, 4611686018427387903
  br i1 %230, label %231, label %232

231:                                              ; preds = %229
  tail call void @abort() #15
  unreachable

232:                                              ; preds = %229, %219
  %233 = phi i64 [ %227, %229 ], [ 4611686018427387903, %219 ]
  %234 = shl i64 %233, 2
  %235 = tail call i8* @_Znwm(i64 %234) #16
  %236 = bitcast i8* %235 to i32*
  br label %237

237:                                              ; preds = %232, %224
  %238 = phi i64 [ %233, %232 ], [ 0, %224 ]
  %239 = phi i8* [ %235, %232 ], [ null, %224 ]
  %240 = phi i32* [ %236, %232 ], [ null, %224 ]
  %241 = getelementptr inbounds i32, i32* %240, i64 %214
  %242 = getelementptr inbounds i32, i32* %240, i64 %238
  %243 = ptrtoint i32* %242 to i64
  store i32 %192, i32* %241, align 4
  %244 = getelementptr inbounds i32, i32* %241, i64 1
  %245 = ptrtoint i32* %244 to i64
  %246 = ptrtoint i32* %240 to i64
  %247 = icmp sgt i64 %213, 0
  br i1 %247, label %248, label %250

248:                                              ; preds = %237
  %249 = inttoptr i64 %212 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %239, i8* align 4 %249, i64 %213, i1 false) #14
  br label %250

250:                                              ; preds = %248, %237
  store i64 %246, i64* %211, align 8
  store i64 %245, i64* %210, align 8
  store i64 %243, i64* %220, align 8
  %251 = icmp eq i64 %212, 0
  br i1 %251, label %254, label %252

252:                                              ; preds = %250
  %253 = inttoptr i64 %212 to i8*
  tail call void @_ZdlPv(i8* %253) #16
  br label %254

254:                                              ; preds = %252, %250, %204, %91, %89, %47, %185
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK4SkSL18SPIRVCodeGenerator21findUniformFieldIndexERKNS_8VariableE(%"class.SkSL::SPIRVCodeGenerator"* nocapture readonly, %"class.SkSL::Variable"* dereferenceable(64)) local_unnamed_addr #3 align 2 {
  %3 = ptrtoint %"class.SkSL::Variable"* %1 to i64
  %4 = lshr i64 %3, 32
  %5 = shl i64 %3, 3
  %6 = and i64 %5, 4294967288
  %7 = add nuw nsw i64 %6, 8
  %8 = xor i64 %7, %4
  %9 = mul i64 %8, -7070675565921424023
  %10 = lshr i64 %9, 47
  %11 = xor i64 %9, %4
  %12 = xor i64 %11, %10
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %14, %13
  %16 = mul i64 %15, -7070675565921424023
  %17 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 38, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %72, label %20

20:                                               ; preds = %2
  %21 = tail call i64 @llvm.ctpop.i64(i64 %18) #14, !range !12
  %22 = icmp ugt i64 %21, 1
  br i1 %22, label %26, label %23

23:                                               ; preds = %20
  %24 = add i64 %18, -1
  %25 = and i64 %24, %16
  br label %30

26:                                               ; preds = %20
  %27 = icmp ult i64 %16, %18
  br i1 %27, label %30, label %28

28:                                               ; preds = %26
  %29 = urem i64 %16, %18
  br label %30

30:                                               ; preds = %28, %26, %23
  %31 = phi i64 [ %25, %23 ], [ %29, %28 ], [ %16, %26 ]
  %32 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 38, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.194"**, %"struct.std::__1::__hash_node_base.194"*** %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.194"*, %"struct.std::__1::__hash_node_base.194"** %33, i64 %31
  %35 = load %"struct.std::__1::__hash_node_base.194"*, %"struct.std::__1::__hash_node_base.194"** %34, align 8
  %36 = icmp eq %"struct.std::__1::__hash_node_base.194"* %35, null
  br i1 %36, label %72, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.194", %"struct.std::__1::__hash_node_base.194"* %35, i64 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base.194"*, %"struct.std::__1::__hash_node_base.194"** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base.194"* %39, null
  br i1 %40, label %72, label %41

41:                                               ; preds = %37
  %42 = add i64 %18, -1
  br label %43

43:                                               ; preds = %64, %41
  %44 = phi %"struct.std::__1::__hash_node_base.194"* [ %39, %41 ], [ %66, %64 ]
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base.194", %"struct.std::__1::__hash_node_base.194"* %44, i64 1
  %46 = bitcast %"struct.std::__1::__hash_node_base.194"* %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = icmp eq i64 %16, %47
  br i1 %48, label %59, label %49

49:                                               ; preds = %43
  br i1 %22, label %52, label %50

50:                                               ; preds = %49
  %51 = and i64 %47, %42
  br label %56

52:                                               ; preds = %49
  %53 = icmp ult i64 %47, %18
  br i1 %53, label %56, label %54

54:                                               ; preds = %52
  %55 = urem i64 %47, %18
  br label %56

56:                                               ; preds = %54, %52, %50
  %57 = phi i64 [ %51, %50 ], [ %55, %54 ], [ %47, %52 ]
  %58 = icmp eq i64 %57, %31
  br i1 %58, label %64, label %72

59:                                               ; preds = %43
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base.194", %"struct.std::__1::__hash_node_base.194"* %44, i64 2
  %61 = bitcast %"struct.std::__1::__hash_node_base.194"* %60 to %"class.SkSL::Variable"**
  %62 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %61, align 8
  %63 = icmp eq %"class.SkSL::Variable"* %62, %1
  br i1 %63, label %68, label %64

64:                                               ; preds = %59, %56
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.194", %"struct.std::__1::__hash_node_base.194"* %44, i64 0, i32 0
  %66 = load %"struct.std::__1::__hash_node_base.194"*, %"struct.std::__1::__hash_node_base.194"** %65, align 8
  %67 = icmp eq %"struct.std::__1::__hash_node_base.194"* %66, null
  br i1 %67, label %72, label %43

68:                                               ; preds = %59
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.194", %"struct.std::__1::__hash_node_base.194"* %44, i64 3
  %70 = bitcast %"struct.std::__1::__hash_node_base.194"* %69 to i32*
  %71 = load i32, i32* %70, align 8
  br label %72

72:                                               ; preds = %64, %56, %37, %2, %30, %68
  %73 = phi i32 [ %71, %68 ], [ -1, %30 ], [ -1, %2 ], [ -1, %37 ], [ -1, %56 ], [ -1, %64 ]
  ret i32 %73
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK4SkSL18SPIRVCodeGenerator23memoryLayoutForVariableERKNS_8VariableE(%"class.SkSL::SPIRVCodeGenerator"* nocapture readonly, %"class.SkSL::Variable"* nocapture readonly dereferenceable(64)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %1, i64 0, i32 2
  %4 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %3, align 8
  %5 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %4, i64 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 2
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2, i32 0
  %11 = load i32, i32* %10, align 8
  br label %12

12:                                               ; preds = %2, %9
  %13 = phi i32 [ %11, %9 ], [ 1, %2 ]
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator19writeInterfaceBlockERKNS_14InterfaceBlockEb(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::InterfaceBlock"* nocapture readonly dereferenceable(96), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca [15 x i8], align 8
  %6 = alloca [40 x i8], align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca %"class.std::__1::tuple.713", align 8
  %18 = alloca %"class.std::__1::tuple.633", align 1
  %19 = alloca %"class.SkSL::MemoryLayout", align 4
  %20 = alloca %"class.SkSL::String", align 8
  %21 = alloca %"class.SkSL::String", align 8
  %22 = alloca %"class.SkSL::String", align 8
  %23 = alloca %"class.std::__1::vector.19", align 8
  %24 = alloca [40 x i8], align 4
  %25 = alloca %"class.SkSL::String", align 8
  %26 = alloca %"class.SkSL::String", align 8
  %27 = alloca %"struct.SkSL::Layout", align 8
  %28 = alloca %"class.SkSL::Variable"*, align 8
  %29 = getelementptr inbounds [40 x i8], [40 x i8]* %6, i64 0, i64 0
  %30 = getelementptr inbounds [40 x i8], [40 x i8]* %24, i64 0, i64 0
  %31 = bitcast %"class.SkSL::MemoryLayout"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %31) #14
  %32 = getelementptr inbounds %"class.SkSL::MemoryLayout", %"class.SkSL::MemoryLayout"* %19, i64 0, i32 0
  store i32 -1431655766, i32* %32, align 4
  %33 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %1, i64 0, i32 1
  %34 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %33, align 8
  %35 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %34, i64 0, i32 2
  %36 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %35, align 8
  %37 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %36, i64 0, i32 0, i32 0
  %38 = load i32, i32* %37, align 8
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %3
  %42 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2, i32 0
  %43 = load i32, i32* %42, align 8
  br label %44

44:                                               ; preds = %3, %41
  %45 = phi i32 [ %43, %41 ], [ 1, %3 ]
  store i32 %45, i32* %32, align 4
  %46 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %47 = load i32, i32* %46, align 8
  %48 = add i32 %47, 1
  store i32 %48, i32* %46, align 8
  %49 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %33, align 8
  %50 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %49, i64 0, i32 0, i32 2
  %51 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %50, align 8
  %52 = tail call i64 @_ZN4SkSL12MemoryLayout17LayoutIsSupportedERKNS_4TypeE(%"class.SkSL::Type"* dereferenceable(184) %51)
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %54, label %118

54:                                               ; preds = %44
  %55 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 2
  %56 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %55, align 8
  %57 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %51, i64 0, i32 0, i32 0, i32 1
  %58 = load i32, i32* %57, align 8
  %59 = bitcast %"class.SkSL::String"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #14
  %60 = bitcast %"class.SkSL::String"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #14
  %61 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %51, i64 0, i32 0, i32 1, i32 0
  %62 = load i8*, i8** %61, align 8
  %63 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %51, i64 0, i32 0, i32 1, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = icmp ugt i64 %64, -17
  br i1 %65, label %66, label %68

66:                                               ; preds = %54
  %67 = bitcast %"class.SkSL::String"* %22 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %67) #15
  unreachable

68:                                               ; preds = %54
  %69 = icmp ult i64 %64, 23
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = add nuw i64 %64, 16
  %72 = and i64 %71, -16
  %73 = tail call i8* @_Znwm(i64 %72) #16
  %74 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %73, i8** %74, align 8
  %75 = or i64 %72, -9223372036854775808
  %76 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %64, i64* %77, align 8
  br label %83

78:                                               ; preds = %68
  %79 = trunc i64 %64 to i8
  %80 = bitcast %"class.SkSL::String"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  store i8 %79, i8* %81, align 1
  %82 = icmp eq i64 %64, 0
  br i1 %82, label %85, label %83

83:                                               ; preds = %78, %70
  %84 = phi i8* [ %73, %70 ], [ %60, %78 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %84, i8* align 1 %62, i64 %64, i1 false) #14
  br label %85

85:                                               ; preds = %78, %83
  %86 = phi i8* [ %60, %78 ], [ %84, %83 ]
  %87 = getelementptr inbounds i8, i8* %86, i64 %64
  store i8 0, i8* %87, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %21, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %22) #14
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %20, %"class.SkSL::String"* nonnull %21, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0)) #14
  %88 = bitcast %"class.SkSL::ErrorReporter"* %56 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %89 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %88, align 8
  %90 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %89, i64 2
  %91 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %90, align 8
  call void %91(%"class.SkSL::ErrorReporter"* %56, i32 %58, %"class.SkSL::String"* nonnull %20) #14
  %92 = bitcast %"class.SkSL::String"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  %94 = load i8, i8* %93, align 1
  %95 = icmp slt i8 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %85
  %97 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i8*, i8** %97, align 8
  call void @_ZdlPv(i8* %98) #16
  br label %99

99:                                               ; preds = %85, %96
  %100 = bitcast %"class.SkSL::String"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %104, label %107

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  call void @_ZdlPv(i8* %106) #16
  br label %107

107:                                              ; preds = %99, %104
  %108 = bitcast %"class.SkSL::String"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %109 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %108, i64 0, i32 1, i32 0
  %110 = load i8, i8* %109, align 1
  %111 = icmp slt i8 %110, 0
  br i1 %111, label %112, label %115

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load i8*, i8** %113, align 8
  call void @_ZdlPv(i8* %114) #16
  br label %115

115:                                              ; preds = %112, %107
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #14
  %116 = load i32, i32* %46, align 8
  %117 = add i32 %116, 1
  store i32 %117, i32* %46, align 8
  br label %602

118:                                              ; preds = %44
  %119 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %33, align 8
  %120 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %119, i64 0, i32 2
  %121 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %120, align 8
  %122 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %121, i64 0, i32 1
  %123 = load i32, i32* %122, align 8
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %147

126:                                              ; preds = %118
  %127 = and i32 %123, 4
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %147

129:                                              ; preds = %126
  %130 = and i32 %123, 8
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %147, label %132

132:                                              ; preds = %129
  %133 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %121, i64 0, i32 0, i32 0
  %134 = load i32, i32* %133, align 8
  %135 = and i32 %134, 2
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %147

137:                                              ; preds = %132
  %138 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %119, i64 0, i32 0, i32 2
  %139 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %138, align 8
  %140 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %139, i64 0, i32 3
  %141 = load i32, i32* %140, align 8
  %142 = and i32 %141, -2
  %143 = icmp eq i32 %142, 6
  br i1 %143, label %147, label %144

144:                                              ; preds = %137
  %145 = icmp eq i32 %141, 10
  %146 = select i1 %145, i32 0, i32 2
  br label %147

147:                                              ; preds = %118, %126, %129, %132, %137, %144
  %148 = phi i32 [ %146, %144 ], [ 1, %118 ], [ 3, %126 ], [ 9, %132 ], [ 7, %129 ], [ 0, %137 ]
  %149 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 1
  %150 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %149, align 8
  %151 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %150, i64 0, i32 5, i32 0
  %152 = load i8, i8* %151, align 8, !range !2
  %153 = icmp eq i8 %152, 0
  %154 = xor i1 %2, true
  %155 = or i1 %153, %154
  br i1 %155, label %392, label %156

156:                                              ; preds = %147
  %157 = bitcast %"class.std::__1::vector.19"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %157) #14
  %158 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %23, i64 0, i32 0, i32 0
  %159 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %23, i64 0, i32 0, i32 1
  %160 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %23, i64 0, i32 0, i32 2, i32 0, i32 0
  %161 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %51, i64 0, i32 10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %157, i8 0, i64 24, i1 false) #14
  %162 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %51, i64 0, i32 10, i32 0, i32 1
  %163 = bitcast %"struct.SkSL::Type::Field"** %162 to i64*
  %164 = load i64, i64* %163, align 8
  %165 = bitcast %"class.std::__1::vector.19"* %161 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = sub i64 %164, %166
  %168 = sdiv exact i64 %167, 104
  %169 = icmp eq i64 %167, 0
  br i1 %169, label %170, label %172

170:                                              ; preds = %156
  %171 = bitcast %"struct.SkSL::Type::Field"** %159 to i64*
  br label %199

172:                                              ; preds = %156
  %173 = icmp ugt i64 %168, 177372539170284150
  br i1 %173, label %174, label %176

174:                                              ; preds = %172
  %175 = bitcast %"class.std::__1::vector.19"* %23 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %175) #15
  unreachable

176:                                              ; preds = %172
  %177 = tail call i8* @_Znwm(i64 %167) #16
  %178 = bitcast i8* %177 to %"struct.SkSL::Type::Field"*
  %179 = bitcast %"struct.SkSL::Type::Field"** %159 to i8**
  store i8* %177, i8** %179, align 8
  %180 = bitcast %"class.std::__1::vector.19"* %23 to i8**
  store i8* %177, i8** %180, align 8
  %181 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %178, i64 %168
  store %"struct.SkSL::Type::Field"* %181, %"struct.SkSL::Type::Field"** %160, align 8
  %182 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %161, i64 0, i32 0, i32 0
  %183 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %182, align 8
  %184 = load i64, i64* %163, align 8
  %185 = bitcast %"struct.SkSL::Type::Field"** %159 to i64*
  %186 = ptrtoint i8* %177 to i64
  %187 = ptrtoint %"struct.SkSL::Type::Field"* %183 to i64
  %188 = sub i64 %184, %187
  %189 = icmp sgt i64 %188, 0
  %190 = ptrtoint %"struct.SkSL::Type::Field"* %181 to i64
  br i1 %189, label %191, label %196

191:                                              ; preds = %176
  %192 = udiv exact i64 %188, 104
  %193 = bitcast %"struct.SkSL::Type::Field"* %183 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %177, i8* align 8 %193, i64 %188, i1 false) #14
  %194 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %178, i64 %192
  %195 = ptrtoint %"struct.SkSL::Type::Field"* %194 to i64
  br label %196

196:                                              ; preds = %191, %176
  %197 = phi i64 [ %195, %191 ], [ %186, %176 ]
  store i64 %197, i64* %185, align 8
  %198 = inttoptr i64 %197 to %"struct.SkSL::Type::Field"*
  br label %199

199:                                              ; preds = %170, %196
  %200 = phi i64* [ %171, %170 ], [ %185, %196 ]
  %201 = phi i8* [ null, %170 ], [ %177, %196 ]
  %202 = phi %"struct.SkSL::Type::Field"* [ null, %170 ], [ %178, %196 ]
  %203 = phi i64 [ 0, %170 ], [ %190, %196 ]
  %204 = phi %"struct.SkSL::Type::Field"* [ null, %170 ], [ %181, %196 ]
  %205 = phi %"struct.SkSL::Type::Field"* [ null, %170 ], [ %198, %196 ]
  %206 = phi i64 [ 0, %170 ], [ %186, %196 ]
  %207 = phi i64 [ 0, %170 ], [ %197, %196 ]
  %208 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 29
  store i32 %47, i32* %208, align 8
  %209 = bitcast %"class.std::__1::vector.19"* %23 to i64*
  %210 = sub i64 %207, %206
  %211 = sdiv exact i64 %210, 104
  %212 = trunc i64 %211 to i32
  %213 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 30
  store i32 %212, i32* %213, align 4
  %214 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 31
  store i32 %148, i32* %214, align 8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %30)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %30, i8 -1, i64 40, i1 false)
  %215 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 1
  %216 = bitcast %"class.SkSL::Context"** %215 to i64**
  %217 = load i64*, i64** %216, align 8
  %218 = load i64, i64* %217, align 8
  %219 = icmp ult %"struct.SkSL::Type::Field"* %205, %204
  br i1 %219, label %220, label %234

220:                                              ; preds = %199
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %29)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %29, i8* nonnull align 4 %30, i64 40, i1 false)
  %221 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %205, i64 0, i32 0, i32 0, i32 0
  store i32 0, i32* %221, align 8
  %222 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %205, i64 0, i32 0, i32 0, i32 1
  %223 = bitcast i32* %222 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %223, i8* nonnull align 4 %29, i64 40, i1 false)
  %224 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %205, i64 0, i32 0, i32 0, i32 12, i32 0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19, i64 0, i64 0), i8** %224, align 8
  %225 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %205, i64 0, i32 0, i32 0, i32 12, i32 1
  store i64 0, i64* %225, align 8
  %226 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %205, i64 0, i32 0, i32 0, i32 13
  store i32 0, i32* %226, align 8
  %227 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %205, i64 0, i32 0, i32 1
  store i32 0, i32* %227, align 8
  %228 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %205, i64 0, i32 1, i32 0
  %229 = bitcast i8** %228 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint ([13 x i8]* @.str.20 to i64), i64 12>, <2 x i64>* %229, align 8
  %230 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %205, i64 0, i32 2
  %231 = bitcast %"class.SkSL::Type"** %230 to i64*
  store i64 %218, i64* %231, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %29)
  %232 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %205, i64 1
  %233 = ptrtoint %"struct.SkSL::Type::Field"* %232 to i64
  store i64 %233, i64* %200, align 8
  br label %284

234:                                              ; preds = %199
  %235 = add nsw i64 %211, 1
  %236 = icmp ugt i64 %235, 177372539170284150
  br i1 %236, label %237, label %239

237:                                              ; preds = %234
  %238 = bitcast %"class.std::__1::vector.19"* %23 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %238) #15
  unreachable

239:                                              ; preds = %234
  %240 = bitcast %"struct.SkSL::Type::Field"** %160 to i64*
  %241 = sub i64 %203, %206
  %242 = sdiv exact i64 %241, 104
  %243 = icmp ult i64 %242, 88686269585142075
  br i1 %243, label %244, label %249

244:                                              ; preds = %239
  %245 = shl nsw i64 %242, 1
  %246 = icmp ult i64 %245, %235
  %247 = select i1 %246, i64 %235, i64 %245
  %248 = icmp eq i64 %247, 0
  br i1 %248, label %254, label %249

249:                                              ; preds = %244, %239
  %250 = phi i64 [ %247, %244 ], [ 177372539170284150, %239 ]
  %251 = mul i64 %250, 104
  %252 = tail call i8* @_Znwm(i64 %251) #16
  %253 = bitcast i8* %252 to %"struct.SkSL::Type::Field"*
  br label %254

254:                                              ; preds = %249, %244
  %255 = phi i64 [ %250, %249 ], [ 0, %244 ]
  %256 = phi %"struct.SkSL::Type::Field"* [ %253, %249 ], [ null, %244 ]
  %257 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %256, i64 %211
  %258 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %256, i64 %255
  %259 = ptrtoint %"struct.SkSL::Type::Field"* %258 to i64
  %260 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %257, i64 0, i32 0, i32 0, i32 0
  store i32 0, i32* %260, align 8
  %261 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %256, i64 %211, i32 0, i32 0, i32 1
  %262 = bitcast i32* %261 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %262, i8* nonnull align 4 %30, i64 40, i1 false)
  %263 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %256, i64 %211, i32 0, i32 0, i32 12, i32 0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19, i64 0, i64 0), i8** %263, align 8
  %264 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %256, i64 %211, i32 0, i32 0, i32 12, i32 1
  store i64 0, i64* %264, align 8
  %265 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %256, i64 %211, i32 0, i32 0, i32 13
  store i32 0, i32* %265, align 8
  %266 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %256, i64 %211, i32 0, i32 1
  store i32 0, i32* %266, align 8
  %267 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %256, i64 %211, i32 1, i32 0
  %268 = bitcast i8** %267 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint ([13 x i8]* @.str.20 to i64), i64 12>, <2 x i64>* %268, align 8
  %269 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %256, i64 %211, i32 2
  %270 = bitcast %"class.SkSL::Type"** %269 to i64*
  store i64 %218, i64* %270, align 8
  %271 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %257, i64 1
  %272 = ptrtoint %"struct.SkSL::Type::Field"* %271 to i64
  %273 = ptrtoint %"struct.SkSL::Type::Field"* %202 to i64
  %274 = sub i64 %207, %273
  %275 = sdiv exact i64 %274, -104
  %276 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %257, i64 %275
  %277 = ptrtoint %"struct.SkSL::Type::Field"* %276 to i64
  %278 = icmp sgt i64 %274, 0
  br i1 %278, label %279, label %281

279:                                              ; preds = %254
  %280 = bitcast %"struct.SkSL::Type::Field"* %276 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %280, i8* align 8 %201, i64 %274, i1 false) #14
  br label %281

281:                                              ; preds = %279, %254
  store i64 %277, i64* %209, align 8
  store i64 %272, i64* %200, align 8
  store i64 %259, i64* %240, align 8
  %282 = icmp eq %"struct.SkSL::Type::Field"* %202, null
  br i1 %282, label %284, label %283

283:                                              ; preds = %281
  tail call void @_ZdlPv(i8* %201) #16
  br label %284

284:                                              ; preds = %283, %281, %220
  %285 = phi i64 [ %272, %283 ], [ %272, %281 ], [ %233, %220 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %30)
  %286 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %51, i64 0, i32 0, i32 0, i32 1
  %287 = load i32, i32* %286, align 8
  %288 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %51, i64 0, i32 0, i32 1, i32 0
  %289 = load i8*, i8** %288, align 8
  %290 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %51, i64 0, i32 0, i32 1, i32 1
  %291 = load i64, i64* %290, align 8
  %292 = icmp ugt i64 %291, -17
  br i1 %292, label %293, label %295

293:                                              ; preds = %284
  %294 = bitcast %"class.SkSL::String"* %25 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %294) #15
  unreachable

295:                                              ; preds = %284
  %296 = icmp ult i64 %291, 23
  br i1 %296, label %306, label %297

297:                                              ; preds = %295
  %298 = add nuw i64 %291, 16
  %299 = and i64 %298, -16
  %300 = tail call i8* @_Znwm(i64 %299) #16
  %301 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %300, i8** %301, align 8
  %302 = or i64 %299, -9223372036854775808
  %303 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %302, i64* %303, align 8
  %304 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %291, i64* %304, align 8
  %305 = bitcast %"class.SkSL::String"* %25 to i8*
  br label %312

306:                                              ; preds = %295
  %307 = trunc i64 %291 to i8
  %308 = bitcast %"class.SkSL::String"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %309 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %308, i64 0, i32 1, i32 0
  store i8 %307, i8* %309, align 1
  %310 = bitcast %"class.SkSL::String"* %25 to i8*
  %311 = icmp eq i64 %291, 0
  br i1 %311, label %315, label %312

312:                                              ; preds = %306, %297
  %313 = phi i8* [ %310, %306 ], [ %305, %297 ]
  %314 = phi i8* [ %310, %306 ], [ %300, %297 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %314, i8* align 1 %289, i64 %291, i1 false) #14
  br label %315

315:                                              ; preds = %306, %312
  %316 = phi i8* [ %310, %306 ], [ %313, %312 ]
  %317 = phi i8* [ %310, %306 ], [ %314, %312 ]
  %318 = getelementptr inbounds i8, i8* %317, i64 %291
  store i8 0, i8* %318, align 1
  %319 = load i64, i64* %209, align 8
  %320 = bitcast %"struct.SkSL::Type::Field"** %160 to i64*
  %321 = load i64, i64* %320, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %157, i8 0, i64 24, i1 false) #14
  %322 = getelementptr inbounds [15 x i8], [15 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %322)
  %323 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 184) #14
  %324 = bitcast i8* %323 to %"class.SkSL::Type"*
  %325 = bitcast %"class.SkSL::String"* %25 to i64*
  %326 = load i64, i64* %325, align 8
  %327 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %328 = bitcast i64* %327 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %322, i8* align 8 %328, i64 15, i1 false) #14
  %329 = getelementptr inbounds i8, i8* %316, i64 23
  %330 = load i8, i8* %329, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %316, i8 0, i64 24, i1 false) #14
  %331 = bitcast i8* %323 to i32 (...)***
  %332 = getelementptr inbounds i8, i8* %323, i64 8
  %333 = bitcast i8* %332 to i32*
  store i32 %287, i32* %333, align 8
  %334 = getelementptr inbounds i8, i8* %323, i64 12
  %335 = bitcast i8* %334 to i32*
  store i32 13, i32* %335, align 4
  %336 = getelementptr inbounds i8, i8* %323, i64 16
  %337 = bitcast i8* %336 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19, i64 0, i64 0), i8** %337, align 8
  %338 = getelementptr inbounds i8, i8* %323, i64 24
  %339 = bitcast i8* %338 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %338, i8 0, i64 16, i1 false) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %331, align 8
  %340 = getelementptr inbounds i8, i8* %323, i64 40
  %341 = bitcast i8* %340 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.41, i64 0, i64 0), i8** %341, align 8
  %342 = getelementptr inbounds i8, i8* %323, i64 48
  %343 = bitcast i8* %342 to i64*
  store i64 %326, i64* %343, align 8
  %344 = getelementptr inbounds i8, i8* %323, i64 56
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %344, i8* nonnull align 8 %322, i64 15, i1 false) #14
  %345 = getelementptr inbounds i8, i8* %323, i64 71
  store i8 %330, i8* %345, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %322, i8 0, i64 15, i1 false)
  %346 = getelementptr inbounds i8, i8* %323, i64 72
  %347 = bitcast i8* %346 to i32*
  store i32 9, i32* %347, align 8
  %348 = getelementptr inbounds i8, i8* %323, i64 76
  %349 = bitcast i8* %348 to i32*
  store i32 4, i32* %349, align 4
  %350 = getelementptr inbounds i8, i8* %323, i64 80
  %351 = bitcast i8* %350 to i32*
  store i32 -1, i32* %351, align 8
  %352 = getelementptr inbounds i8, i8* %323, i64 88
  %353 = getelementptr inbounds i8, i8* %323, i64 120
  %354 = bitcast i8* %353 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %352, i8 0, i64 32, i1 false) #14
  store i32 -1, i32* %354, align 8
  %355 = getelementptr inbounds i8, i8* %323, i64 124
  %356 = bitcast i8* %355 to i32*
  store i32 -1, i32* %356, align 4
  %357 = getelementptr inbounds i8, i8* %323, i64 128
  %358 = bitcast i8* %357 to i64*
  store i64 %319, i64* %358, align 8
  %359 = getelementptr inbounds i8, i8* %323, i64 136
  %360 = bitcast i8* %359 to i64*
  store i64 %285, i64* %360, align 8
  %361 = getelementptr inbounds i8, i8* %323, i64 144
  %362 = bitcast i8* %361 to i64*
  store i64 %321, i64* %362, align 8
  %363 = getelementptr inbounds i8, i8* %323, i64 152
  %364 = getelementptr inbounds i8, i8* %323, i64 168
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %363, i8 0, i64 9, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %364, i8 0, i64 16, i1 false) #14
  %365 = icmp slt i8 %330, 0
  br i1 %365, label %366, label %370

366:                                              ; preds = %315
  %367 = inttoptr i64 %326 to i8*
  %368 = bitcast i8* %344 to i64*
  %369 = load i64, i64* %368, align 8
  br label %372

370:                                              ; preds = %315
  %371 = zext i8 %330 to i64
  br label %372

372:                                              ; preds = %370, %366
  %373 = phi i8* [ %367, %366 ], [ %342, %370 ]
  %374 = phi i64 [ %369, %366 ], [ %371, %370 ]
  store i8* %373, i8** %337, align 8
  store i64 %374, i64* %339, align 8
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %322)
  %375 = bitcast %"class.SkSL::String"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %376 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %375, i64 0, i32 1, i32 0
  %377 = load i8, i8* %376, align 1
  %378 = icmp slt i8 %377, 0
  br i1 %378, label %379, label %382

379:                                              ; preds = %372
  %380 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %381 = load i8*, i8** %380, align 8
  tail call void @_ZdlPv(i8* %381) #16
  br label %382

382:                                              ; preds = %372, %379
  %383 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %158, align 8
  %384 = icmp eq %"struct.SkSL::Type::Field"* %383, null
  br i1 %384, label %388, label %385

385:                                              ; preds = %382
  %386 = ptrtoint %"struct.SkSL::Type::Field"* %383 to i64
  store i64 %386, i64* %200, align 8
  %387 = bitcast %"struct.SkSL::Type::Field"* %383 to i8*
  tail call void @_ZdlPv(i8* %387) #16
  br label %388

388:                                              ; preds = %382, %385
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %157) #14
  %389 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %33, align 8
  %390 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %389, i64 0, i32 2
  %391 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %390, align 8
  br label %392

392:                                              ; preds = %147, %388
  %393 = phi %"struct.SkSL::Modifiers"* [ %121, %147 ], [ %391, %388 ]
  %394 = phi %"class.SkSL::Type"* [ null, %147 ], [ %324, %388 ]
  %395 = phi %"class.SkSL::Type"* [ %51, %147 ], [ %324, %388 ]
  %396 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %393, i64 0, i32 0, i32 6
  %397 = load i32, i32* %396, align 8
  %398 = icmp eq i32 %397, 10002
  br i1 %398, label %399, label %514

399:                                              ; preds = %392
  %400 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %149, align 8
  %401 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %400, i64 0, i32 6
  %402 = bitcast %"class.std::__1::vector.62"* %401 to i64*
  %403 = load i64, i64* %402, align 8, !noalias !26
  %404 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %400, i64 0, i32 6, i32 0, i32 1
  %405 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %400, i64 0, i32 7
  %406 = bitcast %"class.std::__1::vector.75"* %405 to i64*
  %407 = load i64, i64* %406, align 8, !noalias !26
  %408 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %400, i64 0, i32 7, i32 0, i32 1
  %409 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %408, align 8, !noalias !26
  %410 = load %"class.std::__1::unique_ptr.64"*, %"class.std::__1::unique_ptr.64"** %404, align 8, !noalias !29
  %411 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 34
  %412 = inttoptr i64 %403 to %"class.std::__1::unique_ptr.64"*
  %413 = icmp eq %"class.std::__1::unique_ptr.64"* %410, %412
  %414 = inttoptr i64 %407 to %"class.SkSL::ProgramElement"**
  %415 = icmp eq %"class.SkSL::ProgramElement"** %409, %414
  %416 = and i1 %413, %415
  br i1 %416, label %417, label %479

417:                                              ; preds = %502, %399
  %418 = bitcast %"class.SkSL::String"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %419 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %418, i64 0, i32 1, i32 0
  store i8 5, i8* %419, align 1
  %420 = bitcast %"class.SkSL::String"* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %420, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i64 0, i64 0), i64 5, i1 false) #14
  %421 = getelementptr inbounds i8, i8* %420, i64 5
  store i8 0, i8* %421, align 1
  %422 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %33, align 8
  %423 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %422, i64 0, i32 0, i32 2
  %424 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %423, align 8
  %425 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %424, i64 0, i32 6
  %426 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %425, align 8
  %427 = icmp eq %"class.SkSL::Type"* %426, null
  %428 = select i1 %427, %"class.SkSL::Type"* %424, %"class.SkSL::Type"* %426
  %429 = load i32, i32* %411, align 8
  %430 = getelementptr inbounds [15 x i8], [15 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %430)
  %431 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 184) #14
  %432 = bitcast i8* %431 to %"class.SkSL::Type"*
  %433 = bitcast %"class.SkSL::String"* %26 to i64*
  %434 = load i64, i64* %433, align 8
  %435 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %436 = bitcast i64* %435 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %430, i8* align 8 %436, i64 15, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %420, i8 0, i64 24, i1 false) #14
  %437 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %428, i64 0, i32 1
  %438 = bitcast i8** %437 to i64*
  %439 = load i64, i64* %438, align 8
  %440 = bitcast i8* %431 to i32 (...)***
  %441 = getelementptr inbounds i8, i8* %431, i64 8
  %442 = bitcast i8* %441 to i32*
  store i32 -1, i32* %442, align 8
  %443 = getelementptr inbounds i8, i8* %431, i64 12
  %444 = bitcast i8* %443 to i32*
  store i32 13, i32* %444, align 4
  %445 = getelementptr inbounds i8, i8* %431, i64 16
  %446 = bitcast i8* %445 to i8**
  %447 = getelementptr inbounds i8, i8* %431, i64 24
  %448 = bitcast i8* %447 to i64*
  %449 = getelementptr inbounds i8, i8* %431, i64 32
  %450 = bitcast i8* %449 to i64*
  store i64 0, i64* %450, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %440, align 8
  %451 = getelementptr inbounds i8, i8* %431, i64 40
  %452 = bitcast i8* %451 to i64*
  store i64 %439, i64* %452, align 8
  %453 = getelementptr inbounds i8, i8* %431, i64 48
  %454 = bitcast i8* %453 to i64*
  store i64 %434, i64* %454, align 8
  %455 = getelementptr inbounds i8, i8* %431, i64 56
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %455, i8* nonnull align 8 %430, i64 15, i1 false) #14
  %456 = getelementptr inbounds i8, i8* %431, i64 71
  store i8 5, i8* %456, align 1
  %457 = getelementptr inbounds i8, i8* %431, i64 72
  %458 = bitcast i8* %457 to i32*
  store i32 0, i32* %458, align 8
  %459 = getelementptr inbounds i8, i8* %431, i64 76
  %460 = bitcast i8* %459 to i32*
  store i32 4, i32* %460, align 4
  %461 = getelementptr inbounds i8, i8* %431, i64 80
  %462 = bitcast i8* %461 to i32*
  store i32 -1, i32* %462, align 8
  %463 = getelementptr inbounds i8, i8* %431, i64 88
  %464 = bitcast i8* %463 to %"class.SkSL::Type"**
  store %"class.SkSL::Type"* %428, %"class.SkSL::Type"** %464, align 8
  %465 = getelementptr inbounds i8, i8* %431, i64 96
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %465, i8 0, i64 24, i1 false) #14
  %466 = getelementptr inbounds i8, i8* %431, i64 120
  %467 = bitcast i8* %466 to i32*
  store i32 %429, i32* %467, align 8
  %468 = getelementptr inbounds i8, i8* %431, i64 124
  %469 = bitcast i8* %468 to i32*
  store i32 1, i32* %469, align 4
  %470 = getelementptr inbounds i8, i8* %431, i64 128
  %471 = getelementptr inbounds i8, i8* %431, i64 168
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %470, i8 0, i64 33, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %471, i8 0, i64 16, i1 false) #14
  store i8* %453, i8** %446, align 8
  store i64 5, i64* %448, align 8
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %430)
  %472 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %432, %"class.SkSL::MemoryLayout"* nonnull dereferenceable(4) %19)
  %473 = icmp eq i8* %431, null
  br i1 %473, label %516, label %474

474:                                              ; preds = %417
  %475 = bitcast i8* %431 to void (%"class.SkSL::Type"*)***
  %476 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %475, align 8
  %477 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %476, i64 1
  %478 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %477, align 8
  call void %478(%"class.SkSL::Type"* nonnull %432) #14
  br label %516

479:                                              ; preds = %399, %502
  %480 = phi i1 [ %512, %502 ], [ %415, %399 ]
  %481 = phi %"class.SkSL::ProgramElement"** [ %511, %502 ], [ %414, %399 ]
  %482 = phi %"class.std::__1::unique_ptr.64"* [ %509, %502 ], [ %412, %399 ]
  %483 = phi i64 [ %508, %502 ], [ %403, %399 ]
  %484 = phi i64 [ %507, %502 ], [ %407, %399 ]
  %485 = getelementptr inbounds %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64"* %482, i64 0, i32 0, i32 0, i32 0
  %486 = select i1 %480, %"class.SkSL::ProgramElement"** %485, %"class.SkSL::ProgramElement"** %481
  %487 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %486, align 8
  %488 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %487, i64 0, i32 0, i32 2
  %489 = load i32, i32* %488, align 4
  %490 = icmp eq i32 %489, 6
  br i1 %490, label %491, label %502

491:                                              ; preds = %479
  %492 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %487, i64 1
  %493 = bitcast %"class.SkSL::ProgramElement"* %492 to %"struct.SkSL::Modifiers"**
  %494 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %493, align 8
  %495 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %494, i64 0, i32 0, i32 8
  %496 = load i32, i32* %495, align 8
  switch i32 %496, label %502 [
    i32 0, label %497
    i32 1, label %498
    i32 3, label %499
    i32 4, label %500
    i32 6, label %501
  ]

497:                                              ; preds = %491
  store i32 1, i32* %411, align 4
  br label %502

498:                                              ; preds = %491
  store i32 2, i32* %411, align 4
  br label %502

499:                                              ; preds = %491
  store i32 4, i32* %411, align 4
  br label %502

500:                                              ; preds = %491
  store i32 3, i32* %411, align 4
  br label %502

501:                                              ; preds = %491
  store i32 6, i32* %411, align 4
  br label %502

502:                                              ; preds = %501, %500, %499, %498, %497, %491, %479
  %503 = getelementptr inbounds %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64"* %482, i64 1
  %504 = ptrtoint %"class.std::__1::unique_ptr.64"* %503 to i64
  %505 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %481, i64 1
  %506 = ptrtoint %"class.SkSL::ProgramElement"** %505 to i64
  %507 = select i1 %480, i64 %484, i64 %506
  %508 = select i1 %480, i64 %504, i64 %483
  %509 = inttoptr i64 %508 to %"class.std::__1::unique_ptr.64"*
  %510 = icmp eq %"class.std::__1::unique_ptr.64"* %410, %509
  %511 = inttoptr i64 %507 to %"class.SkSL::ProgramElement"**
  %512 = icmp eq %"class.SkSL::ProgramElement"** %409, %511
  %513 = and i1 %510, %512
  br i1 %513, label %417, label %479

514:                                              ; preds = %392
  %515 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %395, %"class.SkSL::MemoryLayout"* nonnull dereferenceable(4) %19)
  br label %516

516:                                              ; preds = %474, %417, %514
  %517 = phi i32 [ %515, %514 ], [ %472, %417 ], [ %472, %474 ]
  %518 = load i32, i32* %396, align 8
  %519 = icmp eq i32 %518, -1
  br i1 %519, label %520, label %535

520:                                              ; preds = %516
  %521 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %522 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %522) #14
  store i32 196679, i32* %4, align 4
  %523 = bitcast %"class.SkSL::OutputStream"* %521 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %524 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %523, align 8
  %525 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %524, i64 3
  %526 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %525, align 8
  call void %526(%"class.SkSL::OutputStream"* %521, i8* nonnull %522, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %522) #14
  %527 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %527) #14
  store i32 %517, i32* %8, align 4
  %528 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %523, align 8
  %529 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %528, i64 3
  %530 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %529, align 8
  call void %530(%"class.SkSL::OutputStream"* %521, i8* nonnull %527, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %527) #14
  %531 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %531) #14
  store i32 2, i32* %7, align 4
  %532 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %523, align 8
  %533 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %532, i64 3
  %534 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %533, align 8
  call void %534(%"class.SkSL::OutputStream"* %521, i8* nonnull %531, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %531) #14
  br label %535

535:                                              ; preds = %520, %516
  %536 = load i32, i32* %46, align 8
  %537 = add i32 %536, 1
  store i32 %537, i32* %46, align 8
  %538 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 15, i32 0
  %539 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %539) #14
  store i32 262176, i32* %9, align 4
  %540 = bitcast %"class.SkSL::OutputStream"* %538 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %541 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %540, align 8
  %542 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %541, i64 3
  %543 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %542, align 8
  call void %543(%"class.SkSL::OutputStream"* %538, i8* nonnull %539, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %539) #14
  %544 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %544) #14
  store i32 %536, i32* %12, align 4
  %545 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %540, align 8
  %546 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %545, i64 3
  %547 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %546, align 8
  call void %547(%"class.SkSL::OutputStream"* %538, i8* nonnull %544, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %544) #14
  %548 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %548) #14
  store i32 %148, i32* %11, align 4
  %549 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %540, align 8
  %550 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %549, i64 3
  %551 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %550, align 8
  call void %551(%"class.SkSL::OutputStream"* %538, i8* nonnull %548, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %548) #14
  %552 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %552) #14
  store i32 %517, i32* %10, align 4
  %553 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %540, align 8
  %554 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %553, i64 3
  %555 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %554, align 8
  call void %555(%"class.SkSL::OutputStream"* %538, i8* nonnull %552, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %552) #14
  %556 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %556) #14
  store i32 262203, i32* %13, align 4
  %557 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %540, align 8
  %558 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %557, i64 3
  %559 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %558, align 8
  call void %559(%"class.SkSL::OutputStream"* %538, i8* nonnull %556, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %556) #14
  %560 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %560) #14
  store i32 %536, i32* %16, align 4
  %561 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %540, align 8
  %562 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %561, i64 3
  %563 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %562, align 8
  call void %563(%"class.SkSL::OutputStream"* %538, i8* nonnull %560, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %560) #14
  %564 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %564) #14
  store i32 %47, i32* %15, align 4
  %565 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %540, align 8
  %566 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %565, i64 3
  %567 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %566, align 8
  call void %567(%"class.SkSL::OutputStream"* %538, i8* nonnull %564, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %564) #14
  %568 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %568) #14
  store i32 %148, i32* %14, align 4
  %569 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %540, align 8
  %570 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %569, i64 3
  %571 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %570, align 8
  call void %571(%"class.SkSL::OutputStream"* %538, i8* nonnull %568, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %568) #14
  %572 = bitcast %"struct.SkSL::Layout"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %572) #14
  %573 = bitcast %"struct.SkSL::Modifiers"* %393 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %572, i8* align 8 %573, i64 72, i1 false)
  %574 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %393, i64 0, i32 1
  %575 = load i32, i32* %574, align 8
  %576 = and i32 %575, 8
  %577 = icmp eq i32 %576, 0
  br i1 %577, label %583, label %578

578:                                              ; preds = %535
  %579 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %27, i64 0, i32 5
  %580 = load i32, i32* %579, align 4
  %581 = icmp eq i32 %580, -1
  br i1 %581, label %582, label %583

582:                                              ; preds = %578
  store i32 0, i32* %579, align 4
  br label %583

583:                                              ; preds = %578, %582, %535
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeLayoutERKNS_6LayoutEj(%"class.SkSL::SPIRVCodeGenerator"* %0, %"struct.SkSL::Layout"* nonnull dereferenceable(72) %27, i32 %47)
  %584 = bitcast %"class.SkSL::Variable"** %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %584) #14
  %585 = bitcast %"class.SkSL::Variable"** %33 to i64*
  %586 = load i64, i64* %585, align 8
  %587 = bitcast %"class.SkSL::Variable"** %28 to i64*
  store i64 %586, i64* %587, align 8
  %588 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 9, i32 0
  %589 = bitcast %"class.std::__1::tuple.713"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %589) #14
  %590 = getelementptr inbounds %"class.std::__1::tuple.713", %"class.std::__1::tuple.713"* %17, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::Variable"** %28, %"class.SkSL::Variable"*** %590, align 8
  %591 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %18, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %591) #14
  %592 = call { %"struct.std::__1::__hash_node_base.166"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.162"* %588, %"class.SkSL::Variable"** nonnull dereferenceable(8) %28, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.713"* nonnull dereferenceable(8) %17, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %18) #14
  %593 = extractvalue { %"struct.std::__1::__hash_node_base.166"*, i8 } %592, 0
  %594 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %593, i64 3
  %595 = bitcast %"struct.std::__1::__hash_node_base.166"* %594 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %591) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %589) #14
  store i32 %47, i32* %595, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %584) #14
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %572) #14
  %596 = icmp eq %"class.SkSL::Type"* %394, null
  br i1 %596, label %602, label %597

597:                                              ; preds = %583
  %598 = bitcast %"class.SkSL::Type"* %394 to void (%"class.SkSL::Type"*)***
  %599 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %598, align 8
  %600 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %599, i64 1
  %601 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %600, align 8
  call void %601(%"class.SkSL::Type"* nonnull %394) #14
  br label %602

602:                                              ; preds = %115, %583, %597
  %603 = phi i32 [ %116, %115 ], [ %47, %583 ], [ %47, %597 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %31) #14
  ret i32 %603
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL14InterfaceBlockD2Ev(%"class.SkSL::InterfaceBlock"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL14InterfaceBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %0, i64 0, i32 5, i32 1
  %4 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %3, align 8
  %5 = icmp eq %"class.std::__1::__shared_weak_count"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %4, i64 0, i32 0, i32 1
  %8 = atomicrmw add i64* %7, i64 -1 acq_rel
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %4, i64 0, i32 0
  %12 = bitcast %"class.std::__1::__shared_weak_count"* %4 to void (%"class.std::__1::__shared_count"*)***
  %13 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %13, i64 2
  %15 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %14, align 8
  tail call void %15(%"class.std::__1::__shared_count"* %11) #14
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %4) #14
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %0, i64 0, i32 3, i32 0
  %18 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  tail call void @_ZdlPv(i8* %24) #16
  br label %25

25:                                               ; preds = %16, %22
  %26 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %0, i64 0, i32 2, i32 0
  %27 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  tail call void @_ZdlPv(i8* %33) #16
  br label %34

34:                                               ; preds = %25, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator20writeBinaryOperationERKNS_4TypeES3_jj6SpvOp_S4_S4_S4_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::Type"* dereferenceable(184), %"class.SkSL::Type"* nocapture readonly dereferenceable(184), i32, i32, i32, i32, i32, i32, %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca %"class.SkSL::String", align 8
  %31 = alloca %"class.SkSL::String", align 8
  %32 = icmp eq %"class.SkSL::Type"* %1, null
  br i1 %32, label %81, label %33

33:                                               ; preds = %10
  %34 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 6
  %35 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %34, align 8
  %36 = icmp eq %"class.SkSL::Type"* %35, null
  %37 = select i1 %36, %"class.SkSL::Type"* %1, %"class.SkSL::Type"* %35
  %38 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %37, i64 0, i32 4
  %39 = load i32, i32* %38, align 4
  %40 = icmp ult i32 %39, 3
  br i1 %40, label %45, label %41

41:                                               ; preds = %33
  %42 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 3
  %43 = load i32, i32* %42, align 8
  %44 = icmp eq i32 %43, 6
  br i1 %44, label %45, label %81

45:                                               ; preds = %41, %33
  br i1 %36, label %51, label %46

46:                                               ; preds = %45, %46
  %47 = phi %"class.SkSL::Type"* [ %49, %46 ], [ %35, %45 ]
  %48 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %47, i64 0, i32 6
  %49 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %48, align 8
  %50 = icmp eq %"class.SkSL::Type"* %49, null
  br i1 %50, label %51, label %46

51:                                               ; preds = %46, %45
  %52 = phi %"class.SkSL::Type"* [ %1, %45 ], [ %47, %46 ]
  %53 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %52, i64 0, i32 16
  %54 = load i8, i8* %53, align 8, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %81

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 1
  %58 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %57, align 8
  %59 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %58, i64 0, i32 1, i32 0, i32 0, i32 0
  %60 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %59, align 8
  %61 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %60, i64 0, i32 1, i32 3
  %62 = load i8, i8* %61, align 1, !range !2
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %64, label %81

64:                                               ; preds = %56
  %65 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %66 = load i32, i32* %65, align 8
  %67 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %68 = bitcast i32* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %68) #14
  store i32 196679, i32* %27, align 4
  %69 = bitcast %"class.SkSL::OutputStream"* %67 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %70 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %70, i64 3
  %72 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %71, align 8
  call void %72(%"class.SkSL::OutputStream"* %67, i8* nonnull %68, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %68) #14
  %73 = bitcast i32* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %73) #14
  store i32 %66, i32* %29, align 4
  %74 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %69, align 8
  %75 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %74, i64 3
  %76 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %75, align 8
  call void %76(%"class.SkSL::OutputStream"* %67, i8* nonnull %73, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %73) #14
  %77 = bitcast i32* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %77) #14
  store i32 0, i32* %28, align 4
  %78 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %69, align 8
  %79 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %78, i64 3
  %80 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %79, align 8
  call void %80(%"class.SkSL::OutputStream"* %67, i8* nonnull %77, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %77) #14
  br label %81

81:                                               ; preds = %10, %41, %51, %56, %64
  %82 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %83 = load i32, i32* %82, align 8
  %84 = add i32 %83, 1
  store i32 %84, i32* %82, align 8
  %85 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 3
  %86 = load i32, i32* %85, align 8
  switch i32 %86, label %184 [
    i32 8, label %87
    i32 11, label %87
    i32 4, label %87
    i32 1, label %118
  ]

87:                                               ; preds = %81, %81, %81
  %88 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 6
  %89 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %88, align 8
  %90 = icmp eq %"class.SkSL::Type"* %89, null
  %91 = select i1 %90, %"class.SkSL::Type"* %2, %"class.SkSL::Type"* %89
  %92 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %91, i64 0, i32 4
  %93 = load i32, i32* %92, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %115

95:                                               ; preds = %87
  %96 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %97 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %1, %"class.SkSL::MemoryLayout"* dereferenceable(4) %96) #14
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 %5, i32 5, %"class.SkSL::OutputStream"* dereferenceable(8) %9) #14
  %98 = bitcast i32* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %98) #14
  store i32 %97, i32* %26, align 4
  %99 = bitcast %"class.SkSL::OutputStream"* %9 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %100 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %99, align 8
  %101 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %100, i64 3
  %102 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %101, align 8
  call void %102(%"class.SkSL::OutputStream"* %9, i8* nonnull %98, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %98) #14
  %103 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %103) #14
  store i32 %83, i32* %25, align 4
  %104 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %99, align 8
  %105 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %104, i64 3
  %106 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %105, align 8
  call void %106(%"class.SkSL::OutputStream"* %9, i8* nonnull %103, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %103) #14
  %107 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %107) #14
  store i32 %3, i32* %24, align 4
  %108 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %99, align 8
  %109 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %108, i64 3
  %110 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %109, align 8
  call void %110(%"class.SkSL::OutputStream"* %9, i8* nonnull %107, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %107) #14
  %111 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %111) #14
  store i32 %4, i32* %23, align 4
  %112 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %99, align 8
  %113 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %112, i64 3
  %114 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %113, align 8
  call void %114(%"class.SkSL::OutputStream"* %9, i8* nonnull %111, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %111) #14
  br label %241

115:                                              ; preds = %87
  switch i32 %86, label %184 [
    i32 11, label %116
    i32 8, label %116
  ]

116:                                              ; preds = %115, %115
  %117 = icmp eq i32 %93, 1
  br i1 %117, label %118, label %138

118:                                              ; preds = %81, %116
  %119 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %120 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %1, %"class.SkSL::MemoryLayout"* dereferenceable(4) %119) #14
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 %6, i32 5, %"class.SkSL::OutputStream"* dereferenceable(8) %9) #14
  %121 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %121) #14
  store i32 %120, i32* %22, align 4
  %122 = bitcast %"class.SkSL::OutputStream"* %9 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %123 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %122, align 8
  %124 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %123, i64 3
  %125 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %124, align 8
  call void %125(%"class.SkSL::OutputStream"* %9, i8* nonnull %121, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %121) #14
  %126 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %126) #14
  store i32 %83, i32* %21, align 4
  %127 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %122, align 8
  %128 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %127, i64 3
  %129 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %128, align 8
  call void %129(%"class.SkSL::OutputStream"* %9, i8* nonnull %126, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %126) #14
  %130 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %130) #14
  store i32 %3, i32* %20, align 4
  %131 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %122, align 8
  %132 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %131, i64 3
  %133 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %132, align 8
  call void %133(%"class.SkSL::OutputStream"* %9, i8* nonnull %130, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %130) #14
  %134 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %134) #14
  store i32 %4, i32* %19, align 4
  %135 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %122, align 8
  %136 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %135, i64 3
  %137 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %136, align 8
  call void %137(%"class.SkSL::OutputStream"* %9, i8* nonnull %134, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %134) #14
  br label %241

138:                                              ; preds = %116
  switch i32 %86, label %184 [
    i32 8, label %139
    i32 11, label %139
  ]

139:                                              ; preds = %138, %138
  %140 = icmp eq i32 %93, 2
  br i1 %140, label %141, label %161

141:                                              ; preds = %139
  %142 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %143 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %1, %"class.SkSL::MemoryLayout"* dereferenceable(4) %142) #14
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 %7, i32 5, %"class.SkSL::OutputStream"* dereferenceable(8) %9) #14
  %144 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %144) #14
  store i32 %143, i32* %18, align 4
  %145 = bitcast %"class.SkSL::OutputStream"* %9 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %146 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %145, align 8
  %147 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %146, i64 3
  %148 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %147, align 8
  call void %148(%"class.SkSL::OutputStream"* %9, i8* nonnull %144, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %144) #14
  %149 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %149) #14
  store i32 %83, i32* %17, align 4
  %150 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %145, align 8
  %151 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %150, i64 3
  %152 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %151, align 8
  call void %152(%"class.SkSL::OutputStream"* %9, i8* nonnull %149, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %149) #14
  %153 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %153) #14
  store i32 %3, i32* %16, align 4
  %154 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %145, align 8
  %155 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %154, i64 3
  %156 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %155, align 8
  call void %156(%"class.SkSL::OutputStream"* %9, i8* nonnull %153, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %153) #14
  %157 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %157) #14
  store i32 %4, i32* %15, align 4
  %158 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %145, align 8
  %159 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %158, i64 3
  %160 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %159, align 8
  call void %160(%"class.SkSL::OutputStream"* %9, i8* nonnull %157, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %157) #14
  br label %241

161:                                              ; preds = %139
  switch i32 %86, label %184 [
    i32 8, label %162
    i32 11, label %162
  ]

162:                                              ; preds = %161, %161
  %163 = icmp eq i32 %93, 3
  br i1 %163, label %164, label %184

164:                                              ; preds = %162
  %165 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %166 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %1, %"class.SkSL::MemoryLayout"* dereferenceable(4) %165) #14
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 %8, i32 5, %"class.SkSL::OutputStream"* dereferenceable(8) %9) #14
  %167 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %167) #14
  store i32 %166, i32* %14, align 4
  %168 = bitcast %"class.SkSL::OutputStream"* %9 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %169 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %168, align 8
  %170 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %169, i64 3
  %171 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %170, align 8
  call void %171(%"class.SkSL::OutputStream"* %9, i8* nonnull %167, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %167) #14
  %172 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %172) #14
  store i32 %83, i32* %13, align 4
  %173 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %168, align 8
  %174 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %173, i64 3
  %175 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %174, align 8
  call void %175(%"class.SkSL::OutputStream"* %9, i8* nonnull %172, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %172) #14
  %176 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %176) #14
  store i32 %3, i32* %12, align 4
  %177 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %168, align 8
  %178 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %177, i64 3
  %179 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %178, align 8
  call void %179(%"class.SkSL::OutputStream"* %9, i8* nonnull %176, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %176) #14
  %180 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %180) #14
  store i32 %4, i32* %11, align 4
  %181 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %168, align 8
  %182 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %181, i64 3
  %183 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %182, align 8
  call void %183(%"class.SkSL::OutputStream"* %9, i8* nonnull %180, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %180) #14
  br label %241

184:                                              ; preds = %81, %115, %138, %161, %162
  %185 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 2
  %186 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %185, align 8
  %187 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 0, i32 0, i32 1
  %188 = load i32, i32* %187, align 8
  %189 = bitcast %"class.SkSL::String"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %189) #14
  %190 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 18
  %191 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %190, align 8, !noalias !32
  %192 = icmp eq %"class.SkSL::Type"* %191, null
  %193 = select i1 %192, %"class.SkSL::Type"* %2, %"class.SkSL::Type"* %191
  %194 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %193, i64 0, i32 0, i32 1, i32 0
  %195 = load i8*, i8** %194, align 8, !noalias !32
  %196 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %193, i64 0, i32 0, i32 1, i32 1
  %197 = load i64, i64* %196, align 8, !noalias !32
  %198 = icmp ugt i64 %197, -17
  br i1 %198, label %199, label %201

199:                                              ; preds = %184
  %200 = bitcast %"class.SkSL::String"* %31 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %200) #15
  unreachable

201:                                              ; preds = %184
  %202 = icmp ult i64 %197, 23
  br i1 %202, label %211, label %203

203:                                              ; preds = %201
  %204 = add nuw i64 %197, 16
  %205 = and i64 %204, -16
  %206 = call i8* @_Znwm(i64 %205) #16
  %207 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %206, i8** %207, align 8, !alias.scope !32
  %208 = or i64 %205, -9223372036854775808
  %209 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %208, i64* %209, align 8, !alias.scope !32
  %210 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %197, i64* %210, align 8, !alias.scope !32
  br label %216

211:                                              ; preds = %201
  %212 = trunc i64 %197 to i8
  %213 = bitcast %"class.SkSL::String"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %214 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %213, i64 0, i32 1, i32 0
  store i8 %212, i8* %214, align 1, !alias.scope !32
  %215 = icmp eq i64 %197, 0
  br i1 %215, label %218, label %216

216:                                              ; preds = %211, %203
  %217 = phi i8* [ %206, %203 ], [ %189, %211 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %217, i8* align 1 %195, i64 %197, i1 false) #14
  br label %218

218:                                              ; preds = %211, %216
  %219 = phi i8* [ %189, %211 ], [ %217, %216 ]
  %220 = getelementptr inbounds i8, i8* %219, i64 %197
  store i8 0, i8* %220, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %30, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.24, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %31) #14
  %221 = bitcast %"class.SkSL::ErrorReporter"* %186 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %222 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %221, align 8
  %223 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %222, i64 2
  %224 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %223, align 8
  call void %224(%"class.SkSL::ErrorReporter"* %186, i32 %188, %"class.SkSL::String"* nonnull %30) #14
  %225 = bitcast %"class.SkSL::String"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %226 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %225, i64 0, i32 1, i32 0
  %227 = load i8, i8* %226, align 1
  %228 = icmp slt i8 %227, 0
  br i1 %228, label %229, label %232

229:                                              ; preds = %218
  %230 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = load i8*, i8** %230, align 8
  call void @_ZdlPv(i8* %231) #16
  br label %232

232:                                              ; preds = %218, %229
  %233 = bitcast %"class.SkSL::String"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %234 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %233, i64 0, i32 1, i32 0
  %235 = load i8, i8* %234, align 1
  %236 = icmp slt i8 %235, 0
  br i1 %236, label %237, label %240

237:                                              ; preds = %232
  %238 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %239 = load i8*, i8** %238, align 8
  call void @_ZdlPv(i8* %239) #16
  br label %240

240:                                              ; preds = %232, %237
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %189) #14
  br label %241

241:                                              ; preds = %118, %164, %240, %141, %95
  ret i32 %83
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator10foldToBoolEjRKNS_4TypeE6SpvOp_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, i32, %"class.SkSL::Type"* nocapture readonly dereferenceable(184), i32, %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 3
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 11
  br i1 %11, label %12, label %35

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %14, 1
  store i32 %15, i32* %13, align 8
  %16 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 1
  %17 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %16, align 8
  %18 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %17, i64 0, i32 0, i32 24, i32 0, i32 0, i32 0
  %19 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %18, align 8
  %20 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %21 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %19, %"class.SkSL::MemoryLayout"* dereferenceable(4) %20) #14
  tail call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 %3, i32 4, %"class.SkSL::OutputStream"* dereferenceable(8) %4) #14
  %22 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #14
  store i32 %21, i32* %8, align 4
  %23 = bitcast %"class.SkSL::OutputStream"* %4 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %24 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %24, i64 3
  %26 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %25, align 8
  call void %26(%"class.SkSL::OutputStream"* %4, i8* nonnull %22, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #14
  %27 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27) #14
  store i32 %14, i32* %7, align 4
  %28 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %23, align 8
  %29 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %28, i64 3
  %30 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %29, align 8
  call void %30(%"class.SkSL::OutputStream"* %4, i8* nonnull %27, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #14
  %31 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %31) #14
  store i32 %1, i32* %6, align 4
  %32 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %23, align 8
  %33 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %32, i64 3
  %34 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %33, align 8
  call void %34(%"class.SkSL::OutputStream"* %4, i8* nonnull %31, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %31) #14
  br label %35

35:                                               ; preds = %5, %12
  %36 = phi i32 [ %14, %12 ], [ %1, %5 ]
  ret i32 %36
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator21writeMatrixComparisonERKNS_4TypeEjj6SpvOp_S4_S4_S4_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::Type"* dereferenceable(184), i32, i32, i32, i32, i32, i32, %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 1
  %39 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  switch i32 %40, label %41 [
    i32 8, label %44
    i32 11, label %44
    i32 4, label %44
  ]

41:                                               ; preds = %9
  %42 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 6
  %43 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %42, align 8
  br label %53

44:                                               ; preds = %9, %9, %9
  %45 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 6
  %46 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %45, align 8
  %47 = icmp eq %"class.SkSL::Type"* %46, null
  %48 = select i1 %47, %"class.SkSL::Type"* %1, %"class.SkSL::Type"* %46
  %49 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %48, i64 0, i32 4
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  %52 = select i1 %51, i32 %4, i32 %5
  br label %53

53:                                               ; preds = %41, %44
  %54 = phi %"class.SkSL::Type"* [ %43, %41 ], [ %46, %44 ]
  %55 = phi i32 [ %5, %41 ], [ %52, %44 ]
  %56 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 6
  %57 = icmp eq %"class.SkSL::Type"* %54, null
  %58 = select i1 %57, %"class.SkSL::Type"* %1, %"class.SkSL::Type"* %54
  %59 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %38, align 8
  %60 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 9
  %61 = load i32, i32* %60, align 4
  %62 = tail call dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL4Type10toCompoundERKNS_7ContextEii(%"class.SkSL::Type"* %58, %"class.SkSL::Context"* dereferenceable(744) %59, i32 %61, i32 1) #14
  %63 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %64 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %62, %"class.SkSL::MemoryLayout"* dereferenceable(4) %63) #14
  %65 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %38, align 8
  %66 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %65, i64 0, i32 0, i32 24, i32 0, i32 0, i32 0
  %67 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %66, align 8
  %68 = load i32, i32* %60, align 4
  %69 = tail call dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL4Type10toCompoundERKNS_7ContextEii(%"class.SkSL::Type"* %67, %"class.SkSL::Context"* dereferenceable(744) %65, i32 %68, i32 1) #14
  %70 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %69, %"class.SkSL::MemoryLayout"* dereferenceable(4) %63) #14
  %71 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %38, align 8
  %72 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %71, i64 0, i32 0, i32 24, i32 0, i32 0, i32 0
  %73 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %72, align 8
  %74 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %73, %"class.SkSL::MemoryLayout"* dereferenceable(4) %63) #14
  %75 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 8
  %76 = load i32, i32* %75, align 8
  %77 = icmp sgt i32 %76, 0
  br i1 %77, label %78, label %113

78:                                               ; preds = %53
  %79 = icmp eq %"class.SkSL::Type"* %1, null
  %80 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 1
  %81 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %82 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %83 = bitcast i32* %28 to i8*
  %84 = bitcast %"class.SkSL::OutputStream"* %82 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %85 = bitcast i32* %30 to i8*
  %86 = bitcast i32* %29 to i8*
  %87 = bitcast i32* %27 to i8*
  %88 = bitcast %"class.SkSL::OutputStream"* %8 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %89 = bitcast i32* %26 to i8*
  %90 = bitcast i32* %25 to i8*
  %91 = bitcast i32* %24 to i8*
  %92 = bitcast i32* %21 to i8*
  %93 = bitcast i32* %23 to i8*
  %94 = bitcast i32* %22 to i8*
  %95 = bitcast i32* %20 to i8*
  %96 = bitcast i32* %19 to i8*
  %97 = bitcast i32* %18 to i8*
  %98 = bitcast i32* %17 to i8*
  %99 = bitcast i32* %14 to i8*
  %100 = bitcast i32* %16 to i8*
  %101 = bitcast i32* %15 to i8*
  %102 = bitcast i32* %13 to i8*
  %103 = bitcast i32* %12 to i8*
  %104 = bitcast i32* %11 to i8*
  %105 = bitcast i32* %10 to i8*
  %106 = bitcast i32* %33 to i8*
  %107 = bitcast i32* %32 to i8*
  %108 = bitcast i32* %31 to i8*
  %109 = bitcast i32* %37 to i8*
  %110 = bitcast i32* %36 to i8*
  %111 = bitcast i32* %35 to i8*
  %112 = bitcast i32* %34 to i8*
  br label %115

113:                                              ; preds = %307, %53
  %114 = phi i32 [ 0, %53 ], [ %308, %307 ]
  ret i32 %114

115:                                              ; preds = %78, %307
  %116 = phi i32 [ 0, %78 ], [ %309, %307 ]
  %117 = phi i32 [ 0, %78 ], [ %308, %307 ]
  br i1 %79, label %157, label %118

118:                                              ; preds = %115
  %119 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %56, align 8
  %120 = icmp eq %"class.SkSL::Type"* %119, null
  %121 = select i1 %120, %"class.SkSL::Type"* %1, %"class.SkSL::Type"* %119
  %122 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %121, i64 0, i32 4
  %123 = load i32, i32* %122, align 4
  %124 = icmp ult i32 %123, 3
  %125 = load i32, i32* %39, align 8
  %126 = icmp eq i32 %125, 6
  %127 = or i1 %124, %126
  br i1 %127, label %128, label %157

128:                                              ; preds = %118
  br i1 %120, label %134, label %129

129:                                              ; preds = %128, %129
  %130 = phi %"class.SkSL::Type"* [ %132, %129 ], [ %119, %128 ]
  %131 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %130, i64 0, i32 6
  %132 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %131, align 8
  %133 = icmp eq %"class.SkSL::Type"* %132, null
  br i1 %133, label %134, label %129

134:                                              ; preds = %129, %128
  %135 = phi %"class.SkSL::Type"* [ %1, %128 ], [ %130, %129 ]
  %136 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %135, i64 0, i32 16
  %137 = load i8, i8* %136, align 8, !range !2
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %139, label %157

139:                                              ; preds = %134
  %140 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %80, align 8
  %141 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %140, i64 0, i32 1, i32 0, i32 0, i32 0
  %142 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %141, align 8
  %143 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %142, i64 0, i32 1, i32 3
  %144 = load i8, i8* %143, align 1, !range !2
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %146, label %157

146:                                              ; preds = %139
  %147 = load i32, i32* %81, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %83) #14
  store i32 196679, i32* %28, align 4
  %148 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %84, align 8
  %149 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %148, i64 3
  %150 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %149, align 8
  call void %150(%"class.SkSL::OutputStream"* %82, i8* nonnull %83, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %83) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %85) #14
  store i32 %147, i32* %30, align 4
  %151 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %84, align 8
  %152 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %151, i64 3
  %153 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %152, align 8
  call void %153(%"class.SkSL::OutputStream"* %82, i8* nonnull %85, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %85) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %86) #14
  store i32 0, i32* %29, align 4
  %154 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %84, align 8
  %155 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %154, i64 3
  %156 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %155, align 8
  call void %156(%"class.SkSL::OutputStream"* %82, i8* nonnull %86, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %86) #14
  br label %157

157:                                              ; preds = %118, %115, %134, %139, %146
  %158 = load i32, i32* %81, align 8
  %159 = add i32 %158, 1
  store i32 %159, i32* %81, align 8
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 81, i32 5, %"class.SkSL::OutputStream"* dereferenceable(8) %8) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %87) #14
  store i32 %64, i32* %27, align 4
  %160 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %88, align 8
  %161 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %160, i64 3
  %162 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %161, align 8
  call void %162(%"class.SkSL::OutputStream"* %8, i8* nonnull %87, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %87) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %89) #14
  store i32 %158, i32* %26, align 4
  %163 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %88, align 8
  %164 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %163, i64 3
  %165 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %164, align 8
  call void %165(%"class.SkSL::OutputStream"* %8, i8* nonnull %89, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %89) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %90) #14
  store i32 %2, i32* %25, align 4
  %166 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %88, align 8
  %167 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %166, i64 3
  %168 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %167, align 8
  call void %168(%"class.SkSL::OutputStream"* %8, i8* nonnull %90, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %90) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %91) #14
  store i32 %116, i32* %24, align 4
  %169 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %88, align 8
  %170 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %169, i64 3
  %171 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %170, align 8
  call void %171(%"class.SkSL::OutputStream"* %8, i8* nonnull %91, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %91) #14
  br i1 %79, label %211, label %172

172:                                              ; preds = %157
  %173 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %56, align 8
  %174 = icmp eq %"class.SkSL::Type"* %173, null
  %175 = select i1 %174, %"class.SkSL::Type"* %1, %"class.SkSL::Type"* %173
  %176 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %175, i64 0, i32 4
  %177 = load i32, i32* %176, align 4
  %178 = icmp ult i32 %177, 3
  %179 = load i32, i32* %39, align 8
  %180 = icmp eq i32 %179, 6
  %181 = or i1 %178, %180
  br i1 %181, label %182, label %211

182:                                              ; preds = %172
  br i1 %174, label %188, label %183

183:                                              ; preds = %182, %183
  %184 = phi %"class.SkSL::Type"* [ %186, %183 ], [ %173, %182 ]
  %185 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %184, i64 0, i32 6
  %186 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %185, align 8
  %187 = icmp eq %"class.SkSL::Type"* %186, null
  br i1 %187, label %188, label %183

188:                                              ; preds = %183, %182
  %189 = phi %"class.SkSL::Type"* [ %1, %182 ], [ %184, %183 ]
  %190 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %189, i64 0, i32 16
  %191 = load i8, i8* %190, align 8, !range !2
  %192 = icmp eq i8 %191, 0
  br i1 %192, label %193, label %211

193:                                              ; preds = %188
  %194 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %80, align 8
  %195 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %194, i64 0, i32 1, i32 0, i32 0, i32 0
  %196 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %195, align 8
  %197 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %196, i64 0, i32 1, i32 3
  %198 = load i8, i8* %197, align 1, !range !2
  %199 = icmp eq i8 %198, 0
  br i1 %199, label %200, label %211

200:                                              ; preds = %193
  %201 = load i32, i32* %81, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %92) #14
  store i32 196679, i32* %21, align 4
  %202 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %84, align 8
  %203 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %202, i64 3
  %204 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %203, align 8
  call void %204(%"class.SkSL::OutputStream"* %82, i8* nonnull %92, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %92) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %93) #14
  store i32 %201, i32* %23, align 4
  %205 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %84, align 8
  %206 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %205, i64 3
  %207 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %206, align 8
  call void %207(%"class.SkSL::OutputStream"* %82, i8* nonnull %93, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %93) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %94) #14
  store i32 0, i32* %22, align 4
  %208 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %84, align 8
  %209 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %208, i64 3
  %210 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %209, align 8
  call void %210(%"class.SkSL::OutputStream"* %82, i8* nonnull %94, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %94) #14
  br label %211

211:                                              ; preds = %172, %157, %188, %193, %200
  %212 = load i32, i32* %81, align 8
  %213 = add i32 %212, 1
  store i32 %213, i32* %81, align 8
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 81, i32 5, %"class.SkSL::OutputStream"* dereferenceable(8) %8) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %95) #14
  store i32 %64, i32* %20, align 4
  %214 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %88, align 8
  %215 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %214, i64 3
  %216 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %215, align 8
  call void %216(%"class.SkSL::OutputStream"* %8, i8* nonnull %95, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %95) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %96) #14
  store i32 %212, i32* %19, align 4
  %217 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %88, align 8
  %218 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %217, i64 3
  %219 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %218, align 8
  call void %219(%"class.SkSL::OutputStream"* %8, i8* nonnull %96, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %96) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %97) #14
  store i32 %3, i32* %18, align 4
  %220 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %88, align 8
  %221 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %220, i64 3
  %222 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %221, align 8
  call void %222(%"class.SkSL::OutputStream"* %8, i8* nonnull %97, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %97) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %98) #14
  store i32 %116, i32* %17, align 4
  %223 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %88, align 8
  %224 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %223, i64 3
  %225 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %224, align 8
  call void %225(%"class.SkSL::OutputStream"* %8, i8* nonnull %98, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %98) #14
  br i1 %79, label %265, label %226

226:                                              ; preds = %211
  %227 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %56, align 8
  %228 = icmp eq %"class.SkSL::Type"* %227, null
  %229 = select i1 %228, %"class.SkSL::Type"* %1, %"class.SkSL::Type"* %227
  %230 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %229, i64 0, i32 4
  %231 = load i32, i32* %230, align 4
  %232 = icmp ult i32 %231, 3
  %233 = load i32, i32* %39, align 8
  %234 = icmp eq i32 %233, 6
  %235 = or i1 %232, %234
  br i1 %235, label %236, label %265

236:                                              ; preds = %226
  br i1 %228, label %242, label %237

237:                                              ; preds = %236, %237
  %238 = phi %"class.SkSL::Type"* [ %240, %237 ], [ %227, %236 ]
  %239 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %238, i64 0, i32 6
  %240 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %239, align 8
  %241 = icmp eq %"class.SkSL::Type"* %240, null
  br i1 %241, label %242, label %237

242:                                              ; preds = %237, %236
  %243 = phi %"class.SkSL::Type"* [ %1, %236 ], [ %238, %237 ]
  %244 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %243, i64 0, i32 16
  %245 = load i8, i8* %244, align 8, !range !2
  %246 = icmp eq i8 %245, 0
  br i1 %246, label %247, label %265

247:                                              ; preds = %242
  %248 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %80, align 8
  %249 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %248, i64 0, i32 1, i32 0, i32 0, i32 0
  %250 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %249, align 8
  %251 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %250, i64 0, i32 1, i32 3
  %252 = load i8, i8* %251, align 1, !range !2
  %253 = icmp eq i8 %252, 0
  br i1 %253, label %254, label %265

254:                                              ; preds = %247
  %255 = load i32, i32* %81, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %99) #14
  store i32 196679, i32* %14, align 4
  %256 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %84, align 8
  %257 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %256, i64 3
  %258 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %257, align 8
  call void %258(%"class.SkSL::OutputStream"* %82, i8* nonnull %99, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %99) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %100) #14
  store i32 %255, i32* %16, align 4
  %259 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %84, align 8
  %260 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %259, i64 3
  %261 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %260, align 8
  call void %261(%"class.SkSL::OutputStream"* %82, i8* nonnull %100, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %100) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %101) #14
  store i32 0, i32* %15, align 4
  %262 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %84, align 8
  %263 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %262, i64 3
  %264 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %263, align 8
  call void %264(%"class.SkSL::OutputStream"* %82, i8* nonnull %101, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %101) #14
  br label %265

265:                                              ; preds = %226, %211, %242, %247, %254
  %266 = load i32, i32* %81, align 8
  %267 = add i32 %266, 1
  store i32 %267, i32* %81, align 8
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 %55, i32 5, %"class.SkSL::OutputStream"* dereferenceable(8) %8) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %102) #14
  store i32 %70, i32* %13, align 4
  %268 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %88, align 8
  %269 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %268, i64 3
  %270 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %269, align 8
  call void %270(%"class.SkSL::OutputStream"* %8, i8* nonnull %102, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %102) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %103) #14
  store i32 %266, i32* %12, align 4
  %271 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %88, align 8
  %272 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %271, i64 3
  %273 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %272, align 8
  call void %273(%"class.SkSL::OutputStream"* %8, i8* nonnull %103, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %103) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %104) #14
  store i32 %158, i32* %11, align 4
  %274 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %88, align 8
  %275 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %274, i64 3
  %276 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %275, align 8
  call void %276(%"class.SkSL::OutputStream"* %8, i8* nonnull %104, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %104) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %105) #14
  store i32 %212, i32* %10, align 4
  %277 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %88, align 8
  %278 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %277, i64 3
  %279 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %278, align 8
  call void %279(%"class.SkSL::OutputStream"* %8, i8* nonnull %105, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %105) #14
  %280 = load i32, i32* %81, align 8
  %281 = add i32 %280, 1
  store i32 %281, i32* %81, align 8
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 %6, i32 4, %"class.SkSL::OutputStream"* dereferenceable(8) %8) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %106) #14
  store i32 %74, i32* %33, align 4
  %282 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %88, align 8
  %283 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %282, i64 3
  %284 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %283, align 8
  call void %284(%"class.SkSL::OutputStream"* %8, i8* nonnull %106, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %106) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %107) #14
  store i32 %280, i32* %32, align 4
  %285 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %88, align 8
  %286 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %285, i64 3
  %287 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %286, align 8
  call void %287(%"class.SkSL::OutputStream"* %8, i8* nonnull %107, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %107) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %108) #14
  store i32 %266, i32* %31, align 4
  %288 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %88, align 8
  %289 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %288, i64 3
  %290 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %289, align 8
  call void %290(%"class.SkSL::OutputStream"* %8, i8* nonnull %108, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %108) #14
  %291 = icmp eq i32 %117, 0
  br i1 %291, label %307, label %292

292:                                              ; preds = %265
  %293 = load i32, i32* %81, align 8
  %294 = add i32 %293, 1
  store i32 %294, i32* %81, align 8
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 %7, i32 5, %"class.SkSL::OutputStream"* dereferenceable(8) %8) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %109) #14
  store i32 %74, i32* %37, align 4
  %295 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %88, align 8
  %296 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %295, i64 3
  %297 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %296, align 8
  call void %297(%"class.SkSL::OutputStream"* %8, i8* nonnull %109, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %109) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %110) #14
  store i32 %293, i32* %36, align 4
  %298 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %88, align 8
  %299 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %298, i64 3
  %300 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %299, align 8
  call void %300(%"class.SkSL::OutputStream"* %8, i8* nonnull %110, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %110) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %111) #14
  store i32 %117, i32* %35, align 4
  %301 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %88, align 8
  %302 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %301, i64 3
  %303 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %302, align 8
  call void %303(%"class.SkSL::OutputStream"* %8, i8* nonnull %111, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %111) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %112) #14
  store i32 %280, i32* %34, align 4
  %304 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %88, align 8
  %305 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %304, i64 3
  %306 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %305, align 8
  call void %306(%"class.SkSL::OutputStream"* %8, i8* nonnull %112, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %112) #14
  br label %307

307:                                              ; preds = %265, %292
  %308 = phi i32 [ %293, %292 ], [ %280, %265 ]
  %309 = add nuw nsw i32 %116, 1
  %310 = load i32, i32* %75, align 8
  %311 = icmp slt i32 %309, %310
  br i1 %311, label %115, label %113
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator15writeReciprocalERKNS_4TypeEjRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::Type"* dereferenceable(184), i32, %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %"class.SkSL::Literal.430", align 8
  %13 = bitcast %"class.SkSL::Literal.430"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #14
  %14 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %12, i64 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %12, i64 0, i32 0, i32 0, i32 1
  store i32 -1, i32* %15, align 8
  %16 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %12, i64 0, i32 0, i32 0, i32 2
  store i32 45, i32* %16, align 4
  %17 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %12, i64 0, i32 0, i32 1
  store %"class.SkSL::Type"* %1, %"class.SkSL::Type"** %17, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIfEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %18 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %12, i64 0, i32 1
  store float 1.000000e+00, float* %18, align 8
  %19 = call i32 @_ZN4SkSL18SPIRVCodeGenerator17writeFloatLiteralERKNS_7LiteralIfEE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Literal.430"* nonnull dereferenceable(32) %12)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #14
  %20 = icmp eq %"class.SkSL::Type"* %1, null
  br i1 %20, label %69, label %21

21:                                               ; preds = %4
  %22 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 6
  %23 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %22, align 8
  %24 = icmp eq %"class.SkSL::Type"* %23, null
  %25 = select i1 %24, %"class.SkSL::Type"* %1, %"class.SkSL::Type"* %23
  %26 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %25, i64 0, i32 4
  %27 = load i32, i32* %26, align 4
  %28 = icmp ult i32 %27, 3
  br i1 %28, label %33, label %29

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 3
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %31, 6
  br i1 %32, label %33, label %69

33:                                               ; preds = %29, %21
  br i1 %24, label %39, label %34

34:                                               ; preds = %33, %34
  %35 = phi %"class.SkSL::Type"* [ %37, %34 ], [ %23, %33 ]
  %36 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %35, i64 0, i32 6
  %37 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %36, align 8
  %38 = icmp eq %"class.SkSL::Type"* %37, null
  br i1 %38, label %39, label %34

39:                                               ; preds = %34, %33
  %40 = phi %"class.SkSL::Type"* [ %1, %33 ], [ %35, %34 ]
  %41 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %40, i64 0, i32 16
  %42 = load i8, i8* %41, align 8, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %69

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 1
  %46 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %45, align 8
  %47 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %46, i64 0, i32 1, i32 0, i32 0, i32 0
  %48 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %47, align 8
  %49 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %48, i64 0, i32 1, i32 3
  %50 = load i8, i8* %49, align 1, !range !2
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %69

52:                                               ; preds = %44
  %53 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %54 = load i32, i32* %53, align 8
  %55 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %56 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %56) #14
  store i32 196679, i32* %5, align 4
  %57 = bitcast %"class.SkSL::OutputStream"* %55 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %58 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %58, i64 3
  %60 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %59, align 8
  call void %60(%"class.SkSL::OutputStream"* %55, i8* nonnull %56, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %56) #14
  %61 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %61) #14
  store i32 %54, i32* %7, align 4
  %62 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %57, align 8
  %63 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %62, i64 3
  %64 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %63, align 8
  call void %64(%"class.SkSL::OutputStream"* %55, i8* nonnull %61, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %61) #14
  %65 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %65) #14
  store i32 0, i32* %6, align 4
  %66 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %57, align 8
  %67 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %66, i64 3
  %68 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %67, align 8
  call void %68(%"class.SkSL::OutputStream"* %55, i8* nonnull %65, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %65) #14
  br label %69

69:                                               ; preds = %4, %29, %39, %44, %52
  %70 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %71 = load i32, i32* %70, align 8
  %72 = add i32 %71, 1
  store i32 %72, i32* %70, align 8
  %73 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %74 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %1, %"class.SkSL::MemoryLayout"* dereferenceable(4) %73) #14
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 136, i32 5, %"class.SkSL::OutputStream"* dereferenceable(8) %3) #14
  %75 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %75) #14
  store i32 %74, i32* %11, align 4
  %76 = bitcast %"class.SkSL::OutputStream"* %3 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %77 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %77, i64 3
  %79 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %78, align 8
  call void %79(%"class.SkSL::OutputStream"* %3, i8* nonnull %75, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %75) #14
  %80 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %80) #14
  store i32 %71, i32* %10, align 4
  %81 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %76, align 8
  %82 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %81, i64 3
  %83 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %82, align 8
  call void %83(%"class.SkSL::OutputStream"* %3, i8* nonnull %80, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %80) #14
  %84 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %84) #14
  store i32 %19, i32* %9, align 4
  %85 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %76, align 8
  %86 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %85, i64 3
  %87 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %86, align 8
  call void %87(%"class.SkSL::OutputStream"* %3, i8* nonnull %84, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %84) #14
  %88 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %88) #14
  store i32 %2, i32* %8, align 4
  %89 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %76, align 8
  %90 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %89, i64 3
  %91 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %90, align 8
  call void %91(%"class.SkSL::OutputStream"* %3, i8* nonnull %88, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %88) #14
  ret i32 %71
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator24writeScalarToMatrixSplatERKNS_4TypeEjRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::Type"* dereferenceable(184), i32, %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::vector.382", align 8
  %6 = alloca %"class.std::__1::vector.382", align 8
  %7 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 6
  %8 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %7, align 8
  %9 = icmp eq %"class.SkSL::Type"* %8, null
  %10 = select i1 %9, %"class.SkSL::Type"* %1, %"class.SkSL::Type"* %8
  %11 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 1
  %12 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %11, align 8
  %13 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 9
  %14 = load i32, i32* %13, align 4
  %15 = tail call dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL4Type10toCompoundERKNS_7ContextEii(%"class.SkSL::Type"* %10, %"class.SkSL::Context"* dereferenceable(744) %12, i32 %14, i32 1) #14
  %16 = bitcast %"class.std::__1::vector.382"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #14
  %17 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %5, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %5, i64 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %20 = load i32, i32* %13, align 4
  %21 = sext i32 %20 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 24, i1 false) #14
  %22 = icmp eq i32 %20, 0
  br i1 %22, label %122, label %23

23:                                               ; preds = %4
  %24 = icmp slt i32 %20, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector.382"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %26) #15
  unreachable

27:                                               ; preds = %23
  %28 = shl nsw i64 %21, 2
  %29 = tail call i8* @_Znwm(i64 %28) #16
  %30 = bitcast i8* %29 to i32*
  %31 = bitcast i32** %18 to i8**
  store i8* %29, i8** %31, align 8
  %32 = bitcast %"class.std::__1::vector.382"* %5 to i8**
  store i8* %29, i8** %32, align 8
  %33 = getelementptr inbounds i32, i32* %30, i64 %21
  store i32* %33, i32** %19, align 8
  %34 = shl nsw i64 %21, 2
  %35 = add nsw i64 %34, -4
  %36 = lshr exact i64 %35, 2
  %37 = add nuw nsw i64 %36, 1
  %38 = icmp ult i64 %37, 8
  br i1 %38, label %113, label %39

39:                                               ; preds = %27
  %40 = and i64 %37, 9223372036854775800
  %41 = getelementptr i32, i32* %30, i64 %40
  %42 = insertelement <4 x i32> undef, i32 %2, i32 0
  %43 = shufflevector <4 x i32> %42, <4 x i32> undef, <4 x i32> zeroinitializer
  %44 = insertelement <4 x i32> undef, i32 %2, i32 0
  %45 = shufflevector <4 x i32> %44, <4 x i32> undef, <4 x i32> zeroinitializer
  %46 = add nsw i64 %40, -8
  %47 = lshr exact i64 %46, 3
  %48 = add nuw nsw i64 %47, 1
  %49 = and i64 %48, 7
  %50 = icmp ult i64 %46, 56
  br i1 %50, label %98, label %51

51:                                               ; preds = %39
  %52 = sub nsw i64 %48, %49
  br label %53

53:                                               ; preds = %53, %51
  %54 = phi i64 [ 0, %51 ], [ %95, %53 ]
  %55 = phi i64 [ %52, %51 ], [ %96, %53 ]
  %56 = getelementptr i32, i32* %30, i64 %54
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> %43, <4 x i32>* %57, align 4
  %58 = getelementptr i32, i32* %56, i64 4
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> %45, <4 x i32>* %59, align 4
  %60 = or i64 %54, 8
  %61 = getelementptr i32, i32* %30, i64 %60
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> %43, <4 x i32>* %62, align 4
  %63 = getelementptr i32, i32* %61, i64 4
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> %45, <4 x i32>* %64, align 4
  %65 = or i64 %54, 16
  %66 = getelementptr i32, i32* %30, i64 %65
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> %43, <4 x i32>* %67, align 4
  %68 = getelementptr i32, i32* %66, i64 4
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> %45, <4 x i32>* %69, align 4
  %70 = or i64 %54, 24
  %71 = getelementptr i32, i32* %30, i64 %70
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> %43, <4 x i32>* %72, align 4
  %73 = getelementptr i32, i32* %71, i64 4
  %74 = bitcast i32* %73 to <4 x i32>*
  store <4 x i32> %45, <4 x i32>* %74, align 4
  %75 = or i64 %54, 32
  %76 = getelementptr i32, i32* %30, i64 %75
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> %43, <4 x i32>* %77, align 4
  %78 = getelementptr i32, i32* %76, i64 4
  %79 = bitcast i32* %78 to <4 x i32>*
  store <4 x i32> %45, <4 x i32>* %79, align 4
  %80 = or i64 %54, 40
  %81 = getelementptr i32, i32* %30, i64 %80
  %82 = bitcast i32* %81 to <4 x i32>*
  store <4 x i32> %43, <4 x i32>* %82, align 4
  %83 = getelementptr i32, i32* %81, i64 4
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> %45, <4 x i32>* %84, align 4
  %85 = or i64 %54, 48
  %86 = getelementptr i32, i32* %30, i64 %85
  %87 = bitcast i32* %86 to <4 x i32>*
  store <4 x i32> %43, <4 x i32>* %87, align 4
  %88 = getelementptr i32, i32* %86, i64 4
  %89 = bitcast i32* %88 to <4 x i32>*
  store <4 x i32> %45, <4 x i32>* %89, align 4
  %90 = or i64 %54, 56
  %91 = getelementptr i32, i32* %30, i64 %90
  %92 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> %43, <4 x i32>* %92, align 4
  %93 = getelementptr i32, i32* %91, i64 4
  %94 = bitcast i32* %93 to <4 x i32>*
  store <4 x i32> %45, <4 x i32>* %94, align 4
  %95 = add i64 %54, 64
  %96 = add i64 %55, -8
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %53, !llvm.loop !37

98:                                               ; preds = %53, %39
  %99 = phi i64 [ 0, %39 ], [ %95, %53 ]
  %100 = icmp eq i64 %49, 0
  br i1 %100, label %111, label %101

101:                                              ; preds = %98, %101
  %102 = phi i64 [ %108, %101 ], [ %99, %98 ]
  %103 = phi i64 [ %109, %101 ], [ %49, %98 ]
  %104 = getelementptr i32, i32* %30, i64 %102
  %105 = bitcast i32* %104 to <4 x i32>*
  store <4 x i32> %43, <4 x i32>* %105, align 4
  %106 = getelementptr i32, i32* %104, i64 4
  %107 = bitcast i32* %106 to <4 x i32>*
  store <4 x i32> %45, <4 x i32>* %107, align 4
  %108 = add i64 %102, 8
  %109 = add i64 %103, -1
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %101, !llvm.loop !38

111:                                              ; preds = %101, %98
  %112 = icmp eq i64 %37, %40
  br i1 %112, label %119, label %113

113:                                              ; preds = %111, %27
  %114 = phi i32* [ %30, %27 ], [ %41, %111 ]
  br label %115

115:                                              ; preds = %113, %115
  %116 = phi i32* [ %117, %115 ], [ %114, %113 ]
  store i32 %2, i32* %116, align 4
  %117 = getelementptr inbounds i32, i32* %116, i64 1
  %118 = icmp eq i32* %117, %33
  br i1 %118, label %119, label %115, !llvm.loop !39

119:                                              ; preds = %115, %111
  %120 = bitcast i32** %18 to i64*
  %121 = ptrtoint i32* %33 to i64
  store i64 %121, i64* %120, align 8
  br label %122

122:                                              ; preds = %4, %119
  %123 = call i32 @_ZN4SkSL18SPIRVCodeGenerator14writeCompositeERKNSt3__16vectorIjNS1_9allocatorIjEEEERKNS_4TypeERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.std::__1::vector.382"* nonnull dereferenceable(24) %5, %"class.SkSL::Type"* dereferenceable(184) %15, %"class.SkSL::OutputStream"* dereferenceable(8) %3)
  %124 = bitcast %"class.std::__1::vector.382"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %124) #14
  %125 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %6, i64 0, i32 0, i32 0
  %126 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %6, i64 0, i32 0, i32 1
  %127 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %128 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 8
  %129 = load i32, i32* %128, align 8
  %130 = sext i32 %129 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %124, i8 0, i64 24, i1 false) #14
  %131 = icmp eq i32 %129, 0
  br i1 %131, label %231, label %132

132:                                              ; preds = %122
  %133 = icmp slt i32 %129, 0
  br i1 %133, label %134, label %136

134:                                              ; preds = %132
  %135 = bitcast %"class.std::__1::vector.382"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %135) #15
  unreachable

136:                                              ; preds = %132
  %137 = shl nsw i64 %130, 2
  %138 = tail call i8* @_Znwm(i64 %137) #16
  %139 = bitcast i8* %138 to i32*
  %140 = bitcast i32** %126 to i8**
  store i8* %138, i8** %140, align 8
  %141 = bitcast %"class.std::__1::vector.382"* %6 to i8**
  store i8* %138, i8** %141, align 8
  %142 = getelementptr inbounds i32, i32* %139, i64 %130
  store i32* %142, i32** %127, align 8
  %143 = shl nsw i64 %130, 2
  %144 = add nsw i64 %143, -4
  %145 = lshr exact i64 %144, 2
  %146 = add nuw nsw i64 %145, 1
  %147 = icmp ult i64 %146, 8
  br i1 %147, label %222, label %148

148:                                              ; preds = %136
  %149 = and i64 %146, 9223372036854775800
  %150 = getelementptr i32, i32* %139, i64 %149
  %151 = insertelement <4 x i32> undef, i32 %123, i32 0
  %152 = shufflevector <4 x i32> %151, <4 x i32> undef, <4 x i32> zeroinitializer
  %153 = insertelement <4 x i32> undef, i32 %123, i32 0
  %154 = shufflevector <4 x i32> %153, <4 x i32> undef, <4 x i32> zeroinitializer
  %155 = add nsw i64 %149, -8
  %156 = lshr exact i64 %155, 3
  %157 = add nuw nsw i64 %156, 1
  %158 = and i64 %157, 7
  %159 = icmp ult i64 %155, 56
  br i1 %159, label %207, label %160

160:                                              ; preds = %148
  %161 = sub nsw i64 %157, %158
  br label %162

162:                                              ; preds = %162, %160
  %163 = phi i64 [ 0, %160 ], [ %204, %162 ]
  %164 = phi i64 [ %161, %160 ], [ %205, %162 ]
  %165 = getelementptr i32, i32* %139, i64 %163
  %166 = bitcast i32* %165 to <4 x i32>*
  store <4 x i32> %152, <4 x i32>* %166, align 4
  %167 = getelementptr i32, i32* %165, i64 4
  %168 = bitcast i32* %167 to <4 x i32>*
  store <4 x i32> %154, <4 x i32>* %168, align 4
  %169 = or i64 %163, 8
  %170 = getelementptr i32, i32* %139, i64 %169
  %171 = bitcast i32* %170 to <4 x i32>*
  store <4 x i32> %152, <4 x i32>* %171, align 4
  %172 = getelementptr i32, i32* %170, i64 4
  %173 = bitcast i32* %172 to <4 x i32>*
  store <4 x i32> %154, <4 x i32>* %173, align 4
  %174 = or i64 %163, 16
  %175 = getelementptr i32, i32* %139, i64 %174
  %176 = bitcast i32* %175 to <4 x i32>*
  store <4 x i32> %152, <4 x i32>* %176, align 4
  %177 = getelementptr i32, i32* %175, i64 4
  %178 = bitcast i32* %177 to <4 x i32>*
  store <4 x i32> %154, <4 x i32>* %178, align 4
  %179 = or i64 %163, 24
  %180 = getelementptr i32, i32* %139, i64 %179
  %181 = bitcast i32* %180 to <4 x i32>*
  store <4 x i32> %152, <4 x i32>* %181, align 4
  %182 = getelementptr i32, i32* %180, i64 4
  %183 = bitcast i32* %182 to <4 x i32>*
  store <4 x i32> %154, <4 x i32>* %183, align 4
  %184 = or i64 %163, 32
  %185 = getelementptr i32, i32* %139, i64 %184
  %186 = bitcast i32* %185 to <4 x i32>*
  store <4 x i32> %152, <4 x i32>* %186, align 4
  %187 = getelementptr i32, i32* %185, i64 4
  %188 = bitcast i32* %187 to <4 x i32>*
  store <4 x i32> %154, <4 x i32>* %188, align 4
  %189 = or i64 %163, 40
  %190 = getelementptr i32, i32* %139, i64 %189
  %191 = bitcast i32* %190 to <4 x i32>*
  store <4 x i32> %152, <4 x i32>* %191, align 4
  %192 = getelementptr i32, i32* %190, i64 4
  %193 = bitcast i32* %192 to <4 x i32>*
  store <4 x i32> %154, <4 x i32>* %193, align 4
  %194 = or i64 %163, 48
  %195 = getelementptr i32, i32* %139, i64 %194
  %196 = bitcast i32* %195 to <4 x i32>*
  store <4 x i32> %152, <4 x i32>* %196, align 4
  %197 = getelementptr i32, i32* %195, i64 4
  %198 = bitcast i32* %197 to <4 x i32>*
  store <4 x i32> %154, <4 x i32>* %198, align 4
  %199 = or i64 %163, 56
  %200 = getelementptr i32, i32* %139, i64 %199
  %201 = bitcast i32* %200 to <4 x i32>*
  store <4 x i32> %152, <4 x i32>* %201, align 4
  %202 = getelementptr i32, i32* %200, i64 4
  %203 = bitcast i32* %202 to <4 x i32>*
  store <4 x i32> %154, <4 x i32>* %203, align 4
  %204 = add i64 %163, 64
  %205 = add i64 %164, -8
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %207, label %162, !llvm.loop !40

207:                                              ; preds = %162, %148
  %208 = phi i64 [ 0, %148 ], [ %204, %162 ]
  %209 = icmp eq i64 %158, 0
  br i1 %209, label %220, label %210

210:                                              ; preds = %207, %210
  %211 = phi i64 [ %217, %210 ], [ %208, %207 ]
  %212 = phi i64 [ %218, %210 ], [ %158, %207 ]
  %213 = getelementptr i32, i32* %139, i64 %211
  %214 = bitcast i32* %213 to <4 x i32>*
  store <4 x i32> %152, <4 x i32>* %214, align 4
  %215 = getelementptr i32, i32* %213, i64 4
  %216 = bitcast i32* %215 to <4 x i32>*
  store <4 x i32> %154, <4 x i32>* %216, align 4
  %217 = add i64 %211, 8
  %218 = add i64 %212, -1
  %219 = icmp eq i64 %218, 0
  br i1 %219, label %220, label %210, !llvm.loop !41

220:                                              ; preds = %210, %207
  %221 = icmp eq i64 %146, %149
  br i1 %221, label %228, label %222

222:                                              ; preds = %220, %136
  %223 = phi i32* [ %139, %136 ], [ %150, %220 ]
  br label %224

224:                                              ; preds = %222, %224
  %225 = phi i32* [ %226, %224 ], [ %223, %222 ]
  store i32 %123, i32* %225, align 4
  %226 = getelementptr inbounds i32, i32* %225, i64 1
  %227 = icmp eq i32* %226, %142
  br i1 %227, label %228, label %224, !llvm.loop !42

228:                                              ; preds = %224, %220
  %229 = bitcast i32** %126 to i64*
  %230 = ptrtoint i32* %142 to i64
  store i64 %230, i64* %229, align 8
  br label %231

231:                                              ; preds = %122, %228
  %232 = call i32 @_ZN4SkSL18SPIRVCodeGenerator14writeCompositeERKNSt3__16vectorIjNS1_9allocatorIjEEEERKNS_4TypeERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.std::__1::vector.382"* nonnull dereferenceable(24) %6, %"class.SkSL::Type"* dereferenceable(184) %1, %"class.SkSL::OutputStream"* dereferenceable(8) %3)
  %233 = load i32*, i32** %125, align 8
  %234 = icmp eq i32* %233, null
  br i1 %234, label %239, label %235

235:                                              ; preds = %231
  %236 = ptrtoint i32* %233 to i64
  %237 = bitcast i32** %126 to i64*
  store i64 %236, i64* %237, align 8
  %238 = bitcast i32* %233 to i8*
  tail call void @_ZdlPv(i8* %238) #16
  br label %239

239:                                              ; preds = %231, %235
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %124) #14
  %240 = load i32*, i32** %17, align 8
  %241 = icmp eq i32* %240, null
  br i1 %241, label %246, label %242

242:                                              ; preds = %239
  %243 = ptrtoint i32* %240 to i64
  %244 = bitcast i32** %18 to i64*
  store i64 %243, i64* %244, align 8
  %245 = bitcast i32* %240 to i8*
  tail call void @_ZdlPv(i8* %245) #16
  br label %246

246:                                              ; preds = %239, %242
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #14
  ret i32 %232
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator21writeBinaryExpressionERKNS_4TypeEjNS_8OperatorES3_jS3_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::Type"* dereferenceable(184), i32, i32, %"class.SkSL::Type"* dereferenceable(184), i32, %"class.SkSL::Type"* dereferenceable(184), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = alloca i32, align 4
  %42 = alloca i32, align 4
  %43 = alloca i32, align 4
  %44 = alloca i32, align 4
  %45 = alloca i32, align 4
  %46 = alloca i32, align 4
  %47 = alloca i32, align 4
  %48 = alloca i32, align 4
  %49 = alloca i32, align 4
  %50 = alloca i32, align 4
  %51 = alloca i32, align 4
  %52 = alloca i32, align 4
  %53 = alloca i32, align 4
  %54 = alloca i32, align 4
  %55 = alloca i32, align 4
  %56 = alloca i32, align 4
  %57 = alloca i32, align 4
  %58 = alloca i32, align 4
  %59 = alloca i32, align 4
  %60 = alloca i32, align 4
  %61 = alloca i32, align 4
  %62 = alloca i32, align 4
  %63 = alloca i32, align 4
  %64 = alloca i32, align 4
  %65 = alloca i32, align 4
  %66 = alloca <2 x i64>, align 16
  %67 = icmp eq i32 %3, 43
  br i1 %67, label %842, label %68

68:                                               ; preds = %8
  %69 = bitcast <2 x i64>* %66 to %"struct.SkSL::StringFragment"*
  %70 = tail call dereferenceable(184) %"class.SkSL::Type"* @_ZN4SkSL18SPIRVCodeGenerator13getActualTypeERKNS_4TypeE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %1)
  %71 = tail call dereferenceable(184) %"class.SkSL::Type"* @_ZN4SkSL18SPIRVCodeGenerator13getActualTypeERKNS_4TypeE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %4)
  %72 = bitcast <2 x i64>* %66 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %72) #14
  %73 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %70, i64 0, i32 0, i32 1, i32 0
  %74 = bitcast i8** %73 to <2 x i64>*
  %75 = load <2 x i64>, <2 x i64>* %74, align 8
  store <2 x i64> %75, <2 x i64>* %66, align 16
  %76 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %71, i64 0, i32 0, i32 1, i32 0
  %77 = load i8*, i8** %76, align 8
  %78 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %71, i64 0, i32 0, i32 1, i32 1
  %79 = load i64, i64* %78, align 8
  %80 = call zeroext i1 @_ZNK4SkSL14StringFragmentneES0_(%"struct.SkSL::StringFragment"* nonnull %69, i8* %77, i64 %79) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72) #14
  br i1 %80, label %81, label %593

81:                                               ; preds = %68
  %82 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 3
  %83 = load i32, i32* %82, align 8
  %84 = icmp eq i32 %83, 11
  br i1 %84, label %85, label %249

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %4, i64 0, i32 4
  %87 = load i32, i32* %86, align 4
  %88 = icmp ult i32 %87, 3
  br i1 %88, label %89, label %249

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %6, i64 0, i32 6
  %91 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %90, align 8
  %92 = icmp eq %"class.SkSL::Type"* %91, null
  %93 = select i1 %92, %"class.SkSL::Type"* %6, %"class.SkSL::Type"* %91
  %94 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %93, i64 0, i32 4
  %95 = load i32, i32* %94, align 4
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %173

97:                                               ; preds = %89
  switch i32 %3, label %173 [
    i32 49, label %98
    i32 48, label %100
  ]

98:                                               ; preds = %97
  %99 = call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeReciprocalERKNS_4TypeEjRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %4, i32 %5, %"class.SkSL::OutputStream"* dereferenceable(8) %7)
  br label %100

100:                                              ; preds = %97, %98
  %101 = phi i32 [ %5, %97 ], [ %99, %98 ]
  %102 = icmp eq %"class.SkSL::Type"* %6, null
  br i1 %102, label %150, label %103

103:                                              ; preds = %100
  %104 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %90, align 8
  %105 = icmp eq %"class.SkSL::Type"* %104, null
  %106 = select i1 %105, %"class.SkSL::Type"* %6, %"class.SkSL::Type"* %104
  %107 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %106, i64 0, i32 4
  %108 = load i32, i32* %107, align 4
  %109 = icmp ult i32 %108, 3
  br i1 %109, label %114, label %110

110:                                              ; preds = %103
  %111 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %6, i64 0, i32 3
  %112 = load i32, i32* %111, align 8
  %113 = icmp eq i32 %112, 6
  br i1 %113, label %114, label %150

114:                                              ; preds = %110, %103
  br i1 %105, label %120, label %115

115:                                              ; preds = %114, %115
  %116 = phi %"class.SkSL::Type"* [ %118, %115 ], [ %104, %114 ]
  %117 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %116, i64 0, i32 6
  %118 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %117, align 8
  %119 = icmp eq %"class.SkSL::Type"* %118, null
  br i1 %119, label %120, label %115

120:                                              ; preds = %115, %114
  %121 = phi %"class.SkSL::Type"* [ %6, %114 ], [ %116, %115 ]
  %122 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %121, i64 0, i32 16
  %123 = load i8, i8* %122, align 8, !range !2
  %124 = icmp eq i8 %123, 0
  br i1 %124, label %125, label %150

125:                                              ; preds = %120
  %126 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 1
  %127 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %126, align 8
  %128 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %127, i64 0, i32 1, i32 0, i32 0, i32 0
  %129 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %128, align 8
  %130 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %129, i64 0, i32 1, i32 3
  %131 = load i8, i8* %130, align 1, !range !2
  %132 = icmp eq i8 %131, 0
  br i1 %132, label %133, label %150

133:                                              ; preds = %125
  %134 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %135 = load i32, i32* %134, align 8
  %136 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %137 = bitcast i32* %63 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %137) #14
  store i32 196679, i32* %63, align 4
  %138 = bitcast %"class.SkSL::OutputStream"* %136 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %139 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %138, align 8
  %140 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %139, i64 3
  %141 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %140, align 8
  call void %141(%"class.SkSL::OutputStream"* %136, i8* nonnull %137, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %137) #14
  %142 = bitcast i32* %65 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %142) #14
  store i32 %135, i32* %65, align 4
  %143 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %138, align 8
  %144 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %143, i64 3
  %145 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %144, align 8
  call void %145(%"class.SkSL::OutputStream"* %136, i8* nonnull %142, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %142) #14
  %146 = bitcast i32* %64 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %146) #14
  store i32 0, i32* %64, align 4
  %147 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %138, align 8
  %148 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %147, i64 3
  %149 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %148, align 8
  call void %149(%"class.SkSL::OutputStream"* %136, i8* nonnull %146, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %146) #14
  br label %150

150:                                              ; preds = %100, %110, %120, %125, %133
  %151 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %152 = load i32, i32* %151, align 8
  %153 = add i32 %152, 1
  store i32 %153, i32* %151, align 8
  %154 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %155 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %6, %"class.SkSL::MemoryLayout"* dereferenceable(4) %154) #14
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 142, i32 5, %"class.SkSL::OutputStream"* dereferenceable(8) %7) #14
  %156 = bitcast i32* %62 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %156) #14
  store i32 %155, i32* %62, align 4
  %157 = bitcast %"class.SkSL::OutputStream"* %7 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %158 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %157, align 8
  %159 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %158, i64 3
  %160 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %159, align 8
  call void %160(%"class.SkSL::OutputStream"* %7, i8* nonnull %156, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %156) #14
  %161 = bitcast i32* %61 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %161) #14
  store i32 %152, i32* %61, align 4
  %162 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %157, align 8
  %163 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %162, i64 3
  %164 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %163, align 8
  call void %164(%"class.SkSL::OutputStream"* %7, i8* nonnull %161, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %161) #14
  %165 = bitcast i32* %60 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %165) #14
  store i32 %2, i32* %60, align 4
  %166 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %157, align 8
  %167 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %166, i64 3
  %168 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %167, align 8
  call void %168(%"class.SkSL::OutputStream"* %7, i8* nonnull %165, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %165) #14
  %169 = bitcast i32* %59 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %169) #14
  store i32 %101, i32* %59, align 4
  %170 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %157, align 8
  %171 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %170, i64 3
  %172 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %171, align 8
  call void %172(%"class.SkSL::OutputStream"* %7, i8* nonnull %169, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %169) #14
  br label %842

173:                                              ; preds = %97, %89
  %174 = icmp eq %"class.SkSL::Type"* %1, null
  br i1 %174, label %219, label %175

175:                                              ; preds = %173
  %176 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 6
  %177 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %176, align 8
  %178 = icmp eq %"class.SkSL::Type"* %177, null
  %179 = select i1 %178, %"class.SkSL::Type"* %1, %"class.SkSL::Type"* %177
  %180 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %179, i64 0, i32 4
  %181 = load i32, i32* %180, align 4
  %182 = icmp ult i32 %181, 3
  br i1 %182, label %183, label %219

183:                                              ; preds = %175
  br i1 %178, label %189, label %184

184:                                              ; preds = %183, %184
  %185 = phi %"class.SkSL::Type"* [ %187, %184 ], [ %177, %183 ]
  %186 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %185, i64 0, i32 6
  %187 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %186, align 8
  %188 = icmp eq %"class.SkSL::Type"* %187, null
  br i1 %188, label %189, label %184

189:                                              ; preds = %184, %183
  %190 = phi %"class.SkSL::Type"* [ %1, %183 ], [ %185, %184 ]
  %191 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %190, i64 0, i32 16
  %192 = load i8, i8* %191, align 8, !range !2
  %193 = icmp eq i8 %192, 0
  br i1 %193, label %194, label %219

194:                                              ; preds = %189
  %195 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 1
  %196 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %195, align 8
  %197 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %196, i64 0, i32 1, i32 0, i32 0, i32 0
  %198 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %197, align 8
  %199 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %198, i64 0, i32 1, i32 3
  %200 = load i8, i8* %199, align 1, !range !2
  %201 = icmp eq i8 %200, 0
  br i1 %201, label %202, label %219

202:                                              ; preds = %194
  %203 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %204 = load i32, i32* %203, align 8
  %205 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %206 = bitcast i32* %56 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %206) #14
  store i32 196679, i32* %56, align 4
  %207 = bitcast %"class.SkSL::OutputStream"* %205 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %208 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %207, align 8
  %209 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %208, i64 3
  %210 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %209, align 8
  call void %210(%"class.SkSL::OutputStream"* %205, i8* nonnull %206, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %206) #14
  %211 = bitcast i32* %58 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %211) #14
  store i32 %204, i32* %58, align 4
  %212 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %207, align 8
  %213 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %212, i64 3
  %214 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %213, align 8
  call void %214(%"class.SkSL::OutputStream"* %205, i8* nonnull %211, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %211) #14
  %215 = bitcast i32* %57 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %215) #14
  store i32 0, i32* %57, align 4
  %216 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %207, align 8
  %217 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %216, i64 3
  %218 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %217, align 8
  call void %218(%"class.SkSL::OutputStream"* %205, i8* nonnull %215, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %215) #14
  br label %219

219:                                              ; preds = %175, %173, %189, %194, %202
  %220 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %221 = load i32, i32* %220, align 8
  %222 = add i32 %221, 1
  store i32 %222, i32* %220, align 8
  %223 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 8
  %224 = load i32, i32* %223, align 8
  %225 = add nsw i32 %224, 3
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 80, i32 %225, %"class.SkSL::OutputStream"* dereferenceable(8) %7)
  %226 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %227 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %1, %"class.SkSL::MemoryLayout"* dereferenceable(4) %226) #14
  %228 = bitcast i32* %55 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %228)
  store i32 %227, i32* %55, align 4
  %229 = bitcast %"class.SkSL::OutputStream"* %7 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %230 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %229, align 8
  %231 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %230, i64 3
  %232 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %231, align 8
  call void %232(%"class.SkSL::OutputStream"* %7, i8* nonnull %228, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %228)
  %233 = bitcast i32* %54 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %233)
  store i32 %221, i32* %54, align 4
  %234 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %229, align 8
  %235 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %234, i64 3
  %236 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %235, align 8
  call void %236(%"class.SkSL::OutputStream"* %7, i8* nonnull %233, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %233)
  %237 = load i32, i32* %223, align 8
  %238 = icmp sgt i32 %237, 0
  br i1 %238, label %239, label %595

239:                                              ; preds = %219
  %240 = bitcast i32* %53 to i8*
  br label %241

241:                                              ; preds = %239, %241
  %242 = phi i32 [ 0, %239 ], [ %246, %241 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %240)
  store i32 %5, i32* %53, align 4
  %243 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %229, align 8
  %244 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %243, i64 3
  %245 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %244, align 8
  call void %245(%"class.SkSL::OutputStream"* %7, i8* nonnull %240, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %240)
  %246 = add nuw nsw i32 %242, 1
  %247 = load i32, i32* %223, align 8
  %248 = icmp slt i32 %246, %247
  br i1 %248, label %241, label %595

249:                                              ; preds = %85, %81
  %250 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %4, i64 0, i32 3
  %251 = load i32, i32* %250, align 8
  %252 = icmp eq i32 %251, 11
  br i1 %252, label %253, label %404

253:                                              ; preds = %249
  %254 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 4
  %255 = load i32, i32* %254, align 4
  %256 = icmp ult i32 %255, 3
  br i1 %256, label %257, label %404

257:                                              ; preds = %253
  %258 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %6, i64 0, i32 6
  %259 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %258, align 8
  %260 = icmp eq %"class.SkSL::Type"* %259, null
  %261 = select i1 %260, %"class.SkSL::Type"* %6, %"class.SkSL::Type"* %259
  %262 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %261, i64 0, i32 4
  %263 = load i32, i32* %262, align 4
  %264 = icmp eq i32 %263, 0
  %265 = icmp eq i32 %3, 48
  %266 = and i1 %265, %264
  br i1 %266, label %267, label %328

267:                                              ; preds = %257
  %268 = icmp eq %"class.SkSL::Type"* %6, null
  br i1 %268, label %305, label %269

269:                                              ; preds = %267
  br i1 %260, label %275, label %270

270:                                              ; preds = %269, %270
  %271 = phi %"class.SkSL::Type"* [ %273, %270 ], [ %259, %269 ]
  %272 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %271, i64 0, i32 6
  %273 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %272, align 8
  %274 = icmp eq %"class.SkSL::Type"* %273, null
  br i1 %274, label %275, label %270

275:                                              ; preds = %270, %269
  %276 = phi %"class.SkSL::Type"* [ %6, %269 ], [ %271, %270 ]
  %277 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %276, i64 0, i32 16
  %278 = load i8, i8* %277, align 8, !range !2
  %279 = icmp eq i8 %278, 0
  br i1 %279, label %280, label %305

280:                                              ; preds = %275
  %281 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 1
  %282 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %281, align 8
  %283 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %282, i64 0, i32 1, i32 0, i32 0, i32 0
  %284 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %283, align 8
  %285 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %284, i64 0, i32 1, i32 3
  %286 = load i8, i8* %285, align 1, !range !2
  %287 = icmp eq i8 %286, 0
  br i1 %287, label %288, label %305

288:                                              ; preds = %280
  %289 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %290 = load i32, i32* %289, align 8
  %291 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %292 = bitcast i32* %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %292) #14
  store i32 196679, i32* %50, align 4
  %293 = bitcast %"class.SkSL::OutputStream"* %291 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %294 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %293, align 8
  %295 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %294, i64 3
  %296 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %295, align 8
  call void %296(%"class.SkSL::OutputStream"* %291, i8* nonnull %292, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %292) #14
  %297 = bitcast i32* %52 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %297) #14
  store i32 %290, i32* %52, align 4
  %298 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %293, align 8
  %299 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %298, i64 3
  %300 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %299, align 8
  call void %300(%"class.SkSL::OutputStream"* %291, i8* nonnull %297, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %297) #14
  %301 = bitcast i32* %51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %301) #14
  store i32 0, i32* %51, align 4
  %302 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %293, align 8
  %303 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %302, i64 3
  %304 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %303, align 8
  call void %304(%"class.SkSL::OutputStream"* %291, i8* nonnull %301, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %301) #14
  br label %305

305:                                              ; preds = %267, %275, %280, %288
  %306 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %307 = load i32, i32* %306, align 8
  %308 = add i32 %307, 1
  store i32 %308, i32* %306, align 8
  %309 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %310 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %6, %"class.SkSL::MemoryLayout"* dereferenceable(4) %309) #14
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 142, i32 5, %"class.SkSL::OutputStream"* dereferenceable(8) %7) #14
  %311 = bitcast i32* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %311) #14
  store i32 %310, i32* %49, align 4
  %312 = bitcast %"class.SkSL::OutputStream"* %7 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %313 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %312, align 8
  %314 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %313, i64 3
  %315 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %314, align 8
  call void %315(%"class.SkSL::OutputStream"* %7, i8* nonnull %311, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %311) #14
  %316 = bitcast i32* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %316) #14
  store i32 %307, i32* %48, align 4
  %317 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %312, align 8
  %318 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %317, i64 3
  %319 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %318, align 8
  call void %319(%"class.SkSL::OutputStream"* %7, i8* nonnull %316, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %316) #14
  %320 = bitcast i32* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %320) #14
  store i32 %5, i32* %47, align 4
  %321 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %312, align 8
  %322 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %321, i64 3
  %323 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %322, align 8
  call void %323(%"class.SkSL::OutputStream"* %7, i8* nonnull %320, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %320) #14
  %324 = bitcast i32* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %324) #14
  store i32 %2, i32* %46, align 4
  %325 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %312, align 8
  %326 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %325, i64 3
  %327 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %326, align 8
  call void %327(%"class.SkSL::OutputStream"* %7, i8* nonnull %324, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %324) #14
  br label %842

328:                                              ; preds = %257
  %329 = icmp eq %"class.SkSL::Type"* %4, null
  br i1 %329, label %374, label %330

330:                                              ; preds = %328
  %331 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %4, i64 0, i32 6
  %332 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %331, align 8
  %333 = icmp eq %"class.SkSL::Type"* %332, null
  %334 = select i1 %333, %"class.SkSL::Type"* %4, %"class.SkSL::Type"* %332
  %335 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %334, i64 0, i32 4
  %336 = load i32, i32* %335, align 4
  %337 = icmp ult i32 %336, 3
  br i1 %337, label %338, label %374

338:                                              ; preds = %330
  br i1 %333, label %344, label %339

339:                                              ; preds = %338, %339
  %340 = phi %"class.SkSL::Type"* [ %342, %339 ], [ %332, %338 ]
  %341 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %340, i64 0, i32 6
  %342 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %341, align 8
  %343 = icmp eq %"class.SkSL::Type"* %342, null
  br i1 %343, label %344, label %339

344:                                              ; preds = %339, %338
  %345 = phi %"class.SkSL::Type"* [ %4, %338 ], [ %340, %339 ]
  %346 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %345, i64 0, i32 16
  %347 = load i8, i8* %346, align 8, !range !2
  %348 = icmp eq i8 %347, 0
  br i1 %348, label %349, label %374

349:                                              ; preds = %344
  %350 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 1
  %351 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %350, align 8
  %352 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %351, i64 0, i32 1, i32 0, i32 0, i32 0
  %353 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %352, align 8
  %354 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %353, i64 0, i32 1, i32 3
  %355 = load i8, i8* %354, align 1, !range !2
  %356 = icmp eq i8 %355, 0
  br i1 %356, label %357, label %374

357:                                              ; preds = %349
  %358 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %359 = load i32, i32* %358, align 8
  %360 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %361 = bitcast i32* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %361) #14
  store i32 196679, i32* %43, align 4
  %362 = bitcast %"class.SkSL::OutputStream"* %360 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %363 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %362, align 8
  %364 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %363, i64 3
  %365 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %364, align 8
  call void %365(%"class.SkSL::OutputStream"* %360, i8* nonnull %361, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %361) #14
  %366 = bitcast i32* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %366) #14
  store i32 %359, i32* %45, align 4
  %367 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %362, align 8
  %368 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %367, i64 3
  %369 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %368, align 8
  call void %369(%"class.SkSL::OutputStream"* %360, i8* nonnull %366, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %366) #14
  %370 = bitcast i32* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %370) #14
  store i32 0, i32* %44, align 4
  %371 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %362, align 8
  %372 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %371, i64 3
  %373 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %372, align 8
  call void %373(%"class.SkSL::OutputStream"* %360, i8* nonnull %370, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %370) #14
  br label %374

374:                                              ; preds = %330, %328, %344, %349, %357
  %375 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %376 = load i32, i32* %375, align 8
  %377 = add i32 %376, 1
  store i32 %377, i32* %375, align 8
  %378 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %4, i64 0, i32 8
  %379 = load i32, i32* %378, align 8
  %380 = add nsw i32 %379, 3
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 80, i32 %380, %"class.SkSL::OutputStream"* dereferenceable(8) %7)
  %381 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %382 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %4, %"class.SkSL::MemoryLayout"* dereferenceable(4) %381) #14
  %383 = bitcast i32* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %383)
  store i32 %382, i32* %42, align 4
  %384 = bitcast %"class.SkSL::OutputStream"* %7 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %385 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %384, align 8
  %386 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %385, i64 3
  %387 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %386, align 8
  call void %387(%"class.SkSL::OutputStream"* %7, i8* nonnull %383, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %383)
  %388 = bitcast i32* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %388)
  store i32 %376, i32* %41, align 4
  %389 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %384, align 8
  %390 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %389, i64 3
  %391 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %390, align 8
  call void %391(%"class.SkSL::OutputStream"* %7, i8* nonnull %388, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %388)
  %392 = load i32, i32* %378, align 8
  %393 = icmp sgt i32 %392, 0
  br i1 %393, label %394, label %595

394:                                              ; preds = %374
  %395 = bitcast i32* %40 to i8*
  br label %396

396:                                              ; preds = %394, %396
  %397 = phi i32 [ 0, %394 ], [ %401, %396 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %395)
  store i32 %2, i32* %40, align 4
  %398 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %384, align 8
  %399 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %398, i64 3
  %400 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %399, align 8
  call void %400(%"class.SkSL::OutputStream"* %7, i8* nonnull %395, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %395)
  %401 = add nuw nsw i32 %397, 1
  %402 = load i32, i32* %378, align 8
  %403 = icmp slt i32 %401, %402
  br i1 %403, label %396, label %595

404:                                              ; preds = %253, %249
  %405 = icmp eq i32 %83, 4
  br i1 %405, label %406, label %487

406:                                              ; preds = %404
  %407 = icmp eq i32 %3, 48
  br i1 %407, label %408, label %484

408:                                              ; preds = %406
  %409 = icmp eq i32 %251, 4
  %410 = select i1 %252, i32 145, i32 143
  %411 = select i1 %409, i32 146, i32 %410
  %412 = icmp eq %"class.SkSL::Type"* %6, null
  br i1 %412, label %461, label %413

413:                                              ; preds = %408
  %414 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %6, i64 0, i32 6
  %415 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %414, align 8
  %416 = icmp eq %"class.SkSL::Type"* %415, null
  %417 = select i1 %416, %"class.SkSL::Type"* %6, %"class.SkSL::Type"* %415
  %418 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %417, i64 0, i32 4
  %419 = load i32, i32* %418, align 4
  %420 = icmp ult i32 %419, 3
  br i1 %420, label %425, label %421

421:                                              ; preds = %413
  %422 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %6, i64 0, i32 3
  %423 = load i32, i32* %422, align 8
  %424 = icmp eq i32 %423, 6
  br i1 %424, label %425, label %461

425:                                              ; preds = %421, %413
  br i1 %416, label %431, label %426

426:                                              ; preds = %425, %426
  %427 = phi %"class.SkSL::Type"* [ %429, %426 ], [ %415, %425 ]
  %428 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %427, i64 0, i32 6
  %429 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %428, align 8
  %430 = icmp eq %"class.SkSL::Type"* %429, null
  br i1 %430, label %431, label %426

431:                                              ; preds = %426, %425
  %432 = phi %"class.SkSL::Type"* [ %6, %425 ], [ %427, %426 ]
  %433 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %432, i64 0, i32 16
  %434 = load i8, i8* %433, align 8, !range !2
  %435 = icmp eq i8 %434, 0
  br i1 %435, label %436, label %461

436:                                              ; preds = %431
  %437 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 1
  %438 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %437, align 8
  %439 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %438, i64 0, i32 1, i32 0, i32 0, i32 0
  %440 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %439, align 8
  %441 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %440, i64 0, i32 1, i32 3
  %442 = load i8, i8* %441, align 1, !range !2
  %443 = icmp eq i8 %442, 0
  br i1 %443, label %444, label %461

444:                                              ; preds = %436
  %445 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %446 = load i32, i32* %445, align 8
  %447 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %448 = bitcast i32* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %448) #14
  store i32 196679, i32* %37, align 4
  %449 = bitcast %"class.SkSL::OutputStream"* %447 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %450 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %449, align 8
  %451 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %450, i64 3
  %452 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %451, align 8
  call void %452(%"class.SkSL::OutputStream"* %447, i8* nonnull %448, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %448) #14
  %453 = bitcast i32* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %453) #14
  store i32 %446, i32* %39, align 4
  %454 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %449, align 8
  %455 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %454, i64 3
  %456 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %455, align 8
  call void %456(%"class.SkSL::OutputStream"* %447, i8* nonnull %453, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %453) #14
  %457 = bitcast i32* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %457) #14
  store i32 0, i32* %38, align 4
  %458 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %449, align 8
  %459 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %458, i64 3
  %460 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %459, align 8
  call void %460(%"class.SkSL::OutputStream"* %447, i8* nonnull %457, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %457) #14
  br label %461

461:                                              ; preds = %408, %421, %431, %436, %444
  %462 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %463 = load i32, i32* %462, align 8
  %464 = add i32 %463, 1
  store i32 %464, i32* %462, align 8
  %465 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %466 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %6, %"class.SkSL::MemoryLayout"* dereferenceable(4) %465) #14
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 %411, i32 5, %"class.SkSL::OutputStream"* dereferenceable(8) %7) #14
  %467 = bitcast i32* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %467) #14
  store i32 %466, i32* %36, align 4
  %468 = bitcast %"class.SkSL::OutputStream"* %7 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %469 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %468, align 8
  %470 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %469, i64 3
  %471 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %470, align 8
  call void %471(%"class.SkSL::OutputStream"* %7, i8* nonnull %467, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %467) #14
  %472 = bitcast i32* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %472) #14
  store i32 %463, i32* %35, align 4
  %473 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %468, align 8
  %474 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %473, i64 3
  %475 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %474, align 8
  call void %475(%"class.SkSL::OutputStream"* %7, i8* nonnull %472, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %472) #14
  %476 = bitcast i32* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %476) #14
  store i32 %2, i32* %34, align 4
  %477 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %468, align 8
  %478 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %477, i64 3
  %479 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %478, align 8
  call void %479(%"class.SkSL::OutputStream"* %7, i8* nonnull %476, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %476) #14
  %480 = bitcast i32* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %480) #14
  store i32 %5, i32* %33, align 4
  %481 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %468, align 8
  %482 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %481, i64 3
  %483 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %482, align 8
  call void %483(%"class.SkSL::OutputStream"* %7, i8* nonnull %480, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %480) #14
  br label %842

484:                                              ; preds = %406
  %485 = call i32 @_ZN4SkSL18SPIRVCodeGenerator24writeScalarToMatrixSplatERKNS_4TypeEjRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %1, i32 %5, %"class.SkSL::OutputStream"* dereferenceable(8) %7)
  %486 = call i32 @_ZN4SkSL18SPIRVCodeGenerator21writeBinaryExpressionERKNS_4TypeEjNS_8OperatorES3_jS3_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %1, i32 %2, i32 %3, %"class.SkSL::Type"* dereferenceable(184) %1, i32 %485, %"class.SkSL::Type"* dereferenceable(184) %6, %"class.SkSL::OutputStream"* dereferenceable(8) %7)
  br label %842

487:                                              ; preds = %404
  %488 = icmp eq i32 %251, 4
  br i1 %488, label %489, label %588

489:                                              ; preds = %487
  %490 = icmp eq i32 %3, 48
  br i1 %490, label %491, label %585

491:                                              ; preds = %489
  %492 = icmp eq %"class.SkSL::Type"* %6, null
  br i1 %492, label %541, label %493

493:                                              ; preds = %491
  %494 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %6, i64 0, i32 6
  %495 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %494, align 8
  %496 = icmp eq %"class.SkSL::Type"* %495, null
  %497 = select i1 %496, %"class.SkSL::Type"* %6, %"class.SkSL::Type"* %495
  %498 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %497, i64 0, i32 4
  %499 = load i32, i32* %498, align 4
  %500 = icmp ult i32 %499, 3
  br i1 %500, label %505, label %501

501:                                              ; preds = %493
  %502 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %6, i64 0, i32 3
  %503 = load i32, i32* %502, align 8
  %504 = icmp eq i32 %503, 6
  br i1 %504, label %505, label %541

505:                                              ; preds = %501, %493
  br i1 %496, label %511, label %506

506:                                              ; preds = %505, %506
  %507 = phi %"class.SkSL::Type"* [ %509, %506 ], [ %495, %505 ]
  %508 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %507, i64 0, i32 6
  %509 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %508, align 8
  %510 = icmp eq %"class.SkSL::Type"* %509, null
  br i1 %510, label %511, label %506

511:                                              ; preds = %506, %505
  %512 = phi %"class.SkSL::Type"* [ %6, %505 ], [ %507, %506 ]
  %513 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %512, i64 0, i32 16
  %514 = load i8, i8* %513, align 8, !range !2
  %515 = icmp eq i8 %514, 0
  br i1 %515, label %516, label %541

516:                                              ; preds = %511
  %517 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 1
  %518 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %517, align 8
  %519 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %518, i64 0, i32 1, i32 0, i32 0, i32 0
  %520 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %519, align 8
  %521 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %520, i64 0, i32 1, i32 3
  %522 = load i8, i8* %521, align 1, !range !2
  %523 = icmp eq i8 %522, 0
  br i1 %523, label %524, label %541

524:                                              ; preds = %516
  %525 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %526 = load i32, i32* %525, align 8
  %527 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %528 = bitcast i32* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %528) #14
  store i32 196679, i32* %30, align 4
  %529 = bitcast %"class.SkSL::OutputStream"* %527 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %530 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %529, align 8
  %531 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %530, i64 3
  %532 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %531, align 8
  call void %532(%"class.SkSL::OutputStream"* %527, i8* nonnull %528, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %528) #14
  %533 = bitcast i32* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %533) #14
  store i32 %526, i32* %32, align 4
  %534 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %529, align 8
  %535 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %534, i64 3
  %536 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %535, align 8
  call void %536(%"class.SkSL::OutputStream"* %527, i8* nonnull %533, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %533) #14
  %537 = bitcast i32* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %537) #14
  store i32 0, i32* %31, align 4
  %538 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %529, align 8
  %539 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %538, i64 3
  %540 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %539, align 8
  call void %540(%"class.SkSL::OutputStream"* %527, i8* nonnull %537, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %537) #14
  br label %541

541:                                              ; preds = %491, %501, %511, %516, %524
  %542 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %543 = load i32, i32* %542, align 8
  %544 = add i32 %543, 1
  store i32 %544, i32* %542, align 8
  %545 = load i32, i32* %82, align 8
  %546 = icmp eq i32 %545, 11
  %547 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %548 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %6, %"class.SkSL::MemoryLayout"* dereferenceable(4) %547) #14
  br i1 %546, label %549, label %567

549:                                              ; preds = %541
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 144, i32 5, %"class.SkSL::OutputStream"* dereferenceable(8) %7) #14
  %550 = bitcast i32* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %550) #14
  store i32 %548, i32* %29, align 4
  %551 = bitcast %"class.SkSL::OutputStream"* %7 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %552 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %551, align 8
  %553 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %552, i64 3
  %554 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %553, align 8
  call void %554(%"class.SkSL::OutputStream"* %7, i8* nonnull %550, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %550) #14
  %555 = bitcast i32* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %555) #14
  store i32 %543, i32* %28, align 4
  %556 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %551, align 8
  %557 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %556, i64 3
  %558 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %557, align 8
  call void %558(%"class.SkSL::OutputStream"* %7, i8* nonnull %555, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %555) #14
  %559 = bitcast i32* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %559) #14
  store i32 %2, i32* %27, align 4
  %560 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %551, align 8
  %561 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %560, i64 3
  %562 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %561, align 8
  call void %562(%"class.SkSL::OutputStream"* %7, i8* nonnull %559, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %559) #14
  %563 = bitcast i32* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %563) #14
  store i32 %5, i32* %26, align 4
  %564 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %551, align 8
  %565 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %564, i64 3
  %566 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %565, align 8
  call void %566(%"class.SkSL::OutputStream"* %7, i8* nonnull %563, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %563) #14
  br label %842

567:                                              ; preds = %541
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 143, i32 5, %"class.SkSL::OutputStream"* dereferenceable(8) %7) #14
  %568 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %568) #14
  store i32 %548, i32* %25, align 4
  %569 = bitcast %"class.SkSL::OutputStream"* %7 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %570 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %569, align 8
  %571 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %570, i64 3
  %572 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %571, align 8
  call void %572(%"class.SkSL::OutputStream"* %7, i8* nonnull %568, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %568) #14
  %573 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %573) #14
  store i32 %543, i32* %24, align 4
  %574 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %569, align 8
  %575 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %574, i64 3
  %576 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %575, align 8
  call void %576(%"class.SkSL::OutputStream"* %7, i8* nonnull %573, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %573) #14
  %577 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %577) #14
  store i32 %5, i32* %23, align 4
  %578 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %569, align 8
  %579 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %578, i64 3
  %580 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %579, align 8
  call void %580(%"class.SkSL::OutputStream"* %7, i8* nonnull %577, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %577) #14
  %581 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %581) #14
  store i32 %2, i32* %22, align 4
  %582 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %569, align 8
  %583 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %582, i64 3
  %584 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %583, align 8
  call void %584(%"class.SkSL::OutputStream"* %7, i8* nonnull %581, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %581) #14
  br label %842

585:                                              ; preds = %489
  %586 = call i32 @_ZN4SkSL18SPIRVCodeGenerator24writeScalarToMatrixSplatERKNS_4TypeEjRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %4, i32 %2, %"class.SkSL::OutputStream"* dereferenceable(8) %7)
  %587 = call i32 @_ZN4SkSL18SPIRVCodeGenerator21writeBinaryExpressionERKNS_4TypeEjNS_8OperatorES3_jS3_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %4, i32 %586, i32 %3, %"class.SkSL::Type"* dereferenceable(184) %4, i32 %5, %"class.SkSL::Type"* dereferenceable(184) %6, %"class.SkSL::OutputStream"* dereferenceable(8) %7)
  br label %842

588:                                              ; preds = %487
  %589 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 2
  %590 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %589, align 8
  %591 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 0, i32 0, i32 1
  %592 = load i32, i32* %591, align 8
  call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %590, i32 %592, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.25, i64 0, i64 0))
  br label %842

593:                                              ; preds = %68
  %594 = call dereferenceable(184) %"class.SkSL::Type"* @_ZN4SkSL18SPIRVCodeGenerator13getActualTypeERKNS_4TypeE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %1)
  br label %595

595:                                              ; preds = %396, %241, %374, %219, %593
  %596 = phi %"class.SkSL::Type"* [ %594, %593 ], [ %1, %219 ], [ %4, %374 ], [ %1, %241 ], [ %4, %396 ]
  %597 = phi i32 [ %5, %593 ], [ %221, %219 ], [ %5, %374 ], [ %221, %241 ], [ %5, %396 ]
  %598 = phi i32 [ %2, %593 ], [ %2, %219 ], [ %376, %374 ], [ %2, %241 ], [ %376, %396 ]
  switch i32 %3, label %839 [
    i32 65, label %602
    i32 66, label %649
    i32 58, label %599
    i32 67, label %700
    i32 68, label %702
    i32 69, label %704
    i32 70, label %706
    i32 46, label %708
    i32 47, label %720
    i32 48, label %732
    i32 49, label %815
    i32 50, label %827
    i32 51, label %829
    i32 52, label %831
    i32 55, label %833
    i32 53, label %835
    i32 54, label %837
  ]

599:                                              ; preds = %595
  %600 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %596, i64 0, i32 3
  %601 = load i32, i32* %600, align 8
  br label %658

602:                                              ; preds = %595
  %603 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %596, i64 0, i32 3
  %604 = load i32, i32* %603, align 8
  switch i32 %604, label %621 [
    i32 4, label %605
    i32 9, label %607
    i32 0, label %609
    i32 11, label %611
  ]

605:                                              ; preds = %602
  %606 = call i32 @_ZN4SkSL18SPIRVCodeGenerator21writeMatrixComparisonERKNS_4TypeEjj6SpvOp_S4_S4_S4_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %596, i32 %598, i32 %597, i32 180, i32 170, i32 155, i32 167, %"class.SkSL::OutputStream"* dereferenceable(8) %7)
  br label %842

607:                                              ; preds = %602
  %608 = call i32 @_ZN4SkSL18SPIRVCodeGenerator21writeStructComparisonERKNS_4TypeEjNS_8OperatorEjRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %596, i32 %598, i32 65, i32 %597, %"class.SkSL::OutputStream"* dereferenceable(8) %7)
  br label %842

609:                                              ; preds = %602
  %610 = call i32 @_ZN4SkSL18SPIRVCodeGenerator20writeArrayComparisonERKNS_4TypeEjNS_8OperatorEjRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %596, i32 %598, i32 65, i32 %597, %"class.SkSL::OutputStream"* dereferenceable(8) %7)
  br label %842

611:                                              ; preds = %602
  %612 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 1
  %613 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %612, align 8
  %614 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %613, i64 0, i32 0, i32 24, i32 0, i32 0, i32 0
  %615 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %614, align 8
  %616 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %596, i64 0, i32 8
  %617 = load i32, i32* %616, align 8
  %618 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %596, i64 0, i32 9
  %619 = load i32, i32* %618, align 4
  %620 = call dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL4Type10toCompoundERKNS_7ContextEii(%"class.SkSL::Type"* %615, %"class.SkSL::Context"* dereferenceable(744) %613, i32 %617, i32 %619) #14
  br label %621

621:                                              ; preds = %602, %611
  %622 = phi %"class.SkSL::Type"* [ %620, %611 ], [ %6, %602 ]
  %623 = call i32 @_ZN4SkSL18SPIRVCodeGenerator20writeBinaryOperationERKNS_4TypeES3_jj6SpvOp_S4_S4_S4_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %622, %"class.SkSL::Type"* dereferenceable(184) %596, i32 %598, i32 %597, i32 180, i32 170, i32 170, i32 164, %"class.SkSL::OutputStream"* dereferenceable(8) %7)
  %624 = load i32, i32* %603, align 8
  %625 = icmp eq i32 %624, 11
  br i1 %625, label %626, label %842

626:                                              ; preds = %621
  %627 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %628 = load i32, i32* %627, align 8
  %629 = add i32 %628, 1
  store i32 %629, i32* %627, align 8
  %630 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 1
  %631 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %630, align 8
  %632 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %631, i64 0, i32 0, i32 24, i32 0, i32 0, i32 0
  %633 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %632, align 8
  %634 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %635 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %633, %"class.SkSL::MemoryLayout"* dereferenceable(4) %634) #14
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 155, i32 4, %"class.SkSL::OutputStream"* dereferenceable(8) %7) #14
  %636 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %636) #14
  store i32 %635, i32* %21, align 4
  %637 = bitcast %"class.SkSL::OutputStream"* %7 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %638 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %637, align 8
  %639 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %638, i64 3
  %640 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %639, align 8
  call void %640(%"class.SkSL::OutputStream"* %7, i8* nonnull %636, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %636) #14
  %641 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %641) #14
  store i32 %628, i32* %20, align 4
  %642 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %637, align 8
  %643 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %642, i64 3
  %644 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %643, align 8
  call void %644(%"class.SkSL::OutputStream"* %7, i8* nonnull %641, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %641) #14
  %645 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %645) #14
  store i32 %623, i32* %19, align 4
  %646 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %637, align 8
  %647 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %646, i64 3
  %648 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %647, align 8
  call void %648(%"class.SkSL::OutputStream"* %7, i8* nonnull %645, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %645) #14
  br label %842

649:                                              ; preds = %595
  %650 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %596, i64 0, i32 3
  %651 = load i32, i32* %650, align 8
  switch i32 %651, label %658 [
    i32 4, label %652
    i32 9, label %654
    i32 0, label %656
  ]

652:                                              ; preds = %649
  %653 = call i32 @_ZN4SkSL18SPIRVCodeGenerator21writeMatrixComparisonERKNS_4TypeEjj6SpvOp_S4_S4_S4_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %596, i32 %598, i32 %597, i32 182, i32 171, i32 154, i32 166, %"class.SkSL::OutputStream"* dereferenceable(8) %7)
  br label %842

654:                                              ; preds = %649
  %655 = call i32 @_ZN4SkSL18SPIRVCodeGenerator21writeStructComparisonERKNS_4TypeEjNS_8OperatorEjRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %596, i32 %598, i32 66, i32 %597, %"class.SkSL::OutputStream"* dereferenceable(8) %7)
  br label %842

656:                                              ; preds = %649
  %657 = call i32 @_ZN4SkSL18SPIRVCodeGenerator20writeArrayComparisonERKNS_4TypeEjNS_8OperatorEjRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %596, i32 %598, i32 66, i32 %597, %"class.SkSL::OutputStream"* dereferenceable(8) %7)
  br label %842

658:                                              ; preds = %599, %649
  %659 = phi i32 [ %601, %599 ], [ %651, %649 ]
  %660 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %596, i64 0, i32 3
  %661 = icmp eq i32 %659, 11
  br i1 %661, label %662, label %672

662:                                              ; preds = %658
  %663 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 1
  %664 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %663, align 8
  %665 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %664, i64 0, i32 0, i32 24, i32 0, i32 0, i32 0
  %666 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %665, align 8
  %667 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %596, i64 0, i32 8
  %668 = load i32, i32* %667, align 8
  %669 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %596, i64 0, i32 9
  %670 = load i32, i32* %669, align 4
  %671 = call dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL4Type10toCompoundERKNS_7ContextEii(%"class.SkSL::Type"* %666, %"class.SkSL::Context"* dereferenceable(744) %664, i32 %668, i32 %670) #14
  br label %672

672:                                              ; preds = %658, %662
  %673 = phi %"class.SkSL::Type"* [ %671, %662 ], [ %6, %658 ]
  %674 = call i32 @_ZN4SkSL18SPIRVCodeGenerator20writeBinaryOperationERKNS_4TypeES3_jj6SpvOp_S4_S4_S4_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %673, %"class.SkSL::Type"* dereferenceable(184) %596, i32 %598, i32 %597, i32 182, i32 171, i32 171, i32 165, %"class.SkSL::OutputStream"* dereferenceable(8) %7)
  %675 = load i32, i32* %660, align 8
  %676 = icmp eq i32 %675, 11
  br i1 %676, label %677, label %842

677:                                              ; preds = %672
  %678 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %679 = load i32, i32* %678, align 8
  %680 = add i32 %679, 1
  store i32 %680, i32* %678, align 8
  %681 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 1
  %682 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %681, align 8
  %683 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %682, i64 0, i32 0, i32 24, i32 0, i32 0, i32 0
  %684 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %683, align 8
  %685 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %686 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %684, %"class.SkSL::MemoryLayout"* dereferenceable(4) %685) #14
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 154, i32 4, %"class.SkSL::OutputStream"* dereferenceable(8) %7) #14
  %687 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %687) #14
  store i32 %686, i32* %18, align 4
  %688 = bitcast %"class.SkSL::OutputStream"* %7 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %689 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %688, align 8
  %690 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %689, i64 3
  %691 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %690, align 8
  call void %691(%"class.SkSL::OutputStream"* %7, i8* nonnull %687, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %687) #14
  %692 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %692) #14
  store i32 %679, i32* %17, align 4
  %693 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %688, align 8
  %694 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %693, i64 3
  %695 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %694, align 8
  call void %695(%"class.SkSL::OutputStream"* %7, i8* nonnull %692, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %692) #14
  %696 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %696) #14
  store i32 %674, i32* %16, align 4
  %697 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %688, align 8
  %698 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %697, i64 3
  %699 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %698, align 8
  call void %699(%"class.SkSL::OutputStream"* %7, i8* nonnull %696, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %696) #14
  br label %842

700:                                              ; preds = %595
  %701 = call i32 @_ZN4SkSL18SPIRVCodeGenerator20writeBinaryOperationERKNS_4TypeES3_jj6SpvOp_S4_S4_S4_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %6, %"class.SkSL::Type"* dereferenceable(184) %596, i32 %598, i32 %597, i32 186, i32 173, i32 172, i32 1, %"class.SkSL::OutputStream"* dereferenceable(8) %7)
  br label %842

702:                                              ; preds = %595
  %703 = call i32 @_ZN4SkSL18SPIRVCodeGenerator20writeBinaryOperationERKNS_4TypeES3_jj6SpvOp_S4_S4_S4_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %6, %"class.SkSL::Type"* dereferenceable(184) %596, i32 %598, i32 %597, i32 184, i32 177, i32 176, i32 1, %"class.SkSL::OutputStream"* dereferenceable(8) %7)
  br label %842

704:                                              ; preds = %595
  %705 = call i32 @_ZN4SkSL18SPIRVCodeGenerator20writeBinaryOperationERKNS_4TypeES3_jj6SpvOp_S4_S4_S4_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %6, %"class.SkSL::Type"* dereferenceable(184) %596, i32 %598, i32 %597, i32 190, i32 175, i32 174, i32 1, %"class.SkSL::OutputStream"* dereferenceable(8) %7)
  br label %842

706:                                              ; preds = %595
  %707 = call i32 @_ZN4SkSL18SPIRVCodeGenerator20writeBinaryOperationERKNS_4TypeES3_jj6SpvOp_S4_S4_S4_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %6, %"class.SkSL::Type"* dereferenceable(184) %596, i32 %598, i32 %597, i32 188, i32 179, i32 178, i32 1, %"class.SkSL::OutputStream"* dereferenceable(8) %7)
  br label %842

708:                                              ; preds = %595
  %709 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 3
  %710 = load i32, i32* %709, align 8
  %711 = icmp eq i32 %710, 4
  br i1 %711, label %712, label %718

712:                                              ; preds = %708
  %713 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %4, i64 0, i32 3
  %714 = load i32, i32* %713, align 8
  %715 = icmp eq i32 %714, 4
  br i1 %715, label %716, label %718

716:                                              ; preds = %712
  %717 = call i32 @_ZN4SkSL18SPIRVCodeGenerator30writeComponentwiseMatrixBinaryERKNS_4TypeEjj6SpvOp_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %1, i32 %598, i32 %597, i32 129, %"class.SkSL::OutputStream"* dereferenceable(8) %7)
  br label %842

718:                                              ; preds = %712, %708
  %719 = call i32 @_ZN4SkSL18SPIRVCodeGenerator20writeBinaryOperationERKNS_4TypeES3_jj6SpvOp_S4_S4_S4_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %6, %"class.SkSL::Type"* dereferenceable(184) %596, i32 %598, i32 %597, i32 129, i32 128, i32 128, i32 1, %"class.SkSL::OutputStream"* dereferenceable(8) %7)
  br label %842

720:                                              ; preds = %595
  %721 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 3
  %722 = load i32, i32* %721, align 8
  %723 = icmp eq i32 %722, 4
  br i1 %723, label %724, label %730

724:                                              ; preds = %720
  %725 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %4, i64 0, i32 3
  %726 = load i32, i32* %725, align 8
  %727 = icmp eq i32 %726, 4
  br i1 %727, label %728, label %730

728:                                              ; preds = %724
  %729 = call i32 @_ZN4SkSL18SPIRVCodeGenerator30writeComponentwiseMatrixBinaryERKNS_4TypeEjj6SpvOp_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %1, i32 %598, i32 %597, i32 131, %"class.SkSL::OutputStream"* dereferenceable(8) %7)
  br label %842

730:                                              ; preds = %724, %720
  %731 = call i32 @_ZN4SkSL18SPIRVCodeGenerator20writeBinaryOperationERKNS_4TypeES3_jj6SpvOp_S4_S4_S4_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %6, %"class.SkSL::Type"* dereferenceable(184) %596, i32 %598, i32 %597, i32 131, i32 130, i32 130, i32 1, %"class.SkSL::OutputStream"* dereferenceable(8) %7)
  br label %842

732:                                              ; preds = %595
  %733 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 3
  %734 = load i32, i32* %733, align 8
  %735 = icmp eq i32 %734, 4
  br i1 %735, label %736, label %813

736:                                              ; preds = %732
  %737 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %4, i64 0, i32 3
  %738 = load i32, i32* %737, align 8
  %739 = icmp eq i32 %738, 4
  br i1 %739, label %740, label %813

740:                                              ; preds = %736
  %741 = icmp eq %"class.SkSL::Type"* %6, null
  br i1 %741, label %790, label %742

742:                                              ; preds = %740
  %743 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %6, i64 0, i32 6
  %744 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %743, align 8
  %745 = icmp eq %"class.SkSL::Type"* %744, null
  %746 = select i1 %745, %"class.SkSL::Type"* %6, %"class.SkSL::Type"* %744
  %747 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %746, i64 0, i32 4
  %748 = load i32, i32* %747, align 4
  %749 = icmp ult i32 %748, 3
  br i1 %749, label %754, label %750

750:                                              ; preds = %742
  %751 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %6, i64 0, i32 3
  %752 = load i32, i32* %751, align 8
  %753 = icmp eq i32 %752, 6
  br i1 %753, label %754, label %790

754:                                              ; preds = %750, %742
  br i1 %745, label %760, label %755

755:                                              ; preds = %754, %755
  %756 = phi %"class.SkSL::Type"* [ %758, %755 ], [ %744, %754 ]
  %757 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %756, i64 0, i32 6
  %758 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %757, align 8
  %759 = icmp eq %"class.SkSL::Type"* %758, null
  br i1 %759, label %760, label %755

760:                                              ; preds = %755, %754
  %761 = phi %"class.SkSL::Type"* [ %6, %754 ], [ %756, %755 ]
  %762 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %761, i64 0, i32 16
  %763 = load i8, i8* %762, align 8, !range !2
  %764 = icmp eq i8 %763, 0
  br i1 %764, label %765, label %790

765:                                              ; preds = %760
  %766 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 1
  %767 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %766, align 8
  %768 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %767, i64 0, i32 1, i32 0, i32 0, i32 0
  %769 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %768, align 8
  %770 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %769, i64 0, i32 1, i32 3
  %771 = load i8, i8* %770, align 1, !range !2
  %772 = icmp eq i8 %771, 0
  br i1 %772, label %773, label %790

773:                                              ; preds = %765
  %774 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %775 = load i32, i32* %774, align 8
  %776 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %777 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %777) #14
  store i32 196679, i32* %13, align 4
  %778 = bitcast %"class.SkSL::OutputStream"* %776 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %779 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %778, align 8
  %780 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %779, i64 3
  %781 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %780, align 8
  call void %781(%"class.SkSL::OutputStream"* %776, i8* nonnull %777, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %777) #14
  %782 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %782) #14
  store i32 %775, i32* %15, align 4
  %783 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %778, align 8
  %784 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %783, i64 3
  %785 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %784, align 8
  call void %785(%"class.SkSL::OutputStream"* %776, i8* nonnull %782, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %782) #14
  %786 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %786) #14
  store i32 0, i32* %14, align 4
  %787 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %778, align 8
  %788 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %787, i64 3
  %789 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %788, align 8
  call void %789(%"class.SkSL::OutputStream"* %776, i8* nonnull %786, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %786) #14
  br label %790

790:                                              ; preds = %740, %750, %760, %765, %773
  %791 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %792 = load i32, i32* %791, align 8
  %793 = add i32 %792, 1
  store i32 %793, i32* %791, align 8
  %794 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %795 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %6, %"class.SkSL::MemoryLayout"* dereferenceable(4) %794) #14
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 146, i32 5, %"class.SkSL::OutputStream"* dereferenceable(8) %7) #14
  %796 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %796) #14
  store i32 %795, i32* %12, align 4
  %797 = bitcast %"class.SkSL::OutputStream"* %7 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %798 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %797, align 8
  %799 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %798, i64 3
  %800 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %799, align 8
  call void %800(%"class.SkSL::OutputStream"* %7, i8* nonnull %796, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %796) #14
  %801 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %801) #14
  store i32 %792, i32* %11, align 4
  %802 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %797, align 8
  %803 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %802, i64 3
  %804 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %803, align 8
  call void %804(%"class.SkSL::OutputStream"* %7, i8* nonnull %801, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %801) #14
  %805 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %805) #14
  store i32 %598, i32* %10, align 4
  %806 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %797, align 8
  %807 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %806, i64 3
  %808 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %807, align 8
  call void %808(%"class.SkSL::OutputStream"* %7, i8* nonnull %805, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %805) #14
  %809 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %809) #14
  store i32 %597, i32* %9, align 4
  %810 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %797, align 8
  %811 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %810, i64 3
  %812 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %811, align 8
  call void %812(%"class.SkSL::OutputStream"* %7, i8* nonnull %809, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %809) #14
  br label %842

813:                                              ; preds = %736, %732
  %814 = call i32 @_ZN4SkSL18SPIRVCodeGenerator20writeBinaryOperationERKNS_4TypeES3_jj6SpvOp_S4_S4_S4_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %6, %"class.SkSL::Type"* dereferenceable(184) %596, i32 %598, i32 %597, i32 133, i32 132, i32 132, i32 1, %"class.SkSL::OutputStream"* dereferenceable(8) %7)
  br label %842

815:                                              ; preds = %595
  %816 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 3
  %817 = load i32, i32* %816, align 8
  %818 = icmp eq i32 %817, 4
  br i1 %818, label %819, label %825

819:                                              ; preds = %815
  %820 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %4, i64 0, i32 3
  %821 = load i32, i32* %820, align 8
  %822 = icmp eq i32 %821, 4
  br i1 %822, label %823, label %825

823:                                              ; preds = %819
  %824 = call i32 @_ZN4SkSL18SPIRVCodeGenerator30writeComponentwiseMatrixBinaryERKNS_4TypeEjj6SpvOp_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %1, i32 %598, i32 %597, i32 136, %"class.SkSL::OutputStream"* dereferenceable(8) %7)
  br label %842

825:                                              ; preds = %819, %815
  %826 = call i32 @_ZN4SkSL18SPIRVCodeGenerator20writeBinaryOperationERKNS_4TypeES3_jj6SpvOp_S4_S4_S4_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %6, %"class.SkSL::Type"* dereferenceable(184) %596, i32 %598, i32 %597, i32 136, i32 135, i32 134, i32 1, %"class.SkSL::OutputStream"* dereferenceable(8) %7)
  br label %842

827:                                              ; preds = %595
  %828 = call i32 @_ZN4SkSL18SPIRVCodeGenerator20writeBinaryOperationERKNS_4TypeES3_jj6SpvOp_S4_S4_S4_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %6, %"class.SkSL::Type"* dereferenceable(184) %596, i32 %598, i32 %597, i32 141, i32 139, i32 137, i32 1, %"class.SkSL::OutputStream"* dereferenceable(8) %7)
  br label %842

829:                                              ; preds = %595
  %830 = call i32 @_ZN4SkSL18SPIRVCodeGenerator20writeBinaryOperationERKNS_4TypeES3_jj6SpvOp_S4_S4_S4_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %6, %"class.SkSL::Type"* dereferenceable(184) %596, i32 %598, i32 %597, i32 1, i32 196, i32 196, i32 1, %"class.SkSL::OutputStream"* dereferenceable(8) %7)
  br label %842

831:                                              ; preds = %595
  %832 = call i32 @_ZN4SkSL18SPIRVCodeGenerator20writeBinaryOperationERKNS_4TypeES3_jj6SpvOp_S4_S4_S4_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %6, %"class.SkSL::Type"* dereferenceable(184) %596, i32 %598, i32 %597, i32 1, i32 195, i32 194, i32 1, %"class.SkSL::OutputStream"* dereferenceable(8) %7)
  br label %842

833:                                              ; preds = %595
  %834 = call i32 @_ZN4SkSL18SPIRVCodeGenerator20writeBinaryOperationERKNS_4TypeES3_jj6SpvOp_S4_S4_S4_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %6, %"class.SkSL::Type"* dereferenceable(184) %596, i32 %598, i32 %597, i32 1, i32 199, i32 199, i32 1, %"class.SkSL::OutputStream"* dereferenceable(8) %7)
  br label %842

835:                                              ; preds = %595
  %836 = call i32 @_ZN4SkSL18SPIRVCodeGenerator20writeBinaryOperationERKNS_4TypeES3_jj6SpvOp_S4_S4_S4_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %6, %"class.SkSL::Type"* dereferenceable(184) %596, i32 %598, i32 %597, i32 1, i32 197, i32 197, i32 1, %"class.SkSL::OutputStream"* dereferenceable(8) %7)
  br label %842

837:                                              ; preds = %595
  %838 = call i32 @_ZN4SkSL18SPIRVCodeGenerator20writeBinaryOperationERKNS_4TypeES3_jj6SpvOp_S4_S4_S4_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %6, %"class.SkSL::Type"* dereferenceable(184) %596, i32 %598, i32 %597, i32 1, i32 198, i32 198, i32 1, %"class.SkSL::OutputStream"* dereferenceable(8) %7)
  br label %842

839:                                              ; preds = %595
  %840 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 2
  %841 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %840, align 8
  call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %841, i32 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.26, i64 0, i64 0))
  br label %842

842:                                              ; preds = %677, %672, %626, %621, %150, %305, %461, %484, %585, %588, %605, %607, %609, %652, %654, %656, %700, %702, %704, %706, %716, %718, %728, %730, %790, %813, %823, %825, %827, %829, %831, %833, %835, %837, %839, %567, %549, %8
  %843 = phi i32 [ %5, %8 ], [ -1, %839 ], [ %838, %837 ], [ %836, %835 ], [ %834, %833 ], [ %832, %831 ], [ %830, %829 ], [ %828, %827 ], [ %824, %823 ], [ %826, %825 ], [ %792, %790 ], [ %814, %813 ], [ %729, %728 ], [ %731, %730 ], [ %717, %716 ], [ %719, %718 ], [ %707, %706 ], [ %705, %704 ], [ %703, %702 ], [ %701, %700 ], [ %653, %652 ], [ %655, %654 ], [ %657, %656 ], [ %606, %605 ], [ %608, %607 ], [ %610, %609 ], [ %152, %150 ], [ %307, %305 ], [ %463, %461 ], [ %486, %484 ], [ %587, %585 ], [ -1, %588 ], [ %543, %567 ], [ %543, %549 ], [ %628, %626 ], [ %623, %621 ], [ %679, %677 ], [ %674, %672 ]
  ret i32 %843
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator21writeStructComparisonERKNS_4TypeEjNS_8OperatorEjRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::Type"* nocapture readonly dereferenceable(184), i32, i32, i32, %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 10
  %22 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 1
  %23 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %22, align 8
  %24 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %23, i64 0, i32 0, i32 24, i32 0, i32 0, i32 0
  %25 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %24, align 8
  %26 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 10, i32 0, i32 1
  %27 = bitcast %"struct.SkSL::Type::Field"** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.std::__1::vector.19"* %21 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 %28, %30
  %32 = sdiv exact i64 %31, 104
  %33 = trunc i64 %32 to i32
  %34 = icmp sgt i32 %33, 0
  br i1 %34, label %35, label %56

35:                                               ; preds = %6
  %36 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %37 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 1
  %38 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %39 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %40 = bitcast i32* %18 to i8*
  %41 = bitcast %"class.SkSL::OutputStream"* %39 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %42 = bitcast i32* %20 to i8*
  %43 = bitcast i32* %19 to i8*
  %44 = bitcast i32* %17 to i8*
  %45 = bitcast %"class.SkSL::OutputStream"* %5 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %46 = bitcast i32* %16 to i8*
  %47 = bitcast i32* %15 to i8*
  %48 = bitcast i32* %14 to i8*
  %49 = bitcast i32* %11 to i8*
  %50 = bitcast i32* %13 to i8*
  %51 = bitcast i32* %12 to i8*
  %52 = bitcast i32* %10 to i8*
  %53 = bitcast i32* %9 to i8*
  %54 = bitcast i32* %8 to i8*
  %55 = bitcast i32* %7 to i8*
  br label %58

56:                                               ; preds = %165, %6
  %57 = phi i32 [ -1, %6 ], [ %181, %165 ]
  ret i32 %57

58:                                               ; preds = %35, %165
  %59 = phi i64 [ %30, %35 ], [ %184, %165 ]
  %60 = phi i64 [ 0, %35 ], [ %182, %165 ]
  %61 = phi i32 [ -1, %35 ], [ %181, %165 ]
  %62 = inttoptr i64 %59 to %"struct.SkSL::Type::Field"*
  %63 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %62, i64 %60, i32 2
  %64 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %63, align 8
  %65 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %64, %"class.SkSL::MemoryLayout"* dereferenceable(4) %36) #14
  %66 = icmp eq %"class.SkSL::Type"* %64, null
  br i1 %66, label %108, label %67

67:                                               ; preds = %58
  %68 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %64, i64 0, i32 6
  %69 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %68, align 8
  %70 = icmp eq %"class.SkSL::Type"* %69, null
  %71 = select i1 %70, %"class.SkSL::Type"* %64, %"class.SkSL::Type"* %69
  %72 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %71, i64 0, i32 4
  %73 = load i32, i32* %72, align 4
  %74 = icmp ult i32 %73, 3
  br i1 %74, label %79, label %75

75:                                               ; preds = %67
  %76 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %64, i64 0, i32 3
  %77 = load i32, i32* %76, align 8
  %78 = icmp eq i32 %77, 6
  br i1 %78, label %79, label %108

79:                                               ; preds = %75, %67
  br i1 %70, label %85, label %80

80:                                               ; preds = %79, %80
  %81 = phi %"class.SkSL::Type"* [ %83, %80 ], [ %69, %79 ]
  %82 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %81, i64 0, i32 6
  %83 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %82, align 8
  %84 = icmp eq %"class.SkSL::Type"* %83, null
  br i1 %84, label %85, label %80

85:                                               ; preds = %80, %79
  %86 = phi %"class.SkSL::Type"* [ %64, %79 ], [ %81, %80 ]
  %87 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %86, i64 0, i32 16
  %88 = load i8, i8* %87, align 8, !range !2
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %90, label %108

90:                                               ; preds = %85
  %91 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %37, align 8
  %92 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %91, i64 0, i32 1, i32 0, i32 0, i32 0
  %93 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %92, align 8
  %94 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %93, i64 0, i32 1, i32 3
  %95 = load i8, i8* %94, align 1, !range !2
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %97, label %108

97:                                               ; preds = %90
  %98 = load i32, i32* %38, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %40) #14
  store i32 196679, i32* %18, align 4
  %99 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %41, align 8
  %100 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %99, i64 3
  %101 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %100, align 8
  call void %101(%"class.SkSL::OutputStream"* %39, i8* nonnull %40, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %42) #14
  store i32 %98, i32* %20, align 4
  %102 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %41, align 8
  %103 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %102, i64 3
  %104 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %103, align 8
  call void %104(%"class.SkSL::OutputStream"* %39, i8* nonnull %42, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %42) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %43) #14
  store i32 0, i32* %19, align 4
  %105 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %41, align 8
  %106 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %105, i64 3
  %107 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %106, align 8
  call void %107(%"class.SkSL::OutputStream"* %39, i8* nonnull %43, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %43) #14
  br label %108

108:                                              ; preds = %58, %75, %85, %90, %97
  %109 = load i32, i32* %38, align 8
  %110 = add i32 %109, 1
  store i32 %110, i32* %38, align 8
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 81, i32 5, %"class.SkSL::OutputStream"* dereferenceable(8) %5) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %44) #14
  store i32 %65, i32* %17, align 4
  %111 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %45, align 8
  %112 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %111, i64 3
  %113 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %112, align 8
  call void %113(%"class.SkSL::OutputStream"* %5, i8* nonnull %44, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %44) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %46) #14
  store i32 %109, i32* %16, align 4
  %114 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %45, align 8
  %115 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %114, i64 3
  %116 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %115, align 8
  call void %116(%"class.SkSL::OutputStream"* %5, i8* nonnull %46, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %46) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %47) #14
  store i32 %2, i32* %15, align 4
  %117 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %45, align 8
  %118 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %117, i64 3
  %119 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %118, align 8
  call void %119(%"class.SkSL::OutputStream"* %5, i8* nonnull %47, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %47) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %48) #14
  %120 = trunc i64 %60 to i32
  store i32 %120, i32* %14, align 4
  %121 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %45, align 8
  %122 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %121, i64 3
  %123 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %122, align 8
  call void %123(%"class.SkSL::OutputStream"* %5, i8* nonnull %48, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %48) #14
  br i1 %66, label %165, label %124

124:                                              ; preds = %108
  %125 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %64, i64 0, i32 6
  %126 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %125, align 8
  %127 = icmp eq %"class.SkSL::Type"* %126, null
  %128 = select i1 %127, %"class.SkSL::Type"* %64, %"class.SkSL::Type"* %126
  %129 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %128, i64 0, i32 4
  %130 = load i32, i32* %129, align 4
  %131 = icmp ult i32 %130, 3
  br i1 %131, label %136, label %132

132:                                              ; preds = %124
  %133 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %64, i64 0, i32 3
  %134 = load i32, i32* %133, align 8
  %135 = icmp eq i32 %134, 6
  br i1 %135, label %136, label %165

136:                                              ; preds = %132, %124
  br i1 %127, label %142, label %137

137:                                              ; preds = %136, %137
  %138 = phi %"class.SkSL::Type"* [ %140, %137 ], [ %126, %136 ]
  %139 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %138, i64 0, i32 6
  %140 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %139, align 8
  %141 = icmp eq %"class.SkSL::Type"* %140, null
  br i1 %141, label %142, label %137

142:                                              ; preds = %137, %136
  %143 = phi %"class.SkSL::Type"* [ %64, %136 ], [ %138, %137 ]
  %144 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %143, i64 0, i32 16
  %145 = load i8, i8* %144, align 8, !range !2
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %147, label %165

147:                                              ; preds = %142
  %148 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %37, align 8
  %149 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %148, i64 0, i32 1, i32 0, i32 0, i32 0
  %150 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %149, align 8
  %151 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %150, i64 0, i32 1, i32 3
  %152 = load i8, i8* %151, align 1, !range !2
  %153 = icmp eq i8 %152, 0
  br i1 %153, label %154, label %165

154:                                              ; preds = %147
  %155 = load i32, i32* %38, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %49) #14
  store i32 196679, i32* %11, align 4
  %156 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %41, align 8
  %157 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %156, i64 3
  %158 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %157, align 8
  call void %158(%"class.SkSL::OutputStream"* %39, i8* nonnull %49, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %49) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %50) #14
  store i32 %155, i32* %13, align 4
  %159 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %41, align 8
  %160 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %159, i64 3
  %161 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %160, align 8
  call void %161(%"class.SkSL::OutputStream"* %39, i8* nonnull %50, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %50) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %51) #14
  store i32 0, i32* %12, align 4
  %162 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %41, align 8
  %163 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %162, i64 3
  %164 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %163, align 8
  call void %164(%"class.SkSL::OutputStream"* %39, i8* nonnull %51, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %51) #14
  br label %165

165:                                              ; preds = %108, %132, %142, %147, %154
  %166 = load i32, i32* %38, align 8
  %167 = add i32 %166, 1
  store i32 %167, i32* %38, align 8
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 81, i32 5, %"class.SkSL::OutputStream"* dereferenceable(8) %5) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %52) #14
  store i32 %65, i32* %10, align 4
  %168 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %45, align 8
  %169 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %168, i64 3
  %170 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %169, align 8
  call void %170(%"class.SkSL::OutputStream"* %5, i8* nonnull %52, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %52) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %53) #14
  store i32 %166, i32* %9, align 4
  %171 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %45, align 8
  %172 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %171, i64 3
  %173 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %172, align 8
  call void %173(%"class.SkSL::OutputStream"* %5, i8* nonnull %53, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %53) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %54) #14
  store i32 %4, i32* %8, align 4
  %174 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %45, align 8
  %175 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %174, i64 3
  %176 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %175, align 8
  call void %176(%"class.SkSL::OutputStream"* %5, i8* nonnull %54, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %54) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %55) #14
  store i32 %120, i32* %7, align 4
  %177 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %45, align 8
  %178 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %177, i64 3
  %179 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %178, align 8
  call void %179(%"class.SkSL::OutputStream"* %5, i8* nonnull %55, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %55) #14
  %180 = call i32 @_ZN4SkSL18SPIRVCodeGenerator21writeBinaryExpressionERKNS_4TypeEjNS_8OperatorES3_jS3_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %64, i32 %109, i32 %3, %"class.SkSL::Type"* dereferenceable(184) %64, i32 %166, %"class.SkSL::Type"* dereferenceable(184) %25, %"class.SkSL::OutputStream"* dereferenceable(8) %5)
  %181 = call i32 @_ZN4SkSL18SPIRVCodeGenerator16mergeComparisonsEjjNS_8OperatorERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 %180, i32 %61, i32 %3, %"class.SkSL::OutputStream"* dereferenceable(8) %5)
  %182 = add nuw nsw i64 %60, 1
  %183 = load i64, i64* %27, align 8
  %184 = load i64, i64* %29, align 8
  %185 = sub i64 %183, %184
  %186 = sdiv exact i64 %185, 104
  %187 = shl i64 %186, 32
  %188 = ashr exact i64 %187, 32
  %189 = icmp slt i64 %182, %188
  br i1 %189, label %58, label %56
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator20writeArrayComparisonERKNS_4TypeEjNS_8OperatorEjRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::Type"* dereferenceable(184), i32, i32, i32, %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 6
  %22 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %21, align 8
  %23 = icmp eq %"class.SkSL::Type"* %22, null
  %24 = select i1 %23, %"class.SkSL::Type"* %1, %"class.SkSL::Type"* %22
  %25 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %26 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %24, %"class.SkSL::MemoryLayout"* dereferenceable(4) %25) #14
  %27 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 8
  %28 = load i32, i32* %27, align 8
  %29 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 1
  %30 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %29, align 8
  %31 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %30, i64 0, i32 0, i32 24, i32 0, i32 0, i32 0
  %32 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %31, align 8
  %33 = icmp sgt i32 %28, 0
  br i1 %33, label %34, label %57

34:                                               ; preds = %6
  %35 = icmp eq %"class.SkSL::Type"* %24, null
  %36 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %24, i64 0, i32 6
  %37 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %24, i64 0, i32 3
  %38 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 1
  %39 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %40 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %41 = bitcast i32* %18 to i8*
  %42 = bitcast %"class.SkSL::OutputStream"* %40 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %43 = bitcast i32* %20 to i8*
  %44 = bitcast i32* %19 to i8*
  %45 = bitcast i32* %17 to i8*
  %46 = bitcast %"class.SkSL::OutputStream"* %5 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %47 = bitcast i32* %16 to i8*
  %48 = bitcast i32* %15 to i8*
  %49 = bitcast i32* %14 to i8*
  %50 = bitcast i32* %11 to i8*
  %51 = bitcast i32* %13 to i8*
  %52 = bitcast i32* %12 to i8*
  %53 = bitcast i32* %10 to i8*
  %54 = bitcast i32* %9 to i8*
  %55 = bitcast i32* %8 to i8*
  %56 = bitcast i32* %7 to i8*
  br label %59

57:                                               ; preds = %155, %6
  %58 = phi i32 [ -1, %6 ], [ %171, %155 ]
  ret i32 %58

59:                                               ; preds = %155, %34
  %60 = phi i32 [ -1, %34 ], [ %171, %155 ]
  %61 = phi i32 [ 0, %34 ], [ %172, %155 ]
  br i1 %35, label %101, label %62

62:                                               ; preds = %59
  %63 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %36, align 8
  %64 = icmp eq %"class.SkSL::Type"* %63, null
  %65 = select i1 %64, %"class.SkSL::Type"* %24, %"class.SkSL::Type"* %63
  %66 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %65, i64 0, i32 4
  %67 = load i32, i32* %66, align 4
  %68 = icmp ult i32 %67, 3
  br i1 %68, label %72, label %69

69:                                               ; preds = %62
  %70 = load i32, i32* %37, align 8
  %71 = icmp eq i32 %70, 6
  br i1 %71, label %72, label %101

72:                                               ; preds = %69, %62
  br i1 %64, label %78, label %73

73:                                               ; preds = %72, %73
  %74 = phi %"class.SkSL::Type"* [ %76, %73 ], [ %63, %72 ]
  %75 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %74, i64 0, i32 6
  %76 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %75, align 8
  %77 = icmp eq %"class.SkSL::Type"* %76, null
  br i1 %77, label %78, label %73

78:                                               ; preds = %73, %72
  %79 = phi %"class.SkSL::Type"* [ %24, %72 ], [ %74, %73 ]
  %80 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %79, i64 0, i32 16
  %81 = load i8, i8* %80, align 8, !range !2
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %83, label %101

83:                                               ; preds = %78
  %84 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %38, align 8
  %85 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %84, i64 0, i32 1, i32 0, i32 0, i32 0
  %86 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %85, align 8
  %87 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %86, i64 0, i32 1, i32 3
  %88 = load i8, i8* %87, align 1, !range !2
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %90, label %101

90:                                               ; preds = %83
  %91 = load i32, i32* %39, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %41) #14
  store i32 196679, i32* %18, align 4
  %92 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %42, align 8
  %93 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %92, i64 3
  %94 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %93, align 8
  call void %94(%"class.SkSL::OutputStream"* %40, i8* nonnull %41, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %41) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %43) #14
  store i32 %91, i32* %20, align 4
  %95 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %42, align 8
  %96 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %95, i64 3
  %97 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %96, align 8
  call void %97(%"class.SkSL::OutputStream"* %40, i8* nonnull %43, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %43) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %44) #14
  store i32 0, i32* %19, align 4
  %98 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %42, align 8
  %99 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %98, i64 3
  %100 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %99, align 8
  call void %100(%"class.SkSL::OutputStream"* %40, i8* nonnull %44, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %44) #14
  br label %101

101:                                              ; preds = %59, %69, %78, %83, %90
  %102 = load i32, i32* %39, align 8
  %103 = add i32 %102, 1
  store i32 %103, i32* %39, align 8
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 81, i32 5, %"class.SkSL::OutputStream"* dereferenceable(8) %5) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %45) #14
  store i32 %26, i32* %17, align 4
  %104 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %46, align 8
  %105 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %104, i64 3
  %106 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %105, align 8
  call void %106(%"class.SkSL::OutputStream"* %5, i8* nonnull %45, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %45) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %47) #14
  store i32 %102, i32* %16, align 4
  %107 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %46, align 8
  %108 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %107, i64 3
  %109 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %108, align 8
  call void %109(%"class.SkSL::OutputStream"* %5, i8* nonnull %47, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %47) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %48) #14
  store i32 %2, i32* %15, align 4
  %110 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %46, align 8
  %111 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %110, i64 3
  %112 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %111, align 8
  call void %112(%"class.SkSL::OutputStream"* %5, i8* nonnull %48, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %48) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %49) #14
  store i32 %61, i32* %14, align 4
  %113 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %46, align 8
  %114 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %113, i64 3
  %115 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %114, align 8
  call void %115(%"class.SkSL::OutputStream"* %5, i8* nonnull %49, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %49) #14
  br i1 %35, label %155, label %116

116:                                              ; preds = %101
  %117 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %36, align 8
  %118 = icmp eq %"class.SkSL::Type"* %117, null
  %119 = select i1 %118, %"class.SkSL::Type"* %24, %"class.SkSL::Type"* %117
  %120 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %119, i64 0, i32 4
  %121 = load i32, i32* %120, align 4
  %122 = icmp ult i32 %121, 3
  br i1 %122, label %126, label %123

123:                                              ; preds = %116
  %124 = load i32, i32* %37, align 8
  %125 = icmp eq i32 %124, 6
  br i1 %125, label %126, label %155

126:                                              ; preds = %123, %116
  br i1 %118, label %132, label %127

127:                                              ; preds = %126, %127
  %128 = phi %"class.SkSL::Type"* [ %130, %127 ], [ %117, %126 ]
  %129 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %128, i64 0, i32 6
  %130 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %129, align 8
  %131 = icmp eq %"class.SkSL::Type"* %130, null
  br i1 %131, label %132, label %127

132:                                              ; preds = %127, %126
  %133 = phi %"class.SkSL::Type"* [ %24, %126 ], [ %128, %127 ]
  %134 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %133, i64 0, i32 16
  %135 = load i8, i8* %134, align 8, !range !2
  %136 = icmp eq i8 %135, 0
  br i1 %136, label %137, label %155

137:                                              ; preds = %132
  %138 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %38, align 8
  %139 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %138, i64 0, i32 1, i32 0, i32 0, i32 0
  %140 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %139, align 8
  %141 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %140, i64 0, i32 1, i32 3
  %142 = load i8, i8* %141, align 1, !range !2
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %144, label %155

144:                                              ; preds = %137
  %145 = load i32, i32* %39, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %50) #14
  store i32 196679, i32* %11, align 4
  %146 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %42, align 8
  %147 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %146, i64 3
  %148 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %147, align 8
  call void %148(%"class.SkSL::OutputStream"* %40, i8* nonnull %50, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %50) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %51) #14
  store i32 %145, i32* %13, align 4
  %149 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %42, align 8
  %150 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %149, i64 3
  %151 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %150, align 8
  call void %151(%"class.SkSL::OutputStream"* %40, i8* nonnull %51, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %51) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %52) #14
  store i32 0, i32* %12, align 4
  %152 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %42, align 8
  %153 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %152, i64 3
  %154 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %153, align 8
  call void %154(%"class.SkSL::OutputStream"* %40, i8* nonnull %52, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %52) #14
  br label %155

155:                                              ; preds = %101, %123, %132, %137, %144
  %156 = load i32, i32* %39, align 8
  %157 = add i32 %156, 1
  store i32 %157, i32* %39, align 8
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 81, i32 5, %"class.SkSL::OutputStream"* dereferenceable(8) %5) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %53) #14
  store i32 %26, i32* %10, align 4
  %158 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %46, align 8
  %159 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %158, i64 3
  %160 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %159, align 8
  call void %160(%"class.SkSL::OutputStream"* %5, i8* nonnull %53, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %53) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %54) #14
  store i32 %156, i32* %9, align 4
  %161 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %46, align 8
  %162 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %161, i64 3
  %163 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %162, align 8
  call void %163(%"class.SkSL::OutputStream"* %5, i8* nonnull %54, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %54) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %55) #14
  store i32 %4, i32* %8, align 4
  %164 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %46, align 8
  %165 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %164, i64 3
  %166 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %165, align 8
  call void %166(%"class.SkSL::OutputStream"* %5, i8* nonnull %55, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %55) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %56) #14
  store i32 %61, i32* %7, align 4
  %167 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %46, align 8
  %168 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %167, i64 3
  %169 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %168, align 8
  call void %169(%"class.SkSL::OutputStream"* %5, i8* nonnull %56, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %56) #14
  %170 = call i32 @_ZN4SkSL18SPIRVCodeGenerator21writeBinaryExpressionERKNS_4TypeEjNS_8OperatorES3_jS3_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %24, i32 %102, i32 %3, %"class.SkSL::Type"* dereferenceable(184) %24, i32 %156, %"class.SkSL::Type"* dereferenceable(184) %32, %"class.SkSL::OutputStream"* dereferenceable(8) %5)
  %171 = call i32 @_ZN4SkSL18SPIRVCodeGenerator16mergeComparisonsEjjNS_8OperatorERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 %170, i32 %60, i32 %3, %"class.SkSL::OutputStream"* dereferenceable(8) %5)
  %172 = add nuw nsw i32 %61, 1
  %173 = icmp eq i32 %172, %28
  br i1 %173, label %57, label %59
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator16mergeComparisonsEjjNS_8OperatorERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, i32, i32, i32, %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = icmp eq i32 %2, -1
  br i1 %17, label %114, label %18

18:                                               ; preds = %5
  %19 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 1
  %20 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %19, align 8
  %21 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %20, i64 0, i32 0, i32 24, i32 0, i32 0, i32 0
  %22 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %21, align 8
  %23 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %24 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %22, %"class.SkSL::MemoryLayout"* dereferenceable(4) %23) #14
  %25 = icmp eq %"class.SkSL::Type"* %22, null
  br i1 %25, label %74, label %26

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %22, i64 0, i32 6
  %28 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %27, align 8
  %29 = icmp eq %"class.SkSL::Type"* %28, null
  %30 = select i1 %29, %"class.SkSL::Type"* %22, %"class.SkSL::Type"* %28
  %31 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %30, i64 0, i32 4
  %32 = load i32, i32* %31, align 4
  %33 = icmp ult i32 %32, 3
  br i1 %33, label %38, label %34

34:                                               ; preds = %26
  %35 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %22, i64 0, i32 3
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, 6
  br i1 %37, label %38, label %74

38:                                               ; preds = %34, %26
  br i1 %29, label %44, label %39

39:                                               ; preds = %38, %39
  %40 = phi %"class.SkSL::Type"* [ %42, %39 ], [ %28, %38 ]
  %41 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %40, i64 0, i32 6
  %42 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %41, align 8
  %43 = icmp eq %"class.SkSL::Type"* %42, null
  br i1 %43, label %44, label %39

44:                                               ; preds = %39, %38
  %45 = phi %"class.SkSL::Type"* [ %22, %38 ], [ %40, %39 ]
  %46 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %45, i64 0, i32 16
  %47 = load i8, i8* %46, align 8, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %74

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 1
  %51 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %50, align 8
  %52 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %51, i64 0, i32 1, i32 0, i32 0, i32 0
  %53 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %52, align 8
  %54 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %53, i64 0, i32 1, i32 3
  %55 = load i8, i8* %54, align 1, !range !2
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %57, label %74

57:                                               ; preds = %49
  %58 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %59 = load i32, i32* %58, align 8
  %60 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %61 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %61) #14
  store i32 196679, i32* %10, align 4
  %62 = bitcast %"class.SkSL::OutputStream"* %60 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %63 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %63, i64 3
  %65 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %64, align 8
  call void %65(%"class.SkSL::OutputStream"* %60, i8* nonnull %61, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %61) #14
  %66 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %66) #14
  store i32 %59, i32* %12, align 4
  %67 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %62, align 8
  %68 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %67, i64 3
  %69 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %68, align 8
  call void %69(%"class.SkSL::OutputStream"* %60, i8* nonnull %66, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %66) #14
  %70 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %70) #14
  store i32 0, i32* %11, align 4
  %71 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %62, align 8
  %72 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %71, i64 3
  %73 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %72, align 8
  call void %73(%"class.SkSL::OutputStream"* %60, i8* nonnull %70, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %70) #14
  br label %74

74:                                               ; preds = %18, %34, %44, %49, %57
  %75 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %76 = load i32, i32* %75, align 8
  %77 = add i32 %76, 1
  store i32 %77, i32* %75, align 8
  switch i32 %3, label %114 [
    i32 65, label %78
    i32 66, label %96
  ]

78:                                               ; preds = %74
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 167, i32 5, %"class.SkSL::OutputStream"* dereferenceable(8) %4) #14
  %79 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %79) #14
  store i32 %24, i32* %9, align 4
  %80 = bitcast %"class.SkSL::OutputStream"* %4 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %81 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %81, i64 3
  %83 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %82, align 8
  call void %83(%"class.SkSL::OutputStream"* %4, i8* nonnull %79, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %79) #14
  %84 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %84) #14
  store i32 %76, i32* %8, align 4
  %85 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %80, align 8
  %86 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %85, i64 3
  %87 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %86, align 8
  call void %87(%"class.SkSL::OutputStream"* %4, i8* nonnull %84, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %84) #14
  %88 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %88) #14
  store i32 %1, i32* %7, align 4
  %89 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %80, align 8
  %90 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %89, i64 3
  %91 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %90, align 8
  call void %91(%"class.SkSL::OutputStream"* %4, i8* nonnull %88, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %88) #14
  %92 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %92) #14
  store i32 %2, i32* %6, align 4
  %93 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %80, align 8
  %94 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %93, i64 3
  %95 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %94, align 8
  call void %95(%"class.SkSL::OutputStream"* %4, i8* nonnull %92, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %92) #14
  br label %114

96:                                               ; preds = %74
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 166, i32 5, %"class.SkSL::OutputStream"* dereferenceable(8) %4) #14
  %97 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %97) #14
  store i32 %24, i32* %16, align 4
  %98 = bitcast %"class.SkSL::OutputStream"* %4 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %99 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %98, align 8
  %100 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %99, i64 3
  %101 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %100, align 8
  call void %101(%"class.SkSL::OutputStream"* %4, i8* nonnull %97, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %97) #14
  %102 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %102) #14
  store i32 %76, i32* %15, align 4
  %103 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %98, align 8
  %104 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %103, i64 3
  %105 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %104, align 8
  call void %105(%"class.SkSL::OutputStream"* %4, i8* nonnull %102, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %102) #14
  %106 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %106) #14
  store i32 %1, i32* %14, align 4
  %107 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %98, align 8
  %108 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %107, i64 3
  %109 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %108, align 8
  call void %109(%"class.SkSL::OutputStream"* %4, i8* nonnull %106, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %106) #14
  %110 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %110) #14
  store i32 %2, i32* %13, align 4
  %111 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %98, align 8
  %112 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %111, i64 3
  %113 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %112, align 8
  call void %113(%"class.SkSL::OutputStream"* %4, i8* nonnull %110, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %110) #14
  br label %114

114:                                              ; preds = %74, %96, %78, %5
  %115 = phi i32 [ %1, %5 ], [ -1, %74 ], [ %76, %96 ], [ %76, %78 ]
  ret i32 %115
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator15writeLogicalAndERKNS_10ExpressionES3_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::Expression"* dereferenceable(24), %"class.SkSL::Expression"* dereferenceable(24), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca %"class.SkSL::Literal.429", align 8
  %20 = bitcast %"class.SkSL::Literal.429"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #14
  %21 = getelementptr inbounds %"class.SkSL::Literal.429", %"class.SkSL::Literal.429"* %19, i64 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.SkSL::Literal.429", %"class.SkSL::Literal.429"* %19, i64 0, i32 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.SkSL::Literal.429", %"class.SkSL::Literal.429"* %19, i64 0, i32 0, i32 0, i32 2
  %24 = getelementptr inbounds %"class.SkSL::Literal.429", %"class.SkSL::Literal.429"* %19, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.SkSL::Literal.429", %"class.SkSL::Literal.429"* %19, i64 0, i32 1
  %26 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 1
  %27 = bitcast %"class.SkSL::Literal.429"* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 32, i1 false)
  %28 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %26, align 8
  %29 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %28, i64 0, i32 0, i32 24, i32 0, i32 0, i32 0
  %30 = bitcast %"class.SkSL::Type"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  store i32 -1, i32* %22, align 8
  store i32 31, i32* %23, align 4
  %32 = bitcast %"class.SkSL::Type"** %24 to i64*
  store i64 %31, i64* %32, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  store i8 0, i8* %25, align 8
  %33 = call i32 @_ZN4SkSL18SPIRVCodeGenerator16writeBoolLiteralERKNS_7LiteralIbEE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Literal.429"* nonnull dereferenceable(32) %19)
  %34 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %1, %"class.SkSL::OutputStream"* dereferenceable(8) %3)
  %35 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %36 = load i32, i32* %35, align 8
  %37 = add i32 %36, 1
  %38 = add i32 %36, 2
  store i32 %38, i32* %35, align 8
  %39 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 26
  %40 = load i32, i32* %39, align 4
  tail call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 247, i32 3, %"class.SkSL::OutputStream"* dereferenceable(8) %3) #14
  %41 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %41) #14
  store i32 %37, i32* %18, align 4
  %42 = bitcast %"class.SkSL::OutputStream"* %3 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %43 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %43, i64 3
  %45 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %44, align 8
  call void %45(%"class.SkSL::OutputStream"* %3, i8* nonnull %41, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %41) #14
  %46 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %46) #14
  store i32 0, i32* %17, align 4
  %47 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %42, align 8
  %48 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %47, i64 3
  %49 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %48, align 8
  call void %49(%"class.SkSL::OutputStream"* %3, i8* nonnull %46, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %46) #14
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 250, i32 4, %"class.SkSL::OutputStream"* dereferenceable(8) %3) #14
  %50 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %50) #14
  store i32 %34, i32* %16, align 4
  %51 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %42, align 8
  %52 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %51, i64 3
  %53 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %52, align 8
  call void %53(%"class.SkSL::OutputStream"* %3, i8* nonnull %50, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %50) #14
  %54 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %54) #14
  store i32 %36, i32* %15, align 4
  %55 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %42, align 8
  %56 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %55, i64 3
  %57 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %56, align 8
  call void %57(%"class.SkSL::OutputStream"* %3, i8* nonnull %54, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %54) #14
  %58 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %58) #14
  store i32 %37, i32* %14, align 4
  %59 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %42, align 8
  %60 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %59, i64 3
  %61 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %60, align 8
  call void %61(%"class.SkSL::OutputStream"* %3, i8* nonnull %58, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %58) #14
  store i32 %36, i32* %39, align 4
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 248, i32 2, %"class.SkSL::OutputStream"* dereferenceable(8) %3) #14
  %62 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %62) #14
  store i32 %36, i32* %13, align 4
  %63 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %42, align 8
  %64 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %63, i64 3
  %65 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %64, align 8
  call void %65(%"class.SkSL::OutputStream"* %3, i8* nonnull %62, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %62) #14
  %66 = call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %2, %"class.SkSL::OutputStream"* dereferenceable(8) %3)
  %67 = load i32, i32* %39, align 4
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 249, i32 2, %"class.SkSL::OutputStream"* dereferenceable(8) %3) #14
  %68 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %68) #14
  store i32 %37, i32* %12, align 4
  %69 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %42, align 8
  %70 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %69, i64 3
  %71 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %70, align 8
  call void %71(%"class.SkSL::OutputStream"* %3, i8* nonnull %68, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %68) #14
  store i32 %37, i32* %39, align 4
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 248, i32 2, %"class.SkSL::OutputStream"* dereferenceable(8) %3) #14
  %72 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %72) #14
  store i32 %37, i32* %11, align 4
  %73 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %42, align 8
  %74 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %73, i64 3
  %75 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %74, align 8
  call void %75(%"class.SkSL::OutputStream"* %3, i8* nonnull %72, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %72) #14
  %76 = load i32, i32* %35, align 8
  %77 = add i32 %76, 1
  store i32 %77, i32* %35, align 8
  %78 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %26, align 8
  %79 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %78, i64 0, i32 0, i32 24, i32 0, i32 0, i32 0
  %80 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %79, align 8
  %81 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %82 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %80, %"class.SkSL::MemoryLayout"* dereferenceable(4) %81) #14
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 245, i32 7, %"class.SkSL::OutputStream"* dereferenceable(8) %3) #14
  %83 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %83) #14
  store i32 %82, i32* %10, align 4
  %84 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %42, align 8
  %85 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %84, i64 3
  %86 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %85, align 8
  call void %86(%"class.SkSL::OutputStream"* %3, i8* nonnull %83, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %83) #14
  %87 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %87) #14
  store i32 %76, i32* %9, align 4
  %88 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %42, align 8
  %89 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %88, i64 3
  %90 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %89, align 8
  call void %90(%"class.SkSL::OutputStream"* %3, i8* nonnull %87, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %87) #14
  %91 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %91) #14
  store i32 %33, i32* %8, align 4
  %92 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %42, align 8
  %93 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %92, i64 3
  %94 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %93, align 8
  call void %94(%"class.SkSL::OutputStream"* %3, i8* nonnull %91, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %91) #14
  %95 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %95) #14
  store i32 %40, i32* %7, align 4
  %96 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %42, align 8
  %97 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %96, i64 3
  %98 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %97, align 8
  call void %98(%"class.SkSL::OutputStream"* %3, i8* nonnull %95, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %95) #14
  %99 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %99) #14
  store i32 %66, i32* %6, align 4
  %100 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %42, align 8
  %101 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %100, i64 3
  %102 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %101, align 8
  call void %102(%"class.SkSL::OutputStream"* %3, i8* nonnull %99, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %99) #14
  %103 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %103) #14
  store i32 %67, i32* %5, align 4
  %104 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %42, align 8
  %105 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %104, i64 3
  %106 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %105, align 8
  call void %106(%"class.SkSL::OutputStream"* %3, i8* nonnull %103, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %103) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #14
  ret i32 %76
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator14writeLogicalOrERKNS_10ExpressionES3_RNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::Expression"* dereferenceable(24), %"class.SkSL::Expression"* dereferenceable(24), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca %"class.SkSL::Literal.429", align 8
  %20 = bitcast %"class.SkSL::Literal.429"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #14
  %21 = getelementptr inbounds %"class.SkSL::Literal.429", %"class.SkSL::Literal.429"* %19, i64 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.SkSL::Literal.429", %"class.SkSL::Literal.429"* %19, i64 0, i32 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.SkSL::Literal.429", %"class.SkSL::Literal.429"* %19, i64 0, i32 0, i32 0, i32 2
  %24 = getelementptr inbounds %"class.SkSL::Literal.429", %"class.SkSL::Literal.429"* %19, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.SkSL::Literal.429", %"class.SkSL::Literal.429"* %19, i64 0, i32 1
  %26 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 1
  %27 = bitcast %"class.SkSL::Literal.429"* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 32, i1 false)
  %28 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %26, align 8
  %29 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %28, i64 0, i32 0, i32 24, i32 0, i32 0, i32 0
  %30 = bitcast %"class.SkSL::Type"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  store i32 -1, i32* %22, align 8
  store i32 31, i32* %23, align 4
  %32 = bitcast %"class.SkSL::Type"** %24 to i64*
  store i64 %31, i64* %32, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  store i8 1, i8* %25, align 8
  %33 = call i32 @_ZN4SkSL18SPIRVCodeGenerator16writeBoolLiteralERKNS_7LiteralIbEE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Literal.429"* nonnull dereferenceable(32) %19)
  %34 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %1, %"class.SkSL::OutputStream"* dereferenceable(8) %3)
  %35 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %36 = load i32, i32* %35, align 8
  %37 = add i32 %36, 1
  %38 = add i32 %36, 2
  store i32 %38, i32* %35, align 8
  %39 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 26
  %40 = load i32, i32* %39, align 4
  tail call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 247, i32 3, %"class.SkSL::OutputStream"* dereferenceable(8) %3) #14
  %41 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %41) #14
  store i32 %37, i32* %18, align 4
  %42 = bitcast %"class.SkSL::OutputStream"* %3 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %43 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %43, i64 3
  %45 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %44, align 8
  call void %45(%"class.SkSL::OutputStream"* %3, i8* nonnull %41, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %41) #14
  %46 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %46) #14
  store i32 0, i32* %17, align 4
  %47 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %42, align 8
  %48 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %47, i64 3
  %49 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %48, align 8
  call void %49(%"class.SkSL::OutputStream"* %3, i8* nonnull %46, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %46) #14
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 250, i32 4, %"class.SkSL::OutputStream"* dereferenceable(8) %3) #14
  %50 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %50) #14
  store i32 %34, i32* %16, align 4
  %51 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %42, align 8
  %52 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %51, i64 3
  %53 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %52, align 8
  call void %53(%"class.SkSL::OutputStream"* %3, i8* nonnull %50, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %50) #14
  %54 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %54) #14
  store i32 %37, i32* %15, align 4
  %55 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %42, align 8
  %56 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %55, i64 3
  %57 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %56, align 8
  call void %57(%"class.SkSL::OutputStream"* %3, i8* nonnull %54, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %54) #14
  %58 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %58) #14
  store i32 %36, i32* %14, align 4
  %59 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %42, align 8
  %60 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %59, i64 3
  %61 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %60, align 8
  call void %61(%"class.SkSL::OutputStream"* %3, i8* nonnull %58, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %58) #14
  store i32 %36, i32* %39, align 4
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 248, i32 2, %"class.SkSL::OutputStream"* dereferenceable(8) %3) #14
  %62 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %62) #14
  store i32 %36, i32* %13, align 4
  %63 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %42, align 8
  %64 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %63, i64 3
  %65 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %64, align 8
  call void %65(%"class.SkSL::OutputStream"* %3, i8* nonnull %62, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %62) #14
  %66 = call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %2, %"class.SkSL::OutputStream"* dereferenceable(8) %3)
  %67 = load i32, i32* %39, align 4
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 249, i32 2, %"class.SkSL::OutputStream"* dereferenceable(8) %3) #14
  %68 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %68) #14
  store i32 %37, i32* %12, align 4
  %69 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %42, align 8
  %70 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %69, i64 3
  %71 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %70, align 8
  call void %71(%"class.SkSL::OutputStream"* %3, i8* nonnull %68, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %68) #14
  store i32 %37, i32* %39, align 4
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 248, i32 2, %"class.SkSL::OutputStream"* dereferenceable(8) %3) #14
  %72 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %72) #14
  store i32 %37, i32* %11, align 4
  %73 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %42, align 8
  %74 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %73, i64 3
  %75 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %74, align 8
  call void %75(%"class.SkSL::OutputStream"* %3, i8* nonnull %72, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %72) #14
  %76 = load i32, i32* %35, align 8
  %77 = add i32 %76, 1
  store i32 %77, i32* %35, align 8
  %78 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %26, align 8
  %79 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %78, i64 0, i32 0, i32 24, i32 0, i32 0, i32 0
  %80 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %79, align 8
  %81 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %82 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %80, %"class.SkSL::MemoryLayout"* dereferenceable(4) %81) #14
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 245, i32 7, %"class.SkSL::OutputStream"* dereferenceable(8) %3) #14
  %83 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %83) #14
  store i32 %82, i32* %10, align 4
  %84 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %42, align 8
  %85 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %84, i64 3
  %86 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %85, align 8
  call void %86(%"class.SkSL::OutputStream"* %3, i8* nonnull %83, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %83) #14
  %87 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %87) #14
  store i32 %76, i32* %9, align 4
  %88 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %42, align 8
  %89 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %88, i64 3
  %90 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %89, align 8
  call void %90(%"class.SkSL::OutputStream"* %3, i8* nonnull %87, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %87) #14
  %91 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %91) #14
  store i32 %33, i32* %8, align 4
  %92 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %42, align 8
  %93 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %92, i64 3
  %94 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %93, align 8
  call void %94(%"class.SkSL::OutputStream"* %3, i8* nonnull %91, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %91) #14
  %95 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %95) #14
  store i32 %40, i32* %7, align 4
  %96 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %42, align 8
  %97 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %96, i64 3
  %98 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %97, align 8
  call void %98(%"class.SkSL::OutputStream"* %3, i8* nonnull %95, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %95) #14
  %99 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %99) #14
  store i32 %66, i32* %6, align 4
  %100 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %42, align 8
  %101 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %100, i64 3
  %102 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %101, align 8
  call void %102(%"class.SkSL::OutputStream"* %3, i8* nonnull %99, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %99) #14
  %103 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %103) #14
  store i32 %67, i32* %5, align 4
  %104 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %42, align 8
  %105 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %104, i64 3
  %106 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %105, align 8
  call void %106(%"class.SkSL::OutputStream"* %3, i8* nonnull %103, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %103) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #14
  ret i32 %76
}

declare zeroext i1 @_ZNK4SkSL8Operator12isAssignmentEv(%"class.SkSL::Operator"*) local_unnamed_addr #2

declare i32 @_ZNK4SkSL8Operator16removeAssignmentEv(%"class.SkSL::Operator"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.SkSL::Expression"* @_ZN4SkSLL16create_literal_1ERKNS_7ContextERKNS_4TypeE(%"class.SkSL::Type"* dereferenceable(184)) unnamed_addr #0 {
  %2 = alloca %"class.SkSL::String", align 8
  %3 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, -1
  %6 = icmp ult i32 %5, 2
  br i1 %6, label %7, label %19

7:                                                ; preds = %1
  %8 = ptrtoint %"class.SkSL::Type"* %0 to i64
  %9 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #14
  %10 = bitcast i8* %9 to i32 (...)***
  %11 = getelementptr inbounds i8, i8* %9, i64 8
  %12 = bitcast i8* %11 to i32*
  store i32 -1, i32* %12, align 8
  %13 = getelementptr inbounds i8, i8* %9, i64 12
  %14 = bitcast i8* %13 to i32*
  store i32 43, i32* %14, align 4
  %15 = getelementptr inbounds i8, i8* %9, i64 16
  %16 = bitcast i8* %15 to i64*
  store i64 %8, i64* %16, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIlEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %17 = getelementptr inbounds i8, i8* %9, i64 24
  %18 = bitcast i8* %17 to i64*
  store i64 1, i64* %18, align 8
  br label %71

19:                                               ; preds = %1
  %20 = icmp eq i32 %4, 0
  br i1 %20, label %21, label %33

21:                                               ; preds = %19
  %22 = ptrtoint %"class.SkSL::Type"* %0 to i64
  %23 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #14
  %24 = bitcast i8* %23 to i32 (...)***
  %25 = getelementptr inbounds i8, i8* %23, i64 8
  %26 = bitcast i8* %25 to i32*
  store i32 -1, i32* %26, align 8
  %27 = getelementptr inbounds i8, i8* %23, i64 12
  %28 = bitcast i8* %27 to i32*
  store i32 45, i32* %28, align 4
  %29 = getelementptr inbounds i8, i8* %23, i64 16
  %30 = bitcast i8* %29 to i64*
  store i64 %22, i64* %30, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIfEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8
  %31 = getelementptr inbounds i8, i8* %23, i64 24
  %32 = bitcast i8* %31 to float*
  store float 1.000000e+00, float* %32, align 8
  br label %71

33:                                               ; preds = %19
  %34 = bitcast %"class.SkSL::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #14
  %35 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 0, i32 1, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 0, i32 1, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = icmp ugt i64 %38, -17
  br i1 %39, label %40, label %42

40:                                               ; preds = %33
  %41 = bitcast %"class.SkSL::String"* %2 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %41) #15
  unreachable

42:                                               ; preds = %33
  %43 = icmp ult i64 %38, 23
  br i1 %43, label %53, label %44

44:                                               ; preds = %42
  %45 = add nuw i64 %38, 16
  %46 = and i64 %45, -16
  %47 = tail call i8* @_Znwm(i64 %46) #16
  %48 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %47, i8** %48, align 8
  %49 = or i64 %46, -9223372036854775808
  %50 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %49, i64* %50, align 8
  %51 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %38, i64* %51, align 8
  %52 = bitcast %"class.SkSL::String"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %58

53:                                               ; preds = %42
  %54 = trunc i64 %38 to i8
  %55 = bitcast %"class.SkSL::String"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  store i8 %54, i8* %56, align 1
  %57 = icmp eq i64 %38, 0
  br i1 %57, label %61, label %58

58:                                               ; preds = %53, %44
  %59 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %55, %53 ], [ %52, %44 ]
  %60 = phi i8* [ %34, %53 ], [ %47, %44 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %60, i8* align 1 %36, i64 %38, i1 false) #14
  br label %61

61:                                               ; preds = %53, %58
  %62 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %55, %53 ], [ %59, %58 ]
  %63 = phi i8* [ %34, %53 ], [ %60, %58 ]
  %64 = getelementptr inbounds i8, i8* %63, i64 %38
  store i8 0, i8* %64, align 1
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %66 = load i8, i8* %65, align 1
  %67 = icmp slt i8 %66, 0
  %68 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  %70 = select i1 %67, i8* %69, i8* %34
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.35, i64 0, i64 0), i32 2291, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.83, i64 0, i64 0), i8* %70) #15
  unreachable

71:                                               ; preds = %21, %7
  %72 = phi i8* [ %9, %7 ], [ %23, %21 ]
  %73 = bitcast i8* %72 to %"class.SkSL::Expression"*
  ret %"class.SkSL::Expression"* %73
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator18writeFunctionStartERKNS_19FunctionDeclarationERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::FunctionDeclaration"* dereferenceable(96), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::tuple.703", align 8
  %5 = alloca %"class.std::__1::tuple.633", align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %"class.std::__1::tuple.691", align 8
  %15 = alloca %"class.std::__1::tuple.633", align 1
  %16 = alloca %"class.SkSL::FunctionDeclaration"*, align 8
  %17 = alloca %"class.SkSL::String", align 8
  %18 = alloca %"class.SkSL::Variable"*, align 8
  %19 = bitcast %"class.SkSL::FunctionDeclaration"** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #14
  store %"class.SkSL::FunctionDeclaration"* %1, %"class.SkSL::FunctionDeclaration"** %16, align 8
  %20 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 8, i32 0
  %21 = bitcast %"class.std::__1::tuple.691"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #14
  %22 = getelementptr inbounds %"class.std::__1::tuple.691", %"class.std::__1::tuple.691"* %14, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::FunctionDeclaration"** %16, %"class.SkSL::FunctionDeclaration"*** %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %15, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %23) #14
  %24 = call { %"struct.std::__1::__hash_node_base.138"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.134"* %20, %"class.SkSL::FunctionDeclaration"** nonnull dereferenceable(8) %16, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.691"* nonnull dereferenceable(8) %14, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %15) #14
  %25 = extractvalue { %"struct.std::__1::__hash_node_base.138"*, i8 } %24, 0
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %25, i64 3
  %27 = bitcast %"struct.std::__1::__hash_node_base.138"* %26 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %23) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #14
  %28 = load i32, i32* %27, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #14
  %29 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %1, i64 0, i32 4
  %30 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %29, align 8
  %31 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %32 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %30, %"class.SkSL::MemoryLayout"* dereferenceable(4) %31) #14
  %33 = call i32 @_ZN4SkSL18SPIRVCodeGenerator15getFunctionTypeERKNS_19FunctionDeclarationE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::FunctionDeclaration"* dereferenceable(96) %1)
  %34 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %34) #14
  store i32 327734, i32* %7, align 4
  %35 = bitcast %"class.SkSL::OutputStream"* %2 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %36 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %36, i64 3
  %38 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %37, align 8
  call void %38(%"class.SkSL::OutputStream"* %2, i8* nonnull %34, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %34) #14
  %39 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %39) #14
  store i32 %32, i32* %11, align 4
  %40 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %35, align 8
  %41 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %40, i64 3
  %42 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %41, align 8
  call void %42(%"class.SkSL::OutputStream"* %2, i8* nonnull %39, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %39) #14
  %43 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %43) #14
  store i32 %28, i32* %10, align 4
  %44 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %35, align 8
  %45 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %44, i64 3
  %46 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %45, align 8
  call void %46(%"class.SkSL::OutputStream"* %2, i8* nonnull %43, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %43) #14
  %47 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %47) #14
  store i32 0, i32* %9, align 4
  %48 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %35, align 8
  %49 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %48, i64 3
  %50 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %49, align 8
  call void %50(%"class.SkSL::OutputStream"* %2, i8* nonnull %47, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %47) #14
  %51 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %51) #14
  store i32 %33, i32* %8, align 4
  %52 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %35, align 8
  %53 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %52, i64 3
  %54 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %53, align 8
  call void %54(%"class.SkSL::OutputStream"* %2, i8* nonnull %51, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %51) #14
  %55 = bitcast %"class.SkSL::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #14
  %56 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %58 = bitcast %"class.SkSL::String"* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 -86, i64 24, i1 false)
  call void @_ZNK4SkSL19FunctionDeclaration11mangledNameEv(%"class.SkSL::String"* nonnull sret %17, %"class.SkSL::FunctionDeclaration"* %1) #14
  %59 = bitcast %"class.SkSL::String"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  %63 = load i8*, i8** %56, align 8
  %64 = load i64, i64* %57, align 8
  %65 = zext i8 %61 to i64
  %66 = select i1 %62, i8* %63, i8* %55
  %67 = select i1 %62, i64 %64, i64 %65
  %68 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 18, i32 0
  call void @_ZN4SkSL18SPIRVCodeGenerator16writeInstructionE6SpvOp_iNS_14StringFragmentERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 5, i32 %28, i8* %66, i64 %67, %"class.SkSL::OutputStream"* dereferenceable(8) %68)
  %69 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %1, i64 0, i32 3, i32 0, i32 0
  %70 = load %"class.SkSL::Variable"**, %"class.SkSL::Variable"*** %69, align 8
  %71 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %1, i64 0, i32 3, i32 0, i32 1
  %72 = load %"class.SkSL::Variable"**, %"class.SkSL::Variable"*** %71, align 8
  %73 = icmp eq %"class.SkSL::Variable"** %70, %72
  br i1 %73, label %86, label %74

74:                                               ; preds = %3
  %75 = bitcast %"class.SkSL::Variable"** %18 to i8*
  %76 = bitcast %"class.SkSL::Variable"** %18 to i64*
  %77 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %78 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 9, i32 0
  %79 = bitcast %"class.std::__1::tuple.703"* %4 to i8*
  %80 = getelementptr inbounds %"class.std::__1::tuple.703", %"class.std::__1::tuple.703"* %4, i64 0, i32 0, i32 0, i32 0
  %81 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %5, i64 0, i32 0
  %82 = bitcast %"class.SkSL::Variable"** %18 to %"class.SkSL::Symbol"**
  %83 = bitcast i32* %6 to i8*
  %84 = bitcast i32* %13 to i8*
  %85 = bitcast i32* %12 to i8*
  br label %92

86:                                               ; preds = %92, %3
  %87 = load i8, i8* %60, align 1
  %88 = icmp slt i8 %87, 0
  br i1 %88, label %89, label %91

89:                                               ; preds = %86
  %90 = load i8*, i8** %56, align 8
  call void @_ZdlPv(i8* %90) #16
  br label %91

91:                                               ; preds = %86, %89
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #14
  ret i32 %28

92:                                               ; preds = %74, %92
  %93 = phi %"class.SkSL::Variable"** [ %70, %74 ], [ %115, %92 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #14
  store %"class.SkSL::Variable"* inttoptr (i64 -6148914691236517206 to %"class.SkSL::Variable"*), %"class.SkSL::Variable"** %18, align 8
  %94 = bitcast %"class.SkSL::Variable"** %93 to i64*
  %95 = load i64, i64* %94, align 8
  store i64 %95, i64* %76, align 8
  %96 = load i32, i32* %77, align 8
  %97 = add i32 %96, 1
  store i32 %97, i32* %77, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #14
  store %"class.SkSL::Variable"** %18, %"class.SkSL::Variable"*** %80, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %81) #14
  %98 = call { %"struct.std::__1::__hash_node_base.166"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.162"* %78, %"class.SkSL::Variable"** nonnull dereferenceable(8) %18, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.703"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %5) #14
  %99 = extractvalue { %"struct.std::__1::__hash_node_base.166"*, i8 } %98, 0
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %99, i64 3
  %101 = bitcast %"struct.std::__1::__hash_node_base.166"* %100 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %81) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #14
  store i32 %96, i32* %101, align 4
  %102 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %82, align 8
  %103 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %102, i64 0, i32 2
  %104 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %103, align 8
  %105 = call i32 @_ZN4SkSL18SPIRVCodeGenerator14getPointerTypeERKNS_4TypeERKNS_12MemoryLayoutE16SpvStorageClass_(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %104, %"class.SkSL::MemoryLayout"* dereferenceable(4) %31, i32 7) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %83) #14
  store i32 196663, i32* %6, align 4
  %106 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %35, align 8
  %107 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %106, i64 3
  %108 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %107, align 8
  call void %108(%"class.SkSL::OutputStream"* %2, i8* nonnull %83, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %83) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %84) #14
  store i32 %105, i32* %13, align 4
  %109 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %35, align 8
  %110 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %109, i64 3
  %111 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %110, align 8
  call void %111(%"class.SkSL::OutputStream"* %2, i8* nonnull %84, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %84) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %85) #14
  store i32 %96, i32* %12, align 4
  %112 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %35, align 8
  %113 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %112, i64 3
  %114 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %113, align 8
  call void %114(%"class.SkSL::OutputStream"* %2, i8* nonnull %85, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %85) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #14
  %115 = getelementptr inbounds %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %93, i64 1
  %116 = icmp eq %"class.SkSL::Variable"** %115, %72
  br i1 %116, label %86, label %92
}

declare void @_ZNK4SkSL19FunctionDeclaration11mangledNameEv(%"class.SkSL::String"* sret, %"class.SkSL::FunctionDeclaration"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL18SPIRVCodeGenerator13writeFunctionERKNS_18FunctionDefinitionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::FunctionDefinition"* nocapture readonly dereferenceable(88), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca [22 x i8], align 1
  %7 = alloca %"class.SkSL::StringStream", align 16
  %8 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 17
  %9 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 17, i32 1
  tail call void @_ZN22SkDynamicMemoryWStream5resetEv(%class.SkDynamicMemoryWStream* %9) #14
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10)
  %11 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 17, i32 2
  %12 = bitcast %"class.SkSL::String"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #16
  br label %19

19:                                               ; preds = %3, %16
  %20 = bitcast %"class.SkSL::String"* %11 to i8*
  store i8 0, i8* %20, align 8
  %21 = bitcast %"class.SkSL::SPIRVCodeGenerator"* %0 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 601
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %22, i8* nonnull align 1 %10, i64 22, i1 false)
  %23 = getelementptr inbounds i8, i8* %21, i64 623
  store i8 0, i8* %23, align 1
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10)
  %24 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %1, i64 0, i32 1
  %25 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %24, align 8
  %26 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator18writeFunctionStartERKNS_19FunctionDeclarationERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::FunctionDeclaration"* dereferenceable(96) %25, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %27 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 26
  %28 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %29 = load i32, i32* %28, align 8
  %30 = add i32 %29, 1
  store i32 %30, i32* %28, align 8
  store i32 %29, i32* %27, align 4
  tail call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 248, i32 2, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %31 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %31) #14
  store i32 %29, i32* %5, align 4
  %32 = bitcast %"class.SkSL::OutputStream"* %2 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %33 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %33, i64 3
  %35 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %34, align 8
  call void %35(%"class.SkSL::OutputStream"* %2, i8* nonnull %31, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %31) #14
  %36 = bitcast %"class.SkSL::StringStream"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %36) #14
  %37 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %7, i64 0, i32 0, i32 0
  %38 = bitcast %"class.SkSL::StringStream"* %7 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV22SkDynamicMemoryWStream, i64 0, inrange i32 0, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %38, align 16
  %39 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %7, i64 0, i32 1, i32 1
  %40 = bitcast %"struct.SkDynamicMemoryWStream::Block"** %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 48, i1 false) #14
  %41 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %42 = bitcast %"class.SkSL::Statement"** %41 to %"class.SkSL::Block"**
  %43 = load %"class.SkSL::Block"*, %"class.SkSL::Block"** %42, align 8
  %44 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %7, i64 0, i32 0
  %45 = getelementptr inbounds %"class.SkSL::Block", %"class.SkSL::Block"* %43, i64 0, i32 1, i32 0, i32 0, i64 16
  %46 = bitcast i8* %45 to %"class.std::__1::unique_ptr.387"**
  %47 = load %"class.std::__1::unique_ptr.387"*, %"class.std::__1::unique_ptr.387"** %46, align 8
  %48 = icmp eq %"class.std::__1::unique_ptr.387"* %47, null
  br i1 %48, label %63, label %49

49:                                               ; preds = %19
  %50 = getelementptr inbounds %"class.SkSL::Block", %"class.SkSL::Block"* %43, i64 0, i32 1, i32 0, i32 0, i64 24
  %51 = bitcast i8* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = lshr i64 %52, 1
  %54 = and i64 %53, 2147483647
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr.387", %"class.std::__1::unique_ptr.387"* %47, i64 %54
  %56 = icmp eq i64 %54, 0
  br i1 %56, label %63, label %57

57:                                               ; preds = %49, %57
  %58 = phi %"class.std::__1::unique_ptr.387"* [ %61, %57 ], [ %47, %49 ]
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr.387", %"class.std::__1::unique_ptr.387"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %59, align 8
  call void @_ZN4SkSL18SPIRVCodeGenerator14writeStatementERKNS_9StatementERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Statement"* dereferenceable(16) %60, %"class.SkSL::OutputStream"* nonnull dereferenceable(8) %44) #14
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.387", %"class.std::__1::unique_ptr.387"* %58, i64 1
  %62 = icmp eq %"class.std::__1::unique_ptr.387"* %61, %55
  br i1 %62, label %63, label %57

63:                                               ; preds = %57, %19, %49
  call void @_ZN4SkSL18write_stringstreamERKNS_12StringStreamERNS_12OutputStreamE(%"class.SkSL::StringStream"* dereferenceable(64) %8, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %64 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %24, align 8
  %65 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %64, i64 0, i32 6
  %66 = load i8, i8* %65, align 1, !range !2
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %70, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 14
  call void @_ZN4SkSL18write_stringstreamERKNS_12StringStreamERNS_12OutputStreamE(%"class.SkSL::StringStream"* dereferenceable(64) %69, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  br label %70

70:                                               ; preds = %63, %68
  call void @_ZN4SkSL18write_stringstreamERKNS_12StringStreamERNS_12OutputStreamE(%"class.SkSL::StringStream"* nonnull dereferenceable(64) %7, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %71 = load i32, i32* %27, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %81, label %73

73:                                               ; preds = %70
  %74 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %24, align 8
  %75 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %74, i64 0, i32 4
  %76 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %75, align 8
  %77 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %76, i64 0, i32 3
  %78 = load i32, i32* %77, align 8
  %79 = icmp eq i32 %78, 12
  %80 = select i1 %79, i32 253, i32 255
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 %80, i32 1, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  br label %81

81:                                               ; preds = %73, %70
  %82 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %82) #14
  store i32 65592, i32* %4, align 4
  %83 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %32, align 8
  %84 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %83, i64 3
  %85 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %84, align 8
  call void %85(%"class.SkSL::OutputStream"* %2, i8* nonnull %82, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %82) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 16
  %86 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %7, i64 0, i32 2, i32 0
  %87 = bitcast %"class.std::__1::basic_string"* %86 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  %89 = load i8, i8* %88, align 1
  %90 = icmp slt i8 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %81
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %86, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8
  call void @_ZdlPv(i8* %93) #16
  br label %94

94:                                               ; preds = %81, %91
  %95 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %7, i64 0, i32 1
  call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* %95) #14
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %36) #14
  ret i32 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18SPIRVCodeGenerator10writeBlockERKNS_5BlockERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::Block"* nocapture readonly dereferenceable(72), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.SkSL::Block", %"class.SkSL::Block"* %1, i64 0, i32 1, i32 0, i32 0, i64 16
  %5 = bitcast i8* %4 to %"class.std::__1::unique_ptr.387"**
  %6 = load %"class.std::__1::unique_ptr.387"*, %"class.std::__1::unique_ptr.387"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.387"* %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.SkSL::Block", %"class.SkSL::Block"* %1, i64 0, i32 1, i32 0, i32 0, i64 24
  %10 = bitcast i8* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = lshr i64 %11, 1
  %13 = and i64 %12, 2147483647
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.387", %"class.std::__1::unique_ptr.387"* %6, i64 %13
  %15 = icmp eq i64 %13, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %17, %3, %8
  ret void

17:                                               ; preds = %8, %17
  %18 = phi %"class.std::__1::unique_ptr.387"* [ %21, %17 ], [ %6, %8 ]
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.387", %"class.std::__1::unique_ptr.387"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %19, align 8
  tail call void @_ZN4SkSL18SPIRVCodeGenerator14writeStatementERKNS_9StatementERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Statement"* dereferenceable(16) %20, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.387", %"class.std::__1::unique_ptr.387"* %18, i64 1
  %22 = icmp eq %"class.std::__1::unique_ptr.387"* %21, %14
  br i1 %22, label %16, label %17
}

declare void @_ZN4SkSL18write_stringstreamERKNS_12StringStreamERNS_12OutputStreamE(%"class.SkSL::StringStream"* dereferenceable(64), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL12StringStreamD2Ev(%"class.SkSL::StringStream"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 2, i32 0
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #16
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 1
  tail call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* %12) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18SPIRVCodeGenerator11writeLayoutERKNS_6LayoutEj(%"class.SkSL::SPIRVCodeGenerator"*, %"struct.SkSL::Layout"* nocapture readonly dereferenceable(72), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = icmp sgt i32 %29, -1
  br i1 %30, label %31, label %50

31:                                               ; preds = %3
  %32 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %33 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #14
  store i32 262215, i32* %9, align 4
  %34 = bitcast %"class.SkSL::OutputStream"* %32 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %35 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %35, i64 3
  %37 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %36, align 8
  call void %37(%"class.SkSL::OutputStream"* %32, i8* nonnull %33, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #14
  %38 = bitcast i32* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %38) #14
  store i32 %2, i32* %27, align 4
  %39 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %34, align 8
  %40 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %39, i64 3
  %41 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %40, align 8
  call void %41(%"class.SkSL::OutputStream"* %32, i8* nonnull %38, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %38) #14
  %42 = bitcast i32* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %42) #14
  store i32 30, i32* %26, align 4
  %43 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %34, align 8
  %44 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %43, i64 3
  %45 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %44, align 8
  call void %45(%"class.SkSL::OutputStream"* %32, i8* nonnull %42, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %42) #14
  %46 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %46) #14
  store i32 %29, i32* %25, align 4
  %47 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %34, align 8
  %48 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %47, i64 3
  %49 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %48, align 8
  call void %49(%"class.SkSL::OutputStream"* %32, i8* nonnull %46, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %46) #14
  br label %50

50:                                               ; preds = %31, %3
  %51 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 3
  %52 = load i32, i32* %51, align 4
  %53 = icmp sgt i32 %52, -1
  br i1 %53, label %54, label %73

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %56 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %56) #14
  store i32 262215, i32* %8, align 4
  %57 = bitcast %"class.SkSL::OutputStream"* %55 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %58 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %58, i64 3
  %60 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %59, align 8
  call void %60(%"class.SkSL::OutputStream"* %55, i8* nonnull %56, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %56) #14
  %61 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %61) #14
  store i32 %2, i32* %24, align 4
  %62 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %57, align 8
  %63 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %62, i64 3
  %64 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %63, align 8
  call void %64(%"class.SkSL::OutputStream"* %55, i8* nonnull %61, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %61) #14
  %65 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %65) #14
  store i32 33, i32* %23, align 4
  %66 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %57, align 8
  %67 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %66, i64 3
  %68 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %67, align 8
  call void %68(%"class.SkSL::OutputStream"* %55, i8* nonnull %65, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %65) #14
  %69 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %69) #14
  store i32 %52, i32* %22, align 4
  %70 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %57, align 8
  %71 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %70, i64 3
  %72 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %71, align 8
  call void %72(%"class.SkSL::OutputStream"* %55, i8* nonnull %69, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %69) #14
  br label %73

73:                                               ; preds = %54, %50
  %74 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 4
  %75 = load i32, i32* %74, align 8
  %76 = icmp sgt i32 %75, -1
  br i1 %76, label %77, label %96

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %79 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %79) #14
  store i32 262215, i32* %7, align 4
  %80 = bitcast %"class.SkSL::OutputStream"* %78 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %81 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %81, i64 3
  %83 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %82, align 8
  call void %83(%"class.SkSL::OutputStream"* %78, i8* nonnull %79, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %79) #14
  %84 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %84) #14
  store i32 %2, i32* %21, align 4
  %85 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %80, align 8
  %86 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %85, i64 3
  %87 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %86, align 8
  call void %87(%"class.SkSL::OutputStream"* %78, i8* nonnull %84, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %84) #14
  %88 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %88) #14
  store i32 32, i32* %20, align 4
  %89 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %80, align 8
  %90 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %89, i64 3
  %91 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %90, align 8
  call void %91(%"class.SkSL::OutputStream"* %78, i8* nonnull %88, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %88) #14
  %92 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %92) #14
  store i32 %75, i32* %19, align 4
  %93 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %80, align 8
  %94 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %93, i64 3
  %95 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %94, align 8
  call void %95(%"class.SkSL::OutputStream"* %78, i8* nonnull %92, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %92) #14
  br label %96

96:                                               ; preds = %77, %73
  %97 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 5
  %98 = load i32, i32* %97, align 4
  %99 = icmp sgt i32 %98, -1
  br i1 %99, label %100, label %119

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %102 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %102) #14
  store i32 262215, i32* %6, align 4
  %103 = bitcast %"class.SkSL::OutputStream"* %101 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %104 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %103, align 8
  %105 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %104, i64 3
  %106 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %105, align 8
  call void %106(%"class.SkSL::OutputStream"* %101, i8* nonnull %102, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %102) #14
  %107 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %107) #14
  store i32 %2, i32* %18, align 4
  %108 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %103, align 8
  %109 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %108, i64 3
  %110 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %109, align 8
  call void %110(%"class.SkSL::OutputStream"* %101, i8* nonnull %107, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %107) #14
  %111 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %111) #14
  store i32 34, i32* %17, align 4
  %112 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %103, align 8
  %113 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %112, i64 3
  %114 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %113, align 8
  call void %114(%"class.SkSL::OutputStream"* %101, i8* nonnull %111, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %111) #14
  %115 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %115) #14
  store i32 %98, i32* %16, align 4
  %116 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %103, align 8
  %117 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %116, i64 3
  %118 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %117, align 8
  call void %118(%"class.SkSL::OutputStream"* %101, i8* nonnull %115, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %115) #14
  br label %119

119:                                              ; preds = %100, %96
  %120 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 7
  %121 = load i32, i32* %120, align 4
  %122 = icmp sgt i32 %121, -1
  br i1 %122, label %123, label %145

123:                                              ; preds = %119
  %124 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %125 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %125) #14
  store i32 262215, i32* %5, align 4
  %126 = bitcast %"class.SkSL::OutputStream"* %124 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %127 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %126, align 8
  %128 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %127, i64 3
  %129 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %128, align 8
  call void %129(%"class.SkSL::OutputStream"* %124, i8* nonnull %125, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %125) #14
  %130 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %130) #14
  store i32 %2, i32* %15, align 4
  %131 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %126, align 8
  %132 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %131, i64 3
  %133 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %132, align 8
  call void %133(%"class.SkSL::OutputStream"* %124, i8* nonnull %130, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %130) #14
  %134 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %134) #14
  store i32 43, i32* %14, align 4
  %135 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %126, align 8
  %136 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %135, i64 3
  %137 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %136, align 8
  call void %137(%"class.SkSL::OutputStream"* %124, i8* nonnull %134, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %134) #14
  %138 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %138) #14
  store i32 %121, i32* %13, align 4
  %139 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %126, align 8
  %140 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %139, i64 3
  %141 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %140, align 8
  call void %141(%"class.SkSL::OutputStream"* %124, i8* nonnull %138, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %138) #14
  %142 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 4
  %143 = load i64, i64* %142, align 8
  %144 = or i64 %143, 1099511627776
  store i64 %144, i64* %142, align 8
  br label %145

145:                                              ; preds = %123, %119
  %146 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 6
  %147 = load i32, i32* %146, align 8
  %148 = icmp slt i32 %147, 0
  br i1 %148, label %169, label %149

149:                                              ; preds = %145
  switch i32 %147, label %150 [
    i32 10007, label %169
    i32 10002, label %169
    i32 10001, label %169
  ]

150:                                              ; preds = %149
  %151 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %152 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %152) #14
  store i32 262215, i32* %4, align 4
  %153 = bitcast %"class.SkSL::OutputStream"* %151 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %154 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %153, align 8
  %155 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %154, i64 3
  %156 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %155, align 8
  call void %156(%"class.SkSL::OutputStream"* %151, i8* nonnull %152, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %152) #14
  %157 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %157) #14
  store i32 %2, i32* %12, align 4
  %158 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %153, align 8
  %159 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %158, i64 3
  %160 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %159, align 8
  call void %160(%"class.SkSL::OutputStream"* %151, i8* nonnull %157, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %157) #14
  %161 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %161) #14
  store i32 11, i32* %11, align 4
  %162 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %153, align 8
  %163 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %162, i64 3
  %164 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %163, align 8
  call void %164(%"class.SkSL::OutputStream"* %151, i8* nonnull %161, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %161) #14
  %165 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %165) #14
  store i32 %147, i32* %10, align 4
  %166 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %153, align 8
  %167 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %166, i64 3
  %168 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %167, align 8
  call void %168(%"class.SkSL::OutputStream"* %151, i8* nonnull %165, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %165) #14
  br label %169

169:                                              ; preds = %149, %149, %149, %145, %150
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18SPIRVCodeGenerator14writeGlobalVarENS_11ProgramKindERKNS_14VarDeclarationE(%"class.SkSL::SPIRVCodeGenerator"*, i8 signext, %"class.SkSL::VarDeclaration"* dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca [15 x i8], align 8
  %12 = alloca %"class.std::__1::tuple.713", align 8
  %13 = alloca %"class.std::__1::tuple.633", align 1
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca %"struct.SkSL::Layout", align 8
  %23 = alloca %"class.SkSL::Variable"*, align 8
  %24 = alloca %"class.SkSL::String", align 8
  %25 = getelementptr inbounds %"class.SkSL::VarDeclaration", %"class.SkSL::VarDeclaration"* %2, i64 0, i32 1
  %26 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %25, align 8
  %27 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %26, i64 0, i32 2
  %28 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %27, align 8
  %29 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %28, i64 0, i32 0, i32 6
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, 9999
  br i1 %31, label %375, label %32

32:                                               ; preds = %3
  %33 = icmp eq i32 %30, 10001
  %34 = icmp ne i8 %1, 0
  %35 = and i1 %34, %33
  br i1 %35, label %375, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 1
  %38 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %37, align 8
  %39 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %38, i64 0, i32 9, i32 0, i32 0, i32 0
  %40 = load %"class.SkSL::ProgramUsage"*, %"class.SkSL::ProgramUsage"** %39, align 8
  %41 = tail call { i64, i32 } @_ZNK4SkSL12ProgramUsage3getERKNS_8VariableE(%"class.SkSL::ProgramUsage"* %40, %"class.SkSL::Variable"* dereferenceable(64) %26) #14
  %42 = extractvalue { i64, i32 } %41, 0
  %43 = icmp ult i64 %42, 4294967296
  %44 = extractvalue { i64, i32 } %41, 1
  %45 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %27, align 8
  %46 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %45, i64 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = and i32 %47, 14
  %49 = or i32 %44, %48
  %50 = icmp eq i32 %49, 0
  %51 = and i1 %50, %43
  br i1 %51, label %375, label %52

52:                                               ; preds = %36
  %53 = and i32 %47, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %142

55:                                               ; preds = %52
  %56 = and i32 %47, 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %142

58:                                               ; preds = %55
  %59 = and i32 %47, 8
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %142, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %45, i64 0, i32 0, i32 0
  %63 = load i32, i32* %62, align 8
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %142

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %26, i64 0, i32 0, i32 2
  %68 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %67, align 8
  %69 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %68, i64 0, i32 3
  %70 = load i32, i32* %69, align 8
  switch i32 %70, label %71 [
    i32 10, label %142
    i32 7, label %142
    i32 6, label %142
  ]

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 37
  %73 = ptrtoint %"class.SkSL::VarDeclaration"* %2 to i64
  %74 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 37, i32 0, i32 1
  %75 = load %"class.SkSL::VarDeclaration"**, %"class.SkSL::VarDeclaration"*** %74, align 8
  %76 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 37, i32 0, i32 2, i32 0, i32 0
  %77 = load %"class.SkSL::VarDeclaration"**, %"class.SkSL::VarDeclaration"*** %76, align 8
  %78 = icmp ult %"class.SkSL::VarDeclaration"** %75, %77
  %79 = ptrtoint %"class.SkSL::VarDeclaration"** %77 to i64
  br i1 %78, label %80, label %85

80:                                               ; preds = %71
  %81 = bitcast %"class.SkSL::VarDeclaration"** %75 to i64*
  store i64 %73, i64* %81, align 8
  %82 = getelementptr inbounds %"class.SkSL::VarDeclaration"*, %"class.SkSL::VarDeclaration"** %75, i64 1
  %83 = ptrtoint %"class.SkSL::VarDeclaration"** %82 to i64
  %84 = bitcast %"class.SkSL::VarDeclaration"*** %74 to i64*
  store i64 %83, i64* %84, align 8
  br label %375

85:                                               ; preds = %71
  %86 = ptrtoint %"class.SkSL::VarDeclaration"** %75 to i64
  %87 = bitcast %"class.SkSL::VarDeclaration"*** %74 to i64*
  %88 = bitcast %"class.std::__1::vector.351"* %72 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = sub i64 %86, %89
  %91 = ashr exact i64 %90, 3
  %92 = add nsw i64 %91, 1
  %93 = icmp ugt i64 %92, 2305843009213693951
  br i1 %93, label %94, label %96

94:                                               ; preds = %85
  %95 = bitcast %"class.std::__1::vector.351"* %72 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %95) #15
  unreachable

96:                                               ; preds = %85
  %97 = bitcast %"class.SkSL::VarDeclaration"*** %76 to i64*
  %98 = sub i64 %79, %89
  %99 = ashr exact i64 %98, 3
  %100 = icmp ult i64 %99, 1152921504606846975
  br i1 %100, label %101, label %109

101:                                              ; preds = %96
  %102 = ashr exact i64 %98, 2
  %103 = icmp ult i64 %102, %92
  %104 = select i1 %103, i64 %92, i64 %102
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %114, label %106

106:                                              ; preds = %101
  %107 = icmp ugt i64 %104, 2305843009213693951
  br i1 %107, label %108, label %109

108:                                              ; preds = %106
  tail call void @abort() #15
  unreachable

109:                                              ; preds = %106, %96
  %110 = phi i64 [ %104, %106 ], [ 2305843009213693951, %96 ]
  %111 = shl i64 %110, 3
  %112 = tail call i8* @_Znwm(i64 %111) #16
  %113 = bitcast i8* %112 to %"class.SkSL::VarDeclaration"**
  br label %114

114:                                              ; preds = %109, %101
  %115 = phi i64 [ %110, %109 ], [ 0, %101 ]
  %116 = phi %"class.SkSL::VarDeclaration"** [ %113, %109 ], [ null, %101 ]
  %117 = getelementptr inbounds %"class.SkSL::VarDeclaration"*, %"class.SkSL::VarDeclaration"** %116, i64 %91
  %118 = getelementptr inbounds %"class.SkSL::VarDeclaration"*, %"class.SkSL::VarDeclaration"** %116, i64 %115
  %119 = ptrtoint %"class.SkSL::VarDeclaration"** %118 to i64
  %120 = bitcast %"class.SkSL::VarDeclaration"** %117 to i64*
  store i64 %73, i64* %120, align 8
  %121 = getelementptr inbounds %"class.SkSL::VarDeclaration"*, %"class.SkSL::VarDeclaration"** %117, i64 1
  %122 = ptrtoint %"class.SkSL::VarDeclaration"** %121 to i64
  %123 = getelementptr inbounds %"class.std::__1::vector.351", %"class.std::__1::vector.351"* %72, i64 0, i32 0, i32 0
  %124 = load %"class.SkSL::VarDeclaration"**, %"class.SkSL::VarDeclaration"*** %123, align 8
  %125 = load i64, i64* %87, align 8
  %126 = ptrtoint %"class.SkSL::VarDeclaration"** %124 to i64
  %127 = sub i64 %125, %126
  %128 = ashr exact i64 %127, 3
  %129 = sub nsw i64 0, %128
  %130 = getelementptr inbounds %"class.SkSL::VarDeclaration"*, %"class.SkSL::VarDeclaration"** %117, i64 %129
  %131 = ptrtoint %"class.SkSL::VarDeclaration"** %130 to i64
  %132 = icmp sgt i64 %127, 0
  br i1 %132, label %133, label %137

133:                                              ; preds = %114
  %134 = bitcast %"class.SkSL::VarDeclaration"** %130 to i8*
  %135 = bitcast %"class.SkSL::VarDeclaration"** %124 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %134, i8* align 8 %135, i64 %127, i1 false) #14
  %136 = load %"class.SkSL::VarDeclaration"**, %"class.SkSL::VarDeclaration"*** %123, align 8
  br label %137

137:                                              ; preds = %133, %114
  %138 = phi %"class.SkSL::VarDeclaration"** [ %124, %114 ], [ %136, %133 ]
  store i64 %131, i64* %88, align 8
  store i64 %122, i64* %87, align 8
  store i64 %119, i64* %97, align 8
  %139 = icmp eq %"class.SkSL::VarDeclaration"** %138, null
  br i1 %139, label %375, label %140

140:                                              ; preds = %137
  %141 = bitcast %"class.SkSL::VarDeclaration"** %138 to i8*
  tail call void @_ZdlPv(i8* %141) #16
  br label %375

142:                                              ; preds = %66, %66, %66, %52, %55, %61, %58
  %143 = phi i32 [ 0, %66 ], [ 6, %58 ], [ 9, %61 ], [ 3, %55 ], [ 1, %52 ], [ 0, %66 ], [ 0, %66 ]
  %144 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %26, i64 0, i32 0, i32 2
  %145 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %144, align 8
  %146 = bitcast %"struct.SkSL::Layout"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %146) #14
  %147 = bitcast %"struct.SkSL::Modifiers"* %45 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %146, i8* align 8 %147, i64 72, i1 false)
  %148 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %22, i64 0, i32 5
  %149 = load i32, i32* %148, align 4
  %150 = icmp slt i32 %149, 0
  %151 = icmp eq i32 %143, 0
  %152 = and i1 %151, %150
  br i1 %152, label %153, label %159

153:                                              ; preds = %142
  %154 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %37, align 8
  %155 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %154, i64 0, i32 1, i32 0, i32 0, i32 0
  %156 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %155, align 8
  %157 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %156, i64 0, i32 1, i32 8
  %158 = load i32, i32* %157, align 4
  store i32 %158, i32* %148, align 4
  br label %159

159:                                              ; preds = %153, %142
  %160 = icmp eq %"class.SkSL::Type"* %145, null
  br i1 %160, label %208, label %161

161:                                              ; preds = %159
  %162 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %145, i64 0, i32 6
  %163 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %162, align 8
  %164 = icmp eq %"class.SkSL::Type"* %163, null
  %165 = select i1 %164, %"class.SkSL::Type"* %145, %"class.SkSL::Type"* %163
  %166 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %165, i64 0, i32 4
  %167 = load i32, i32* %166, align 4
  %168 = icmp ult i32 %167, 3
  br i1 %168, label %173, label %169

169:                                              ; preds = %161
  %170 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %145, i64 0, i32 3
  %171 = load i32, i32* %170, align 8
  %172 = icmp eq i32 %171, 6
  br i1 %172, label %173, label %208

173:                                              ; preds = %169, %161
  br i1 %164, label %179, label %174

174:                                              ; preds = %173, %174
  %175 = phi %"class.SkSL::Type"* [ %177, %174 ], [ %163, %173 ]
  %176 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %175, i64 0, i32 6
  %177 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %176, align 8
  %178 = icmp eq %"class.SkSL::Type"* %177, null
  br i1 %178, label %179, label %174

179:                                              ; preds = %174, %173
  %180 = phi %"class.SkSL::Type"* [ %145, %173 ], [ %175, %174 ]
  %181 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %180, i64 0, i32 16
  %182 = load i8, i8* %181, align 8, !range !2
  %183 = icmp eq i8 %182, 0
  br i1 %183, label %184, label %208

184:                                              ; preds = %179
  %185 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %37, align 8
  %186 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %185, i64 0, i32 1, i32 0, i32 0, i32 0
  %187 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %186, align 8
  %188 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %187, i64 0, i32 1, i32 3
  %189 = load i8, i8* %188, align 1, !range !2
  %190 = icmp eq i8 %189, 0
  br i1 %190, label %191, label %208

191:                                              ; preds = %184
  %192 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %193 = load i32, i32* %192, align 8
  %194 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %195 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %195) #14
  store i32 196679, i32* %14, align 4
  %196 = bitcast %"class.SkSL::OutputStream"* %194 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %197 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %196, align 8
  %198 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %197, i64 3
  %199 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %198, align 8
  call void %199(%"class.SkSL::OutputStream"* %194, i8* nonnull %195, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %195) #14
  %200 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %200) #14
  store i32 %193, i32* %16, align 4
  %201 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %196, align 8
  %202 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %201, i64 3
  %203 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %202, align 8
  call void %203(%"class.SkSL::OutputStream"* %194, i8* nonnull %200, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %200) #14
  %204 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %204) #14
  store i32 0, i32* %15, align 4
  %205 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %196, align 8
  %206 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %205, i64 3
  %207 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %206, align 8
  call void %207(%"class.SkSL::OutputStream"* %194, i8* nonnull %204, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %204) #14
  br label %208

208:                                              ; preds = %159, %169, %179, %184, %191
  %209 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %210 = load i32, i32* %209, align 8
  %211 = add i32 %210, 1
  store i32 %211, i32* %209, align 8
  %212 = bitcast %"class.SkSL::Variable"** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %212) #14
  store %"class.SkSL::Variable"* %26, %"class.SkSL::Variable"** %23, align 8
  %213 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 9, i32 0
  %214 = bitcast %"class.std::__1::tuple.713"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %214) #14
  %215 = getelementptr inbounds %"class.std::__1::tuple.713", %"class.std::__1::tuple.713"* %12, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::Variable"** %23, %"class.SkSL::Variable"*** %215, align 8
  %216 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %13, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %216) #14
  %217 = call { %"struct.std::__1::__hash_node_base.166"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.162"* %213, %"class.SkSL::Variable"** nonnull dereferenceable(8) %23, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.713"* nonnull dereferenceable(8) %12, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %13) #14
  %218 = extractvalue { %"struct.std::__1::__hash_node_base.166"*, i8 } %217, 0
  %219 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %218, i64 3
  %220 = bitcast %"struct.std::__1::__hash_node_base.166"* %219 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %216) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %214) #14
  store i32 %210, i32* %220, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %212) #14
  %221 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %27, align 8
  %222 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %221, i64 0, i32 0, i32 6
  %223 = load i32, i32* %222, align 8
  %224 = icmp eq i32 %223, 10002
  br i1 %224, label %225, label %286

225:                                              ; preds = %208
  %226 = bitcast %"class.SkSL::String"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %227 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %226, i64 0, i32 1, i32 0
  store i8 5, i8* %227, align 1
  %228 = bitcast %"class.SkSL::String"* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %228, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i64 0, i64 0), i64 5, i1 false) #14
  %229 = getelementptr inbounds i8, i8* %228, i64 5
  store i8 0, i8* %229, align 1
  %230 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %145, i64 0, i32 6
  %231 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %230, align 8
  %232 = icmp eq %"class.SkSL::Type"* %231, null
  %233 = select i1 %232, %"class.SkSL::Type"* %145, %"class.SkSL::Type"* %231
  %234 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 34
  %235 = load i32, i32* %234, align 8
  %236 = getelementptr inbounds [15 x i8], [15 x i8]* %11, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %236)
  %237 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 184) #14
  %238 = bitcast i8* %237 to %"class.SkSL::Type"*
  %239 = bitcast %"class.SkSL::String"* %24 to i64*
  %240 = load i64, i64* %239, align 8
  %241 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %242 = bitcast i64* %241 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %236, i8* align 8 %242, i64 15, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %228, i8 0, i64 24, i1 false) #14
  %243 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %233, i64 0, i32 1
  %244 = bitcast i8** %243 to i64*
  %245 = load i64, i64* %244, align 8
  %246 = bitcast i8* %237 to i32 (...)***
  %247 = getelementptr inbounds i8, i8* %237, i64 8
  %248 = bitcast i8* %247 to i32*
  store i32 -1, i32* %248, align 8
  %249 = getelementptr inbounds i8, i8* %237, i64 12
  %250 = bitcast i8* %249 to i32*
  store i32 13, i32* %250, align 4
  %251 = getelementptr inbounds i8, i8* %237, i64 16
  %252 = bitcast i8* %251 to i8**
  %253 = getelementptr inbounds i8, i8* %237, i64 24
  %254 = bitcast i8* %253 to i64*
  %255 = getelementptr inbounds i8, i8* %237, i64 32
  %256 = bitcast i8* %255 to i64*
  store i64 0, i64* %256, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %246, align 8
  %257 = getelementptr inbounds i8, i8* %237, i64 40
  %258 = bitcast i8* %257 to i64*
  store i64 %245, i64* %258, align 8
  %259 = getelementptr inbounds i8, i8* %237, i64 48
  %260 = bitcast i8* %259 to i64*
  store i64 %240, i64* %260, align 8
  %261 = getelementptr inbounds i8, i8* %237, i64 56
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %261, i8* nonnull align 8 %236, i64 15, i1 false) #14
  %262 = getelementptr inbounds i8, i8* %237, i64 71
  store i8 5, i8* %262, align 1
  %263 = getelementptr inbounds i8, i8* %237, i64 72
  %264 = bitcast i8* %263 to i32*
  store i32 0, i32* %264, align 8
  %265 = getelementptr inbounds i8, i8* %237, i64 76
  %266 = bitcast i8* %265 to i32*
  store i32 4, i32* %266, align 4
  %267 = getelementptr inbounds i8, i8* %237, i64 80
  %268 = bitcast i8* %267 to i32*
  store i32 -1, i32* %268, align 8
  %269 = getelementptr inbounds i8, i8* %237, i64 88
  %270 = bitcast i8* %269 to %"class.SkSL::Type"**
  store %"class.SkSL::Type"* %233, %"class.SkSL::Type"** %270, align 8
  %271 = getelementptr inbounds i8, i8* %237, i64 96
  call void @llvm.memset.p0i8.i64(i8* align 8 %271, i8 0, i64 24, i1 false) #14
  %272 = getelementptr inbounds i8, i8* %237, i64 120
  %273 = bitcast i8* %272 to i32*
  store i32 %235, i32* %273, align 8
  %274 = getelementptr inbounds i8, i8* %237, i64 124
  %275 = bitcast i8* %274 to i32*
  store i32 1, i32* %275, align 4
  %276 = getelementptr inbounds i8, i8* %237, i64 128
  %277 = getelementptr inbounds i8, i8* %237, i64 168
  call void @llvm.memset.p0i8.i64(i8* align 8 %276, i8 0, i64 33, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* align 8 %277, i8 0, i64 16, i1 false) #14
  store i8* %259, i8** %252, align 8
  store i64 5, i64* %254, align 8
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %236)
  %278 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %279 = call i32 @_ZN4SkSL18SPIRVCodeGenerator14getPointerTypeERKNS_4TypeERKNS_12MemoryLayoutE16SpvStorageClass_(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %238, %"class.SkSL::MemoryLayout"* dereferenceable(4) %278, i32 %143) #14
  %280 = icmp eq i8* %237, null
  br i1 %280, label %289, label %281

281:                                              ; preds = %225
  %282 = bitcast i8* %237 to void (%"class.SkSL::Type"*)***
  %283 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %282, align 8
  %284 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %283, i64 1
  %285 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %284, align 8
  call void %285(%"class.SkSL::Type"* nonnull %238) #14
  br label %289

286:                                              ; preds = %208
  %287 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %288 = call i32 @_ZN4SkSL18SPIRVCodeGenerator14getPointerTypeERKNS_4TypeERKNS_12MemoryLayoutE16SpvStorageClass_(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %145, %"class.SkSL::MemoryLayout"* dereferenceable(4) %287, i32 %143) #14
  br label %289

289:                                              ; preds = %281, %225, %286
  %290 = phi i32 [ %288, %286 ], [ %279, %225 ], [ %279, %281 ]
  %291 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 15, i32 0
  %292 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %292) #14
  store i32 262203, i32* %7, align 4
  %293 = bitcast %"class.SkSL::OutputStream"* %291 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %294 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %293, align 8
  %295 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %294, i64 3
  %296 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %295, align 8
  call void %296(%"class.SkSL::OutputStream"* %291, i8* nonnull %292, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %292) #14
  %297 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %297) #14
  store i32 %290, i32* %10, align 4
  %298 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %293, align 8
  %299 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %298, i64 3
  %300 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %299, align 8
  call void %300(%"class.SkSL::OutputStream"* %291, i8* nonnull %297, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %297) #14
  %301 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %301) #14
  store i32 %210, i32* %9, align 4
  %302 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %293, align 8
  %303 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %302, i64 3
  %304 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %303, align 8
  call void %304(%"class.SkSL::OutputStream"* %291, i8* nonnull %301, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %301) #14
  %305 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %305) #14
  store i32 %143, i32* %8, align 4
  %306 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %293, align 8
  %307 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %306, i64 3
  %308 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %307, align 8
  call void %308(%"class.SkSL::OutputStream"* %291, i8* nonnull %305, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %305) #14
  %309 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %26, i64 0, i32 0, i32 1, i32 0
  %310 = load i8*, i8** %309, align 8
  %311 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %26, i64 0, i32 0, i32 1, i32 1
  %312 = load i64, i64* %311, align 8
  %313 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 18, i32 0
  call void @_ZN4SkSL18SPIRVCodeGenerator16writeInstructionE6SpvOp_iNS_14StringFragmentERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 5, i32 %210, i8* %310, i64 %312, %"class.SkSL::OutputStream"* dereferenceable(8) %313)
  %314 = getelementptr inbounds %"class.SkSL::VarDeclaration", %"class.SkSL::VarDeclaration"* %2, i64 0, i32 4, i32 0, i32 0, i32 0
  %315 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %314, align 8
  %316 = icmp eq %"class.SkSL::Expression"* %315, null
  br i1 %316, label %331, label %317

317:                                              ; preds = %289
  %318 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 26
  store i32 -1, i32* %318, align 4
  %319 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %314, align 8
  %320 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 14, i32 0
  %321 = call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %319, %"class.SkSL::OutputStream"* dereferenceable(8) %320)
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 62, i32 3, %"class.SkSL::OutputStream"* dereferenceable(8) %320) #14
  %322 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %322) #14
  store i32 %210, i32* %5, align 4
  %323 = bitcast %"class.SkSL::OutputStream"* %320 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %324 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %323, align 8
  %325 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %324, i64 3
  %326 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %325, align 8
  call void %326(%"class.SkSL::OutputStream"* %320, i8* nonnull %322, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %322) #14
  %327 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %327) #14
  store i32 %321, i32* %4, align 4
  %328 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %323, align 8
  %329 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %328, i64 3
  %330 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %329, align 8
  call void %330(%"class.SkSL::OutputStream"* %320, i8* nonnull %327, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %327) #14
  store i32 0, i32* %318, align 4
  br label %331

331:                                              ; preds = %289, %317
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeLayoutERKNS_6LayoutEj(%"class.SkSL::SPIRVCodeGenerator"* %0, %"struct.SkSL::Layout"* nonnull dereferenceable(72) %22, i32 %210)
  %332 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %27, align 8
  %333 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %332, i64 0, i32 1
  %334 = load i32, i32* %333, align 8
  %335 = and i32 %334, 16
  %336 = icmp eq i32 %335, 0
  br i1 %336, label %355, label %337

337:                                              ; preds = %331
  %338 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %339 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %339) #14
  store i32 196679, i32* %6, align 4
  %340 = bitcast %"class.SkSL::OutputStream"* %338 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %341 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %340, align 8
  %342 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %341, i64 3
  %343 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %342, align 8
  call void %343(%"class.SkSL::OutputStream"* %338, i8* nonnull %339, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %339) #14
  %344 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %344) #14
  store i32 %210, i32* %18, align 4
  %345 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %340, align 8
  %346 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %345, i64 3
  %347 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %346, align 8
  call void %347(%"class.SkSL::OutputStream"* %338, i8* nonnull %344, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %344) #14
  %348 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %348) #14
  store i32 14, i32* %17, align 4
  %349 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %340, align 8
  %350 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %349, i64 3
  %351 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %350, align 8
  call void %351(%"class.SkSL::OutputStream"* %338, i8* nonnull %348, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %348) #14
  %352 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %27, align 8
  %353 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %352, i64 0, i32 1
  %354 = load i32, i32* %353, align 8
  br label %355

355:                                              ; preds = %331, %337
  %356 = phi i32 [ %334, %331 ], [ %354, %337 ]
  %357 = and i32 %356, 32
  %358 = icmp eq i32 %357, 0
  br i1 %358, label %374, label %359

359:                                              ; preds = %355
  %360 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %361 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %361) #14
  store i32 196679, i32* %19, align 4
  %362 = bitcast %"class.SkSL::OutputStream"* %360 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %363 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %362, align 8
  %364 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %363, i64 3
  %365 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %364, align 8
  call void %365(%"class.SkSL::OutputStream"* %360, i8* nonnull %361, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %361) #14
  %366 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %366) #14
  store i32 %210, i32* %21, align 4
  %367 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %362, align 8
  %368 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %367, i64 3
  %369 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %368, align 8
  call void %369(%"class.SkSL::OutputStream"* %360, i8* nonnull %366, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %366) #14
  %370 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %370) #14
  store i32 13, i32* %20, align 4
  %371 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %362, align 8
  %372 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %371, i64 3
  %373 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %372, align 8
  call void %373(%"class.SkSL::OutputStream"* %360, i8* nonnull %370, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %370) #14
  br label %374

374:                                              ; preds = %355, %359
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %146) #14
  br label %375

375:                                              ; preds = %36, %140, %137, %80, %374, %32, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18SPIRVCodeGenerator19writeVarDeclarationERKNS_14VarDeclarationERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::VarDeclaration"* nocapture readonly dereferenceable(48), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %"class.std::__1::tuple.713", align 8
  %9 = alloca %"class.std::__1::tuple.633", align 1
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %"class.SkSL::Variable"*, align 8
  %16 = getelementptr inbounds %"class.SkSL::VarDeclaration", %"class.SkSL::VarDeclaration"* %1, i64 0, i32 1
  %17 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %16, align 8
  %18 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %17, i64 0, i32 0, i32 2
  %19 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %18, align 8
  %20 = icmp eq %"class.SkSL::Type"* %19, null
  br i1 %20, label %69, label %21

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %19, i64 0, i32 6
  %23 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %22, align 8
  %24 = icmp eq %"class.SkSL::Type"* %23, null
  %25 = select i1 %24, %"class.SkSL::Type"* %19, %"class.SkSL::Type"* %23
  %26 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %25, i64 0, i32 4
  %27 = load i32, i32* %26, align 4
  %28 = icmp ult i32 %27, 3
  br i1 %28, label %33, label %29

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %19, i64 0, i32 3
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %31, 6
  br i1 %32, label %33, label %69

33:                                               ; preds = %29, %21
  br i1 %24, label %39, label %34

34:                                               ; preds = %33, %34
  %35 = phi %"class.SkSL::Type"* [ %37, %34 ], [ %23, %33 ]
  %36 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %35, i64 0, i32 6
  %37 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %36, align 8
  %38 = icmp eq %"class.SkSL::Type"* %37, null
  br i1 %38, label %39, label %34

39:                                               ; preds = %34, %33
  %40 = phi %"class.SkSL::Type"* [ %19, %33 ], [ %35, %34 ]
  %41 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %40, i64 0, i32 16
  %42 = load i8, i8* %41, align 8, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %69

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 1
  %46 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %45, align 8
  %47 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %46, i64 0, i32 1, i32 0, i32 0, i32 0
  %48 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %47, align 8
  %49 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %48, i64 0, i32 1, i32 3
  %50 = load i8, i8* %49, align 1, !range !2
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %69

52:                                               ; preds = %44
  %53 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %54 = load i32, i32* %53, align 8
  %55 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0
  %56 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %56) #14
  store i32 196679, i32* %10, align 4
  %57 = bitcast %"class.SkSL::OutputStream"* %55 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %58 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %58, i64 3
  %60 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %59, align 8
  call void %60(%"class.SkSL::OutputStream"* %55, i8* nonnull %56, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %56) #14
  %61 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %61) #14
  store i32 %54, i32* %12, align 4
  %62 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %57, align 8
  %63 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %62, i64 3
  %64 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %63, align 8
  call void %64(%"class.SkSL::OutputStream"* %55, i8* nonnull %61, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %61) #14
  %65 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %65) #14
  store i32 0, i32* %11, align 4
  %66 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %57, align 8
  %67 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %66, i64 3
  %68 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %67, align 8
  call void %68(%"class.SkSL::OutputStream"* %55, i8* nonnull %65, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %65) #14
  br label %69

69:                                               ; preds = %3, %29, %39, %44, %52
  %70 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %71 = load i32, i32* %70, align 8
  %72 = add i32 %71, 1
  store i32 %72, i32* %70, align 8
  %73 = bitcast %"class.SkSL::Variable"** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #14
  store %"class.SkSL::Variable"* %17, %"class.SkSL::Variable"** %15, align 8
  %74 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 9, i32 0
  %75 = bitcast %"class.std::__1::tuple.713"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #14
  %76 = getelementptr inbounds %"class.std::__1::tuple.713", %"class.std::__1::tuple.713"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::Variable"** %15, %"class.SkSL::Variable"*** %76, align 8
  %77 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %77) #14
  %78 = call { %"struct.std::__1::__hash_node_base.166"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.162"* %74, %"class.SkSL::Variable"** nonnull dereferenceable(8) %15, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.713"* nonnull dereferenceable(8) %8, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %9) #14
  %79 = extractvalue { %"struct.std::__1::__hash_node_base.166"*, i8 } %78, 0
  %80 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %79, i64 3
  %81 = bitcast %"struct.std::__1::__hash_node_base.166"* %80 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %77) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #14
  store i32 %71, i32* %81, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #14
  %82 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %18, align 8
  %83 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 2
  %84 = call i32 @_ZN4SkSL18SPIRVCodeGenerator14getPointerTypeERKNS_4TypeERKNS_12MemoryLayoutE16SpvStorageClass_(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %82, %"class.SkSL::MemoryLayout"* dereferenceable(4) %83, i32 7) #14
  %85 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 17, i32 0
  %86 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %86) #14
  store i32 262203, i32* %4, align 4
  %87 = bitcast %"class.SkSL::OutputStream"* %85 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %88 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %87, align 8
  %89 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %88, i64 3
  %90 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %89, align 8
  call void %90(%"class.SkSL::OutputStream"* %85, i8* nonnull %86, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %86) #14
  %91 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %91) #14
  store i32 %84, i32* %7, align 4
  %92 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %87, align 8
  %93 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %92, i64 3
  %94 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %93, align 8
  call void %94(%"class.SkSL::OutputStream"* %85, i8* nonnull %91, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %91) #14
  %95 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %95) #14
  store i32 %71, i32* %6, align 4
  %96 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %87, align 8
  %97 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %96, i64 3
  %98 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %97, align 8
  call void %98(%"class.SkSL::OutputStream"* %85, i8* nonnull %95, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %95) #14
  %99 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %99) #14
  store i32 7, i32* %5, align 4
  %100 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %87, align 8
  %101 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %100, i64 3
  %102 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %101, align 8
  call void %102(%"class.SkSL::OutputStream"* %85, i8* nonnull %99, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %99) #14
  %103 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %17, i64 0, i32 0, i32 1, i32 0
  %104 = load i8*, i8** %103, align 8
  %105 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %17, i64 0, i32 0, i32 1, i32 1
  %106 = load i64, i64* %105, align 8
  %107 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 18, i32 0
  call void @_ZN4SkSL18SPIRVCodeGenerator16writeInstructionE6SpvOp_iNS_14StringFragmentERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 5, i32 %71, i8* %104, i64 %106, %"class.SkSL::OutputStream"* dereferenceable(8) %107)
  %108 = getelementptr inbounds %"class.SkSL::VarDeclaration", %"class.SkSL::VarDeclaration"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %109 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %108, align 8
  %110 = icmp eq %"class.SkSL::Expression"* %109, null
  br i1 %110, label %122, label %111

111:                                              ; preds = %69
  %112 = call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* nonnull dereferenceable(24) %109, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 62, i32 3, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %113 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %113) #14
  store i32 %71, i32* %14, align 4
  %114 = bitcast %"class.SkSL::OutputStream"* %2 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %115 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %114, align 8
  %116 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %115, i64 3
  %117 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %116, align 8
  call void %117(%"class.SkSL::OutputStream"* %2, i8* nonnull %113, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %113) #14
  %118 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %118) #14
  store i32 %112, i32* %13, align 4
  %119 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %114, align 8
  %120 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %119, i64 3
  %121 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %120, align 8
  call void %121(%"class.SkSL::OutputStream"* %2, i8* nonnull %118, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %118) #14
  br label %122

122:                                              ; preds = %69, %111
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18SPIRVCodeGenerator14writeStatementERKNS_9StatementERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::Statement"* nocapture readonly dereferenceable(16), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  switch i32 %8, label %97 [
    i32 19, label %96
    i32 18, label %76
    i32 16, label %9
    i32 21, label %28
    i32 26, label %33
    i32 29, label %46
    i32 23, label %48
    i32 22, label %50
    i32 20, label %52
    i32 27, label %54
    i32 17, label %56
  ]

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 2
  %11 = bitcast %"class.SkSL::Statement"* %10 to %"class.std::__1::unique_ptr.387"**
  %12 = load %"class.std::__1::unique_ptr.387"*, %"class.std::__1::unique_ptr.387"** %11, align 8
  %13 = icmp eq %"class.std::__1::unique_ptr.387"* %12, null
  br i1 %13, label %97, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 2, i32 0, i32 1
  %16 = bitcast i32* %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = lshr i64 %17, 1
  %19 = and i64 %18, 2147483647
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.387", %"class.std::__1::unique_ptr.387"* %12, i64 %19
  %21 = icmp eq i64 %19, 0
  br i1 %21, label %97, label %22

22:                                               ; preds = %14, %22
  %23 = phi %"class.std::__1::unique_ptr.387"* [ %26, %22 ], [ %12, %14 ]
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.387", %"class.std::__1::unique_ptr.387"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %24, align 8
  tail call void @_ZN4SkSL18SPIRVCodeGenerator14writeStatementERKNS_9StatementERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Statement"* dereferenceable(16) %25, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.387", %"class.std::__1::unique_ptr.387"* %23, i64 1
  %27 = icmp eq %"class.std::__1::unique_ptr.387"* %26, %20
  br i1 %27, label %97, label %22

28:                                               ; preds = %3
  %29 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 1
  %30 = bitcast %"class.SkSL::Statement"* %29 to %"class.SkSL::Expression"**
  %31 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %30, align 8
  %32 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %31, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  br label %97

33:                                               ; preds = %3
  %34 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 1
  %35 = bitcast %"class.SkSL::Statement"* %34 to %"class.SkSL::Expression"**
  %36 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %35, align 8
  %37 = icmp eq %"class.SkSL::Expression"* %36, null
  br i1 %37, label %45, label %38

38:                                               ; preds = %33
  %39 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* nonnull dereferenceable(24) %36, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  tail call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 254, i32 2, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %40 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %40) #14
  store i32 %39, i32* %4, align 4
  %41 = bitcast %"class.SkSL::OutputStream"* %2 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %42 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %42, i64 3
  %44 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %43, align 8
  call void %44(%"class.SkSL::OutputStream"* %2, i8* nonnull %40, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40) #14
  br label %97

45:                                               ; preds = %33
  tail call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 253, i32 1, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  br label %97

46:                                               ; preds = %3
  %47 = bitcast %"class.SkSL::Statement"* %1 to %"class.SkSL::VarDeclaration"*
  tail call void @_ZN4SkSL18SPIRVCodeGenerator19writeVarDeclarationERKNS_14VarDeclarationERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::VarDeclaration"* dereferenceable(48) %47, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  br label %97

48:                                               ; preds = %3
  %49 = bitcast %"class.SkSL::Statement"* %1 to %"class.SkSL::IfStatement"*
  tail call void @_ZN4SkSL18SPIRVCodeGenerator16writeIfStatementERKNS_11IfStatementERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::IfStatement"* dereferenceable(48) %49, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  br label %97

50:                                               ; preds = %3
  %51 = bitcast %"class.SkSL::Statement"* %1 to %"class.SkSL::ForStatement"*
  tail call void @_ZN4SkSL18SPIRVCodeGenerator17writeForStatementERKNS_12ForStatementERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::ForStatement"* dereferenceable(64) %51, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  br label %97

52:                                               ; preds = %3
  %53 = bitcast %"class.SkSL::Statement"* %1 to %"class.SkSL::DoStatement"*
  tail call void @_ZN4SkSL18SPIRVCodeGenerator16writeDoStatementERKNS_11DoStatementERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::DoStatement"* dereferenceable(32) %53, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  br label %97

54:                                               ; preds = %3
  %55 = bitcast %"class.SkSL::Statement"* %1 to %"class.SkSL::SwitchStatement"*
  tail call void @_ZN4SkSL18SPIRVCodeGenerator20writeSwitchStatementERKNS_15SwitchStatementERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::SwitchStatement"* dereferenceable(80) %55, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  br label %97

56:                                               ; preds = %3
  %57 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 27, i32 0, i32 0, i32 2, i32 0, i32 0
  %58 = load i64, i64* %57, align 8
  %59 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 27, i32 0, i32 0, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = add i64 %58, -1
  %62 = add i64 %61, %60
  %63 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 27, i32 0, i32 0, i32 0, i32 1
  %64 = load i32**, i32*** %63, align 8
  %65 = lshr i64 %62, 10
  %66 = getelementptr inbounds i32*, i32** %64, i64 %65
  %67 = load i32*, i32** %66, align 8
  %68 = and i64 %62, 1023
  %69 = getelementptr inbounds i32, i32* %67, i64 %68
  %70 = load i32, i32* %69, align 4
  tail call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 249, i32 2, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %71 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %71) #14
  store i32 %70, i32* %5, align 4
  %72 = bitcast %"class.SkSL::OutputStream"* %2 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %73 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %72, align 8
  %74 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %73, i64 3
  %75 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %74, align 8
  call void %75(%"class.SkSL::OutputStream"* %2, i8* nonnull %71, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %71) #14
  br label %97

76:                                               ; preds = %3
  %77 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 28, i32 0, i32 0, i32 2, i32 0, i32 0
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 28, i32 0, i32 0, i32 1
  %80 = load i64, i64* %79, align 8
  %81 = add i64 %78, -1
  %82 = add i64 %81, %80
  %83 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 28, i32 0, i32 0, i32 0, i32 1
  %84 = load i32**, i32*** %83, align 8
  %85 = lshr i64 %82, 10
  %86 = getelementptr inbounds i32*, i32** %84, i64 %85
  %87 = load i32*, i32** %86, align 8
  %88 = and i64 %82, 1023
  %89 = getelementptr inbounds i32, i32* %87, i64 %88
  %90 = load i32, i32* %89, align 4
  tail call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 249, i32 2, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %91 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %91) #14
  store i32 %90, i32* %6, align 4
  %92 = bitcast %"class.SkSL::OutputStream"* %2 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %93 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %93, i64 3
  %95 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %94, align 8
  call void %95(%"class.SkSL::OutputStream"* %2, i8* nonnull %91, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %91) #14
  br label %97

96:                                               ; preds = %3
  tail call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 252, i32 1, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  br label %97

97:                                               ; preds = %22, %9, %14, %45, %38, %3, %96, %76, %56, %54, %52, %50, %48, %46, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18SPIRVCodeGenerator20writeReturnStatementERKNS_15ReturnStatementERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::ReturnStatement"* nocapture readonly dereferenceable(24), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.SkSL::ReturnStatement", %"class.SkSL::ReturnStatement"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %5, align 8
  %7 = icmp eq %"class.SkSL::Expression"* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %3
  %9 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* nonnull dereferenceable(24) %6, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  tail call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 254, i32 2, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #14
  store i32 %9, i32* %4, align 4
  %11 = bitcast %"class.SkSL::OutputStream"* %2 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %12 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %12, i64 3
  %14 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %13, align 8
  call void %14(%"class.SkSL::OutputStream"* %2, i8* nonnull %10, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #14
  br label %16

15:                                               ; preds = %3
  tail call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 253, i32 1, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  br label %16

16:                                               ; preds = %15, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18SPIRVCodeGenerator16writeIfStatementERKNS_11IfStatementERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::IfStatement"* nocapture readonly dereferenceable(48), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = getelementptr inbounds %"class.SkSL::IfStatement", %"class.SkSL::IfStatement"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %23 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %22, align 8
  %24 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %23, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %25 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %26 = load i32, i32* %25, align 8
  %27 = add i32 %26, 1
  %28 = add i32 %26, 2
  store i32 %28, i32* %25, align 8
  %29 = getelementptr inbounds %"class.SkSL::IfStatement", %"class.SkSL::IfStatement"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %30 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %29, align 8
  %31 = icmp eq %"class.SkSL::Statement"* %30, null
  br i1 %31, label %87, label %32

32:                                               ; preds = %3
  %33 = add i32 %26, 3
  store i32 %33, i32* %25, align 8
  tail call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 247, i32 3, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %34 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %34) #14
  store i32 %28, i32* %21, align 4
  %35 = bitcast %"class.SkSL::OutputStream"* %2 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %36 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %36, i64 3
  %38 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %37, align 8
  call void %38(%"class.SkSL::OutputStream"* %2, i8* nonnull %34, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %34) #14
  %39 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %39) #14
  store i32 0, i32* %20, align 4
  %40 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %35, align 8
  %41 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %40, i64 3
  %42 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %41, align 8
  call void %42(%"class.SkSL::OutputStream"* %2, i8* nonnull %39, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %39) #14
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 250, i32 4, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %43 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %43) #14
  store i32 %24, i32* %19, align 4
  %44 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %35, align 8
  %45 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %44, i64 3
  %46 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %45, align 8
  call void %46(%"class.SkSL::OutputStream"* %2, i8* nonnull %43, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %43) #14
  %47 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %47) #14
  store i32 %26, i32* %18, align 4
  %48 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %35, align 8
  %49 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %48, i64 3
  %50 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %49, align 8
  call void %50(%"class.SkSL::OutputStream"* %2, i8* nonnull %47, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %47) #14
  %51 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %51) #14
  store i32 %27, i32* %17, align 4
  %52 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %35, align 8
  %53 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %52, i64 3
  %54 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %53, align 8
  call void %54(%"class.SkSL::OutputStream"* %2, i8* nonnull %51, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %51) #14
  %55 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 26
  store i32 %26, i32* %55, align 4
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 248, i32 2, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %56 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %56) #14
  store i32 %26, i32* %16, align 4
  %57 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %35, align 8
  %58 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %57, i64 3
  %59 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %58, align 8
  call void %59(%"class.SkSL::OutputStream"* %2, i8* nonnull %56, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %56) #14
  %60 = getelementptr inbounds %"class.SkSL::IfStatement", %"class.SkSL::IfStatement"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %61 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %60, align 8
  call void @_ZN4SkSL18SPIRVCodeGenerator14writeStatementERKNS_9StatementERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Statement"* dereferenceable(16) %61, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %62 = load i32, i32* %55, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %69, label %64

64:                                               ; preds = %32
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 249, i32 2, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %65 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %65) #14
  store i32 %28, i32* %15, align 4
  %66 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %35, align 8
  %67 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %66, i64 3
  %68 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %67, align 8
  call void %68(%"class.SkSL::OutputStream"* %2, i8* nonnull %65, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %65) #14
  br label %69

69:                                               ; preds = %32, %64
  store i32 %27, i32* %55, align 4
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 248, i32 2, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %70 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %70) #14
  store i32 %27, i32* %14, align 4
  %71 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %35, align 8
  %72 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %71, i64 3
  %73 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %72, align 8
  call void %73(%"class.SkSL::OutputStream"* %2, i8* nonnull %70, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %70) #14
  %74 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %29, align 8
  call void @_ZN4SkSL18SPIRVCodeGenerator14writeStatementERKNS_9StatementERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Statement"* dereferenceable(16) %74, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %75 = load i32, i32* %55, align 4
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %82, label %77

77:                                               ; preds = %69
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 249, i32 2, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %78 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %78) #14
  store i32 %28, i32* %13, align 4
  %79 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %35, align 8
  %80 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %79, i64 3
  %81 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %80, align 8
  call void %81(%"class.SkSL::OutputStream"* %2, i8* nonnull %78, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %78) #14
  br label %82

82:                                               ; preds = %69, %77
  store i32 %28, i32* %55, align 4
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 248, i32 2, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %83 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %83) #14
  store i32 %28, i32* %12, align 4
  %84 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %35, align 8
  %85 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %84, i64 3
  %86 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %85, align 8
  call void %86(%"class.SkSL::OutputStream"* %2, i8* nonnull %83, i64 4) #14
  br label %128

87:                                               ; preds = %3
  tail call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 247, i32 3, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %88 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %88) #14
  store i32 %27, i32* %11, align 4
  %89 = bitcast %"class.SkSL::OutputStream"* %2 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %90 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %90, i64 3
  %92 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %91, align 8
  call void %92(%"class.SkSL::OutputStream"* %2, i8* nonnull %88, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %88) #14
  %93 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %93) #14
  store i32 0, i32* %10, align 4
  %94 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %89, align 8
  %95 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %94, i64 3
  %96 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %95, align 8
  call void %96(%"class.SkSL::OutputStream"* %2, i8* nonnull %93, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %93) #14
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 250, i32 4, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %97 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %97) #14
  store i32 %24, i32* %9, align 4
  %98 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %89, align 8
  %99 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %98, i64 3
  %100 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %99, align 8
  call void %100(%"class.SkSL::OutputStream"* %2, i8* nonnull %97, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %97) #14
  %101 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %101) #14
  store i32 %26, i32* %8, align 4
  %102 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %89, align 8
  %103 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %102, i64 3
  %104 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %103, align 8
  call void %104(%"class.SkSL::OutputStream"* %2, i8* nonnull %101, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %101) #14
  %105 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %105) #14
  store i32 %27, i32* %7, align 4
  %106 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %89, align 8
  %107 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %106, i64 3
  %108 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %107, align 8
  call void %108(%"class.SkSL::OutputStream"* %2, i8* nonnull %105, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %105) #14
  %109 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 26
  store i32 %26, i32* %109, align 4
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 248, i32 2, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %110 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %110) #14
  store i32 %26, i32* %6, align 4
  %111 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %89, align 8
  %112 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %111, i64 3
  %113 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %112, align 8
  call void %113(%"class.SkSL::OutputStream"* %2, i8* nonnull %110, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %110) #14
  %114 = getelementptr inbounds %"class.SkSL::IfStatement", %"class.SkSL::IfStatement"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %115 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %114, align 8
  call void @_ZN4SkSL18SPIRVCodeGenerator14writeStatementERKNS_9StatementERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Statement"* dereferenceable(16) %115, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %116 = load i32, i32* %109, align 4
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %123, label %118

118:                                              ; preds = %87
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 249, i32 2, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %119 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %119) #14
  store i32 %27, i32* %5, align 4
  %120 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %89, align 8
  %121 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %120, i64 3
  %122 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %121, align 8
  call void %122(%"class.SkSL::OutputStream"* %2, i8* nonnull %119, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %119) #14
  br label %123

123:                                              ; preds = %87, %118
  store i32 %27, i32* %109, align 4
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 248, i32 2, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %124 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %124) #14
  store i32 %27, i32* %4, align 4
  %125 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %89, align 8
  %126 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %125, i64 3
  %127 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %126, align 8
  call void %127(%"class.SkSL::OutputStream"* %2, i8* nonnull %124, i64 4) #14
  br label %128

128:                                              ; preds = %123, %82
  %129 = phi i8* [ %124, %123 ], [ %83, %82 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %129) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18SPIRVCodeGenerator17writeForStatementERKNS_12ForStatementERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::ForStatement"* nocapture readonly dereferenceable(64), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = getelementptr inbounds %"class.SkSL::ForStatement", %"class.SkSL::ForStatement"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %21 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %20, align 8
  %22 = icmp eq %"class.SkSL::Statement"* %21, null
  br i1 %22, label %24, label %23

23:                                               ; preds = %3
  tail call void @_ZN4SkSL18SPIRVCodeGenerator14writeStatementERKNS_9StatementERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Statement"* nonnull dereferenceable(16) %21, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  br label %24

24:                                               ; preds = %3, %23
  %25 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %26 = load i32, i32* %25, align 8
  %27 = add i32 %26, 1
  %28 = add i32 %26, 2
  %29 = add i32 %26, 3
  %30 = add i32 %26, 4
  store i32 %30, i32* %25, align 8
  %31 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 28, i32 0, i32 0, i32 0, i32 2
  %32 = bitcast i32*** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 28, i32 0, i32 0, i32 0, i32 1
  %35 = bitcast i32*** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %33, %36
  %38 = icmp eq i64 %37, 0
  %39 = shl i64 %37, 7
  %40 = add i64 %39, -1
  %41 = select i1 %38, i64 0, i64 %40
  %42 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 28, i32 0, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 28, i32 0, i32 0, i32 2, i32 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = add i64 %45, %43
  %47 = icmp eq i64 %41, %46
  %48 = inttoptr i64 %36 to i32**
  %49 = inttoptr i64 %33 to i32**
  br i1 %47, label %50, label %57

50:                                               ; preds = %24
  %51 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 28, i32 0
  tail call void @_ZNSt3__15dequeIjNS_9allocatorIjEEE19__add_back_capacityEv(%"class.std::__1::deque"* %51) #14
  %52 = load i64, i64* %44, align 8
  %53 = load i64, i64* %42, align 8
  %54 = load i32**, i32*** %34, align 8
  %55 = load i32**, i32*** %31, align 8
  %56 = add i64 %53, %52
  br label %57

57:                                               ; preds = %50, %24
  %58 = phi i64 [ %56, %50 ], [ %46, %24 ]
  %59 = phi i32** [ %55, %50 ], [ %49, %24 ]
  %60 = phi i32** [ %54, %50 ], [ %48, %24 ]
  %61 = icmp eq i32** %59, %60
  br i1 %61, label %68, label %62

62:                                               ; preds = %57
  %63 = lshr i64 %58, 10
  %64 = getelementptr inbounds i32*, i32** %60, i64 %63
  %65 = load i32*, i32** %64, align 8
  %66 = and i64 %58, 1023
  %67 = getelementptr inbounds i32, i32* %65, i64 %66
  br label %68

68:                                               ; preds = %57, %62
  %69 = phi i32* [ %67, %62 ], [ null, %57 ]
  store i32 %29, i32* %69, align 4
  %70 = load i64, i64* %44, align 8
  %71 = add i64 %70, 1
  store i64 %71, i64* %44, align 8
  %72 = load i32, i32* %25, align 8
  %73 = add i32 %72, 1
  store i32 %73, i32* %25, align 8
  %74 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 27, i32 0, i32 0, i32 0, i32 2
  %75 = bitcast i32*** %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 27, i32 0, i32 0, i32 0, i32 1
  %78 = bitcast i32*** %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = sub i64 %76, %79
  %81 = icmp eq i64 %80, 0
  %82 = shl i64 %80, 7
  %83 = add i64 %82, -1
  %84 = select i1 %81, i64 0, i64 %83
  %85 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 27, i32 0, i32 0, i32 1
  %86 = load i64, i64* %85, align 8
  %87 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 27, i32 0, i32 0, i32 2, i32 0, i32 0
  %88 = load i64, i64* %87, align 8
  %89 = add i64 %88, %86
  %90 = icmp eq i64 %84, %89
  %91 = inttoptr i64 %79 to i32**
  %92 = inttoptr i64 %76 to i32**
  br i1 %90, label %93, label %100

93:                                               ; preds = %68
  %94 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 27, i32 0
  tail call void @_ZNSt3__15dequeIjNS_9allocatorIjEEE19__add_back_capacityEv(%"class.std::__1::deque"* %94) #14
  %95 = load i64, i64* %87, align 8
  %96 = load i64, i64* %85, align 8
  %97 = load i32**, i32*** %77, align 8
  %98 = load i32**, i32*** %74, align 8
  %99 = add i64 %96, %95
  br label %100

100:                                              ; preds = %93, %68
  %101 = phi i64 [ %99, %93 ], [ %89, %68 ]
  %102 = phi i32** [ %98, %93 ], [ %92, %68 ]
  %103 = phi i32** [ %97, %93 ], [ %91, %68 ]
  %104 = icmp eq i32** %102, %103
  br i1 %104, label %111, label %105

105:                                              ; preds = %100
  %106 = lshr i64 %101, 10
  %107 = getelementptr inbounds i32*, i32** %103, i64 %106
  %108 = load i32*, i32** %107, align 8
  %109 = and i64 %101, 1023
  %110 = getelementptr inbounds i32, i32* %108, i64 %109
  br label %111

111:                                              ; preds = %100, %105
  %112 = phi i32* [ %110, %105 ], [ null, %100 ]
  store i32 %72, i32* %112, align 4
  %113 = load i64, i64* %87, align 8
  %114 = add i64 %113, 1
  store i64 %114, i64* %87, align 8
  tail call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 249, i32 2, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %115 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %115) #14
  store i32 %26, i32* %19, align 4
  %116 = bitcast %"class.SkSL::OutputStream"* %2 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %117 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %116, align 8
  %118 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %117, i64 3
  %119 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %118, align 8
  call void %119(%"class.SkSL::OutputStream"* %2, i8* nonnull %115, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %115) #14
  %120 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 26
  store i32 %26, i32* %120, align 4
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 248, i32 2, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %121 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %121) #14
  store i32 %26, i32* %18, align 4
  %122 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %116, align 8
  %123 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %122, i64 3
  %124 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %123, align 8
  call void %124(%"class.SkSL::OutputStream"* %2, i8* nonnull %121, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %121) #14
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 246, i32 4, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %125 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %125) #14
  store i32 %72, i32* %17, align 4
  %126 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %116, align 8
  %127 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %126, i64 3
  %128 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %127, align 8
  call void %128(%"class.SkSL::OutputStream"* %2, i8* nonnull %125, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %125) #14
  %129 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %129) #14
  store i32 %29, i32* %16, align 4
  %130 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %116, align 8
  %131 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %130, i64 3
  %132 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %131, align 8
  call void %132(%"class.SkSL::OutputStream"* %2, i8* nonnull %129, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %129) #14
  %133 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %133) #14
  store i32 0, i32* %15, align 4
  %134 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %116, align 8
  %135 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %134, i64 3
  %136 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %135, align 8
  call void %136(%"class.SkSL::OutputStream"* %2, i8* nonnull %133, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %133) #14
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 249, i32 2, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %137 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %137) #14
  store i32 %27, i32* %14, align 4
  %138 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %116, align 8
  %139 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %138, i64 3
  %140 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %139, align 8
  call void %140(%"class.SkSL::OutputStream"* %2, i8* nonnull %137, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %137) #14
  store i32 %27, i32* %120, align 4
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 248, i32 2, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %141 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %141) #14
  store i32 %27, i32* %13, align 4
  %142 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %116, align 8
  %143 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %142, i64 3
  %144 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %143, align 8
  call void %144(%"class.SkSL::OutputStream"* %2, i8* nonnull %141, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %141) #14
  %145 = getelementptr inbounds %"class.SkSL::ForStatement", %"class.SkSL::ForStatement"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %146 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %145, align 8
  %147 = icmp eq %"class.SkSL::Expression"* %146, null
  br i1 %147, label %162, label %148

148:                                              ; preds = %111
  %149 = call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* nonnull dereferenceable(24) %146, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 250, i32 4, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %150 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %150) #14
  store i32 %149, i32* %12, align 4
  %151 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %116, align 8
  %152 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %151, i64 3
  %153 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %152, align 8
  call void %153(%"class.SkSL::OutputStream"* %2, i8* nonnull %150, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %150) #14
  %154 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %154) #14
  store i32 %28, i32* %11, align 4
  %155 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %116, align 8
  %156 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %155, i64 3
  %157 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %156, align 8
  call void %157(%"class.SkSL::OutputStream"* %2, i8* nonnull %154, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %154) #14
  %158 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158) #14
  store i32 %72, i32* %10, align 4
  %159 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %116, align 8
  %160 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %159, i64 3
  %161 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %160, align 8
  call void %161(%"class.SkSL::OutputStream"* %2, i8* nonnull %158, i64 4) #14
  br label %167

162:                                              ; preds = %111
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 249, i32 2, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %163 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %163) #14
  store i32 %28, i32* %9, align 4
  %164 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %116, align 8
  %165 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %164, i64 3
  %166 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %165, align 8
  call void %166(%"class.SkSL::OutputStream"* %2, i8* nonnull %163, i64 4) #14
  br label %167

167:                                              ; preds = %162, %148
  %168 = phi i8* [ %163, %162 ], [ %158, %148 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %168) #14
  store i32 %28, i32* %120, align 4
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 248, i32 2, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %169 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %169) #14
  store i32 %28, i32* %8, align 4
  %170 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %116, align 8
  %171 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %170, i64 3
  %172 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %171, align 8
  call void %172(%"class.SkSL::OutputStream"* %2, i8* nonnull %169, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %169) #14
  %173 = getelementptr inbounds %"class.SkSL::ForStatement", %"class.SkSL::ForStatement"* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %174 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %173, align 8
  call void @_ZN4SkSL18SPIRVCodeGenerator14writeStatementERKNS_9StatementERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Statement"* dereferenceable(16) %174, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %175 = load i32, i32* %120, align 4
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %182, label %177

177:                                              ; preds = %167
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 249, i32 2, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %178 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %178) #14
  store i32 %29, i32* %7, align 4
  %179 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %116, align 8
  %180 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %179, i64 3
  %181 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %180, align 8
  call void %181(%"class.SkSL::OutputStream"* %2, i8* nonnull %178, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %178) #14
  br label %182

182:                                              ; preds = %167, %177
  store i32 %29, i32* %120, align 4
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 248, i32 2, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %183 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %183) #14
  store i32 %29, i32* %6, align 4
  %184 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %116, align 8
  %185 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %184, i64 3
  %186 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %185, align 8
  call void %186(%"class.SkSL::OutputStream"* %2, i8* nonnull %183, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %183) #14
  %187 = getelementptr inbounds %"class.SkSL::ForStatement", %"class.SkSL::ForStatement"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %188 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %187, align 8
  %189 = icmp eq %"class.SkSL::Expression"* %188, null
  br i1 %189, label %192, label %190

190:                                              ; preds = %182
  %191 = call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* nonnull dereferenceable(24) %188, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  br label %192

192:                                              ; preds = %182, %190
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 249, i32 2, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %193 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %193) #14
  store i32 %26, i32* %5, align 4
  %194 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %116, align 8
  %195 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %194, i64 3
  %196 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %195, align 8
  call void %196(%"class.SkSL::OutputStream"* %2, i8* nonnull %193, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %193) #14
  store i32 %72, i32* %120, align 4
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 248, i32 2, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %197 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %197) #14
  store i32 %72, i32* %4, align 4
  %198 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %116, align 8
  %199 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %198, i64 3
  %200 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %199, align 8
  call void %200(%"class.SkSL::OutputStream"* %2, i8* nonnull %197, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %197) #14
  %201 = load i64, i64* %87, align 8
  %202 = load i64, i64* %85, align 8
  %203 = add i64 %201, -1
  store i64 %203, i64* %87, align 8
  %204 = load i64, i64* %75, align 8
  %205 = load i64, i64* %78, align 8
  %206 = sub i64 %204, %205
  %207 = icmp eq i64 %206, 0
  %208 = shl i64 %206, 7
  %209 = add i64 %208, -1
  %210 = select i1 %207, i64 0, i64 %209
  %211 = sub i64 1, %201
  %212 = sub i64 %211, %202
  %213 = add i64 %212, %210
  %214 = icmp ult i64 %213, 2048
  br i1 %214, label %222, label %215

215:                                              ; preds = %192
  %216 = inttoptr i64 %204 to i32**
  %217 = getelementptr inbounds i32*, i32** %216, i64 -1
  %218 = bitcast i32** %217 to i8**
  %219 = load i8*, i8** %218, align 8
  call void @_ZdlPv(i8* %219) #16
  %220 = load i32**, i32*** %74, align 8
  %221 = getelementptr i32*, i32** %220, i64 -1
  store i32** %221, i32*** %74, align 8
  br label %222

222:                                              ; preds = %192, %215
  %223 = load i64, i64* %44, align 8
  %224 = load i64, i64* %42, align 8
  %225 = add i64 %223, -1
  store i64 %225, i64* %44, align 8
  %226 = load i64, i64* %32, align 8
  %227 = load i64, i64* %35, align 8
  %228 = sub i64 %226, %227
  %229 = icmp eq i64 %228, 0
  %230 = shl i64 %228, 7
  %231 = add i64 %230, -1
  %232 = select i1 %229, i64 0, i64 %231
  %233 = sub i64 1, %223
  %234 = sub i64 %233, %224
  %235 = add i64 %234, %232
  %236 = icmp ult i64 %235, 2048
  br i1 %236, label %244, label %237

237:                                              ; preds = %222
  %238 = inttoptr i64 %226 to i32**
  %239 = getelementptr inbounds i32*, i32** %238, i64 -1
  %240 = bitcast i32** %239 to i8**
  %241 = load i8*, i8** %240, align 8
  call void @_ZdlPv(i8* %241) #16
  %242 = load i32**, i32*** %31, align 8
  %243 = getelementptr i32*, i32** %242, i64 -1
  store i32** %243, i32*** %31, align 8
  br label %244

244:                                              ; preds = %222, %237
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18SPIRVCodeGenerator16writeDoStatementERKNS_11DoStatementERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::DoStatement"* nocapture readonly dereferenceable(32), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %20 = load i32, i32* %19, align 8
  %21 = add i32 %20, 1
  %22 = add i32 %20, 2
  %23 = add i32 %20, 3
  %24 = add i32 %20, 4
  store i32 %24, i32* %19, align 8
  %25 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 28, i32 0, i32 0, i32 0, i32 2
  %26 = bitcast i32*** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 28, i32 0, i32 0, i32 0, i32 1
  %29 = bitcast i32*** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 %27, %30
  %32 = icmp eq i64 %31, 0
  %33 = shl i64 %31, 7
  %34 = add i64 %33, -1
  %35 = select i1 %32, i64 0, i64 %34
  %36 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 28, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 28, i32 0, i32 0, i32 2, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, %37
  %41 = icmp eq i64 %35, %40
  %42 = inttoptr i64 %30 to i32**
  %43 = inttoptr i64 %27 to i32**
  br i1 %41, label %44, label %51

44:                                               ; preds = %3
  %45 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 28, i32 0
  tail call void @_ZNSt3__15dequeIjNS_9allocatorIjEEE19__add_back_capacityEv(%"class.std::__1::deque"* %45) #14
  %46 = load i64, i64* %38, align 8
  %47 = load i64, i64* %36, align 8
  %48 = load i32**, i32*** %28, align 8
  %49 = load i32**, i32*** %25, align 8
  %50 = add i64 %47, %46
  br label %51

51:                                               ; preds = %44, %3
  %52 = phi i64 [ %50, %44 ], [ %40, %3 ]
  %53 = phi i32** [ %49, %44 ], [ %43, %3 ]
  %54 = phi i32** [ %48, %44 ], [ %42, %3 ]
  %55 = icmp eq i32** %53, %54
  br i1 %55, label %62, label %56

56:                                               ; preds = %51
  %57 = lshr i64 %52, 10
  %58 = getelementptr inbounds i32*, i32** %54, i64 %57
  %59 = load i32*, i32** %58, align 8
  %60 = and i64 %52, 1023
  %61 = getelementptr inbounds i32, i32* %59, i64 %60
  br label %62

62:                                               ; preds = %51, %56
  %63 = phi i32* [ %61, %56 ], [ null, %51 ]
  store i32 %23, i32* %63, align 4
  %64 = load i64, i64* %38, align 8
  %65 = add i64 %64, 1
  store i64 %65, i64* %38, align 8
  %66 = load i32, i32* %19, align 8
  %67 = add i32 %66, 1
  store i32 %67, i32* %19, align 8
  %68 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 27, i32 0, i32 0, i32 0, i32 2
  %69 = bitcast i32*** %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 27, i32 0, i32 0, i32 0, i32 1
  %72 = bitcast i32*** %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = sub i64 %70, %73
  %75 = icmp eq i64 %74, 0
  %76 = shl i64 %74, 7
  %77 = add i64 %76, -1
  %78 = select i1 %75, i64 0, i64 %77
  %79 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 27, i32 0, i32 0, i32 1
  %80 = load i64, i64* %79, align 8
  %81 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 27, i32 0, i32 0, i32 2, i32 0, i32 0
  %82 = load i64, i64* %81, align 8
  %83 = add i64 %82, %80
  %84 = icmp eq i64 %78, %83
  %85 = inttoptr i64 %73 to i32**
  %86 = inttoptr i64 %70 to i32**
  br i1 %84, label %87, label %94

87:                                               ; preds = %62
  %88 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 27, i32 0
  tail call void @_ZNSt3__15dequeIjNS_9allocatorIjEEE19__add_back_capacityEv(%"class.std::__1::deque"* %88) #14
  %89 = load i64, i64* %81, align 8
  %90 = load i64, i64* %79, align 8
  %91 = load i32**, i32*** %71, align 8
  %92 = load i32**, i32*** %68, align 8
  %93 = add i64 %90, %89
  br label %94

94:                                               ; preds = %87, %62
  %95 = phi i64 [ %93, %87 ], [ %83, %62 ]
  %96 = phi i32** [ %92, %87 ], [ %86, %62 ]
  %97 = phi i32** [ %91, %87 ], [ %85, %62 ]
  %98 = icmp eq i32** %96, %97
  br i1 %98, label %105, label %99

99:                                               ; preds = %94
  %100 = lshr i64 %95, 10
  %101 = getelementptr inbounds i32*, i32** %97, i64 %100
  %102 = load i32*, i32** %101, align 8
  %103 = and i64 %95, 1023
  %104 = getelementptr inbounds i32, i32* %102, i64 %103
  br label %105

105:                                              ; preds = %94, %99
  %106 = phi i32* [ %104, %99 ], [ null, %94 ]
  store i32 %66, i32* %106, align 4
  %107 = load i64, i64* %81, align 8
  %108 = add i64 %107, 1
  store i64 %108, i64* %81, align 8
  tail call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 249, i32 2, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %109 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %109) #14
  store i32 %20, i32* %18, align 4
  %110 = bitcast %"class.SkSL::OutputStream"* %2 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %111 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %110, align 8
  %112 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %111, i64 3
  %113 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %112, align 8
  call void %113(%"class.SkSL::OutputStream"* %2, i8* nonnull %109, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %109) #14
  %114 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 26
  store i32 %20, i32* %114, align 4
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 248, i32 2, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %115 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %115) #14
  store i32 %20, i32* %17, align 4
  %116 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %110, align 8
  %117 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %116, i64 3
  %118 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %117, align 8
  call void %118(%"class.SkSL::OutputStream"* %2, i8* nonnull %115, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %115) #14
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 246, i32 4, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %119 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %119) #14
  store i32 %66, i32* %16, align 4
  %120 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %110, align 8
  %121 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %120, i64 3
  %122 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %121, align 8
  call void %122(%"class.SkSL::OutputStream"* %2, i8* nonnull %119, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %119) #14
  %123 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %123) #14
  store i32 %23, i32* %15, align 4
  %124 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %110, align 8
  %125 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %124, i64 3
  %126 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %125, align 8
  call void %126(%"class.SkSL::OutputStream"* %2, i8* nonnull %123, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %123) #14
  %127 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %127) #14
  store i32 0, i32* %14, align 4
  %128 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %110, align 8
  %129 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %128, i64 3
  %130 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %129, align 8
  call void %130(%"class.SkSL::OutputStream"* %2, i8* nonnull %127, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %127) #14
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 249, i32 2, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %131 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %131) #14
  store i32 %21, i32* %13, align 4
  %132 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %110, align 8
  %133 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %132, i64 3
  %134 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %133, align 8
  call void %134(%"class.SkSL::OutputStream"* %2, i8* nonnull %131, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %131) #14
  store i32 %21, i32* %114, align 4
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 248, i32 2, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %135 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %135) #14
  store i32 %21, i32* %12, align 4
  %136 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %110, align 8
  %137 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %136, i64 3
  %138 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %137, align 8
  call void %138(%"class.SkSL::OutputStream"* %2, i8* nonnull %135, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %135) #14
  %139 = getelementptr inbounds %"class.SkSL::DoStatement", %"class.SkSL::DoStatement"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %140 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %139, align 8
  call void @_ZN4SkSL18SPIRVCodeGenerator14writeStatementERKNS_9StatementERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Statement"* dereferenceable(16) %140, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %141 = load i32, i32* %114, align 4
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %148, label %143

143:                                              ; preds = %105
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 249, i32 2, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %144 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %144) #14
  store i32 %22, i32* %11, align 4
  %145 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %110, align 8
  %146 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %145, i64 3
  %147 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %146, align 8
  call void %147(%"class.SkSL::OutputStream"* %2, i8* nonnull %144, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %144) #14
  br label %148

148:                                              ; preds = %105, %143
  store i32 %22, i32* %114, align 4
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 248, i32 2, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %149 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %149) #14
  store i32 %22, i32* %10, align 4
  %150 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %110, align 8
  %151 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %150, i64 3
  %152 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %151, align 8
  call void %152(%"class.SkSL::OutputStream"* %2, i8* nonnull %149, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %149) #14
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 249, i32 2, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %153 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %153) #14
  store i32 %23, i32* %9, align 4
  %154 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %110, align 8
  %155 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %154, i64 3
  %156 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %155, align 8
  call void %156(%"class.SkSL::OutputStream"* %2, i8* nonnull %153, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %153) #14
  store i32 %23, i32* %114, align 4
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 248, i32 2, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %157 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %157) #14
  store i32 %23, i32* %8, align 4
  %158 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %110, align 8
  %159 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %158, i64 3
  %160 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %159, align 8
  call void %160(%"class.SkSL::OutputStream"* %2, i8* nonnull %157, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %157) #14
  %161 = getelementptr inbounds %"class.SkSL::DoStatement", %"class.SkSL::DoStatement"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %162 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %161, align 8
  %163 = call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %162, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 250, i32 4, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %164 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %164) #14
  store i32 %163, i32* %7, align 4
  %165 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %110, align 8
  %166 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %165, i64 3
  %167 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %166, align 8
  call void %167(%"class.SkSL::OutputStream"* %2, i8* nonnull %164, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %164) #14
  %168 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %168) #14
  store i32 %20, i32* %6, align 4
  %169 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %110, align 8
  %170 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %169, i64 3
  %171 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %170, align 8
  call void %171(%"class.SkSL::OutputStream"* %2, i8* nonnull %168, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %168) #14
  %172 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %172) #14
  store i32 %66, i32* %5, align 4
  %173 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %110, align 8
  %174 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %173, i64 3
  %175 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %174, align 8
  call void %175(%"class.SkSL::OutputStream"* %2, i8* nonnull %172, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %172) #14
  store i32 %66, i32* %114, align 4
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 248, i32 2, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %176 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %176) #14
  store i32 %66, i32* %4, align 4
  %177 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %110, align 8
  %178 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %177, i64 3
  %179 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %178, align 8
  call void %179(%"class.SkSL::OutputStream"* %2, i8* nonnull %176, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %176) #14
  %180 = load i64, i64* %81, align 8
  %181 = load i64, i64* %79, align 8
  %182 = add i64 %180, -1
  store i64 %182, i64* %81, align 8
  %183 = load i64, i64* %69, align 8
  %184 = load i64, i64* %72, align 8
  %185 = sub i64 %183, %184
  %186 = icmp eq i64 %185, 0
  %187 = shl i64 %185, 7
  %188 = add i64 %187, -1
  %189 = select i1 %186, i64 0, i64 %188
  %190 = sub i64 1, %180
  %191 = sub i64 %190, %181
  %192 = add i64 %191, %189
  %193 = icmp ult i64 %192, 2048
  br i1 %193, label %201, label %194

194:                                              ; preds = %148
  %195 = inttoptr i64 %183 to i32**
  %196 = getelementptr inbounds i32*, i32** %195, i64 -1
  %197 = bitcast i32** %196 to i8**
  %198 = load i8*, i8** %197, align 8
  call void @_ZdlPv(i8* %198) #16
  %199 = load i32**, i32*** %68, align 8
  %200 = getelementptr i32*, i32** %199, i64 -1
  store i32** %200, i32*** %68, align 8
  br label %201

201:                                              ; preds = %148, %194
  %202 = load i64, i64* %38, align 8
  %203 = load i64, i64* %36, align 8
  %204 = add i64 %202, -1
  store i64 %204, i64* %38, align 8
  %205 = load i64, i64* %26, align 8
  %206 = load i64, i64* %29, align 8
  %207 = sub i64 %205, %206
  %208 = icmp eq i64 %207, 0
  %209 = shl i64 %207, 7
  %210 = add i64 %209, -1
  %211 = select i1 %208, i64 0, i64 %210
  %212 = sub i64 1, %202
  %213 = sub i64 %212, %203
  %214 = add i64 %213, %211
  %215 = icmp ult i64 %214, 2048
  br i1 %215, label %223, label %216

216:                                              ; preds = %201
  %217 = inttoptr i64 %205 to i32**
  %218 = getelementptr inbounds i32*, i32** %217, i64 -1
  %219 = bitcast i32** %218 to i8**
  %220 = load i8*, i8** %219, align 8
  call void @_ZdlPv(i8* %220) #16
  %221 = load i32**, i32*** %25, align 8
  %222 = getelementptr i32*, i32** %221, i64 -1
  store i32** %222, i32*** %25, align 8
  br label %223

223:                                              ; preds = %201, %216
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18SPIRVCodeGenerator20writeSwitchStatementERKNS_15SwitchStatementERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::SwitchStatement"* nocapture readonly dereferenceable(80), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %"class.std::__1::vector.382", align 8
  %14 = getelementptr inbounds %"class.SkSL::SwitchStatement", %"class.SkSL::SwitchStatement"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %15 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %14, align 8
  %16 = tail call i32 @_ZN4SkSL18SPIRVCodeGenerator15writeExpressionERKNS_10ExpressionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Expression"* dereferenceable(24) %15, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %17 = bitcast %"class.std::__1::vector.382"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #14
  %18 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %13, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %13, i64 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.std::__1::vector.382", %"class.std::__1::vector.382"* %13, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 24, i1 false) #14
  %21 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %22 = load i32, i32* %21, align 8
  %23 = add i32 %22, 1
  store i32 %23, i32* %21, align 8
  %24 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 27, i32 0, i32 0, i32 0, i32 2
  %25 = bitcast i32*** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 27, i32 0, i32 0, i32 0, i32 1
  %28 = bitcast i32*** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %26, %29
  %31 = icmp eq i64 %30, 0
  %32 = shl i64 %30, 7
  %33 = add i64 %32, -1
  %34 = select i1 %31, i64 0, i64 %33
  %35 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 27, i32 0, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 27, i32 0, i32 0, i32 2, i32 0, i32 0
  %38 = load i64, i64* %37, align 8
  %39 = add i64 %38, %36
  %40 = icmp eq i64 %34, %39
  %41 = inttoptr i64 %29 to i32**
  %42 = inttoptr i64 %26 to i32**
  br i1 %40, label %43, label %50

43:                                               ; preds = %3
  %44 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 27, i32 0
  tail call void @_ZNSt3__15dequeIjNS_9allocatorIjEEE19__add_back_capacityEv(%"class.std::__1::deque"* %44) #14
  %45 = load i64, i64* %37, align 8
  %46 = load i64, i64* %35, align 8
  %47 = load i32**, i32*** %27, align 8
  %48 = load i32**, i32*** %24, align 8
  %49 = add i64 %46, %45
  br label %50

50:                                               ; preds = %43, %3
  %51 = phi i64 [ %49, %43 ], [ %39, %3 ]
  %52 = phi i32** [ %48, %43 ], [ %42, %3 ]
  %53 = phi i32** [ %47, %43 ], [ %41, %3 ]
  %54 = icmp eq i32** %52, %53
  br i1 %54, label %61, label %55

55:                                               ; preds = %50
  %56 = lshr i64 %51, 10
  %57 = getelementptr inbounds i32*, i32** %53, i64 %56
  %58 = load i32*, i32** %57, align 8
  %59 = and i64 %51, 1023
  %60 = getelementptr inbounds i32, i32* %58, i64 %59
  br label %61

61:                                               ; preds = %50, %55
  %62 = phi i32* [ %60, %55 ], [ null, %50 ]
  store i32 %22, i32* %62, align 4
  %63 = load i64, i64* %37, align 8
  %64 = add i64 %63, 1
  store i64 %64, i64* %37, align 8
  %65 = getelementptr inbounds %"class.SkSL::SwitchStatement", %"class.SkSL::SwitchStatement"* %1, i64 0, i32 3, i32 0, i32 0, i64 16
  %66 = bitcast i8* %65 to %"class.std::__1::unique_ptr.387"**
  %67 = load %"class.std::__1::unique_ptr.387"*, %"class.std::__1::unique_ptr.387"** %66, align 8
  %68 = icmp eq %"class.std::__1::unique_ptr.387"* %67, null
  br i1 %68, label %77, label %69

69:                                               ; preds = %61
  %70 = getelementptr inbounds %"class.SkSL::SwitchStatement", %"class.SkSL::SwitchStatement"* %1, i64 0, i32 3, i32 0, i32 0, i64 24
  %71 = bitcast i8* %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = lshr i64 %72, 1
  %74 = and i64 %73, 2147483647
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr.387", %"class.std::__1::unique_ptr.387"* %67, i64 %74
  %76 = icmp eq i64 %74, 0
  br i1 %76, label %77, label %80

77:                                               ; preds = %61, %69
  %78 = load i32*, i32** %19, align 8
  %79 = ptrtoint i32* %78 to i64
  br label %86

80:                                               ; preds = %69
  %81 = bitcast i32** %19 to i64*
  %82 = bitcast %"class.std::__1::vector.382"* %13 to i64*
  %83 = bitcast i32** %20 to i64*
  %84 = load i32*, i32** %19, align 8
  %85 = ptrtoint i32* %84 to i64
  br label %171

86:                                               ; preds = %231, %77
  %87 = phi i64 [ %79, %77 ], [ %233, %231 ]
  %88 = phi i32* [ %78, %77 ], [ %232, %231 ]
  %89 = phi i32 [ 3, %77 ], [ %238, %231 ]
  %90 = phi i32 [ %22, %77 ], [ %239, %231 ]
  %91 = load i32*, i32** %20, align 8
  %92 = icmp eq i32* %88, %91
  br i1 %92, label %97, label %93

93:                                               ; preds = %86
  store i32 %22, i32* %88, align 4
  %94 = getelementptr inbounds i32, i32* %88, i64 1
  %95 = ptrtoint i32* %94 to i64
  %96 = bitcast i32** %19 to i64*
  store i64 %95, i64* %96, align 8
  br label %145

97:                                               ; preds = %86
  %98 = ptrtoint i32* %91 to i64
  %99 = bitcast i32** %19 to i64*
  %100 = bitcast %"class.std::__1::vector.382"* %13 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = sub i64 %98, %101
  %103 = ashr exact i64 %102, 2
  %104 = add nsw i64 %103, 1
  %105 = icmp ugt i64 %104, 4611686018427387903
  br i1 %105, label %106, label %108

106:                                              ; preds = %97
  %107 = bitcast %"class.std::__1::vector.382"* %13 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %107) #15
  unreachable

108:                                              ; preds = %97
  %109 = bitcast i32** %20 to i64*
  %110 = icmp ult i64 %103, 2305843009213693951
  br i1 %110, label %111, label %119

111:                                              ; preds = %108
  %112 = ashr exact i64 %102, 1
  %113 = icmp ult i64 %112, %104
  %114 = select i1 %113, i64 %104, i64 %112
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %124, label %116

116:                                              ; preds = %111
  %117 = icmp ugt i64 %114, 4611686018427387903
  br i1 %117, label %118, label %119

118:                                              ; preds = %116
  tail call void @abort() #15
  unreachable

119:                                              ; preds = %116, %108
  %120 = phi i64 [ %114, %116 ], [ 4611686018427387903, %108 ]
  %121 = shl i64 %120, 2
  %122 = tail call i8* @_Znwm(i64 %121) #16
  %123 = bitcast i8* %122 to i32*
  br label %124

124:                                              ; preds = %119, %111
  %125 = phi i64 [ %120, %119 ], [ 0, %111 ]
  %126 = phi i32* [ %123, %119 ], [ null, %111 ]
  %127 = getelementptr inbounds i32, i32* %126, i64 %103
  %128 = getelementptr inbounds i32, i32* %126, i64 %125
  %129 = ptrtoint i32* %128 to i64
  store i32 %22, i32* %127, align 4
  %130 = getelementptr inbounds i32, i32* %127, i64 1
  %131 = ptrtoint i32* %130 to i64
  %132 = sub i64 %87, %101
  %133 = ashr exact i64 %132, 2
  %134 = sub nsw i64 0, %133
  %135 = getelementptr inbounds i32, i32* %127, i64 %134
  %136 = ptrtoint i32* %135 to i64
  %137 = icmp sgt i64 %132, 0
  br i1 %137, label %138, label %141

138:                                              ; preds = %124
  %139 = bitcast i32* %135 to i8*
  %140 = inttoptr i64 %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %139, i8* align 4 %140, i64 %132, i1 false) #14
  br label %141

141:                                              ; preds = %138, %124
  store i64 %136, i64* %100, align 8
  store i64 %131, i64* %99, align 8
  store i64 %129, i64* %109, align 8
  %142 = icmp eq i64 %101, 0
  br i1 %142, label %145, label %143

143:                                              ; preds = %141
  %144 = inttoptr i64 %101 to i8*
  tail call void @_ZdlPv(i8* %144) #16
  br label %145

145:                                              ; preds = %93, %141, %143
  tail call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 247, i32 3, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %146 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %146) #14
  store i32 %22, i32* %12, align 4
  %147 = bitcast %"class.SkSL::OutputStream"* %2 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %148 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %147, align 8
  %149 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %148, i64 3
  %150 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %149, align 8
  call void %150(%"class.SkSL::OutputStream"* %2, i8* nonnull %146, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %146) #14
  %151 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %151) #14
  store i32 0, i32* %11, align 4
  %152 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %147, align 8
  %153 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %152, i64 3
  %154 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %153, align 8
  call void %154(%"class.SkSL::OutputStream"* %2, i8* nonnull %151, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %151) #14
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 251, i32 %89, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %155 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %155)
  store i32 %16, i32* %10, align 4
  %156 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %147, align 8
  %157 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %156, i64 3
  %158 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %157, align 8
  call void %158(%"class.SkSL::OutputStream"* %2, i8* nonnull %155, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %155)
  %159 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %159)
  store i32 %90, i32* %9, align 4
  %160 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %147, align 8
  %161 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %160, i64 3
  %162 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %161, align 8
  call void %162(%"class.SkSL::OutputStream"* %2, i8* nonnull %159, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %159)
  %163 = getelementptr inbounds %"class.SkSL::SwitchStatement", %"class.SkSL::SwitchStatement"* %1, i64 0, i32 3, i32 0, i32 0, i64 24
  %164 = bitcast i8* %163 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = and i64 %165, 4294967294
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %282, label %168

168:                                              ; preds = %145
  %169 = bitcast i32* %8 to i8*
  %170 = bitcast i32* %7 to i8*
  br label %249

171:                                              ; preds = %80, %231
  %172 = phi i64 [ %85, %80 ], [ %233, %231 ]
  %173 = phi i32* [ %84, %80 ], [ %232, %231 ]
  %174 = phi i32 [ %22, %80 ], [ %239, %231 ]
  %175 = phi i32 [ 3, %80 ], [ %238, %231 ]
  %176 = phi %"class.std::__1::unique_ptr.387"* [ %67, %80 ], [ %240, %231 ]
  %177 = bitcast %"class.std::__1::unique_ptr.387"* %176 to %"class.SkSL::SwitchCase"**
  %178 = load %"class.SkSL::SwitchCase"*, %"class.SkSL::SwitchCase"** %177, align 8
  %179 = load i32, i32* %21, align 8
  %180 = add i32 %179, 1
  store i32 %180, i32* %21, align 8
  %181 = load i32*, i32** %20, align 8
  %182 = icmp eq i32* %173, %181
  br i1 %182, label %186, label %183

183:                                              ; preds = %171
  store i32 %179, i32* %173, align 4
  %184 = getelementptr inbounds i32, i32* %173, i64 1
  %185 = ptrtoint i32* %184 to i64
  store i64 %185, i64* %81, align 8
  br label %231

186:                                              ; preds = %171
  %187 = ptrtoint i32* %181 to i64
  %188 = load i64, i64* %82, align 8
  %189 = sub i64 %187, %188
  %190 = ashr exact i64 %189, 2
  %191 = add nsw i64 %190, 1
  %192 = icmp ugt i64 %191, 4611686018427387903
  br i1 %192, label %193, label %195

193:                                              ; preds = %186
  %194 = bitcast %"class.std::__1::vector.382"* %13 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %194) #15
  unreachable

195:                                              ; preds = %186
  %196 = icmp ult i64 %190, 2305843009213693951
  br i1 %196, label %197, label %205

197:                                              ; preds = %195
  %198 = ashr exact i64 %189, 1
  %199 = icmp ult i64 %198, %191
  %200 = select i1 %199, i64 %191, i64 %198
  %201 = icmp eq i64 %200, 0
  br i1 %201, label %210, label %202

202:                                              ; preds = %197
  %203 = icmp ugt i64 %200, 4611686018427387903
  br i1 %203, label %204, label %205

204:                                              ; preds = %202
  tail call void @abort() #15
  unreachable

205:                                              ; preds = %202, %195
  %206 = phi i64 [ %200, %202 ], [ 4611686018427387903, %195 ]
  %207 = shl i64 %206, 2
  %208 = tail call i8* @_Znwm(i64 %207) #16
  %209 = bitcast i8* %208 to i32*
  br label %210

210:                                              ; preds = %205, %197
  %211 = phi i64 [ %206, %205 ], [ 0, %197 ]
  %212 = phi i32* [ %209, %205 ], [ null, %197 ]
  %213 = getelementptr inbounds i32, i32* %212, i64 %190
  %214 = getelementptr inbounds i32, i32* %212, i64 %211
  %215 = ptrtoint i32* %214 to i64
  store i32 %179, i32* %213, align 4
  %216 = getelementptr inbounds i32, i32* %213, i64 1
  %217 = ptrtoint i32* %216 to i64
  %218 = sub i64 %172, %188
  %219 = ashr exact i64 %218, 2
  %220 = sub nsw i64 0, %219
  %221 = getelementptr inbounds i32, i32* %213, i64 %220
  %222 = ptrtoint i32* %221 to i64
  %223 = icmp sgt i64 %218, 0
  br i1 %223, label %224, label %227

224:                                              ; preds = %210
  %225 = bitcast i32* %221 to i8*
  %226 = inttoptr i64 %188 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %225, i8* align 4 %226, i64 %218, i1 false) #14
  br label %227

227:                                              ; preds = %224, %210
  store i64 %222, i64* %82, align 8
  store i64 %217, i64* %81, align 8
  store i64 %215, i64* %83, align 8
  %228 = icmp eq i64 %188, 0
  br i1 %228, label %231, label %229

229:                                              ; preds = %227
  %230 = inttoptr i64 %188 to i8*
  tail call void @_ZdlPv(i8* %230) #16
  br label %231

231:                                              ; preds = %183, %227, %229
  %232 = phi i32* [ %184, %183 ], [ %216, %227 ], [ %216, %229 ]
  %233 = phi i64 [ %185, %183 ], [ %217, %227 ], [ %217, %229 ]
  %234 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %178, i64 0, i32 1, i32 0, i32 0, i32 0
  %235 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %234, align 8
  %236 = icmp ne %"class.SkSL::Expression"* %235, null
  %237 = add nsw i32 %175, 2
  %238 = select i1 %236, i32 %237, i32 %175
  %239 = select i1 %236, i32 %174, i32 %179
  %240 = getelementptr inbounds %"class.std::__1::unique_ptr.387", %"class.std::__1::unique_ptr.387"* %176, i64 1
  %241 = icmp eq %"class.std::__1::unique_ptr.387"* %240, %75
  br i1 %241, label %86, label %171

242:                                              ; preds = %276
  %243 = and i64 %277, 4294967294
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %282, label %245

245:                                              ; preds = %242
  %246 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 26
  %247 = bitcast i32* %5 to i8*
  %248 = bitcast i32* %4 to i8*
  br label %317

249:                                              ; preds = %168, %276
  %250 = phi i64 [ %165, %168 ], [ %277, %276 ]
  %251 = phi i64 [ 0, %168 ], [ %278, %276 ]
  %252 = load %"class.std::__1::unique_ptr.387"*, %"class.std::__1::unique_ptr.387"** %66, align 8
  %253 = shl i64 %251, 32
  %254 = ashr exact i64 %253, 32
  %255 = getelementptr inbounds %"class.std::__1::unique_ptr.387", %"class.std::__1::unique_ptr.387"* %252, i64 %254, i32 0, i32 0, i32 0
  %256 = bitcast %"class.SkSL::Statement"** %255 to %"class.SkSL::SwitchCase"**
  %257 = load %"class.SkSL::SwitchCase"*, %"class.SkSL::SwitchCase"** %256, align 8
  %258 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %257, i64 0, i32 1, i32 0, i32 0, i32 0
  %259 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %258, align 8
  %260 = icmp eq %"class.SkSL::Expression"* %259, null
  br i1 %260, label %276, label %261

261:                                              ; preds = %249
  %262 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %259, i64 1
  %263 = bitcast %"class.SkSL::Expression"* %262 to i64*
  %264 = load i64, i64* %263, align 8
  %265 = trunc i64 %264 to i32
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %169)
  store i32 %265, i32* %8, align 4
  %266 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %147, align 8
  %267 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %266, i64 3
  %268 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %267, align 8
  call void %268(%"class.SkSL::OutputStream"* %2, i8* nonnull %169, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %169)
  %269 = load i32*, i32** %18, align 8
  %270 = getelementptr inbounds i32, i32* %269, i64 %251
  %271 = load i32, i32* %270, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %170)
  store i32 %271, i32* %7, align 4
  %272 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %147, align 8
  %273 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %272, i64 3
  %274 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %273, align 8
  call void %274(%"class.SkSL::OutputStream"* %2, i8* nonnull %170, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %170)
  %275 = load i64, i64* %164, align 8
  br label %276

276:                                              ; preds = %249, %261
  %277 = phi i64 [ %250, %249 ], [ %275, %261 ]
  %278 = add nuw nsw i64 %251, 1
  %279 = lshr i64 %277, 1
  %280 = and i64 %279, 2147483647
  %281 = icmp ult i64 %278, %280
  br i1 %281, label %249, label %242

282:                                              ; preds = %343, %145, %242
  %283 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 26
  store i32 %22, i32* %283, align 4
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 248, i32 2, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %284 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %284) #14
  store i32 %22, i32* %6, align 4
  %285 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %147, align 8
  %286 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %285, i64 3
  %287 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %286, align 8
  call void %287(%"class.SkSL::OutputStream"* %2, i8* nonnull %284, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %284) #14
  %288 = load i64, i64* %37, align 8
  %289 = load i64, i64* %35, align 8
  %290 = add i64 %288, -1
  store i64 %290, i64* %37, align 8
  %291 = load i64, i64* %25, align 8
  %292 = load i64, i64* %28, align 8
  %293 = sub i64 %291, %292
  %294 = icmp eq i64 %293, 0
  %295 = shl i64 %293, 7
  %296 = add i64 %295, -1
  %297 = select i1 %294, i64 0, i64 %296
  %298 = sub i64 1, %288
  %299 = sub i64 %298, %289
  %300 = add i64 %299, %297
  %301 = icmp ult i64 %300, 2048
  br i1 %301, label %309, label %302

302:                                              ; preds = %282
  %303 = inttoptr i64 %291 to i32**
  %304 = getelementptr inbounds i32*, i32** %303, i64 -1
  %305 = bitcast i32** %304 to i8**
  %306 = load i8*, i8** %305, align 8
  call void @_ZdlPv(i8* %306) #16
  %307 = load i32**, i32*** %24, align 8
  %308 = getelementptr i32*, i32** %307, i64 -1
  store i32** %308, i32*** %24, align 8
  br label %309

309:                                              ; preds = %282, %302
  %310 = load i32*, i32** %18, align 8
  %311 = icmp eq i32* %310, null
  br i1 %311, label %316, label %312

312:                                              ; preds = %309
  %313 = ptrtoint i32* %310 to i64
  %314 = bitcast i32** %19 to i64*
  store i64 %313, i64* %314, align 8
  %315 = bitcast i32* %310 to i8*
  call void @_ZdlPv(i8* %315) #16
  br label %316

316:                                              ; preds = %309, %312
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #14
  ret void

317:                                              ; preds = %245, %343
  %318 = phi i64 [ 0, %245 ], [ %335, %343 ]
  %319 = load %"class.std::__1::unique_ptr.387"*, %"class.std::__1::unique_ptr.387"** %66, align 8
  %320 = shl i64 %318, 32
  %321 = ashr exact i64 %320, 32
  %322 = getelementptr inbounds %"class.std::__1::unique_ptr.387", %"class.std::__1::unique_ptr.387"* %319, i64 %321, i32 0, i32 0, i32 0
  %323 = bitcast %"class.SkSL::Statement"** %322 to %"class.SkSL::SwitchCase"**
  %324 = load %"class.SkSL::SwitchCase"*, %"class.SkSL::SwitchCase"** %323, align 8
  %325 = load i32*, i32** %18, align 8
  %326 = getelementptr inbounds i32, i32* %325, i64 %318
  %327 = load i32, i32* %326, align 4
  store i32 %327, i32* %246, align 4
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 248, i32 2, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %247) #14
  store i32 %327, i32* %5, align 4
  %328 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %147, align 8
  %329 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %328, i64 3
  %330 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %329, align 8
  call void %330(%"class.SkSL::OutputStream"* %2, i8* nonnull %247, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %247) #14
  %331 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %324, i64 0, i32 2, i32 0, i32 0, i32 0
  %332 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %331, align 8
  call void @_ZN4SkSL18SPIRVCodeGenerator14writeStatementERKNS_9StatementERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::Statement"* dereferenceable(16) %332, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %333 = load i32, i32* %246, align 4
  %334 = icmp eq i32 %333, 0
  %335 = add nuw nsw i64 %318, 1
  br i1 %334, label %343, label %336

336:                                              ; preds = %317
  %337 = load i32*, i32** %18, align 8
  %338 = getelementptr inbounds i32, i32* %337, i64 %335
  %339 = load i32, i32* %338, align 4
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 249, i32 2, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %248) #14
  store i32 %339, i32* %4, align 4
  %340 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %147, align 8
  %341 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %340, i64 3
  %342 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %341, align 8
  call void %342(%"class.SkSL::OutputStream"* %2, i8* nonnull %248, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %248) #14
  br label %343

343:                                              ; preds = %317, %336
  %344 = load i64, i64* %164, align 8
  %345 = lshr i64 %344, 1
  %346 = and i64 %345, 2147483647
  %347 = icmp ult i64 %335, %346
  br i1 %347, label %317, label %282
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18SPIRVCodeGenerator32writeGeometryShaderExecutionModeEjRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* nocapture, i32, %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 1
  %19 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %18, align 8
  %20 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %19, i64 0, i32 6
  %21 = bitcast %"class.std::__1::vector.62"* %20 to i64*
  %22 = load i64, i64* %21, align 8, !noalias !43
  %23 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %19, i64 0, i32 6, i32 0, i32 1
  %24 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %19, i64 0, i32 7
  %25 = bitcast %"class.std::__1::vector.75"* %24 to i64*
  %26 = load i64, i64* %25, align 8, !noalias !43
  %27 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %19, i64 0, i32 7, i32 0, i32 1
  %28 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %27, align 8, !noalias !43
  %29 = load %"class.std::__1::unique_ptr.64"*, %"class.std::__1::unique_ptr.64"** %23, align 8, !noalias !46
  %30 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 34
  %31 = bitcast i32* %4 to i8*
  %32 = bitcast %"class.SkSL::OutputStream"* %2 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %33 = bitcast i32* %7 to i8*
  %34 = bitcast i32* %6 to i8*
  %35 = bitcast i32* %5 to i8*
  %36 = bitcast i32* %9 to i8*
  %37 = bitcast i32* %8 to i8*
  %38 = bitcast i32* %14 to i8*
  %39 = bitcast i32* %17 to i8*
  %40 = bitcast i32* %16 to i8*
  %41 = bitcast i32* %15 to i8*
  %42 = inttoptr i64 %22 to %"class.std::__1::unique_ptr.64"*
  %43 = icmp eq %"class.std::__1::unique_ptr.64"* %29, %42
  %44 = inttoptr i64 %26 to %"class.SkSL::ProgramElement"**
  %45 = icmp eq %"class.SkSL::ProgramElement"** %28, %44
  %46 = and i1 %43, %45
  br i1 %46, label %47, label %65

47:                                               ; preds = %151, %3
  %48 = phi i32 [ 1, %3 ], [ %152, %151 ]
  %49 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %49) #14
  store i32 262160, i32* %10, align 4
  %50 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %32, align 8
  %51 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %50, i64 3
  %52 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %51, align 8
  call void %52(%"class.SkSL::OutputStream"* %2, i8* nonnull %49, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %49) #14
  %53 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %53) #14
  store i32 %1, i32* %13, align 4
  %54 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %32, align 8
  %55 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %54, i64 3
  %56 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %55, align 8
  call void %56(%"class.SkSL::OutputStream"* %2, i8* nonnull %53, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %53) #14
  %57 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %57) #14
  store i32 0, i32* %12, align 4
  %58 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %32, align 8
  %59 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %58, i64 3
  %60 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %59, align 8
  call void %60(%"class.SkSL::OutputStream"* %2, i8* nonnull %57, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %57) #14
  %61 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %61) #14
  store i32 %48, i32* %11, align 4
  %62 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %32, align 8
  %63 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %62, i64 3
  %64 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %63, align 8
  call void %64(%"class.SkSL::OutputStream"* %2, i8* nonnull %61, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %61) #14
  ret void

65:                                               ; preds = %3, %151
  %66 = phi i1 [ %162, %151 ], [ %45, %3 ]
  %67 = phi %"class.SkSL::ProgramElement"** [ %161, %151 ], [ %44, %3 ]
  %68 = phi %"class.std::__1::unique_ptr.64"* [ %159, %151 ], [ %42, %3 ]
  %69 = phi i32 [ %152, %151 ], [ 1, %3 ]
  %70 = phi i64 [ %158, %151 ], [ %26, %3 ]
  %71 = phi i64 [ %157, %151 ], [ %22, %3 ]
  %72 = getelementptr inbounds %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64"* %68, i64 0, i32 0, i32 0, i32 0
  %73 = select i1 %66, %"class.SkSL::ProgramElement"** %72, %"class.SkSL::ProgramElement"** %67
  %74 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %73, align 8
  %75 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %74, i64 0, i32 0, i32 2
  %76 = load i32, i32* %75, align 4
  %77 = icmp eq i32 %76, 6
  br i1 %77, label %78, label %151

78:                                               ; preds = %65
  %79 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %74, i64 1
  %80 = bitcast %"class.SkSL::ProgramElement"* %79 to %"struct.SkSL::Modifiers"**
  %81 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %80, align 8
  %82 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %81, i64 0, i32 1
  %83 = load i32, i32* %82, align 8
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %115, label %86

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %81, i64 0, i32 0, i32 10
  %88 = load i32, i32* %87, align 8
  %89 = icmp eq i32 %88, -1
  %90 = select i1 %89, i32 %69, i32 %88
  %91 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %81, i64 0, i32 0, i32 8
  %92 = load i32, i32* %91, align 8
  %93 = icmp ult i32 %92, 7
  br i1 %93, label %94, label %151

94:                                               ; preds = %86
  %95 = trunc i32 %92 to i8
  %96 = lshr i8 91, %95
  %97 = and i8 %96, 1
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %151, label %99

99:                                               ; preds = %94
  %100 = sext i32 %92 to i64
  %101 = getelementptr inbounds [7 x i32], [7 x i32]* @switch.table._ZN4SkSL18SPIRVCodeGenerator32writeGeometryShaderExecutionModeEjRNS_12OutputStreamE, i64 0, i64 %100
  %102 = load i32, i32* %101, align 4
  %103 = sext i32 %92 to i64
  %104 = getelementptr inbounds [7 x i32], [7 x i32]* @switch.table._ZN4SkSL18SPIRVCodeGenerator32writeGeometryShaderExecutionModeEjRNS_12OutputStreamE.84, i64 0, i64 %103
  %105 = load i32, i32* %104, align 4
  store i32 %102, i32* %30, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %31) #14
  store i32 196624, i32* %4, align 4
  %106 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %32, align 8
  %107 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %106, i64 3
  %108 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %107, align 8
  call void %108(%"class.SkSL::OutputStream"* %2, i8* nonnull %31, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %31) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #14
  store i32 %1, i32* %7, align 4
  %109 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %32, align 8
  %110 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %109, i64 3
  %111 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %110, align 8
  call void %111(%"class.SkSL::OutputStream"* %2, i8* nonnull %33, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %34) #14
  store i32 %105, i32* %6, align 4
  %112 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %32, align 8
  %113 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %112, i64 3
  %114 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %113, align 8
  call void %114(%"class.SkSL::OutputStream"* %2, i8* nonnull %34, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %34) #14
  br label %151

115:                                              ; preds = %78
  %116 = and i32 %83, 4
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %151, label %118

118:                                              ; preds = %115
  %119 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %81, i64 0, i32 0, i32 8
  %120 = load i32, i32* %119, align 8
  switch i32 %120, label %134 [
    i32 0, label %123
    i32 2, label %121
    i32 5, label %122
  ]

121:                                              ; preds = %118
  br label %123

122:                                              ; preds = %118
  br label %123

123:                                              ; preds = %122, %121, %118
  %124 = phi i32 [ 27, %118 ], [ 28, %121 ], [ 29, %122 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %35) #14
  store i32 196624, i32* %5, align 4
  %125 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %32, align 8
  %126 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %125, i64 3
  %127 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %126, align 8
  call void %127(%"class.SkSL::OutputStream"* %2, i8* nonnull %35, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %35) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %36) #14
  store i32 %1, i32* %9, align 4
  %128 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %32, align 8
  %129 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %128, i64 3
  %130 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %129, align 8
  call void %130(%"class.SkSL::OutputStream"* %2, i8* nonnull %36, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %36) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %37) #14
  store i32 %124, i32* %8, align 4
  %131 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %32, align 8
  %132 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %131, i64 3
  %133 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %132, align 8
  call void %133(%"class.SkSL::OutputStream"* %2, i8* nonnull %37, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37) #14
  br label %134

134:                                              ; preds = %118, %123
  %135 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %81, i64 0, i32 0, i32 9
  %136 = load i32, i32* %135, align 4
  %137 = icmp eq i32 %136, -1
  br i1 %137, label %151, label %138

138:                                              ; preds = %134
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %38) #14
  store i32 262160, i32* %14, align 4
  %139 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %32, align 8
  %140 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %139, i64 3
  %141 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %140, align 8
  call void %141(%"class.SkSL::OutputStream"* %2, i8* nonnull %38, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %38) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %39) #14
  store i32 %1, i32* %17, align 4
  %142 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %32, align 8
  %143 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %142, i64 3
  %144 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %143, align 8
  call void %144(%"class.SkSL::OutputStream"* %2, i8* nonnull %39, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %39) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %40) #14
  store i32 26, i32* %16, align 4
  %145 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %32, align 8
  %146 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %145, i64 3
  %147 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %146, align 8
  call void %147(%"class.SkSL::OutputStream"* %2, i8* nonnull %40, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %41) #14
  store i32 %136, i32* %15, align 4
  %148 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %32, align 8
  %149 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %148, i64 3
  %150 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %149, align 8
  call void %150(%"class.SkSL::OutputStream"* %2, i8* nonnull %41, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %41) #14
  br label %151

151:                                              ; preds = %94, %86, %115, %99, %134, %138, %65
  %152 = phi i32 [ %69, %65 ], [ %69, %115 ], [ %90, %99 ], [ %69, %134 ], [ %69, %138 ], [ %90, %86 ], [ %90, %94 ]
  %153 = getelementptr inbounds %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64"* %68, i64 1
  %154 = ptrtoint %"class.std::__1::unique_ptr.64"* %153 to i64
  %155 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %67, i64 1
  %156 = ptrtoint %"class.SkSL::ProgramElement"** %155 to i64
  %157 = select i1 %66, i64 %154, i64 %71
  %158 = select i1 %66, i64 %70, i64 %156
  %159 = inttoptr i64 %157 to %"class.std::__1::unique_ptr.64"*
  %160 = icmp eq %"class.std::__1::unique_ptr.64"* %29, %159
  %161 = inttoptr i64 %158 to %"class.SkSL::ProgramElement"**
  %162 = icmp eq %"class.SkSL::ProgramElement"** %28, %161
  %163 = and i1 %160, %162
  br i1 %163, label %47, label %65
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18SPIRVCodeGenerator22writeEntrypointAdapterERKNS_19FunctionDeclarationE(%"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter"* noalias nocapture sret, %"class.SkSL::SPIRVCodeGenerator"* nocapture readonly, %"class.SkSL::FunctionDeclaration"* dereferenceable(96)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.SkSTArray, align 8
  %5 = alloca %"class.std::__1::vector.422", align 8
  %6 = alloca <2 x i64>, align 16
  %7 = bitcast <2 x i64>* %6 to %"struct.SkSL::StringFragment"*
  %8 = alloca <2 x i64>, align 16
  %9 = bitcast <2 x i64>* %8 to %"struct.SkSL::StringFragment"*
  %10 = alloca %"class.SkSL::String", align 8
  %11 = alloca %"class.SkSL::String", align 8
  %12 = alloca %"class.SkSL::String", align 8
  %13 = alloca %class.SkSTArray, align 8
  %14 = alloca %"class.SkSL::String", align 8
  %15 = alloca %"class.SkSL::String", align 8
  %16 = alloca %"class.SkSL::String", align 8
  %17 = alloca %class.SkSTArray.498, align 8
  %18 = alloca %class.SkSTArray.498, align 8
  %19 = alloca %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter", align 8
  %20 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %2, i64 0, i32 1
  %21 = load %"class.SkSL::FunctionDefinition"*, %"class.SkSL::FunctionDefinition"** %20, align 8
  %22 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %21, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = bitcast %"class.SkSL::Statement"** %22 to %"class.SkSL::Block"**
  %24 = load %"class.SkSL::Block"*, %"class.SkSL::Block"** %23, align 8
  %25 = getelementptr inbounds %"class.SkSL::Block", %"class.SkSL::Block"* %24, i64 0, i32 2, i32 0
  %26 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %25, align 8
  %27 = getelementptr inbounds %"class.SkSL::Block", %"class.SkSL::Block"* %24, i64 0, i32 2, i32 1
  %28 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %27, align 8
  %29 = icmp eq %"class.std::__1::__shared_weak_count"* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %3
  %31 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %28, i64 0, i32 0, i32 1
  %32 = atomicrmw add i64* %31, i64 1 monotonic
  br label %33

33:                                               ; preds = %30, %3
  %34 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %26, i64 0, i32 0, i32 0
  %35 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %34, align 8
  %36 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %26, i64 0, i32 0, i32 1
  %37 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %36, align 8
  %38 = icmp eq %"class.std::__1::__shared_weak_count"* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %37, i64 0, i32 0, i32 1
  %41 = atomicrmw add i64* %40, i64 1 monotonic
  br label %42

42:                                               ; preds = %39, %33
  br i1 %29, label %53, label %43

43:                                               ; preds = %42
  %44 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %28, i64 0, i32 0, i32 1
  %45 = atomicrmw add i64* %44, i64 -1 acq_rel
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %53

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %28, i64 0, i32 0
  %49 = bitcast %"class.std::__1::__shared_weak_count"* %28 to void (%"class.std::__1::__shared_count"*)***
  %50 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %50, i64 2
  %52 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %51, align 8
  tail call void %52(%"class.std::__1::__shared_count"* %48) #14
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %28) #14
  br label %53

53:                                               ; preds = %42, %43, %47
  %54 = tail call %"class.SkSL::Symbol"* @_ZN4SkSL11SymbolTableixENS_14StringFragmentE(%"class.SkSL::SymbolTable"* %35, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.27, i64 0, i64 0), i64 12) #14
  %55 = bitcast %"class.SkSL::Symbol"* %54 to %"class.SkSL::Variable"*
  %56 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 40) #14
  %57 = bitcast i8* %56 to %"class.SkSL::VariableReference"*
  tail call void @_ZN4SkSL17VariableReferenceC1EiPKNS_8VariableENS_15VariableRefKindE(%"class.SkSL::VariableReference"* %57, i32 -1, %"class.SkSL::Variable"* %55, i8 signext 1) #14
  %58 = ptrtoint i8* %56 to i64
  %59 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %2, i64 0, i32 4
  %60 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %59, align 8
  %61 = getelementptr inbounds i8, i8* %56, i64 16
  %62 = bitcast i8* %61 to %"class.SkSL::Type"**
  %63 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %62, align 8
  %64 = bitcast <2 x i64>* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %64) #14
  %65 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %60, i64 0, i32 0, i32 1, i32 0
  %66 = bitcast i8** %65 to <2 x i64>*
  %67 = load <2 x i64>, <2 x i64>* %66, align 8
  store <2 x i64> %67, <2 x i64>* %8, align 16
  %68 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %63, i64 0, i32 0, i32 1, i32 0
  %69 = load i8*, i8** %68, align 8
  %70 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %63, i64 0, i32 0, i32 1, i32 1
  %71 = load i64, i64* %70, align 8
  %72 = call zeroext i1 @_ZNK4SkSL14StringFragmentneES0_(%"struct.SkSL::StringFragment"* nonnull %9, i8* %69, i64 %71) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %64) #14
  br i1 %72, label %73, label %153

73:                                               ; preds = %53
  %74 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %1, i64 0, i32 0, i32 2
  %75 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %74, align 8
  %76 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %2, i64 0, i32 0, i32 0, i32 1
  %77 = load i32, i32* %76, align 8
  %78 = bitcast %"class.SkSL::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %78) #14
  %79 = bitcast %"class.SkSL::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %79) #14
  %80 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %59, align 8
  %81 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %80, i64 0, i32 18
  %82 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %81, align 8, !noalias !49
  %83 = icmp eq %"class.SkSL::Type"* %82, null
  %84 = select i1 %83, %"class.SkSL::Type"* %80, %"class.SkSL::Type"* %82
  %85 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %84, i64 0, i32 0, i32 1, i32 0
  %86 = load i8*, i8** %85, align 8, !noalias !49
  %87 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %84, i64 0, i32 0, i32 1, i32 1
  %88 = load i64, i64* %87, align 8, !noalias !49
  %89 = icmp ugt i64 %88, -17
  br i1 %89, label %90, label %92

90:                                               ; preds = %73
  %91 = bitcast %"class.SkSL::String"* %12 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %91) #15
  unreachable

92:                                               ; preds = %73
  %93 = icmp ult i64 %88, 23
  br i1 %93, label %102, label %94

94:                                               ; preds = %92
  %95 = add nuw i64 %88, 16
  %96 = and i64 %95, -16
  %97 = call i8* @_Znwm(i64 %96) #16
  %98 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %97, i8** %98, align 8, !alias.scope !49
  %99 = or i64 %96, -9223372036854775808
  %100 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %99, i64* %100, align 8, !alias.scope !49
  %101 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %88, i64* %101, align 8, !alias.scope !49
  br label %107

102:                                              ; preds = %92
  %103 = trunc i64 %88 to i8
  %104 = bitcast %"class.SkSL::String"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %105 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %104, i64 0, i32 1, i32 0
  store i8 %103, i8* %105, align 1, !alias.scope !49
  %106 = icmp eq i64 %88, 0
  br i1 %106, label %109, label %107

107:                                              ; preds = %102, %94
  %108 = phi i8* [ %97, %94 ], [ %79, %102 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %108, i8* align 1 %86, i64 %88, i1 false) #14
  br label %109

109:                                              ; preds = %102, %107
  %110 = phi i8* [ %79, %102 ], [ %108, %107 ]
  %111 = getelementptr inbounds i8, i8* %110, i64 %88
  store i8 0, i8* %111, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %11, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.28, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %12) #14
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %10, %"class.SkSL::String"* nonnull %11, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.29, i64 0, i64 0)) #14
  %112 = bitcast %"class.SkSL::ErrorReporter"* %75 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %113 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %112, align 8
  %114 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %113, i64 2
  %115 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %114, align 8
  call void %115(%"class.SkSL::ErrorReporter"* %75, i32 %77, %"class.SkSL::String"* nonnull %10) #14
  %116 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %117 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %116, i64 0, i32 1, i32 0
  %118 = load i8, i8* %117, align 1
  %119 = icmp slt i8 %118, 0
  br i1 %119, label %120, label %123

120:                                              ; preds = %109
  %121 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = load i8*, i8** %121, align 8
  call void @_ZdlPv(i8* %122) #16
  br label %123

123:                                              ; preds = %109, %120
  %124 = bitcast %"class.SkSL::String"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %125 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %124, i64 0, i32 1, i32 0
  %126 = load i8, i8* %125, align 1
  %127 = icmp slt i8 %126, 0
  br i1 %127, label %128, label %131

128:                                              ; preds = %123
  %129 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load i8*, i8** %129, align 8
  call void @_ZdlPv(i8* %130) #16
  br label %131

131:                                              ; preds = %123, %128
  %132 = bitcast %"class.SkSL::String"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %133 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %132, i64 0, i32 1, i32 0
  %134 = load i8, i8* %133, align 1
  %135 = icmp slt i8 %134, 0
  br i1 %135, label %136, label %139

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load i8*, i8** %137, align 8
  call void @_ZdlPv(i8* %138) #16
  br label %139

139:                                              ; preds = %131, %136
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %79) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %78) #14
  %140 = getelementptr inbounds %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter", %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter"* %0, i64 0, i32 2, i32 1
  %141 = getelementptr inbounds %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter", %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter"* %0, i64 0, i32 2, i32 12, i32 0
  %142 = bitcast i32* %140 to i8*
  %143 = bitcast %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %143, i8 0, i64 20, i1 false)
  call void @llvm.memset.p0i8.i64(i8* align 4 %142, i8 -1, i64 40, i1 false) #14
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19, i64 0, i64 0), i8** %141, align 8
  %144 = getelementptr inbounds %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter", %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter"* %0, i64 0, i32 2, i32 12, i32 1
  store i64 0, i64* %144, align 8
  %145 = getelementptr inbounds %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter", %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter"* %0, i64 0, i32 2, i32 13
  store i32 0, i32* %145, align 8
  %146 = getelementptr inbounds %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter", %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter"* %0, i64 0, i32 3, i32 0, i32 0
  store i32 0, i32* %146, align 8
  %147 = getelementptr inbounds %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter", %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter"* %0, i64 0, i32 3, i32 0, i32 1
  %148 = getelementptr inbounds %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter", %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter"* %0, i64 0, i32 3, i32 0, i32 12, i32 0
  %149 = bitcast i32* %147 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %149, i8 -1, i64 40, i1 false) #14
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19, i64 0, i64 0), i8** %148, align 8
  %150 = getelementptr inbounds %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter", %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter"* %0, i64 0, i32 3, i32 0, i32 12, i32 1
  store i64 0, i64* %150, align 8
  %151 = getelementptr inbounds %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter", %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter"* %0, i64 0, i32 3, i32 0, i32 13
  store i32 0, i32* %151, align 8
  %152 = getelementptr inbounds %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter", %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter"* %0, i64 0, i32 3, i32 1
  store i32 0, i32* %152, align 8
  br label %599

153:                                              ; preds = %53
  %154 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %13, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %154) #14
  %155 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %13, i64 0, i32 0, i32 0, i64 16
  %156 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %13, i64 0, i32 0, i32 0, i64 24
  %157 = bitcast i8* %156 to i64*
  %158 = bitcast i8* %155 to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %154, i8 -86, i64 16, i1 false)
  store i8* %154, i8** %158, align 8
  store i64 17179869184, i64* %157, align 8
  %159 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %2, i64 0, i32 3
  %160 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %2, i64 0, i32 3, i32 0, i32 1
  %161 = bitcast %"class.SkSL::Variable"*** %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = bitcast %"class.std::__1::vector.422"* %159 to i64*
  %164 = load i64, i64* %163, align 8
  %165 = sub i64 %162, %164
  %166 = icmp eq i64 %165, 8
  br i1 %166, label %169, label %167

167:                                              ; preds = %153
  %168 = bitcast i8* %155 to %class.SkTArray*
  br label %316

169:                                              ; preds = %153
  %170 = inttoptr i64 %164 to %"class.SkSL::Symbol"**
  %171 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %170, align 8
  %172 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %171, i64 0, i32 2
  %173 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %172, align 8
  %174 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %1, i64 0, i32 1
  %175 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %174, align 8
  %176 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %175, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %177 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %176, align 8
  %178 = bitcast <2 x i64>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %178) #14
  %179 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %173, i64 0, i32 0, i32 1, i32 0
  %180 = bitcast i8** %179 to <2 x i64>*
  %181 = load <2 x i64>, <2 x i64>* %180, align 8
  store <2 x i64> %181, <2 x i64>* %6, align 16
  %182 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %177, i64 0, i32 0, i32 1, i32 0
  %183 = load i8*, i8** %182, align 8
  %184 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %177, i64 0, i32 0, i32 1, i32 1
  %185 = load i64, i64* %184, align 8
  %186 = call zeroext i1 @_ZNK4SkSL14StringFragmentneES0_(%"struct.SkSL::StringFragment"* nonnull %7, i8* %183, i64 %185) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %178) #14
  br i1 %186, label %187, label %271

187:                                              ; preds = %169
  %188 = bitcast %"class.std::__1::vector.422"* %159 to %"class.SkSL::Symbol"***
  %189 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %1, i64 0, i32 0, i32 2
  %190 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %189, align 8
  %191 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %2, i64 0, i32 0, i32 0, i32 1
  %192 = load i32, i32* %191, align 8
  %193 = bitcast %"class.SkSL::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %193) #14
  %194 = bitcast %"class.SkSL::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %194) #14
  %195 = load %"class.SkSL::Symbol"**, %"class.SkSL::Symbol"*** %188, align 8
  %196 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %195, align 8
  %197 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %196, i64 0, i32 2
  %198 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %197, align 8
  %199 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %198, i64 0, i32 18
  %200 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %199, align 8, !noalias !54
  %201 = icmp eq %"class.SkSL::Type"* %200, null
  %202 = select i1 %201, %"class.SkSL::Type"* %198, %"class.SkSL::Type"* %200
  %203 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %202, i64 0, i32 0, i32 1, i32 0
  %204 = load i8*, i8** %203, align 8, !noalias !54
  %205 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %202, i64 0, i32 0, i32 1, i32 1
  %206 = load i64, i64* %205, align 8, !noalias !54
  %207 = icmp ugt i64 %206, -17
  br i1 %207, label %208, label %210

208:                                              ; preds = %187
  %209 = bitcast %"class.SkSL::String"* %16 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %209) #15
  unreachable

210:                                              ; preds = %187
  %211 = icmp ult i64 %206, 23
  br i1 %211, label %220, label %212

212:                                              ; preds = %210
  %213 = add nuw i64 %206, 16
  %214 = and i64 %213, -16
  %215 = call i8* @_Znwm(i64 %214) #16
  %216 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %215, i8** %216, align 8, !alias.scope !54
  %217 = or i64 %214, -9223372036854775808
  %218 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %217, i64* %218, align 8, !alias.scope !54
  %219 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %206, i64* %219, align 8, !alias.scope !54
  br label %225

220:                                              ; preds = %210
  %221 = trunc i64 %206 to i8
  %222 = bitcast %"class.SkSL::String"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %223 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %222, i64 0, i32 1, i32 0
  store i8 %221, i8* %223, align 1, !alias.scope !54
  %224 = icmp eq i64 %206, 0
  br i1 %224, label %227, label %225

225:                                              ; preds = %220, %212
  %226 = phi i8* [ %215, %212 ], [ %194, %220 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %226, i8* align 1 %204, i64 %206, i1 false) #14
  br label %227

227:                                              ; preds = %220, %225
  %228 = phi i8* [ %194, %220 ], [ %226, %225 ]
  %229 = getelementptr inbounds i8, i8* %228, i64 %206
  store i8 0, i8* %229, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %15, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %16) #14
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %14, %"class.SkSL::String"* nonnull %15, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31, i64 0, i64 0)) #14
  %230 = bitcast %"class.SkSL::ErrorReporter"* %190 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %231 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %230, align 8
  %232 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %231, i64 2
  %233 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %232, align 8
  call void %233(%"class.SkSL::ErrorReporter"* %190, i32 %192, %"class.SkSL::String"* nonnull %14) #14
  %234 = bitcast %"class.SkSL::String"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %235 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %234, i64 0, i32 1, i32 0
  %236 = load i8, i8* %235, align 1
  %237 = icmp slt i8 %236, 0
  br i1 %237, label %238, label %241

238:                                              ; preds = %227
  %239 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %240 = load i8*, i8** %239, align 8
  call void @_ZdlPv(i8* %240) #16
  br label %241

241:                                              ; preds = %227, %238
  %242 = bitcast %"class.SkSL::String"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %243 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %242, i64 0, i32 1, i32 0
  %244 = load i8, i8* %243, align 1
  %245 = icmp slt i8 %244, 0
  br i1 %245, label %246, label %249

246:                                              ; preds = %241
  %247 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %248 = load i8*, i8** %247, align 8
  call void @_ZdlPv(i8* %248) #16
  br label %249

249:                                              ; preds = %241, %246
  %250 = bitcast %"class.SkSL::String"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %251 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %250, i64 0, i32 1, i32 0
  %252 = load i8, i8* %251, align 1
  %253 = icmp slt i8 %252, 0
  br i1 %253, label %254, label %257

254:                                              ; preds = %249
  %255 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %256 = load i8*, i8** %255, align 8
  call void @_ZdlPv(i8* %256) #16
  br label %257

257:                                              ; preds = %249, %254
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %194) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %193) #14
  %258 = getelementptr inbounds %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter", %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter"* %0, i64 0, i32 2, i32 1
  %259 = getelementptr inbounds %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter", %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter"* %0, i64 0, i32 2, i32 12, i32 0
  %260 = bitcast i32* %258 to i8*
  %261 = bitcast %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %261, i8 0, i64 20, i1 false)
  call void @llvm.memset.p0i8.i64(i8* align 4 %260, i8 -1, i64 40, i1 false) #14
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19, i64 0, i64 0), i8** %259, align 8
  %262 = getelementptr inbounds %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter", %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter"* %0, i64 0, i32 2, i32 12, i32 1
  store i64 0, i64* %262, align 8
  %263 = getelementptr inbounds %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter", %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter"* %0, i64 0, i32 2, i32 13
  store i32 0, i32* %263, align 8
  %264 = getelementptr inbounds %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter", %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter"* %0, i64 0, i32 3, i32 0, i32 0
  store i32 0, i32* %264, align 8
  %265 = getelementptr inbounds %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter", %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter"* %0, i64 0, i32 3, i32 0, i32 1
  %266 = getelementptr inbounds %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter", %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter"* %0, i64 0, i32 3, i32 0, i32 12, i32 0
  %267 = bitcast i32* %265 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %267, i8 -1, i64 40, i1 false) #14
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19, i64 0, i64 0), i8** %266, align 8
  %268 = getelementptr inbounds %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter", %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter"* %0, i64 0, i32 3, i32 0, i32 12, i32 1
  store i64 0, i64* %268, align 8
  %269 = getelementptr inbounds %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter", %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter"* %0, i64 0, i32 3, i32 0, i32 13
  store i32 0, i32* %269, align 8
  %270 = getelementptr inbounds %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter", %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter"* %0, i64 0, i32 3, i32 1
  store i32 0, i32* %270, align 8
  br label %568

271:                                              ; preds = %169
  %272 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %174, align 8
  %273 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %272, i64 0, i32 0, i32 30, i32 0, i32 0, i32 0
  %274 = bitcast %"class.SkSL::Type"** %273 to i64*
  %275 = load i64, i64* %274, align 8
  %276 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #14
  %277 = bitcast i8* %276 to i32 (...)***
  %278 = getelementptr inbounds i8, i8* %276, i64 8
  %279 = bitcast i8* %278 to i32*
  store i32 -1, i32* %279, align 8
  %280 = getelementptr inbounds i8, i8* %276, i64 12
  %281 = bitcast i8* %280 to i32*
  store i32 45, i32* %281, align 4
  %282 = getelementptr inbounds i8, i8* %276, i64 16
  %283 = bitcast i8* %282 to i64*
  store i64 %275, i64* %283, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIfEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %277, align 8
  %284 = getelementptr inbounds i8, i8* %276, i64 24
  %285 = bitcast i8* %284 to i32*
  store i32 0, i32* %285, align 8
  %286 = ptrtoint i8* %276 to i64
  %287 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %174, align 8
  %288 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %287, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %289 = bitcast %"class.SkSL::Type"** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 40) #14
  %292 = bitcast i8* %291 to i32 (...)***
  %293 = getelementptr inbounds i8, i8* %291, i64 8
  %294 = bitcast i8* %293 to i32*
  store i32 -1, i32* %294, align 8
  %295 = getelementptr inbounds i8, i8* %291, i64 12
  %296 = bitcast i8* %295 to i32*
  store i32 39, i32* %296, align 4
  %297 = getelementptr inbounds i8, i8* %291, i64 16
  %298 = bitcast i8* %297 to i64*
  store i64 %290, i64* %298, align 8
  %299 = getelementptr inbounds i8, i8* %291, i64 24
  %300 = bitcast i8* %299 to i64*
  store i64 0, i64* %300, align 8
  %301 = getelementptr inbounds i8, i8* %291, i64 32
  %302 = bitcast i8* %301 to i64*
  store i64 %286, i64* %302, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN4SkSL16ConstructorSplatE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %292, align 8
  %303 = ptrtoint i8* %291 to i64
  %304 = bitcast i8* %155 to %class.SkTArray*
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %304, i32 1, i32 1) #14
  %305 = bitcast i8* %155 to %"class.std::__1::unique_ptr.336"**
  %306 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %305, align 8
  %307 = load i64, i64* %157, align 8
  %308 = lshr i64 %307, 1
  %309 = and i64 %308, 2147483647
  %310 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %306, i64 %309
  %311 = add i64 %307, 2
  %312 = and i64 %311, 4294967294
  %313 = and i64 %307, -4294967295
  %314 = or i64 %312, %313
  store i64 %314, i64* %157, align 8
  %315 = bitcast %"class.std::__1::unique_ptr.336"* %310 to i64*
  store i64 %303, i64* %315, align 8
  br label %316

316:                                              ; preds = %167, %271
  %317 = phi %class.SkTArray* [ %168, %167 ], [ %304, %271 ]
  %318 = bitcast %"class.SkSL::Type"** %59 to i64*
  %319 = load i64, i64* %318, align 8
  %320 = ptrtoint %"class.SkSL::FunctionDeclaration"* %2 to i64
  %321 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %4, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %321)
  %322 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 64) #14
  %323 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %4, i64 0, i32 0, i32 0, i64 16
  %324 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %4, i64 0, i32 0, i32 0, i64 24
  %325 = bitcast i8* %324 to i64*
  %326 = bitcast i8* %323 to i8**
  store i8* %321, i8** %326, align 8
  store i64 17179869184, i64* %325, align 8
  %327 = bitcast i8* %323 to %class.SkTArray*
  %328 = call dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray* %327, %class.SkTArray* dereferenceable(16) %317) #14
  %329 = bitcast i8* %322 to i32 (...)***
  %330 = getelementptr inbounds i8, i8* %322, i64 8
  %331 = bitcast i8* %330 to i32*
  store i32 -1, i32* %331, align 8
  %332 = getelementptr inbounds i8, i8* %322, i64 12
  %333 = bitcast i8* %332 to i32*
  store i32 47, i32* %333, align 4
  %334 = getelementptr inbounds i8, i8* %322, i64 16
  %335 = bitcast i8* %334 to i64*
  store i64 %319, i64* %335, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL12FunctionCallE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %329, align 8
  %336 = getelementptr inbounds i8, i8* %322, i64 24
  %337 = bitcast i8* %336 to i64*
  store i64 %320, i64* %337, align 8
  %338 = getelementptr inbounds i8, i8* %322, i64 48
  %339 = getelementptr inbounds i8, i8* %322, i64 32
  %340 = getelementptr inbounds i8, i8* %322, i64 56
  %341 = bitcast i8* %340 to i64*
  %342 = bitcast i8* %338 to i8**
  store i8* %339, i8** %342, align 8
  store i64 17179869184, i64* %341, align 8
  %343 = bitcast i8* %338 to %class.SkTArray*
  %344 = call dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray* %343, %class.SkTArray* dereferenceable(16) %327) #14
  %345 = load i64, i64* %325, align 8
  %346 = and i64 %345, 4294967294
  %347 = icmp eq i64 %346, 0
  br i1 %347, label %350, label %348

348:                                              ; preds = %316
  %349 = bitcast i8* %323 to %"class.std::__1::unique_ptr.336"**
  br label %354

350:                                              ; preds = %365, %316
  %351 = phi i64 [ %345, %316 ], [ %367, %365 ]
  %352 = and i64 %351, 1
  %353 = icmp eq i64 %352, 0
  br i1 %353, label %373, label %371

354:                                              ; preds = %365, %348
  %355 = phi i64 [ 0, %348 ], [ %366, %365 ]
  %356 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %349, align 8
  %357 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %356, i64 %355, i32 0, i32 0, i32 0
  %358 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %357, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %357, align 8
  %359 = icmp eq %"class.SkSL::Expression"* %358, null
  br i1 %359, label %365, label %360

360:                                              ; preds = %354
  %361 = bitcast %"class.SkSL::Expression"* %358 to void (%"class.SkSL::Expression"*)***
  %362 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %361, align 8
  %363 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %362, i64 1
  %364 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %363, align 8
  call void %364(%"class.SkSL::Expression"* nonnull %358) #14
  br label %365

365:                                              ; preds = %360, %354
  %366 = add nuw nsw i64 %355, 1
  %367 = load i64, i64* %325, align 8
  %368 = lshr i64 %367, 1
  %369 = and i64 %368, 2147483647
  %370 = icmp ult i64 %366, %369
  br i1 %370, label %354, label %350

371:                                              ; preds = %350
  %372 = load i8*, i8** %326, align 8
  call void @_Z7sk_freePv(i8* %372) #14
  br label %373

373:                                              ; preds = %350, %371
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %321)
  %374 = ptrtoint i8* %322 to i64
  %375 = load i64, i64* %318, align 8
  %376 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 48) #14
  %377 = bitcast i8* %376 to i32 (...)***
  %378 = getelementptr inbounds i8, i8* %376, i64 8
  %379 = bitcast i8* %378 to i32*
  store i32 -1, i32* %379, align 8
  %380 = getelementptr inbounds i8, i8* %376, i64 12
  %381 = bitcast i8* %380 to i32*
  store i32 30, i32* %381, align 4
  %382 = getelementptr inbounds i8, i8* %376, i64 16
  %383 = bitcast i8* %382 to i64*
  store i64 %375, i64* %383, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL16BinaryExpressionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %377, align 8
  %384 = getelementptr inbounds i8, i8* %376, i64 24
  %385 = bitcast i8* %384 to i64*
  store i64 %58, i64* %385, align 8
  %386 = getelementptr inbounds i8, i8* %376, i64 32
  %387 = bitcast i8* %386 to i32*
  store i32 64, i32* %387, align 8
  %388 = getelementptr inbounds i8, i8* %376, i64 40
  %389 = bitcast i8* %388 to i64*
  store i64 %374, i64* %389, align 8
  %390 = ptrtoint i8* %376 to i64
  %391 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 24) #14
  %392 = load i32, i32* %379, align 8
  %393 = getelementptr inbounds i8, i8* %391, i64 8
  %394 = bitcast i8* %393 to i32*
  store i32 %392, i32* %394, align 8
  %395 = getelementptr inbounds i8, i8* %391, i64 12
  %396 = bitcast i8* %395 to i32*
  store i32 21, i32* %396, align 4
  %397 = bitcast i8* %391 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL19ExpressionStatementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %397, align 8
  %398 = getelementptr inbounds i8, i8* %391, i64 16
  %399 = bitcast i8* %398 to i64*
  store i64 %390, i64* %399, align 8
  %400 = ptrtoint i8* %391 to i64
  %401 = getelementptr inbounds %class.SkSTArray.498, %class.SkSTArray.498* %17, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %401) #14
  %402 = getelementptr inbounds %class.SkSTArray.498, %class.SkSTArray.498* %17, i64 0, i32 0, i32 0, i64 16
  %403 = getelementptr inbounds %class.SkSTArray.498, %class.SkSTArray.498* %17, i64 0, i32 0, i32 0, i64 24
  %404 = bitcast i8* %403 to i64*
  %405 = bitcast i8* %402 to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %401, i8 -86, i64 16, i1 false)
  store i8* %401, i8** %405, align 8
  store i64 17179869184, i64* %404, align 8
  %406 = bitcast i8* %402 to %class.SkTArray.500*
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.500* %406, i32 1, i32 1) #14
  %407 = bitcast i8* %402 to %"class.std::__1::unique_ptr.387"**
  %408 = load %"class.std::__1::unique_ptr.387"*, %"class.std::__1::unique_ptr.387"** %407, align 8
  %409 = load i64, i64* %404, align 8
  %410 = lshr i64 %409, 1
  %411 = and i64 %410, 2147483647
  %412 = getelementptr inbounds %"class.std::__1::unique_ptr.387", %"class.std::__1::unique_ptr.387"* %408, i64 %411
  %413 = add i64 %409, 2
  %414 = and i64 %413, 4294967294
  %415 = and i64 %409, -4294967295
  %416 = or i64 %414, %415
  store i64 %416, i64* %404, align 8
  %417 = bitcast %"class.std::__1::unique_ptr.387"* %412 to i64*
  store i64 %400, i64* %417, align 8
  %418 = getelementptr inbounds %class.SkSTArray.498, %class.SkSTArray.498* %18, i64 0, i32 0, i32 0, i64 16
  %419 = getelementptr inbounds %class.SkSTArray.498, %class.SkSTArray.498* %18, i64 0, i32 0, i32 0, i64 0
  %420 = getelementptr inbounds %class.SkSTArray.498, %class.SkSTArray.498* %18, i64 0, i32 0, i32 0, i64 24
  %421 = bitcast i8* %420 to i64*
  %422 = bitcast i8* %418 to i8**
  store i8* %419, i8** %422, align 8
  store i64 17179869184, i64* %421, align 8
  %423 = bitcast i8* %418 to %class.SkTArray.500*
  %424 = call dereferenceable(16) %class.SkTArray.500* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray.500* %423, %class.SkTArray.500* dereferenceable(16) %406) #14
  br i1 %38, label %428, label %425

425:                                              ; preds = %373
  %426 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %37, i64 0, i32 0, i32 1
  %427 = atomicrmw add i64* %426, i64 1 monotonic
  br label %428

428:                                              ; preds = %373, %425
  %429 = call %"class.SkSL::Block"* @_ZN4SkSL5Block4MakeEi9SkSTArrayILi2ENSt3__110unique_ptrINS_9StatementENS2_14default_deleteIS4_EEEELb0EENS2_10shared_ptrINS_11SymbolTableEEEb(i32 -1, %class.SkSTArray.498* nonnull %18, %"class.SkSL::SymbolTable"* %35, %"class.std::__1::__shared_weak_count"* %37, i1 zeroext true) #14
  %430 = ptrtoint %"class.SkSL::Block"* %429 to i64
  %431 = load i64, i64* %421, align 8
  %432 = and i64 %431, 4294967294
  %433 = icmp eq i64 %432, 0
  br i1 %433, label %436, label %434

434:                                              ; preds = %428
  %435 = bitcast i8* %418 to %"class.std::__1::unique_ptr.387"**
  br label %440

436:                                              ; preds = %451, %428
  %437 = phi i64 [ %431, %428 ], [ %453, %451 ]
  %438 = and i64 %437, 1
  %439 = icmp eq i64 %438, 0
  br i1 %439, label %459, label %457

440:                                              ; preds = %451, %434
  %441 = phi i64 [ 0, %434 ], [ %452, %451 ]
  %442 = load %"class.std::__1::unique_ptr.387"*, %"class.std::__1::unique_ptr.387"** %435, align 8
  %443 = getelementptr inbounds %"class.std::__1::unique_ptr.387", %"class.std::__1::unique_ptr.387"* %442, i64 %441, i32 0, i32 0, i32 0
  %444 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %443, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %443, align 8
  %445 = icmp eq %"class.SkSL::Statement"* %444, null
  br i1 %445, label %451, label %446

446:                                              ; preds = %440
  %447 = bitcast %"class.SkSL::Statement"* %444 to void (%"class.SkSL::Statement"*)***
  %448 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %447, align 8
  %449 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %448, i64 1
  %450 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %449, align 8
  call void %450(%"class.SkSL::Statement"* nonnull %444) #14
  br label %451

451:                                              ; preds = %446, %440
  %452 = add nuw nsw i64 %441, 1
  %453 = load i64, i64* %421, align 8
  %454 = lshr i64 %453, 1
  %455 = and i64 %454, 2147483647
  %456 = icmp ult i64 %452, %455
  br i1 %456, label %440, label %436

457:                                              ; preds = %436
  %458 = load i8*, i8** %422, align 8
  call void @_Z7sk_freePv(i8* %458) #14
  br label %459

459:                                              ; preds = %436, %457
  %460 = bitcast %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %460) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %460, i8 -86, i64 168, i1 false)
  %461 = getelementptr inbounds %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter", %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter"* %19, i64 0, i32 2, i32 1
  %462 = getelementptr inbounds %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter", %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter"* %19, i64 0, i32 2, i32 12, i32 0
  %463 = bitcast i32* %461 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %460, i8 0, i64 16, i1 false) #14
  %464 = getelementptr inbounds %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter", %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter"* %19, i64 0, i32 2, i32 12, i32 1
  %465 = getelementptr inbounds %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter", %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter"* %19, i64 0, i32 2, i32 13
  %466 = getelementptr inbounds %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter", %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter"* %19, i64 0, i32 3, i32 1
  %467 = getelementptr inbounds %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter", %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter"* %19, i64 0, i32 2, i32 0
  store i32 0, i32* %467, align 8
  call void @llvm.memset.p0i8.i64(i8* align 4 %463, i8 -1, i64 40, i1 false)
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19, i64 0, i64 0), i8** %462, align 8
  store i64 0, i64* %464, align 8
  store i32 0, i32* %465, align 8
  %468 = getelementptr inbounds %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter", %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter"* %19, i64 0, i32 2
  %469 = bitcast %"struct.SkSL::Layout"* %468 to i8*
  %470 = getelementptr inbounds %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter", %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter"* %19, i64 0, i32 3
  %471 = bitcast %"struct.SkSL::Modifiers"* %470 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %471, i8* align 8 %469, i64 72, i1 false)
  store i32 64, i32* %466, align 8
  %472 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %1, i64 0, i32 1
  %473 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %472, align 8
  %474 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %473, i64 0, i32 0, i32 29, i32 0, i32 0, i32 0
  %475 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %474, align 8
  %476 = bitcast %"class.std::__1::vector.422"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %476)
  %477 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 96) #14
  %478 = bitcast i8* %477 to %"class.SkSL::FunctionDeclaration"*
  %479 = bitcast %"class.std::__1::vector.422"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %479, i8 0, i64 24, i1 false)
  call void @_ZN4SkSL19FunctionDeclarationC1EiPKNS_9ModifiersENS_14StringFragmentENSt3__16vectorIPKNS_8VariableENS5_9allocatorIS9_EEEEPKNS_4TypeEb(%"class.SkSL::FunctionDeclaration"* %478, i32 -1, %"struct.SkSL::Modifiers"* %470, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.32, i64 0, i64 0), i64 11, %"class.std::__1::vector.422"* nonnull %5, %"class.SkSL::Type"* %475, i1 zeroext false) #14
  %480 = getelementptr inbounds %"class.std::__1::vector.422", %"class.std::__1::vector.422"* %5, i64 0, i32 0, i32 0
  %481 = load %"class.SkSL::Variable"**, %"class.SkSL::Variable"*** %480, align 8
  %482 = icmp eq %"class.SkSL::Variable"** %481, null
  br i1 %482, label %488, label %483

483:                                              ; preds = %459
  %484 = getelementptr inbounds %"class.std::__1::vector.422", %"class.std::__1::vector.422"* %5, i64 0, i32 0, i32 1
  %485 = bitcast %"class.SkSL::Variable"*** %484 to i64*
  %486 = ptrtoint %"class.SkSL::Variable"** %481 to i64
  store i64 %486, i64* %485, align 8
  %487 = bitcast %"class.SkSL::Variable"** %481 to i8*
  call void @_ZdlPv(i8* %487) #16
  br label %488

488:                                              ; preds = %459, %483
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %476)
  %489 = ptrtoint i8* %477 to i64
  %490 = getelementptr inbounds %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter", %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter"* %19, i64 0, i32 1
  %491 = getelementptr inbounds %"class.std::__1::unique_ptr.509", %"class.std::__1::unique_ptr.509"* %490, i64 0, i32 0, i32 0, i32 0
  %492 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %491, align 8
  %493 = bitcast %"class.std::__1::unique_ptr.509"* %490 to i64*
  store i64 %489, i64* %493, align 8
  %494 = icmp eq %"class.SkSL::FunctionDeclaration"* %492, null
  br i1 %494, label %501, label %495

495:                                              ; preds = %488
  %496 = bitcast %"class.SkSL::FunctionDeclaration"* %492 to void (%"class.SkSL::FunctionDeclaration"*)***
  %497 = load void (%"class.SkSL::FunctionDeclaration"*)**, void (%"class.SkSL::FunctionDeclaration"*)*** %496, align 8
  %498 = getelementptr inbounds void (%"class.SkSL::FunctionDeclaration"*)*, void (%"class.SkSL::FunctionDeclaration"*)** %497, i64 1
  %499 = load void (%"class.SkSL::FunctionDeclaration"*)*, void (%"class.SkSL::FunctionDeclaration"*)** %498, align 8
  call void %499(%"class.SkSL::FunctionDeclaration"* nonnull %492) #14
  %500 = load i64, i64* %493, align 8
  br label %501

501:                                              ; preds = %488, %495
  %502 = phi i64 [ %489, %488 ], [ %500, %495 ]
  %503 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 88) #14
  %504 = getelementptr inbounds i8, i8* %503, i64 8
  %505 = bitcast i8* %504 to i32*
  store i32 -1, i32* %505, align 8
  %506 = getelementptr inbounds i8, i8* %503, i64 12
  %507 = bitcast i8* %506 to i32*
  store i32 2, i32* %507, align 4
  %508 = bitcast i8* %503 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL18FunctionDefinitionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %508, align 8
  %509 = getelementptr inbounds i8, i8* %503, i64 16
  %510 = bitcast i8* %509 to i64*
  store i64 %502, i64* %510, align 8
  %511 = getelementptr inbounds i8, i8* %503, i64 24
  store i8 0, i8* %511, align 8
  %512 = getelementptr inbounds i8, i8* %503, i64 32
  %513 = bitcast i8* %512 to i64*
  store i64 %430, i64* %513, align 8
  %514 = getelementptr inbounds i8, i8* %503, i64 40
  %515 = getelementptr inbounds i8, i8* %503, i64 72
  %516 = bitcast i8* %515 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %514, i8 0, i64 32, i1 false) #14
  store i32 1065353216, i32* %516, align 8
  %517 = getelementptr inbounds i8, i8* %503, i64 80
  %518 = bitcast i8* %517 to %"struct.SkSL::ASTNode"**
  store %"struct.SkSL::ASTNode"* null, %"struct.SkSL::ASTNode"** %518, align 8
  %519 = ptrtoint i8* %503 to i64
  %520 = getelementptr inbounds %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter", %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %521 = load %"class.SkSL::FunctionDefinition"*, %"class.SkSL::FunctionDefinition"** %520, align 8
  %522 = bitcast %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter"* %19 to i64*
  store i64 %519, i64* %522, align 8
  %523 = icmp eq %"class.SkSL::FunctionDefinition"* %521, null
  br i1 %523, label %530, label %524

524:                                              ; preds = %501
  %525 = bitcast %"class.SkSL::FunctionDefinition"* %521 to void (%"class.SkSL::FunctionDefinition"*)***
  %526 = load void (%"class.SkSL::FunctionDefinition"*)**, void (%"class.SkSL::FunctionDefinition"*)*** %525, align 8
  %527 = getelementptr inbounds void (%"class.SkSL::FunctionDefinition"*)*, void (%"class.SkSL::FunctionDefinition"*)** %526, i64 1
  %528 = load void (%"class.SkSL::FunctionDefinition"*)*, void (%"class.SkSL::FunctionDefinition"*)** %527, align 8
  call void %528(%"class.SkSL::FunctionDefinition"* nonnull %521) #14
  %529 = load i64, i64* %522, align 8
  br label %530

530:                                              ; preds = %501, %524
  %531 = phi i64 [ %529, %524 ], [ %519, %501 ]
  %532 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %491, align 8
  %533 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %532, i64 0, i32 1
  %534 = bitcast %"class.SkSL::FunctionDefinition"** %533 to i64*
  store i64 %531, i64* %534, align 8
  %535 = bitcast %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter"* %0 to i64*
  store i64 %531, i64* %535, align 8
  %536 = getelementptr inbounds %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter", %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter"* %0, i64 0, i32 1
  %537 = ptrtoint %"class.SkSL::FunctionDeclaration"* %532 to i64
  %538 = bitcast %"class.std::__1::unique_ptr.509"* %536 to i64*
  store i64 %537, i64* %538, align 8
  %539 = getelementptr inbounds %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter", %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter"* %0, i64 0, i32 2
  %540 = bitcast %"struct.SkSL::Layout"* %539 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %540, i8* align 8 %469, i64 148, i1 false) #14
  %541 = load i64, i64* %404, align 8
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %460) #14
  %542 = and i64 %541, 4294967294
  %543 = icmp eq i64 %542, 0
  br i1 %543, label %544, label %548

544:                                              ; preds = %559, %530
  %545 = phi i64 [ %541, %530 ], [ %561, %559 ]
  %546 = and i64 %545, 1
  %547 = icmp eq i64 %546, 0
  br i1 %547, label %567, label %565

548:                                              ; preds = %530, %559
  %549 = phi i64 [ %560, %559 ], [ 0, %530 ]
  %550 = load %"class.std::__1::unique_ptr.387"*, %"class.std::__1::unique_ptr.387"** %407, align 8
  %551 = getelementptr inbounds %"class.std::__1::unique_ptr.387", %"class.std::__1::unique_ptr.387"* %550, i64 %549, i32 0, i32 0, i32 0
  %552 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %551, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %551, align 8
  %553 = icmp eq %"class.SkSL::Statement"* %552, null
  br i1 %553, label %559, label %554

554:                                              ; preds = %548
  %555 = bitcast %"class.SkSL::Statement"* %552 to void (%"class.SkSL::Statement"*)***
  %556 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %555, align 8
  %557 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %556, i64 1
  %558 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %557, align 8
  call void %558(%"class.SkSL::Statement"* nonnull %552) #14
  br label %559

559:                                              ; preds = %554, %548
  %560 = add nuw nsw i64 %549, 1
  %561 = load i64, i64* %404, align 8
  %562 = lshr i64 %561, 1
  %563 = and i64 %562, 2147483647
  %564 = icmp ult i64 %560, %563
  br i1 %564, label %548, label %544

565:                                              ; preds = %544
  %566 = load i8*, i8** %405, align 8
  call void @_Z7sk_freePv(i8* %566) #14
  br label %567

567:                                              ; preds = %544, %565
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %401) #14
  br label %568

568:                                              ; preds = %567, %257
  %569 = phi i64 [ %58, %257 ], [ 0, %567 ]
  %570 = load i64, i64* %157, align 8
  %571 = and i64 %570, 4294967294
  %572 = icmp eq i64 %571, 0
  br i1 %572, label %575, label %573

573:                                              ; preds = %568
  %574 = bitcast i8* %155 to %"class.std::__1::unique_ptr.336"**
  br label %579

575:                                              ; preds = %590, %568
  %576 = phi i64 [ %570, %568 ], [ %592, %590 ]
  %577 = and i64 %576, 1
  %578 = icmp eq i64 %577, 0
  br i1 %578, label %598, label %596

579:                                              ; preds = %590, %573
  %580 = phi i64 [ 0, %573 ], [ %591, %590 ]
  %581 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %574, align 8
  %582 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %581, i64 %580, i32 0, i32 0, i32 0
  %583 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %582, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %582, align 8
  %584 = icmp eq %"class.SkSL::Expression"* %583, null
  br i1 %584, label %590, label %585

585:                                              ; preds = %579
  %586 = bitcast %"class.SkSL::Expression"* %583 to void (%"class.SkSL::Expression"*)***
  %587 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %586, align 8
  %588 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %587, i64 1
  %589 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %588, align 8
  call void %589(%"class.SkSL::Expression"* nonnull %583) #14
  br label %590

590:                                              ; preds = %585, %579
  %591 = add nuw nsw i64 %580, 1
  %592 = load i64, i64* %157, align 8
  %593 = lshr i64 %592, 1
  %594 = and i64 %593, 2147483647
  %595 = icmp ult i64 %591, %594
  br i1 %595, label %579, label %575

596:                                              ; preds = %575
  %597 = load i8*, i8** %158, align 8
  call void @_Z7sk_freePv(i8* %597) #14
  br label %598

598:                                              ; preds = %575, %596
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %154) #14
  br label %599

599:                                              ; preds = %598, %139
  %600 = phi i64 [ %58, %139 ], [ %569, %598 ]
  %601 = icmp eq i64 %600, 0
  br i1 %601, label %608, label %602

602:                                              ; preds = %599
  %603 = inttoptr i64 %600 to %"class.SkSL::VariableReference"*
  %604 = inttoptr i64 %600 to void (%"class.SkSL::VariableReference"*)***
  %605 = load void (%"class.SkSL::VariableReference"*)**, void (%"class.SkSL::VariableReference"*)*** %604, align 8
  %606 = getelementptr inbounds void (%"class.SkSL::VariableReference"*)*, void (%"class.SkSL::VariableReference"*)** %605, i64 1
  %607 = load void (%"class.SkSL::VariableReference"*)*, void (%"class.SkSL::VariableReference"*)** %606, align 8
  call void %607(%"class.SkSL::VariableReference"* nonnull %603) #14
  br label %608

608:                                              ; preds = %599, %602
  br i1 %38, label %619, label %609

609:                                              ; preds = %608
  %610 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %37, i64 0, i32 0, i32 1
  %611 = atomicrmw add i64* %610, i64 -1 acq_rel
  %612 = icmp eq i64 %611, 0
  br i1 %612, label %613, label %619

613:                                              ; preds = %609
  %614 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %37, i64 0, i32 0
  %615 = bitcast %"class.std::__1::__shared_weak_count"* %37 to void (%"class.std::__1::__shared_count"*)***
  %616 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %615, align 8
  %617 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %616, i64 2
  %618 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %617, align 8
  call void %618(%"class.std::__1::__shared_count"* %614) #14
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %37) #14
  br label %619

619:                                              ; preds = %608, %609, %613
  ret void
}

declare %"class.SkSL::Symbol"* @_ZN4SkSL11SymbolTableixENS_14StringFragmentE(%"class.SkSL::SymbolTable"*, i8*, i64) local_unnamed_addr #2

declare %"class.SkSL::Block"* @_ZN4SkSL5Block4MakeEi9SkSTArrayILi2ENSt3__110unique_ptrINS_9StatementENS2_14default_deleteIS4_EEEELb0EENS2_10shared_ptrINS_11SymbolTableEEEb(i32, %class.SkSTArray.498*, %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18SPIRVCodeGenerator18writeUniformBufferENSt3__110shared_ptrINS_11SymbolTableEEE(%"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"*) local_unnamed_addr #0 align 2 {
  %4 = alloca [15 x i8], align 8
  %5 = alloca %"class.std::__1::tuple.703", align 8
  %6 = alloca %"class.std::__1::tuple.633", align 1
  %7 = alloca %"class.std::__1::shared_ptr.49", align 8
  %8 = alloca %"class.std::__1::vector.19", align 16
  %9 = alloca %"class.SkSL::Variable"*, align 8
  %10 = alloca %"class.SkSL::String", align 8
  %11 = alloca [24 x i8], align 8
  %12 = alloca %"struct.SkSL::Modifiers", align 8
  %13 = alloca i32, align 4
  %14 = alloca %"class.SkSL::Variable"*, align 8
  %15 = alloca i32, align 4
  %16 = getelementptr inbounds [24 x i8], [24 x i8]* %11, i64 0, i64 0
  %17 = getelementptr inbounds %"class.std::__1::shared_ptr.49", %"class.std::__1::shared_ptr.49"* %7, i64 0, i32 0
  store %"class.SkSL::SymbolTable"* %1, %"class.SkSL::SymbolTable"** %17, align 8
  %18 = getelementptr inbounds %"class.std::__1::shared_ptr.49", %"class.std::__1::shared_ptr.49"* %7, i64 0, i32 1
  store %"class.std::__1::__shared_weak_count"* %2, %"class.std::__1::__shared_weak_count"** %18, align 8
  %19 = bitcast %"class.std::__1::vector.19"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #14
  %20 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %8, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %8, i64 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %19, i8 0, i64 24, i1 false) #14
  %23 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 37
  %24 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 37, i32 0, i32 1
  %25 = bitcast %"class.SkSL::VarDeclaration"*** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.std::__1::vector.351"* %23 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %26, %28
  %30 = ashr exact i64 %29, 3
  %31 = bitcast %"struct.SkSL::Type::Field"** %22 to i64*
  %32 = bitcast %"class.std::__1::vector.19"* %8 to i64*
  %33 = icmp eq i64 %29, 0
  br i1 %33, label %45, label %34

34:                                               ; preds = %3
  %35 = icmp ugt i64 %30, 177372539170284150
  br i1 %35, label %36, label %37

36:                                               ; preds = %34
  tail call void @abort() #15
  unreachable

37:                                               ; preds = %34
  %38 = bitcast %"struct.SkSL::Type::Field"** %21 to i64*
  %39 = mul i64 %30, 104
  %40 = tail call i8* @_Znwm(i64 %39) #16
  %41 = bitcast i8* %40 to %"struct.SkSL::Type::Field"*
  %42 = ptrtoint i8* %40 to i64
  %43 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %41, i64 %30
  %44 = ptrtoint %"struct.SkSL::Type::Field"* %43 to i64
  store i64 %42, i64* %32, align 16
  store i64 %42, i64* %38, align 8
  store i64 %44, i64* %31, align 16
  br label %45

45:                                               ; preds = %37, %3
  %46 = phi %"struct.SkSL::Type::Field"* [ null, %3 ], [ %41, %37 ]
  %47 = phi i64 [ 0, %3 ], [ %44, %37 ]
  %48 = phi %"struct.SkSL::Type::Field"* [ null, %3 ], [ %43, %37 ]
  %49 = phi i64 [ 0, %3 ], [ %42, %37 ]
  %50 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 38, i32 0
  %51 = uitofp i64 %30 to float
  %52 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 38, i32 0, i32 3, i32 0, i32 0
  %53 = load float, float* %52, align 4
  %54 = fdiv float %51, %53
  %55 = tail call float @llvm.ceil.f32(float %54) #14
  %56 = fptoui float %55 to i64
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.190"* %50, i64 %56) #14
  %57 = getelementptr inbounds %"class.std::__1::vector.351", %"class.std::__1::vector.351"* %23, i64 0, i32 0, i32 0
  %58 = load %"class.SkSL::VarDeclaration"**, %"class.SkSL::VarDeclaration"*** %57, align 8
  %59 = load %"class.SkSL::VarDeclaration"**, %"class.SkSL::VarDeclaration"*** %24, align 8
  %60 = icmp eq %"class.SkSL::VarDeclaration"** %58, %59
  br i1 %60, label %61, label %65

61:                                               ; preds = %45
  %62 = bitcast %"struct.SkSL::Type::Field"** %21 to i64*
  %63 = insertelement <2 x i64> undef, i64 %49, i32 0
  %64 = shufflevector <2 x i64> %63, <2 x i64> undef, <2 x i32> zeroinitializer
  br label %76

65:                                               ; preds = %45
  %66 = bitcast %"class.SkSL::Variable"** %9 to i8*
  %67 = bitcast %"class.SkSL::Variable"** %9 to i64*
  %68 = bitcast %"struct.SkSL::Type::Field"** %21 to i64*
  %69 = bitcast %"class.std::__1::tuple.703"* %5 to i8*
  %70 = getelementptr inbounds %"class.std::__1::tuple.703", %"class.std::__1::tuple.703"* %5, i64 0, i32 0, i32 0, i32 0
  %71 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %6, i64 0, i32 0
  br label %237

72:                                               ; preds = %325
  %73 = bitcast %"class.std::__1::vector.19"* %8 to <2 x i64>*
  %74 = load <2 x i64>, <2 x i64>* %73, align 16
  %75 = load i64, i64* %31, align 16
  br label %76

76:                                               ; preds = %61, %72
  %77 = phi i64* [ %62, %61 ], [ %68, %72 ]
  %78 = phi i64 [ %47, %61 ], [ %75, %72 ]
  %79 = phi <2 x i64> [ %64, %61 ], [ %74, %72 ]
  %80 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  store i8 14, i8* %81, align 1
  %82 = bitcast %"class.SkSL::String"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %82, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @_ZZN4SkSL18SPIRVCodeGenerator18writeUniformBufferENSt3__110shared_ptrINS_11SymbolTableEEEE18kUniformBufferName, i64 0, i64 0), i64 14, i1 false) #14
  %83 = getelementptr inbounds i8, i8* %82, i64 14
  store i8 0, i8* %83, align 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %19, i8 0, i64 24, i1 false) #14
  %84 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %84)
  %85 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 184) #14
  %86 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %87 = bitcast i64* %86 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %84, i8* align 8 %87, i64 15, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %82, i8 0, i64 24, i1 false) #14
  %88 = bitcast i8* %85 to i32 (...)***
  %89 = getelementptr inbounds i8, i8* %85, i64 8
  %90 = bitcast i8* %89 to i32*
  store i32 -1, i32* %90, align 8
  %91 = getelementptr inbounds i8, i8* %85, i64 12
  %92 = bitcast i8* %91 to i32*
  store i32 13, i32* %92, align 4
  %93 = getelementptr inbounds i8, i8* %85, i64 16
  %94 = bitcast i8* %93 to i8**
  %95 = getelementptr inbounds i8, i8* %85, i64 24
  %96 = bitcast i8* %95 to i64*
  %97 = getelementptr inbounds i8, i8* %85, i64 32
  %98 = bitcast i8* %97 to i64*
  store i64 0, i64* %98, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %88, align 8
  %99 = getelementptr inbounds i8, i8* %85, i64 40
  %100 = bitcast i8* %99 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.41, i64 0, i64 0), i8** %100, align 8
  %101 = getelementptr inbounds i8, i8* %85, i64 48
  %102 = bitcast i8* %101 to i64*
  store i64 7886488383125345631, i64* %102, align 8
  %103 = getelementptr inbounds i8, i8* %85, i64 56
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %103, i8* nonnull align 8 %84, i64 15, i1 false) #14
  %104 = getelementptr inbounds i8, i8* %85, i64 71
  store i8 14, i8* %104, align 1
  %105 = getelementptr inbounds i8, i8* %85, i64 72
  %106 = bitcast i8* %105 to i32*
  store i32 9, i32* %106, align 8
  %107 = getelementptr inbounds i8, i8* %85, i64 76
  %108 = bitcast i8* %107 to i32*
  store i32 4, i32* %108, align 4
  %109 = getelementptr inbounds i8, i8* %85, i64 80
  %110 = bitcast i8* %109 to i32*
  store i32 -1, i32* %110, align 8
  %111 = getelementptr inbounds i8, i8* %85, i64 88
  %112 = getelementptr inbounds i8, i8* %85, i64 120
  %113 = bitcast i8* %112 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %111, i8 0, i64 32, i1 false) #14
  store i32 -1, i32* %113, align 8
  %114 = getelementptr inbounds i8, i8* %85, i64 124
  %115 = bitcast i8* %114 to i32*
  store i32 -1, i32* %115, align 4
  %116 = getelementptr inbounds i8, i8* %85, i64 128
  %117 = bitcast i8* %116 to <2 x i64>*
  store <2 x i64> %79, <2 x i64>* %117, align 8
  %118 = getelementptr inbounds i8, i8* %85, i64 144
  %119 = bitcast i8* %118 to i64*
  store i64 %78, i64* %119, align 8
  %120 = getelementptr inbounds i8, i8* %85, i64 152
  %121 = getelementptr inbounds i8, i8* %85, i64 168
  call void @llvm.memset.p0i8.i64(i8* align 8 %120, i8 0, i64 9, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* align 8 %121, i8 0, i64 16, i1 false) #14
  store i8* %101, i8** %94, align 8
  store i64 14, i64* %96, align 8
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %84)
  %122 = ptrtoint i8* %85 to i64
  %123 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 36, i32 2
  %124 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %123, i64 0, i32 0, i32 0, i32 0
  %125 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %124, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.10"* %123 to i64*
  store i64 %122, i64* %126, align 8
  %127 = icmp eq %"class.SkSL::Type"* %125, null
  br i1 %127, label %133, label %128

128:                                              ; preds = %76
  %129 = bitcast %"class.SkSL::Type"* %125 to void (%"class.SkSL::Type"*)***
  %130 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %129, align 8
  %131 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %130, i64 1
  %132 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %131, align 8
  call void %132(%"class.SkSL::Type"* nonnull %125) #14
  br label %133

133:                                              ; preds = %76, %128
  %134 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 1
  %135 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %134, align 8
  %136 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %135, i64 0, i32 1, i32 0, i32 0, i32 0
  %137 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %136, align 8
  %138 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %137, i64 0, i32 1, i32 9
  %139 = load i32, i32* %138, align 8
  %140 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %137, i64 0, i32 1, i32 8
  %141 = load i32, i32* %140, align 4
  %142 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %135, i64 0, i32 8, i32 0, i32 0, i32 0
  %143 = load %"class.SkSL::ModifiersPool"*, %"class.SkSL::ModifiersPool"** %142, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -1, i64 20, i1 false)
  %144 = bitcast %"struct.SkSL::Modifiers"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %144) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %144, i8 -86, i64 80, i1 false)
  %145 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %12, i64 0, i32 0, i32 0
  store i32 0, i32* %145, align 8
  %146 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %12, i64 0, i32 0, i32 1
  %147 = bitcast i32* %146 to i64*
  store i64 -1, i64* %147, align 4
  %148 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %12, i64 0, i32 0, i32 3
  store i32 %139, i32* %148, align 4
  %149 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %12, i64 0, i32 0, i32 4
  store i32 -1, i32* %149, align 8
  %150 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %12, i64 0, i32 0, i32 5
  store i32 %141, i32* %150, align 4
  %151 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %12, i64 0, i32 0, i32 6
  %152 = bitcast i32* %151 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %152, i8* nonnull align 8 %16, i64 24, i1 false)
  %153 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %12, i64 0, i32 0, i32 12, i32 0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19, i64 0, i64 0), i8** %153, align 8
  %154 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %12, i64 0, i32 0, i32 12, i32 1
  store i64 0, i64* %154, align 8
  %155 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %12, i64 0, i32 0, i32 13
  store i32 0, i32* %155, align 8
  %156 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %12, i64 0, i32 0, i32 14
  %157 = bitcast [4 x i8]* %156 to i32*
  store i32 -1431655766, i32* %157, align 4
  %158 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %12, i64 0, i32 1
  store i32 8, i32* %158, align 8
  %159 = getelementptr inbounds %"class.SkSL::ModifiersPool", %"class.SkSL::ModifiersPool"* %143, i64 0, i32 0, i32 0
  %160 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %159, %"struct.SkSL::Modifiers"* nonnull dereferenceable(80) %12, %"struct.SkSL::Modifiers"* nonnull dereferenceable(80) %12) #14
  %161 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %160, 0
  %162 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %161, i64 2
  %163 = ptrtoint %"struct.std::__1::__hash_node_base"* %162 to i64
  %164 = load i64, i64* %126, align 8
  %165 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 64) #14
  %166 = bitcast i8* %165 to i32 (...)***
  %167 = getelementptr inbounds i8, i8* %165, i64 8
  %168 = bitcast i8* %167 to i32*
  store i32 -1, i32* %168, align 8
  %169 = getelementptr inbounds i8, i8* %165, i64 12
  %170 = bitcast i8* %169 to i32*
  store i32 15, i32* %170, align 4
  %171 = getelementptr inbounds i8, i8* %165, i64 16
  %172 = bitcast i8* %171 to i8**
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @_ZZN4SkSL18SPIRVCodeGenerator18writeUniformBufferENSt3__110shared_ptrINS_11SymbolTableEEEE18kUniformBufferName, i64 0, i64 0), i8** %172, align 8
  %173 = getelementptr inbounds i8, i8* %165, i64 24
  %174 = bitcast i8* %173 to i64*
  store i64 14, i64* %174, align 8
  %175 = getelementptr inbounds i8, i8* %165, i64 32
  %176 = bitcast i8* %175 to i64*
  store i64 %164, i64* %176, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL8VariableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %166, align 8
  %177 = getelementptr inbounds i8, i8* %165, i64 40
  %178 = bitcast i8* %177 to %"class.SkSL::VarDeclaration"**
  store %"class.SkSL::VarDeclaration"* null, %"class.SkSL::VarDeclaration"** %178, align 8
  %179 = getelementptr inbounds i8, i8* %165, i64 48
  %180 = bitcast i8* %179 to i64*
  store i64 %163, i64* %180, align 8
  %181 = getelementptr inbounds i8, i8* %165, i64 56
  store i8 0, i8* %181, align 8
  %182 = getelementptr inbounds i8, i8* %165, i64 57
  store i8 0, i8* %182, align 1
  %183 = ptrtoint i8* %165 to i64
  %184 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 36, i32 1
  %185 = getelementptr inbounds %"class.std::__1::unique_ptr.345", %"class.std::__1::unique_ptr.345"* %184, i64 0, i32 0, i32 0, i32 0
  %186 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %185, align 8
  %187 = bitcast %"class.std::__1::unique_ptr.345"* %184 to i64*
  store i64 %183, i64* %187, align 8
  %188 = icmp eq %"class.SkSL::Variable"* %186, null
  br i1 %188, label %195, label %189

189:                                              ; preds = %133
  %190 = bitcast %"class.SkSL::Variable"* %186 to void (%"class.SkSL::Variable"*)***
  %191 = load void (%"class.SkSL::Variable"*)**, void (%"class.SkSL::Variable"*)*** %190, align 8
  %192 = getelementptr inbounds void (%"class.SkSL::Variable"*)*, void (%"class.SkSL::Variable"*)** %191, i64 1
  %193 = load void (%"class.SkSL::Variable"*)*, void (%"class.SkSL::Variable"*)** %192, align 8
  call void %193(%"class.SkSL::Variable"* nonnull %186) #14
  %194 = load i64, i64* %187, align 8
  br label %195

195:                                              ; preds = %189, %133
  %196 = phi i64 [ %194, %189 ], [ %183, %133 ]
  %197 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %197) #14
  store i32 -1, i32* %13, align 4
  %198 = bitcast %"class.SkSL::Variable"** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %198) #14
  %199 = bitcast %"class.SkSL::Variable"** %14 to i64*
  store i64 %196, i64* %199, align 8
  %200 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %200) #14
  store i32 0, i32* %15, align 4
  %201 = call %"class.SkSL::InterfaceBlock"* @_ZNSt3__111make_uniqueIN4SkSL14InterfaceBlockEJiPNS1_8VariableERA15_KcS7_iRNS_10shared_ptrINS1_11SymbolTableEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(i32* nonnull dereferenceable(4) %13, %"class.SkSL::Variable"** nonnull dereferenceable(8) %14, [15 x i8]* nonnull dereferenceable(15) @_ZZN4SkSL18SPIRVCodeGenerator18writeUniformBufferENSt3__110shared_ptrINS_11SymbolTableEEEE18kUniformBufferName, [15 x i8]* nonnull dereferenceable(15) @_ZZN4SkSL18SPIRVCodeGenerator18writeUniformBufferENSt3__110shared_ptrINS_11SymbolTableEEEE18kUniformBufferName, i32* nonnull dereferenceable(4) %15, %"class.std::__1::shared_ptr.49"* nonnull dereferenceable(16) %7)
  %202 = ptrtoint %"class.SkSL::InterfaceBlock"* %201 to i64
  %203 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 36, i32 0
  %204 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %203, i64 0, i32 0, i32 0, i32 0
  %205 = load %"class.SkSL::InterfaceBlock"*, %"class.SkSL::InterfaceBlock"** %204, align 8
  %206 = bitcast %"class.std::__1::unique_ptr.333"* %203 to i64*
  store i64 %202, i64* %206, align 8
  %207 = icmp eq %"class.SkSL::InterfaceBlock"* %205, null
  br i1 %207, label %214, label %208

208:                                              ; preds = %195
  %209 = bitcast %"class.SkSL::InterfaceBlock"* %205 to void (%"class.SkSL::InterfaceBlock"*)***
  %210 = load void (%"class.SkSL::InterfaceBlock"*)**, void (%"class.SkSL::InterfaceBlock"*)*** %209, align 8
  %211 = getelementptr inbounds void (%"class.SkSL::InterfaceBlock"*)*, void (%"class.SkSL::InterfaceBlock"*)** %210, i64 1
  %212 = load void (%"class.SkSL::InterfaceBlock"*)*, void (%"class.SkSL::InterfaceBlock"*)** %211, align 8
  call void %212(%"class.SkSL::InterfaceBlock"* nonnull %205) #14
  %213 = load %"class.SkSL::InterfaceBlock"*, %"class.SkSL::InterfaceBlock"** %204, align 8
  br label %214

214:                                              ; preds = %208, %195
  %215 = phi %"class.SkSL::InterfaceBlock"* [ %213, %208 ], [ %201, %195 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %200) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %198) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %197) #14
  %216 = call i32 @_ZN4SkSL18SPIRVCodeGenerator19writeInterfaceBlockERKNS_14InterfaceBlockEb(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::InterfaceBlock"* dereferenceable(96) %215, i1 zeroext true)
  %217 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 39
  store i32 %216, i32* %217, align 8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %144) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16)
  %218 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %20, align 16
  %219 = icmp eq %"struct.SkSL::Type::Field"* %218, null
  br i1 %219, label %223, label %220

220:                                              ; preds = %214
  %221 = ptrtoint %"struct.SkSL::Type::Field"* %218 to i64
  store i64 %221, i64* %77, align 8
  %222 = bitcast %"struct.SkSL::Type::Field"* %218 to i8*
  call void @_ZdlPv(i8* %222) #16
  br label %223

223:                                              ; preds = %214, %220
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #14
  %224 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %18, align 8
  %225 = icmp eq %"class.std::__1::__shared_weak_count"* %224, null
  br i1 %225, label %236, label %226

226:                                              ; preds = %223
  %227 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %224, i64 0, i32 0, i32 1
  %228 = atomicrmw add i64* %227, i64 -1 acq_rel
  %229 = icmp eq i64 %228, 0
  br i1 %229, label %230, label %236

230:                                              ; preds = %226
  %231 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %224, i64 0, i32 0
  %232 = bitcast %"class.std::__1::__shared_weak_count"* %224 to void (%"class.std::__1::__shared_count"*)***
  %233 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %232, align 8
  %234 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %233, i64 2
  %235 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %234, align 8
  call void %235(%"class.std::__1::__shared_count"* %231) #14
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %224) #14
  br label %236

236:                                              ; preds = %223, %226, %230
  ret void

237:                                              ; preds = %328, %65
  %238 = phi %"struct.SkSL::Type::Field"* [ %46, %65 ], [ %334, %328 ]
  %239 = phi i64 [ %47, %65 ], [ %333, %328 ]
  %240 = phi %"struct.SkSL::Type::Field"* [ %48, %65 ], [ %332, %328 ]
  %241 = phi %"struct.SkSL::Type::Field"* [ %46, %65 ], [ %331, %328 ]
  %242 = phi i64 [ %49, %65 ], [ %330, %328 ]
  %243 = phi i64 [ %49, %65 ], [ %329, %328 ]
  %244 = phi %"class.SkSL::VarDeclaration"** [ %58, %65 ], [ %326, %328 ]
  %245 = load %"class.SkSL::VarDeclaration"*, %"class.SkSL::VarDeclaration"** %244, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #14
  %246 = getelementptr inbounds %"class.SkSL::VarDeclaration", %"class.SkSL::VarDeclaration"* %245, i64 0, i32 1
  %247 = bitcast %"class.SkSL::Variable"** %246 to i64*
  %248 = load i64, i64* %247, align 8
  store i64 %248, i64* %67, align 8
  %249 = sub i64 %243, %242
  %250 = sdiv exact i64 %249, 104
  %251 = trunc i64 %250 to i32
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #14
  store %"class.SkSL::Variable"** %9, %"class.SkSL::Variable"*** %70, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %71) #14
  %252 = call { %"struct.std::__1::__hash_node_base.194"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.190"* %50, %"class.SkSL::Variable"** nonnull dereferenceable(8) %9, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.703"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %6) #14
  %253 = extractvalue { %"struct.std::__1::__hash_node_base.194"*, i8 } %252, 0
  %254 = getelementptr inbounds %"struct.std::__1::__hash_node_base.194", %"struct.std::__1::__hash_node_base.194"* %253, i64 3
  %255 = bitcast %"struct.std::__1::__hash_node_base.194"* %254 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %71) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #14
  store i32 %251, i32* %255, align 4
  %256 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %9, align 8
  %257 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %256, i64 0, i32 2
  %258 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %257, align 8
  %259 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %256, i64 0, i32 0, i32 1, i32 0
  %260 = bitcast i8** %259 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %256, i64 0, i32 0, i32 1, i32 1
  %263 = load i64, i64* %262, align 8
  %264 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %256, i64 0, i32 0, i32 2
  %265 = bitcast %"class.SkSL::Type"** %264 to i64*
  %266 = load i64, i64* %265, align 8
  %267 = icmp ult %"struct.SkSL::Type::Field"* %241, %240
  br i1 %267, label %268, label %278

268:                                              ; preds = %237
  %269 = bitcast %"struct.SkSL::Modifiers"* %258 to i8*
  %270 = bitcast %"struct.SkSL::Type::Field"* %241 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %270, i8* align 8 %269, i64 80, i1 false)
  %271 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %241, i64 0, i32 1, i32 0
  %272 = bitcast i8** %271 to i64*
  store i64 %261, i64* %272, align 8
  %273 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %241, i64 0, i32 1, i32 1
  store i64 %263, i64* %273, align 8
  %274 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %241, i64 0, i32 2
  %275 = bitcast %"class.SkSL::Type"** %274 to i64*
  store i64 %266, i64* %275, align 8
  %276 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %241, i64 1
  %277 = ptrtoint %"struct.SkSL::Type::Field"* %276 to i64
  store i64 %277, i64* %68, align 8
  br label %325

278:                                              ; preds = %237
  %279 = add nsw i64 %250, 1
  %280 = icmp ugt i64 %279, 177372539170284150
  br i1 %280, label %281, label %283

281:                                              ; preds = %278
  %282 = bitcast %"class.std::__1::vector.19"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %282) #15
  unreachable

283:                                              ; preds = %278
  %284 = sub i64 %239, %242
  %285 = sdiv exact i64 %284, 104
  %286 = icmp ult i64 %285, 88686269585142075
  br i1 %286, label %287, label %292

287:                                              ; preds = %283
  %288 = shl nsw i64 %285, 1
  %289 = icmp ult i64 %288, %279
  %290 = select i1 %289, i64 %279, i64 %288
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %297, label %292

292:                                              ; preds = %287, %283
  %293 = phi i64 [ %290, %287 ], [ 177372539170284150, %283 ]
  %294 = mul i64 %293, 104
  %295 = call i8* @_Znwm(i64 %294) #16
  %296 = bitcast i8* %295 to %"struct.SkSL::Type::Field"*
  br label %297

297:                                              ; preds = %292, %287
  %298 = phi i64 [ %293, %292 ], [ 0, %287 ]
  %299 = phi %"struct.SkSL::Type::Field"* [ %296, %292 ], [ null, %287 ]
  %300 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %299, i64 %250
  %301 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %299, i64 %298
  %302 = ptrtoint %"struct.SkSL::Type::Field"* %301 to i64
  %303 = bitcast %"struct.SkSL::Modifiers"* %258 to i8*
  %304 = bitcast %"struct.SkSL::Type::Field"* %300 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %304, i8* align 8 %303, i64 80, i1 false)
  %305 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %299, i64 %250, i32 1, i32 0
  %306 = bitcast i8** %305 to i64*
  store i64 %261, i64* %306, align 8
  %307 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %299, i64 %250, i32 1, i32 1
  store i64 %263, i64* %307, align 8
  %308 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %299, i64 %250, i32 2
  %309 = bitcast %"class.SkSL::Type"** %308 to i64*
  store i64 %266, i64* %309, align 8
  %310 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %300, i64 1
  %311 = ptrtoint %"struct.SkSL::Type::Field"* %310 to i64
  %312 = ptrtoint %"struct.SkSL::Type::Field"* %238 to i64
  %313 = sub i64 %243, %312
  %314 = sdiv exact i64 %313, -104
  %315 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %300, i64 %314
  %316 = ptrtoint %"struct.SkSL::Type::Field"* %315 to i64
  %317 = icmp sgt i64 %313, 0
  br i1 %317, label %318, label %321

318:                                              ; preds = %297
  %319 = bitcast %"struct.SkSL::Type::Field"* %315 to i8*
  %320 = bitcast %"struct.SkSL::Type::Field"* %238 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %319, i8* align 8 %320, i64 %313, i1 false) #14
  br label %321

321:                                              ; preds = %318, %297
  store i64 %316, i64* %32, align 16
  store i64 %311, i64* %68, align 8
  store i64 %302, i64* %31, align 16
  %322 = icmp eq %"struct.SkSL::Type::Field"* %238, null
  br i1 %322, label %325, label %323

323:                                              ; preds = %321
  %324 = bitcast %"struct.SkSL::Type::Field"* %238 to i8*
  call void @_ZdlPv(i8* %324) #16
  br label %325

325:                                              ; preds = %323, %321, %268
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #14
  %326 = getelementptr inbounds %"class.SkSL::VarDeclaration"*, %"class.SkSL::VarDeclaration"** %244, i64 1
  %327 = icmp eq %"class.SkSL::VarDeclaration"** %326, %59
  br i1 %327, label %72, label %328

328:                                              ; preds = %325
  %329 = load i64, i64* %68, align 8
  %330 = load i64, i64* %32, align 16
  %331 = inttoptr i64 %329 to %"struct.SkSL::Type::Field"*
  %332 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %22, align 16
  %333 = ptrtoint %"struct.SkSL::Type::Field"* %332 to i64
  %334 = inttoptr i64 %330 to %"struct.SkSL::Type::Field"*
  br label %237
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::InterfaceBlock"* @_ZNSt3__111make_uniqueIN4SkSL14InterfaceBlockEJiPNS1_8VariableERA15_KcS7_iRNS_10shared_ptrINS1_11SymbolTableEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(i32* dereferenceable(4), %"class.SkSL::Variable"** dereferenceable(8), [15 x i8]* dereferenceable(15), [15 x i8]* dereferenceable(15), i32* dereferenceable(4), %"class.std::__1::shared_ptr.49"* dereferenceable(16)) local_unnamed_addr #5 comdat {
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 96) #14
  %10 = bitcast i8* %9 to %"class.SkSL::InterfaceBlock"*
  %11 = load i32, i32* %0, align 4
  %12 = bitcast %"class.SkSL::Variable"** %1 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds [15 x i8], [15 x i8]* %2, i64 0, i64 0
  %15 = tail call i64 @strlen(i8* %14) #14
  %16 = icmp ugt i64 %15, -17
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = bitcast %"class.SkSL::String"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %18) #15
  unreachable

19:                                               ; preds = %6
  %20 = icmp ult i64 %15, 23
  br i1 %20, label %29, label %21

21:                                               ; preds = %19
  %22 = add nuw i64 %15, 16
  %23 = and i64 %22, -16
  %24 = tail call i8* @_Znwm(i64 %23) #16
  %25 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %24, i8** %25, align 8
  %26 = or i64 %23, -9223372036854775808
  %27 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %26, i64* %27, align 8
  %28 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %15, i64* %28, align 8
  br label %35

29:                                               ; preds = %19
  %30 = trunc i64 %15 to i8
  %31 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  store i8 %30, i8* %32, align 1
  %33 = bitcast %"class.SkSL::String"* %7 to i8*
  %34 = icmp eq i64 %15, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %29, %21
  %36 = phi i8* [ %24, %21 ], [ %33, %29 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %36, i8* align 1 %14, i64 %15, i1 false) #14
  br label %37

37:                                               ; preds = %29, %35
  %38 = phi i8* [ %33, %29 ], [ %36, %35 ]
  %39 = getelementptr inbounds i8, i8* %38, i64 %15
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds [15 x i8], [15 x i8]* %3, i64 0, i64 0
  %41 = tail call i64 @strlen(i8* %40) #14
  %42 = icmp ugt i64 %41, -17
  br i1 %42, label %43, label %45

43:                                               ; preds = %37
  %44 = bitcast %"class.SkSL::String"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %44) #15
  unreachable

45:                                               ; preds = %37
  %46 = icmp ult i64 %41, 23
  br i1 %46, label %55, label %47

47:                                               ; preds = %45
  %48 = add nuw i64 %41, 16
  %49 = and i64 %48, -16
  %50 = tail call i8* @_Znwm(i64 %49) #16
  %51 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %50, i8** %51, align 8
  %52 = or i64 %49, -9223372036854775808
  %53 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %52, i64* %53, align 8
  %54 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %41, i64* %54, align 8
  br label %61

55:                                               ; preds = %45
  %56 = trunc i64 %41 to i8
  %57 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  store i8 %56, i8* %58, align 1
  %59 = bitcast %"class.SkSL::String"* %8 to i8*
  %60 = icmp eq i64 %41, 0
  br i1 %60, label %63, label %61

61:                                               ; preds = %55, %47
  %62 = phi i8* [ %50, %47 ], [ %59, %55 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %62, i8* align 1 %40, i64 %41, i1 false) #14
  br label %63

63:                                               ; preds = %55, %61
  %64 = phi i8* [ %59, %55 ], [ %62, %61 ]
  %65 = getelementptr inbounds i8, i8* %64, i64 %41
  store i8 0, i8* %65, align 1
  %66 = load i32, i32* %4, align 4
  %67 = bitcast %"class.std::__1::shared_ptr.49"* %5 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds %"class.std::__1::shared_ptr.49", %"class.std::__1::shared_ptr.49"* %5, i64 0, i32 1
  %70 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %69, align 8
  %71 = icmp eq %"class.std::__1::__shared_weak_count"* %70, null
  br i1 %71, label %75, label %72

72:                                               ; preds = %63
  %73 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %70, i64 0, i32 0, i32 1
  %74 = atomicrmw add i64* %73, i64 1 monotonic
  br label %75

75:                                               ; preds = %63, %72
  %76 = ptrtoint %"class.std::__1::__shared_weak_count"* %70 to i64
  %77 = getelementptr inbounds i8, i8* %9, i64 8
  %78 = bitcast i8* %77 to i32*
  store i32 %11, i32* %78, align 8
  %79 = getelementptr inbounds i8, i8* %9, i64 12
  %80 = bitcast i8* %79 to i32*
  store i32 5, i32* %80, align 4
  %81 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL14InterfaceBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %81, align 8
  %82 = getelementptr inbounds i8, i8* %9, i64 16
  %83 = bitcast i8* %82 to i64*
  store i64 %13, i64* %83, align 8
  %84 = getelementptr inbounds i8, i8* %9, i64 24
  %85 = bitcast %"class.SkSL::String"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* nonnull align 8 %85, i64 24, i1 false) #14
  %86 = getelementptr inbounds i8, i8* %9, i64 48
  %87 = bitcast %"class.SkSL::String"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %86, i8* nonnull align 8 %87, i64 24, i1 false) #14
  %88 = getelementptr inbounds i8, i8* %9, i64 72
  %89 = bitcast i8* %88 to i32*
  store i32 %66, i32* %89, align 8
  %90 = getelementptr inbounds i8, i8* %9, i64 80
  %91 = bitcast i8* %90 to i64*
  store i64 %68, i64* %91, align 8
  %92 = getelementptr inbounds i8, i8* %9, i64 88
  %93 = bitcast i8* %92 to i64*
  store i64 %76, i64* %93, align 8
  ret %"class.SkSL::InterfaceBlock"* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18SPIRVCodeGenerator17writeInstructionsERKNS_7ProgramERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"*, %"struct.SkSL::Program"* dereferenceable(128), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::tuple.691", align 8
  %5 = alloca %"class.std::__1::tuple.633", align 1
  %6 = alloca <2 x i64>, align 16
  %7 = bitcast <2 x i64>* %6 to %"struct.SkSL::StringFragment"*
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %"class.std::__1::tuple.752", align 8
  %16 = alloca %"class.std::__1::tuple.633", align 1
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca %"class.std::__1::tuple.752", align 8
  %21 = alloca %"class.std::__1::tuple.633", align 1
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca %"class.std::__1::tuple.691", align 8
  %26 = alloca %"class.std::__1::tuple.633", align 1
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca %"class.SkSL::StringStream", align 16
  %30 = alloca %"class.SkSL::FunctionDeclaration"*, align 8
  %31 = alloca %"class.SkSL::FunctionDeclaration"*, align 8
  %32 = alloca %"class.std::__1::set", align 8
  %33 = alloca %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter", align 8
  %34 = alloca %"class.SkSL::FunctionDeclaration"*, align 8
  %35 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %36 = load i32, i32* %35, align 8
  %37 = add i32 %36, 1
  store i32 %37, i32* %35, align 8
  %38 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 6
  store i32 %36, i32* %38, align 4
  %39 = bitcast %"class.SkSL::StringStream"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %39) #14
  %40 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %29, i64 0, i32 0, i32 0
  %41 = bitcast %"class.SkSL::StringStream"* %29 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV22SkDynamicMemoryWStream, i64 0, inrange i32 0, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %41, align 16
  %42 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %29, i64 0, i32 1, i32 1
  %43 = bitcast %"struct.SkDynamicMemoryWStream::Block"** %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 48, i1 false) #14
  %44 = bitcast %"class.SkSL::FunctionDeclaration"** %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #14
  store %"class.SkSL::FunctionDeclaration"* null, %"class.SkSL::FunctionDeclaration"** %30, align 8
  %45 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %1, i64 0, i32 6
  %46 = bitcast %"class.std::__1::vector.62"* %45 to i64*
  %47 = load i64, i64* %46, align 8, !noalias !59
  %48 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %1, i64 0, i32 6, i32 0, i32 1
  %49 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %1, i64 0, i32 7
  %50 = bitcast %"class.std::__1::vector.75"* %49 to i64*
  %51 = load i64, i64* %50, align 8, !noalias !59
  %52 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %1, i64 0, i32 7, i32 0, i32 1
  %53 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %52, align 8, !noalias !59
  %54 = load %"class.std::__1::unique_ptr.64"*, %"class.std::__1::unique_ptr.64"** %48, align 8, !noalias !62
  %55 = bitcast %"class.SkSL::FunctionDeclaration"** %31 to i8*
  %56 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 8, i32 0
  %57 = bitcast %"class.std::__1::tuple.691"* %25 to i8*
  %58 = getelementptr inbounds %"class.std::__1::tuple.691", %"class.std::__1::tuple.691"* %25, i64 0, i32 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %26, i64 0, i32 0
  %60 = inttoptr i64 %47 to %"class.std::__1::unique_ptr.64"*
  %61 = icmp eq %"class.std::__1::unique_ptr.64"* %54, %60
  %62 = inttoptr i64 %51 to %"class.SkSL::ProgramElement"**
  %63 = icmp eq %"class.SkSL::ProgramElement"** %53, %62
  %64 = and i1 %61, %63
  br i1 %64, label %65, label %68

65:                                               ; preds = %94, %3
  %66 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %30, align 8
  %67 = icmp eq %"class.SkSL::FunctionDeclaration"* %66, null
  br i1 %67, label %106, label %109

68:                                               ; preds = %3, %94
  %69 = phi i1 [ %104, %94 ], [ %63, %3 ]
  %70 = phi %"class.SkSL::ProgramElement"** [ %103, %94 ], [ %62, %3 ]
  %71 = phi %"class.std::__1::unique_ptr.64"* [ %101, %94 ], [ %60, %3 ]
  %72 = phi i64 [ %100, %94 ], [ %51, %3 ]
  %73 = phi i64 [ %99, %94 ], [ %47, %3 ]
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64"* %71, i64 0, i32 0, i32 0, i32 0
  %75 = select i1 %69, %"class.SkSL::ProgramElement"** %74, %"class.SkSL::ProgramElement"** %70
  %76 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %75, align 8
  %77 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %76, i64 0, i32 0, i32 2
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, 2
  br i1 %79, label %80, label %94

80:                                               ; preds = %68
  %81 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %76, i64 1
  %82 = bitcast %"class.SkSL::ProgramElement"* %81 to %"class.SkSL::FunctionDeclaration"**
  %83 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %82, align 8
  %84 = load i32, i32* %35, align 8
  %85 = add i32 %84, 1
  store i32 %85, i32* %35, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #14
  store %"class.SkSL::FunctionDeclaration"* %83, %"class.SkSL::FunctionDeclaration"** %31, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #14
  store %"class.SkSL::FunctionDeclaration"** %31, %"class.SkSL::FunctionDeclaration"*** %58, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %59) #14
  %86 = call { %"struct.std::__1::__hash_node_base.138"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.134"* %56, %"class.SkSL::FunctionDeclaration"** nonnull dereferenceable(8) %31, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.691"* nonnull dereferenceable(8) %25, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %26) #14
  %87 = extractvalue { %"struct.std::__1::__hash_node_base.138"*, i8 } %86, 0
  %88 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %87, i64 3
  %89 = bitcast %"struct.std::__1::__hash_node_base.138"* %88 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %59) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #14
  store i32 %84, i32* %89, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #14
  %90 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %83, i64 0, i32 6
  %91 = load i8, i8* %90, align 1, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %94, label %93

93:                                               ; preds = %80
  store %"class.SkSL::FunctionDeclaration"* %83, %"class.SkSL::FunctionDeclaration"** %30, align 8
  br label %94

94:                                               ; preds = %80, %93, %68
  %95 = getelementptr inbounds %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64"* %71, i64 1
  %96 = ptrtoint %"class.std::__1::unique_ptr.64"* %95 to i64
  %97 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %70, i64 1
  %98 = ptrtoint %"class.SkSL::ProgramElement"** %97 to i64
  %99 = select i1 %69, i64 %96, i64 %73
  %100 = select i1 %69, i64 %72, i64 %98
  %101 = inttoptr i64 %99 to %"class.std::__1::unique_ptr.64"*
  %102 = icmp eq %"class.std::__1::unique_ptr.64"* %54, %101
  %103 = inttoptr i64 %100 to %"class.SkSL::ProgramElement"**
  %104 = icmp eq %"class.SkSL::ProgramElement"** %53, %103
  %105 = and i1 %102, %104
  br i1 %105, label %65, label %68

106:                                              ; preds = %65
  %107 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 2
  %108 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %107, align 8
  call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %108, i32 0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.33, i64 0, i64 0))
  br label %778

109:                                              ; preds = %65
  %110 = bitcast %"class.std::__1::set"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %110) #14
  %111 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %32, i64 0, i32 0, i32 0
  %112 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %32, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %113 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %32, i64 0, i32 0, i32 2, i32 0, i32 0
  %114 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %32, i64 0, i32 0, i32 1, i32 0, i32 0
  %115 = bitcast %"class.std::__1::__tree_node_base"** %112 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %115, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %114, %"class.std::__1::__tree_end_node"** %111, align 8
  %116 = load i64, i64* %46, align 8, !noalias !65
  %117 = load i64, i64* %50, align 8, !noalias !65
  %118 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %52, align 8, !noalias !65
  %119 = load %"class.std::__1::unique_ptr.64"*, %"class.std::__1::unique_ptr.64"** %48, align 8, !noalias !68
  %120 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 1
  %121 = bitcast %"class.std::__1::__tree_end_node"* %114 to %"class.std::__1::__tree_node"**
  %122 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %114, i64 0, i32 0
  %123 = bitcast %"class.std::__1::set"* %32 to i64*
  %124 = inttoptr i64 %116 to %"class.std::__1::unique_ptr.64"*
  %125 = icmp eq %"class.std::__1::unique_ptr.64"* %119, %124
  %126 = inttoptr i64 %117 to %"class.SkSL::ProgramElement"**
  %127 = icmp eq %"class.SkSL::ProgramElement"** %118, %126
  %128 = and i1 %125, %127
  br i1 %128, label %129, label %140

129:                                              ; preds = %239, %109
  %130 = load i64, i64* %46, align 8, !noalias !71
  %131 = load i64, i64* %50, align 8, !noalias !71
  %132 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %52, align 8, !noalias !71
  %133 = load %"class.std::__1::unique_ptr.64"*, %"class.std::__1::unique_ptr.64"** %48, align 8, !noalias !74
  %134 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %135 = inttoptr i64 %130 to %"class.std::__1::unique_ptr.64"*
  %136 = icmp eq %"class.std::__1::unique_ptr.64"* %133, %135
  %137 = inttoptr i64 %131 to %"class.SkSL::ProgramElement"**
  %138 = icmp eq %"class.SkSL::ProgramElement"** %132, %137
  %139 = and i1 %136, %138
  br i1 %139, label %251, label %257

140:                                              ; preds = %109, %239
  %141 = phi i1 [ %249, %239 ], [ %127, %109 ]
  %142 = phi %"class.SkSL::ProgramElement"** [ %248, %239 ], [ %126, %109 ]
  %143 = phi %"class.std::__1::unique_ptr.64"* [ %246, %239 ], [ %124, %109 ]
  %144 = phi i64 [ %245, %239 ], [ %117, %109 ]
  %145 = phi i64 [ %244, %239 ], [ %116, %109 ]
  %146 = getelementptr inbounds %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64"* %143, i64 0, i32 0, i32 0, i32 0
  %147 = select i1 %141, %"class.SkSL::ProgramElement"** %146, %"class.SkSL::ProgramElement"** %142
  %148 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %147, align 8
  %149 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %148, i64 0, i32 0, i32 2
  %150 = load i32, i32* %149, align 4
  %151 = icmp eq i32 %150, 5
  br i1 %151, label %152, label %239

152:                                              ; preds = %140
  %153 = bitcast %"class.SkSL::ProgramElement"* %148 to %"class.SkSL::InterfaceBlock"*
  %154 = call i32 @_ZN4SkSL18SPIRVCodeGenerator19writeInterfaceBlockERKNS_14InterfaceBlockEb(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::InterfaceBlock"* dereferenceable(96) %153, i1 zeroext true)
  %155 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %148, i64 1
  %156 = bitcast %"class.SkSL::ProgramElement"* %155 to %"class.SkSL::Variable"**
  %157 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %156, align 8
  %158 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %157, i64 0, i32 2
  %159 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %158, align 8
  %160 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %159, i64 0, i32 1
  %161 = load i32, i32* %160, align 8
  %162 = and i32 %161, 6
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %239, label %164

164:                                              ; preds = %152
  %165 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %159, i64 0, i32 0, i32 6
  %166 = load i32, i32* %165, align 8
  %167 = icmp eq i32 %166, -1
  br i1 %167, label %168, label %239

168:                                              ; preds = %164
  %169 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %120, align 8
  %170 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %169, i64 0, i32 9, i32 0, i32 0, i32 0
  %171 = load %"class.SkSL::ProgramUsage"*, %"class.SkSL::ProgramUsage"** %170, align 8
  %172 = call { i64, i32 } @_ZNK4SkSL12ProgramUsage3getERKNS_8VariableE(%"class.SkSL::ProgramUsage"* %171, %"class.SkSL::Variable"* dereferenceable(64) %157) #14
  %173 = extractvalue { i64, i32 } %172, 0
  %174 = icmp ult i64 %173, 4294967296
  %175 = extractvalue { i64, i32 } %172, 1
  %176 = icmp eq i32 %175, 0
  %177 = and i1 %174, %176
  br i1 %177, label %178, label %184

178:                                              ; preds = %168
  %179 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %158, align 8
  %180 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %179, i64 0, i32 1
  %181 = load i32, i32* %180, align 8
  %182 = and i32 %181, 14
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %239, label %184

184:                                              ; preds = %168, %178
  %185 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %121, align 8
  %186 = icmp eq %"class.std::__1::__tree_node"* %185, null
  br i1 %186, label %213, label %187

187:                                              ; preds = %184, %209
  %188 = phi %"class.std::__1::__tree_node"* [ %212, %209 ], [ %185, %184 ]
  %189 = phi %"class.std::__1::__tree_node_base"** [ %211, %209 ], [ %112, %184 ]
  %190 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %188, i64 0, i32 1
  %191 = load i32, i32* %190, align 4
  %192 = icmp ult i32 %154, %191
  br i1 %192, label %193, label %199

193:                                              ; preds = %187
  %194 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %188, i64 0, i32 0, i32 0, i32 0
  %195 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %194, align 8
  %196 = icmp eq %"class.std::__1::__tree_node_base"* %195, null
  br i1 %196, label %197, label %209

197:                                              ; preds = %193
  %198 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %188, i64 0, i32 0, i32 0
  br label %213

199:                                              ; preds = %187
  %200 = icmp ult i32 %191, %154
  br i1 %200, label %201, label %207

201:                                              ; preds = %199
  %202 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %188, i64 0, i32 0, i32 1
  %203 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %202, align 8
  %204 = icmp eq %"class.std::__1::__tree_node_base"* %203, null
  br i1 %204, label %205, label %209

205:                                              ; preds = %201
  %206 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %188, i64 0, i32 0, i32 0
  br label %213

207:                                              ; preds = %199
  %208 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %188, i64 0, i32 0, i32 0
  br label %213

209:                                              ; preds = %201, %193
  %210 = phi %"class.std::__1::__tree_node_base"* [ %195, %193 ], [ %203, %201 ]
  %211 = phi %"class.std::__1::__tree_node_base"** [ %194, %193 ], [ %202, %201 ]
  %212 = bitcast %"class.std::__1::__tree_node_base"* %210 to %"class.std::__1::__tree_node"*
  br label %187

213:                                              ; preds = %184, %207, %205, %197
  %214 = phi %"class.std::__1::__tree_end_node"* [ %198, %197 ], [ %206, %205 ], [ %208, %207 ], [ %114, %184 ]
  %215 = phi %"class.std::__1::__tree_node_base"** [ %194, %197 ], [ %202, %205 ], [ %189, %207 ], [ %122, %184 ]
  %216 = bitcast %"class.std::__1::__tree_node_base"** %215 to %"class.std::__1::__tree_node"**
  %217 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %216, align 8
  %218 = icmp eq %"class.std::__1::__tree_node"* %217, null
  br i1 %218, label %219, label %239

219:                                              ; preds = %213
  %220 = call i8* @_Znwm(i64 32) #16, !noalias !77
  %221 = getelementptr inbounds i8, i8* %220, i64 28
  %222 = bitcast i8* %221 to i32*
  store i32 %154, i32* %222, align 4, !noalias !77
  %223 = bitcast i8* %220 to %"class.std::__1::__tree_node_base"*
  %224 = getelementptr inbounds i8, i8* %220, i64 16
  %225 = bitcast i8* %224 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %220, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %214, %"class.std::__1::__tree_end_node"** %225, align 8
  %226 = bitcast %"class.std::__1::__tree_node_base"** %215 to i8**
  store i8* %220, i8** %226, align 8
  %227 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %111, align 8
  %228 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %227, i64 0, i32 0
  %229 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %228, align 8
  %230 = icmp eq %"class.std::__1::__tree_node_base"* %229, null
  br i1 %230, label %234, label %231

231:                                              ; preds = %219
  %232 = ptrtoint %"class.std::__1::__tree_node_base"* %229 to i64
  store i64 %232, i64* %123, align 8
  %233 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %215, align 8
  br label %234

234:                                              ; preds = %231, %219
  %235 = phi %"class.std::__1::__tree_node_base"* [ %223, %219 ], [ %233, %231 ]
  %236 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %112, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %236, %"class.std::__1::__tree_node_base"* %235) #14
  %237 = load i64, i64* %113, align 8
  %238 = add i64 %237, 1
  store i64 %238, i64* %113, align 8
  br label %239

239:                                              ; preds = %234, %213, %164, %178, %152, %140
  %240 = getelementptr inbounds %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64"* %143, i64 1
  %241 = ptrtoint %"class.std::__1::unique_ptr.64"* %240 to i64
  %242 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %142, i64 1
  %243 = ptrtoint %"class.SkSL::ProgramElement"** %242 to i64
  %244 = select i1 %141, i64 %241, i64 %145
  %245 = select i1 %141, i64 %144, i64 %243
  %246 = inttoptr i64 %244 to %"class.std::__1::unique_ptr.64"*
  %247 = icmp eq %"class.std::__1::unique_ptr.64"* %119, %246
  %248 = inttoptr i64 %245 to %"class.SkSL::ProgramElement"**
  %249 = icmp eq %"class.SkSL::ProgramElement"** %118, %248
  %250 = and i1 %247, %249
  br i1 %250, label %129, label %140

251:                                              ; preds = %276, %129
  %252 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 37, i32 0, i32 0
  %253 = load %"class.SkSL::VarDeclaration"**, %"class.SkSL::VarDeclaration"*** %252, align 8
  %254 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 37, i32 0, i32 1
  %255 = load %"class.SkSL::VarDeclaration"**, %"class.SkSL::VarDeclaration"*** %254, align 8
  %256 = icmp eq %"class.SkSL::VarDeclaration"** %253, %255
  br i1 %256, label %324, label %288

257:                                              ; preds = %129, %276
  %258 = phi i1 [ %286, %276 ], [ %138, %129 ]
  %259 = phi %"class.SkSL::ProgramElement"** [ %285, %276 ], [ %137, %129 ]
  %260 = phi %"class.std::__1::unique_ptr.64"* [ %283, %276 ], [ %135, %129 ]
  %261 = phi i64 [ %282, %276 ], [ %131, %129 ]
  %262 = phi i64 [ %281, %276 ], [ %130, %129 ]
  %263 = getelementptr inbounds %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64"* %260, i64 0, i32 0, i32 0, i32 0
  %264 = select i1 %258, %"class.SkSL::ProgramElement"** %263, %"class.SkSL::ProgramElement"** %259
  %265 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %264, align 8
  %266 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %265, i64 0, i32 0, i32 2
  %267 = load i32, i32* %266, align 4
  %268 = icmp eq i32 %267, 4
  br i1 %268, label %269, label %276

269:                                              ; preds = %257
  %270 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %134, align 8
  %271 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %270, i64 0, i32 0
  %272 = load i8, i8* %271, align 8
  %273 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %265, i64 1
  %274 = bitcast %"class.SkSL::ProgramElement"* %273 to %"class.SkSL::VarDeclaration"**
  %275 = load %"class.SkSL::VarDeclaration"*, %"class.SkSL::VarDeclaration"** %274, align 8
  call void @_ZN4SkSL18SPIRVCodeGenerator14writeGlobalVarENS_11ProgramKindERKNS_14VarDeclarationE(%"class.SkSL::SPIRVCodeGenerator"* %0, i8 signext %272, %"class.SkSL::VarDeclaration"* dereferenceable(48) %275)
  br label %276

276:                                              ; preds = %269, %257
  %277 = getelementptr inbounds %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64"* %260, i64 1
  %278 = ptrtoint %"class.std::__1::unique_ptr.64"* %277 to i64
  %279 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %259, i64 1
  %280 = ptrtoint %"class.SkSL::ProgramElement"** %279 to i64
  %281 = select i1 %258, i64 %278, i64 %262
  %282 = select i1 %258, i64 %261, i64 %280
  %283 = inttoptr i64 %281 to %"class.std::__1::unique_ptr.64"*
  %284 = icmp eq %"class.std::__1::unique_ptr.64"* %133, %283
  %285 = inttoptr i64 %282 to %"class.SkSL::ProgramElement"**
  %286 = icmp eq %"class.SkSL::ProgramElement"** %132, %285
  %287 = and i1 %284, %286
  br i1 %287, label %251, label %257

288:                                              ; preds = %251
  %289 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %30, align 8
  %290 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %289, i64 0, i32 1
  %291 = load %"class.SkSL::FunctionDefinition"*, %"class.SkSL::FunctionDefinition"** %290, align 8
  %292 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %291, i64 0, i32 3, i32 0, i32 0, i32 0
  %293 = bitcast %"class.SkSL::Statement"** %292 to %"class.SkSL::Block"**
  %294 = load %"class.SkSL::Block"*, %"class.SkSL::Block"** %293, align 8
  %295 = getelementptr inbounds %"class.SkSL::Block", %"class.SkSL::Block"* %294, i64 0, i32 2, i32 0
  %296 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %295, align 8
  %297 = getelementptr inbounds %"class.SkSL::Block", %"class.SkSL::Block"* %294, i64 0, i32 2, i32 1
  %298 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %297, align 8
  %299 = icmp eq %"class.std::__1::__shared_weak_count"* %298, null
  br i1 %299, label %303, label %300

300:                                              ; preds = %288
  %301 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %298, i64 0, i32 0, i32 1
  %302 = atomicrmw add i64* %301, i64 1 monotonic
  br label %303

303:                                              ; preds = %300, %288
  %304 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %296, i64 0, i32 0, i32 0
  %305 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %304, align 8
  %306 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %296, i64 0, i32 0, i32 1
  %307 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %306, align 8
  %308 = icmp eq %"class.std::__1::__shared_weak_count"* %307, null
  br i1 %308, label %312, label %309

309:                                              ; preds = %303
  %310 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %307, i64 0, i32 0, i32 1
  %311 = atomicrmw add i64* %310, i64 1 monotonic
  br label %312

312:                                              ; preds = %309, %303
  br i1 %299, label %323, label %313

313:                                              ; preds = %312
  %314 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %298, i64 0, i32 0, i32 1
  %315 = atomicrmw add i64* %314, i64 -1 acq_rel
  %316 = icmp eq i64 %315, 0
  br i1 %316, label %317, label %323

317:                                              ; preds = %313
  %318 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %298, i64 0, i32 0
  %319 = bitcast %"class.std::__1::__shared_weak_count"* %298 to void (%"class.std::__1::__shared_count"*)***
  %320 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %319, align 8
  %321 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %320, i64 2
  %322 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %321, align 8
  call void %322(%"class.std::__1::__shared_count"* %318) #14
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %298) #14
  br label %323

323:                                              ; preds = %312, %313, %317
  call void @_ZN4SkSL18SPIRVCodeGenerator18writeUniformBufferENSt3__110shared_ptrINS_11SymbolTableEEE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::SymbolTable"* %305, %"class.std::__1::__shared_weak_count"* %307)
  br label %324

324:                                              ; preds = %323, %251
  %325 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %30, align 8
  %326 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %325, i64 0, i32 4
  %327 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %326, align 8
  %328 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 1
  %329 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %328, align 8
  %330 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %329, i64 0, i32 0, i32 7, i32 0, i32 0, i32 0
  %331 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %330, align 8
  %332 = bitcast <2 x i64>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %332) #14
  %333 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %327, i64 0, i32 0, i32 1, i32 0
  %334 = bitcast i8** %333 to <2 x i64>*
  %335 = load <2 x i64>, <2 x i64>* %334, align 8
  store <2 x i64> %335, <2 x i64>* %6, align 16
  %336 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %331, i64 0, i32 0, i32 1, i32 0
  %337 = load i8*, i8** %336, align 8
  %338 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %331, i64 0, i32 0, i32 1, i32 1
  %339 = load i64, i64* %338, align 8
  %340 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %7, i8* %337, i64 %339) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %332) #14
  br i1 %340, label %341, label %365

341:                                              ; preds = %324
  %342 = bitcast %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %342) #14
  %343 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %30, align 8
  call void @_ZN4SkSL18SPIRVCodeGenerator22writeEntrypointAdapterERKNS_19FunctionDeclarationE(%"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter"* nonnull sret %33, %"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::FunctionDeclaration"* dereferenceable(96) %343)
  %344 = bitcast %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter"* %33 to i64*
  %345 = load i64, i64* %344, align 8
  %346 = getelementptr inbounds %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter", %"struct.SkSL::SPIRVCodeGenerator::EntrypointAdapter"* %33, i64 0, i32 1
  %347 = bitcast %"class.std::__1::unique_ptr.509"* %346 to i64*
  %348 = load i64, i64* %347, align 8
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %342) #14
  %349 = inttoptr i64 %348 to %"class.SkSL::FunctionDeclaration"*
  %350 = icmp eq i64 %348, 0
  br i1 %350, label %365, label %351

351:                                              ; preds = %341
  %352 = load i32, i32* %35, align 8
  %353 = add i32 %352, 1
  store i32 %353, i32* %35, align 8
  %354 = bitcast %"class.SkSL::FunctionDeclaration"** %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %354) #14
  store %"class.SkSL::FunctionDeclaration"* %349, %"class.SkSL::FunctionDeclaration"** %34, align 8
  %355 = bitcast %"class.std::__1::tuple.691"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %355) #14
  %356 = getelementptr inbounds %"class.std::__1::tuple.691", %"class.std::__1::tuple.691"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::FunctionDeclaration"** %34, %"class.SkSL::FunctionDeclaration"*** %356, align 8
  %357 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %357) #14
  %358 = call { %"struct.std::__1::__hash_node_base.138"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.134"* %56, %"class.SkSL::FunctionDeclaration"** nonnull dereferenceable(8) %34, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.691"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %5) #14
  %359 = extractvalue { %"struct.std::__1::__hash_node_base.138"*, i8 } %358, 0
  %360 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %359, i64 3
  %361 = bitcast %"struct.std::__1::__hash_node_base.138"* %360 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %357) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %355) #14
  store i32 %352, i32* %361, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %354) #14
  %362 = inttoptr i64 %345 to %"class.SkSL::FunctionDefinition"*
  %363 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %29, i64 0, i32 0
  %364 = call i32 @_ZN4SkSL18SPIRVCodeGenerator13writeFunctionERKNS_18FunctionDefinitionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::FunctionDefinition"* dereferenceable(88) %362, %"class.SkSL::OutputStream"* nonnull dereferenceable(8) %363)
  store %"class.SkSL::FunctionDeclaration"* %349, %"class.SkSL::FunctionDeclaration"** %30, align 8
  br label %365

365:                                              ; preds = %341, %351, %324
  %366 = phi i64 [ %348, %351 ], [ 0, %341 ], [ 0, %324 ]
  %367 = phi i64 [ %345, %351 ], [ %345, %341 ], [ 0, %324 ]
  %368 = load i64, i64* %46, align 8, !noalias !80
  %369 = load i64, i64* %50, align 8, !noalias !80
  %370 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %52, align 8, !noalias !80
  %371 = load %"class.std::__1::unique_ptr.64"*, %"class.std::__1::unique_ptr.64"** %48, align 8, !noalias !83
  %372 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %29, i64 0, i32 0
  %373 = inttoptr i64 %368 to %"class.std::__1::unique_ptr.64"*
  %374 = icmp eq %"class.std::__1::unique_ptr.64"* %371, %373
  %375 = inttoptr i64 %369 to %"class.SkSL::ProgramElement"**
  %376 = icmp eq %"class.SkSL::ProgramElement"** %370, %375
  %377 = and i1 %374, %376
  br i1 %377, label %378, label %383

378:                                              ; preds = %398, %365
  %379 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0, i32 0
  %380 = bitcast %"struct.std::__1::__hash_node_base.166"** %379 to i64*
  %381 = load i64, i64* %380, align 8
  %382 = icmp eq i64 %381, 0
  br i1 %382, label %410, label %445

383:                                              ; preds = %365, %398
  %384 = phi i1 [ %408, %398 ], [ %376, %365 ]
  %385 = phi %"class.SkSL::ProgramElement"** [ %407, %398 ], [ %375, %365 ]
  %386 = phi %"class.std::__1::unique_ptr.64"* [ %405, %398 ], [ %373, %365 ]
  %387 = phi i64 [ %404, %398 ], [ %368, %365 ]
  %388 = phi i64 [ %403, %398 ], [ %369, %365 ]
  %389 = getelementptr inbounds %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64"* %386, i64 0, i32 0, i32 0, i32 0
  %390 = select i1 %384, %"class.SkSL::ProgramElement"** %389, %"class.SkSL::ProgramElement"** %385
  %391 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %390, align 8
  %392 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %391, i64 0, i32 0, i32 2
  %393 = load i32, i32* %392, align 4
  %394 = icmp eq i32 %393, 2
  br i1 %394, label %395, label %398

395:                                              ; preds = %383
  %396 = bitcast %"class.SkSL::ProgramElement"* %391 to %"class.SkSL::FunctionDefinition"*
  %397 = call i32 @_ZN4SkSL18SPIRVCodeGenerator13writeFunctionERKNS_18FunctionDefinitionERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::FunctionDefinition"* dereferenceable(88) %396, %"class.SkSL::OutputStream"* nonnull dereferenceable(8) %372)
  br label %398

398:                                              ; preds = %395, %383
  %399 = getelementptr inbounds %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64"* %386, i64 1
  %400 = ptrtoint %"class.std::__1::unique_ptr.64"* %399 to i64
  %401 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %385, i64 1
  %402 = ptrtoint %"class.SkSL::ProgramElement"** %401 to i64
  %403 = select i1 %384, i64 %388, i64 %402
  %404 = select i1 %384, i64 %400, i64 %387
  %405 = inttoptr i64 %404 to %"class.std::__1::unique_ptr.64"*
  %406 = icmp eq %"class.std::__1::unique_ptr.64"* %371, %405
  %407 = inttoptr i64 %403 to %"class.SkSL::ProgramElement"**
  %408 = icmp eq %"class.SkSL::ProgramElement"** %370, %407
  %409 = and i1 %406, %408
  br i1 %409, label %378, label %383

410:                                              ; preds = %533, %378
  call void @_ZN4SkSL18SPIRVCodeGenerator17writeCapabilitiesERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %411 = load i32, i32* %38, align 4
  call void @_ZN4SkSL18SPIRVCodeGenerator16writeInstructionE6SpvOp_iNS_14StringFragmentERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 11, i32 %411, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.34, i64 0, i64 0), i64 12, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %412 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %412) #14
  store i32 196622, i32* %8, align 4
  %413 = bitcast %"class.SkSL::OutputStream"* %2 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %414 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %413, align 8
  %415 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %414, i64 3
  %416 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %415, align 8
  call void %416(%"class.SkSL::OutputStream"* %2, i8* nonnull %412, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %412) #14
  %417 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %417) #14
  store i32 0, i32* %10, align 4
  %418 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %413, align 8
  %419 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %418, i64 3
  %420 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %419, align 8
  call void %420(%"class.SkSL::OutputStream"* %2, i8* nonnull %417, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %417) #14
  %421 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %421) #14
  store i32 1, i32* %9, align 4
  %422 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %413, align 8
  %423 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %422, i64 3
  %424 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %423, align 8
  call void %424(%"class.SkSL::OutputStream"* %2, i8* nonnull %421, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %421) #14
  %425 = bitcast %"class.SkSL::FunctionDeclaration"** %30 to %"class.SkSL::Symbol"**
  %426 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %425, align 8
  %427 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %426, i64 0, i32 1, i32 1
  %428 = load i64, i64* %427, align 8
  %429 = add i64 %428, 4
  %430 = lshr i64 %429, 2
  %431 = trunc i64 %430 to i32
  %432 = load i64, i64* %113, align 8
  %433 = trunc i64 %432 to i32
  %434 = add i32 %433, 3
  %435 = add i32 %434, %431
  %436 = shl i32 %435, 16
  %437 = or i32 %436, 15
  %438 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %438) #14
  store i32 %437, i32* %11, align 4
  %439 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %413, align 8
  %440 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %439, i64 3
  %441 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %440, align 8
  call void %441(%"class.SkSL::OutputStream"* %2, i8* nonnull %438, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %438) #14
  %442 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %134, align 8
  %443 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %442, i64 0, i32 0
  %444 = load i8, i8* %443, align 8
  switch i8 %444, label %552 [
    i8 1, label %537
    i8 0, label %542
    i8 2, label %547
  ]

445:                                              ; preds = %378, %533
  %446 = phi i64 [ %535, %533 ], [ %381, %378 ]
  %447 = inttoptr i64 %446 to %"struct.std::__1::__hash_node.621"*
  %448 = getelementptr inbounds %"struct.std::__1::__hash_node.621", %"struct.std::__1::__hash_node.621"* %447, i64 0, i32 2, i32 0, i32 0
  %449 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %448, align 8
  %450 = getelementptr inbounds %"struct.std::__1::__hash_node.621", %"struct.std::__1::__hash_node.621"* %447, i64 0, i32 2, i32 0, i32 1
  %451 = load i32, i32* %450, align 8
  %452 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %449, i64 0, i32 3
  %453 = load i8, i8* %452, align 8
  %454 = icmp eq i8 %453, 0
  br i1 %454, label %455, label %533

455:                                              ; preds = %445
  %456 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %449, i64 0, i32 2
  %457 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %456, align 8
  %458 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %457, i64 0, i32 1
  %459 = load i32, i32* %458, align 8
  %460 = and i32 %459, 6
  %461 = icmp eq i32 %460, 0
  br i1 %461, label %533, label %462

462:                                              ; preds = %455
  %463 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %120, align 8
  %464 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %463, i64 0, i32 9, i32 0, i32 0, i32 0
  %465 = load %"class.SkSL::ProgramUsage"*, %"class.SkSL::ProgramUsage"** %464, align 8
  %466 = call { i64, i32 } @_ZNK4SkSL12ProgramUsage3getERKNS_8VariableE(%"class.SkSL::ProgramUsage"* %465, %"class.SkSL::Variable"* dereferenceable(64) %449) #14
  %467 = extractvalue { i64, i32 } %466, 0
  %468 = icmp ult i64 %467, 4294967296
  %469 = extractvalue { i64, i32 } %466, 1
  %470 = icmp eq i32 %469, 0
  %471 = and i1 %468, %470
  br i1 %471, label %472, label %478

472:                                              ; preds = %462
  %473 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %456, align 8
  %474 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %473, i64 0, i32 1
  %475 = load i32, i32* %474, align 8
  %476 = and i32 %475, 14
  %477 = icmp eq i32 %476, 0
  br i1 %477, label %533, label %478

478:                                              ; preds = %462, %472
  %479 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %121, align 8
  %480 = icmp eq %"class.std::__1::__tree_node"* %479, null
  br i1 %480, label %507, label %481

481:                                              ; preds = %478, %503
  %482 = phi %"class.std::__1::__tree_node"* [ %506, %503 ], [ %479, %478 ]
  %483 = phi %"class.std::__1::__tree_node_base"** [ %505, %503 ], [ %112, %478 ]
  %484 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %482, i64 0, i32 1
  %485 = load i32, i32* %484, align 4
  %486 = icmp ult i32 %451, %485
  br i1 %486, label %487, label %493

487:                                              ; preds = %481
  %488 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %482, i64 0, i32 0, i32 0, i32 0
  %489 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %488, align 8
  %490 = icmp eq %"class.std::__1::__tree_node_base"* %489, null
  br i1 %490, label %491, label %503

491:                                              ; preds = %487
  %492 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %482, i64 0, i32 0, i32 0
  br label %507

493:                                              ; preds = %481
  %494 = icmp ult i32 %485, %451
  br i1 %494, label %495, label %501

495:                                              ; preds = %493
  %496 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %482, i64 0, i32 0, i32 1
  %497 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %496, align 8
  %498 = icmp eq %"class.std::__1::__tree_node_base"* %497, null
  br i1 %498, label %499, label %503

499:                                              ; preds = %495
  %500 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %482, i64 0, i32 0, i32 0
  br label %507

501:                                              ; preds = %493
  %502 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %482, i64 0, i32 0, i32 0
  br label %507

503:                                              ; preds = %495, %487
  %504 = phi %"class.std::__1::__tree_node_base"* [ %489, %487 ], [ %497, %495 ]
  %505 = phi %"class.std::__1::__tree_node_base"** [ %488, %487 ], [ %496, %495 ]
  %506 = bitcast %"class.std::__1::__tree_node_base"* %504 to %"class.std::__1::__tree_node"*
  br label %481

507:                                              ; preds = %478, %501, %499, %491
  %508 = phi %"class.std::__1::__tree_end_node"* [ %492, %491 ], [ %500, %499 ], [ %502, %501 ], [ %114, %478 ]
  %509 = phi %"class.std::__1::__tree_node_base"** [ %488, %491 ], [ %496, %499 ], [ %483, %501 ], [ %122, %478 ]
  %510 = bitcast %"class.std::__1::__tree_node_base"** %509 to %"class.std::__1::__tree_node"**
  %511 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %510, align 8
  %512 = icmp eq %"class.std::__1::__tree_node"* %511, null
  br i1 %512, label %513, label %533

513:                                              ; preds = %507
  %514 = call i8* @_Znwm(i64 32) #16, !noalias !86
  %515 = getelementptr inbounds i8, i8* %514, i64 28
  %516 = bitcast i8* %515 to i32*
  store i32 %451, i32* %516, align 4, !noalias !86
  %517 = bitcast i8* %514 to %"class.std::__1::__tree_node_base"*
  %518 = getelementptr inbounds i8, i8* %514, i64 16
  %519 = bitcast i8* %518 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %514, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %508, %"class.std::__1::__tree_end_node"** %519, align 8
  %520 = bitcast %"class.std::__1::__tree_node_base"** %509 to i8**
  store i8* %514, i8** %520, align 8
  %521 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %111, align 8
  %522 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %521, i64 0, i32 0
  %523 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %522, align 8
  %524 = icmp eq %"class.std::__1::__tree_node_base"* %523, null
  br i1 %524, label %528, label %525

525:                                              ; preds = %513
  %526 = ptrtoint %"class.std::__1::__tree_node_base"* %523 to i64
  store i64 %526, i64* %123, align 8
  %527 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %509, align 8
  br label %528

528:                                              ; preds = %525, %513
  %529 = phi %"class.std::__1::__tree_node_base"* [ %517, %513 ], [ %527, %525 ]
  %530 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %112, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %530, %"class.std::__1::__tree_node_base"* %529) #14
  %531 = load i64, i64* %113, align 8
  %532 = add i64 %531, 1
  store i64 %532, i64* %113, align 8
  br label %533

533:                                              ; preds = %528, %507, %455, %472, %445
  %534 = inttoptr i64 %446 to i64*
  %535 = load i64, i64* %534, align 8
  %536 = icmp eq i64 %535, 0
  br i1 %536, label %410, label %445

537:                                              ; preds = %410
  %538 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %538)
  store i32 0, i32* %12, align 4
  %539 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %413, align 8
  %540 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %539, i64 3
  %541 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %540, align 8
  call void %541(%"class.SkSL::OutputStream"* %2, i8* nonnull %538, i64 4) #14
  br label %553

542:                                              ; preds = %410
  %543 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %543)
  store i32 4, i32* %13, align 4
  %544 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %413, align 8
  %545 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %544, i64 3
  %546 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %545, align 8
  call void %546(%"class.SkSL::OutputStream"* %2, i8* nonnull %543, i64 4) #14
  br label %553

547:                                              ; preds = %410
  %548 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %548)
  store i32 3, i32* %14, align 4
  %549 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %413, align 8
  %550 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %549, i64 3
  %551 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %550, align 8
  call void %551(%"class.SkSL::OutputStream"* %2, i8* nonnull %548, i64 4) #14
  br label %553

552:                                              ; preds = %410
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.35, i64 0, i64 0), i32 3642, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.36, i64 0, i64 0)) #15
  unreachable

553:                                              ; preds = %547, %542, %537
  %554 = phi i8* [ %548, %547 ], [ %543, %542 ], [ %538, %537 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %554)
  %555 = bitcast %"class.std::__1::tuple.752"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %555) #14
  %556 = getelementptr inbounds %"class.std::__1::tuple.752", %"class.std::__1::tuple.752"* %15, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::FunctionDeclaration"** %30, %"class.SkSL::FunctionDeclaration"*** %556, align 8
  %557 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %16, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %557) #14
  %558 = call { %"struct.std::__1::__hash_node_base.138"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.134"* %56, %"class.SkSL::FunctionDeclaration"** nonnull dereferenceable(8) %30, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.752"* nonnull dereferenceable(8) %15, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %16) #14
  %559 = extractvalue { %"struct.std::__1::__hash_node_base.138"*, i8 } %558, 0
  %560 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %559, i64 3
  %561 = bitcast %"struct.std::__1::__hash_node_base.138"* %560 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %557) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %555) #14
  %562 = load i32, i32* %561, align 4
  %563 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %563)
  store i32 %562, i32* %17, align 4
  %564 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %413, align 8
  %565 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %564, i64 3
  %566 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %565, align 8
  call void %566(%"class.SkSL::OutputStream"* %2, i8* nonnull %563, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %563)
  %567 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %425, align 8
  %568 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %567, i64 0, i32 1, i32 0
  %569 = load i8*, i8** %568, align 8
  %570 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %567, i64 0, i32 1, i32 1
  %571 = load i64, i64* %570, align 8
  %572 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %413, align 8
  %573 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %572, i64 3
  %574 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %573, align 8
  call void %574(%"class.SkSL::OutputStream"* %2, i8* %569, i64 %571) #14
  %575 = and i64 %571, 3
  switch i64 %575, label %595 [
    i64 1, label %580
    i64 2, label %576
    i64 3, label %578
  ]

576:                                              ; preds = %553
  %577 = bitcast %"class.SkSL::OutputStream"* %2 to void (%"class.SkSL::OutputStream"*, i8)***
  br label %585

578:                                              ; preds = %553
  %579 = bitcast %"class.SkSL::OutputStream"* %2 to void (%"class.SkSL::OutputStream"*, i8)***
  br label %590

580:                                              ; preds = %553
  %581 = bitcast %"class.SkSL::OutputStream"* %2 to void (%"class.SkSL::OutputStream"*, i8)***
  %582 = load void (%"class.SkSL::OutputStream"*, i8)**, void (%"class.SkSL::OutputStream"*, i8)*** %581, align 8
  %583 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8)*, void (%"class.SkSL::OutputStream"*, i8)** %582, i64 1
  %584 = load void (%"class.SkSL::OutputStream"*, i8)*, void (%"class.SkSL::OutputStream"*, i8)** %583, align 8
  call void %584(%"class.SkSL::OutputStream"* %2, i8 zeroext 0) #14
  br label %585

585:                                              ; preds = %580, %576
  %586 = phi void (%"class.SkSL::OutputStream"*, i8)*** [ %577, %576 ], [ %581, %580 ]
  %587 = load void (%"class.SkSL::OutputStream"*, i8)**, void (%"class.SkSL::OutputStream"*, i8)*** %586, align 8
  %588 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8)*, void (%"class.SkSL::OutputStream"*, i8)** %587, i64 1
  %589 = load void (%"class.SkSL::OutputStream"*, i8)*, void (%"class.SkSL::OutputStream"*, i8)** %588, align 8
  call void %589(%"class.SkSL::OutputStream"* %2, i8 zeroext 0) #14
  br label %590

590:                                              ; preds = %585, %578
  %591 = phi void (%"class.SkSL::OutputStream"*, i8)*** [ %579, %578 ], [ %586, %585 ]
  %592 = load void (%"class.SkSL::OutputStream"*, i8)**, void (%"class.SkSL::OutputStream"*, i8)*** %591, align 8
  %593 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8)*, void (%"class.SkSL::OutputStream"*, i8)** %592, i64 1
  %594 = load void (%"class.SkSL::OutputStream"*, i8)*, void (%"class.SkSL::OutputStream"*, i8)** %593, align 8
  call void %594(%"class.SkSL::OutputStream"* %2, i8 zeroext 0) #14
  br label %600

595:                                              ; preds = %553
  %596 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %596) #14
  store i32 0, i32* %18, align 4
  %597 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %413, align 8
  %598 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %597, i64 3
  %599 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %598, align 8
  call void %599(%"class.SkSL::OutputStream"* %2, i8* nonnull %596, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %596) #14
  br label %600

600:                                              ; preds = %590, %595
  %601 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %111, align 8
  %602 = icmp eq %"class.std::__1::__tree_end_node"* %601, %114
  br i1 %602, label %605, label %603

603:                                              ; preds = %600
  %604 = bitcast i32* %19 to i8*
  br label %610

605:                                              ; preds = %645, %600
  %606 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %134, align 8
  %607 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %606, i64 0, i32 0
  %608 = load i8, i8* %607, align 8
  %609 = icmp eq i8 %608, 2
  br i1 %609, label %648, label %652

610:                                              ; preds = %603, %645
  %611 = phi %"class.std::__1::__tree_end_node"* [ %601, %603 ], [ %646, %645 ]
  %612 = bitcast %"class.std::__1::__tree_end_node"* %611 to %"class.std::__1::__tree_node"*
  %613 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %612, i64 0, i32 1
  %614 = load i32, i32* %613, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %604)
  store i32 %614, i32* %19, align 4
  %615 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %413, align 8
  %616 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %615, i64 3
  %617 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %616, align 8
  call void %617(%"class.SkSL::OutputStream"* %2, i8* nonnull %604, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %604)
  %618 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %611, i64 1, i32 0
  %619 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %618, align 8
  %620 = icmp eq %"class.std::__1::__tree_node_base"* %619, null
  br i1 %620, label %621, label %629

621:                                              ; preds = %610
  %622 = bitcast %"class.std::__1::__tree_end_node"* %611 to %"class.std::__1::__tree_node_base"*
  %623 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %611, i64 2
  %624 = bitcast %"class.std::__1::__tree_end_node"* %623 to %"class.std::__1::__tree_end_node"**
  %625 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %624, align 8
  %626 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %625, i64 0, i32 0
  %627 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %626, align 8
  %628 = icmp eq %"class.std::__1::__tree_node_base"* %627, %622
  br i1 %628, label %645, label %636

629:                                              ; preds = %610, %629
  %630 = phi %"class.std::__1::__tree_node_base"* [ %632, %629 ], [ %619, %610 ]
  %631 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %630, i64 0, i32 0, i32 0
  %632 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %631, align 8
  %633 = icmp eq %"class.std::__1::__tree_node_base"* %632, null
  br i1 %633, label %634, label %629

634:                                              ; preds = %629
  %635 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %630, i64 0, i32 0
  br label %645

636:                                              ; preds = %621, %636
  %637 = phi %"class.std::__1::__tree_end_node"** [ %640, %636 ], [ %624, %621 ]
  %638 = bitcast %"class.std::__1::__tree_end_node"** %637 to %"class.std::__1::__tree_node_base"**
  %639 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %638, align 8
  %640 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %639, i64 0, i32 2
  %641 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %640, align 8
  %642 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %641, i64 0, i32 0
  %643 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %642, align 8
  %644 = icmp eq %"class.std::__1::__tree_node_base"* %643, %639
  br i1 %644, label %645, label %636

645:                                              ; preds = %636, %621, %634
  %646 = phi %"class.std::__1::__tree_end_node"* [ %635, %634 ], [ %625, %621 ], [ %641, %636 ]
  %647 = icmp eq %"class.std::__1::__tree_end_node"* %646, %114
  br i1 %647, label %605, label %610

648:                                              ; preds = %605
  call void @_ZN4SkSL18SPIRVCodeGenerator32writeGeometryShaderExecutionModeEjRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, i32 %562, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %649 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %134, align 8
  %650 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %649, i64 0, i32 0
  %651 = load i8, i8* %650, align 8
  br label %652

652:                                              ; preds = %648, %605
  %653 = phi i8 [ %651, %648 ], [ %608, %605 ]
  %654 = icmp eq i8 %653, 0
  br i1 %654, label %655, label %676

655:                                              ; preds = %652
  %656 = bitcast %"class.std::__1::tuple.752"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %656) #14
  %657 = getelementptr inbounds %"class.std::__1::tuple.752", %"class.std::__1::tuple.752"* %20, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::FunctionDeclaration"** %30, %"class.SkSL::FunctionDeclaration"*** %657, align 8
  %658 = getelementptr inbounds %"class.std::__1::tuple.633", %"class.std::__1::tuple.633"* %21, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %658) #14
  %659 = call { %"struct.std::__1::__hash_node_base.138"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.134"* %56, %"class.SkSL::FunctionDeclaration"** nonnull dereferenceable(8) %30, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.752"* nonnull dereferenceable(8) %20, %"class.std::__1::tuple.633"* nonnull dereferenceable(1) %21) #14
  %660 = extractvalue { %"struct.std::__1::__hash_node_base.138"*, i8 } %659, 0
  %661 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %660, i64 3
  %662 = bitcast %"struct.std::__1::__hash_node_base.138"* %661 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %658) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %656) #14
  %663 = load i32, i32* %662, align 4
  %664 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %664) #14
  store i32 196624, i32* %22, align 4
  %665 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %413, align 8
  %666 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %665, i64 3
  %667 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %666, align 8
  call void %667(%"class.SkSL::OutputStream"* %2, i8* nonnull %664, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %664) #14
  %668 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %668) #14
  store i32 %663, i32* %24, align 4
  %669 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %413, align 8
  %670 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %669, i64 3
  %671 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %670, align 8
  call void %671(%"class.SkSL::OutputStream"* %2, i8* nonnull %668, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %668) #14
  %672 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %672) #14
  store i32 7, i32* %23, align 4
  %673 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %413, align 8
  %674 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %673, i64 3
  %675 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %674, align 8
  call void %675(%"class.SkSL::OutputStream"* %2, i8* nonnull %672, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %672) #14
  br label %676

676:                                              ; preds = %655, %652
  %677 = load i64, i64* %46, align 8, !noalias !89
  %678 = load i64, i64* %50, align 8, !noalias !89
  %679 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %52, align 8, !noalias !89
  %680 = load %"class.std::__1::unique_ptr.64"*, %"class.std::__1::unique_ptr.64"** %48, align 8, !noalias !92
  %681 = bitcast i32* %27 to i8*
  %682 = bitcast %"class.SkSL::OutputStream"* %2 to void (%"class.SkSL::OutputStream"*, i8)***
  %683 = bitcast i32* %28 to i8*
  %684 = inttoptr i64 %677 to %"class.std::__1::unique_ptr.64"*
  %685 = icmp eq %"class.std::__1::unique_ptr.64"* %680, %684
  %686 = inttoptr i64 %678 to %"class.SkSL::ProgramElement"**
  %687 = icmp eq %"class.SkSL::ProgramElement"** %679, %686
  %688 = and i1 %685, %687
  br i1 %688, label %689, label %712

689:                                              ; preds = %766, %676
  %690 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 16
  call void @_ZN4SkSL18write_stringstreamERKNS_12StringStreamERNS_12OutputStreamE(%"class.SkSL::StringStream"* dereferenceable(64) %690, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %691 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 18
  call void @_ZN4SkSL18write_stringstreamERKNS_12StringStreamERNS_12OutputStreamE(%"class.SkSL::StringStream"* dereferenceable(64) %691, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %692 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19
  call void @_ZN4SkSL18write_stringstreamERKNS_12StringStreamERNS_12OutputStreamE(%"class.SkSL::StringStream"* dereferenceable(64) %692, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %693 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 15
  call void @_ZN4SkSL18write_stringstreamERKNS_12StringStreamERNS_12OutputStreamE(%"class.SkSL::StringStream"* dereferenceable(64) %693, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  call void @_ZN4SkSL18write_stringstreamERKNS_12StringStreamERNS_12OutputStreamE(%"class.SkSL::StringStream"* nonnull dereferenceable(64) %29, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %694 = icmp eq i64 %366, 0
  br i1 %694, label %701, label %695

695:                                              ; preds = %689
  %696 = inttoptr i64 %366 to %"class.SkSL::FunctionDeclaration"*
  %697 = inttoptr i64 %366 to void (%"class.SkSL::FunctionDeclaration"*)***
  %698 = load void (%"class.SkSL::FunctionDeclaration"*)**, void (%"class.SkSL::FunctionDeclaration"*)*** %697, align 8
  %699 = getelementptr inbounds void (%"class.SkSL::FunctionDeclaration"*)*, void (%"class.SkSL::FunctionDeclaration"*)** %698, i64 1
  %700 = load void (%"class.SkSL::FunctionDeclaration"*)*, void (%"class.SkSL::FunctionDeclaration"*)** %699, align 8
  call void %700(%"class.SkSL::FunctionDeclaration"* nonnull %696) #14
  br label %701

701:                                              ; preds = %695, %689
  %702 = icmp eq i64 %367, 0
  br i1 %702, label %709, label %703

703:                                              ; preds = %701
  %704 = inttoptr i64 %367 to %"class.SkSL::FunctionDefinition"*
  %705 = inttoptr i64 %367 to void (%"class.SkSL::FunctionDefinition"*)***
  %706 = load void (%"class.SkSL::FunctionDefinition"*)**, void (%"class.SkSL::FunctionDefinition"*)*** %705, align 8
  %707 = getelementptr inbounds void (%"class.SkSL::FunctionDefinition"*)*, void (%"class.SkSL::FunctionDefinition"*)** %706, i64 1
  %708 = load void (%"class.SkSL::FunctionDefinition"*)*, void (%"class.SkSL::FunctionDefinition"*)** %707, align 8
  call void %708(%"class.SkSL::FunctionDefinition"* nonnull %704) #14
  br label %709

709:                                              ; preds = %701, %703
  %710 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %32, i64 0, i32 0
  %711 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %121, align 8
  call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree"* nonnull %710, %"class.std::__1::__tree_node"* %711) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %110) #14
  br label %778

712:                                              ; preds = %676, %766
  %713 = phi i1 [ %776, %766 ], [ %687, %676 ]
  %714 = phi %"class.SkSL::ProgramElement"** [ %775, %766 ], [ %686, %676 ]
  %715 = phi %"class.std::__1::unique_ptr.64"* [ %773, %766 ], [ %684, %676 ]
  %716 = phi i64 [ %772, %766 ], [ %677, %676 ]
  %717 = phi i64 [ %771, %766 ], [ %678, %676 ]
  %718 = getelementptr inbounds %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64"* %715, i64 0, i32 0, i32 0, i32 0
  %719 = select i1 %713, %"class.SkSL::ProgramElement"** %718, %"class.SkSL::ProgramElement"** %714
  %720 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %719, align 8
  %721 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %720, i64 0, i32 0, i32 2
  %722 = load i32, i32* %721, align 4
  %723 = icmp eq i32 %722, 1
  br i1 %723, label %724, label %766

724:                                              ; preds = %712
  %725 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %720, i64 1
  %726 = bitcast %"class.SkSL::ProgramElement"* %725 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %727 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %726, i64 0, i32 1, i32 0
  %728 = load i8, i8* %727, align 1
  %729 = icmp slt i8 %728, 0
  br i1 %729, label %730, label %733

730:                                              ; preds = %724
  %731 = bitcast %"class.SkSL::ProgramElement"* %725 to i8**
  %732 = load i8*, i8** %731, align 8
  br label %735

733:                                              ; preds = %724
  %734 = bitcast %"class.SkSL::ProgramElement"* %725 to i8*
  br label %735

735:                                              ; preds = %730, %733
  %736 = phi i8* [ %732, %730 ], [ %734, %733 ]
  %737 = call i64 @strlen(i8* %736) #17
  %738 = trunc i64 %737 to i32
  %739 = shl i32 %738, 14
  %740 = add i32 %739, 131072
  %741 = and i32 %740, -65536
  %742 = or i32 %741, 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %681) #14
  store i32 %742, i32* %27, align 4
  %743 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %413, align 8
  %744 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %743, i64 3
  %745 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %744, align 8
  call void %745(%"class.SkSL::OutputStream"* %2, i8* nonnull %681, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %681) #14
  %746 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %413, align 8
  %747 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %746, i64 3
  %748 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %747, align 8
  call void %748(%"class.SkSL::OutputStream"* %2, i8* %736, i64 %737) #14
  %749 = and i64 %737, 3
  switch i64 %749, label %762 [
    i64 1, label %750
    i64 2, label %754
    i64 3, label %758
  ]

750:                                              ; preds = %735
  %751 = load void (%"class.SkSL::OutputStream"*, i8)**, void (%"class.SkSL::OutputStream"*, i8)*** %682, align 8
  %752 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8)*, void (%"class.SkSL::OutputStream"*, i8)** %751, i64 1
  %753 = load void (%"class.SkSL::OutputStream"*, i8)*, void (%"class.SkSL::OutputStream"*, i8)** %752, align 8
  call void %753(%"class.SkSL::OutputStream"* %2, i8 zeroext 0) #14
  br label %754

754:                                              ; preds = %735, %750
  %755 = load void (%"class.SkSL::OutputStream"*, i8)**, void (%"class.SkSL::OutputStream"*, i8)*** %682, align 8
  %756 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8)*, void (%"class.SkSL::OutputStream"*, i8)** %755, i64 1
  %757 = load void (%"class.SkSL::OutputStream"*, i8)*, void (%"class.SkSL::OutputStream"*, i8)** %756, align 8
  call void %757(%"class.SkSL::OutputStream"* %2, i8 zeroext 0) #14
  br label %758

758:                                              ; preds = %735, %754
  %759 = load void (%"class.SkSL::OutputStream"*, i8)**, void (%"class.SkSL::OutputStream"*, i8)*** %682, align 8
  %760 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8)*, void (%"class.SkSL::OutputStream"*, i8)** %759, i64 1
  %761 = load void (%"class.SkSL::OutputStream"*, i8)*, void (%"class.SkSL::OutputStream"*, i8)** %760, align 8
  call void %761(%"class.SkSL::OutputStream"* %2, i8 zeroext 0) #14
  br label %766

762:                                              ; preds = %735
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %683) #14
  store i32 0, i32* %28, align 4
  %763 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %413, align 8
  %764 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %763, i64 3
  %765 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %764, align 8
  call void %765(%"class.SkSL::OutputStream"* %2, i8* nonnull %683, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %683) #14
  br label %766

766:                                              ; preds = %762, %758, %712
  %767 = getelementptr inbounds %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64"* %715, i64 1
  %768 = ptrtoint %"class.std::__1::unique_ptr.64"* %767 to i64
  %769 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %714, i64 1
  %770 = ptrtoint %"class.SkSL::ProgramElement"** %769 to i64
  %771 = select i1 %713, i64 %717, i64 %770
  %772 = select i1 %713, i64 %768, i64 %716
  %773 = inttoptr i64 %772 to %"class.std::__1::unique_ptr.64"*
  %774 = icmp eq %"class.std::__1::unique_ptr.64"* %680, %773
  %775 = inttoptr i64 %771 to %"class.SkSL::ProgramElement"**
  %776 = icmp eq %"class.SkSL::ProgramElement"** %679, %775
  %777 = and i1 %774, %776
  br i1 %777, label %689, label %712

778:                                              ; preds = %709, %106
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 16
  %779 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %29, i64 0, i32 2, i32 0
  %780 = bitcast %"class.std::__1::basic_string"* %779 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %781 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %780, i64 0, i32 1, i32 0
  %782 = load i8, i8* %781, align 1
  %783 = icmp slt i8 %782, 0
  br i1 %783, label %784, label %787

784:                                              ; preds = %778
  %785 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %779, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %786 = load i8*, i8** %785, align 8
  call void @_ZdlPv(i8* %786) #16
  br label %787

787:                                              ; preds = %778, %784
  %788 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %29, i64 0, i32 1
  call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* %788) #14
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %39) #14
  ret void
}

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4SkSL18SPIRVCodeGenerator12generateCodeEv(%"class.SkSL::SPIRVCodeGenerator"*) unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %"class.SkSL::StringStream", align 16
  %8 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 3
  %9 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %8, align 8
  %10 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10)
  store i32 119734787, i32* %6, align 4
  %11 = bitcast %"class.SkSL::OutputStream"* %9 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %12 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %12, i64 3
  %14 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %13, align 8
  call void %14(%"class.SkSL::OutputStream"* %9, i8* nonnull %10, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10)
  %15 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %8, align 8
  %16 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16)
  store i32 65536, i32* %5, align 4
  %17 = bitcast %"class.SkSL::OutputStream"* %15 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %18 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %18, i64 3
  %20 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %19, align 8
  call void %20(%"class.SkSL::OutputStream"* %15, i8* nonnull %16, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16)
  %21 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %8, align 8
  %22 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22)
  store i32 0, i32* %4, align 4
  %23 = bitcast %"class.SkSL::OutputStream"* %21 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %24 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %24, i64 3
  %26 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %25, align 8
  call void %26(%"class.SkSL::OutputStream"* %21, i8* nonnull %22, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22)
  %27 = bitcast %"class.SkSL::StringStream"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %27) #14
  %28 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %7, i64 0, i32 0, i32 0
  %29 = bitcast %"class.SkSL::StringStream"* %7 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV22SkDynamicMemoryWStream, i64 0, inrange i32 0, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %29, align 16
  %30 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %7, i64 0, i32 1, i32 1
  %31 = bitcast %"struct.SkDynamicMemoryWStream::Block"** %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 48, i1 false) #14
  %32 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 1
  %33 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %32, align 8
  %34 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %7, i64 0, i32 0
  call void @_ZN4SkSL18SPIRVCodeGenerator17writeInstructionsERKNS_7ProgramERNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %0, %"struct.SkSL::Program"* dereferenceable(128) %33, %"class.SkSL::OutputStream"* nonnull dereferenceable(8) %34)
  %35 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 5
  %36 = load i32, i32* %35, align 8
  %37 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %8, align 8
  %38 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %38)
  store i32 %36, i32* %3, align 4
  %39 = bitcast %"class.SkSL::OutputStream"* %37 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %40 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %40, i64 3
  %42 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %41, align 8
  call void %42(%"class.SkSL::OutputStream"* %37, i8* nonnull %38, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %38)
  %43 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %8, align 8
  %44 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %44)
  store i32 0, i32* %2, align 4
  %45 = bitcast %"class.SkSL::OutputStream"* %43 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %46 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %46, i64 3
  %48 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %47, align 8
  call void %48(%"class.SkSL::OutputStream"* %43, i8* nonnull %44, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %44)
  %49 = load %"class.SkSL::OutputStream"*, %"class.SkSL::OutputStream"** %8, align 8
  call void @_ZN4SkSL18write_stringstreamERKNS_12StringStreamERNS_12OutputStreamE(%"class.SkSL::StringStream"* nonnull dereferenceable(64) %7, %"class.SkSL::OutputStream"* dereferenceable(8) %49) #14
  %50 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 2
  %51 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %50, align 8
  %52 = bitcast %"class.SkSL::ErrorReporter"* %51 to i32 (%"class.SkSL::ErrorReporter"*)***
  %53 = load i32 (%"class.SkSL::ErrorReporter"*)**, i32 (%"class.SkSL::ErrorReporter"*)*** %52, align 8
  %54 = getelementptr inbounds i32 (%"class.SkSL::ErrorReporter"*)*, i32 (%"class.SkSL::ErrorReporter"*)** %53, i64 3
  %55 = load i32 (%"class.SkSL::ErrorReporter"*)*, i32 (%"class.SkSL::ErrorReporter"*)** %54, align 8
  %56 = call i32 %55(%"class.SkSL::ErrorReporter"* %51) #14
  %57 = icmp eq i32 %56, 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %28, align 16
  %58 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %7, i64 0, i32 2, i32 0
  %59 = bitcast %"class.std::__1::basic_string"* %58 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %1
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  call void @_ZdlPv(i8* %65) #16
  br label %66

66:                                               ; preds = %1, %63
  %67 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %7, i64 0, i32 1
  call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* %67) #14
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %27) #14
  ret i1 %57
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL18SPIRVCodeGeneratorD2Ev(%"class.SkSL::SPIRVCodeGenerator"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL18SPIRVCodeGeneratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 38, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.194"*, %"struct.std::__1::__hash_node_base.194"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.194"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1, %6
  %7 = phi %"struct.std::__1::__hash_node_base.194"* [ %9, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.194", %"struct.std::__1::__hash_node_base.194"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.194"*, %"struct.std::__1::__hash_node_base.194"** %8, align 8
  %10 = bitcast %"struct.std::__1::__hash_node_base.194"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #16
  %11 = icmp eq %"struct.std::__1::__hash_node_base.194"* %9, null
  br i1 %11, label %12, label %6

12:                                               ; preds = %6, %1
  %13 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 38, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::__hash_node_base.194"**, %"struct.std::__1::__hash_node_base.194"*** %13, align 8
  store %"struct.std::__1::__hash_node_base.194"** null, %"struct.std::__1::__hash_node_base.194"*** %13, align 8
  %15 = icmp eq %"struct.std::__1::__hash_node_base.194"** %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = bitcast %"struct.std::__1::__hash_node_base.194"** %14 to i8*
  tail call void @_ZdlPv(i8* %17) #16
  br label %18

18:                                               ; preds = %12, %16
  %19 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 37, i32 0, i32 0
  %20 = load %"class.SkSL::VarDeclaration"**, %"class.SkSL::VarDeclaration"*** %19, align 8
  %21 = icmp eq %"class.SkSL::VarDeclaration"** %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %18
  %23 = ptrtoint %"class.SkSL::VarDeclaration"** %20 to i64
  %24 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 37, i32 0, i32 1
  %25 = bitcast %"class.SkSL::VarDeclaration"*** %24 to i64*
  store i64 %23, i64* %25, align 8
  %26 = bitcast %"class.SkSL::VarDeclaration"** %20 to i8*
  tail call void @_ZdlPv(i8* %26) #16
  br label %27

27:                                               ; preds = %18, %22
  %28 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 36, i32 2, i32 0, i32 0, i32 0
  %29 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %28, align 8
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %28, align 8
  %30 = icmp eq %"class.SkSL::Type"* %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %27
  %32 = bitcast %"class.SkSL::Type"* %29 to void (%"class.SkSL::Type"*)***
  %33 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %33, i64 1
  %35 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %34, align 8
  tail call void %35(%"class.SkSL::Type"* nonnull %29) #14
  br label %36

36:                                               ; preds = %31, %27
  %37 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 36, i32 1, i32 0, i32 0, i32 0
  %38 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %37, align 8
  store %"class.SkSL::Variable"* null, %"class.SkSL::Variable"** %37, align 8
  %39 = icmp eq %"class.SkSL::Variable"* %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %36
  %41 = bitcast %"class.SkSL::Variable"* %38 to void (%"class.SkSL::Variable"*)***
  %42 = load void (%"class.SkSL::Variable"*)**, void (%"class.SkSL::Variable"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.SkSL::Variable"*)*, void (%"class.SkSL::Variable"*)** %42, i64 1
  %44 = load void (%"class.SkSL::Variable"*)*, void (%"class.SkSL::Variable"*)** %43, align 8
  tail call void %44(%"class.SkSL::Variable"* nonnull %38) #14
  br label %45

45:                                               ; preds = %40, %36
  %46 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 36, i32 0, i32 0, i32 0, i32 0
  %47 = load %"class.SkSL::InterfaceBlock"*, %"class.SkSL::InterfaceBlock"** %46, align 8
  store %"class.SkSL::InterfaceBlock"* null, %"class.SkSL::InterfaceBlock"** %46, align 8
  %48 = icmp eq %"class.SkSL::InterfaceBlock"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %45
  %50 = bitcast %"class.SkSL::InterfaceBlock"* %47 to void (%"class.SkSL::InterfaceBlock"*)***
  %51 = load void (%"class.SkSL::InterfaceBlock"*)**, void (%"class.SkSL::InterfaceBlock"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.SkSL::InterfaceBlock"*)*, void (%"class.SkSL::InterfaceBlock"*)** %51, i64 1
  %53 = load void (%"class.SkSL::InterfaceBlock"*)*, void (%"class.SkSL::InterfaceBlock"*)** %52, align 8
  tail call void %53(%"class.SkSL::InterfaceBlock"* nonnull %47) #14
  br label %54

54:                                               ; preds = %45, %49
  %55 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 33
  tail call void @_ZN4SkSL11SymbolTableD2Ev(%"class.SkSL::SymbolTable"* %55) #14
  %56 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 28
  tail call void @_ZNSt3__15stackIjNS_5dequeIjNS_9allocatorIjEEEEED2Ev(%"class.std::__1::stack"* %56) #14
  %57 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 27
  tail call void @_ZNSt3__15stackIjNS_5dequeIjNS_9allocatorIjEEEEED2Ev(%"class.std::__1::stack"* %57) #14
  %58 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 23, i32 0, i32 1, i32 0, i32 0, i32 0
  %59 = load %"struct.std::__1::__hash_node_base.272"*, %"struct.std::__1::__hash_node_base.272"** %58, align 8
  %60 = icmp eq %"struct.std::__1::__hash_node_base.272"* %59, null
  br i1 %60, label %67, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"struct.std::__1::__hash_node_base.272"* [ %64, %61 ], [ %59, %54 ]
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base.272", %"struct.std::__1::__hash_node_base.272"* %62, i64 0, i32 0
  %64 = load %"struct.std::__1::__hash_node_base.272"*, %"struct.std::__1::__hash_node_base.272"** %63, align 8
  %65 = bitcast %"struct.std::__1::__hash_node_base.272"* %62 to i8*
  tail call void @_ZdlPv(i8* %65) #16
  %66 = icmp eq %"struct.std::__1::__hash_node_base.272"* %64, null
  br i1 %66, label %67, label %61

67:                                               ; preds = %61, %54
  %68 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 23, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load %"struct.std::__1::__hash_node_base.272"**, %"struct.std::__1::__hash_node_base.272"*** %68, align 8
  store %"struct.std::__1::__hash_node_base.272"** null, %"struct.std::__1::__hash_node_base.272"*** %68, align 8
  %70 = icmp eq %"struct.std::__1::__hash_node_base.272"** %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %67
  %72 = bitcast %"struct.std::__1::__hash_node_base.272"** %69 to i8*
  tail call void @_ZdlPv(i8* %72) #16
  br label %73

73:                                               ; preds = %67, %71
  %74 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 22, i32 0, i32 1, i32 0, i32 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.245"*, %"struct.std::__1::__hash_node_base.245"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.245"* %75, null
  br i1 %76, label %83, label %77

77:                                               ; preds = %73, %77
  %78 = phi %"struct.std::__1::__hash_node_base.245"* [ %80, %77 ], [ %75, %73 ]
  %79 = getelementptr inbounds %"struct.std::__1::__hash_node_base.245", %"struct.std::__1::__hash_node_base.245"* %78, i64 0, i32 0
  %80 = load %"struct.std::__1::__hash_node_base.245"*, %"struct.std::__1::__hash_node_base.245"** %79, align 8
  %81 = bitcast %"struct.std::__1::__hash_node_base.245"* %78 to i8*
  tail call void @_ZdlPv(i8* %81) #16
  %82 = icmp eq %"struct.std::__1::__hash_node_base.245"* %80, null
  br i1 %82, label %83, label %77

83:                                               ; preds = %77, %73
  %84 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 22, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load %"struct.std::__1::__hash_node_base.245"**, %"struct.std::__1::__hash_node_base.245"*** %84, align 8
  store %"struct.std::__1::__hash_node_base.245"** null, %"struct.std::__1::__hash_node_base.245"*** %84, align 8
  %86 = icmp eq %"struct.std::__1::__hash_node_base.245"** %85, null
  br i1 %86, label %89, label %87

87:                                               ; preds = %83
  %88 = bitcast %"struct.std::__1::__hash_node_base.245"** %85 to i8*
  tail call void @_ZdlPv(i8* %88) #16
  br label %89

89:                                               ; preds = %83, %87
  %90 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %90, align 8
  %91 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 2, i32 0
  %92 = bitcast %"class.std::__1::basic_string"* %91 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  %94 = load i8, i8* %93, align 1
  %95 = icmp slt i8 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %89
  %97 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i8*, i8** %97, align 8
  tail call void @_ZdlPv(i8* %98) #16
  br label %99

99:                                               ; preds = %89, %96
  %100 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 19, i32 1
  tail call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* %100) #14
  %101 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 18, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %101, align 8
  %102 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 18, i32 2, i32 0
  %103 = bitcast %"class.std::__1::basic_string"* %102 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %104 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %103, i64 0, i32 1, i32 0
  %105 = load i8, i8* %104, align 1
  %106 = icmp slt i8 %105, 0
  br i1 %106, label %107, label %110

107:                                              ; preds = %99
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %102, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load i8*, i8** %108, align 8
  tail call void @_ZdlPv(i8* %109) #16
  br label %110

110:                                              ; preds = %99, %107
  %111 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 18, i32 1
  tail call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* %111) #14
  %112 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 17, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %112, align 8
  %113 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 17, i32 2, i32 0
  %114 = bitcast %"class.std::__1::basic_string"* %113 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %115 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %114, i64 0, i32 1, i32 0
  %116 = load i8, i8* %115, align 1
  %117 = icmp slt i8 %116, 0
  br i1 %117, label %118, label %121

118:                                              ; preds = %110
  %119 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %113, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load i8*, i8** %119, align 8
  tail call void @_ZdlPv(i8* %120) #16
  br label %121

121:                                              ; preds = %110, %118
  %122 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 17, i32 1
  tail call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* %122) #14
  %123 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 16, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %123, align 8
  %124 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 16, i32 2, i32 0
  %125 = bitcast %"class.std::__1::basic_string"* %124 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %126 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %125, i64 0, i32 1, i32 0
  %127 = load i8, i8* %126, align 1
  %128 = icmp slt i8 %127, 0
  br i1 %128, label %129, label %132

129:                                              ; preds = %121
  %130 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %124, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load i8*, i8** %130, align 8
  tail call void @_ZdlPv(i8* %131) #16
  br label %132

132:                                              ; preds = %121, %129
  %133 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 16, i32 1
  tail call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* %133) #14
  %134 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 15, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %134, align 8
  %135 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 15, i32 2, i32 0
  %136 = bitcast %"class.std::__1::basic_string"* %135 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %137 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %136, i64 0, i32 1, i32 0
  %138 = load i8, i8* %137, align 1
  %139 = icmp slt i8 %138, 0
  br i1 %139, label %140, label %143

140:                                              ; preds = %132
  %141 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %135, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load i8*, i8** %141, align 8
  tail call void @_ZdlPv(i8* %142) #16
  br label %143

143:                                              ; preds = %132, %140
  %144 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 15, i32 1
  tail call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* %144) #14
  %145 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 14, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %145, align 8
  %146 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 14, i32 2, i32 0
  %147 = bitcast %"class.std::__1::basic_string"* %146 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %148 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %147, i64 0, i32 1, i32 0
  %149 = load i8, i8* %148, align 1
  %150 = icmp slt i8 %149, 0
  br i1 %150, label %151, label %154

151:                                              ; preds = %143
  %152 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %146, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load i8*, i8** %152, align 8
  tail call void @_ZdlPv(i8* %153) #16
  br label %154

154:                                              ; preds = %143, %151
  %155 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 14, i32 1
  tail call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* %155) #14
  %156 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 13, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %156, align 8
  %157 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 13, i32 2, i32 0
  %158 = bitcast %"class.std::__1::basic_string"* %157 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %159 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %158, i64 0, i32 1, i32 0
  %160 = load i8, i8* %159, align 1
  %161 = icmp slt i8 %160, 0
  br i1 %161, label %162, label %165

162:                                              ; preds = %154
  %163 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %157, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = load i8*, i8** %163, align 8
  tail call void @_ZdlPv(i8* %164) #16
  br label %165

165:                                              ; preds = %154, %162
  %166 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 13, i32 1
  tail call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* %166) #14
  %167 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 12, i32 0, i32 1, i32 0, i32 0, i32 0
  %168 = load %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %167, align 8
  %169 = icmp eq %"struct.std::__1::__hash_node_base.218"* %168, null
  br i1 %169, label %185, label %170

170:                                              ; preds = %165, %182
  %171 = phi %"struct.std::__1::__hash_node_base.218"* [ %173, %182 ], [ %168, %165 ]
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218", %"struct.std::__1::__hash_node_base.218"* %171, i64 0, i32 0
  %173 = load %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %172, align 8
  %174 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218", %"struct.std::__1::__hash_node_base.218"* %171, i64 2
  %175 = bitcast %"struct.std::__1::__hash_node_base.218"* %174 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %176 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %175, i64 0, i32 1, i32 0
  %177 = load i8, i8* %176, align 1
  %178 = icmp slt i8 %177, 0
  br i1 %178, label %179, label %182

179:                                              ; preds = %170
  %180 = bitcast %"struct.std::__1::__hash_node_base.218"* %174 to i8**
  %181 = load i8*, i8** %180, align 8
  tail call void @_ZdlPv(i8* %181) #16
  br label %182

182:                                              ; preds = %179, %170
  %183 = bitcast %"struct.std::__1::__hash_node_base.218"* %171 to i8*
  tail call void @_ZdlPv(i8* %183) #16
  %184 = icmp eq %"struct.std::__1::__hash_node_base.218"* %173, null
  br i1 %184, label %185, label %170

185:                                              ; preds = %182, %165
  %186 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0
  %187 = load %"struct.std::__1::__hash_node_base.218"**, %"struct.std::__1::__hash_node_base.218"*** %186, align 8
  store %"struct.std::__1::__hash_node_base.218"** null, %"struct.std::__1::__hash_node_base.218"*** %186, align 8
  %188 = icmp eq %"struct.std::__1::__hash_node_base.218"** %187, null
  br i1 %188, label %191, label %189

189:                                              ; preds = %185
  %190 = bitcast %"struct.std::__1::__hash_node_base.218"** %187 to i8*
  tail call void @_ZdlPv(i8* %190) #16
  br label %191

191:                                              ; preds = %185, %189
  %192 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0, i32 0
  %193 = load %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %192, align 8
  %194 = icmp eq %"struct.std::__1::__hash_node_base.218"* %193, null
  br i1 %194, label %210, label %195

195:                                              ; preds = %191, %207
  %196 = phi %"struct.std::__1::__hash_node_base.218"* [ %198, %207 ], [ %193, %191 ]
  %197 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218", %"struct.std::__1::__hash_node_base.218"* %196, i64 0, i32 0
  %198 = load %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %197, align 8
  %199 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218", %"struct.std::__1::__hash_node_base.218"* %196, i64 2
  %200 = bitcast %"struct.std::__1::__hash_node_base.218"* %199 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %201 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %200, i64 0, i32 1, i32 0
  %202 = load i8, i8* %201, align 1
  %203 = icmp slt i8 %202, 0
  br i1 %203, label %204, label %207

204:                                              ; preds = %195
  %205 = bitcast %"struct.std::__1::__hash_node_base.218"* %199 to i8**
  %206 = load i8*, i8** %205, align 8
  tail call void @_ZdlPv(i8* %206) #16
  br label %207

207:                                              ; preds = %204, %195
  %208 = bitcast %"struct.std::__1::__hash_node_base.218"* %196 to i8*
  tail call void @_ZdlPv(i8* %208) #16
  %209 = icmp eq %"struct.std::__1::__hash_node_base.218"* %198, null
  br i1 %209, label %210, label %195

210:                                              ; preds = %207, %191
  %211 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load %"struct.std::__1::__hash_node_base.218"**, %"struct.std::__1::__hash_node_base.218"*** %211, align 8
  store %"struct.std::__1::__hash_node_base.218"** null, %"struct.std::__1::__hash_node_base.218"*** %211, align 8
  %213 = icmp eq %"struct.std::__1::__hash_node_base.218"** %212, null
  br i1 %213, label %216, label %214

214:                                              ; preds = %210
  %215 = bitcast %"struct.std::__1::__hash_node_base.218"** %212 to i8*
  tail call void @_ZdlPv(i8* %215) #16
  br label %216

216:                                              ; preds = %210, %214
  %217 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0, i32 0
  %218 = load %"struct.std::__1::__hash_node_base.194"*, %"struct.std::__1::__hash_node_base.194"** %217, align 8
  %219 = icmp eq %"struct.std::__1::__hash_node_base.194"* %218, null
  br i1 %219, label %226, label %220

220:                                              ; preds = %216, %220
  %221 = phi %"struct.std::__1::__hash_node_base.194"* [ %223, %220 ], [ %218, %216 ]
  %222 = getelementptr inbounds %"struct.std::__1::__hash_node_base.194", %"struct.std::__1::__hash_node_base.194"* %221, i64 0, i32 0
  %223 = load %"struct.std::__1::__hash_node_base.194"*, %"struct.std::__1::__hash_node_base.194"** %222, align 8
  %224 = bitcast %"struct.std::__1::__hash_node_base.194"* %221 to i8*
  tail call void @_ZdlPv(i8* %224) #16
  %225 = icmp eq %"struct.std::__1::__hash_node_base.194"* %223, null
  br i1 %225, label %226, label %220

226:                                              ; preds = %220, %216
  %227 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0
  %228 = load %"struct.std::__1::__hash_node_base.194"**, %"struct.std::__1::__hash_node_base.194"*** %227, align 8
  store %"struct.std::__1::__hash_node_base.194"** null, %"struct.std::__1::__hash_node_base.194"*** %227, align 8
  %229 = icmp eq %"struct.std::__1::__hash_node_base.194"** %228, null
  br i1 %229, label %232, label %230

230:                                              ; preds = %226
  %231 = bitcast %"struct.std::__1::__hash_node_base.194"** %228 to i8*
  tail call void @_ZdlPv(i8* %231) #16
  br label %232

232:                                              ; preds = %226, %230
  %233 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0, i32 0
  %234 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %233, align 8
  %235 = icmp eq %"struct.std::__1::__hash_node_base.166"* %234, null
  br i1 %235, label %242, label %236

236:                                              ; preds = %232, %236
  %237 = phi %"struct.std::__1::__hash_node_base.166"* [ %239, %236 ], [ %234, %232 ]
  %238 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %237, i64 0, i32 0
  %239 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %238, align 8
  %240 = bitcast %"struct.std::__1::__hash_node_base.166"* %237 to i8*
  tail call void @_ZdlPv(i8* %240) #16
  %241 = icmp eq %"struct.std::__1::__hash_node_base.166"* %239, null
  br i1 %241, label %242, label %236

242:                                              ; preds = %236, %232
  %243 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %244 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %243, align 8
  store %"struct.std::__1::__hash_node_base.166"** null, %"struct.std::__1::__hash_node_base.166"*** %243, align 8
  %245 = icmp eq %"struct.std::__1::__hash_node_base.166"** %244, null
  br i1 %245, label %248, label %246

246:                                              ; preds = %242
  %247 = bitcast %"struct.std::__1::__hash_node_base.166"** %244 to i8*
  tail call void @_ZdlPv(i8* %247) #16
  br label %248

248:                                              ; preds = %242, %246
  %249 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0, i32 0
  %250 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %249, align 8
  %251 = icmp eq %"struct.std::__1::__hash_node_base.138"* %250, null
  br i1 %251, label %258, label %252

252:                                              ; preds = %248, %252
  %253 = phi %"struct.std::__1::__hash_node_base.138"* [ %255, %252 ], [ %250, %248 ]
  %254 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %253, i64 0, i32 0
  %255 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %254, align 8
  %256 = bitcast %"struct.std::__1::__hash_node_base.138"* %253 to i8*
  tail call void @_ZdlPv(i8* %256) #16
  %257 = icmp eq %"struct.std::__1::__hash_node_base.138"* %255, null
  br i1 %257, label %258, label %252

258:                                              ; preds = %252, %248
  %259 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %260 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %259, align 8
  store %"struct.std::__1::__hash_node_base.138"** null, %"struct.std::__1::__hash_node_base.138"*** %259, align 8
  %261 = icmp eq %"struct.std::__1::__hash_node_base.138"** %260, null
  br i1 %261, label %264, label %262

262:                                              ; preds = %258
  %263 = bitcast %"struct.std::__1::__hash_node_base.138"** %260 to i8*
  tail call void @_ZdlPv(i8* %263) #16
  br label %264

264:                                              ; preds = %258, %262
  %265 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0
  %266 = load %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %265, align 8
  %267 = icmp eq %"struct.std::__1::__hash_node_base.113"* %266, null
  br i1 %267, label %274, label %268

268:                                              ; preds = %264, %268
  %269 = phi %"struct.std::__1::__hash_node_base.113"* [ %271, %268 ], [ %266, %264 ]
  %270 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %269, i64 0, i32 0
  %271 = load %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %270, align 8
  %272 = bitcast %"struct.std::__1::__hash_node_base.113"* %269 to i8*
  tail call void @_ZdlPv(i8* %272) #16
  %273 = icmp eq %"struct.std::__1::__hash_node_base.113"* %271, null
  br i1 %273, label %274, label %268

274:                                              ; preds = %268, %264
  %275 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %276 = load %"struct.std::__1::__hash_node_base.113"**, %"struct.std::__1::__hash_node_base.113"*** %275, align 8
  store %"struct.std::__1::__hash_node_base.113"** null, %"struct.std::__1::__hash_node_base.113"*** %275, align 8
  %277 = icmp eq %"struct.std::__1::__hash_node_base.113"** %276, null
  br i1 %277, label %280, label %278

278:                                              ; preds = %274
  %279 = bitcast %"struct.std::__1::__hash_node_base.113"** %276 to i8*
  tail call void @_ZdlPv(i8* %279) #16
  br label %280

280:                                              ; preds = %274, %278
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL18SPIRVCodeGeneratorD0Ev(%"class.SkSL::SPIRVCodeGenerator"*) unnamed_addr #5 comdat align 2 {
  tail call void @_ZN4SkSL18SPIRVCodeGeneratorD2Ev(%"class.SkSL::SPIRVCodeGenerator"* %0) #14
  %2 = bitcast %"class.SkSL::SPIRVCodeGenerator"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #16
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #11

declare zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL7LiteralIlED0Ev(%"class.SkSL::Literal"*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %"class.SkSL::Literal"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL7LiteralIlE11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::Literal"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %1, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  tail call void @_ZN4SkSL9to_stringEl(%"class.SkSL::String"* sret %0, i64 %4) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL7LiteralIlE21isCompileTimeConstantEv(%"class.SkSL::Literal"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK4SkSL7LiteralIlE15compareConstantERKNS_10ExpressionE(%"class.SkSL::Literal"*, %"class.SkSL::Expression"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 43
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %0, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 1
  %10 = bitcast %"class.SkSL::Expression"* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %8, %11
  %13 = zext i1 %12 to i32
  br label %14

14:                                               ; preds = %2, %6
  %15 = phi i32 [ %13, %6 ], [ -1, %2 ]
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL10Expression19isConstantOrUniformEv(%"class.SkSL::Expression"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.SkSL::Expression"* %0 to i1 (%"class.SkSL::Expression"*)***
  %3 = load i1 (%"class.SkSL::Expression"*)**, i1 (%"class.SkSL::Expression"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.SkSL::Expression"*)*, i1 (%"class.SkSL::Expression"*)** %3, i64 4
  %5 = load i1 (%"class.SkSL::Expression"*)*, i1 (%"class.SkSL::Expression"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.SkSL::Expression"* %0) #14
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL7LiteralIlE11hasPropertyENS_10Expression8PropertyE(%"class.SkSL::Literal"*, i32) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i8 } @_ZNK4SkSL7LiteralIlE12coercionCostERKNS_4TypeE(%"class.SkSL::Literal"*, %"class.SkSL::Type"* dereferenceable(184)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 4
  %4 = load i32, i32* %3, align 4
  %5 = icmp ult i32 %4, 3
  br i1 %5, label %20, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %20, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %0, i64 0, i32 0
  %12 = bitcast %"class.SkSL::Literal"* %0 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %13 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %12, align 8
  %14 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %13, i64 3
  %15 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %14, align 8
  %16 = tail call dereferenceable(184) %"class.SkSL::Type"* %15(%"class.SkSL::Expression"* %11) #14
  %17 = tail call { i64, i8 } @_ZNK4SkSL4Type12coercionCostERKS0_(%"class.SkSL::Type"* %16, %"class.SkSL::Type"* dereferenceable(184) %1) #14
  %18 = extractvalue { i64, i8 } %17, 0
  %19 = extractvalue { i64, i8 } %17, 1
  br label %20

20:                                               ; preds = %2, %6, %10
  %21 = phi i64 [ %18, %10 ], [ 0, %6 ], [ 0, %2 ]
  %22 = phi i8 [ %19, %10 ], [ 0, %6 ], [ 0, %2 ]
  %23 = insertvalue { i64, i8 } undef, i64 %21, 0
  %24 = insertvalue { i64, i8 } %23, i8 %22, 1
  ret { i64, i8 } %24
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL7LiteralIlE24getConstantSubexpressionEi(%"class.SkSL::Literal"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %0, i64 0, i32 0
  ret %"class.SkSL::Expression"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL7LiteralIlE5cloneEv(%"class.SkSL::Literal"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.SkSL::Type"** %3 to <2 x i64>*
  %5 = load <2 x i64>, <2 x i64>* %4, align 8
  %6 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #14
  %7 = load i32, i32* %2, align 4
  %8 = bitcast i8* %6 to i32 (...)***
  %9 = getelementptr inbounds i8, i8* %6, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 %7, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %6, i64 12
  %12 = bitcast i8* %11 to i32*
  store i32 43, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %6, i64 16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIlEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %14 = bitcast i8* %13 to <2 x i64>*
  store <2 x i64> %5, <2 x i64>* %14, align 8
  %15 = bitcast i8* %6 to %"class.SkSL::Expression"*
  ret %"class.SkSL::Expression"* %15
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i8 } @_ZNK4SkSL10Expression12coercionCostERKNS_4TypeE(%"class.SkSL::Expression"*, %"class.SkSL::Type"* dereferenceable(184)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.SkSL::Expression"* %0 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %4 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %4, i64 3
  %6 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %5, align 8
  %7 = tail call dereferenceable(184) %"class.SkSL::Type"* %6(%"class.SkSL::Expression"* %0) #14
  %8 = tail call { i64, i8 } @_ZNK4SkSL4Type12coercionCostERKS0_(%"class.SkSL::Type"* %7, %"class.SkSL::Type"* dereferenceable(184) %1) #14
  ret { i64, i8 } %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL6IRNodeD2Ev(%"class.SkSL::IRNode"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare { i64, i8 } @_ZNK4SkSL4Type12coercionCostERKS0_(%"class.SkSL::Type"*, %"class.SkSL::Type"* dereferenceable(184)) local_unnamed_addr #2

declare void @_ZN4SkSL4Pool10FreeMemoryEPv(i8*) local_unnamed_addr #2

declare void @_ZN4SkSL9to_stringEl(%"class.SkSL::String"* sret, i64) local_unnamed_addr #2

declare i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL19ConstructorCompoundD0Ev(%"class.SkSL::ConstructorCompound"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN4SkSL24MultiArgumentConstructorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 16
  %4 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 24
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = bitcast i8* %3 to %"class.std::__1::unique_ptr.336"**
  br label %15

11:                                               ; preds = %26, %1
  %12 = phi i64 [ %6, %1 ], [ %28, %26 ]
  %13 = and i64 %12, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %35, label %32

15:                                               ; preds = %26, %9
  %16 = phi i64 [ 0, %9 ], [ %27, %26 ]
  %17 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %10, align 8
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %17, i64 %16, i32 0, i32 0, i32 0
  %19 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %18, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %18, align 8
  %20 = icmp eq %"class.SkSL::Expression"* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = bitcast %"class.SkSL::Expression"* %19 to void (%"class.SkSL::Expression"*)***
  %23 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %23, i64 1
  %25 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %24, align 8
  tail call void %25(%"class.SkSL::Expression"* nonnull %19) #14
  br label %26

26:                                               ; preds = %21, %15
  %27 = add nuw nsw i64 %16, 1
  %28 = load i64, i64* %5, align 8
  %29 = lshr i64 %28, 1
  %30 = and i64 %29, 2147483647
  %31 = icmp ult i64 %27, %30
  br i1 %31, label %15, label %11

32:                                               ; preds = %11
  %33 = bitcast i8* %3 to i8**
  %34 = load i8*, i8** %33, align 8
  tail call void @_Z7sk_freePv(i8* %34) #14
  br label %35

35:                                               ; preds = %32, %11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN4SkSL14AnyConstructorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %36 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %37 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %36, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %36, align 8
  %38 = icmp eq %"class.SkSL::Expression"* %37, null
  br i1 %38, label %44, label %39

39:                                               ; preds = %35
  %40 = bitcast %"class.SkSL::Expression"* %37 to void (%"class.SkSL::Expression"*)***
  %41 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %41, i64 1
  %43 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %42, align 8
  tail call void %43(%"class.SkSL::Expression"* nonnull %37) #14
  br label %44

44:                                               ; preds = %35, %39
  %45 = bitcast %"class.SkSL::ConstructorCompound"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %45) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL14AnyConstructor11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::AnyConstructor"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = bitcast %"class.SkSL::String"* %3 to i8*
  %6 = bitcast %"class.SkSL::String"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #14
  %7 = getelementptr inbounds %"class.SkSL::AnyConstructor", %"class.SkSL::AnyConstructor"* %1, i64 0, i32 0
  %8 = bitcast %"class.SkSL::AnyConstructor"* %1 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %9 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %9, i64 3
  %11 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %10, align 8
  %12 = tail call dereferenceable(184) %"class.SkSL::Type"* %11(%"class.SkSL::Expression"* %7) #14
  %13 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %12, i64 0, i32 18
  %14 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %13, align 8, !noalias !95
  %15 = icmp eq %"class.SkSL::Type"* %14, null
  %16 = select i1 %15, %"class.SkSL::Type"* %12, %"class.SkSL::Type"* %14
  %17 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %16, i64 0, i32 0, i32 1, i32 0
  %18 = load i8*, i8** %17, align 8, !noalias !95
  %19 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %16, i64 0, i32 0, i32 1, i32 1
  %20 = load i64, i64* %19, align 8, !noalias !95
  %21 = icmp ugt i64 %20, -17
  br i1 %21, label %22, label %24

22:                                               ; preds = %2
  %23 = bitcast %"class.SkSL::String"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %23) #15
  unreachable

24:                                               ; preds = %2
  %25 = icmp ult i64 %20, 23
  br i1 %25, label %35, label %26

26:                                               ; preds = %24
  %27 = add nuw i64 %20, 16
  %28 = and i64 %27, -16
  %29 = tail call i8* @_Znwm(i64 %28) #16
  %30 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %29, i8** %30, align 8, !alias.scope !95
  %31 = or i64 %28, -9223372036854775808
  %32 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %31, i64* %32, align 8, !alias.scope !95
  %33 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %20, i64* %33, align 8, !alias.scope !95
  %34 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %40

35:                                               ; preds = %24
  %36 = trunc i64 %20 to i8
  %37 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  store i8 %36, i8* %38, align 1, !alias.scope !95
  %39 = icmp eq i64 %20, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %35, %26
  %41 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %37, %35 ], [ %34, %26 ]
  %42 = phi i8* [ %5, %35 ], [ %29, %26 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %42, i8* align 1 %18, i64 %20, i1 false) #14
  br label %43

43:                                               ; preds = %35, %40
  %44 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %37, %35 ], [ %41, %40 ]
  %45 = phi i8* [ %5, %35 ], [ %42, %40 ]
  %46 = getelementptr inbounds i8, i8* %45, i64 %20
  store i8 0, i8* %46, align 1
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* sret %0, %"class.SkSL::String"* nonnull %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #14
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @_ZdlPv(i8* %52) #16
  br label %53

53:                                               ; preds = %43, %50
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #14
  %54 = bitcast %"class.SkSL::AnyConstructor"* %1 to { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)***
  %55 = load { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)**, { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)*** %54, align 8
  %56 = getelementptr inbounds { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)** %55, i64 12
  %57 = load { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)** %56, align 8
  %58 = call { %"class.std::__1::unique_ptr.336"*, i64 } %57(%"class.SkSL::AnyConstructor"* %1) #14
  %59 = extractvalue { %"class.std::__1::unique_ptr.336"*, i64 } %58, 0
  %60 = extractvalue { %"class.std::__1::unique_ptr.336"*, i64 } %58, 1
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %59, i64 %60
  %62 = icmp eq i64 %60, 0
  br i1 %62, label %84, label %63

63:                                               ; preds = %53
  %64 = bitcast %"class.SkSL::String"* %4 to i8*
  %65 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* nonnull getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19, i64 0, i64 0)) #14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #14
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %59, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %69, align 8
  %71 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %70, i64 0, i32 0
  %72 = bitcast %"class.SkSL::Expression"* %70 to void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)***
  %73 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)**, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*** %72, align 8
  %74 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %73, i64 2
  %75 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %74, align 8
  call void %75(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::IRNode"* %71) #14
  %76 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %4) #14
  %77 = load i8, i8* %66, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %79, label %81

79:                                               ; preds = %63
  %80 = load i8*, i8** %67, align 8
  call void @_ZdlPv(i8* %80) #16
  br label %81

81:                                               ; preds = %79, %63
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #14
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %59, i64 1
  %83 = icmp eq i64 %60, 1
  br i1 %83, label %84, label %86

84:                                               ; preds = %81, %101, %53
  %85 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #14
  ret void

86:                                               ; preds = %81, %101
  %87 = phi %"class.std::__1::unique_ptr.336"* [ %102, %101 ], [ %82, %81 ]
  %88 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* nonnull getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0)) #14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #14
  %89 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %87, i64 0, i32 0, i32 0, i32 0
  %90 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %89, align 8
  %91 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %90, i64 0, i32 0
  %92 = bitcast %"class.SkSL::Expression"* %90 to void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)***
  %93 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)**, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %93, i64 2
  %95 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %94, align 8
  call void %95(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::IRNode"* %91) #14
  %96 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %4) #14
  %97 = load i8, i8* %66, align 1
  %98 = icmp slt i8 %97, 0
  br i1 %98, label %99, label %101

99:                                               ; preds = %86
  %100 = load i8*, i8** %67, align 8
  call void @_ZdlPv(i8* %100) #16
  br label %101

101:                                              ; preds = %86, %99
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #14
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %87, i64 1
  %103 = icmp eq %"class.std::__1::unique_ptr.336"* %102, %61
  br i1 %103, label %84, label %86, !llvm.loop !100
}

declare i32 @_ZNK4SkSL14AnyConstructor15compareConstantERKNS_10ExpressionE(%"class.SkSL::AnyConstructor"*, %"class.SkSL::Expression"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL14AnyConstructor19isConstantOrUniformEv(%"class.SkSL::AnyConstructor"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.SkSL::AnyConstructor"* %0 to { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)***
  %3 = load { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)**, { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)*** %2, align 8
  %4 = getelementptr inbounds { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)** %3, i64 12
  %5 = load { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)** %4, align 8
  %6 = tail call { %"class.std::__1::unique_ptr.336"*, i64 } %5(%"class.SkSL::AnyConstructor"* %0) #14
  %7 = extractvalue { %"class.std::__1::unique_ptr.336"*, i64 } %6, 0
  %8 = extractvalue { %"class.std::__1::unique_ptr.336"*, i64 } %6, 1
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %7, i64 %8
  %10 = icmp eq i64 %8, 0
  br i1 %10, label %23, label %13

11:                                               ; preds = %13
  %12 = icmp eq %"class.std::__1::unique_ptr.336"* %22, %9
  br i1 %12, label %23, label %13

13:                                               ; preds = %1, %11
  %14 = phi %"class.std::__1::unique_ptr.336"* [ %22, %11 ], [ %7, %1 ]
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %15, align 8
  %17 = bitcast %"class.SkSL::Expression"* %16 to i1 (%"class.SkSL::Expression"*)***
  %18 = load i1 (%"class.SkSL::Expression"*)**, i1 (%"class.SkSL::Expression"*)*** %17, align 8
  %19 = getelementptr inbounds i1 (%"class.SkSL::Expression"*)*, i1 (%"class.SkSL::Expression"*)** %18, i64 6
  %20 = load i1 (%"class.SkSL::Expression"*)*, i1 (%"class.SkSL::Expression"*)** %19, align 8
  %21 = tail call zeroext i1 %20(%"class.SkSL::Expression"* %16) #14
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %14, i64 1
  br i1 %21, label %11, label %23

23:                                               ; preds = %13, %11, %1
  %24 = phi i1 [ true, %1 ], [ true, %11 ], [ false, %13 ]
  ret i1 %24
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL14AnyConstructor11hasPropertyENS_10Expression8PropertyE(%"class.SkSL::AnyConstructor"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.SkSL::AnyConstructor"* %0 to { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)***
  %4 = load { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)**, { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)*** %3, align 8
  %5 = getelementptr inbounds { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)** %4, i64 12
  %6 = load { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr.336"*, i64 } (%"class.SkSL::AnyConstructor"*)** %5, align 8
  %7 = tail call { %"class.std::__1::unique_ptr.336"*, i64 } %6(%"class.SkSL::AnyConstructor"* %0) #14
  %8 = extractvalue { %"class.std::__1::unique_ptr.336"*, i64 } %7, 0
  %9 = extractvalue { %"class.std::__1::unique_ptr.336"*, i64 } %7, 1
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %8, i64 %9
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %24, label %14

12:                                               ; preds = %14
  %13 = icmp eq %"class.std::__1::unique_ptr.336"* %23, %10
  br i1 %13, label %24, label %14

14:                                               ; preds = %2, %12
  %15 = phi %"class.std::__1::unique_ptr.336"* [ %23, %12 ], [ %8, %2 ]
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %16, align 8
  %18 = bitcast %"class.SkSL::Expression"* %17 to i1 (%"class.SkSL::Expression"*, i32)***
  %19 = load i1 (%"class.SkSL::Expression"*, i32)**, i1 (%"class.SkSL::Expression"*, i32)*** %18, align 8
  %20 = getelementptr inbounds i1 (%"class.SkSL::Expression"*, i32)*, i1 (%"class.SkSL::Expression"*, i32)** %19, i64 7
  %21 = load i1 (%"class.SkSL::Expression"*, i32)*, i1 (%"class.SkSL::Expression"*, i32)** %20, align 8
  %22 = tail call zeroext i1 %21(%"class.SkSL::Expression"* %17, i32 %1) #14
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %15, i64 1
  br i1 %22, label %24, label %12

24:                                               ; preds = %12, %14, %2
  %25 = phi i1 [ false, %2 ], [ true, %14 ], [ false, %12 ]
  ret i1 %25
}

declare %"class.SkSL::Expression"* @_ZNK4SkSL14AnyConstructor24getConstantSubexpressionEi(%"class.SkSL::AnyConstructor"*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL19ConstructorCompound5cloneEv(%"class.SkSL::ConstructorCompound"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.SkSTArray, align 8
  %3 = alloca %class.SkSTArray, align 8
  %4 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %5, align 8
  %7 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %3, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #14
  %8 = getelementptr inbounds %"class.SkSL::ConstructorCompound", %"class.SkSL::ConstructorCompound"* %0, i64 0, i32 0
  call void @_ZNK4SkSL24MultiArgumentConstructor14cloneArgumentsEv(%class.SkSTArray* nonnull sret %3, %"class.SkSL::MultiArgumentConstructor"* %8)
  %9 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %2, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9)
  %10 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 64) #14
  %11 = bitcast i8* %10 to %"class.SkSL::ConstructorCompound"*
  %12 = load i32, i32* %4, align 4
  %13 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %2, i64 0, i32 0, i32 0, i64 16
  %14 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %2, i64 0, i32 0, i32 0, i64 24
  %15 = bitcast i8* %14 to i64*
  %16 = bitcast i8* %13 to i8**
  store i8* %9, i8** %16, align 8
  store i64 17179869184, i64* %15, align 8
  %17 = bitcast i8* %13 to %class.SkTArray*
  %18 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %3, i64 0, i32 0, i32 0, i64 16
  %19 = bitcast i8* %18 to %class.SkTArray*
  %20 = call dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray* %17, %class.SkTArray* dereferenceable(16) %19) #14
  call void @_ZN4SkSL19ConstructorCompoundC2EiRKNS_4TypeE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS5_14default_deleteIS7_EEEELb0EE(%"class.SkSL::ConstructorCompound"* %11, i32 %12, %"class.SkSL::Type"* dereferenceable(184) %6, %class.SkSTArray* nonnull %2) #14
  %21 = load i64, i64* %15, align 8
  %22 = and i64 %21, 4294967294
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %1
  %25 = bitcast i8* %13 to %"class.std::__1::unique_ptr.336"**
  br label %30

26:                                               ; preds = %41, %1
  %27 = phi i64 [ %21, %1 ], [ %43, %41 ]
  %28 = and i64 %27, 1
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %49, label %47

30:                                               ; preds = %41, %24
  %31 = phi i64 [ 0, %24 ], [ %42, %41 ]
  %32 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %25, align 8
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %32, i64 %31, i32 0, i32 0, i32 0
  %34 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %33, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %33, align 8
  %35 = icmp eq %"class.SkSL::Expression"* %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %30
  %37 = bitcast %"class.SkSL::Expression"* %34 to void (%"class.SkSL::Expression"*)***
  %38 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %38, i64 1
  %40 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %39, align 8
  call void %40(%"class.SkSL::Expression"* nonnull %34) #14
  br label %41

41:                                               ; preds = %36, %30
  %42 = add nuw nsw i64 %31, 1
  %43 = load i64, i64* %15, align 8
  %44 = lshr i64 %43, 1
  %45 = and i64 %44, 2147483647
  %46 = icmp ult i64 %42, %45
  br i1 %46, label %30, label %26

47:                                               ; preds = %26
  %48 = load i8*, i8** %16, align 8
  call void @_Z7sk_freePv(i8* %48) #14
  br label %49

49:                                               ; preds = %47, %26
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9)
  %50 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %3, i64 0, i32 0, i32 0, i64 24
  %51 = bitcast i8* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = and i64 %52, 4294967294
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %57, label %55

55:                                               ; preds = %49
  %56 = bitcast i8* %18 to %"class.std::__1::unique_ptr.336"**
  br label %61

57:                                               ; preds = %72, %49
  %58 = phi i64 [ %52, %49 ], [ %74, %72 ]
  %59 = and i64 %58, 1
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %81, label %78

61:                                               ; preds = %72, %55
  %62 = phi i64 [ 0, %55 ], [ %73, %72 ]
  %63 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %56, align 8
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %63, i64 %62, i32 0, i32 0, i32 0
  %65 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %64, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %64, align 8
  %66 = icmp eq %"class.SkSL::Expression"* %65, null
  br i1 %66, label %72, label %67

67:                                               ; preds = %61
  %68 = bitcast %"class.SkSL::Expression"* %65 to void (%"class.SkSL::Expression"*)***
  %69 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %69, i64 1
  %71 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %70, align 8
  call void %71(%"class.SkSL::Expression"* nonnull %65) #14
  br label %72

72:                                               ; preds = %67, %61
  %73 = add nuw nsw i64 %62, 1
  %74 = load i64, i64* %51, align 8
  %75 = lshr i64 %74, 1
  %76 = and i64 %75, 2147483647
  %77 = icmp ult i64 %73, %76
  br i1 %77, label %61, label %57

78:                                               ; preds = %57
  %79 = bitcast i8* %18 to i8**
  %80 = load i8*, i8** %79, align 8
  call void @_Z7sk_freePv(i8* %80) #14
  br label %81

81:                                               ; preds = %57, %78
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #14
  %82 = bitcast i8* %10 to %"class.SkSL::Expression"*
  ret %"class.SkSL::Expression"* %82
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::unique_ptr.336"*, i64 } @_ZN4SkSL24MultiArgumentConstructor12argumentSpanEv(%"class.SkSL::MultiArgumentConstructor"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::MultiArgumentConstructor", %"class.SkSL::MultiArgumentConstructor"* %0, i64 0, i32 1, i32 0, i32 0, i64 16
  %3 = bitcast i8* %2 to %"class.std::__1::unique_ptr.336"**
  %4 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %3, align 8
  %5 = getelementptr inbounds %"class.SkSL::MultiArgumentConstructor", %"class.SkSL::MultiArgumentConstructor"* %0, i64 0, i32 1, i32 0, i32 0, i64 24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 1
  %9 = and i64 %8, 2147483647
  %10 = insertvalue { %"class.std::__1::unique_ptr.336"*, i64 } undef, %"class.std::__1::unique_ptr.336"* %4, 0
  %11 = insertvalue { %"class.std::__1::unique_ptr.336"*, i64 } %10, i64 %9, 1
  ret { %"class.std::__1::unique_ptr.336"*, i64 } %11
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::unique_ptr.336"*, i64 } @_ZNK4SkSL24MultiArgumentConstructor12argumentSpanEv(%"class.SkSL::MultiArgumentConstructor"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::MultiArgumentConstructor", %"class.SkSL::MultiArgumentConstructor"* %0, i64 0, i32 1, i32 0, i32 0, i64 16
  %3 = bitcast i8* %2 to %"class.std::__1::unique_ptr.336"**
  %4 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %3, align 8
  %5 = getelementptr inbounds %"class.SkSL::MultiArgumentConstructor", %"class.SkSL::MultiArgumentConstructor"* %0, i64 0, i32 1, i32 0, i32 0, i64 24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 1
  %9 = and i64 %8, 2147483647
  %10 = insertvalue { %"class.std::__1::unique_ptr.336"*, i64 } undef, %"class.std::__1::unique_ptr.336"* %4, 0
  %11 = insertvalue { %"class.std::__1::unique_ptr.336"*, i64 } %10, i64 %9, 1
  ret { %"class.std::__1::unique_ptr.336"*, i64 } %11
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL24MultiArgumentConstructorD2Ev(%"class.SkSL::MultiArgumentConstructor"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::MultiArgumentConstructor", %"class.SkSL::MultiArgumentConstructor"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN4SkSL24MultiArgumentConstructorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::MultiArgumentConstructor", %"class.SkSL::MultiArgumentConstructor"* %0, i64 0, i32 1, i32 0, i32 0, i64 16
  %4 = getelementptr inbounds %"class.SkSL::MultiArgumentConstructor", %"class.SkSL::MultiArgumentConstructor"* %0, i64 0, i32 1, i32 0, i32 0, i64 24
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = bitcast i8* %3 to %"class.std::__1::unique_ptr.336"**
  br label %15

11:                                               ; preds = %26, %1
  %12 = phi i64 [ %6, %1 ], [ %28, %26 ]
  %13 = and i64 %12, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %35, label %32

15:                                               ; preds = %26, %9
  %16 = phi i64 [ 0, %9 ], [ %27, %26 ]
  %17 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %10, align 8
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %17, i64 %16, i32 0, i32 0, i32 0
  %19 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %18, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %18, align 8
  %20 = icmp eq %"class.SkSL::Expression"* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = bitcast %"class.SkSL::Expression"* %19 to void (%"class.SkSL::Expression"*)***
  %23 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %23, i64 1
  %25 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %24, align 8
  tail call void %25(%"class.SkSL::Expression"* nonnull %19) #14
  br label %26

26:                                               ; preds = %21, %15
  %27 = add nuw nsw i64 %16, 1
  %28 = load i64, i64* %5, align 8
  %29 = lshr i64 %28, 1
  %30 = and i64 %29, 2147483647
  %31 = icmp ult i64 %27, %30
  br i1 %31, label %15, label %11

32:                                               ; preds = %11
  %33 = bitcast i8* %3 to i8**
  %34 = load i8*, i8** %33, align 8
  tail call void @_Z7sk_freePv(i8* %34) #14
  br label %35

35:                                               ; preds = %11, %32
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN4SkSL14AnyConstructorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %36 = getelementptr inbounds %"class.SkSL::MultiArgumentConstructor", %"class.SkSL::MultiArgumentConstructor"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %37 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %36, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %36, align 8
  %38 = icmp eq %"class.SkSL::Expression"* %37, null
  br i1 %38, label %44, label %39

39:                                               ; preds = %35
  %40 = bitcast %"class.SkSL::Expression"* %37 to void (%"class.SkSL::Expression"*)***
  %41 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %41, i64 1
  %43 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %42, align 8
  tail call void %43(%"class.SkSL::Expression"* nonnull %37) #14
  br label %44

44:                                               ; preds = %35, %39
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL24MultiArgumentConstructorD0Ev(%"class.SkSL::MultiArgumentConstructor"*) unnamed_addr #5 comdat align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL24MultiArgumentConstructor14cloneArgumentsEv(%class.SkSTArray* noalias sret, %"class.SkSL::MultiArgumentConstructor"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %0, i64 0, i32 0, i32 0, i64 0
  %4 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %0, i64 0, i32 0, i32 0, i64 16
  %5 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %0, i64 0, i32 0, i32 0, i64 24
  %6 = bitcast i8* %5 to i64*
  %7 = bitcast i8* %4 to i8**
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 -86, i64 16, i1 false)
  store i8* %3, i8** %7, align 8
  store i64 17179869184, i64* %6, align 8
  %8 = bitcast i8* %4 to %class.SkTArray*
  %9 = getelementptr inbounds %"class.SkSL::MultiArgumentConstructor", %"class.SkSL::MultiArgumentConstructor"* %1, i64 0, i32 1, i32 0, i32 0, i64 16
  %10 = getelementptr inbounds %"class.SkSL::MultiArgumentConstructor", %"class.SkSL::MultiArgumentConstructor"* %1, i64 0, i32 1, i32 0, i32 0, i64 24
  %11 = bitcast i8* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = lshr i64 %12, 1
  %14 = trunc i64 %13 to i32
  %15 = and i32 %14, 2147483647
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %2
  tail call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %8, i32 %15, i32 0) #14
  %18 = load i64, i64* %6, align 8
  %19 = shl i64 %18, 32
  %20 = and i64 %19, 4294967296
  %21 = and i64 %18, -4294967297
  %22 = or i64 %20, %21
  br label %23

23:                                               ; preds = %2, %17
  %24 = phi i64 [ %22, %17 ], [ 17179869184, %2 ]
  store i64 %24, i64* %6, align 8
  %25 = bitcast i8* %9 to %"class.std::__1::unique_ptr.336"**
  %26 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %25, align 8
  %27 = icmp eq %"class.std::__1::unique_ptr.336"* %26, null
  br i1 %27, label %58, label %28

28:                                               ; preds = %23
  %29 = load i64, i64* %11, align 8
  %30 = lshr i64 %29, 1
  %31 = and i64 %30, 2147483647
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %26, i64 %31
  %33 = icmp eq i64 %31, 0
  br i1 %33, label %58, label %34

34:                                               ; preds = %28
  %35 = bitcast i8* %4 to %"class.std::__1::unique_ptr.336"**
  br label %36

36:                                               ; preds = %34, %36
  %37 = phi %"class.std::__1::unique_ptr.336"* [ %26, %34 ], [ %56, %36 ]
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %37, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %38, align 8
  %40 = bitcast %"class.SkSL::Expression"* %39 to %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)***
  %41 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*** %40, align 8
  %42 = getelementptr inbounds %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %41, i64 10
  %43 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %42, align 8
  %44 = tail call %"class.SkSL::Expression"* %43(%"class.SkSL::Expression"* %39) #14
  %45 = ptrtoint %"class.SkSL::Expression"* %44 to i64
  tail call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %8, i32 1, i32 1) #14
  %46 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %35, align 8
  %47 = load i64, i64* %6, align 8
  %48 = lshr i64 %47, 1
  %49 = and i64 %48, 2147483647
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %46, i64 %49
  %51 = add i64 %47, 2
  %52 = and i64 %51, 4294967294
  %53 = and i64 %47, -4294967295
  %54 = or i64 %52, %53
  store i64 %54, i64* %6, align 8
  %55 = bitcast %"class.std::__1::unique_ptr.336"* %50 to i64*
  store i64 %45, i64* %55, align 8
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %37, i64 1
  %57 = icmp eq %"class.std::__1::unique_ptr.336"* %56, %32
  br i1 %57, label %58, label %36

58:                                               ; preds = %36, %23, %28
  ret void
}

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL7LiteralIfED0Ev(%"class.SkSL::Literal.430"*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %"class.SkSL::Literal.430"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL7LiteralIfE11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::Literal.430"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %1, i64 0, i32 1
  %4 = load float, float* %3, align 8
  %5 = fpext float %4 to double
  tail call void @_ZN4SkSL9to_stringEd(%"class.SkSL::String"* sret %0, double %5) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL7LiteralIfE21isCompileTimeConstantEv(%"class.SkSL::Literal.430"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK4SkSL7LiteralIfE15compareConstantERKNS_10ExpressionE(%"class.SkSL::Literal.430"*, %"class.SkSL::Expression"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 45
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %0, i64 0, i32 1
  %8 = load float, float* %7, align 8
  %9 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 1
  %10 = bitcast %"class.SkSL::Expression"* %9 to float*
  %11 = load float, float* %10, align 8
  %12 = fcmp oeq float %8, %11
  %13 = zext i1 %12 to i32
  br label %14

14:                                               ; preds = %2, %6
  %15 = phi i32 [ %13, %6 ], [ -1, %2 ]
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL7LiteralIfE11hasPropertyENS_10Expression8PropertyE(%"class.SkSL::Literal.430"*, i32) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i8 } @_ZNK4SkSL7LiteralIfE12coercionCostERKNS_4TypeE(%"class.SkSL::Literal.430"*, %"class.SkSL::Type"* dereferenceable(184)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 4
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %16, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %0, i64 0, i32 0
  %8 = bitcast %"class.SkSL::Literal.430"* %0 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %9 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %9, i64 3
  %11 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %10, align 8
  %12 = tail call dereferenceable(184) %"class.SkSL::Type"* %11(%"class.SkSL::Expression"* %7) #14
  %13 = tail call { i64, i8 } @_ZNK4SkSL4Type12coercionCostERKS0_(%"class.SkSL::Type"* %12, %"class.SkSL::Type"* dereferenceable(184) %1) #14
  %14 = extractvalue { i64, i8 } %13, 0
  %15 = extractvalue { i64, i8 } %13, 1
  br label %16

16:                                               ; preds = %2, %6
  %17 = phi i64 [ %14, %6 ], [ 0, %2 ]
  %18 = phi i8 [ %15, %6 ], [ 0, %2 ]
  %19 = insertvalue { i64, i8 } undef, i64 %17, 0
  %20 = insertvalue { i64, i8 } %19, i8 %18, 1
  ret { i64, i8 } %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL7LiteralIfE24getConstantSubexpressionEi(%"class.SkSL::Literal.430"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %0, i64 0, i32 0
  ret %"class.SkSL::Expression"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL7LiteralIfE5cloneEv(%"class.SkSL::Literal.430"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %0, i64 0, i32 1
  %4 = bitcast float* %3 to i32*
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::Literal.430", %"class.SkSL::Literal.430"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.SkSL::Type"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #14
  %10 = load i32, i32* %2, align 4
  %11 = bitcast i8* %9 to i32 (...)***
  %12 = getelementptr inbounds i8, i8* %9, i64 8
  %13 = bitcast i8* %12 to i32*
  store i32 %10, i32* %13, align 8
  %14 = getelementptr inbounds i8, i8* %9, i64 12
  %15 = bitcast i8* %14 to i32*
  store i32 45, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %9, i64 16
  %17 = bitcast i8* %16 to i64*
  store i64 %8, i64* %17, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIfEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %18 = getelementptr inbounds i8, i8* %9, i64 24
  %19 = bitcast i8* %18 to i32*
  store i32 %5, i32* %19, align 8
  %20 = bitcast i8* %9 to %"class.SkSL::Expression"*
  ret %"class.SkSL::Expression"* %20
}

declare void @_ZN4SkSL9to_stringEd(%"class.SkSL::String"* sret, double) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL4TypeD2Ev(%"class.SkSL::Type"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 10, i32 0, i32 0
  %4 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %3, align 8
  %5 = icmp eq %"struct.SkSL::Type::Field"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.SkSL::Type::Field"* %4 to i64
  %8 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 10, i32 0, i32 1
  %9 = bitcast %"struct.SkSL::Type::Field"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.SkSL::Type::Field"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #16
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 7, i32 0, i32 0
  %13 = load %"class.SkSL::Type"**, %"class.SkSL::Type"*** %12, align 8
  %14 = icmp eq %"class.SkSL::Type"** %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint %"class.SkSL::Type"** %13 to i64
  %17 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 7, i32 0, i32 1
  %18 = bitcast %"class.SkSL::Type"*** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast %"class.SkSL::Type"** %13 to i8*
  tail call void @_ZdlPv(i8* %19) #16
  br label %20

20:                                               ; preds = %11, %15
  %21 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 2, i32 0
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #16
  br label %29

29:                                               ; preds = %20, %26
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL4TypeD0Ev(%"class.SkSL::Type"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 10, i32 0, i32 0
  %4 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %3, align 8
  %5 = icmp eq %"struct.SkSL::Type::Field"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.SkSL::Type::Field"* %4 to i64
  %8 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 10, i32 0, i32 1
  %9 = bitcast %"struct.SkSL::Type::Field"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.SkSL::Type::Field"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #16
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 7, i32 0, i32 0
  %13 = load %"class.SkSL::Type"**, %"class.SkSL::Type"*** %12, align 8
  %14 = icmp eq %"class.SkSL::Type"** %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint %"class.SkSL::Type"** %13 to i64
  %17 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 7, i32 0, i32 1
  %18 = bitcast %"class.SkSL::Type"*** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast %"class.SkSL::Type"** %13 to i8*
  tail call void @_ZdlPv(i8* %19) #16
  br label %20

20:                                               ; preds = %15, %11
  %21 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 2, i32 0
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #16
  br label %29

29:                                               ; preds = %20, %26
  %30 = bitcast %"class.SkSL::Type"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %30) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"struct.SkSL::Modifiers"* dereferenceable(80), %"struct.SkSL::Modifiers"* dereferenceable(80)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %1, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %1, i64 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = sext i32 %8 to i64
  %10 = shl nsw i64 %9, 8
  %11 = xor i64 %10, %6
  %12 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %1, i64 0, i32 0, i32 6
  %13 = load i32, i32* %12, align 8
  %14 = sext i32 %13 to i64
  %15 = shl nsw i64 %14, 16
  %16 = xor i64 %11, %15
  %17 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %74, label %20

20:                                               ; preds = %3
  %21 = tail call i64 @llvm.ctpop.i64(i64 %18) #14, !range !12
  %22 = icmp ugt i64 %21, 1
  br i1 %22, label %26, label %23

23:                                               ; preds = %20
  %24 = add i64 %18, -1
  %25 = and i64 %16, %24
  br label %30

26:                                               ; preds = %20
  %27 = icmp ult i64 %16, %18
  br i1 %27, label %30, label %28

28:                                               ; preds = %26
  %29 = urem i64 %16, %18
  br label %30

30:                                               ; preds = %23, %26, %28
  %31 = phi i64 [ %25, %23 ], [ %29, %28 ], [ %16, %26 ]
  %32 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %33, i64 %31
  %35 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %34, align 8
  %36 = icmp eq %"struct.std::__1::__hash_node_base"* %35, null
  br i1 %36, label %74, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %35, i64 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base"* %39, null
  br i1 %40, label %74, label %41

41:                                               ; preds = %37
  %42 = add i64 %18, -1
  %43 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %1, i64 0, i32 0
  br label %44

44:                                               ; preds = %41, %70
  %45 = phi %"struct.std::__1::__hash_node_base"* [ %39, %41 ], [ %72, %70 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %45, i64 1
  %47 = bitcast %"struct.std::__1::__hash_node_base"* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = icmp eq i64 %48, %16
  br i1 %49, label %60, label %50

50:                                               ; preds = %44
  br i1 %22, label %53, label %51

51:                                               ; preds = %50
  %52 = and i64 %48, %42
  br label %57

53:                                               ; preds = %50
  %54 = icmp ult i64 %48, %18
  br i1 %54, label %57, label %55

55:                                               ; preds = %53
  %56 = urem i64 %48, %18
  br label %57

57:                                               ; preds = %51, %53, %55
  %58 = phi i64 [ %52, %51 ], [ %56, %55 ], [ %48, %53 ]
  %59 = icmp eq i64 %58, %31
  br i1 %59, label %60, label %74

60:                                               ; preds = %44, %57
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %45, i64 2
  %62 = bitcast %"struct.std::__1::__hash_node_base"* %61 to %"struct.SkSL::Layout"*
  %63 = tail call zeroext i1 @_ZNK4SkSL6LayouteqERKS0_(%"struct.SkSL::Layout"* %62, %"struct.SkSL::Layout"* dereferenceable(72) %43) #14
  br i1 %63, label %64, label %70

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %45, i64 11
  %66 = bitcast %"struct.std::__1::__hash_node_base"* %65 to i32*
  %67 = load i32, i32* %66, align 8
  %68 = load i32, i32* %4, align 8
  %69 = icmp eq i32 %67, %68
  br i1 %69, label %160, label %70

70:                                               ; preds = %64, %60
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %45, i64 0, i32 0
  %72 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %71, align 8
  %73 = icmp eq %"struct.std::__1::__hash_node_base"* %72, null
  br i1 %73, label %74, label %44

74:                                               ; preds = %57, %70, %37, %30, %3
  %75 = phi i64 [ %31, %30 ], [ -6148914691236517206, %3 ], [ %31, %37 ], [ %31, %70 ], [ %31, %57 ]
  %76 = tail call i8* @_Znwm(i64 96) #16, !noalias !101
  %77 = getelementptr inbounds i8, i8* %76, i64 16
  %78 = bitcast %"struct.SkSL::Modifiers"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 80, i1 false) #14, !noalias !101
  %79 = getelementptr inbounds i8, i8* %76, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %16, i64* %80, align 8, !noalias !101
  %81 = bitcast i8* %76 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %81, align 8, !noalias !101
  %82 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %18 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %19, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %74
  %93 = shl i64 %18, 1
  %94 = icmp ult i64 %18, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %18) #14, !range !12
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #14
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %104)
  %105 = load i64, i64* %17, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #14, !range !12
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %16
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %16, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %16, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %74
  %116 = phi i64 [ %18, %74 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %75, %74 ], [ %110, %108 ], [ %16, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %76 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base"* %124 to i8**
  store i8* %76, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base"* %124, %"struct.std::__1::__hash_node_base"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #14, !range !12
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %76 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %76, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %76 to %"struct.std::__1::__hash_node_base"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base"* [ %157, %156 ], [ %45, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !12
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #14
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #14, !range !12
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #14
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #14, !range !12
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #14
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL6LayouteqERKS0_(%"struct.SkSL::Layout"*, %"struct.SkSL::Layout"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %81

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %81

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %16, %18
  br i1 %19, label %20, label %81

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 3
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %22, %24
  br i1 %25, label %26, label %81

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 4
  %28 = load i32, i32* %27, align 8
  %29 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %28, %30
  br i1 %31, label %32, label %81

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 5
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 5
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %34, %36
  br i1 %37, label %38, label %81

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 6
  %40 = load i32, i32* %39, align 8
  %41 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 6
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %40, %42
  br i1 %43, label %44, label %81

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 7
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 7
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %46, %48
  br i1 %49, label %50, label %81

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 8
  %52 = load i32, i32* %51, align 8
  %53 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 8
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %52, %54
  br i1 %55, label %56, label %81

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 9
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 9
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %58, %60
  br i1 %61, label %62, label %81

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 10
  %64 = load i32, i32* %63, align 8
  %65 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 10
  %66 = load i32, i32* %65, align 8
  %67 = icmp eq i32 %64, %66
  br i1 %67, label %68, label %81

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 12
  %70 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 12, i32 0
  %71 = load i8*, i8** %70, align 8
  %72 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 12, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = tail call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* %69, i8* %71, i64 %73) #14
  br i1 %74, label %75, label %81

75:                                               ; preds = %68
  %76 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 13
  %77 = load i32, i32* %76, align 8
  %78 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 13
  %79 = load i32, i32* %78, align 8
  %80 = icmp eq i32 %77, %79
  br label %81

81:                                               ; preds = %75, %68, %62, %56, %50, %44, %38, %32, %26, %20, %14, %8, %2
  %82 = phi i1 [ false, %68 ], [ false, %62 ], [ false, %56 ], [ false, %50 ], [ false, %44 ], [ false, %38 ], [ false, %32 ], [ false, %26 ], [ false, %20 ], [ false, %14 ], [ false, %8 ], [ false, %2 ], [ %80, %75 ]
  ret i1 %82
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %151, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #15
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #16
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #16
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !104

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %159, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #14, !range !12
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %159, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %145
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %149, %145 ]
  %81 = phi i64 [ %71, %77 ], [ %147, %145 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %146, %145 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %145, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %112, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 11
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to i32*
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 0, i32 0
  %104 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %103, align 8
  %105 = icmp eq %"struct.std::__1::__hash_node_base"* %104, null
  br i1 %105, label %131, label %106

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %108 = bitcast %"struct.std::__1::__hash_node_base"* %107 to %"struct.SkSL::Layout"*
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %104, i64 2
  %110 = bitcast %"struct.std::__1::__hash_node_base"* %109 to %"struct.SkSL::Layout"*
  %111 = tail call zeroext i1 @_ZNK4SkSL6LayouteqERKS0_(%"struct.SkSL::Layout"* %108, %"struct.SkSL::Layout"* dereferenceable(72) %110) #14
  br i1 %111, label %117, label %131

112:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %145

113:                                              ; preds = %126
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %129, i64 2
  %115 = bitcast %"struct.std::__1::__hash_node_base"* %114 to %"struct.SkSL::Layout"*
  %116 = tail call zeroext i1 @_ZNK4SkSL6LayouteqERKS0_(%"struct.SkSL::Layout"* %108, %"struct.SkSL::Layout"* dereferenceable(72) %115) #14
  br i1 %116, label %117, label %131

117:                                              ; preds = %106, %113
  %118 = phi %"struct.std::__1::__hash_node_base"* [ %127, %113 ], [ %80, %106 ]
  %119 = phi %"struct.std::__1::__hash_node_base"** [ %128, %113 ], [ %103, %106 ]
  %120 = phi %"struct.std::__1::__hash_node_base"* [ %129, %113 ], [ %104, %106 ]
  %121 = load i32, i32* %102, align 8
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 11
  %123 = bitcast %"struct.std::__1::__hash_node_base"* %122 to i32*
  %124 = load i32, i32* %123, align 8
  %125 = icmp eq i32 %121, %124
  br i1 %125, label %126, label %131

126:                                              ; preds = %117
  %127 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %119, align 8
  %128 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %127, i64 0, i32 0
  %129 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %128, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base"* %129, null
  br i1 %130, label %131, label %113

131:                                              ; preds = %113, %126, %117, %106, %100
  %132 = phi %"struct.std::__1::__hash_node_base"* [ %80, %100 ], [ %80, %106 ], [ %118, %117 ], [ %127, %126 ], [ %127, %113 ]
  %133 = bitcast %"struct.std::__1::__hash_node_base"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %134, i64* %135, align 8
  %136 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %137 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %136, i64 %93
  %138 = bitcast %"struct.std::__1::__hash_node_base"** %137 to i64**
  %139 = load i64*, i64** %138, align 8
  %140 = load i64, i64* %139, align 8
  store i64 %140, i64* %133, align 8
  %141 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %141, i64 %93
  %143 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %142, align 8
  %144 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %143, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %144, align 8
  br label %145

145:                                              ; preds = %92, %131, %112
  %146 = phi %"struct.std::__1::__hash_node_base"* [ %80, %112 ], [ %82, %131 ], [ %80, %92 ]
  %147 = phi i64 [ %93, %112 ], [ %81, %131 ], [ %81, %92 ]
  %148 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %146, i64 0, i32 0
  %149 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %148, align 8
  %150 = icmp eq %"struct.std::__1::__hash_node_base"* %149, null
  br i1 %150, label %159, label %79

151:                                              ; preds = %2
  %152 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %153 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %152, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %152, align 8
  %154 = icmp eq %"struct.std::__1::__hash_node_base"** %153, null
  br i1 %154, label %157, label %155

155:                                              ; preds = %151
  %156 = bitcast %"struct.std::__1::__hash_node_base"** %153 to i8*
  tail call void @_ZdlPv(i8* %156) #16
  br label %157

157:                                              ; preds = %151, %155
  %158 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %158, align 8
  br label %159

159:                                              ; preds = %145, %70, %35, %157
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #12

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #12

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL14InterfaceBlockD0Ev(%"class.SkSL::InterfaceBlock"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL14InterfaceBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %0, i64 0, i32 5, i32 1
  %4 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %3, align 8
  %5 = icmp eq %"class.std::__1::__shared_weak_count"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %4, i64 0, i32 0, i32 1
  %8 = atomicrmw add i64* %7, i64 -1 acq_rel
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %4, i64 0, i32 0
  %12 = bitcast %"class.std::__1::__shared_weak_count"* %4 to void (%"class.std::__1::__shared_count"*)***
  %13 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %13, i64 2
  %15 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %14, align 8
  tail call void %15(%"class.std::__1::__shared_count"* %11) #14
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %4) #14
  br label %16

16:                                               ; preds = %10, %6, %1
  %17 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %0, i64 0, i32 3, i32 0
  %18 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  tail call void @_ZdlPv(i8* %24) #16
  br label %25

25:                                               ; preds = %22, %16
  %26 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %0, i64 0, i32 2, i32 0
  %27 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  tail call void @_ZdlPv(i8* %33) #16
  br label %34

34:                                               ; preds = %25, %31
  %35 = bitcast %"class.SkSL::InterfaceBlock"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %35) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL14InterfaceBlock11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::InterfaceBlock"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #14
  %10 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.SkSL::String"* %4 to i8*
  %12 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #14
  %13 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #14
  %14 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %1, i64 0, i32 1
  %15 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %14, align 8
  %16 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %15, i64 0, i32 2
  %17 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %16, align 8
  call void @_ZNK4SkSL9Modifiers11descriptionEv(%"class.SkSL::String"* nonnull sret %5, %"struct.SkSL::Modifiers"* %17)
  %18 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %1, i64 0, i32 2
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::String"* nonnull %5, %"class.SkSL::String"* dereferenceable(24) %18) #14
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %3, %"class.SkSL::String"* nonnull %4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i64 0, i64 0)) #14
  %19 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %25) #16
  br label %26

26:                                               ; preds = %2, %23
  %27 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %33) #16
  br label %34

34:                                               ; preds = %26, %31
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #14
  %35 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %14, align 8
  %36 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %35, i64 0, i32 0, i32 2
  %37 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %36, align 8
  %38 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %37, i64 0, i32 3
  %39 = load i32, i32* %38, align 8
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %46

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %37, i64 0, i32 6
  %43 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %42, align 8
  %44 = icmp eq %"class.SkSL::Type"* %43, null
  %45 = select i1 %44, %"class.SkSL::Type"* %37, %"class.SkSL::Type"* %43
  br label %46

46:                                               ; preds = %41, %34
  %47 = phi %"class.SkSL::Type"* [ %45, %41 ], [ %37, %34 ]
  %48 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %47, i64 0, i32 10, i32 0, i32 0
  %49 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %48, align 8
  %50 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %47, i64 0, i32 10, i32 0, i32 1
  %51 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %50, align 8
  %52 = icmp eq %"struct.SkSL::Type::Field"* %49, %51
  br i1 %52, label %62, label %53

53:                                               ; preds = %46
  %54 = bitcast %"class.SkSL::String"* %6 to i8*
  %55 = bitcast %"class.SkSL::String"* %7 to i8*
  %56 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %77

62:                                               ; preds = %89, %46
  %63 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* nonnull %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.44, i64 0, i64 0)) #14
  %64 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %1, i64 0, i32 3
  %65 = bitcast %"class.SkSL::String"* %64 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %62
  %70 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %71 = load i64, i64* %70, align 8
  br label %74

72:                                               ; preds = %62
  %73 = zext i8 %67 to i64
  br label %74

74:                                               ; preds = %69, %72
  %75 = phi i64 [ %71, %69 ], [ %73, %72 ]
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %111, label %92

77:                                               ; preds = %53, %89
  %78 = phi %"struct.SkSL::Type::Field"* [ %49, %53 ], [ %90, %89 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #14
  call void @_ZNK4SkSL4Type5Field11descriptionEv(%"class.SkSL::String"* nonnull sret %7, %"struct.SkSL::Type::Field"* %78)
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %6, %"class.SkSL::String"* nonnull %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.43, i64 0, i64 0)) #14
  %79 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* nonnull %3, %"class.SkSL::String"* nonnull dereferenceable(24) %6) #14
  %80 = load i8, i8* %57, align 1
  %81 = icmp slt i8 %80, 0
  br i1 %81, label %82, label %84

82:                                               ; preds = %77
  %83 = load i8*, i8** %58, align 8
  call void @_ZdlPv(i8* %83) #16
  br label %84

84:                                               ; preds = %77, %82
  %85 = load i8, i8* %60, align 1
  %86 = icmp slt i8 %85, 0
  br i1 %86, label %87, label %89

87:                                               ; preds = %84
  %88 = load i8*, i8** %61, align 8
  call void @_ZdlPv(i8* %88) #16
  br label %89

89:                                               ; preds = %84, %87
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #14
  %90 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %78, i64 1
  %91 = icmp eq %"struct.SkSL::Type::Field"* %90, %51
  br i1 %91, label %62, label %77

92:                                               ; preds = %74
  %93 = bitcast %"class.SkSL::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %93) #14
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.45, i64 0, i64 0), %"class.SkSL::String"* dereferenceable(24) %64) #14
  %94 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* nonnull %3, %"class.SkSL::String"* nonnull dereferenceable(24) %8) #14
  %95 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %96 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %95, i64 0, i32 1, i32 0
  %97 = load i8, i8* %96, align 1
  %98 = icmp slt i8 %97, 0
  br i1 %98, label %99, label %102

99:                                               ; preds = %92
  %100 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load i8*, i8** %100, align 8
  call void @_ZdlPv(i8* %101) #16
  br label %102

102:                                              ; preds = %92, %99
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93) #14
  %103 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %1, i64 0, i32 4
  %104 = load i32, i32* %103, align 8
  %105 = icmp sgt i32 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %102
  call void (%"class.SkSL::String"*, i8*, ...) @_ZN4SkSL6String7appendfEPKcz(%"class.SkSL::String"* nonnull %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i64 0, i64 0), i32 %104) #14
  br label %111

107:                                              ; preds = %102
  %108 = icmp eq i32 %104, -1
  br i1 %108, label %109, label %111

109:                                              ; preds = %107
  %110 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* nonnull %3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.47, i64 0, i64 0)) #14
  br label %111

111:                                              ; preds = %106, %109, %107, %74
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* sret %0, %"class.SkSL::String"* nonnull %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i64 0, i64 0)) #14
  %112 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %113 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %112, i64 0, i32 1, i32 0
  %114 = load i8, i8* %113, align 1
  %115 = icmp slt i8 %114, 0
  br i1 %115, label %116, label %118

116:                                              ; preds = %111
  %117 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %117) #16
  br label %118

118:                                              ; preds = %111, %116
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::ProgramElement"* @_ZNK4SkSL14InterfaceBlock5cloneEv(%"class.SkSL::InterfaceBlock"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.SkSL::String", align 8
  %3 = alloca %"class.SkSL::String", align 8
  %4 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %0, i64 0, i32 1
  %6 = bitcast %"class.SkSL::Variable"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %0, i64 0, i32 3
  %10 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %0, i64 0, i32 4
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %0, i64 0, i32 5, i32 0
  %13 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %12, align 8
  %14 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %0, i64 0, i32 5, i32 1
  %15 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %14, align 8
  %16 = icmp eq %"class.std::__1::__shared_weak_count"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %15, i64 0, i32 0, i32 1
  %19 = atomicrmw add i64* %18, i64 1 monotonic
  br label %20

20:                                               ; preds = %1, %17
  %21 = tail call { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } @_ZN4SkSL11SymbolTable13WrapIfBuiltinENSt3__110shared_ptrIS0_EE(%"class.SkSL::SymbolTable"* %13, %"class.std::__1::__shared_weak_count"* %15)
  %22 = extractvalue { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } %21, 0
  %23 = ptrtoint %"class.SkSL::SymbolTable"* %22 to i64
  %24 = extractvalue { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } %21, 1
  %25 = ptrtoint %"class.std::__1::__shared_weak_count"* %24 to i64
  %26 = bitcast %"class.SkSL::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26)
  %27 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27)
  %28 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 96) #14
  %29 = load i32, i32* %4, align 4
  %30 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %36, label %34

34:                                               ; preds = %20
  %35 = bitcast %"class.SkSL::String"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %26, i8* align 8 %35, i64 24, i1 false) #14
  br label %42

36:                                               ; preds = %20
  %37 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0
  %38 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %37, i8* %39, i64 %41) #14
  br label %42

42:                                               ; preds = %36, %34
  %43 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %49, label %47

47:                                               ; preds = %42
  %48 = bitcast %"class.SkSL::String"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %27, i8* align 8 %48, i64 24, i1 false) #14
  br label %55

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0
  %51 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %50, i8* %52, i64 %54) #14
  br label %55

55:                                               ; preds = %47, %49
  %56 = getelementptr inbounds i8, i8* %28, i64 8
  %57 = bitcast i8* %56 to i32*
  store i32 %29, i32* %57, align 8
  %58 = getelementptr inbounds i8, i8* %28, i64 12
  %59 = bitcast i8* %58 to i32*
  store i32 5, i32* %59, align 4
  %60 = bitcast i8* %28 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL14InterfaceBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %60, align 8
  %61 = getelementptr inbounds i8, i8* %28, i64 16
  %62 = bitcast i8* %61 to i64*
  store i64 %7, i64* %62, align 8
  %63 = getelementptr inbounds i8, i8* %28, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* nonnull align 8 %26, i64 24, i1 false) #14
  %64 = getelementptr inbounds i8, i8* %28, i64 48
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* nonnull align 8 %27, i64 24, i1 false) #14
  %65 = getelementptr inbounds i8, i8* %28, i64 72
  %66 = bitcast i8* %65 to i32*
  store i32 %11, i32* %66, align 8
  %67 = getelementptr inbounds i8, i8* %28, i64 80
  %68 = bitcast i8* %67 to i64*
  store i64 %23, i64* %68, align 8
  %69 = getelementptr inbounds i8, i8* %28, i64 88
  %70 = bitcast i8* %69 to i64*
  store i64 %25, i64* %70, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27)
  %71 = bitcast i8* %28 to %"class.SkSL::ProgramElement"*
  ret %"class.SkSL::ProgramElement"* %71
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL9Modifiers11descriptionEv(%"class.SkSL::String"* noalias sret, %"struct.SkSL::Modifiers"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %1, i64 0, i32 0
  %4 = bitcast %"class.SkSL::String"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 -86, i64 24, i1 false)
  tail call void @_ZNK4SkSL6Layout11descriptionEv(%"class.SkSL::String"* sret %0, %"struct.SkSL::Layout"* %3)
  %5 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = tail call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.49, i64 0, i64 0)) #14
  %11 = load i32, i32* %5, align 8
  br label %12

12:                                               ; preds = %2, %9
  %13 = phi i32 [ %6, %2 ], [ %11, %9 ]
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %12
  %17 = tail call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.50, i64 0, i64 0)) #14
  %18 = load i32, i32* %5, align 8
  br label %19

19:                                               ; preds = %12, %16
  %20 = phi i32 [ %13, %12 ], [ %18, %16 ]
  %21 = and i32 %20, 16
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %19
  %24 = tail call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.51, i64 0, i64 0)) #14
  %25 = load i32, i32* %5, align 8
  br label %26

26:                                               ; preds = %19, %23
  %27 = phi i32 [ %20, %19 ], [ %25, %23 ]
  %28 = and i32 %27, 32
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %26
  %31 = tail call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.52, i64 0, i64 0)) #14
  %32 = load i32, i32* %5, align 8
  br label %33

33:                                               ; preds = %26, %30
  %34 = phi i32 [ %27, %26 ], [ %32, %30 ]
  %35 = and i32 %34, 64
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %33
  %38 = tail call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.53, i64 0, i64 0)) #14
  %39 = load i32, i32* %5, align 8
  br label %40

40:                                               ; preds = %33, %37
  %41 = phi i32 [ %34, %33 ], [ %39, %37 ]
  %42 = and i32 %41, 512
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %40
  %45 = tail call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.54, i64 0, i64 0)) #14
  %46 = load i32, i32* %5, align 8
  br label %47

47:                                               ; preds = %40, %44
  %48 = phi i32 [ %41, %40 ], [ %46, %44 ]
  %49 = and i32 %48, 6
  %50 = icmp eq i32 %49, 6
  br i1 %50, label %57, label %51

51:                                               ; preds = %47
  %52 = and i32 %48, 2
  %53 = icmp eq i32 %52, 0
  %54 = and i32 %48, 6
  %55 = icmp eq i32 %54, 0
  %56 = select i1 %53, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.56, i64 0, i64 0)
  br i1 %55, label %60, label %57

57:                                               ; preds = %51, %47
  %58 = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.55, i64 0, i64 0), %47 ], [ %56, %51 ]
  %59 = tail call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* %58) #14
  br label %60

60:                                               ; preds = %51, %57
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL4Type5Field11descriptionEv(%"class.SkSL::String"* noalias sret, %"struct.SkSL::Type::Field"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #14
  %7 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #14
  %8 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #14
  %9 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %1, i64 0, i32 2
  %10 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %9, align 8
  %11 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %10, i64 0, i32 18
  %12 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %11, align 8, !noalias !105
  %13 = icmp eq %"class.SkSL::Type"* %12, null
  %14 = select i1 %13, %"class.SkSL::Type"* %10, %"class.SkSL::Type"* %12
  %15 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %14, i64 0, i32 0, i32 1, i32 0
  %16 = load i8*, i8** %15, align 8, !noalias !105
  %17 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %14, i64 0, i32 0, i32 1, i32 1
  %18 = load i64, i64* %17, align 8, !noalias !105
  %19 = icmp ugt i64 %18, -17
  br i1 %19, label %20, label %22

20:                                               ; preds = %2
  %21 = bitcast %"class.SkSL::String"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %21) #15
  unreachable

22:                                               ; preds = %2
  %23 = icmp ult i64 %18, 23
  br i1 %23, label %32, label %24

24:                                               ; preds = %22
  %25 = add nuw i64 %18, 16
  %26 = and i64 %25, -16
  %27 = tail call i8* @_Znwm(i64 %26) #16
  %28 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %27, i8** %28, align 8, !alias.scope !105
  %29 = or i64 %26, -9223372036854775808
  %30 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %29, i64* %30, align 8, !alias.scope !105
  %31 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %18, i64* %31, align 8, !alias.scope !105
  br label %37

32:                                               ; preds = %22
  %33 = trunc i64 %18 to i8
  %34 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  store i8 %33, i8* %35, align 1, !alias.scope !105
  %36 = icmp eq i64 %18, 0
  br i1 %36, label %39, label %37

37:                                               ; preds = %32, %24
  %38 = phi i8* [ %27, %24 ], [ %8, %32 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %38, i8* align 1 %16, i64 %18, i1 false) #14
  br label %39

39:                                               ; preds = %32, %37
  %40 = phi i8* [ %8, %32 ], [ %38, %37 ]
  %41 = getelementptr inbounds i8, i8* %40, i64 %18
  store i8 0, i8* %41, align 1
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::String"* nonnull %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.45, i64 0, i64 0)) #14
  %42 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %1, i64 0, i32 1, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %1, i64 0, i32 1, i32 1
  %45 = load i64, i64* %44, align 8
  call void @_ZNK4SkSL6StringplENS_14StringFragmentE(%"class.SkSL::String"* nonnull sret %3, %"class.SkSL::String"* nonnull %4, i8* %43, i64 %45) #14
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* sret %0, %"class.SkSL::String"* nonnull %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i64 0, i64 0)) #14
  %46 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %39
  %51 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @_ZdlPv(i8* %52) #16
  br label %53

53:                                               ; preds = %39, %50
  %54 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  call void @_ZdlPv(i8* %60) #16
  br label %61

61:                                               ; preds = %53, %58
  %62 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %64 = load i8, i8* %63, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  call void @_ZdlPv(i8* %68) #16
  br label %69

69:                                               ; preds = %61, %66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #14
  ret void
}

declare void @_ZN4SkSL6String7appendfEPKcz(%"class.SkSL::String"*, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL6Layout11descriptionEv(%"class.SkSL::String"* noalias sret, %"struct.SkSL::Layout"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = alloca %"class.SkSL::String", align 8
  %10 = alloca %"class.SkSL::String", align 8
  %11 = alloca %"class.SkSL::String", align 8
  %12 = alloca %"class.SkSL::String", align 8
  %13 = alloca %"class.SkSL::String", align 8
  %14 = alloca %"class.SkSL::String", align 8
  %15 = alloca %"class.SkSL::String", align 8
  %16 = alloca %"class.SkSL::String", align 8
  %17 = alloca %"class.SkSL::String", align 8
  %18 = alloca %"class.SkSL::String", align 8
  %19 = alloca %"class.SkSL::String", align 8
  %20 = alloca %"class.SkSL::String", align 8
  %21 = alloca %"class.SkSL::String", align 8
  %22 = alloca %"class.SkSL::String", align 8
  %23 = alloca %"class.SkSL::String", align 8
  %24 = alloca %"class.SkSL::String", align 8
  %25 = alloca %"class.SkSL::String", align 8
  %26 = alloca %"class.SkSL::String", align 8
  %27 = alloca %"class.SkSL::String", align 8
  %28 = alloca %"class.SkSL::String", align 8
  %29 = alloca %"class.SkSL::String", align 8
  %30 = alloca %"class.SkSL::String", align 8
  %31 = alloca %"class.SkSL::String", align 8
  %32 = alloca %"class.SkSL::String", align 8
  %33 = alloca %"class.SkSL::String", align 8
  %34 = alloca %"class.SkSL::String", align 8
  %35 = alloca %"class.SkSL::String", align 8
  %36 = alloca %"class.SkSL::String", align 8
  %37 = alloca %"class.SkSL::String", align 8
  %38 = alloca %"class.SkSL::String", align 8
  %39 = alloca %"class.SkSL::String", align 8
  %40 = alloca %"class.SkSL::String", align 8
  %41 = alloca %"class.SkSL::String", align 8
  %42 = alloca %"class.SkSL::String", align 8
  %43 = alloca %"class.SkSL::String", align 8
  %44 = alloca %"class.SkSL::String", align 8
  %45 = alloca %"class.SkSL::String", align 8
  %46 = alloca %"class.SkSL::String", align 8
  %47 = alloca %"class.SkSL::String", align 8
  %48 = alloca %"class.SkSL::String", align 8
  %49 = alloca %"class.SkSL::String", align 8
  %50 = alloca %"class.SkSL::String", align 8
  %51 = alloca %"class.SkSL::String", align 8
  %52 = alloca %"class.SkSL::String", align 8
  %53 = alloca %"class.SkSL::String", align 8
  %54 = alloca %"class.SkSL::String", align 8
  %55 = alloca %"class.SkSL::String", align 8
  %56 = alloca %"class.SkSL::String", align 8
  %57 = alloca %"class.SkSL::String", align 8
  %58 = alloca %"class.SkSL::String", align 8
  %59 = alloca %"class.SkSL::String", align 8
  %60 = alloca %"class.SkSL::String", align 8
  %61 = alloca %"class.SkSL::String", align 8
  %62 = alloca %"class.SkSL::String", align 8
  %63 = alloca %"class.SkSL::String", align 8
  %64 = alloca %"class.SkSL::String", align 8
  %65 = alloca %"class.SkSL::String", align 8
  %66 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = bitcast %"class.SkSL::String"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 24, i1 false) #14
  %69 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = icmp sgt i32 %70, -1
  br i1 %71, label %72, label %111

72:                                               ; preds = %2
  %73 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #14
  %74 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #14
  %75 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #14
  %76 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  store i8 0, i8* %77, align 1, !alias.scope !108
  store i8 0, i8* %75, align 8, !alias.scope !108
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::String"* nonnull %5, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.58, i64 0, i64 0)) #14
  %78 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %78) #14
  %79 = load i32, i32* %69, align 4
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %6, i32 %79) #14
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %3, %"class.SkSL::String"* nonnull %4, %"class.SkSL::String"* nonnull dereferenceable(24) %6) #14
  %80 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %3) #14
  %81 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %81, i64 0, i32 1, i32 0
  %83 = load i8, i8* %82, align 1
  %84 = icmp slt i8 %83, 0
  br i1 %84, label %85, label %88

85:                                               ; preds = %72
  %86 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load i8*, i8** %86, align 8
  call void @_ZdlPv(i8* %87) #16
  br label %88

88:                                               ; preds = %72, %85
  %89 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %90 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %89, i64 0, i32 1, i32 0
  %91 = load i8, i8* %90, align 1
  %92 = icmp slt i8 %91, 0
  br i1 %92, label %93, label %96

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load i8*, i8** %94, align 8
  call void @_ZdlPv(i8* %95) #16
  br label %96

96:                                               ; preds = %88, %93
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %78) #14
  %97 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %97, i64 0, i32 1, i32 0
  %99 = load i8, i8* %98, align 1
  %100 = icmp slt i8 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load i8*, i8** %102, align 8
  call void @_ZdlPv(i8* %103) #16
  br label %104

104:                                              ; preds = %96, %101
  %105 = load i8, i8* %77, align 1
  %106 = icmp slt i8 %105, 0
  br i1 %106, label %107, label %110

107:                                              ; preds = %104
  %108 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load i8*, i8** %108, align 8
  call void @_ZdlPv(i8* %109) #16
  br label %110

110:                                              ; preds = %104, %107
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #14
  br label %111

111:                                              ; preds = %110, %2
  %112 = phi i8 [ 0, %110 ], [ 1, %2 ]
  %113 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 2
  %114 = load i32, i32* %113, align 8
  %115 = icmp sgt i32 %114, -1
  br i1 %115, label %116, label %161

116:                                              ; preds = %111
  %117 = bitcast %"class.SkSL::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %117) #14
  %118 = bitcast %"class.SkSL::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %118) #14
  %119 = bitcast %"class.SkSL::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %119) #14
  %120 = icmp eq i8 %112, 0
  %121 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %122 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %121, i64 0, i32 1, i32 0
  br i1 %120, label %124, label %123

123:                                              ; preds = %116
  store i8 0, i8* %122, align 1, !alias.scope !111
  store i8 0, i8* %119, align 8, !alias.scope !111
  br label %127

124:                                              ; preds = %116
  store i8 2, i8* %122, align 1, !alias.scope !111
  %125 = bitcast %"class.SkSL::String"* %9 to i16*
  store i16 8236, i16* %125, align 8, !alias.scope !111
  %126 = getelementptr inbounds i8, i8* %119, i64 2
  store i8 0, i8* %126, align 2, !alias.scope !111
  br label %127

127:                                              ; preds = %123, %124
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %8, %"class.SkSL::String"* nonnull %9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.59, i64 0, i64 0)) #14
  %128 = bitcast %"class.SkSL::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %128) #14
  %129 = load i32, i32* %113, align 8
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %10, i32 %129) #14
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %7, %"class.SkSL::String"* nonnull %8, %"class.SkSL::String"* nonnull dereferenceable(24) %10) #14
  %130 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %7) #14
  %131 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %132 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %131, i64 0, i32 1, i32 0
  %133 = load i8, i8* %132, align 1
  %134 = icmp slt i8 %133, 0
  br i1 %134, label %135, label %138

135:                                              ; preds = %127
  %136 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load i8*, i8** %136, align 8
  call void @_ZdlPv(i8* %137) #16
  br label %138

138:                                              ; preds = %127, %135
  %139 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %140 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %139, i64 0, i32 1, i32 0
  %141 = load i8, i8* %140, align 1
  %142 = icmp slt i8 %141, 0
  br i1 %142, label %143, label %146

143:                                              ; preds = %138
  %144 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load i8*, i8** %144, align 8
  call void @_ZdlPv(i8* %145) #16
  br label %146

146:                                              ; preds = %138, %143
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %128) #14
  %147 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %148 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %147, i64 0, i32 1, i32 0
  %149 = load i8, i8* %148, align 1
  %150 = icmp slt i8 %149, 0
  br i1 %150, label %151, label %154

151:                                              ; preds = %146
  %152 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load i8*, i8** %152, align 8
  call void @_ZdlPv(i8* %153) #16
  br label %154

154:                                              ; preds = %146, %151
  %155 = load i8, i8* %122, align 1
  %156 = icmp slt i8 %155, 0
  br i1 %156, label %157, label %160

157:                                              ; preds = %154
  %158 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load i8*, i8** %158, align 8
  call void @_ZdlPv(i8* %159) #16
  br label %160

160:                                              ; preds = %154, %157
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %119) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %118) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %117) #14
  br label %161

161:                                              ; preds = %160, %111
  %162 = phi i8 [ 0, %160 ], [ %112, %111 ]
  %163 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 3
  %164 = load i32, i32* %163, align 4
  %165 = icmp sgt i32 %164, -1
  br i1 %165, label %166, label %211

166:                                              ; preds = %161
  %167 = bitcast %"class.SkSL::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %167) #14
  %168 = bitcast %"class.SkSL::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %168) #14
  %169 = bitcast %"class.SkSL::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %169) #14
  %170 = icmp eq i8 %162, 0
  %171 = bitcast %"class.SkSL::String"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %172 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %171, i64 0, i32 1, i32 0
  br i1 %170, label %174, label %173

173:                                              ; preds = %166
  store i8 0, i8* %172, align 1, !alias.scope !114
  store i8 0, i8* %169, align 8, !alias.scope !114
  br label %177

174:                                              ; preds = %166
  store i8 2, i8* %172, align 1, !alias.scope !114
  %175 = bitcast %"class.SkSL::String"* %13 to i16*
  store i16 8236, i16* %175, align 8, !alias.scope !114
  %176 = getelementptr inbounds i8, i8* %169, i64 2
  store i8 0, i8* %176, align 2, !alias.scope !114
  br label %177

177:                                              ; preds = %173, %174
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %12, %"class.SkSL::String"* nonnull %13, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.60, i64 0, i64 0)) #14
  %178 = bitcast %"class.SkSL::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %178) #14
  %179 = load i32, i32* %163, align 4
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %14, i32 %179) #14
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %11, %"class.SkSL::String"* nonnull %12, %"class.SkSL::String"* nonnull dereferenceable(24) %14) #14
  %180 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %11) #14
  %181 = bitcast %"class.SkSL::String"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %182 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %181, i64 0, i32 1, i32 0
  %183 = load i8, i8* %182, align 1
  %184 = icmp slt i8 %183, 0
  br i1 %184, label %185, label %188

185:                                              ; preds = %177
  %186 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %187 = load i8*, i8** %186, align 8
  call void @_ZdlPv(i8* %187) #16
  br label %188

188:                                              ; preds = %177, %185
  %189 = bitcast %"class.SkSL::String"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %190 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %189, i64 0, i32 1, i32 0
  %191 = load i8, i8* %190, align 1
  %192 = icmp slt i8 %191, 0
  br i1 %192, label %193, label %196

193:                                              ; preds = %188
  %194 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %195 = load i8*, i8** %194, align 8
  call void @_ZdlPv(i8* %195) #16
  br label %196

196:                                              ; preds = %188, %193
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %178) #14
  %197 = bitcast %"class.SkSL::String"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %198 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %197, i64 0, i32 1, i32 0
  %199 = load i8, i8* %198, align 1
  %200 = icmp slt i8 %199, 0
  br i1 %200, label %201, label %204

201:                                              ; preds = %196
  %202 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %203 = load i8*, i8** %202, align 8
  call void @_ZdlPv(i8* %203) #16
  br label %204

204:                                              ; preds = %196, %201
  %205 = load i8, i8* %172, align 1
  %206 = icmp slt i8 %205, 0
  br i1 %206, label %207, label %210

207:                                              ; preds = %204
  %208 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %209 = load i8*, i8** %208, align 8
  call void @_ZdlPv(i8* %209) #16
  br label %210

210:                                              ; preds = %204, %207
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %169) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %168) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %167) #14
  br label %211

211:                                              ; preds = %210, %161
  %212 = phi i8 [ 0, %210 ], [ %162, %161 ]
  %213 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 4
  %214 = load i32, i32* %213, align 8
  %215 = icmp sgt i32 %214, -1
  br i1 %215, label %216, label %261

216:                                              ; preds = %211
  %217 = bitcast %"class.SkSL::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %217) #14
  %218 = bitcast %"class.SkSL::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %218) #14
  %219 = bitcast %"class.SkSL::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %219) #14
  %220 = icmp eq i8 %212, 0
  %221 = bitcast %"class.SkSL::String"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %222 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %221, i64 0, i32 1, i32 0
  br i1 %220, label %224, label %223

223:                                              ; preds = %216
  store i8 0, i8* %222, align 1, !alias.scope !117
  store i8 0, i8* %219, align 8, !alias.scope !117
  br label %227

224:                                              ; preds = %216
  store i8 2, i8* %222, align 1, !alias.scope !117
  %225 = bitcast %"class.SkSL::String"* %17 to i16*
  store i16 8236, i16* %225, align 8, !alias.scope !117
  %226 = getelementptr inbounds i8, i8* %219, i64 2
  store i8 0, i8* %226, align 2, !alias.scope !117
  br label %227

227:                                              ; preds = %223, %224
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %16, %"class.SkSL::String"* nonnull %17, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.61, i64 0, i64 0)) #14
  %228 = bitcast %"class.SkSL::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %228) #14
  %229 = load i32, i32* %213, align 8
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %18, i32 %229) #14
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %15, %"class.SkSL::String"* nonnull %16, %"class.SkSL::String"* nonnull dereferenceable(24) %18) #14
  %230 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %15) #14
  %231 = bitcast %"class.SkSL::String"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %232 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %231, i64 0, i32 1, i32 0
  %233 = load i8, i8* %232, align 1
  %234 = icmp slt i8 %233, 0
  br i1 %234, label %235, label %238

235:                                              ; preds = %227
  %236 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %237 = load i8*, i8** %236, align 8
  call void @_ZdlPv(i8* %237) #16
  br label %238

238:                                              ; preds = %227, %235
  %239 = bitcast %"class.SkSL::String"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %240 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %239, i64 0, i32 1, i32 0
  %241 = load i8, i8* %240, align 1
  %242 = icmp slt i8 %241, 0
  br i1 %242, label %243, label %246

243:                                              ; preds = %238
  %244 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %245 = load i8*, i8** %244, align 8
  call void @_ZdlPv(i8* %245) #16
  br label %246

246:                                              ; preds = %238, %243
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %228) #14
  %247 = bitcast %"class.SkSL::String"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %248 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %247, i64 0, i32 1, i32 0
  %249 = load i8, i8* %248, align 1
  %250 = icmp slt i8 %249, 0
  br i1 %250, label %251, label %254

251:                                              ; preds = %246
  %252 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %253 = load i8*, i8** %252, align 8
  call void @_ZdlPv(i8* %253) #16
  br label %254

254:                                              ; preds = %246, %251
  %255 = load i8, i8* %222, align 1
  %256 = icmp slt i8 %255, 0
  br i1 %256, label %257, label %260

257:                                              ; preds = %254
  %258 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %259 = load i8*, i8** %258, align 8
  call void @_ZdlPv(i8* %259) #16
  br label %260

260:                                              ; preds = %254, %257
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %219) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %218) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %217) #14
  br label %261

261:                                              ; preds = %260, %211
  %262 = phi i8 [ 0, %260 ], [ %212, %211 ]
  %263 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 5
  %264 = load i32, i32* %263, align 4
  %265 = icmp sgt i32 %264, -1
  br i1 %265, label %266, label %311

266:                                              ; preds = %261
  %267 = bitcast %"class.SkSL::String"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %267) #14
  %268 = bitcast %"class.SkSL::String"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %268) #14
  %269 = bitcast %"class.SkSL::String"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %269) #14
  %270 = icmp eq i8 %262, 0
  %271 = bitcast %"class.SkSL::String"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %272 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %271, i64 0, i32 1, i32 0
  br i1 %270, label %274, label %273

273:                                              ; preds = %266
  store i8 0, i8* %272, align 1, !alias.scope !120
  store i8 0, i8* %269, align 8, !alias.scope !120
  br label %277

274:                                              ; preds = %266
  store i8 2, i8* %272, align 1, !alias.scope !120
  %275 = bitcast %"class.SkSL::String"* %21 to i16*
  store i16 8236, i16* %275, align 8, !alias.scope !120
  %276 = getelementptr inbounds i8, i8* %269, i64 2
  store i8 0, i8* %276, align 2, !alias.scope !120
  br label %277

277:                                              ; preds = %273, %274
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %20, %"class.SkSL::String"* nonnull %21, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.62, i64 0, i64 0)) #14
  %278 = bitcast %"class.SkSL::String"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %278) #14
  %279 = load i32, i32* %263, align 4
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %22, i32 %279) #14
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %19, %"class.SkSL::String"* nonnull %20, %"class.SkSL::String"* nonnull dereferenceable(24) %22) #14
  %280 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %19) #14
  %281 = bitcast %"class.SkSL::String"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %282 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %281, i64 0, i32 1, i32 0
  %283 = load i8, i8* %282, align 1
  %284 = icmp slt i8 %283, 0
  br i1 %284, label %285, label %288

285:                                              ; preds = %277
  %286 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %287 = load i8*, i8** %286, align 8
  call void @_ZdlPv(i8* %287) #16
  br label %288

288:                                              ; preds = %277, %285
  %289 = bitcast %"class.SkSL::String"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %290 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %289, i64 0, i32 1, i32 0
  %291 = load i8, i8* %290, align 1
  %292 = icmp slt i8 %291, 0
  br i1 %292, label %293, label %296

293:                                              ; preds = %288
  %294 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %295 = load i8*, i8** %294, align 8
  call void @_ZdlPv(i8* %295) #16
  br label %296

296:                                              ; preds = %288, %293
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %278) #14
  %297 = bitcast %"class.SkSL::String"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %298 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %297, i64 0, i32 1, i32 0
  %299 = load i8, i8* %298, align 1
  %300 = icmp slt i8 %299, 0
  br i1 %300, label %301, label %304

301:                                              ; preds = %296
  %302 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %303 = load i8*, i8** %302, align 8
  call void @_ZdlPv(i8* %303) #16
  br label %304

304:                                              ; preds = %296, %301
  %305 = load i8, i8* %272, align 1
  %306 = icmp slt i8 %305, 0
  br i1 %306, label %307, label %310

307:                                              ; preds = %304
  %308 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %309 = load i8*, i8** %308, align 8
  call void @_ZdlPv(i8* %309) #16
  br label %310

310:                                              ; preds = %304, %307
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %269) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %268) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %267) #14
  br label %311

311:                                              ; preds = %310, %261
  %312 = phi i8 [ 0, %310 ], [ %262, %261 ]
  %313 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 6
  %314 = load i32, i32* %313, align 8
  %315 = icmp sgt i32 %314, -1
  br i1 %315, label %316, label %361

316:                                              ; preds = %311
  %317 = bitcast %"class.SkSL::String"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %317) #14
  %318 = bitcast %"class.SkSL::String"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %318) #14
  %319 = bitcast %"class.SkSL::String"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %319) #14
  %320 = icmp eq i8 %312, 0
  %321 = bitcast %"class.SkSL::String"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %322 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %321, i64 0, i32 1, i32 0
  br i1 %320, label %324, label %323

323:                                              ; preds = %316
  store i8 0, i8* %322, align 1, !alias.scope !123
  store i8 0, i8* %319, align 8, !alias.scope !123
  br label %327

324:                                              ; preds = %316
  store i8 2, i8* %322, align 1, !alias.scope !123
  %325 = bitcast %"class.SkSL::String"* %25 to i16*
  store i16 8236, i16* %325, align 8, !alias.scope !123
  %326 = getelementptr inbounds i8, i8* %319, i64 2
  store i8 0, i8* %326, align 2, !alias.scope !123
  br label %327

327:                                              ; preds = %323, %324
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %24, %"class.SkSL::String"* nonnull %25, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.63, i64 0, i64 0)) #14
  %328 = bitcast %"class.SkSL::String"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %328) #14
  %329 = load i32, i32* %313, align 8
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %26, i32 %329) #14
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %23, %"class.SkSL::String"* nonnull %24, %"class.SkSL::String"* nonnull dereferenceable(24) %26) #14
  %330 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %23) #14
  %331 = bitcast %"class.SkSL::String"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %332 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %331, i64 0, i32 1, i32 0
  %333 = load i8, i8* %332, align 1
  %334 = icmp slt i8 %333, 0
  br i1 %334, label %335, label %338

335:                                              ; preds = %327
  %336 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %337 = load i8*, i8** %336, align 8
  call void @_ZdlPv(i8* %337) #16
  br label %338

338:                                              ; preds = %327, %335
  %339 = bitcast %"class.SkSL::String"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %340 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %339, i64 0, i32 1, i32 0
  %341 = load i8, i8* %340, align 1
  %342 = icmp slt i8 %341, 0
  br i1 %342, label %343, label %346

343:                                              ; preds = %338
  %344 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %345 = load i8*, i8** %344, align 8
  call void @_ZdlPv(i8* %345) #16
  br label %346

346:                                              ; preds = %338, %343
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %328) #14
  %347 = bitcast %"class.SkSL::String"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %348 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %347, i64 0, i32 1, i32 0
  %349 = load i8, i8* %348, align 1
  %350 = icmp slt i8 %349, 0
  br i1 %350, label %351, label %354

351:                                              ; preds = %346
  %352 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %353 = load i8*, i8** %352, align 8
  call void @_ZdlPv(i8* %353) #16
  br label %354

354:                                              ; preds = %346, %351
  %355 = load i8, i8* %322, align 1
  %356 = icmp slt i8 %355, 0
  br i1 %356, label %357, label %360

357:                                              ; preds = %354
  %358 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %359 = load i8*, i8** %358, align 8
  call void @_ZdlPv(i8* %359) #16
  br label %360

360:                                              ; preds = %354, %357
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %319) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %318) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %317) #14
  br label %361

361:                                              ; preds = %360, %311
  %362 = phi i8 [ 0, %360 ], [ %312, %311 ]
  %363 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 7
  %364 = load i32, i32* %363, align 4
  %365 = icmp sgt i32 %364, -1
  br i1 %365, label %366, label %411

366:                                              ; preds = %361
  %367 = bitcast %"class.SkSL::String"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %367) #14
  %368 = bitcast %"class.SkSL::String"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %368) #14
  %369 = bitcast %"class.SkSL::String"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %369) #14
  %370 = icmp eq i8 %362, 0
  %371 = bitcast %"class.SkSL::String"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %372 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %371, i64 0, i32 1, i32 0
  br i1 %370, label %374, label %373

373:                                              ; preds = %366
  store i8 0, i8* %372, align 1, !alias.scope !126
  store i8 0, i8* %369, align 8, !alias.scope !126
  br label %377

374:                                              ; preds = %366
  store i8 2, i8* %372, align 1, !alias.scope !126
  %375 = bitcast %"class.SkSL::String"* %29 to i16*
  store i16 8236, i16* %375, align 8, !alias.scope !126
  %376 = getelementptr inbounds i8, i8* %369, i64 2
  store i8 0, i8* %376, align 2, !alias.scope !126
  br label %377

377:                                              ; preds = %373, %374
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %28, %"class.SkSL::String"* nonnull %29, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.64, i64 0, i64 0)) #14
  %378 = bitcast %"class.SkSL::String"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %378) #14
  %379 = load i32, i32* %363, align 4
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %30, i32 %379) #14
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %27, %"class.SkSL::String"* nonnull %28, %"class.SkSL::String"* nonnull dereferenceable(24) %30) #14
  %380 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %27) #14
  %381 = bitcast %"class.SkSL::String"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %382 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %381, i64 0, i32 1, i32 0
  %383 = load i8, i8* %382, align 1
  %384 = icmp slt i8 %383, 0
  br i1 %384, label %385, label %388

385:                                              ; preds = %377
  %386 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %387 = load i8*, i8** %386, align 8
  call void @_ZdlPv(i8* %387) #16
  br label %388

388:                                              ; preds = %377, %385
  %389 = bitcast %"class.SkSL::String"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %390 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %389, i64 0, i32 1, i32 0
  %391 = load i8, i8* %390, align 1
  %392 = icmp slt i8 %391, 0
  br i1 %392, label %393, label %396

393:                                              ; preds = %388
  %394 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %395 = load i8*, i8** %394, align 8
  call void @_ZdlPv(i8* %395) #16
  br label %396

396:                                              ; preds = %388, %393
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %378) #14
  %397 = bitcast %"class.SkSL::String"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %398 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %397, i64 0, i32 1, i32 0
  %399 = load i8, i8* %398, align 1
  %400 = icmp slt i8 %399, 0
  br i1 %400, label %401, label %404

401:                                              ; preds = %396
  %402 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %403 = load i8*, i8** %402, align 8
  call void @_ZdlPv(i8* %403) #16
  br label %404

404:                                              ; preds = %396, %401
  %405 = load i8, i8* %372, align 1
  %406 = icmp slt i8 %405, 0
  br i1 %406, label %407, label %410

407:                                              ; preds = %404
  %408 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %409 = load i8*, i8** %408, align 8
  call void @_ZdlPv(i8* %409) #16
  br label %410

410:                                              ; preds = %404, %407
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %369) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %368) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %367) #14
  br label %411

411:                                              ; preds = %410, %361
  %412 = phi i8 [ 0, %410 ], [ %362, %361 ]
  %413 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 0
  %414 = load i32, i32* %413, align 8
  %415 = and i32 %414, 1
  %416 = icmp eq i32 %415, 0
  br i1 %416, label %444, label %417

417:                                              ; preds = %411
  %418 = bitcast %"class.SkSL::String"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %418) #14
  %419 = bitcast %"class.SkSL::String"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %419) #14
  %420 = icmp eq i8 %412, 0
  %421 = bitcast %"class.SkSL::String"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %422 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %421, i64 0, i32 1, i32 0
  br i1 %420, label %424, label %423

423:                                              ; preds = %417
  store i8 0, i8* %422, align 1, !alias.scope !129
  store i8 0, i8* %419, align 8, !alias.scope !129
  br label %427

424:                                              ; preds = %417
  store i8 2, i8* %422, align 1, !alias.scope !129
  %425 = bitcast %"class.SkSL::String"* %32 to i16*
  store i16 8236, i16* %425, align 8, !alias.scope !129
  %426 = getelementptr inbounds i8, i8* %419, i64 2
  store i8 0, i8* %426, align 2, !alias.scope !129
  br label %427

427:                                              ; preds = %423, %424
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %31, %"class.SkSL::String"* nonnull %32, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.65, i64 0, i64 0)) #14
  %428 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %31) #14
  %429 = bitcast %"class.SkSL::String"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %430 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %429, i64 0, i32 1, i32 0
  %431 = load i8, i8* %430, align 1
  %432 = icmp slt i8 %431, 0
  br i1 %432, label %433, label %436

433:                                              ; preds = %427
  %434 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %435 = load i8*, i8** %434, align 8
  call void @_ZdlPv(i8* %435) #16
  br label %436

436:                                              ; preds = %427, %433
  %437 = load i8, i8* %422, align 1
  %438 = icmp slt i8 %437, 0
  br i1 %438, label %439, label %442

439:                                              ; preds = %436
  %440 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %441 = load i8*, i8** %440, align 8
  call void @_ZdlPv(i8* %441) #16
  br label %442

442:                                              ; preds = %436, %439
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %419) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %418) #14
  %443 = load i32, i32* %413, align 8
  br label %444

444:                                              ; preds = %411, %442
  %445 = phi i32 [ %414, %411 ], [ %443, %442 ]
  %446 = phi i8 [ %412, %411 ], [ 0, %442 ]
  %447 = and i32 %445, 4
  %448 = icmp eq i32 %447, 0
  br i1 %448, label %476, label %449

449:                                              ; preds = %444
  %450 = bitcast %"class.SkSL::String"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %450) #14
  %451 = bitcast %"class.SkSL::String"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %451) #14
  %452 = icmp eq i8 %446, 0
  %453 = bitcast %"class.SkSL::String"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %454 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %453, i64 0, i32 1, i32 0
  br i1 %452, label %456, label %455

455:                                              ; preds = %449
  store i8 0, i8* %454, align 1, !alias.scope !132
  store i8 0, i8* %451, align 8, !alias.scope !132
  br label %459

456:                                              ; preds = %449
  store i8 2, i8* %454, align 1, !alias.scope !132
  %457 = bitcast %"class.SkSL::String"* %34 to i16*
  store i16 8236, i16* %457, align 8, !alias.scope !132
  %458 = getelementptr inbounds i8, i8* %451, i64 2
  store i8 0, i8* %458, align 2, !alias.scope !132
  br label %459

459:                                              ; preds = %455, %456
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %33, %"class.SkSL::String"* nonnull %34, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.66, i64 0, i64 0)) #14
  %460 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %33) #14
  %461 = bitcast %"class.SkSL::String"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %462 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %461, i64 0, i32 1, i32 0
  %463 = load i8, i8* %462, align 1
  %464 = icmp slt i8 %463, 0
  br i1 %464, label %465, label %468

465:                                              ; preds = %459
  %466 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %467 = load i8*, i8** %466, align 8
  call void @_ZdlPv(i8* %467) #16
  br label %468

468:                                              ; preds = %459, %465
  %469 = load i8, i8* %454, align 1
  %470 = icmp slt i8 %469, 0
  br i1 %470, label %471, label %474

471:                                              ; preds = %468
  %472 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %473 = load i8*, i8** %472, align 8
  call void @_ZdlPv(i8* %473) #16
  br label %474

474:                                              ; preds = %468, %471
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %451) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %450) #14
  %475 = load i32, i32* %413, align 8
  br label %476

476:                                              ; preds = %444, %474
  %477 = phi i32 [ %445, %444 ], [ %475, %474 ]
  %478 = phi i8 [ %446, %444 ], [ 0, %474 ]
  %479 = and i32 %477, 2
  %480 = icmp eq i32 %479, 0
  br i1 %480, label %508, label %481

481:                                              ; preds = %476
  %482 = bitcast %"class.SkSL::String"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %482) #14
  %483 = bitcast %"class.SkSL::String"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %483) #14
  %484 = icmp eq i8 %478, 0
  %485 = bitcast %"class.SkSL::String"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %486 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %485, i64 0, i32 1, i32 0
  br i1 %484, label %488, label %487

487:                                              ; preds = %481
  store i8 0, i8* %486, align 1, !alias.scope !135
  store i8 0, i8* %483, align 8, !alias.scope !135
  br label %491

488:                                              ; preds = %481
  store i8 2, i8* %486, align 1, !alias.scope !135
  %489 = bitcast %"class.SkSL::String"* %36 to i16*
  store i16 8236, i16* %489, align 8, !alias.scope !135
  %490 = getelementptr inbounds i8, i8* %483, i64 2
  store i8 0, i8* %490, align 2, !alias.scope !135
  br label %491

491:                                              ; preds = %487, %488
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %35, %"class.SkSL::String"* nonnull %36, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.67, i64 0, i64 0)) #14
  %492 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %35) #14
  %493 = bitcast %"class.SkSL::String"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %494 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %493, i64 0, i32 1, i32 0
  %495 = load i8, i8* %494, align 1
  %496 = icmp slt i8 %495, 0
  br i1 %496, label %497, label %500

497:                                              ; preds = %491
  %498 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %499 = load i8*, i8** %498, align 8
  call void @_ZdlPv(i8* %499) #16
  br label %500

500:                                              ; preds = %491, %497
  %501 = load i8, i8* %486, align 1
  %502 = icmp slt i8 %501, 0
  br i1 %502, label %503, label %506

503:                                              ; preds = %500
  %504 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %505 = load i8*, i8** %504, align 8
  call void @_ZdlPv(i8* %505) #16
  br label %506

506:                                              ; preds = %500, %503
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %483) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %482) #14
  %507 = load i32, i32* %413, align 8
  br label %508

508:                                              ; preds = %476, %506
  %509 = phi i32 [ %477, %476 ], [ %507, %506 ]
  %510 = phi i8 [ %478, %476 ], [ 0, %506 ]
  %511 = and i32 %509, 8
  %512 = icmp eq i32 %511, 0
  br i1 %512, label %539, label %513

513:                                              ; preds = %508
  %514 = bitcast %"class.SkSL::String"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %514) #14
  %515 = bitcast %"class.SkSL::String"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %515) #14
  %516 = icmp eq i8 %510, 0
  %517 = bitcast %"class.SkSL::String"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %518 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %517, i64 0, i32 1, i32 0
  br i1 %516, label %520, label %519

519:                                              ; preds = %513
  store i8 0, i8* %518, align 1, !alias.scope !138
  store i8 0, i8* %515, align 8, !alias.scope !138
  br label %523

520:                                              ; preds = %513
  store i8 2, i8* %518, align 1, !alias.scope !138
  %521 = bitcast %"class.SkSL::String"* %38 to i16*
  store i16 8236, i16* %521, align 8, !alias.scope !138
  %522 = getelementptr inbounds i8, i8* %515, i64 2
  store i8 0, i8* %522, align 2, !alias.scope !138
  br label %523

523:                                              ; preds = %519, %520
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %37, %"class.SkSL::String"* nonnull %38, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.68, i64 0, i64 0)) #14
  %524 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %37) #14
  %525 = bitcast %"class.SkSL::String"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %526 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %525, i64 0, i32 1, i32 0
  %527 = load i8, i8* %526, align 1
  %528 = icmp slt i8 %527, 0
  br i1 %528, label %529, label %532

529:                                              ; preds = %523
  %530 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %531 = load i8*, i8** %530, align 8
  call void @_ZdlPv(i8* %531) #16
  br label %532

532:                                              ; preds = %523, %529
  %533 = load i8, i8* %518, align 1
  %534 = icmp slt i8 %533, 0
  br i1 %534, label %535, label %538

535:                                              ; preds = %532
  %536 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %537 = load i8*, i8** %536, align 8
  call void @_ZdlPv(i8* %537) #16
  br label %538

538:                                              ; preds = %532, %535
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %515) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %514) #14
  br label %539

539:                                              ; preds = %508, %538
  %540 = phi i8 [ %510, %508 ], [ 0, %538 ]
  %541 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 8
  %542 = load i32, i32* %541, align 8
  switch i32 %542, label %721 [
    i32 0, label %543
    i32 1, label %568
    i32 2, label %593
    i32 3, label %618
    i32 4, label %643
    i32 5, label %668
    i32 6, label %693
  ]

543:                                              ; preds = %539
  %544 = bitcast %"class.SkSL::String"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %544) #14
  %545 = bitcast %"class.SkSL::String"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %545) #14
  %546 = icmp eq i8 %540, 0
  %547 = bitcast %"class.SkSL::String"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %548 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %547, i64 0, i32 1, i32 0
  br i1 %546, label %550, label %549

549:                                              ; preds = %543
  store i8 0, i8* %548, align 1, !alias.scope !141
  store i8 0, i8* %545, align 8, !alias.scope !141
  br label %553

550:                                              ; preds = %543
  store i8 2, i8* %548, align 1, !alias.scope !141
  %551 = bitcast %"class.SkSL::String"* %40 to i16*
  store i16 8236, i16* %551, align 8, !alias.scope !141
  %552 = getelementptr inbounds i8, i8* %545, i64 2
  store i8 0, i8* %552, align 2, !alias.scope !141
  br label %553

553:                                              ; preds = %549, %550
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %39, %"class.SkSL::String"* nonnull %40, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.69, i64 0, i64 0)) #14
  %554 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %39) #14
  %555 = bitcast %"class.SkSL::String"* %39 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %556 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %555, i64 0, i32 1, i32 0
  %557 = load i8, i8* %556, align 1
  %558 = icmp slt i8 %557, 0
  br i1 %558, label %559, label %562

559:                                              ; preds = %553
  %560 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %561 = load i8*, i8** %560, align 8
  call void @_ZdlPv(i8* %561) #16
  br label %562

562:                                              ; preds = %553, %559
  %563 = load i8, i8* %548, align 1
  %564 = icmp slt i8 %563, 0
  br i1 %564, label %565, label %718

565:                                              ; preds = %562
  %566 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %567 = load i8*, i8** %566, align 8
  call void @_ZdlPv(i8* %567) #16
  br label %718

568:                                              ; preds = %539
  %569 = bitcast %"class.SkSL::String"* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %569) #14
  %570 = bitcast %"class.SkSL::String"* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %570) #14
  %571 = icmp eq i8 %540, 0
  %572 = bitcast %"class.SkSL::String"* %42 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %573 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %572, i64 0, i32 1, i32 0
  br i1 %571, label %575, label %574

574:                                              ; preds = %568
  store i8 0, i8* %573, align 1, !alias.scope !144
  store i8 0, i8* %570, align 8, !alias.scope !144
  br label %578

575:                                              ; preds = %568
  store i8 2, i8* %573, align 1, !alias.scope !144
  %576 = bitcast %"class.SkSL::String"* %42 to i16*
  store i16 8236, i16* %576, align 8, !alias.scope !144
  %577 = getelementptr inbounds i8, i8* %570, i64 2
  store i8 0, i8* %577, align 2, !alias.scope !144
  br label %578

578:                                              ; preds = %574, %575
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %41, %"class.SkSL::String"* nonnull %42, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i64 0, i64 0)) #14
  %579 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %41) #14
  %580 = bitcast %"class.SkSL::String"* %41 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %581 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %580, i64 0, i32 1, i32 0
  %582 = load i8, i8* %581, align 1
  %583 = icmp slt i8 %582, 0
  br i1 %583, label %584, label %587

584:                                              ; preds = %578
  %585 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %586 = load i8*, i8** %585, align 8
  call void @_ZdlPv(i8* %586) #16
  br label %587

587:                                              ; preds = %578, %584
  %588 = load i8, i8* %573, align 1
  %589 = icmp slt i8 %588, 0
  br i1 %589, label %590, label %718

590:                                              ; preds = %587
  %591 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %592 = load i8*, i8** %591, align 8
  call void @_ZdlPv(i8* %592) #16
  br label %718

593:                                              ; preds = %539
  %594 = bitcast %"class.SkSL::String"* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %594) #14
  %595 = bitcast %"class.SkSL::String"* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %595) #14
  %596 = icmp eq i8 %540, 0
  %597 = bitcast %"class.SkSL::String"* %44 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %598 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %597, i64 0, i32 1, i32 0
  br i1 %596, label %600, label %599

599:                                              ; preds = %593
  store i8 0, i8* %598, align 1, !alias.scope !147
  store i8 0, i8* %595, align 8, !alias.scope !147
  br label %603

600:                                              ; preds = %593
  store i8 2, i8* %598, align 1, !alias.scope !147
  %601 = bitcast %"class.SkSL::String"* %44 to i16*
  store i16 8236, i16* %601, align 8, !alias.scope !147
  %602 = getelementptr inbounds i8, i8* %595, i64 2
  store i8 0, i8* %602, align 2, !alias.scope !147
  br label %603

603:                                              ; preds = %599, %600
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %43, %"class.SkSL::String"* nonnull %44, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.71, i64 0, i64 0)) #14
  %604 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %43) #14
  %605 = bitcast %"class.SkSL::String"* %43 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %606 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %605, i64 0, i32 1, i32 0
  %607 = load i8, i8* %606, align 1
  %608 = icmp slt i8 %607, 0
  br i1 %608, label %609, label %612

609:                                              ; preds = %603
  %610 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %611 = load i8*, i8** %610, align 8
  call void @_ZdlPv(i8* %611) #16
  br label %612

612:                                              ; preds = %603, %609
  %613 = load i8, i8* %598, align 1
  %614 = icmp slt i8 %613, 0
  br i1 %614, label %615, label %718

615:                                              ; preds = %612
  %616 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %617 = load i8*, i8** %616, align 8
  call void @_ZdlPv(i8* %617) #16
  br label %718

618:                                              ; preds = %539
  %619 = bitcast %"class.SkSL::String"* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %619) #14
  %620 = bitcast %"class.SkSL::String"* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %620) #14
  %621 = icmp eq i8 %540, 0
  %622 = bitcast %"class.SkSL::String"* %46 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %623 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %622, i64 0, i32 1, i32 0
  br i1 %621, label %625, label %624

624:                                              ; preds = %618
  store i8 0, i8* %623, align 1, !alias.scope !150
  store i8 0, i8* %620, align 8, !alias.scope !150
  br label %628

625:                                              ; preds = %618
  store i8 2, i8* %623, align 1, !alias.scope !150
  %626 = bitcast %"class.SkSL::String"* %46 to i16*
  store i16 8236, i16* %626, align 8, !alias.scope !150
  %627 = getelementptr inbounds i8, i8* %620, i64 2
  store i8 0, i8* %627, align 2, !alias.scope !150
  br label %628

628:                                              ; preds = %624, %625
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %45, %"class.SkSL::String"* nonnull %46, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.72, i64 0, i64 0)) #14
  %629 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %45) #14
  %630 = bitcast %"class.SkSL::String"* %45 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %631 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %630, i64 0, i32 1, i32 0
  %632 = load i8, i8* %631, align 1
  %633 = icmp slt i8 %632, 0
  br i1 %633, label %634, label %637

634:                                              ; preds = %628
  %635 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %636 = load i8*, i8** %635, align 8
  call void @_ZdlPv(i8* %636) #16
  br label %637

637:                                              ; preds = %628, %634
  %638 = load i8, i8* %623, align 1
  %639 = icmp slt i8 %638, 0
  br i1 %639, label %640, label %718

640:                                              ; preds = %637
  %641 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %642 = load i8*, i8** %641, align 8
  call void @_ZdlPv(i8* %642) #16
  br label %718

643:                                              ; preds = %539
  %644 = bitcast %"class.SkSL::String"* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %644) #14
  %645 = bitcast %"class.SkSL::String"* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %645) #14
  %646 = icmp eq i8 %540, 0
  %647 = bitcast %"class.SkSL::String"* %48 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %648 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %647, i64 0, i32 1, i32 0
  br i1 %646, label %650, label %649

649:                                              ; preds = %643
  store i8 0, i8* %648, align 1, !alias.scope !153
  store i8 0, i8* %645, align 8, !alias.scope !153
  br label %653

650:                                              ; preds = %643
  store i8 2, i8* %648, align 1, !alias.scope !153
  %651 = bitcast %"class.SkSL::String"* %48 to i16*
  store i16 8236, i16* %651, align 8, !alias.scope !153
  %652 = getelementptr inbounds i8, i8* %645, i64 2
  store i8 0, i8* %652, align 2, !alias.scope !153
  br label %653

653:                                              ; preds = %649, %650
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %47, %"class.SkSL::String"* nonnull %48, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.73, i64 0, i64 0)) #14
  %654 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %47) #14
  %655 = bitcast %"class.SkSL::String"* %47 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %656 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %655, i64 0, i32 1, i32 0
  %657 = load i8, i8* %656, align 1
  %658 = icmp slt i8 %657, 0
  br i1 %658, label %659, label %662

659:                                              ; preds = %653
  %660 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %661 = load i8*, i8** %660, align 8
  call void @_ZdlPv(i8* %661) #16
  br label %662

662:                                              ; preds = %653, %659
  %663 = load i8, i8* %648, align 1
  %664 = icmp slt i8 %663, 0
  br i1 %664, label %665, label %718

665:                                              ; preds = %662
  %666 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %667 = load i8*, i8** %666, align 8
  call void @_ZdlPv(i8* %667) #16
  br label %718

668:                                              ; preds = %539
  %669 = bitcast %"class.SkSL::String"* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %669) #14
  %670 = bitcast %"class.SkSL::String"* %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %670) #14
  %671 = icmp eq i8 %540, 0
  %672 = bitcast %"class.SkSL::String"* %50 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %673 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %672, i64 0, i32 1, i32 0
  br i1 %671, label %675, label %674

674:                                              ; preds = %668
  store i8 0, i8* %673, align 1, !alias.scope !156
  store i8 0, i8* %670, align 8, !alias.scope !156
  br label %678

675:                                              ; preds = %668
  store i8 2, i8* %673, align 1, !alias.scope !156
  %676 = bitcast %"class.SkSL::String"* %50 to i16*
  store i16 8236, i16* %676, align 8, !alias.scope !156
  %677 = getelementptr inbounds i8, i8* %670, i64 2
  store i8 0, i8* %677, align 2, !alias.scope !156
  br label %678

678:                                              ; preds = %674, %675
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %49, %"class.SkSL::String"* nonnull %50, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.74, i64 0, i64 0)) #14
  %679 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %49) #14
  %680 = bitcast %"class.SkSL::String"* %49 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %681 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %680, i64 0, i32 1, i32 0
  %682 = load i8, i8* %681, align 1
  %683 = icmp slt i8 %682, 0
  br i1 %683, label %684, label %687

684:                                              ; preds = %678
  %685 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %686 = load i8*, i8** %685, align 8
  call void @_ZdlPv(i8* %686) #16
  br label %687

687:                                              ; preds = %678, %684
  %688 = load i8, i8* %673, align 1
  %689 = icmp slt i8 %688, 0
  br i1 %689, label %690, label %718

690:                                              ; preds = %687
  %691 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %692 = load i8*, i8** %691, align 8
  call void @_ZdlPv(i8* %692) #16
  br label %718

693:                                              ; preds = %539
  %694 = bitcast %"class.SkSL::String"* %51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %694) #14
  %695 = bitcast %"class.SkSL::String"* %52 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %695) #14
  %696 = icmp eq i8 %540, 0
  %697 = bitcast %"class.SkSL::String"* %52 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %698 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %697, i64 0, i32 1, i32 0
  br i1 %696, label %700, label %699

699:                                              ; preds = %693
  store i8 0, i8* %698, align 1, !alias.scope !159
  store i8 0, i8* %695, align 8, !alias.scope !159
  br label %703

700:                                              ; preds = %693
  store i8 2, i8* %698, align 1, !alias.scope !159
  %701 = bitcast %"class.SkSL::String"* %52 to i16*
  store i16 8236, i16* %701, align 8, !alias.scope !159
  %702 = getelementptr inbounds i8, i8* %695, i64 2
  store i8 0, i8* %702, align 2, !alias.scope !159
  br label %703

703:                                              ; preds = %699, %700
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %51, %"class.SkSL::String"* nonnull %52, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.75, i64 0, i64 0)) #14
  %704 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %51) #14
  %705 = bitcast %"class.SkSL::String"* %51 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %706 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %705, i64 0, i32 1, i32 0
  %707 = load i8, i8* %706, align 1
  %708 = icmp slt i8 %707, 0
  br i1 %708, label %709, label %712

709:                                              ; preds = %703
  %710 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %711 = load i8*, i8** %710, align 8
  call void @_ZdlPv(i8* %711) #16
  br label %712

712:                                              ; preds = %703, %709
  %713 = load i8, i8* %698, align 1
  %714 = icmp slt i8 %713, 0
  br i1 %714, label %715, label %718

715:                                              ; preds = %712
  %716 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %717 = load i8*, i8** %716, align 8
  call void @_ZdlPv(i8* %717) #16
  br label %718

718:                                              ; preds = %715, %712, %690, %687, %665, %662, %640, %637, %615, %612, %590, %587, %565, %562
  %719 = phi i8* [ %545, %562 ], [ %545, %565 ], [ %570, %587 ], [ %570, %590 ], [ %595, %612 ], [ %595, %615 ], [ %620, %637 ], [ %620, %640 ], [ %645, %662 ], [ %645, %665 ], [ %670, %687 ], [ %670, %690 ], [ %695, %712 ], [ %695, %715 ]
  %720 = phi i8* [ %544, %562 ], [ %544, %565 ], [ %569, %587 ], [ %569, %590 ], [ %594, %612 ], [ %594, %615 ], [ %619, %637 ], [ %619, %640 ], [ %644, %662 ], [ %644, %665 ], [ %669, %687 ], [ %669, %690 ], [ %694, %712 ], [ %694, %715 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %719) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %720) #14
  br label %721

721:                                              ; preds = %718, %539
  %722 = phi i8 [ %540, %539 ], [ 0, %718 ]
  %723 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 9
  %724 = load i32, i32* %723, align 4
  %725 = icmp sgt i32 %724, -1
  br i1 %725, label %726, label %771

726:                                              ; preds = %721
  %727 = bitcast %"class.SkSL::String"* %53 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %727) #14
  %728 = bitcast %"class.SkSL::String"* %54 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %728) #14
  %729 = bitcast %"class.SkSL::String"* %55 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %729) #14
  %730 = icmp eq i8 %722, 0
  %731 = bitcast %"class.SkSL::String"* %55 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %732 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %731, i64 0, i32 1, i32 0
  br i1 %730, label %734, label %733

733:                                              ; preds = %726
  store i8 0, i8* %732, align 1, !alias.scope !162
  store i8 0, i8* %729, align 8, !alias.scope !162
  br label %737

734:                                              ; preds = %726
  store i8 2, i8* %732, align 1, !alias.scope !162
  %735 = bitcast %"class.SkSL::String"* %55 to i16*
  store i16 8236, i16* %735, align 8, !alias.scope !162
  %736 = getelementptr inbounds i8, i8* %729, i64 2
  store i8 0, i8* %736, align 2, !alias.scope !162
  br label %737

737:                                              ; preds = %733, %734
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %54, %"class.SkSL::String"* nonnull %55, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.76, i64 0, i64 0)) #14
  %738 = bitcast %"class.SkSL::String"* %56 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %738) #14
  %739 = load i32, i32* %723, align 4
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %56, i32 %739) #14
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %53, %"class.SkSL::String"* nonnull %54, %"class.SkSL::String"* nonnull dereferenceable(24) %56) #14
  %740 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %53) #14
  %741 = bitcast %"class.SkSL::String"* %53 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %742 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %741, i64 0, i32 1, i32 0
  %743 = load i8, i8* %742, align 1
  %744 = icmp slt i8 %743, 0
  br i1 %744, label %745, label %748

745:                                              ; preds = %737
  %746 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %747 = load i8*, i8** %746, align 8
  call void @_ZdlPv(i8* %747) #16
  br label %748

748:                                              ; preds = %737, %745
  %749 = bitcast %"class.SkSL::String"* %56 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %750 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %749, i64 0, i32 1, i32 0
  %751 = load i8, i8* %750, align 1
  %752 = icmp slt i8 %751, 0
  br i1 %752, label %753, label %756

753:                                              ; preds = %748
  %754 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %755 = load i8*, i8** %754, align 8
  call void @_ZdlPv(i8* %755) #16
  br label %756

756:                                              ; preds = %748, %753
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %738) #14
  %757 = bitcast %"class.SkSL::String"* %54 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %758 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %757, i64 0, i32 1, i32 0
  %759 = load i8, i8* %758, align 1
  %760 = icmp slt i8 %759, 0
  br i1 %760, label %761, label %764

761:                                              ; preds = %756
  %762 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %763 = load i8*, i8** %762, align 8
  call void @_ZdlPv(i8* %763) #16
  br label %764

764:                                              ; preds = %756, %761
  %765 = load i8, i8* %732, align 1
  %766 = icmp slt i8 %765, 0
  br i1 %766, label %767, label %770

767:                                              ; preds = %764
  %768 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %769 = load i8*, i8** %768, align 8
  call void @_ZdlPv(i8* %769) #16
  br label %770

770:                                              ; preds = %764, %767
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %729) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %728) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %727) #14
  br label %771

771:                                              ; preds = %770, %721
  %772 = phi i8 [ 0, %770 ], [ %722, %721 ]
  %773 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 10
  %774 = load i32, i32* %773, align 8
  %775 = icmp sgt i32 %774, -1
  br i1 %775, label %776, label %821

776:                                              ; preds = %771
  %777 = bitcast %"class.SkSL::String"* %57 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %777) #14
  %778 = bitcast %"class.SkSL::String"* %58 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %778) #14
  %779 = bitcast %"class.SkSL::String"* %59 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %779) #14
  %780 = icmp eq i8 %772, 0
  %781 = bitcast %"class.SkSL::String"* %59 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %782 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %781, i64 0, i32 1, i32 0
  br i1 %780, label %784, label %783

783:                                              ; preds = %776
  store i8 0, i8* %782, align 1, !alias.scope !165
  store i8 0, i8* %779, align 8, !alias.scope !165
  br label %787

784:                                              ; preds = %776
  store i8 2, i8* %782, align 1, !alias.scope !165
  %785 = bitcast %"class.SkSL::String"* %59 to i16*
  store i16 8236, i16* %785, align 8, !alias.scope !165
  %786 = getelementptr inbounds i8, i8* %779, i64 2
  store i8 0, i8* %786, align 2, !alias.scope !165
  br label %787

787:                                              ; preds = %783, %784
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %58, %"class.SkSL::String"* nonnull %59, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.77, i64 0, i64 0)) #14
  %788 = bitcast %"class.SkSL::String"* %60 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %788) #14
  %789 = load i32, i32* %773, align 8
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %60, i32 %789) #14
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %57, %"class.SkSL::String"* nonnull %58, %"class.SkSL::String"* nonnull dereferenceable(24) %60) #14
  %790 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %57) #14
  %791 = bitcast %"class.SkSL::String"* %57 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %792 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %791, i64 0, i32 1, i32 0
  %793 = load i8, i8* %792, align 1
  %794 = icmp slt i8 %793, 0
  br i1 %794, label %795, label %798

795:                                              ; preds = %787
  %796 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %797 = load i8*, i8** %796, align 8
  call void @_ZdlPv(i8* %797) #16
  br label %798

798:                                              ; preds = %787, %795
  %799 = bitcast %"class.SkSL::String"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %800 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %799, i64 0, i32 1, i32 0
  %801 = load i8, i8* %800, align 1
  %802 = icmp slt i8 %801, 0
  br i1 %802, label %803, label %806

803:                                              ; preds = %798
  %804 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %805 = load i8*, i8** %804, align 8
  call void @_ZdlPv(i8* %805) #16
  br label %806

806:                                              ; preds = %798, %803
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %788) #14
  %807 = bitcast %"class.SkSL::String"* %58 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %808 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %807, i64 0, i32 1, i32 0
  %809 = load i8, i8* %808, align 1
  %810 = icmp slt i8 %809, 0
  br i1 %810, label %811, label %814

811:                                              ; preds = %806
  %812 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %813 = load i8*, i8** %812, align 8
  call void @_ZdlPv(i8* %813) #16
  br label %814

814:                                              ; preds = %806, %811
  %815 = load i8, i8* %782, align 1
  %816 = icmp slt i8 %815, 0
  br i1 %816, label %817, label %820

817:                                              ; preds = %814
  %818 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %819 = load i8*, i8** %818, align 8
  call void @_ZdlPv(i8* %819) #16
  br label %820

820:                                              ; preds = %814, %817
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %779) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %778) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %777) #14
  br label %821

821:                                              ; preds = %820, %771
  %822 = phi i8 [ 0, %820 ], [ %772, %771 ]
  %823 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 12, i32 1
  %824 = load i64, i64* %823, align 8
  %825 = icmp eq i64 %824, 0
  br i1 %825, label %864, label %826

826:                                              ; preds = %821
  %827 = bitcast %"class.SkSL::String"* %61 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %827) #14
  %828 = bitcast %"class.SkSL::String"* %62 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %828) #14
  %829 = bitcast %"class.SkSL::String"* %63 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %829) #14
  %830 = icmp eq i8 %822, 0
  %831 = bitcast %"class.SkSL::String"* %63 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %832 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %831, i64 0, i32 1, i32 0
  br i1 %830, label %834, label %833

833:                                              ; preds = %826
  store i8 0, i8* %832, align 1, !alias.scope !168
  store i8 0, i8* %829, align 8, !alias.scope !168
  br label %837

834:                                              ; preds = %826
  store i8 2, i8* %832, align 1, !alias.scope !168
  %835 = bitcast %"class.SkSL::String"* %63 to i16*
  store i16 8236, i16* %835, align 8, !alias.scope !168
  %836 = getelementptr inbounds i8, i8* %829, i64 2
  store i8 0, i8* %836, align 2, !alias.scope !168
  br label %837

837:                                              ; preds = %833, %834
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %62, %"class.SkSL::String"* nonnull %63, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.78, i64 0, i64 0)) #14
  %838 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 12, i32 0
  %839 = load i8*, i8** %838, align 8
  %840 = load i64, i64* %823, align 8
  call void @_ZNK4SkSL6StringplENS_14StringFragmentE(%"class.SkSL::String"* nonnull sret %61, %"class.SkSL::String"* nonnull %62, i8* %839, i64 %840) #14
  %841 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %61) #14
  %842 = bitcast %"class.SkSL::String"* %61 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %843 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %842, i64 0, i32 1, i32 0
  %844 = load i8, i8* %843, align 1
  %845 = icmp slt i8 %844, 0
  br i1 %845, label %846, label %849

846:                                              ; preds = %837
  %847 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %848 = load i8*, i8** %847, align 8
  call void @_ZdlPv(i8* %848) #16
  br label %849

849:                                              ; preds = %837, %846
  %850 = bitcast %"class.SkSL::String"* %62 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %851 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %850, i64 0, i32 1, i32 0
  %852 = load i8, i8* %851, align 1
  %853 = icmp slt i8 %852, 0
  br i1 %853, label %854, label %857

854:                                              ; preds = %849
  %855 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %856 = load i8*, i8** %855, align 8
  call void @_ZdlPv(i8* %856) #16
  br label %857

857:                                              ; preds = %849, %854
  %858 = load i8, i8* %832, align 1
  %859 = icmp slt i8 %858, 0
  br i1 %859, label %860, label %863

860:                                              ; preds = %857
  %861 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %862 = load i8*, i8** %861, align 8
  call void @_ZdlPv(i8* %862) #16
  br label %863

863:                                              ; preds = %857, %860
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %829) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %828) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %827) #14
  br label %864

864:                                              ; preds = %821, %863
  %865 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %866 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %865, i64 0, i32 1, i32 0
  %867 = load i8, i8* %866, align 1
  %868 = icmp slt i8 %867, 0
  %869 = load i64, i64* %67, align 8
  %870 = zext i8 %867 to i64
  %871 = select i1 %868, i64 %869, i64 %870
  %872 = icmp eq i64 %871, 0
  br i1 %872, label %891, label %873

873:                                              ; preds = %864
  %874 = bitcast %"class.SkSL::String"* %64 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %874) #14
  %875 = bitcast %"class.SkSL::String"* %65 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %875) #14
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %65, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.79, i64 0, i64 0), %"class.SkSL::String"* dereferenceable(24) %0) #14
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %64, %"class.SkSL::String"* nonnull %65, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #14
  %876 = load i8, i8* %866, align 1
  %877 = icmp slt i8 %876, 0
  br i1 %877, label %878, label %880

878:                                              ; preds = %873
  %879 = load i8*, i8** %66, align 8
  call void @_ZdlPv(i8* %879) #16
  br label %880

880:                                              ; preds = %873, %878
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* nonnull align 8 %874, i64 24, i1 false) #14
  %881 = bitcast %"class.SkSL::String"* %64 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %882 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %881, i64 0, i32 1, i32 0
  store i8 0, i8* %882, align 1
  store i8 0, i8* %874, align 8
  %883 = bitcast %"class.SkSL::String"* %65 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %884 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %883, i64 0, i32 1, i32 0
  %885 = load i8, i8* %884, align 1
  %886 = icmp slt i8 %885, 0
  br i1 %886, label %887, label %890

887:                                              ; preds = %880
  %888 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %889 = load i8*, i8** %888, align 8
  call void @_ZdlPv(i8* %889) #16
  br label %890

890:                                              ; preds = %880, %887
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %875) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %874) #14
  br label %891

891:                                              ; preds = %864, %890
  %892 = load i32, i32* %413, align 8
  %893 = and i32 %892, 16
  %894 = icmp eq i32 %893, 0
  br i1 %894, label %897, label %895

895:                                              ; preds = %891
  %896 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.80, i64 0, i64 0)) #14
  br label %897

897:                                              ; preds = %891, %895
  ret void
}

declare void @_ZNK4SkSL6StringplENS_14StringFragmentE(%"class.SkSL::String"* sret, %"class.SkSL::String"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } @_ZN4SkSL11SymbolTable13WrapIfBuiltinENSt3__110shared_ptrIS0_EE(%"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.SkSL::SymbolTable"* %0 to i64
  %4 = icmp eq %"class.SkSL::SymbolTable"* %0, null
  br i1 %4, label %44, label %5

5:                                                ; preds = %2
  %6 = ptrtoint %"class.std::__1::__shared_weak_count"* %1 to i64
  %7 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 2
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %56, label %10

10:                                               ; preds = %5
  %11 = tail call i8* @_Znwm(i64 128) #16
  %12 = bitcast i8* %11 to i32 (...)***
  %13 = getelementptr inbounds i8, i8* %11, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %14 = getelementptr inbounds i8, i8* %11, i64 24
  %15 = bitcast i8* %14 to i64*
  store i64 %3, i64* %15, align 8
  %16 = getelementptr inbounds i8, i8* %11, i64 32
  %17 = bitcast i8* %16 to %"class.std::__1::__shared_weak_count"**
  store %"class.std::__1::__shared_weak_count"* %1, %"class.std::__1::__shared_weak_count"** %17, align 8
  %18 = icmp eq %"class.std::__1::__shared_weak_count"* %1, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %1, i64 0, i32 0, i32 1
  %21 = atomicrmw add i64* %20, i64 1 monotonic
  br label %22

22:                                               ; preds = %19, %10
  %23 = phi i1 [ %18, %19 ], [ true, %10 ]
  %24 = getelementptr inbounds i8, i8* %11, i64 40
  %25 = getelementptr inbounds i8, i8* %11, i64 72
  %26 = getelementptr inbounds i8, i8* %11, i64 120
  %27 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 6
  %28 = bitcast %"class.SkSL::ErrorReporter"** %27 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 48, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 25, i1 false)
  %29 = load i64, i64* %28, align 8
  %30 = bitcast i8* %26 to i64*
  store i64 %29, i64* %30, align 8
  br i1 %23, label %41, label %31

31:                                               ; preds = %22
  %32 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %1, i64 0, i32 0, i32 1
  %33 = atomicrmw add i64* %32, i64 -1 acq_rel
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %41

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %1, i64 0, i32 0
  %37 = bitcast %"class.std::__1::__shared_weak_count"* %1 to void (%"class.std::__1::__shared_count"*)***
  %38 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %38, i64 2
  %40 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %39, align 8
  tail call void %40(%"class.std::__1::__shared_count"* %36) #14
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %1) #14
  br label %41

41:                                               ; preds = %22, %31, %35
  %42 = ptrtoint i8* %14 to i64
  %43 = ptrtoint i8* %11 to i64
  br label %56

44:                                               ; preds = %2
  %45 = icmp eq %"class.std::__1::__shared_weak_count"* %1, null
  br i1 %45, label %56, label %46

46:                                               ; preds = %44
  %47 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %1, i64 0, i32 0, i32 1
  %48 = atomicrmw add i64* %47, i64 -1 acq_rel
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %56

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %1, i64 0, i32 0
  %52 = bitcast %"class.std::__1::__shared_weak_count"* %1 to void (%"class.std::__1::__shared_count"*)***
  %53 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %53, i64 2
  %55 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %54, align 8
  tail call void %55(%"class.std::__1::__shared_count"* %51) #14
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %1) #14
  br label %56

56:                                               ; preds = %5, %41, %44, %46, %50
  %57 = phi i64 [ 0, %44 ], [ 0, %46 ], [ 0, %50 ], [ %3, %5 ], [ %42, %41 ]
  %58 = phi i64 [ 0, %44 ], [ 0, %46 ], [ 0, %50 ], [ %6, %5 ], [ %43, %41 ]
  %59 = inttoptr i64 %57 to %"class.SkSL::SymbolTable"*
  %60 = insertvalue { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } undef, %"class.SkSL::SymbolTable"* %59, 0
  %61 = inttoptr i64 %58 to %"class.std::__1::__shared_weak_count"*
  %62 = insertvalue { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } %60, %"class.std::__1::__shared_weak_count"* %61, 1
  ret { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } %62
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEED2Ev(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0
  tail call void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"* %3) #14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEED0Ev(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0
  tail call void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"* %3) #14
  %4 = bitcast %"struct.std::__1::__shared_ptr_emplace"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEE16__on_zero_sharedEv(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 1
  %3 = bitcast %"struct.std::__1::__shared_ptr_emplace<SkSL::SymbolTable, std::__1::allocator<SkSL::SymbolTable> >::_Storage"* %2 to %"class.SkSL::SymbolTable"*
  tail call void @_ZN4SkSL11SymbolTableD2Ev(%"class.SkSL::SymbolTable"* %3) #14
  ret void
}

; Function Attrs: nounwind
declare i8* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info(%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"* dereferenceable(16)) unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEE21__on_zero_shared_weakEv(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"struct.std::__1::__shared_ptr_emplace"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #16
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"*) unnamed_addr #13

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL11SymbolTableD2Ev(%"class.SkSL::SymbolTable"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3 = load %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"** %2, align 8
  store %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"** %2, align 8
  %4 = icmp eq %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = bitcast %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %3 to i8*
  tail call void @_ZdaPv(i8* %6) #16
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"struct.std::__1::__forward_list_node"*, %"struct.std::__1::__forward_list_node"** %8, align 8
  %10 = icmp eq %"struct.std::__1::__forward_list_node"* %9, null
  br i1 %10, label %26, label %11

11:                                               ; preds = %7, %24
  %12 = phi %"struct.std::__1::__forward_list_node"* [ %15, %24 ], [ %9, %7 ]
  %13 = bitcast %"struct.std::__1::__forward_list_node"* %12 to i8*
  %14 = getelementptr inbounds %"struct.std::__1::__forward_list_node", %"struct.std::__1::__forward_list_node"* %12, i64 0, i32 0, i32 0
  %15 = load %"struct.std::__1::__forward_list_node"*, %"struct.std::__1::__forward_list_node"** %14, align 8
  %16 = getelementptr inbounds %"struct.std::__1::__forward_list_node", %"struct.std::__1::__forward_list_node"* %12, i64 0, i32 1
  %17 = bitcast %"class.SkSL::String"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %11
  %22 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  tail call void @_ZdlPv(i8* %23) #16
  br label %24

24:                                               ; preds = %21, %11
  tail call void @_ZdlPv(i8* %13) #16
  %25 = icmp eq %"struct.std::__1::__forward_list_node"* %15, null
  br i1 %25, label %26, label %11

26:                                               ; preds = %24, %7
  store %"struct.std::__1::__forward_list_node"* null, %"struct.std::__1::__forward_list_node"** %8, align 8
  %27 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 3
  %28 = getelementptr inbounds %"class.std::__1::vector.311", %"class.std::__1::vector.311"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.std::__1::unique_ptr.313"*, %"class.std::__1::unique_ptr.313"** %28, align 8
  %30 = icmp eq %"class.std::__1::unique_ptr.313"* %29, null
  br i1 %30, label %54, label %31

31:                                               ; preds = %26
  %32 = bitcast %"class.std::__1::unique_ptr.313"* %29 to i8*
  %33 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 3, i32 0, i32 1
  %34 = load %"class.std::__1::unique_ptr.313"*, %"class.std::__1::unique_ptr.313"** %33, align 8
  %35 = icmp eq %"class.std::__1::unique_ptr.313"* %34, %29
  br i1 %35, label %52, label %36

36:                                               ; preds = %31, %47
  %37 = phi %"class.std::__1::unique_ptr.313"* [ %38, %47 ], [ %34, %31 ]
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.313", %"class.std::__1::unique_ptr.313"* %37, i64 -1
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr.313", %"class.std::__1::unique_ptr.313"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.SkSL::IRNode"*, %"class.SkSL::IRNode"** %39, align 8
  store %"class.SkSL::IRNode"* null, %"class.SkSL::IRNode"** %39, align 8
  %41 = icmp eq %"class.SkSL::IRNode"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %36
  %43 = bitcast %"class.SkSL::IRNode"* %40 to void (%"class.SkSL::IRNode"*)***
  %44 = load void (%"class.SkSL::IRNode"*)**, void (%"class.SkSL::IRNode"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.SkSL::IRNode"*)*, void (%"class.SkSL::IRNode"*)** %44, i64 1
  %46 = load void (%"class.SkSL::IRNode"*)*, void (%"class.SkSL::IRNode"*)** %45, align 8
  tail call void %46(%"class.SkSL::IRNode"* nonnull %40) #14
  br label %47

47:                                               ; preds = %42, %36
  %48 = icmp eq %"class.std::__1::unique_ptr.313"* %38, %29
  br i1 %48, label %49, label %36

49:                                               ; preds = %47
  %50 = bitcast %"class.std::__1::vector.311"* %27 to i8**
  %51 = load i8*, i8** %50, align 8
  br label %52

52:                                               ; preds = %49, %31
  %53 = phi i8* [ %51, %49 ], [ %32, %31 ]
  store %"class.std::__1::unique_ptr.313"* %29, %"class.std::__1::unique_ptr.313"** %33, align 8
  tail call void @_ZdlPv(i8* %53) #16
  br label %54

54:                                               ; preds = %26, %52
  %55 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 1
  %56 = getelementptr inbounds %"class.std::__1::vector.303", %"class.std::__1::vector.303"* %55, i64 0, i32 0, i32 0
  %57 = load %"class.std::__1::unique_ptr.305"*, %"class.std::__1::unique_ptr.305"** %56, align 8
  %58 = icmp eq %"class.std::__1::unique_ptr.305"* %57, null
  br i1 %58, label %82, label %59

59:                                               ; preds = %54
  %60 = bitcast %"class.std::__1::unique_ptr.305"* %57 to i8*
  %61 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 1, i32 0, i32 1
  %62 = load %"class.std::__1::unique_ptr.305"*, %"class.std::__1::unique_ptr.305"** %61, align 8
  %63 = icmp eq %"class.std::__1::unique_ptr.305"* %62, %57
  br i1 %63, label %80, label %64

64:                                               ; preds = %59, %75
  %65 = phi %"class.std::__1::unique_ptr.305"* [ %66, %75 ], [ %62, %59 ]
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.305", %"class.std::__1::unique_ptr.305"* %65, i64 -1
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr.305", %"class.std::__1::unique_ptr.305"* %66, i64 0, i32 0, i32 0, i32 0
  %68 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %67, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %67, align 8
  %69 = icmp eq %"class.SkSL::Symbol"* %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %64
  %71 = bitcast %"class.SkSL::Symbol"* %68 to void (%"class.SkSL::Symbol"*)***
  %72 = load void (%"class.SkSL::Symbol"*)**, void (%"class.SkSL::Symbol"*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %72, i64 1
  %74 = load void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %73, align 8
  tail call void %74(%"class.SkSL::Symbol"* nonnull %68) #14
  br label %75

75:                                               ; preds = %70, %64
  %76 = icmp eq %"class.std::__1::unique_ptr.305"* %66, %57
  br i1 %76, label %77, label %64

77:                                               ; preds = %75
  %78 = bitcast %"class.std::__1::vector.303"* %55 to i8**
  %79 = load i8*, i8** %78, align 8
  br label %80

80:                                               ; preds = %77, %59
  %81 = phi i8* [ %79, %77 ], [ %60, %59 ]
  store %"class.std::__1::unique_ptr.305"* %57, %"class.std::__1::unique_ptr.305"** %61, align 8
  tail call void @_ZdlPv(i8* %81) #16
  br label %82

82:                                               ; preds = %54, %80
  %83 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 0, i32 1
  %84 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %83, align 8
  %85 = icmp eq %"class.std::__1::__shared_weak_count"* %84, null
  br i1 %85, label %96, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %84, i64 0, i32 0, i32 1
  %88 = atomicrmw add i64* %87, i64 -1 acq_rel
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %96

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %84, i64 0, i32 0
  %92 = bitcast %"class.std::__1::__shared_weak_count"* %84 to void (%"class.std::__1::__shared_count"*)***
  %93 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %93, i64 2
  %95 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %94, align 8
  tail call void %95(%"class.std::__1::__shared_count"* %91) #14
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %84) #14
  br label %96

96:                                               ; preds = %82, %86, %90
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #10

declare zeroext i1 @_ZNK4SkSL14StringFragmentneES0_(%"struct.SkSL::StringFragment"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #12

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL7LiteralIbED0Ev(%"class.SkSL::Literal.429"*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %"class.SkSL::Literal.429"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL7LiteralIbE11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::Literal.429"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Literal.429", %"class.SkSL::Literal.429"* %1, i64 0, i32 1
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  %6 = select i1 %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.82, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.81, i64 0, i64 0)
  %7 = select i1 %5, i64 5, i64 4
  %8 = trunc i64 %7 to i8
  %9 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  store i8 %8, i8* %10, align 1
  %11 = bitcast %"class.SkSL::String"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 1 %6, i64 %7, i1 false) #14
  %12 = getelementptr inbounds i8, i8* %11, i64 %7
  store i8 0, i8* %12, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL7LiteralIbE21isCompileTimeConstantEv(%"class.SkSL::Literal.429"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK4SkSL7LiteralIbE15compareConstantERKNS_10ExpressionE(%"class.SkSL::Literal.429"*, %"class.SkSL::Expression"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 31
  br i1 %5, label %6, label %16

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::Literal.429", %"class.SkSL::Literal.429"* %0, i64 0, i32 1
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  %10 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 1
  %11 = bitcast %"class.SkSL::Expression"* %10 to i8*
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp ne i8 %12, 0
  %14 = xor i1 %9, %13
  %15 = zext i1 %14 to i32
  br label %16

16:                                               ; preds = %2, %6
  %17 = phi i32 [ %15, %6 ], [ -1, %2 ]
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL7LiteralIbE11hasPropertyENS_10Expression8PropertyE(%"class.SkSL::Literal.429"*, i32) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL7LiteralIbE24getConstantSubexpressionEi(%"class.SkSL::Literal.429"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Literal.429", %"class.SkSL::Literal.429"* %0, i64 0, i32 0
  ret %"class.SkSL::Expression"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL7LiteralIbE5cloneEv(%"class.SkSL::Literal.429"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Literal.429", %"class.SkSL::Literal.429"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds %"class.SkSL::Literal.429", %"class.SkSL::Literal.429"* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = getelementptr inbounds %"class.SkSL::Literal.429", %"class.SkSL::Literal.429"* %0, i64 0, i32 0, i32 1
  %6 = bitcast %"class.SkSL::Type"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #14
  %9 = load i32, i32* %2, align 4
  %10 = bitcast i8* %8 to i32 (...)***
  %11 = getelementptr inbounds i8, i8* %8, i64 8
  %12 = bitcast i8* %11 to i32*
  store i32 %9, i32* %12, align 8
  %13 = getelementptr inbounds i8, i8* %8, i64 12
  %14 = bitcast i8* %13 to i32*
  store i32 31, i32* %14, align 4
  %15 = getelementptr inbounds i8, i8* %8, i64 16
  %16 = bitcast i8* %15 to i64*
  store i64 %7, i64* %16, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %17 = getelementptr inbounds i8, i8* %8, i64 24
  store i8 %4, i8* %17, align 8
  %18 = bitcast i8* %8 to %"class.SkSL::Expression"*
  ret %"class.SkSL::Expression"* %18
}

declare void @_ZN22SkDynamicMemoryWStream5resetEv(%class.SkDynamicMemoryWStream*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL12OutputStream7isValidEv(%"class.SkSL::OutputStream"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL12StringStream6write8Eh(%"class.SkSL::StringStream"*, i8 zeroext) unnamed_addr #0 comdat align 2 {
  %3 = alloca i8, align 1
  %4 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 1, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #14
  store i8 %1, i8* %3, align 1
  %5 = bitcast %class.SkWStream* %4 to i1 (%class.SkWStream*, i8*, i64)***
  %6 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %5, align 8
  %7 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %6, i64 2
  %8 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %7, align 8
  %9 = call zeroext i1 %8(%class.SkWStream* %4, i8* nonnull %3, i64 1) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL12StringStream9writeTextEPKc(%"class.SkSL::StringStream"*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 1, i32 0
  %4 = tail call i64 @strlen(i8* %1) #17
  %5 = bitcast %class.SkWStream* %3 to i1 (%class.SkWStream*, i8*, i64)***
  %6 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %5, align 8
  %7 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %6, i64 2
  %8 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %7, align 8
  %9 = tail call zeroext i1 %8(%class.SkWStream* %3, i8* %1, i64 %4) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL12StringStream5writeEPKvm(%"class.SkSL::StringStream"*, i8*, i64) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 1
  %5 = tail call zeroext i1 @_ZN22SkDynamicMemoryWStream5writeEPKvm(%class.SkDynamicMemoryWStream* %4, i8* %1, i64 %2) #14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL12StringStreamD0Ev(%"class.SkSL::StringStream"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4SkSL12StringStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 2, i32 0
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #16
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 1
  tail call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* %12) #14
  %13 = bitcast %"class.SkSL::StringStream"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #16
  ret void
}

declare zeroext i1 @_ZN22SkDynamicMemoryWStream5writeEPKvm(%class.SkDynamicMemoryWStream*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream*) unnamed_addr #13

declare { i64, i32 } @_ZNK4SkSL12ProgramUsage3getERKNS_8VariableE(%"class.SkSL::ProgramUsage"*, %"class.SkSL::Variable"* dereferenceable(64)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15stackIjNS_5dequeIjNS_9allocatorIjEEEEED2Ev(%"class.std::__1::stack"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32**, i32*** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 10
  %7 = getelementptr inbounds i32*, i32** %3, i64 %6
  %8 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %9 = load i32**, i32*** %8, align 8
  %10 = icmp eq i32** %9, %3
  %11 = ptrtoint i32** %9 to i64
  %12 = ptrtoint i32** %3 to i64
  br i1 %10, label %13, label %15

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  br label %28

15:                                               ; preds = %1
  %16 = load i32*, i32** %7, align 8
  %17 = and i64 %5, 1023
  %18 = getelementptr inbounds i32, i32* %16, i64 %17
  %19 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, %5
  %22 = lshr i64 %21, 10
  %23 = getelementptr inbounds i32*, i32** %3, i64 %22
  %24 = load i32*, i32** %23, align 8
  %25 = and i64 %21, 1023
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  %27 = icmp eq i32* %26, %18
  br i1 %27, label %28, label %34

28:                                               ; preds = %47, %15, %13
  %29 = phi i64* [ %14, %13 ], [ %19, %15 ], [ %19, %47 ]
  store i64 0, i64* %29, align 8
  %30 = bitcast i32*** %8 to i64*
  %31 = sub i64 %11, %12
  %32 = ashr exact i64 %31, 3
  %33 = icmp ugt i64 %32, 2
  br i1 %33, label %52, label %65

34:                                               ; preds = %15, %47
  %35 = phi i32* [ %50, %47 ], [ %18, %15 ]
  %36 = phi i32** [ %49, %47 ], [ %7, %15 ]
  %37 = getelementptr inbounds i32, i32* %35, i64 1
  %38 = ptrtoint i32* %37 to i64
  %39 = bitcast i32** %36 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %38, %40
  %42 = icmp eq i64 %41, 4096
  br i1 %42, label %43, label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds i32*, i32** %36, i64 1
  %45 = bitcast i32** %44 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %43, %34
  %48 = phi i64 [ %46, %43 ], [ %38, %34 ]
  %49 = phi i32** [ %44, %43 ], [ %36, %34 ]
  %50 = inttoptr i64 %48 to i32*
  %51 = icmp eq i32* %26, %50
  br i1 %51, label %28, label %34

52:                                               ; preds = %28, %52
  %53 = phi i32** [ %57, %52 ], [ %3, %28 ]
  %54 = bitcast i32** %53 to i8**
  %55 = load i8*, i8** %54, align 8
  tail call void @_ZdlPv(i8* %55) #16
  %56 = load i32**, i32*** %2, align 8
  %57 = getelementptr inbounds i32*, i32** %56, i64 1
  store i32** %57, i32*** %2, align 8
  %58 = load i64, i64* %30, align 8
  %59 = ptrtoint i32** %57 to i64
  %60 = sub i64 %58, %59
  %61 = ashr exact i64 %60, 3
  %62 = icmp ugt i64 %61, 2
  br i1 %62, label %52, label %63

63:                                               ; preds = %52
  %64 = inttoptr i64 %58 to i32**
  br label %65

65:                                               ; preds = %63, %28
  %66 = phi i32** [ %9, %28 ], [ %64, %63 ]
  %67 = phi i32** [ %3, %28 ], [ %57, %63 ]
  %68 = phi i64 [ %32, %28 ], [ %61, %63 ]
  switch i64 %68, label %72 [
    i64 1, label %70
    i64 2, label %69
  ]

69:                                               ; preds = %65
  br label %70

70:                                               ; preds = %65, %69
  %71 = phi i64 [ 1024, %69 ], [ 512, %65 ]
  store i64 %71, i64* %4, align 8
  br label %72

72:                                               ; preds = %70, %65
  %73 = icmp eq i32** %67, %66
  br i1 %73, label %92, label %74

74:                                               ; preds = %72, %74
  %75 = phi i32** [ %78, %74 ], [ %67, %72 ]
  %76 = bitcast i32** %75 to i8**
  %77 = load i8*, i8** %76, align 8
  tail call void @_ZdlPv(i8* %77) #16
  %78 = getelementptr inbounds i32*, i32** %75, i64 1
  %79 = icmp eq i32** %78, %66
  br i1 %79, label %80, label %74

80:                                               ; preds = %74
  %81 = load i32**, i32*** %2, align 8
  %82 = load i32**, i32*** %8, align 8
  %83 = icmp eq i32** %82, %81
  br i1 %83, label %92, label %84

84:                                               ; preds = %80
  %85 = ptrtoint i32** %81 to i64
  %86 = getelementptr i32*, i32** %82, i64 -1
  %87 = ptrtoint i32** %86 to i64
  %88 = sub i64 %87, %85
  %89 = lshr i64 %88, 3
  %90 = xor i64 %89, -1
  %91 = getelementptr i32*, i32** %82, i64 %90
  store i32** %91, i32*** %8, align 8
  br label %92

92:                                               ; preds = %84, %80, %72
  %93 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %94 = load i32**, i32*** %93, align 8
  %95 = icmp eq i32** %94, null
  br i1 %95, label %98, label %96

96:                                               ; preds = %92
  %97 = bitcast i32** %94 to i8*
  tail call void @_ZdlPv(i8* %97) #16
  br label %98

98:                                               ; preds = %92, %96
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"*) local_unnamed_addr #13

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %class.SkTArray.500* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray.500*, %class.SkTArray.500* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %class.SkTArray.500* %0, %1
  br i1 %3, label %76, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.SkTArray.500, %class.SkTArray.500* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %class.SkTArray.500, %class.SkTArray.500* %0, i64 0, i32 0
  br label %59

11:                                               ; preds = %70, %4
  %12 = phi i64 [ %6, %4 ], [ %72, %70 ]
  %13 = and i64 %12, -4294967295
  store i64 %13, i64* %5, align 8
  %14 = getelementptr inbounds %class.SkTArray.500, %class.SkTArray.500* %1, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = lshr i64 %15, 1
  %17 = trunc i64 %16 to i32
  %18 = and i32 %17, 2147483647
  tail call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.500* %0, i32 %18, i32 0)
  %19 = load i64, i64* %14, align 8
  %20 = and i64 %19, 4294967294
  %21 = load i64, i64* %5, align 8
  %22 = and i64 %21, -4294967295
  %23 = or i64 %22, %20
  store i64 %23, i64* %5, align 8
  %24 = bitcast %class.SkTArray.500* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = load i64, i64* %14, align 8
  %27 = and i64 %26, 4294967294
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %56, label %29

29:                                               ; preds = %11
  %30 = getelementptr inbounds %class.SkTArray.500, %class.SkTArray.500* %1, i64 0, i32 0
  br label %31

31:                                               ; preds = %50, %29
  %32 = phi i64 [ 0, %29 ], [ %51, %50 ]
  %33 = shl nuw nsw i64 %32, 3
  %34 = getelementptr inbounds i8, i8* %25, i64 %33
  %35 = load %"class.std::__1::unique_ptr.387"*, %"class.std::__1::unique_ptr.387"** %30, align 8
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.387", %"class.std::__1::unique_ptr.387"* %35, i64 %32
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.387", %"class.std::__1::unique_ptr.387"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = bitcast %"class.std::__1::unique_ptr.387"* %36 to i64*
  %39 = load i64, i64* %38, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %37, align 8
  %40 = bitcast i8* %34 to i64*
  store i64 %39, i64* %40, align 8
  %41 = load %"class.std::__1::unique_ptr.387"*, %"class.std::__1::unique_ptr.387"** %30, align 8
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.387", %"class.std::__1::unique_ptr.387"* %41, i64 %32, i32 0, i32 0, i32 0
  %43 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %42, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %42, align 8
  %44 = icmp eq %"class.SkSL::Statement"* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %31
  %46 = bitcast %"class.SkSL::Statement"* %43 to void (%"class.SkSL::Statement"*)***
  %47 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %47, i64 1
  %49 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %48, align 8
  tail call void %49(%"class.SkSL::Statement"* nonnull %43) #14
  br label %50

50:                                               ; preds = %45, %31
  %51 = add nuw nsw i64 %32, 1
  %52 = load i64, i64* %14, align 8
  %53 = lshr i64 %52, 1
  %54 = and i64 %53, 2147483647
  %55 = icmp ult i64 %51, %54
  br i1 %55, label %31, label %56

56:                                               ; preds = %50, %11
  %57 = phi i64 [ %26, %11 ], [ %52, %50 ]
  %58 = and i64 %57, -4294967295
  store i64 %58, i64* %14, align 8
  br label %76

59:                                               ; preds = %9, %70
  %60 = phi i64 [ 0, %9 ], [ %71, %70 ]
  %61 = load %"class.std::__1::unique_ptr.387"*, %"class.std::__1::unique_ptr.387"** %10, align 8
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.387", %"class.std::__1::unique_ptr.387"* %61, i64 %60, i32 0, i32 0, i32 0
  %63 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %62, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %62, align 8
  %64 = icmp eq %"class.SkSL::Statement"* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %59
  %66 = bitcast %"class.SkSL::Statement"* %63 to void (%"class.SkSL::Statement"*)***
  %67 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %67, i64 1
  %69 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %68, align 8
  tail call void %69(%"class.SkSL::Statement"* nonnull %63) #14
  br label %70

70:                                               ; preds = %59, %65
  %71 = add nuw nsw i64 %60, 1
  %72 = load i64, i64* %5, align 8
  %73 = lshr i64 %72, 1
  %74 = and i64 %73, 2147483647
  %75 = icmp ult i64 %71, %74
  br i1 %75, label %59, label %11

76:                                               ; preds = %2, %56
  ret %class.SkTArray.500* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.500*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.500, %class.SkTArray.500* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %87

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %87, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #14
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %75, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.500, %class.SkTArray.500* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %69, %48
  %51 = phi i64 [ 0, %48 ], [ %70, %69 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %"class.std::__1::unique_ptr.387"*, %"class.std::__1::unique_ptr.387"** %49, align 8
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr.387", %"class.std::__1::unique_ptr.387"* %54, i64 %51
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.387", %"class.std::__1::unique_ptr.387"* %55, i64 0, i32 0, i32 0, i32 0
  %57 = bitcast %"class.std::__1::unique_ptr.387"* %55 to i64*
  %58 = load i64, i64* %57, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %56, align 8
  %59 = bitcast i8* %53 to i64*
  store i64 %58, i64* %59, align 8
  %60 = load %"class.std::__1::unique_ptr.387"*, %"class.std::__1::unique_ptr.387"** %49, align 8
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.387", %"class.std::__1::unique_ptr.387"* %60, i64 %51, i32 0, i32 0, i32 0
  %62 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %61, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %61, align 8
  %63 = icmp eq %"class.SkSL::Statement"* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %50
  %65 = bitcast %"class.SkSL::Statement"* %62 to void (%"class.SkSL::Statement"*)***
  %66 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %66, i64 1
  %68 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %67, align 8
  tail call void %68(%"class.SkSL::Statement"* nonnull %62) #14
  br label %69

69:                                               ; preds = %64, %50
  %70 = add nuw nsw i64 %51, 1
  %71 = load i64, i64* %4, align 8
  %72 = lshr i64 %71, 1
  %73 = and i64 %72, 2147483647
  %74 = icmp ult i64 %70, %73
  br i1 %74, label %50, label %75

75:                                               ; preds = %69, %35
  %76 = phi i64 [ %45, %35 ], [ %71, %69 ]
  %77 = and i64 %76, 1
  %78 = icmp eq i64 %77, 0
  %79 = bitcast %class.SkTArray.500* %0 to i8**
  br i1 %78, label %83, label %80

80:                                               ; preds = %75
  %81 = load i8*, i8** %79, align 8
  tail call void @_Z7sk_freePv(i8* %81) #14
  %82 = load i64, i64* %4, align 8
  br label %83

83:                                               ; preds = %75, %80
  %84 = phi i64 [ %82, %80 ], [ %76, %75 ]
  store i8* %44, i8** %79, align 8
  %85 = and i64 %84, -4294967298
  %86 = or i64 %85, 1
  store i64 %86, i64* %4, align 8
  br label %87

87:                                               ; preds = %83, %32, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray*, %class.SkTArray* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %class.SkTArray* %0, %1
  br i1 %3, label %76, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  br label %59

11:                                               ; preds = %70, %4
  %12 = phi i64 [ %6, %4 ], [ %72, %70 ]
  %13 = and i64 %12, -4294967295
  store i64 %13, i64* %5, align 8
  %14 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %1, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = lshr i64 %15, 1
  %17 = trunc i64 %16 to i32
  %18 = and i32 %17, 2147483647
  tail call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %0, i32 %18, i32 0)
  %19 = load i64, i64* %14, align 8
  %20 = and i64 %19, 4294967294
  %21 = load i64, i64* %5, align 8
  %22 = and i64 %21, -4294967295
  %23 = or i64 %22, %20
  store i64 %23, i64* %5, align 8
  %24 = bitcast %class.SkTArray* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = load i64, i64* %14, align 8
  %27 = and i64 %26, 4294967294
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %56, label %29

29:                                               ; preds = %11
  %30 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %1, i64 0, i32 0
  br label %31

31:                                               ; preds = %50, %29
  %32 = phi i64 [ 0, %29 ], [ %51, %50 ]
  %33 = shl nuw nsw i64 %32, 3
  %34 = getelementptr inbounds i8, i8* %25, i64 %33
  %35 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %30, align 8
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %35, i64 %32
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = bitcast %"class.std::__1::unique_ptr.336"* %36 to i64*
  %39 = load i64, i64* %38, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %37, align 8
  %40 = bitcast i8* %34 to i64*
  store i64 %39, i64* %40, align 8
  %41 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %30, align 8
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %41, i64 %32, i32 0, i32 0, i32 0
  %43 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %42, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %42, align 8
  %44 = icmp eq %"class.SkSL::Expression"* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %31
  %46 = bitcast %"class.SkSL::Expression"* %43 to void (%"class.SkSL::Expression"*)***
  %47 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %47, i64 1
  %49 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %48, align 8
  tail call void %49(%"class.SkSL::Expression"* nonnull %43) #14
  br label %50

50:                                               ; preds = %45, %31
  %51 = add nuw nsw i64 %32, 1
  %52 = load i64, i64* %14, align 8
  %53 = lshr i64 %52, 1
  %54 = and i64 %53, 2147483647
  %55 = icmp ult i64 %51, %54
  br i1 %55, label %31, label %56

56:                                               ; preds = %50, %11
  %57 = phi i64 [ %26, %11 ], [ %52, %50 ]
  %58 = and i64 %57, -4294967295
  store i64 %58, i64* %14, align 8
  br label %76

59:                                               ; preds = %9, %70
  %60 = phi i64 [ 0, %9 ], [ %71, %70 ]
  %61 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %10, align 8
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %61, i64 %60, i32 0, i32 0, i32 0
  %63 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %62, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %62, align 8
  %64 = icmp eq %"class.SkSL::Expression"* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %59
  %66 = bitcast %"class.SkSL::Expression"* %63 to void (%"class.SkSL::Expression"*)***
  %67 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %67, i64 1
  %69 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %68, align 8
  tail call void %69(%"class.SkSL::Expression"* nonnull %63) #14
  br label %70

70:                                               ; preds = %59, %65
  %71 = add nuw nsw i64 %60, 1
  %72 = load i64, i64* %5, align 8
  %73 = lshr i64 %72, 1
  %74 = and i64 %73, 2147483647
  %75 = icmp ult i64 %71, %74
  br i1 %75, label %59, label %11

76:                                               ; preds = %2, %56
  ret %class.SkTArray* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %87

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %87, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #14
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %75, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %69, %48
  %51 = phi i64 [ 0, %48 ], [ %70, %69 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %49, align 8
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %54, i64 %51
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %55, i64 0, i32 0, i32 0, i32 0
  %57 = bitcast %"class.std::__1::unique_ptr.336"* %55 to i64*
  %58 = load i64, i64* %57, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %56, align 8
  %59 = bitcast i8* %53 to i64*
  store i64 %58, i64* %59, align 8
  %60 = load %"class.std::__1::unique_ptr.336"*, %"class.std::__1::unique_ptr.336"** %49, align 8
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336"* %60, i64 %51, i32 0, i32 0, i32 0
  %62 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %61, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %61, align 8
  %63 = icmp eq %"class.SkSL::Expression"* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %50
  %65 = bitcast %"class.SkSL::Expression"* %62 to void (%"class.SkSL::Expression"*)***
  %66 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %66, i64 1
  %68 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %67, align 8
  tail call void %68(%"class.SkSL::Expression"* nonnull %62) #14
  br label %69

69:                                               ; preds = %64, %50
  %70 = add nuw nsw i64 %51, 1
  %71 = load i64, i64* %4, align 8
  %72 = lshr i64 %71, 1
  %73 = and i64 %72, 2147483647
  %74 = icmp ult i64 %70, %73
  br i1 %74, label %50, label %75

75:                                               ; preds = %69, %35
  %76 = phi i64 [ %45, %35 ], [ %71, %69 ]
  %77 = and i64 %76, 1
  %78 = icmp eq i64 %77, 0
  %79 = bitcast %class.SkTArray* %0 to i8**
  br i1 %78, label %83, label %80

80:                                               ; preds = %75
  %81 = load i8*, i8** %79, align 8
  tail call void @_Z7sk_freePv(i8* %81) #14
  %82 = load i64, i64* %4, align 8
  br label %83

83:                                               ; preds = %75, %80
  %84 = phi i64 [ %82, %80 ], [ %76, %75 ]
  store i8* %44, i8** %79, align 8
  %85 = and i64 %84, -4294967298
  %86 = or i64 %85, 1
  store i64 %86, i64* %4, align 8
  br label %87

87:                                               ; preds = %83, %32, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.113"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS4_IJOS3_EEENS4_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.109"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.630"* dereferenceable(8), %"class.std::__1::tuple.633"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.109", %"class.std::__1::__hash_table.109"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #14, !range !12
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, -1
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.109", %"class.std::__1::__hash_table.109"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.113"**, %"struct.std::__1::__hash_node_base.113"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.113"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.113"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.113"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.113"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.113"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %145, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 40) #16, !noalias !171
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple.630", %"class.std::__1::tuple.630"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !171
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !171
  store i32 %62, i32* %61, align 4, !noalias !171
  %63 = getelementptr inbounds i8, i8* %57, i64 20
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %63, i8 0, i64 20, i1 false) #14, !noalias !171
  %64 = getelementptr inbounds i8, i8* %57, i64 8
  %65 = bitcast i8* %64 to i64*
  store i64 %7, i64* %65, align 8, !noalias !171
  %66 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.113"**
  store %"struct.std::__1::__hash_node_base.113"* null, %"struct.std::__1::__hash_node_base.113"** %66, align 8, !noalias !171
  %67 = getelementptr inbounds %"class.std::__1::__hash_table.109", %"class.std::__1::__hash_table.109"* %0, i64 0, i32 2, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, 1
  %70 = uitofp i64 %69 to float
  %71 = uitofp i64 %9 to float
  %72 = getelementptr inbounds %"class.std::__1::__hash_table.109", %"class.std::__1::__hash_table.109"* %0, i64 0, i32 3, i32 0, i32 0
  %73 = load float, float* %72, align 4
  %74 = fmul float %73, %71
  %75 = fcmp olt float %74, %70
  %76 = or i1 %10, %75
  br i1 %76, label %77, label %100

77:                                               ; preds = %55
  %78 = shl i64 %9, 1
  %79 = icmp ult i64 %9, 3
  %80 = tail call i64 @llvm.ctpop.i64(i64 %9) #14, !range !12
  %81 = icmp ugt i64 %80, 1
  %82 = or i1 %79, %81
  %83 = zext i1 %82 to i64
  %84 = or i64 %78, %83
  %85 = fdiv float %70, %73
  %86 = tail call float @llvm.ceil.f32(float %85) #14
  %87 = fptoui float %86 to i64
  %88 = icmp ult i64 %84, %87
  %89 = select i1 %88, i64 %87, i64 %84
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.109"* %0, i64 %89)
  %90 = load i64, i64* %8, align 8
  %91 = tail call i64 @llvm.ctpop.i64(i64 %90) #14, !range !12
  %92 = icmp ugt i64 %91, 1
  br i1 %92, label %96, label %93

93:                                               ; preds = %77
  %94 = add i64 %90, -1
  %95 = and i64 %94, %7
  br label %100

96:                                               ; preds = %77
  %97 = icmp ugt i64 %90, %7
  br i1 %97, label %100, label %98

98:                                               ; preds = %96
  %99 = urem i64 %7, %90
  br label %100

100:                                              ; preds = %98, %96, %93, %55
  %101 = phi i64 [ %9, %55 ], [ %90, %93 ], [ %90, %96 ], [ %90, %98 ]
  %102 = phi i64 [ %56, %55 ], [ %95, %93 ], [ %7, %96 ], [ %99, %98 ]
  %103 = getelementptr inbounds %"class.std::__1::__hash_table.109", %"class.std::__1::__hash_table.109"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %104 = load %"struct.std::__1::__hash_node_base.113"**, %"struct.std::__1::__hash_node_base.113"*** %103, align 8
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %104, i64 %102
  %106 = load %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %105, align 8
  %107 = icmp eq %"struct.std::__1::__hash_node_base.113"* %106, null
  br i1 %107, label %108, label %134

108:                                              ; preds = %100
  %109 = getelementptr inbounds %"class.std::__1::__hash_table.109", %"class.std::__1::__hash_table.109"* %0, i64 0, i32 1, i32 0, i32 0
  %110 = bitcast %"struct.std::__1::__hash_node_base.113"* %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = bitcast i8* %57 to i64*
  store i64 %111, i64* %112, align 8
  %113 = bitcast %"struct.std::__1::__hash_node_base.113"* %109 to i8**
  store i8* %57, i8** %113, align 8
  store %"struct.std::__1::__hash_node_base.113"* %109, %"struct.std::__1::__hash_node_base.113"** %105, align 8
  %114 = load %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %66, align 8
  %115 = icmp eq %"struct.std::__1::__hash_node_base.113"* %114, null
  br i1 %115, label %141, label %116

116:                                              ; preds = %108
  %117 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %114, i64 1
  %118 = bitcast %"struct.std::__1::__hash_node_base.113"* %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = tail call i64 @llvm.ctpop.i64(i64 %101) #14, !range !12
  %121 = icmp ugt i64 %120, 1
  br i1 %121, label %125, label %122

122:                                              ; preds = %116
  %123 = add i64 %101, -1
  %124 = and i64 %119, %123
  br label %129

125:                                              ; preds = %116
  %126 = icmp ult i64 %119, %101
  br i1 %126, label %129, label %127

127:                                              ; preds = %125
  %128 = urem i64 %119, %101
  br label %129

129:                                              ; preds = %122, %125, %127
  %130 = phi i64 [ %124, %122 ], [ %128, %127 ], [ %119, %125 ]
  %131 = load %"struct.std::__1::__hash_node_base.113"**, %"struct.std::__1::__hash_node_base.113"*** %103, align 8
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %131, i64 %130
  %133 = bitcast %"struct.std::__1::__hash_node_base.113"** %132 to i8**
  br label %139

134:                                              ; preds = %100
  %135 = bitcast %"struct.std::__1::__hash_node_base.113"* %106 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = bitcast i8* %57 to i64*
  store i64 %136, i64* %137, align 8
  %138 = bitcast %"struct.std::__1::__hash_node_base.113"* %106 to i8**
  br label %139

139:                                              ; preds = %129, %134
  %140 = phi i8** [ %138, %134 ], [ %133, %129 ]
  store i8* %57, i8** %140, align 8
  br label %141

141:                                              ; preds = %139, %108
  %142 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.113"*
  %143 = load i64, i64* %67, align 8
  %144 = add i64 %143, 1
  store i64 %144, i64* %67, align 8
  br label %145

145:                                              ; preds = %50, %141
  %146 = phi i8 [ 1, %141 ], [ 0, %50 ]
  %147 = phi %"struct.std::__1::__hash_node_base.113"* [ %142, %141 ], [ %33, %50 ]
  %148 = insertvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } undef, %"struct.std::__1::__hash_node_base.113"* %147, 0
  %149 = insertvalue { %"struct.std::__1::__hash_node_base.113"*, i8 } %148, i8 %146, 1
  ret { %"struct.std::__1::__hash_node_base.113"*, i8 } %149
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.109"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !12
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #14
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.109", %"class.std::__1::__hash_table.109"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.109"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #14, !range !12
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.109", %"class.std::__1::__hash_table.109"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.109", %"class.std::__1::__hash_table.109"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #14
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #14, !range !12
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #14
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.109"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.109"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.109", %"class.std::__1::__hash_table.109"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #15
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #16
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.109", %"class.std::__1::__hash_table.109"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.113"**, %"struct.std::__1::__hash_node_base.113"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.109"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.113"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.113"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #16
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.115", %"class.std::__1::__bucket_list_deallocator.115"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.113"**, %"struct.std::__1::__hash_node_base.113"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.113"* null, %"struct.std::__1::__hash_node_base.113"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !174

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.109", %"class.std::__1::__hash_table.109"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.113"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.113"**, %"struct.std::__1::__hash_node_base.113"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.113"* null, %"struct.std::__1::__hash_node_base.113"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.113"**, %"struct.std::__1::__hash_node_base.113"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.113"* null, %"struct.std::__1::__hash_node_base.113"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.113"**, %"struct.std::__1::__hash_node_base.113"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.113"* null, %"struct.std::__1::__hash_node_base.113"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.113"**, %"struct.std::__1::__hash_node_base.113"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.113"* null, %"struct.std::__1::__hash_node_base.113"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.113"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #14, !range !12
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.113"**, %"struct.std::__1::__hash_node_base.113"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.113"* %36, %"struct.std::__1::__hash_node_base.113"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.113"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.113"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.113"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.113"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.113"**, %"struct.std::__1::__hash_node_base.113"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.113"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.113"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.113"* %82, %"struct.std::__1::__hash_node_base.113"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.113"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.113"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.113"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.113"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.113"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.113"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.113"**, %"struct.std::__1::__hash_node_base.113"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.113"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.113"**, %"struct.std::__1::__hash_node_base.113"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.113"* %80, %"struct.std::__1::__hash_node_base.113"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.113"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.113", %"struct.std::__1::__hash_node_base.113"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.113"*, %"struct.std::__1::__hash_node_base.113"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.113"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.109", %"class.std::__1::__hash_table.109"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.113"**, %"struct.std::__1::__hash_node_base.113"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.113"** null, %"struct.std::__1::__hash_node_base.113"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.113"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.113"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #16
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.115", %"class.std::__1::__bucket_list_deallocator.115"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.218"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringEjEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_S9_S7_Lb1EEENS_9allocatorIS4_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEERKT_(%"class.std::__1::__hash_table.214"*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %4 = bitcast %"class.SkSL::String"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.SkSL::String"* %1 to i8*
  %13 = zext i8 %6 to i64
  %14 = select i1 %7, i8* %9, i8* %12
  %15 = select i1 %7, i64 %11, i64 %13
  %16 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #14
  %17 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %3, i8* %14, i64 %15) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #14
  %18 = getelementptr inbounds %"class.std::__1::__hash_table.214", %"class.std::__1::__hash_table.214"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %68, label %21

21:                                               ; preds = %2
  %22 = call i64 @llvm.ctpop.i64(i64 %19) #14, !range !12
  %23 = icmp ugt i64 %22, 1
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = add i64 %19, -1
  %26 = and i64 %25, %17
  br label %31

27:                                               ; preds = %21
  %28 = icmp ult i64 %17, %19
  br i1 %28, label %31, label %29

29:                                               ; preds = %27
  %30 = urem i64 %17, %19
  br label %31

31:                                               ; preds = %24, %27, %29
  %32 = phi i64 [ %26, %24 ], [ %30, %29 ], [ %17, %27 ]
  %33 = getelementptr inbounds %"class.std::__1::__hash_table.214", %"class.std::__1::__hash_table.214"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base.218"**, %"struct.std::__1::__hash_node_base.218"*** %33, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %34, i64 %32
  %36 = load %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base.218"* %36, null
  br i1 %37, label %68, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218", %"struct.std::__1::__hash_node_base.218"* %36, i64 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.218"* %40, null
  br i1 %41, label %68, label %42

42:                                               ; preds = %38
  %43 = add i64 %19, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.218"* [ %40, %42 ], [ %66, %64 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218", %"struct.std::__1::__hash_node_base.218"* %45, i64 1
  %47 = bitcast %"struct.std::__1::__hash_node_base.218"* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = icmp eq i64 %48, %17
  br i1 %49, label %60, label %50

50:                                               ; preds = %44
  br i1 %23, label %53, label %51

51:                                               ; preds = %50
  %52 = and i64 %48, %43
  br label %57

53:                                               ; preds = %50
  %54 = icmp ult i64 %48, %19
  br i1 %54, label %57, label %55

55:                                               ; preds = %53
  %56 = urem i64 %48, %19
  br label %57

57:                                               ; preds = %51, %53, %55
  %58 = phi i64 [ %52, %51 ], [ %56, %55 ], [ %48, %53 ]
  %59 = icmp eq i64 %58, %32
  br i1 %59, label %64, label %68

60:                                               ; preds = %44
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218", %"struct.std::__1::__hash_node_base.218"* %45, i64 2
  %62 = bitcast %"struct.std::__1::__hash_node_base.218"* %61 to %"class.SkSL::String"*
  %63 = call zeroext i1 @_ZNK4SkSL6StringeqERKS0_(%"class.SkSL::String"* %62, %"class.SkSL::String"* dereferenceable(24) %1) #14
  br i1 %63, label %68, label %64

64:                                               ; preds = %57, %60
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218", %"struct.std::__1::__hash_node_base.218"* %45, i64 0, i32 0
  %66 = load %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %65, align 8
  %67 = icmp eq %"struct.std::__1::__hash_node_base.218"* %66, null
  br i1 %67, label %68, label %44

68:                                               ; preds = %60, %64, %57, %38, %2, %31
  %69 = phi %"struct.std::__1::__hash_node_base.218"* [ null, %31 ], [ null, %2 ], [ null, %38 ], [ %45, %60 ], [ null, %64 ], [ null, %57 ]
  ret %"struct.std::__1::__hash_node_base.218"* %69
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"*, i8*, i64) local_unnamed_addr #5 comdat align 2 {
  %4 = icmp ult i64 %2, 33
  br i1 %4, label %5, label %50

5:                                                ; preds = %3
  %6 = icmp ult i64 %2, 17
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = tail call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8* %1, i64 %2)
  br label %329

9:                                                ; preds = %5
  %10 = bitcast i8* %1 to i64*
  %11 = load i64, i64* %10, align 1
  %12 = mul i64 %11, -5435081209227447693
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = getelementptr inbounds i8, i8* %1, i64 %2
  %17 = getelementptr inbounds i8, i8* %16, i64 -8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = mul i64 %19, -7286425919675154353
  %21 = getelementptr inbounds i8, i8* %16, i64 -16
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 1
  %24 = mul i64 %23, -4348849565147123417
  %25 = sub i64 %12, %15
  %26 = lshr i64 %25, 43
  %27 = shl i64 %25, 21
  %28 = or i64 %27, %26
  %29 = lshr i64 %20, 30
  %30 = mul i64 %19, -4737503975807385600
  %31 = or i64 %29, %30
  %32 = add i64 %24, %28
  %33 = add i64 %32, %31
  %34 = xor i64 %15, -3942382747735136937
  %35 = lshr i64 %34, 20
  %36 = shl i64 %34, 44
  %37 = or i64 %36, %35
  %38 = add i64 %12, %2
  %39 = sub i64 %38, %20
  %40 = add i64 %39, %37
  %41 = xor i64 %33, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %329

50:                                               ; preds = %3
  %51 = icmp ult i64 %2, 65
  br i1 %51, label %52, label %132

52:                                               ; preds = %50
  %53 = getelementptr inbounds i8, i8* %1, i64 24
  %54 = bitcast i8* %53 to i64*
  %55 = load i64, i64* %54, align 1
  %56 = bitcast i8* %1 to i64*
  %57 = load i64, i64* %56, align 1
  %58 = getelementptr inbounds i8, i8* %1, i64 %2
  %59 = getelementptr inbounds i8, i8* %58, i64 -16
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 1
  %62 = add i64 %61, %2
  %63 = mul i64 %62, -4348849565147123417
  %64 = add i64 %63, %57
  %65 = add i64 %64, %55
  %66 = lshr i64 %65, 52
  %67 = shl i64 %65, 12
  %68 = or i64 %67, %66
  %69 = lshr i64 %64, 37
  %70 = shl i64 %64, 27
  %71 = or i64 %70, %69
  %72 = getelementptr inbounds i8, i8* %1, i64 8
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 1
  %75 = add i64 %64, %74
  %76 = lshr i64 %75, 7
  %77 = shl i64 %75, 57
  %78 = or i64 %77, %76
  %79 = getelementptr inbounds i8, i8* %1, i64 16
  %80 = bitcast i8* %79 to i64*
  %81 = load i64, i64* %80, align 1
  %82 = add i64 %75, %81
  %83 = lshr i64 %82, 31
  %84 = shl i64 %82, 33
  %85 = or i64 %84, %83
  %86 = add i64 %78, %71
  %87 = add i64 %86, %68
  %88 = add i64 %87, %85
  %89 = getelementptr inbounds i8, i8* %58, i64 -32
  %90 = bitcast i8* %89 to i64*
  %91 = load i64, i64* %90, align 1
  %92 = add i64 %91, %81
  %93 = getelementptr inbounds i8, i8* %58, i64 -8
  %94 = bitcast i8* %93 to i64*
  %95 = load i64, i64* %94, align 1
  %96 = add i64 %95, %55
  %97 = add i64 %96, %92
  %98 = lshr i64 %97, 52
  %99 = shl i64 %97, 12
  %100 = or i64 %99, %98
  %101 = lshr i64 %92, 37
  %102 = shl i64 %92, 27
  %103 = or i64 %102, %101
  %104 = getelementptr inbounds i8, i8* %58, i64 -24
  %105 = bitcast i8* %104 to i64*
  %106 = load i64, i64* %105, align 1
  %107 = add i64 %106, %92
  %108 = lshr i64 %107, 7
  %109 = shl i64 %107, 57
  %110 = or i64 %109, %108
  %111 = add i64 %107, %61
  %112 = add i64 %111, %96
  %113 = lshr i64 %111, 31
  %114 = shl i64 %111, 33
  %115 = or i64 %114, %113
  %116 = add i64 %82, %55
  %117 = add i64 %116, %103
  %118 = add i64 %117, %110
  %119 = add i64 %118, %100
  %120 = add i64 %119, %115
  %121 = mul i64 %120, -7286425919675154353
  %122 = add i64 %112, %88
  %123 = mul i64 %122, -4348849565147123417
  %124 = add i64 %121, %123
  %125 = lshr i64 %124, 47
  %126 = xor i64 %125, %124
  %127 = mul i64 %126, -4348849565147123417
  %128 = add i64 %127, %88
  %129 = lshr i64 %128, 47
  %130 = xor i64 %129, %128
  %131 = mul i64 %130, -7286425919675154353
  br label %329

132:                                              ; preds = %50
  %133 = getelementptr inbounds i8, i8* %1, i64 %2
  %134 = getelementptr inbounds i8, i8* %133, i64 -40
  %135 = bitcast i8* %134 to i64*
  %136 = load i64, i64* %135, align 1
  %137 = getelementptr inbounds i8, i8* %133, i64 -16
  %138 = bitcast i8* %137 to i64*
  %139 = load i64, i64* %138, align 1
  %140 = getelementptr inbounds i8, i8* %133, i64 -56
  %141 = bitcast i8* %140 to i64*
  %142 = load i64, i64* %141, align 1
  %143 = add i64 %142, %139
  %144 = getelementptr inbounds i8, i8* %133, i64 -48
  %145 = bitcast i8* %144 to i64*
  %146 = load i64, i64* %145, align 1
  %147 = add i64 %146, %2
  %148 = getelementptr inbounds i8, i8* %133, i64 -24
  %149 = bitcast i8* %148 to i64*
  %150 = load i64, i64* %149, align 1
  %151 = xor i64 %150, %147
  %152 = mul i64 %151, -7070675565921424023
  %153 = lshr i64 %152, 47
  %154 = xor i64 %152, %150
  %155 = xor i64 %154, %153
  %156 = mul i64 %155, -7070675565921424023
  %157 = lshr i64 %156, 47
  %158 = xor i64 %157, %156
  %159 = mul i64 %158, -7070675565921424023
  %160 = getelementptr inbounds i8, i8* %133, i64 -64
  %161 = bitcast i8* %160 to i64*
  %162 = load i64, i64* %161, align 1
  %163 = add i64 %162, %2
  %164 = add i64 %136, %163
  %165 = add i64 %164, %159
  %166 = lshr i64 %165, 21
  %167 = shl i64 %165, 43
  %168 = or i64 %167, %166
  %169 = add i64 %163, %142
  %170 = add i64 %169, %146
  %171 = lshr i64 %170, 44
  %172 = shl i64 %170, 20
  %173 = or i64 %172, %171
  %174 = add i64 %170, %136
  %175 = add i64 %173, %163
  %176 = add i64 %175, %168
  %177 = getelementptr inbounds i8, i8* %133, i64 -32
  %178 = add i64 %143, -5435081209227447693
  %179 = bitcast i8* %177 to i64*
  %180 = load i64, i64* %179, align 1
  %181 = getelementptr inbounds i8, i8* %177, i64 24
  %182 = bitcast i8* %181 to i64*
  %183 = load i64, i64* %182, align 1
  %184 = add i64 %178, %180
  %185 = add i64 %184, %136
  %186 = add i64 %185, %183
  %187 = lshr i64 %186, 21
  %188 = shl i64 %186, 43
  %189 = or i64 %188, %187
  %190 = add i64 %184, %150
  %191 = add i64 %190, %139
  %192 = lshr i64 %191, 44
  %193 = shl i64 %191, 20
  %194 = or i64 %193, %192
  %195 = add i64 %191, %183
  %196 = add i64 %194, %184
  %197 = add i64 %196, %189
  %198 = mul i64 %136, -5435081209227447693
  %199 = bitcast i8* %1 to i64*
  %200 = load i64, i64* %199, align 1
  %201 = add i64 %200, %198
  %202 = add i64 %2, -1
  %203 = and i64 %202, -64
  br label %204

204:                                              ; preds = %292, %132
  %205 = phi i64 [ %200, %132 ], [ %294, %292 ]
  %206 = phi i64 [ %197, %132 ], [ %288, %292 ]
  %207 = phi i64 [ %195, %132 ], [ %286, %292 ]
  %208 = phi i64 [ %174, %132 ], [ %264, %292 ]
  %209 = phi i64 [ %176, %132 ], [ %266, %292 ]
  %210 = phi i64 [ %159, %132 ], [ %234, %292 ]
  %211 = phi i64 [ %201, %132 ], [ %244, %292 ]
  %212 = phi i64 [ %203, %132 ], [ %290, %292 ]
  %213 = phi i8* [ %1, %132 ], [ %289, %292 ]
  %214 = phi i64 [ %143, %132 ], [ %239, %292 ]
  %215 = getelementptr inbounds i8, i8* %213, i64 8
  %216 = bitcast i8* %215 to i64*
  %217 = load i64, i64* %216, align 1
  %218 = add i64 %211, %208
  %219 = add i64 %218, %214
  %220 = add i64 %219, %217
  %221 = lshr i64 %220, 37
  %222 = shl i64 %220, 27
  %223 = or i64 %222, %221
  %224 = mul i64 %223, -5435081209227447693
  %225 = add i64 %214, %209
  %226 = getelementptr inbounds i8, i8* %213, i64 48
  %227 = bitcast i8* %226 to i64*
  %228 = load i64, i64* %227, align 1
  %229 = add i64 %225, %228
  %230 = lshr i64 %229, 42
  %231 = shl i64 %229, 22
  %232 = or i64 %231, %230
  %233 = mul i64 %232, -5435081209227447693
  %234 = xor i64 %224, %206
  %235 = getelementptr inbounds i8, i8* %213, i64 40
  %236 = bitcast i8* %235 to i64*
  %237 = load i64, i64* %236, align 1
  %238 = add i64 %237, %208
  %239 = add i64 %238, %233
  %240 = add i64 %210, %207
  %241 = lshr i64 %240, 33
  %242 = shl i64 %240, 31
  %243 = or i64 %242, %241
  %244 = mul i64 %243, -5435081209227447693
  %245 = mul i64 %209, -5435081209227447693
  %246 = getelementptr inbounds i8, i8* %213, i64 16
  %247 = bitcast i8* %246 to i64*
  %248 = load i64, i64* %247, align 1
  %249 = getelementptr inbounds i8, i8* %213, i64 24
  %250 = bitcast i8* %249 to i64*
  %251 = load i64, i64* %250, align 1
  %252 = add i64 %205, %245
  %253 = add i64 %252, %207
  %254 = add i64 %253, %251
  %255 = add i64 %254, %234
  %256 = lshr i64 %255, 21
  %257 = shl i64 %255, 43
  %258 = or i64 %257, %256
  %259 = add i64 %252, %217
  %260 = add i64 %259, %248
  %261 = lshr i64 %260, 44
  %262 = shl i64 %260, 20
  %263 = or i64 %262, %261
  %264 = add i64 %260, %251
  %265 = add i64 %263, %252
  %266 = add i64 %265, %258
  %267 = getelementptr inbounds i8, i8* %213, i64 32
  %268 = add i64 %244, %206
  %269 = add i64 %239, %248
  %270 = bitcast i8* %267 to i64*
  %271 = load i64, i64* %270, align 1
  %272 = getelementptr inbounds i8, i8* %213, i64 56
  %273 = bitcast i8* %272 to i64*
  %274 = load i64, i64* %273, align 1
  %275 = add i64 %268, %271
  %276 = add i64 %269, %275
  %277 = add i64 %276, %274
  %278 = lshr i64 %277, 21
  %279 = shl i64 %277, 43
  %280 = or i64 %279, %278
  %281 = add i64 %275, %237
  %282 = add i64 %281, %228
  %283 = lshr i64 %282, 44
  %284 = shl i64 %282, 20
  %285 = or i64 %284, %283
  %286 = add i64 %282, %274
  %287 = add i64 %285, %275
  %288 = add i64 %287, %280
  %289 = getelementptr inbounds i8, i8* %213, i64 64
  %290 = add i64 %212, -64
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %295, label %292

292:                                              ; preds = %204
  %293 = bitcast i8* %289 to i64*
  %294 = load i64, i64* %293, align 1
  br label %204

295:                                              ; preds = %204
  %296 = xor i64 %286, %264
  %297 = mul i64 %296, -7070675565921424023
  %298 = lshr i64 %297, 47
  %299 = xor i64 %297, %286
  %300 = xor i64 %299, %298
  %301 = mul i64 %300, -7070675565921424023
  %302 = lshr i64 %301, 47
  %303 = xor i64 %302, %301
  %304 = mul i64 %303, -7070675565921424023
  %305 = lshr i64 %239, 47
  %306 = xor i64 %305, %239
  %307 = mul i64 %306, -5435081209227447693
  %308 = add i64 %307, %234
  %309 = add i64 %308, %304
  %310 = xor i64 %288, %266
  %311 = mul i64 %310, -7070675565921424023
  %312 = lshr i64 %311, 47
  %313 = xor i64 %311, %288
  %314 = xor i64 %313, %312
  %315 = mul i64 %314, -7070675565921424023
  %316 = lshr i64 %315, 47
  %317 = xor i64 %316, %315
  %318 = mul i64 %317, -7070675565921424023
  %319 = add i64 %318, %244
  %320 = xor i64 %319, %309
  %321 = mul i64 %320, -7070675565921424023
  %322 = lshr i64 %321, 47
  %323 = xor i64 %321, %319
  %324 = xor i64 %323, %322
  %325 = mul i64 %324, -7070675565921424023
  %326 = lshr i64 %325, 47
  %327 = xor i64 %326, %325
  %328 = mul i64 %327, -7070675565921424023
  br label %329

329:                                              ; preds = %295, %52, %9, %7
  %330 = phi i64 [ %8, %7 ], [ %49, %9 ], [ %131, %52 ], [ %328, %295 ]
  ret i64 %330
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 8
  br i1 %3, label %4, label %28

4:                                                ; preds = %2
  %5 = bitcast i8* %0 to i64*
  %6 = load i64, i64* %5, align 1
  %7 = getelementptr inbounds i8, i8* %0, i64 %1
  %8 = getelementptr inbounds i8, i8* %7, i64 -8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = add i64 %10, %1
  %12 = and i64 %1, 4294967295
  %13 = lshr i64 %11, %12
  %14 = sub i64 64, %1
  %15 = and i64 %14, 4294967295
  %16 = shl i64 %11, %15
  %17 = or i64 %16, %13
  %18 = xor i64 %17, %6
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %19, %17
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, -7070675565921424023
  %24 = lshr i64 %23, 47
  %25 = xor i64 %24, %23
  %26 = mul i64 %25, -7070675565921424023
  %27 = xor i64 %26, %10
  br label %74

28:                                               ; preds = %2
  %29 = icmp ugt i64 %1, 3
  br i1 %29, label %30, label %50

30:                                               ; preds = %28
  %31 = bitcast i8* %0 to i32*
  %32 = load i32, i32* %31, align 1
  %33 = getelementptr inbounds i8, i8* %0, i64 %1
  %34 = getelementptr inbounds i8, i8* %33, i64 -4
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = shl i32 %32, 3
  %38 = zext i32 %37 to i64
  %39 = add nuw nsw i64 %38, %1
  %40 = zext i32 %36 to i64
  %41 = xor i64 %39, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %74

50:                                               ; preds = %28
  %51 = icmp eq i64 %1, 0
  br i1 %51, label %74, label %52

52:                                               ; preds = %50
  %53 = load i8, i8* %0, align 1
  %54 = lshr i64 %1, 1
  %55 = getelementptr inbounds i8, i8* %0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = add nsw i64 %1, -1
  %58 = getelementptr inbounds i8, i8* %0, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %53 to i64
  %61 = zext i8 %56 to i64
  %62 = shl nuw nsw i64 %61, 8
  %63 = or i64 %62, %60
  %64 = zext i8 %59 to i64
  %65 = shl nuw nsw i64 %64, 2
  %66 = add nuw nsw i64 %65, %1
  %67 = mul i64 %63, -7286425919675154353
  %68 = and i64 %66, 4294967295
  %69 = mul i64 %68, -3942382747735136937
  %70 = xor i64 %69, %67
  %71 = lshr i64 %70, 47
  %72 = xor i64 %71, %70
  %73 = mul i64 %72, -7286425919675154353
  br label %74

74:                                               ; preds = %50, %52, %30, %4
  %75 = phi i64 [ %27, %4 ], [ %49, %30 ], [ %73, %52 ], [ -7286425919675154353, %50 ]
  ret i64 %75
}

declare zeroext i1 @_ZNK4SkSL6StringeqERKS0_(%"class.SkSL::String"*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.218"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringEjEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_S9_S7_Lb1EEENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSK_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.214"*, %"class.SkSL::String"* dereferenceable(24), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.652"* dereferenceable(8), %"class.std::__1::tuple.633"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %7 = bitcast %"class.SkSL::String"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.SkSL::String"* %1 to i8*
  %16 = zext i8 %9 to i64
  %17 = select i1 %10, i8* %12, i8* %15
  %18 = select i1 %10, i64 %14, i64 %16
  %19 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %19) #14
  %20 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %6, i8* %17, i64 %18) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %19) #14
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.214", %"class.std::__1::__hash_table.214"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %67, label %24

24:                                               ; preds = %5
  %25 = call i64 @llvm.ctpop.i64(i64 %22) #14, !range !12
  %26 = icmp ugt i64 %25, 1
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = add i64 %22, -1
  %29 = and i64 %28, %20
  br label %34

30:                                               ; preds = %24
  %31 = icmp ult i64 %20, %22
  br i1 %31, label %34, label %32

32:                                               ; preds = %30
  %33 = urem i64 %20, %22
  br label %34

34:                                               ; preds = %27, %30, %32
  %35 = phi i64 [ %29, %27 ], [ %33, %32 ], [ %20, %30 ]
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.214", %"class.std::__1::__hash_table.214"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base.218"**, %"struct.std::__1::__hash_node_base.218"*** %36, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %37, i64 %35
  %39 = load %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base.218"* %39, null
  br i1 %40, label %67, label %41

41:                                               ; preds = %34
  %42 = add i64 %22, -1
  br label %43

43:                                               ; preds = %41, %63
  %44 = phi %"struct.std::__1::__hash_node_base.218"* [ %46, %63 ], [ %39, %41 ]
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218", %"struct.std::__1::__hash_node_base.218"* %44, i64 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base.218"* %46, null
  br i1 %47, label %67, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218", %"struct.std::__1::__hash_node_base.218"* %46, i64 1
  %50 = bitcast %"struct.std::__1::__hash_node_base.218"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, %20
  br i1 %52, label %63, label %53

53:                                               ; preds = %48
  br i1 %26, label %56, label %54

54:                                               ; preds = %53
  %55 = and i64 %51, %42
  br label %60

56:                                               ; preds = %53
  %57 = icmp ult i64 %51, %22
  br i1 %57, label %60, label %58

58:                                               ; preds = %56
  %59 = urem i64 %51, %22
  br label %60

60:                                               ; preds = %54, %56, %58
  %61 = phi i64 [ %55, %54 ], [ %59, %58 ], [ %51, %56 ]
  %62 = icmp eq i64 %61, %35
  br i1 %62, label %63, label %67

63:                                               ; preds = %48, %60
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218", %"struct.std::__1::__hash_node_base.218"* %46, i64 2
  %65 = bitcast %"struct.std::__1::__hash_node_base.218"* %64 to %"class.SkSL::String"*
  %66 = call zeroext i1 @_ZNK4SkSL6StringeqERKS0_(%"class.SkSL::String"* %65, %"class.SkSL::String"* dereferenceable(24) %1) #14
  br i1 %66, label %169, label %43

67:                                               ; preds = %43, %60, %34, %5
  %68 = phi i64 [ %35, %34 ], [ -6148914691236517206, %5 ], [ %35, %60 ], [ %35, %43 ]
  %69 = call i8* @_Znwm(i64 48) #16, !noalias !175
  %70 = getelementptr inbounds i8, i8* %69, i64 16
  %71 = getelementptr inbounds %"class.std::__1::tuple.652", %"class.std::__1::tuple.652"* %3, i64 0, i32 0, i32 0, i32 0
  %72 = load %"class.SkSL::String"*, %"class.SkSL::String"** %71, align 8, !noalias !175
  %73 = bitcast %"class.SkSL::String"* %72 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 1, !noalias !175
  %76 = icmp slt i8 %75, 0
  br i1 %76, label %79, label %77

77:                                               ; preds = %67
  %78 = bitcast %"class.SkSL::String"* %72 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %78, i64 24, i1 false) #14, !noalias !175
  br label %85

79:                                               ; preds = %67
  %80 = bitcast i8* %70 to %"class.std::__1::basic_string"*
  %81 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8, !noalias !175
  %83 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %84 = load i64, i64* %83, align 8, !noalias !175
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %80, i8* %82, i64 %84) #14, !noalias !175
  br label %85

85:                                               ; preds = %77, %79
  %86 = getelementptr inbounds i8, i8* %69, i64 40
  %87 = bitcast i8* %86 to i32*
  store i32 0, i32* %87, align 8, !noalias !175
  %88 = getelementptr inbounds i8, i8* %69, i64 8
  %89 = bitcast i8* %88 to i64*
  store i64 %20, i64* %89, align 8, !noalias !175
  %90 = bitcast i8* %69 to %"struct.std::__1::__hash_node_base.218"**
  store %"struct.std::__1::__hash_node_base.218"* null, %"struct.std::__1::__hash_node_base.218"** %90, align 8, !noalias !175
  %91 = getelementptr inbounds %"class.std::__1::__hash_table.214", %"class.std::__1::__hash_table.214"* %0, i64 0, i32 2, i32 0, i32 0
  %92 = load i64, i64* %91, align 8
  %93 = add i64 %92, 1
  %94 = uitofp i64 %93 to float
  %95 = uitofp i64 %22 to float
  %96 = getelementptr inbounds %"class.std::__1::__hash_table.214", %"class.std::__1::__hash_table.214"* %0, i64 0, i32 3, i32 0, i32 0
  %97 = load float, float* %96, align 4
  %98 = fmul float %97, %95
  %99 = fcmp olt float %98, %94
  %100 = or i1 %23, %99
  br i1 %100, label %101, label %124

101:                                              ; preds = %85
  %102 = shl i64 %22, 1
  %103 = icmp ult i64 %22, 3
  %104 = call i64 @llvm.ctpop.i64(i64 %22) #14, !range !12
  %105 = icmp ugt i64 %104, 1
  %106 = or i1 %103, %105
  %107 = zext i1 %106 to i64
  %108 = or i64 %102, %107
  %109 = fdiv float %94, %97
  %110 = call float @llvm.ceil.f32(float %109) #14
  %111 = fptoui float %110 to i64
  %112 = icmp ult i64 %108, %111
  %113 = select i1 %112, i64 %111, i64 %108
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringEjEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_S9_S7_Lb1EEENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table.214"* %0, i64 %113)
  %114 = load i64, i64* %21, align 8
  %115 = call i64 @llvm.ctpop.i64(i64 %114) #14, !range !12
  %116 = icmp ugt i64 %115, 1
  br i1 %116, label %120, label %117

117:                                              ; preds = %101
  %118 = add i64 %114, -1
  %119 = and i64 %118, %20
  br label %124

120:                                              ; preds = %101
  %121 = icmp ult i64 %20, %114
  br i1 %121, label %124, label %122

122:                                              ; preds = %120
  %123 = urem i64 %20, %114
  br label %124

124:                                              ; preds = %122, %120, %117, %85
  %125 = phi i64 [ %22, %85 ], [ %114, %117 ], [ %114, %120 ], [ %114, %122 ]
  %126 = phi i64 [ %68, %85 ], [ %119, %117 ], [ %20, %120 ], [ %123, %122 ]
  %127 = getelementptr inbounds %"class.std::__1::__hash_table.214", %"class.std::__1::__hash_table.214"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %128 = load %"struct.std::__1::__hash_node_base.218"**, %"struct.std::__1::__hash_node_base.218"*** %127, align 8
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %128, i64 %126
  %130 = load %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %129, align 8
  %131 = icmp eq %"struct.std::__1::__hash_node_base.218"* %130, null
  br i1 %131, label %132, label %158

132:                                              ; preds = %124
  %133 = getelementptr inbounds %"class.std::__1::__hash_table.214", %"class.std::__1::__hash_table.214"* %0, i64 0, i32 1, i32 0, i32 0
  %134 = bitcast %"struct.std::__1::__hash_node_base.218"* %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = bitcast i8* %69 to i64*
  store i64 %135, i64* %136, align 8
  %137 = bitcast %"struct.std::__1::__hash_node_base.218"* %133 to i8**
  store i8* %69, i8** %137, align 8
  store %"struct.std::__1::__hash_node_base.218"* %133, %"struct.std::__1::__hash_node_base.218"** %129, align 8
  %138 = load %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %90, align 8
  %139 = icmp eq %"struct.std::__1::__hash_node_base.218"* %138, null
  br i1 %139, label %165, label %140

140:                                              ; preds = %132
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218", %"struct.std::__1::__hash_node_base.218"* %138, i64 1
  %142 = bitcast %"struct.std::__1::__hash_node_base.218"* %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = call i64 @llvm.ctpop.i64(i64 %125) #14, !range !12
  %145 = icmp ugt i64 %144, 1
  br i1 %145, label %149, label %146

146:                                              ; preds = %140
  %147 = add i64 %125, -1
  %148 = and i64 %143, %147
  br label %153

149:                                              ; preds = %140
  %150 = icmp ult i64 %143, %125
  br i1 %150, label %153, label %151

151:                                              ; preds = %149
  %152 = urem i64 %143, %125
  br label %153

153:                                              ; preds = %146, %149, %151
  %154 = phi i64 [ %148, %146 ], [ %152, %151 ], [ %143, %149 ]
  %155 = load %"struct.std::__1::__hash_node_base.218"**, %"struct.std::__1::__hash_node_base.218"*** %127, align 8
  %156 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %155, i64 %154
  %157 = bitcast %"struct.std::__1::__hash_node_base.218"** %156 to i8**
  br label %163

158:                                              ; preds = %124
  %159 = bitcast %"struct.std::__1::__hash_node_base.218"* %130 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = bitcast i8* %69 to i64*
  store i64 %160, i64* %161, align 8
  %162 = bitcast %"struct.std::__1::__hash_node_base.218"* %130 to i8**
  br label %163

163:                                              ; preds = %153, %158
  %164 = phi i8** [ %162, %158 ], [ %157, %153 ]
  store i8* %69, i8** %164, align 8
  br label %165

165:                                              ; preds = %163, %132
  %166 = bitcast i8* %69 to %"struct.std::__1::__hash_node_base.218"*
  %167 = load i64, i64* %91, align 8
  %168 = add i64 %167, 1
  store i64 %168, i64* %91, align 8
  br label %169

169:                                              ; preds = %63, %165
  %170 = phi i8 [ 1, %165 ], [ 0, %63 ]
  %171 = phi %"struct.std::__1::__hash_node_base.218"* [ %166, %165 ], [ %46, %63 ]
  %172 = insertvalue { %"struct.std::__1::__hash_node_base.218"*, i8 } undef, %"struct.std::__1::__hash_node_base.218"* %171, 0
  %173 = insertvalue { %"struct.std::__1::__hash_node_base.218"*, i8 } %172, i8 %170, 1
  ret { %"struct.std::__1::__hash_node_base.218"*, i8 } %173
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringEjEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_S9_S7_Lb1EEENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table.214"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !12
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #14
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.214", %"class.std::__1::__hash_table.214"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringEjEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_S9_S7_Lb1EEENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.214"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #14, !range !12
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.214", %"class.std::__1::__hash_table.214"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.214", %"class.std::__1::__hash_table.214"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #14
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #14, !range !12
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #14
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringEjEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_S9_S7_Lb1EEENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.214"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringEjEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_S9_S7_Lb1EEENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.214"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.214", %"class.std::__1::__hash_table.214"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %141, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #15
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #16
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.214", %"class.std::__1::__hash_table.214"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.218"**, %"struct.std::__1::__hash_node_base.218"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.214"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.218"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.218"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #16
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.220", %"class.std::__1::__bucket_list_deallocator.220"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.218"**, %"struct.std::__1::__hash_node_base.218"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.218"* null, %"struct.std::__1::__hash_node_base.218"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !178

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.214", %"class.std::__1::__hash_table.214"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218", %"struct.std::__1::__hash_node_base.218"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.218"* %38, null
  br i1 %39, label %149, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.218"**, %"struct.std::__1::__hash_node_base.218"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.218"* null, %"struct.std::__1::__hash_node_base.218"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.218"**, %"struct.std::__1::__hash_node_base.218"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.218"* null, %"struct.std::__1::__hash_node_base.218"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.218"**, %"struct.std::__1::__hash_node_base.218"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.218"* null, %"struct.std::__1::__hash_node_base.218"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.218"**, %"struct.std::__1::__hash_node_base.218"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.218"* null, %"struct.std::__1::__hash_node_base.218"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218", %"struct.std::__1::__hash_node_base.218"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.218"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #14, !range !12
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.218"**, %"struct.std::__1::__hash_node_base.218"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.218"* %36, %"struct.std::__1::__hash_node_base.218"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218", %"struct.std::__1::__hash_node_base.218"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.218"* %75, null
  br i1 %76, label %149, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %135
  %80 = phi %"struct.std::__1::__hash_node_base.218"* [ %75, %77 ], [ %139, %135 ]
  %81 = phi i64 [ %71, %77 ], [ %137, %135 ]
  %82 = phi %"struct.std::__1::__hash_node_base.218"* [ %38, %77 ], [ %136, %135 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218", %"struct.std::__1::__hash_node_base.218"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.218"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %135, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.218"**, %"struct.std::__1::__hash_node_base.218"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.218"* %98, null
  br i1 %99, label %110, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218", %"struct.std::__1::__hash_node_base.218"* %80, i64 0, i32 0
  %102 = load %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base.218"* %102, null
  br i1 %103, label %121, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218", %"struct.std::__1::__hash_node_base.218"* %80, i64 2
  %106 = bitcast %"struct.std::__1::__hash_node_base.218"* %105 to %"class.SkSL::String"*
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218", %"struct.std::__1::__hash_node_base.218"* %102, i64 2
  %108 = bitcast %"struct.std::__1::__hash_node_base.218"* %107 to %"class.SkSL::String"*
  %109 = tail call zeroext i1 @_ZNK4SkSL6StringeqERKS0_(%"class.SkSL::String"* %106, %"class.SkSL::String"* dereferenceable(24) %108) #14
  br i1 %109, label %115, label %121

110:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.218"* %82, %"struct.std::__1::__hash_node_base.218"** %97, align 8
  br label %135

111:                                              ; preds = %115
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218", %"struct.std::__1::__hash_node_base.218"* %119, i64 2
  %113 = bitcast %"struct.std::__1::__hash_node_base.218"* %112 to %"class.SkSL::String"*
  %114 = tail call zeroext i1 @_ZNK4SkSL6StringeqERKS0_(%"class.SkSL::String"* %106, %"class.SkSL::String"* dereferenceable(24) %113) #14
  br i1 %114, label %115, label %121

115:                                              ; preds = %104, %111
  %116 = phi %"struct.std::__1::__hash_node_base.218"** [ %118, %111 ], [ %101, %104 ]
  %117 = load %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %116, align 8
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218", %"struct.std::__1::__hash_node_base.218"* %117, i64 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %118, align 8
  %120 = icmp eq %"struct.std::__1::__hash_node_base.218"* %119, null
  br i1 %120, label %121, label %111

121:                                              ; preds = %115, %111, %104, %100
  %122 = phi %"struct.std::__1::__hash_node_base.218"* [ %80, %100 ], [ %80, %104 ], [ %117, %111 ], [ %117, %115 ]
  %123 = bitcast %"struct.std::__1::__hash_node_base.218"* %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.std::__1::__hash_node_base.218"* %82 to i64*
  store i64 %124, i64* %125, align 8
  %126 = load %"struct.std::__1::__hash_node_base.218"**, %"struct.std::__1::__hash_node_base.218"*** %11, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %126, i64 %93
  %128 = bitcast %"struct.std::__1::__hash_node_base.218"** %127 to i64**
  %129 = load i64*, i64** %128, align 8
  %130 = load i64, i64* %129, align 8
  store i64 %130, i64* %123, align 8
  %131 = load %"struct.std::__1::__hash_node_base.218"**, %"struct.std::__1::__hash_node_base.218"*** %11, align 8
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %131, i64 %93
  %133 = load %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %132, align 8
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218", %"struct.std::__1::__hash_node_base.218"* %133, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.218"* %80, %"struct.std::__1::__hash_node_base.218"** %134, align 8
  br label %135

135:                                              ; preds = %92, %121, %110
  %136 = phi %"struct.std::__1::__hash_node_base.218"* [ %80, %110 ], [ %82, %121 ], [ %80, %92 ]
  %137 = phi i64 [ %93, %110 ], [ %81, %121 ], [ %81, %92 ]
  %138 = getelementptr inbounds %"struct.std::__1::__hash_node_base.218", %"struct.std::__1::__hash_node_base.218"* %136, i64 0, i32 0
  %139 = load %"struct.std::__1::__hash_node_base.218"*, %"struct.std::__1::__hash_node_base.218"** %138, align 8
  %140 = icmp eq %"struct.std::__1::__hash_node_base.218"* %139, null
  br i1 %140, label %149, label %79

141:                                              ; preds = %2
  %142 = getelementptr inbounds %"class.std::__1::__hash_table.214", %"class.std::__1::__hash_table.214"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %143 = load %"struct.std::__1::__hash_node_base.218"**, %"struct.std::__1::__hash_node_base.218"*** %142, align 8
  store %"struct.std::__1::__hash_node_base.218"** null, %"struct.std::__1::__hash_node_base.218"*** %142, align 8
  %144 = icmp eq %"struct.std::__1::__hash_node_base.218"** %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %141
  %146 = bitcast %"struct.std::__1::__hash_node_base.218"** %143 to i8*
  tail call void @_ZdlPv(i8* %146) #16
  br label %147

147:                                              ; preds = %141, %145
  %148 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.220", %"class.std::__1::__bucket_list_deallocator.220"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %148, align 8
  br label %149

149:                                              ; preds = %135, %70, %35, %147
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.272"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL19SPIRVVectorConstantEjEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_S9_S7_Lb1EEENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS3_JNS_4pairIKS3_jEEEEENSH_INS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.268"*, %"struct.SkSL::SPIRVVectorConstant"* dereferenceable(20), %"struct.std::__1::pair.472"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"struct.SkSL::SPIRVVectorConstant"* %1 to i8*
  %5 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8
  %6 = tail call i32 %5(i8* %4, i64 20, i32 0) #14
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.268", %"class.std::__1::__hash_table.268"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %88, label %11

11:                                               ; preds = %3
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #14, !range !12
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.268", %"class.std::__1::__hash_table.268"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.272"**, %"struct.std::__1::__hash_node_base.272"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.272"*, %"struct.std::__1::__hash_node_base.272"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.272"*, %"struct.std::__1::__hash_node_base.272"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.272"* %26, null
  br i1 %27, label %88, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node_base.272", %"struct.std::__1::__hash_node_base.272"* %26, i64 0, i32 0
  %30 = load %"struct.std::__1::__hash_node_base.272"*, %"struct.std::__1::__hash_node_base.272"** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base.272"* %30, null
  br i1 %31, label %88, label %32

32:                                               ; preds = %28
  %33 = add i64 %9, -1
  %34 = getelementptr inbounds %"struct.SkSL::SPIRVVectorConstant", %"struct.SkSL::SPIRVVectorConstant"* %1, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"struct.SkSL::SPIRVVectorConstant", %"struct.SkSL::SPIRVVectorConstant"* %1, i64 0, i32 1, i64 0
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"struct.SkSL::SPIRVVectorConstant", %"struct.SkSL::SPIRVVectorConstant"* %1, i64 0, i32 1, i64 1
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"struct.SkSL::SPIRVVectorConstant", %"struct.SkSL::SPIRVVectorConstant"* %1, i64 0, i32 1, i64 2
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"struct.SkSL::SPIRVVectorConstant", %"struct.SkSL::SPIRVVectorConstant"* %1, i64 0, i32 1, i64 3
  %43 = load i32, i32* %42, align 4
  br label %44

44:                                               ; preds = %32, %84
  %45 = phi %"struct.std::__1::__hash_node_base.272"* [ %30, %32 ], [ %86, %84 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.272", %"struct.std::__1::__hash_node_base.272"* %45, i64 1
  %47 = bitcast %"struct.std::__1::__hash_node_base.272"* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = icmp eq i64 %48, %7
  br i1 %49, label %60, label %50

50:                                               ; preds = %44
  br i1 %13, label %53, label %51

51:                                               ; preds = %50
  %52 = and i64 %48, %33
  br label %57

53:                                               ; preds = %50
  %54 = icmp ult i64 %48, %9
  br i1 %54, label %57, label %55

55:                                               ; preds = %53
  %56 = urem i64 %48, %9
  br label %57

57:                                               ; preds = %51, %53, %55
  %58 = phi i64 [ %52, %51 ], [ %56, %55 ], [ %48, %53 ]
  %59 = icmp eq i64 %58, %22
  br i1 %59, label %60, label %88

60:                                               ; preds = %44, %57
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base.272", %"struct.std::__1::__hash_node_base.272"* %45, i64 2
  %62 = bitcast %"struct.std::__1::__hash_node_base.272"* %61 to %"struct.std::__1::__hash_value_type.616"*
  %63 = bitcast %"struct.std::__1::__hash_node_base.272"* %61 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, %35
  br i1 %65, label %66, label %84

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"struct.std::__1::__hash_value_type.616", %"struct.std::__1::__hash_value_type.616"* %62, i64 0, i32 0, i32 0, i32 1, i64 0
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, %37
  br i1 %69, label %70, label %84

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base.272", %"struct.std::__1::__hash_node_base.272"* %45, i64 3
  %72 = bitcast %"struct.std::__1::__hash_node_base.272"* %71 to i32*
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, %39
  br i1 %74, label %75, label %84

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"struct.std::__1::__hash_value_type.616", %"struct.std::__1::__hash_value_type.616"* %62, i64 0, i32 0, i32 0, i32 1, i64 2
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %77, %41
  br i1 %78, label %79, label %84

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"struct.std::__1::__hash_node_base.272", %"struct.std::__1::__hash_node_base.272"* %45, i64 4
  %81 = bitcast %"struct.std::__1::__hash_node_base.272"* %80 to i32*
  %82 = load i32, i32* %81, align 4
  %83 = icmp eq i32 %82, %43
  br i1 %83, label %174, label %84

84:                                               ; preds = %75, %70, %66, %60, %79
  %85 = getelementptr inbounds %"struct.std::__1::__hash_node_base.272", %"struct.std::__1::__hash_node_base.272"* %45, i64 0, i32 0
  %86 = load %"struct.std::__1::__hash_node_base.272"*, %"struct.std::__1::__hash_node_base.272"** %85, align 8
  %87 = icmp eq %"struct.std::__1::__hash_node_base.272"* %86, null
  br i1 %87, label %88, label %44

88:                                               ; preds = %57, %84, %28, %21, %3
  %89 = phi i64 [ %22, %21 ], [ -6148914691236517206, %3 ], [ %22, %28 ], [ %22, %84 ], [ %22, %57 ]
  %90 = tail call i8* @_Znwm(i64 40) #16, !noalias !179
  %91 = getelementptr inbounds i8, i8* %90, i64 16
  %92 = bitcast %"struct.std::__1::pair.472"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %91, i8* align 4 %92, i64 24, i1 false) #14, !noalias !179
  %93 = getelementptr inbounds i8, i8* %90, i64 8
  %94 = bitcast i8* %93 to i64*
  store i64 %7, i64* %94, align 8, !noalias !179
  %95 = bitcast i8* %90 to %"struct.std::__1::__hash_node_base.272"**
  store %"struct.std::__1::__hash_node_base.272"* null, %"struct.std::__1::__hash_node_base.272"** %95, align 8, !noalias !179
  %96 = getelementptr inbounds %"class.std::__1::__hash_table.268", %"class.std::__1::__hash_table.268"* %0, i64 0, i32 2, i32 0, i32 0
  %97 = load i64, i64* %96, align 8
  %98 = add i64 %97, 1
  %99 = uitofp i64 %98 to float
  %100 = uitofp i64 %9 to float
  %101 = getelementptr inbounds %"class.std::__1::__hash_table.268", %"class.std::__1::__hash_table.268"* %0, i64 0, i32 3, i32 0, i32 0
  %102 = load float, float* %101, align 4
  %103 = fmul float %102, %100
  %104 = fcmp olt float %103, %99
  %105 = or i1 %10, %104
  br i1 %105, label %106, label %129

106:                                              ; preds = %88
  %107 = shl i64 %9, 1
  %108 = icmp ult i64 %9, 3
  %109 = tail call i64 @llvm.ctpop.i64(i64 %9) #14, !range !12
  %110 = icmp ugt i64 %109, 1
  %111 = or i1 %108, %110
  %112 = zext i1 %111 to i64
  %113 = or i64 %107, %112
  %114 = fdiv float %99, %102
  %115 = tail call float @llvm.ceil.f32(float %114) #14
  %116 = fptoui float %115 to i64
  %117 = icmp ult i64 %113, %116
  %118 = select i1 %117, i64 %116, i64 %113
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL19SPIRVVectorConstantEjEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_S9_S7_Lb1EEENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table.268"* %0, i64 %118)
  %119 = load i64, i64* %8, align 8
  %120 = tail call i64 @llvm.ctpop.i64(i64 %119) #14, !range !12
  %121 = icmp ugt i64 %120, 1
  br i1 %121, label %125, label %122

122:                                              ; preds = %106
  %123 = add i64 %119, 4294967295
  %124 = and i64 %123, %7
  br label %129

125:                                              ; preds = %106
  %126 = icmp ugt i64 %119, %7
  br i1 %126, label %129, label %127

127:                                              ; preds = %125
  %128 = urem i64 %7, %119
  br label %129

129:                                              ; preds = %127, %125, %122, %88
  %130 = phi i64 [ %9, %88 ], [ %119, %122 ], [ %119, %125 ], [ %119, %127 ]
  %131 = phi i64 [ %89, %88 ], [ %124, %122 ], [ %7, %125 ], [ %128, %127 ]
  %132 = getelementptr inbounds %"class.std::__1::__hash_table.268", %"class.std::__1::__hash_table.268"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %133 = load %"struct.std::__1::__hash_node_base.272"**, %"struct.std::__1::__hash_node_base.272"*** %132, align 8
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base.272"*, %"struct.std::__1::__hash_node_base.272"** %133, i64 %131
  %135 = load %"struct.std::__1::__hash_node_base.272"*, %"struct.std::__1::__hash_node_base.272"** %134, align 8
  %136 = icmp eq %"struct.std::__1::__hash_node_base.272"* %135, null
  br i1 %136, label %137, label %163

137:                                              ; preds = %129
  %138 = getelementptr inbounds %"class.std::__1::__hash_table.268", %"class.std::__1::__hash_table.268"* %0, i64 0, i32 1, i32 0, i32 0
  %139 = bitcast %"struct.std::__1::__hash_node_base.272"* %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = bitcast i8* %90 to i64*
  store i64 %140, i64* %141, align 8
  %142 = bitcast %"struct.std::__1::__hash_node_base.272"* %138 to i8**
  store i8* %90, i8** %142, align 8
  store %"struct.std::__1::__hash_node_base.272"* %138, %"struct.std::__1::__hash_node_base.272"** %134, align 8
  %143 = load %"struct.std::__1::__hash_node_base.272"*, %"struct.std::__1::__hash_node_base.272"** %95, align 8
  %144 = icmp eq %"struct.std::__1::__hash_node_base.272"* %143, null
  br i1 %144, label %170, label %145

145:                                              ; preds = %137
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base.272", %"struct.std::__1::__hash_node_base.272"* %143, i64 1
  %147 = bitcast %"struct.std::__1::__hash_node_base.272"* %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = tail call i64 @llvm.ctpop.i64(i64 %130) #14, !range !12
  %150 = icmp ugt i64 %149, 1
  br i1 %150, label %154, label %151

151:                                              ; preds = %145
  %152 = add i64 %130, -1
  %153 = and i64 %148, %152
  br label %158

154:                                              ; preds = %145
  %155 = icmp ult i64 %148, %130
  br i1 %155, label %158, label %156

156:                                              ; preds = %154
  %157 = urem i64 %148, %130
  br label %158

158:                                              ; preds = %151, %154, %156
  %159 = phi i64 [ %153, %151 ], [ %157, %156 ], [ %148, %154 ]
  %160 = load %"struct.std::__1::__hash_node_base.272"**, %"struct.std::__1::__hash_node_base.272"*** %132, align 8
  %161 = getelementptr inbounds %"struct.std::__1::__hash_node_base.272"*, %"struct.std::__1::__hash_node_base.272"** %160, i64 %159
  %162 = bitcast %"struct.std::__1::__hash_node_base.272"** %161 to i8**
  br label %168

163:                                              ; preds = %129
  %164 = bitcast %"struct.std::__1::__hash_node_base.272"* %135 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = bitcast i8* %90 to i64*
  store i64 %165, i64* %166, align 8
  %167 = bitcast %"struct.std::__1::__hash_node_base.272"* %135 to i8**
  br label %168

168:                                              ; preds = %158, %163
  %169 = phi i8** [ %167, %163 ], [ %162, %158 ]
  store i8* %90, i8** %169, align 8
  br label %170

170:                                              ; preds = %168, %137
  %171 = bitcast i8* %90 to %"struct.std::__1::__hash_node_base.272"*
  %172 = load i64, i64* %96, align 8
  %173 = add i64 %172, 1
  store i64 %173, i64* %96, align 8
  br label %174

174:                                              ; preds = %79, %170
  %175 = phi i8 [ 1, %170 ], [ 0, %79 ]
  %176 = phi %"struct.std::__1::__hash_node_base.272"* [ %171, %170 ], [ %45, %79 ]
  %177 = insertvalue { %"struct.std::__1::__hash_node_base.272"*, i8 } undef, %"struct.std::__1::__hash_node_base.272"* %176, 0
  %178 = insertvalue { %"struct.std::__1::__hash_node_base.272"*, i8 } %177, i8 %175, 1
  ret { %"struct.std::__1::__hash_node_base.272"*, i8 } %178
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL19SPIRVVectorConstantEjEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_S9_S7_Lb1EEENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table.268"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !12
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #14
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.268", %"class.std::__1::__hash_table.268"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL19SPIRVVectorConstantEjEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_S9_S7_Lb1EEENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.268"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #14, !range !12
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.268", %"class.std::__1::__hash_table.268"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.268", %"class.std::__1::__hash_table.268"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #14
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #14, !range !12
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #14
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL19SPIRVVectorConstantEjEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_S9_S7_Lb1EEENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.268"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL19SPIRVVectorConstantEjEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_S9_S7_Lb1EEENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.268"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.268", %"class.std::__1::__hash_table.268"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %164, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #15
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #16
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.268", %"class.std::__1::__hash_table.268"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.272"**, %"struct.std::__1::__hash_node_base.272"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.268"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.272"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.272"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #16
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.274", %"class.std::__1::__bucket_list_deallocator.274"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.272"**, %"struct.std::__1::__hash_node_base.272"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.272"*, %"struct.std::__1::__hash_node_base.272"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.272"* null, %"struct.std::__1::__hash_node_base.272"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !182

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.268", %"class.std::__1::__hash_table.268"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.272", %"struct.std::__1::__hash_node_base.272"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.272"*, %"struct.std::__1::__hash_node_base.272"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.272"* %38, null
  br i1 %39, label %172, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.272"**, %"struct.std::__1::__hash_node_base.272"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.272"*, %"struct.std::__1::__hash_node_base.272"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.272"* null, %"struct.std::__1::__hash_node_base.272"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.272"**, %"struct.std::__1::__hash_node_base.272"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.272"*, %"struct.std::__1::__hash_node_base.272"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.272"* null, %"struct.std::__1::__hash_node_base.272"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.272"**, %"struct.std::__1::__hash_node_base.272"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.272"*, %"struct.std::__1::__hash_node_base.272"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.272"* null, %"struct.std::__1::__hash_node_base.272"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.272"**, %"struct.std::__1::__hash_node_base.272"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.272"*, %"struct.std::__1::__hash_node_base.272"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.272"* null, %"struct.std::__1::__hash_node_base.272"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.272", %"struct.std::__1::__hash_node_base.272"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.272"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #14, !range !12
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.272"**, %"struct.std::__1::__hash_node_base.272"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.272"*, %"struct.std::__1::__hash_node_base.272"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.272"* %36, %"struct.std::__1::__hash_node_base.272"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.272", %"struct.std::__1::__hash_node_base.272"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.272"*, %"struct.std::__1::__hash_node_base.272"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.272"* %75, null
  br i1 %76, label %172, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %158
  %80 = phi %"struct.std::__1::__hash_node_base.272"* [ %75, %77 ], [ %162, %158 ]
  %81 = phi i64 [ %71, %77 ], [ %160, %158 ]
  %82 = phi %"struct.std::__1::__hash_node_base.272"* [ %38, %77 ], [ %159, %158 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.272", %"struct.std::__1::__hash_node_base.272"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.272"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %158, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.272"**, %"struct.std::__1::__hash_node_base.272"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.272"*, %"struct.std::__1::__hash_node_base.272"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.272"*, %"struct.std::__1::__hash_node_base.272"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.272"* %98, null
  br i1 %99, label %110, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.272", %"struct.std::__1::__hash_node_base.272"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.272"* %101 to %"struct.std::__1::__hash_value_type.616"*
  %103 = getelementptr inbounds %"struct.std::__1::__hash_value_type.616", %"struct.std::__1::__hash_value_type.616"* %102, i64 0, i32 0, i32 0, i32 1, i64 0
  %104 = getelementptr inbounds %"struct.std::__1::__hash_node_base.272", %"struct.std::__1::__hash_node_base.272"* %80, i64 3
  %105 = bitcast %"struct.std::__1::__hash_node_base.272"* %104 to i32*
  %106 = getelementptr inbounds %"struct.std::__1::__hash_value_type.616", %"struct.std::__1::__hash_value_type.616"* %102, i64 0, i32 0, i32 0, i32 1, i64 2
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base.272", %"struct.std::__1::__hash_node_base.272"* %80, i64 4
  %108 = bitcast %"struct.std::__1::__hash_node_base.272"* %107 to i32*
  %109 = bitcast %"struct.std::__1::__hash_node_base.272"* %101 to i32*
  br label %111

110:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.272"* %82, %"struct.std::__1::__hash_node_base.272"** %97, align 8
  br label %158

111:                                              ; preds = %100, %139
  %112 = phi %"struct.std::__1::__hash_node_base.272"* [ %114, %139 ], [ %80, %100 ]
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base.272", %"struct.std::__1::__hash_node_base.272"* %112, i64 0, i32 0
  %114 = load %"struct.std::__1::__hash_node_base.272"*, %"struct.std::__1::__hash_node_base.272"** %113, align 8
  %115 = icmp eq %"struct.std::__1::__hash_node_base.272"* %114, null
  br i1 %115, label %145, label %116

116:                                              ; preds = %111
  %117 = getelementptr inbounds %"struct.std::__1::__hash_node_base.272", %"struct.std::__1::__hash_node_base.272"* %114, i64 2
  %118 = bitcast %"struct.std::__1::__hash_node_base.272"* %117 to %"struct.std::__1::__hash_value_type.616"*
  %119 = load i32, i32* %109, align 4
  %120 = bitcast %"struct.std::__1::__hash_node_base.272"* %117 to i32*
  %121 = load i32, i32* %120, align 4
  %122 = icmp eq i32 %119, %121
  br i1 %122, label %123, label %145

123:                                              ; preds = %116
  %124 = load i32, i32* %103, align 4
  %125 = getelementptr inbounds %"struct.std::__1::__hash_value_type.616", %"struct.std::__1::__hash_value_type.616"* %118, i64 0, i32 0, i32 0, i32 1, i64 0
  %126 = load i32, i32* %125, align 4
  %127 = icmp eq i32 %124, %126
  br i1 %127, label %128, label %145

128:                                              ; preds = %123
  %129 = load i32, i32* %105, align 4
  %130 = getelementptr inbounds %"struct.std::__1::__hash_node_base.272", %"struct.std::__1::__hash_node_base.272"* %114, i64 3
  %131 = bitcast %"struct.std::__1::__hash_node_base.272"* %130 to i32*
  %132 = load i32, i32* %131, align 4
  %133 = icmp eq i32 %129, %132
  br i1 %133, label %134, label %145

134:                                              ; preds = %128
  %135 = load i32, i32* %106, align 4
  %136 = getelementptr inbounds %"struct.std::__1::__hash_value_type.616", %"struct.std::__1::__hash_value_type.616"* %118, i64 0, i32 0, i32 0, i32 1, i64 2
  %137 = load i32, i32* %136, align 4
  %138 = icmp eq i32 %135, %137
  br i1 %138, label %139, label %145

139:                                              ; preds = %134
  %140 = load i32, i32* %108, align 4
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base.272", %"struct.std::__1::__hash_node_base.272"* %114, i64 4
  %142 = bitcast %"struct.std::__1::__hash_node_base.272"* %141 to i32*
  %143 = load i32, i32* %142, align 4
  %144 = icmp eq i32 %140, %143
  br i1 %144, label %111, label %145

145:                                              ; preds = %116, %123, %128, %134, %111, %139
  %146 = ptrtoint %"struct.std::__1::__hash_node_base.272"* %114 to i64
  %147 = bitcast %"struct.std::__1::__hash_node_base.272"* %112 to i64*
  %148 = bitcast %"struct.std::__1::__hash_node_base.272"* %82 to i64*
  store i64 %146, i64* %148, align 8
  %149 = load %"struct.std::__1::__hash_node_base.272"**, %"struct.std::__1::__hash_node_base.272"*** %11, align 8
  %150 = getelementptr inbounds %"struct.std::__1::__hash_node_base.272"*, %"struct.std::__1::__hash_node_base.272"** %149, i64 %93
  %151 = bitcast %"struct.std::__1::__hash_node_base.272"** %150 to i64**
  %152 = load i64*, i64** %151, align 8
  %153 = load i64, i64* %152, align 8
  store i64 %153, i64* %147, align 8
  %154 = load %"struct.std::__1::__hash_node_base.272"**, %"struct.std::__1::__hash_node_base.272"*** %11, align 8
  %155 = getelementptr inbounds %"struct.std::__1::__hash_node_base.272"*, %"struct.std::__1::__hash_node_base.272"** %154, i64 %93
  %156 = load %"struct.std::__1::__hash_node_base.272"*, %"struct.std::__1::__hash_node_base.272"** %155, align 8
  %157 = getelementptr inbounds %"struct.std::__1::__hash_node_base.272", %"struct.std::__1::__hash_node_base.272"* %156, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.272"* %80, %"struct.std::__1::__hash_node_base.272"** %157, align 8
  br label %158

158:                                              ; preds = %92, %145, %110
  %159 = phi %"struct.std::__1::__hash_node_base.272"* [ %80, %110 ], [ %82, %145 ], [ %80, %92 ]
  %160 = phi i64 [ %93, %110 ], [ %81, %145 ], [ %81, %92 ]
  %161 = getelementptr inbounds %"struct.std::__1::__hash_node_base.272", %"struct.std::__1::__hash_node_base.272"* %159, i64 0, i32 0
  %162 = load %"struct.std::__1::__hash_node_base.272"*, %"struct.std::__1::__hash_node_base.272"** %161, align 8
  %163 = icmp eq %"struct.std::__1::__hash_node_base.272"* %162, null
  br i1 %163, label %172, label %79

164:                                              ; preds = %2
  %165 = getelementptr inbounds %"class.std::__1::__hash_table.268", %"class.std::__1::__hash_table.268"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %166 = load %"struct.std::__1::__hash_node_base.272"**, %"struct.std::__1::__hash_node_base.272"*** %165, align 8
  store %"struct.std::__1::__hash_node_base.272"** null, %"struct.std::__1::__hash_node_base.272"*** %165, align 8
  %167 = icmp eq %"struct.std::__1::__hash_node_base.272"** %166, null
  br i1 %167, label %170, label %168

168:                                              ; preds = %164
  %169 = bitcast %"struct.std::__1::__hash_node_base.272"** %166 to i8*
  tail call void @_ZdlPv(i8* %169) #16
  br label %170

170:                                              ; preds = %164, %168
  %171 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.274", %"class.std::__1::__bucket_list_deallocator.274"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %171, align 8
  br label %172

172:                                              ; preds = %158, %70, %35, %170
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL18SPIRVCodeGenerator6LValueD2Ev(%"class.SkSL::SPIRVCodeGenerator::LValue"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL13PointerLValueD0Ev(%"class.SkSL::PointerLValue"*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %"class.SkSL::PointerLValue"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN4SkSL13PointerLValue10getPointerEv(%"class.SkSL::PointerLValue"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::PointerLValue", %"class.SkSL::PointerLValue"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL13PointerLValue21isMemoryObjectPointerEv(%"class.SkSL::PointerLValue"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::PointerLValue", %"class.SkSL::PointerLValue"* %0, i64 0, i32 3
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4SkSL18SPIRVCodeGenerator6LValue12applySwizzleERK9SkSTArrayILi4EaLb0EERKNS_4TypeE(%"class.SkSL::SPIRVCodeGenerator::LValue"*, %class.SkSTArray.431* dereferenceable(24), %"class.SkSL::Type"* dereferenceable(184)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN4SkSL13PointerLValue4loadERNS_12OutputStreamE(%"class.SkSL::PointerLValue"*, %"class.SkSL::OutputStream"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = getelementptr inbounds %"class.SkSL::PointerLValue", %"class.SkSL::PointerLValue"* %0, i64 0, i32 1
  %10 = load %"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::SPIRVCodeGenerator"** %9, align 8
  %11 = getelementptr inbounds %"class.SkSL::PointerLValue", %"class.SkSL::PointerLValue"* %0, i64 0, i32 5
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %39

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %10, i64 0, i32 0, i32 1
  %16 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %15, align 8
  %17 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %16, i64 0, i32 1, i32 0, i32 0, i32 0
  %18 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %17, align 8
  %19 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %18, i64 0, i32 1, i32 3
  %20 = load i8, i8* %19, align 1, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %39

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %10, i64 0, i32 5
  %24 = load i32, i32* %23, align 8
  %25 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %10, i64 0, i32 19, i32 0
  %26 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26) #14
  store i32 196679, i32* %6, align 4
  %27 = bitcast %"class.SkSL::OutputStream"* %25 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %28 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %28, i64 3
  %30 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %29, align 8
  call void %30(%"class.SkSL::OutputStream"* %25, i8* nonnull %26, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #14
  %31 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %31) #14
  store i32 %24, i32* %8, align 4
  %32 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %27, align 8
  %33 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %32, i64 3
  %34 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %33, align 8
  call void %34(%"class.SkSL::OutputStream"* %25, i8* nonnull %31, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %31) #14
  %35 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %35) #14
  store i32 0, i32* %7, align 4
  %36 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %27, align 8
  %37 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %36, i64 3
  %38 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %37, align 8
  call void %38(%"class.SkSL::OutputStream"* %25, i8* nonnull %35, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %35) #14
  br label %39

39:                                               ; preds = %2, %14, %22
  %40 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %10, i64 0, i32 5
  %41 = load i32, i32* %40, align 8
  %42 = add i32 %41, 1
  store i32 %42, i32* %40, align 8
  %43 = load %"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::SPIRVCodeGenerator"** %9, align 8
  %44 = getelementptr inbounds %"class.SkSL::PointerLValue", %"class.SkSL::PointerLValue"* %0, i64 0, i32 4
  %45 = load i32, i32* %44, align 8
  %46 = getelementptr inbounds %"class.SkSL::PointerLValue", %"class.SkSL::PointerLValue"* %0, i64 0, i32 2
  %47 = load i32, i32* %46, align 8
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %43, i32 61, i32 4, %"class.SkSL::OutputStream"* dereferenceable(8) %1) #14
  %48 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %48) #14
  store i32 %45, i32* %5, align 4
  %49 = bitcast %"class.SkSL::OutputStream"* %1 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %50 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %50, i64 3
  %52 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %51, align 8
  call void %52(%"class.SkSL::OutputStream"* %1, i8* nonnull %48, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %48) #14
  %53 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %53) #14
  store i32 %41, i32* %4, align 4
  %54 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %49, align 8
  %55 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %54, i64 3
  %56 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %55, align 8
  call void %56(%"class.SkSL::OutputStream"* %1, i8* nonnull %53, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %53) #14
  %57 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %57) #14
  store i32 %47, i32* %3, align 4
  %58 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %49, align 8
  %59 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %58, i64 3
  %60 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %59, align 8
  call void %60(%"class.SkSL::OutputStream"* %1, i8* nonnull %57, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %57) #14
  ret i32 %41
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL13PointerLValue5storeEjRNS_12OutputStreamE(%"class.SkSL::PointerLValue"*, i32, %"class.SkSL::OutputStream"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %"class.SkSL::PointerLValue", %"class.SkSL::PointerLValue"* %0, i64 0, i32 1
  %7 = load %"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::SPIRVCodeGenerator"** %6, align 8
  %8 = getelementptr inbounds %"class.SkSL::PointerLValue", %"class.SkSL::PointerLValue"* %0, i64 0, i32 2
  %9 = load i32, i32* %8, align 8
  tail call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %7, i32 62, i32 3, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %10 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #14
  store i32 %9, i32* %5, align 4
  %11 = bitcast %"class.SkSL::OutputStream"* %2 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %12 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %12, i64 3
  %14 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %13, align 8
  call void %14(%"class.SkSL::OutputStream"* %2, i8* nonnull %10, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #14
  %15 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #14
  store i32 %1, i32* %4, align 4
  %16 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %11, align 8
  %17 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %16, i64 3
  %18 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %17, align 8
  call void %18(%"class.SkSL::OutputStream"* %2, i8* nonnull %15, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN4SkSL18SPIRVCodeGenerator6LValue10getPointerEv(%"class.SkSL::SPIRVCodeGenerator::LValue"*) unnamed_addr #0 comdat align 2 {
  ret i32 -1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL18SPIRVCodeGenerator6LValue21isMemoryObjectPointerEv(%"class.SkSL::SPIRVCodeGenerator::LValue"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL13SwizzleLValueD2Ev(%"class.SkSL::SwizzleLValue"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::SwizzleLValue", %"class.SkSL::SwizzleLValue"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN4SkSL13SwizzleLValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::SwizzleLValue", %"class.SkSL::SwizzleLValue"* %0, i64 0, i32 3, i32 0, i32 0, i64 16
  %4 = bitcast i8* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.SkSL::SwizzleLValue", %"class.SkSL::SwizzleLValue"* %0, i64 0, i32 3, i32 0, i32 0, i64 8
  %10 = bitcast i8* %9 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_Z7sk_freePv(i8* %11) #14
  br label %12

12:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL13SwizzleLValueD0Ev(%"class.SkSL::SwizzleLValue"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::SwizzleLValue", %"class.SkSL::SwizzleLValue"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN4SkSL13SwizzleLValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::SwizzleLValue", %"class.SkSL::SwizzleLValue"* %0, i64 0, i32 3, i32 0, i32 0, i64 16
  %4 = bitcast i8* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.SkSL::SwizzleLValue", %"class.SkSL::SwizzleLValue"* %0, i64 0, i32 3, i32 0, i32 0, i64 8
  %10 = bitcast i8* %9 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_Z7sk_freePv(i8* %11) #14
  br label %12

12:                                               ; preds = %1, %8
  %13 = bitcast %"class.SkSL::SwizzleLValue"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4SkSL13SwizzleLValue12applySwizzleERK9SkSTArrayILi4EaLb0EERKNS_4TypeE(%"class.SkSL::SwizzleLValue"*, %class.SkSTArray.431* dereferenceable(24), %"class.SkSL::Type"* dereferenceable(184)) unnamed_addr #0 comdat align 2 {
  %4 = alloca %class.SkSTArray.431, align 8
  %5 = getelementptr inbounds %class.SkSTArray.431, %class.SkSTArray.431* %4, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #14
  %6 = bitcast %class.SkSTArray.431* %4 to i64*
  store i64 -6148914691236517206, i64* %6, align 8
  %7 = getelementptr inbounds %class.SkSTArray.431, %class.SkSTArray.431* %4, i64 0, i32 0, i32 0, i64 8
  %8 = getelementptr inbounds %class.SkSTArray.431, %class.SkSTArray.431* %4, i64 0, i32 0, i32 0, i64 16
  %9 = bitcast i8* %8 to i64*
  %10 = bitcast i8* %7 to i8**
  store i8* %5, i8** %10, align 8
  store i64 34359738368, i64* %9, align 8
  %11 = getelementptr inbounds %class.SkSTArray.431, %class.SkSTArray.431* %1, i64 0, i32 0, i32 0, i64 8
  %12 = bitcast i8* %11 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %56, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %class.SkSTArray.431, %class.SkSTArray.431* %1, i64 0, i32 0, i32 0, i64 16
  %17 = bitcast i8* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = lshr i64 %18, 1
  %20 = and i64 %19, 2147483647
  %21 = getelementptr inbounds i8, i8* %13, i64 %20
  %22 = icmp eq i64 %20, 0
  br i1 %22, label %56, label %23

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.SkSL::SwizzleLValue", %"class.SkSL::SwizzleLValue"* %0, i64 0, i32 3, i32 0, i32 0, i64 16
  %25 = bitcast i8* %24 to i64*
  %26 = getelementptr inbounds %"class.SkSL::SwizzleLValue", %"class.SkSL::SwizzleLValue"* %0, i64 0, i32 3, i32 0, i32 0, i64 8
  %27 = bitcast i8* %7 to %class.SkTArray.433*
  %28 = bitcast i8* %26 to i8**
  br label %29

29:                                               ; preds = %23, %40
  %30 = phi i8* [ %13, %23 ], [ %54, %40 ]
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %92, label %33

33:                                               ; preds = %29
  %34 = sext i8 %31 to i32
  %35 = load i64, i64* %25, align 8
  %36 = lshr i64 %35, 1
  %37 = trunc i64 %36 to i32
  %38 = and i32 %37, 2147483647
  %39 = icmp sgt i32 %38, %34
  br i1 %39, label %40, label %92

40:                                               ; preds = %33
  %41 = load i8*, i8** %28, align 8
  %42 = sext i8 %31 to i64
  %43 = getelementptr inbounds i8, i8* %41, i64 %42
  call void @_ZN8SkTArrayIaLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray.433* %27, i32 1, i32 1) #14
  %44 = load i8*, i8** %10, align 8
  %45 = load i64, i64* %9, align 8
  %46 = lshr i64 %45, 1
  %47 = and i64 %46, 2147483647
  %48 = getelementptr inbounds i8, i8* %44, i64 %47
  %49 = add i64 %45, 2
  %50 = and i64 %49, 4294967294
  %51 = and i64 %45, -4294967295
  %52 = or i64 %50, %51
  store i64 %52, i64* %9, align 8
  %53 = load i8, i8* %43, align 1
  store i8 %53, i8* %48, align 1
  %54 = getelementptr inbounds i8, i8* %30, i64 1
  %55 = icmp eq i8* %54, %21
  br i1 %55, label %56, label %29

56:                                               ; preds = %40, %3, %15
  %57 = getelementptr inbounds %"class.SkSL::SwizzleLValue", %"class.SkSL::SwizzleLValue"* %0, i64 0, i32 3
  %58 = getelementptr inbounds %"class.SkSL::SwizzleLValue", %"class.SkSL::SwizzleLValue"* %0, i64 0, i32 3, i32 0, i32 0, i64 8
  %59 = icmp eq %class.SkSTArray.431* %57, %4
  br i1 %59, label %90, label %60

60:                                               ; preds = %56
  %61 = bitcast i8* %58 to %class.SkTArray.433*
  %62 = getelementptr inbounds %"class.SkSL::SwizzleLValue", %"class.SkSL::SwizzleLValue"* %0, i64 0, i32 3, i32 0, i32 0, i64 16
  %63 = bitcast i8* %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = and i64 %64, -4294967295
  store i64 %65, i64* %63, align 8
  %66 = load i64, i64* %9, align 8
  %67 = lshr i64 %66, 1
  %68 = trunc i64 %67 to i32
  %69 = and i32 %68, 2147483647
  call void @_ZN8SkTArrayIaLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray.433* %61, i32 %69, i32 0) #14
  %70 = load i64, i64* %9, align 8
  %71 = and i64 %70, 4294967294
  %72 = load i64, i64* %63, align 8
  %73 = and i64 %72, -4294967295
  %74 = or i64 %73, %71
  store i64 %74, i64* %63, align 8
  %75 = load i8*, i8** %10, align 8
  %76 = icmp eq i64 %71, 0
  br i1 %76, label %90, label %77

77:                                               ; preds = %60
  %78 = bitcast i8* %58 to i8**
  br label %79

79:                                               ; preds = %79, %77
  %80 = phi i64 [ 0, %77 ], [ %85, %79 ]
  %81 = load i8*, i8** %78, align 8
  %82 = getelementptr inbounds i8, i8* %81, i64 %80
  %83 = getelementptr inbounds i8, i8* %75, i64 %80
  %84 = load i8, i8* %83, align 1
  store i8 %84, i8* %82, align 1
  %85 = add nuw nsw i64 %80, 1
  %86 = load i64, i64* %63, align 8
  %87 = lshr i64 %86, 1
  %88 = and i64 %87, 2147483647
  %89 = icmp ult i64 %85, %88
  br i1 %89, label %79, label %90

90:                                               ; preds = %79, %56, %60
  %91 = getelementptr inbounds %"class.SkSL::SwizzleLValue", %"class.SkSL::SwizzleLValue"* %0, i64 0, i32 5
  store %"class.SkSL::Type"* %2, %"class.SkSL::Type"** %91, align 8
  br label %92

92:                                               ; preds = %29, %33, %90
  %93 = phi i1 [ true, %90 ], [ false, %33 ], [ false, %29 ]
  %94 = load i64, i64* %9, align 8
  %95 = and i64 %94, 1
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %99, label %97

97:                                               ; preds = %92
  %98 = load i8*, i8** %10, align 8
  call void @_Z7sk_freePv(i8* %98) #14
  br label %99

99:                                               ; preds = %92, %97
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #14
  ret i1 %93
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN4SkSL13SwizzleLValue4loadERNS_12OutputStreamE(%"class.SkSL::SwizzleLValue"*, %"class.SkSL::OutputStream"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = getelementptr inbounds %"class.SkSL::SwizzleLValue", %"class.SkSL::SwizzleLValue"* %0, i64 0, i32 1
  %18 = load %"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::SPIRVCodeGenerator"** %17, align 8
  %19 = getelementptr inbounds %"class.SkSL::SwizzleLValue", %"class.SkSL::SwizzleLValue"* %0, i64 0, i32 4
  %20 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %19, align 8
  %21 = icmp eq %"class.SkSL::Type"* %20, null
  br i1 %21, label %70, label %22

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %20, i64 0, i32 6
  %24 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %23, align 8
  %25 = icmp eq %"class.SkSL::Type"* %24, null
  %26 = select i1 %25, %"class.SkSL::Type"* %20, %"class.SkSL::Type"* %24
  %27 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %26, i64 0, i32 4
  %28 = load i32, i32* %27, align 4
  %29 = icmp ult i32 %28, 3
  br i1 %29, label %34, label %30

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %20, i64 0, i32 3
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %32, 6
  br i1 %33, label %34, label %70

34:                                               ; preds = %30, %22
  br i1 %25, label %40, label %35

35:                                               ; preds = %34, %35
  %36 = phi %"class.SkSL::Type"* [ %38, %35 ], [ %24, %34 ]
  %37 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %36, i64 0, i32 6
  %38 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %37, align 8
  %39 = icmp eq %"class.SkSL::Type"* %38, null
  br i1 %39, label %40, label %35

40:                                               ; preds = %35, %34
  %41 = phi %"class.SkSL::Type"* [ %20, %34 ], [ %36, %35 ]
  %42 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %41, i64 0, i32 16
  %43 = load i8, i8* %42, align 8, !range !2
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %45, label %70

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %18, i64 0, i32 0, i32 1
  %47 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %46, align 8
  %48 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %47, i64 0, i32 1, i32 0, i32 0, i32 0
  %49 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %48, align 8
  %50 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %49, i64 0, i32 1, i32 3
  %51 = load i8, i8* %50, align 1, !range !2
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %53, label %70

53:                                               ; preds = %45
  %54 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %18, i64 0, i32 5
  %55 = load i32, i32* %54, align 8
  %56 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %18, i64 0, i32 19, i32 0
  %57 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %57) #14
  store i32 196679, i32* %14, align 4
  %58 = bitcast %"class.SkSL::OutputStream"* %56 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %59 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %59, i64 3
  %61 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %60, align 8
  call void %61(%"class.SkSL::OutputStream"* %56, i8* nonnull %57, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %57) #14
  %62 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %62) #14
  store i32 %55, i32* %16, align 4
  %63 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %58, align 8
  %64 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %63, i64 3
  %65 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %64, align 8
  call void %65(%"class.SkSL::OutputStream"* %56, i8* nonnull %62, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %62) #14
  %66 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %66) #14
  store i32 0, i32* %15, align 4
  %67 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %58, align 8
  %68 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %67, i64 3
  %69 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %68, align 8
  call void %69(%"class.SkSL::OutputStream"* %56, i8* nonnull %66, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %66) #14
  br label %70

70:                                               ; preds = %2, %30, %40, %45, %53
  %71 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %18, i64 0, i32 5
  %72 = load i32, i32* %71, align 8
  %73 = add i32 %72, 1
  store i32 %73, i32* %71, align 8
  %74 = load %"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::SPIRVCodeGenerator"** %17, align 8
  %75 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %19, align 8
  %76 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %74, i64 0, i32 2
  %77 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %74, %"class.SkSL::Type"* dereferenceable(184) %75, %"class.SkSL::MemoryLayout"* dereferenceable(4) %76) #14
  %78 = getelementptr inbounds %"class.SkSL::SwizzleLValue", %"class.SkSL::SwizzleLValue"* %0, i64 0, i32 2
  %79 = load i32, i32* %78, align 8
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %74, i32 61, i32 4, %"class.SkSL::OutputStream"* dereferenceable(8) %1) #14
  %80 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %80) #14
  store i32 %77, i32* %13, align 4
  %81 = bitcast %"class.SkSL::OutputStream"* %1 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %82 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %81, align 8
  %83 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %82, i64 3
  %84 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %83, align 8
  call void %84(%"class.SkSL::OutputStream"* %1, i8* nonnull %80, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %80) #14
  %85 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %85) #14
  store i32 %72, i32* %12, align 4
  %86 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %81, align 8
  %87 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %86, i64 3
  %88 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %87, align 8
  call void %88(%"class.SkSL::OutputStream"* %1, i8* nonnull %85, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %85) #14
  %89 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %89) #14
  store i32 %79, i32* %11, align 4
  %90 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %81, align 8
  %91 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %90, i64 3
  %92 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %91, align 8
  call void %92(%"class.SkSL::OutputStream"* %1, i8* nonnull %89, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %89) #14
  %93 = load %"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::SPIRVCodeGenerator"** %17, align 8
  %94 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %19, align 8
  %95 = icmp eq %"class.SkSL::Type"* %94, null
  br i1 %95, label %144, label %96

96:                                               ; preds = %70
  %97 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %94, i64 0, i32 6
  %98 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %97, align 8
  %99 = icmp eq %"class.SkSL::Type"* %98, null
  %100 = select i1 %99, %"class.SkSL::Type"* %94, %"class.SkSL::Type"* %98
  %101 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %100, i64 0, i32 4
  %102 = load i32, i32* %101, align 4
  %103 = icmp ult i32 %102, 3
  br i1 %103, label %108, label %104

104:                                              ; preds = %96
  %105 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %94, i64 0, i32 3
  %106 = load i32, i32* %105, align 8
  %107 = icmp eq i32 %106, 6
  br i1 %107, label %108, label %144

108:                                              ; preds = %104, %96
  br i1 %99, label %114, label %109

109:                                              ; preds = %108, %109
  %110 = phi %"class.SkSL::Type"* [ %112, %109 ], [ %98, %108 ]
  %111 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %110, i64 0, i32 6
  %112 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %111, align 8
  %113 = icmp eq %"class.SkSL::Type"* %112, null
  br i1 %113, label %114, label %109

114:                                              ; preds = %109, %108
  %115 = phi %"class.SkSL::Type"* [ %94, %108 ], [ %110, %109 ]
  %116 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %115, i64 0, i32 16
  %117 = load i8, i8* %116, align 8, !range !2
  %118 = icmp eq i8 %117, 0
  br i1 %118, label %119, label %144

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %93, i64 0, i32 0, i32 1
  %121 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %120, align 8
  %122 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %121, i64 0, i32 1, i32 0, i32 0, i32 0
  %123 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %122, align 8
  %124 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %123, i64 0, i32 1, i32 3
  %125 = load i8, i8* %124, align 1, !range !2
  %126 = icmp eq i8 %125, 0
  br i1 %126, label %127, label %144

127:                                              ; preds = %119
  %128 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %93, i64 0, i32 5
  %129 = load i32, i32* %128, align 8
  %130 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %93, i64 0, i32 19, i32 0
  %131 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %131) #14
  store i32 196679, i32* %8, align 4
  %132 = bitcast %"class.SkSL::OutputStream"* %130 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %133 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %132, align 8
  %134 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %133, i64 3
  %135 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %134, align 8
  call void %135(%"class.SkSL::OutputStream"* %130, i8* nonnull %131, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %131) #14
  %136 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %136) #14
  store i32 %129, i32* %10, align 4
  %137 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %132, align 8
  %138 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %137, i64 3
  %139 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %138, align 8
  call void %139(%"class.SkSL::OutputStream"* %130, i8* nonnull %136, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %136) #14
  %140 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %140) #14
  store i32 0, i32* %9, align 4
  %141 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %132, align 8
  %142 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %141, i64 3
  %143 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %142, align 8
  call void %143(%"class.SkSL::OutputStream"* %130, i8* nonnull %140, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %140) #14
  br label %144

144:                                              ; preds = %70, %104, %114, %119, %127
  %145 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %93, i64 0, i32 5
  %146 = load i32, i32* %145, align 8
  %147 = add i32 %146, 1
  store i32 %147, i32* %145, align 8
  %148 = load %"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::SPIRVCodeGenerator"** %17, align 8
  %149 = getelementptr inbounds %"class.SkSL::SwizzleLValue", %"class.SkSL::SwizzleLValue"* %0, i64 0, i32 3, i32 0, i32 0, i64 8
  %150 = getelementptr inbounds %"class.SkSL::SwizzleLValue", %"class.SkSL::SwizzleLValue"* %0, i64 0, i32 3, i32 0, i32 0, i64 16
  %151 = bitcast i8* %150 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = lshr i64 %152, 1
  %154 = trunc i64 %153 to i32
  %155 = and i32 %154, 2147483647
  %156 = add nuw nsw i32 %155, 5
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %148, i32 79, i32 %156, %"class.SkSL::OutputStream"* dereferenceable(8) %1)
  %157 = load %"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::SPIRVCodeGenerator"** %17, align 8
  %158 = getelementptr inbounds %"class.SkSL::SwizzleLValue", %"class.SkSL::SwizzleLValue"* %0, i64 0, i32 5
  %159 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %158, align 8
  %160 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %157, i64 0, i32 2
  %161 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %157, %"class.SkSL::Type"* dereferenceable(184) %159, %"class.SkSL::MemoryLayout"* dereferenceable(4) %160) #14
  %162 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %162)
  store i32 %161, i32* %7, align 4
  %163 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %81, align 8
  %164 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %163, i64 3
  %165 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %164, align 8
  call void %165(%"class.SkSL::OutputStream"* %1, i8* nonnull %162, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %162)
  %166 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %166)
  store i32 %146, i32* %6, align 4
  %167 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %81, align 8
  %168 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %167, i64 3
  %169 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %168, align 8
  call void %169(%"class.SkSL::OutputStream"* %1, i8* nonnull %166, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %166)
  %170 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %170)
  store i32 %72, i32* %5, align 4
  %171 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %81, align 8
  %172 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %171, i64 3
  %173 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %172, align 8
  call void %173(%"class.SkSL::OutputStream"* %1, i8* nonnull %170, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %170)
  %174 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %174)
  store i32 %72, i32* %4, align 4
  %175 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %81, align 8
  %176 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %175, i64 3
  %177 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %176, align 8
  call void %177(%"class.SkSL::OutputStream"* %1, i8* nonnull %174, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %174)
  %178 = bitcast i8* %149 to i8**
  %179 = load i8*, i8** %178, align 8
  %180 = icmp eq i8* %179, null
  br i1 %180, label %189, label %181

181:                                              ; preds = %144
  %182 = load i64, i64* %151, align 8
  %183 = lshr i64 %182, 1
  %184 = and i64 %183, 2147483647
  %185 = getelementptr inbounds i8, i8* %179, i64 %184
  %186 = icmp eq i64 %184, 0
  br i1 %186, label %189, label %187

187:                                              ; preds = %181
  %188 = bitcast i32* %3 to i8*
  br label %190

189:                                              ; preds = %190, %144, %181
  ret i32 %146

190:                                              ; preds = %187, %190
  %191 = phi i8* [ %179, %187 ], [ %197, %190 ]
  %192 = load i8, i8* %191, align 1
  %193 = sext i8 %192 to i32
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %188)
  store i32 %193, i32* %3, align 4
  %194 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %81, align 8
  %195 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %194, i64 3
  %196 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %195, align 8
  call void %196(%"class.SkSL::OutputStream"* %1, i8* nonnull %188, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %188)
  %197 = getelementptr inbounds i8, i8* %191, i64 1
  %198 = icmp eq i8* %197, %185
  br i1 %198, label %189, label %190
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL13SwizzleLValue5storeEjRNS_12OutputStreamE(%"class.SkSL::SwizzleLValue"*, i32, %"class.SkSL::OutputStream"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = getelementptr inbounds %"class.SkSL::SwizzleLValue", %"class.SkSL::SwizzleLValue"* %0, i64 0, i32 1
  %21 = load %"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::SPIRVCodeGenerator"** %20, align 8
  %22 = getelementptr inbounds %"class.SkSL::SwizzleLValue", %"class.SkSL::SwizzleLValue"* %0, i64 0, i32 4
  %23 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %22, align 8
  %24 = icmp eq %"class.SkSL::Type"* %23, null
  br i1 %24, label %73, label %25

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %23, i64 0, i32 6
  %27 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %26, align 8
  %28 = icmp eq %"class.SkSL::Type"* %27, null
  %29 = select i1 %28, %"class.SkSL::Type"* %23, %"class.SkSL::Type"* %27
  %30 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %29, i64 0, i32 4
  %31 = load i32, i32* %30, align 4
  %32 = icmp ult i32 %31, 3
  br i1 %32, label %37, label %33

33:                                               ; preds = %25
  %34 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %23, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = icmp eq i32 %35, 6
  br i1 %36, label %37, label %73

37:                                               ; preds = %33, %25
  br i1 %28, label %43, label %38

38:                                               ; preds = %37, %38
  %39 = phi %"class.SkSL::Type"* [ %41, %38 ], [ %27, %37 ]
  %40 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %39, i64 0, i32 6
  %41 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %40, align 8
  %42 = icmp eq %"class.SkSL::Type"* %41, null
  br i1 %42, label %43, label %38

43:                                               ; preds = %38, %37
  %44 = phi %"class.SkSL::Type"* [ %23, %37 ], [ %39, %38 ]
  %45 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %44, i64 0, i32 16
  %46 = load i8, i8* %45, align 8, !range !2
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %48, label %73

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %21, i64 0, i32 0, i32 1
  %50 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %49, align 8
  %51 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %50, i64 0, i32 1, i32 0, i32 0, i32 0
  %52 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %51, align 8
  %53 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %52, i64 0, i32 1, i32 3
  %54 = load i8, i8* %53, align 1, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %73

56:                                               ; preds = %48
  %57 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %21, i64 0, i32 5
  %58 = load i32, i32* %57, align 8
  %59 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %21, i64 0, i32 19, i32 0
  %60 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %60) #14
  store i32 196679, i32* %17, align 4
  %61 = bitcast %"class.SkSL::OutputStream"* %59 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %62 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %62, i64 3
  %64 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %63, align 8
  call void %64(%"class.SkSL::OutputStream"* %59, i8* nonnull %60, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %60) #14
  %65 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %65) #14
  store i32 %58, i32* %19, align 4
  %66 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %61, align 8
  %67 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %66, i64 3
  %68 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %67, align 8
  call void %68(%"class.SkSL::OutputStream"* %59, i8* nonnull %65, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %65) #14
  %69 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %69) #14
  store i32 0, i32* %18, align 4
  %70 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %61, align 8
  %71 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %70, i64 3
  %72 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %71, align 8
  call void %72(%"class.SkSL::OutputStream"* %59, i8* nonnull %69, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %69) #14
  br label %73

73:                                               ; preds = %3, %33, %43, %48, %56
  %74 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %21, i64 0, i32 5
  %75 = load i32, i32* %74, align 8
  %76 = add i32 %75, 1
  store i32 %76, i32* %74, align 8
  %77 = load %"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::SPIRVCodeGenerator"** %20, align 8
  %78 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %22, align 8
  %79 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %77, i64 0, i32 2
  %80 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %77, %"class.SkSL::Type"* dereferenceable(184) %78, %"class.SkSL::MemoryLayout"* dereferenceable(4) %79) #14
  %81 = getelementptr inbounds %"class.SkSL::SwizzleLValue", %"class.SkSL::SwizzleLValue"* %0, i64 0, i32 2
  %82 = load i32, i32* %81, align 8
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %77, i32 61, i32 4, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %83 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %83) #14
  store i32 %80, i32* %16, align 4
  %84 = bitcast %"class.SkSL::OutputStream"* %2 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %85 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %85, i64 3
  %87 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %86, align 8
  call void %87(%"class.SkSL::OutputStream"* %2, i8* nonnull %83, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %83) #14
  %88 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %88) #14
  store i32 %75, i32* %15, align 4
  %89 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %84, align 8
  %90 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %89, i64 3
  %91 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %90, align 8
  call void %91(%"class.SkSL::OutputStream"* %2, i8* nonnull %88, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %88) #14
  %92 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %92) #14
  store i32 %82, i32* %14, align 4
  %93 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %84, align 8
  %94 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %93, i64 3
  %95 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %94, align 8
  call void %95(%"class.SkSL::OutputStream"* %2, i8* nonnull %92, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %92) #14
  %96 = load %"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::SPIRVCodeGenerator"** %20, align 8
  %97 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %22, align 8
  %98 = icmp eq %"class.SkSL::Type"* %97, null
  br i1 %98, label %147, label %99

99:                                               ; preds = %73
  %100 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %97, i64 0, i32 6
  %101 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %100, align 8
  %102 = icmp eq %"class.SkSL::Type"* %101, null
  %103 = select i1 %102, %"class.SkSL::Type"* %97, %"class.SkSL::Type"* %101
  %104 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %103, i64 0, i32 4
  %105 = load i32, i32* %104, align 4
  %106 = icmp ult i32 %105, 3
  br i1 %106, label %111, label %107

107:                                              ; preds = %99
  %108 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %97, i64 0, i32 3
  %109 = load i32, i32* %108, align 8
  %110 = icmp eq i32 %109, 6
  br i1 %110, label %111, label %147

111:                                              ; preds = %107, %99
  br i1 %102, label %117, label %112

112:                                              ; preds = %111, %112
  %113 = phi %"class.SkSL::Type"* [ %115, %112 ], [ %101, %111 ]
  %114 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %113, i64 0, i32 6
  %115 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %114, align 8
  %116 = icmp eq %"class.SkSL::Type"* %115, null
  br i1 %116, label %117, label %112

117:                                              ; preds = %112, %111
  %118 = phi %"class.SkSL::Type"* [ %97, %111 ], [ %113, %112 ]
  %119 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %118, i64 0, i32 16
  %120 = load i8, i8* %119, align 8, !range !2
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %122, label %147

122:                                              ; preds = %117
  %123 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %96, i64 0, i32 0, i32 1
  %124 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %123, align 8
  %125 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %124, i64 0, i32 1, i32 0, i32 0, i32 0
  %126 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %125, align 8
  %127 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %126, i64 0, i32 1, i32 3
  %128 = load i8, i8* %127, align 1, !range !2
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %130, label %147

130:                                              ; preds = %122
  %131 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %96, i64 0, i32 5
  %132 = load i32, i32* %131, align 8
  %133 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %96, i64 0, i32 19, i32 0
  %134 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %134) #14
  store i32 196679, i32* %11, align 4
  %135 = bitcast %"class.SkSL::OutputStream"* %133 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %136 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %135, align 8
  %137 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %136, i64 3
  %138 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %137, align 8
  call void %138(%"class.SkSL::OutputStream"* %133, i8* nonnull %134, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %134) #14
  %139 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %139) #14
  store i32 %132, i32* %13, align 4
  %140 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %135, align 8
  %141 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %140, i64 3
  %142 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %141, align 8
  call void %142(%"class.SkSL::OutputStream"* %133, i8* nonnull %139, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %139) #14
  %143 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %143) #14
  store i32 0, i32* %12, align 4
  %144 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %135, align 8
  %145 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %144, i64 3
  %146 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %145, align 8
  call void %146(%"class.SkSL::OutputStream"* %133, i8* nonnull %143, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %143) #14
  br label %147

147:                                              ; preds = %73, %107, %117, %122, %130
  %148 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %96, i64 0, i32 5
  %149 = load i32, i32* %148, align 8
  %150 = add i32 %149, 1
  store i32 %150, i32* %148, align 8
  %151 = load %"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::SPIRVCodeGenerator"** %20, align 8
  %152 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %22, align 8
  %153 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %152, i64 0, i32 8
  %154 = load i32, i32* %153, align 8
  %155 = add nsw i32 %154, 5
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %151, i32 79, i32 %155, %"class.SkSL::OutputStream"* dereferenceable(8) %2)
  %156 = load %"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::SPIRVCodeGenerator"** %20, align 8
  %157 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %22, align 8
  %158 = getelementptr inbounds %"class.SkSL::SPIRVCodeGenerator", %"class.SkSL::SPIRVCodeGenerator"* %156, i64 0, i32 2
  %159 = call i32 @_ZN4SkSL18SPIRVCodeGenerator7getTypeERKNS_4TypeERKNS_12MemoryLayoutE(%"class.SkSL::SPIRVCodeGenerator"* %156, %"class.SkSL::Type"* dereferenceable(184) %157, %"class.SkSL::MemoryLayout"* dereferenceable(4) %158) #14
  %160 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %160)
  store i32 %159, i32* %10, align 4
  %161 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %84, align 8
  %162 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %161, i64 3
  %163 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %162, align 8
  call void %163(%"class.SkSL::OutputStream"* %2, i8* nonnull %160, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %160)
  %164 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %164)
  store i32 %149, i32* %9, align 4
  %165 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %84, align 8
  %166 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %165, i64 3
  %167 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %166, align 8
  call void %167(%"class.SkSL::OutputStream"* %2, i8* nonnull %164, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %164)
  %168 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %168)
  store i32 %75, i32* %8, align 4
  %169 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %84, align 8
  %170 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %169, i64 3
  %171 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %170, align 8
  call void %171(%"class.SkSL::OutputStream"* %2, i8* nonnull %168, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %168)
  %172 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %172)
  store i32 %1, i32* %7, align 4
  %173 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %84, align 8
  %174 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %173, i64 3
  %175 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %174, align 8
  call void %175(%"class.SkSL::OutputStream"* %2, i8* nonnull %172, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %172)
  %176 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %22, align 8
  %177 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %176, i64 0, i32 8
  %178 = load i32, i32* %177, align 8
  %179 = icmp sgt i32 %178, 0
  br i1 %179, label %180, label %196

180:                                              ; preds = %147
  %181 = getelementptr inbounds %"class.SkSL::SwizzleLValue", %"class.SkSL::SwizzleLValue"* %0, i64 0, i32 3, i32 0, i32 0, i64 16
  %182 = bitcast i8* %181 to i64*
  %183 = getelementptr inbounds %"class.SkSL::SwizzleLValue", %"class.SkSL::SwizzleLValue"* %0, i64 0, i32 3, i32 0, i32 0, i64 8
  %184 = bitcast i8* %183 to i8**
  %185 = bitcast i32* %4 to i8*
  br label %186

186:                                              ; preds = %180, %221
  %187 = phi i32 [ %178, %180 ], [ %229, %221 ]
  %188 = phi i32 [ 0, %180 ], [ %226, %221 ]
  %189 = load i64, i64* %182, align 8
  %190 = and i64 %189, 4294967294
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %221, label %192

192:                                              ; preds = %186
  %193 = load i8*, i8** %184, align 8
  %194 = lshr i64 %189, 1
  %195 = and i64 %194, 2147483647
  br label %207

196:                                              ; preds = %221, %147
  %197 = load %"class.SkSL::SPIRVCodeGenerator"*, %"class.SkSL::SPIRVCodeGenerator"** %20, align 8
  %198 = load i32, i32* %81, align 8
  call void @_ZN4SkSL18SPIRVCodeGenerator11writeOpCodeE6SpvOp_iRNS_12OutputStreamE(%"class.SkSL::SPIRVCodeGenerator"* %197, i32 62, i32 3, %"class.SkSL::OutputStream"* dereferenceable(8) %2) #14
  %199 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %199) #14
  store i32 %198, i32* %6, align 4
  %200 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %84, align 8
  %201 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %200, i64 3
  %202 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %201, align 8
  call void %202(%"class.SkSL::OutputStream"* %2, i8* nonnull %199, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %199) #14
  %203 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %203) #14
  store i32 %149, i32* %5, align 4
  %204 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %84, align 8
  %205 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %204, i64 3
  %206 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %205, align 8
  call void %206(%"class.SkSL::OutputStream"* %2, i8* nonnull %203, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %203) #14
  ret void

207:                                              ; preds = %192, %218
  %208 = phi i64 [ 0, %192 ], [ %219, %218 ]
  %209 = shl i64 %208, 32
  %210 = ashr exact i64 %209, 32
  %211 = getelementptr inbounds i8, i8* %193, i64 %210
  %212 = load i8, i8* %211, align 1
  %213 = sext i8 %212 to i32
  %214 = icmp eq i32 %188, %213
  br i1 %214, label %215, label %218

215:                                              ; preds = %207
  %216 = trunc i64 %208 to i32
  %217 = add i32 %187, %216
  br label %221

218:                                              ; preds = %207
  %219 = add nuw nsw i64 %208, 1
  %220 = icmp ult i64 %219, %195
  br i1 %220, label %207, label %221

221:                                              ; preds = %218, %186, %215
  %222 = phi i32 [ %217, %215 ], [ %188, %186 ], [ %188, %218 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %185)
  store i32 %222, i32* %4, align 4
  %223 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %84, align 8
  %224 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %223, i64 3
  %225 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %224, align 8
  call void %225(%"class.SkSL::OutputStream"* %2, i8* nonnull %185, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %185)
  %226 = add nuw nsw i32 %188, 1
  %227 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %22, align 8
  %228 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %227, i64 0, i32 8
  %229 = load i32, i32* %228, align 8
  %230 = icmp slt i32 %226, %229
  br i1 %230, label %186, label %196
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIaLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray.433*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.433, %class.SkTArray.433* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %74

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %74, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 1) #14
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %61, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.433, %class.SkTArray.433* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %56, %50 ]
  %52 = getelementptr inbounds i8, i8* %44, i64 %51
  %53 = load i8*, i8** %49, align 8
  %54 = getelementptr inbounds i8, i8* %53, i64 %51
  %55 = load i8, i8* %54, align 1
  store i8 %55, i8* %52, align 1
  %56 = add nuw nsw i64 %51, 1
  %57 = load i64, i64* %4, align 8
  %58 = lshr i64 %57, 1
  %59 = and i64 %58, 2147483647
  %60 = icmp ult i64 %56, %59
  br i1 %60, label %50, label %61

61:                                               ; preds = %50, %35
  %62 = phi i64 [ %45, %35 ], [ %57, %50 ]
  %63 = and i64 %62, 1
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %69, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %class.SkTArray.433, %class.SkTArray.433* %0, i64 0, i32 0
  %67 = load i8*, i8** %66, align 8
  tail call void @_Z7sk_freePv(i8* %67) #14
  %68 = load i64, i64* %4, align 8
  br label %69

69:                                               ; preds = %61, %65
  %70 = phi i64 [ %62, %61 ], [ %68, %65 ]
  %71 = getelementptr inbounds %class.SkTArray.433, %class.SkTArray.433* %0, i64 0, i32 0
  store i8* %44, i8** %71, align 8
  %72 = and i64 %70, -4294967298
  %73 = or i64 %72, 1
  store i64 %73, i64* %4, align 8
  br label %74

74:                                               ; preds = %69, %32, %21
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIKN4SkSL6SymbolENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.303"*, %"class.std::__1::unique_ptr.305"* dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.303", %"class.std::__1::vector.303"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.305"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.303"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.303"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.303", %"class.std::__1::vector.303"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.305"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #15
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #16
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.305"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.305"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.305", %"class.std::__1::unique_ptr.305"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.305", %"class.std::__1::unique_ptr.305"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.305"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.305", %"class.std::__1::unique_ptr.305"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.305"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.305"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.305", %"class.std::__1::unique_ptr.305"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.305"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.303", %"class.std::__1::vector.303"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.305"*, %"class.std::__1::unique_ptr.305"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.305"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.305"*, %"class.std::__1::unique_ptr.305"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.305"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.305", %"class.std::__1::unique_ptr.305"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.SkSL::Symbol"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.305"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.305"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.305", %"class.std::__1::unique_ptr.305"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.305", %"class.std::__1::unique_ptr.305"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.305", %"class.std::__1::unique_ptr.305"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.305"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.305"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !183

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.305"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.305"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.305"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.305"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.305"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.305", %"class.std::__1::unique_ptr.305"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.305", %"class.std::__1::unique_ptr.305"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.305", %"class.std::__1::unique_ptr.305"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.305"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.305"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.305", %"class.std::__1::unique_ptr.305"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.305", %"class.std::__1::unique_ptr.305"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.305", %"class.std::__1::unique_ptr.305"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.305"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.305"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.305", %"class.std::__1::unique_ptr.305"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.305", %"class.std::__1::unique_ptr.305"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.305", %"class.std::__1::unique_ptr.305"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.305"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.305"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.305", %"class.std::__1::unique_ptr.305"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.305", %"class.std::__1::unique_ptr.305"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.305", %"class.std::__1::unique_ptr.305"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.305"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.305"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.305", %"class.std::__1::unique_ptr.305"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.305", %"class.std::__1::unique_ptr.305"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.305", %"class.std::__1::unique_ptr.305"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.305"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.305"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.305", %"class.std::__1::unique_ptr.305"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.305", %"class.std::__1::unique_ptr.305"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.305", %"class.std::__1::unique_ptr.305"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.305"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.305"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.305", %"class.std::__1::unique_ptr.305"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.305", %"class.std::__1::unique_ptr.305"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.305", %"class.std::__1::unique_ptr.305"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.305"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.305"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.305", %"class.std::__1::unique_ptr.305"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.305", %"class.std::__1::unique_ptr.305"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.305", %"class.std::__1::unique_ptr.305"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.305"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.305"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.305"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.305"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.305"*, %"class.std::__1::unique_ptr.305"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.305"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.305"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.305"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.305"*
  %138 = icmp eq %"class.std::__1::unique_ptr.305"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.305"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.305", %"class.std::__1::unique_ptr.305"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.305", %"class.std::__1::unique_ptr.305"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %142, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %142, align 8
  %144 = icmp eq %"class.SkSL::Symbol"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.SkSL::Symbol"* %143 to void (%"class.SkSL::Symbol"*)***
  %147 = load void (%"class.SkSL::Symbol"*)**, void (%"class.SkSL::Symbol"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %147, i64 1
  %149 = load void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %148, align 8
  tail call void %149(%"class.SkSL::Symbol"* nonnull %143) #14
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.305"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #16
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.245"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL19SPIRVNumberConstantEjEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_S9_S7_Lb1EEENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS3_JNS_4pairIKS3_jEEEEENSH_INS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.241"*, %"struct.SkSL::SPIRVNumberConstant"* dereferenceable(16), %"struct.std::__1::pair.495"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.SkSL::SPIRVNumberConstant", %"struct.SkSL::SPIRVNumberConstant"* %1, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.SkSL::SPIRVNumberConstant", %"struct.SkSL::SPIRVNumberConstant"* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = sext i32 %7 to i64
  %9 = xor i64 %5, %8
  %10 = getelementptr inbounds %"class.std::__1::__hash_table.241", %"class.std::__1::__hash_table.241"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %66, label %13

13:                                               ; preds = %3
  %14 = tail call i64 @llvm.ctpop.i64(i64 %11) #14, !range !12
  %15 = icmp ugt i64 %14, 1
  br i1 %15, label %19, label %16

16:                                               ; preds = %13
  %17 = add i64 %11, -1
  %18 = and i64 %17, %9
  br label %23

19:                                               ; preds = %13
  %20 = icmp ult i64 %9, %11
  br i1 %20, label %23, label %21

21:                                               ; preds = %19
  %22 = urem i64 %9, %11
  br label %23

23:                                               ; preds = %16, %19, %21
  %24 = phi i64 [ %18, %16 ], [ %22, %21 ], [ %9, %19 ]
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.241", %"class.std::__1::__hash_table.241"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.245"**, %"struct.std::__1::__hash_node_base.245"*** %25, align 8
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base.245"*, %"struct.std::__1::__hash_node_base.245"** %26, i64 %24
  %28 = load %"struct.std::__1::__hash_node_base.245"*, %"struct.std::__1::__hash_node_base.245"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base.245"* %28, null
  br i1 %29, label %66, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.245", %"struct.std::__1::__hash_node_base.245"* %28, i64 0, i32 0
  %32 = load %"struct.std::__1::__hash_node_base.245"*, %"struct.std::__1::__hash_node_base.245"** %31, align 8
  %33 = icmp eq %"struct.std::__1::__hash_node_base.245"* %32, null
  br i1 %33, label %66, label %34

34:                                               ; preds = %30
  %35 = add i64 %11, -1
  br label %36

36:                                               ; preds = %34, %62
  %37 = phi %"struct.std::__1::__hash_node_base.245"* [ %32, %34 ], [ %64, %62 ]
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.245", %"struct.std::__1::__hash_node_base.245"* %37, i64 1
  %39 = bitcast %"struct.std::__1::__hash_node_base.245"* %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, %9
  br i1 %41, label %52, label %42

42:                                               ; preds = %36
  br i1 %15, label %45, label %43

43:                                               ; preds = %42
  %44 = and i64 %40, %35
  br label %49

45:                                               ; preds = %42
  %46 = icmp ult i64 %40, %11
  br i1 %46, label %49, label %47

47:                                               ; preds = %45
  %48 = urem i64 %40, %11
  br label %49

49:                                               ; preds = %43, %45, %47
  %50 = phi i64 [ %44, %43 ], [ %48, %47 ], [ %40, %45 ]
  %51 = icmp eq i64 %50, %24
  br i1 %51, label %52, label %66

52:                                               ; preds = %36, %49
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.245", %"struct.std::__1::__hash_node_base.245"* %37, i64 2
  %54 = bitcast %"struct.std::__1::__hash_node_base.245"* %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = icmp eq i64 %55, %5
  br i1 %56, label %57, label %62

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.245", %"struct.std::__1::__hash_node_base.245"* %37, i64 3
  %59 = bitcast %"struct.std::__1::__hash_node_base.245"* %58 to i32*
  %60 = load i32, i32* %59, align 8
  %61 = icmp eq i32 %60, %7
  br i1 %61, label %152, label %62

62:                                               ; preds = %57, %52
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base.245", %"struct.std::__1::__hash_node_base.245"* %37, i64 0, i32 0
  %64 = load %"struct.std::__1::__hash_node_base.245"*, %"struct.std::__1::__hash_node_base.245"** %63, align 8
  %65 = icmp eq %"struct.std::__1::__hash_node_base.245"* %64, null
  br i1 %65, label %66, label %36

66:                                               ; preds = %49, %62, %30, %23, %3
  %67 = phi i64 [ %24, %23 ], [ -6148914691236517206, %3 ], [ %24, %30 ], [ %24, %62 ], [ %24, %49 ]
  %68 = tail call i8* @_Znwm(i64 40) #16, !noalias !184
  %69 = getelementptr inbounds i8, i8* %68, i64 16
  %70 = bitcast %"struct.std::__1::pair.495"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 %70, i64 24, i1 false) #14, !noalias !184
  %71 = getelementptr inbounds i8, i8* %68, i64 8
  %72 = bitcast i8* %71 to i64*
  store i64 %9, i64* %72, align 8, !noalias !184
  %73 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.245"**
  store %"struct.std::__1::__hash_node_base.245"* null, %"struct.std::__1::__hash_node_base.245"** %73, align 8, !noalias !184
  %74 = getelementptr inbounds %"class.std::__1::__hash_table.241", %"class.std::__1::__hash_table.241"* %0, i64 0, i32 2, i32 0, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = add i64 %75, 1
  %77 = uitofp i64 %76 to float
  %78 = uitofp i64 %11 to float
  %79 = getelementptr inbounds %"class.std::__1::__hash_table.241", %"class.std::__1::__hash_table.241"* %0, i64 0, i32 3, i32 0, i32 0
  %80 = load float, float* %79, align 4
  %81 = fmul float %80, %78
  %82 = fcmp olt float %81, %77
  %83 = or i1 %12, %82
  br i1 %83, label %84, label %107

84:                                               ; preds = %66
  %85 = shl i64 %11, 1
  %86 = icmp ult i64 %11, 3
  %87 = tail call i64 @llvm.ctpop.i64(i64 %11) #14, !range !12
  %88 = icmp ugt i64 %87, 1
  %89 = or i1 %86, %88
  %90 = zext i1 %89 to i64
  %91 = or i64 %85, %90
  %92 = fdiv float %77, %80
  %93 = tail call float @llvm.ceil.f32(float %92) #14
  %94 = fptoui float %93 to i64
  %95 = icmp ult i64 %91, %94
  %96 = select i1 %95, i64 %94, i64 %91
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL19SPIRVNumberConstantEjEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_S9_S7_Lb1EEENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table.241"* %0, i64 %96)
  %97 = load i64, i64* %10, align 8
  %98 = tail call i64 @llvm.ctpop.i64(i64 %97) #14, !range !12
  %99 = icmp ugt i64 %98, 1
  br i1 %99, label %103, label %100

100:                                              ; preds = %84
  %101 = add i64 %97, -1
  %102 = and i64 %101, %9
  br label %107

103:                                              ; preds = %84
  %104 = icmp ult i64 %9, %97
  br i1 %104, label %107, label %105

105:                                              ; preds = %103
  %106 = urem i64 %9, %97
  br label %107

107:                                              ; preds = %105, %103, %100, %66
  %108 = phi i64 [ %11, %66 ], [ %97, %100 ], [ %97, %103 ], [ %97, %105 ]
  %109 = phi i64 [ %67, %66 ], [ %102, %100 ], [ %9, %103 ], [ %106, %105 ]
  %110 = getelementptr inbounds %"class.std::__1::__hash_table.241", %"class.std::__1::__hash_table.241"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %111 = load %"struct.std::__1::__hash_node_base.245"**, %"struct.std::__1::__hash_node_base.245"*** %110, align 8
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.245"*, %"struct.std::__1::__hash_node_base.245"** %111, i64 %109
  %113 = load %"struct.std::__1::__hash_node_base.245"*, %"struct.std::__1::__hash_node_base.245"** %112, align 8
  %114 = icmp eq %"struct.std::__1::__hash_node_base.245"* %113, null
  br i1 %114, label %115, label %141

115:                                              ; preds = %107
  %116 = getelementptr inbounds %"class.std::__1::__hash_table.241", %"class.std::__1::__hash_table.241"* %0, i64 0, i32 1, i32 0, i32 0
  %117 = bitcast %"struct.std::__1::__hash_node_base.245"* %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast i8* %68 to i64*
  store i64 %118, i64* %119, align 8
  %120 = bitcast %"struct.std::__1::__hash_node_base.245"* %116 to i8**
  store i8* %68, i8** %120, align 8
  store %"struct.std::__1::__hash_node_base.245"* %116, %"struct.std::__1::__hash_node_base.245"** %112, align 8
  %121 = load %"struct.std::__1::__hash_node_base.245"*, %"struct.std::__1::__hash_node_base.245"** %73, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.245"* %121, null
  br i1 %122, label %148, label %123

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"struct.std::__1::__hash_node_base.245", %"struct.std::__1::__hash_node_base.245"* %121, i64 1
  %125 = bitcast %"struct.std::__1::__hash_node_base.245"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = tail call i64 @llvm.ctpop.i64(i64 %108) #14, !range !12
  %128 = icmp ugt i64 %127, 1
  br i1 %128, label %132, label %129

129:                                              ; preds = %123
  %130 = add i64 %108, -1
  %131 = and i64 %126, %130
  br label %136

132:                                              ; preds = %123
  %133 = icmp ult i64 %126, %108
  br i1 %133, label %136, label %134

134:                                              ; preds = %132
  %135 = urem i64 %126, %108
  br label %136

136:                                              ; preds = %129, %132, %134
  %137 = phi i64 [ %131, %129 ], [ %135, %134 ], [ %126, %132 ]
  %138 = load %"struct.std::__1::__hash_node_base.245"**, %"struct.std::__1::__hash_node_base.245"*** %110, align 8
  %139 = getelementptr inbounds %"struct.std::__1::__hash_node_base.245"*, %"struct.std::__1::__hash_node_base.245"** %138, i64 %137
  %140 = bitcast %"struct.std::__1::__hash_node_base.245"** %139 to i8**
  br label %146

141:                                              ; preds = %107
  %142 = bitcast %"struct.std::__1::__hash_node_base.245"* %113 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = bitcast i8* %68 to i64*
  store i64 %143, i64* %144, align 8
  %145 = bitcast %"struct.std::__1::__hash_node_base.245"* %113 to i8**
  br label %146

146:                                              ; preds = %136, %141
  %147 = phi i8** [ %145, %141 ], [ %140, %136 ]
  store i8* %68, i8** %147, align 8
  br label %148

148:                                              ; preds = %146, %115
  %149 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.245"*
  %150 = load i64, i64* %74, align 8
  %151 = add i64 %150, 1
  store i64 %151, i64* %74, align 8
  br label %152

152:                                              ; preds = %57, %148
  %153 = phi i8 [ 1, %148 ], [ 0, %57 ]
  %154 = phi %"struct.std::__1::__hash_node_base.245"* [ %149, %148 ], [ %37, %57 ]
  %155 = insertvalue { %"struct.std::__1::__hash_node_base.245"*, i8 } undef, %"struct.std::__1::__hash_node_base.245"* %154, 0
  %156 = insertvalue { %"struct.std::__1::__hash_node_base.245"*, i8 } %155, i8 %153, 1
  ret { %"struct.std::__1::__hash_node_base.245"*, i8 } %156
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL19SPIRVNumberConstantEjEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_S9_S7_Lb1EEENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table.241"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !12
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #14
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.241", %"class.std::__1::__hash_table.241"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL19SPIRVNumberConstantEjEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_S9_S7_Lb1EEENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.241"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #14, !range !12
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.241", %"class.std::__1::__hash_table.241"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.241", %"class.std::__1::__hash_table.241"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #14
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #14, !range !12
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #14
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL19SPIRVNumberConstantEjEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_S9_S7_Lb1EEENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.241"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL19SPIRVNumberConstantEjEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_S9_S7_Lb1EEENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.241"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.241", %"class.std::__1::__hash_table.241"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %142, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #15
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #16
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.241", %"class.std::__1::__hash_table.241"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.245"**, %"struct.std::__1::__hash_node_base.245"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.241"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.245"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.245"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #16
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.247", %"class.std::__1::__bucket_list_deallocator.247"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.245"**, %"struct.std::__1::__hash_node_base.245"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.245"*, %"struct.std::__1::__hash_node_base.245"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.245"* null, %"struct.std::__1::__hash_node_base.245"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !187

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.241", %"class.std::__1::__hash_table.241"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.245", %"struct.std::__1::__hash_node_base.245"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.245"*, %"struct.std::__1::__hash_node_base.245"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.245"* %38, null
  br i1 %39, label %150, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.245"**, %"struct.std::__1::__hash_node_base.245"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.245"*, %"struct.std::__1::__hash_node_base.245"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.245"* null, %"struct.std::__1::__hash_node_base.245"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.245"**, %"struct.std::__1::__hash_node_base.245"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.245"*, %"struct.std::__1::__hash_node_base.245"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.245"* null, %"struct.std::__1::__hash_node_base.245"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.245"**, %"struct.std::__1::__hash_node_base.245"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.245"*, %"struct.std::__1::__hash_node_base.245"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.245"* null, %"struct.std::__1::__hash_node_base.245"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.245"**, %"struct.std::__1::__hash_node_base.245"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.245"*, %"struct.std::__1::__hash_node_base.245"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.245"* null, %"struct.std::__1::__hash_node_base.245"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.245", %"struct.std::__1::__hash_node_base.245"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.245"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #14, !range !12
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.245"**, %"struct.std::__1::__hash_node_base.245"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.245"*, %"struct.std::__1::__hash_node_base.245"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.245"* %36, %"struct.std::__1::__hash_node_base.245"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.245", %"struct.std::__1::__hash_node_base.245"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.245"*, %"struct.std::__1::__hash_node_base.245"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.245"* %75, null
  br i1 %76, label %150, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %136
  %80 = phi %"struct.std::__1::__hash_node_base.245"* [ %75, %77 ], [ %140, %136 ]
  %81 = phi i64 [ %71, %77 ], [ %138, %136 ]
  %82 = phi %"struct.std::__1::__hash_node_base.245"* [ %38, %77 ], [ %137, %136 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.245", %"struct.std::__1::__hash_node_base.245"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.245"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %136, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.245"**, %"struct.std::__1::__hash_node_base.245"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.245"*, %"struct.std::__1::__hash_node_base.245"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.245"*, %"struct.std::__1::__hash_node_base.245"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.245"* %98, null
  br i1 %99, label %105, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.245", %"struct.std::__1::__hash_node_base.245"* %80, i64 2
  %102 = getelementptr inbounds %"struct.std::__1::__hash_node_base.245", %"struct.std::__1::__hash_node_base.245"* %80, i64 3
  %103 = bitcast %"struct.std::__1::__hash_node_base.245"* %102 to i32*
  %104 = bitcast %"struct.std::__1::__hash_node_base.245"* %101 to i64*
  br label %106

105:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.245"* %82, %"struct.std::__1::__hash_node_base.245"** %97, align 8
  br label %136

106:                                              ; preds = %100, %117
  %107 = phi %"struct.std::__1::__hash_node_base.245"* [ %109, %117 ], [ %80, %100 ]
  %108 = getelementptr inbounds %"struct.std::__1::__hash_node_base.245", %"struct.std::__1::__hash_node_base.245"* %107, i64 0, i32 0
  %109 = load %"struct.std::__1::__hash_node_base.245"*, %"struct.std::__1::__hash_node_base.245"** %108, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base.245"* %109, null
  br i1 %110, label %123, label %111

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.245", %"struct.std::__1::__hash_node_base.245"* %109, i64 2
  %113 = load i64, i64* %104, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base.245"* %112 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = icmp eq i64 %113, %115
  br i1 %116, label %117, label %123

117:                                              ; preds = %111
  %118 = load i32, i32* %103, align 8
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base.245", %"struct.std::__1::__hash_node_base.245"* %109, i64 3
  %120 = bitcast %"struct.std::__1::__hash_node_base.245"* %119 to i32*
  %121 = load i32, i32* %120, align 8
  %122 = icmp eq i32 %118, %121
  br i1 %122, label %106, label %123

123:                                              ; preds = %111, %106, %117
  %124 = ptrtoint %"struct.std::__1::__hash_node_base.245"* %109 to i64
  %125 = bitcast %"struct.std::__1::__hash_node_base.245"* %107 to i64*
  %126 = bitcast %"struct.std::__1::__hash_node_base.245"* %82 to i64*
  store i64 %124, i64* %126, align 8
  %127 = load %"struct.std::__1::__hash_node_base.245"**, %"struct.std::__1::__hash_node_base.245"*** %11, align 8
  %128 = getelementptr inbounds %"struct.std::__1::__hash_node_base.245"*, %"struct.std::__1::__hash_node_base.245"** %127, i64 %93
  %129 = bitcast %"struct.std::__1::__hash_node_base.245"** %128 to i64**
  %130 = load i64*, i64** %129, align 8
  %131 = load i64, i64* %130, align 8
  store i64 %131, i64* %125, align 8
  %132 = load %"struct.std::__1::__hash_node_base.245"**, %"struct.std::__1::__hash_node_base.245"*** %11, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.245"*, %"struct.std::__1::__hash_node_base.245"** %132, i64 %93
  %134 = load %"struct.std::__1::__hash_node_base.245"*, %"struct.std::__1::__hash_node_base.245"** %133, align 8
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base.245", %"struct.std::__1::__hash_node_base.245"* %134, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.245"* %80, %"struct.std::__1::__hash_node_base.245"** %135, align 8
  br label %136

136:                                              ; preds = %92, %123, %105
  %137 = phi %"struct.std::__1::__hash_node_base.245"* [ %80, %105 ], [ %82, %123 ], [ %80, %92 ]
  %138 = phi i64 [ %93, %105 ], [ %81, %123 ], [ %81, %92 ]
  %139 = getelementptr inbounds %"struct.std::__1::__hash_node_base.245", %"struct.std::__1::__hash_node_base.245"* %137, i64 0, i32 0
  %140 = load %"struct.std::__1::__hash_node_base.245"*, %"struct.std::__1::__hash_node_base.245"** %139, align 8
  %141 = icmp eq %"struct.std::__1::__hash_node_base.245"* %140, null
  br i1 %141, label %150, label %79

142:                                              ; preds = %2
  %143 = getelementptr inbounds %"class.std::__1::__hash_table.241", %"class.std::__1::__hash_table.241"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %144 = load %"struct.std::__1::__hash_node_base.245"**, %"struct.std::__1::__hash_node_base.245"*** %143, align 8
  store %"struct.std::__1::__hash_node_base.245"** null, %"struct.std::__1::__hash_node_base.245"*** %143, align 8
  %145 = icmp eq %"struct.std::__1::__hash_node_base.245"** %144, null
  br i1 %145, label %148, label %146

146:                                              ; preds = %142
  %147 = bitcast %"struct.std::__1::__hash_node_base.245"** %144 to i8*
  tail call void @_ZdlPv(i8* %147) #16
  br label %148

148:                                              ; preds = %142, %146
  %149 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.247", %"class.std::__1::__bucket_list_deallocator.247"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %149, align 8
  br label %150

150:                                              ; preds = %136, %70, %35, %148
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.138"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.134"*, %"class.SkSL::FunctionDeclaration"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.691"* dereferenceable(8), %"class.std::__1::tuple.633"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.SkSL::FunctionDeclaration"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.SkSL::FunctionDeclaration"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #14, !range !12
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.138"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.138"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.138"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.138"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.138"* %65 to %"class.SkSL::FunctionDeclaration"**
  %67 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %66, align 8
  %68 = icmp eq %"class.SkSL::FunctionDeclaration"* %67, %24
  br i1 %68, label %160, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 32) #16, !noalias !188
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple.691"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !188
  %75 = load i64, i64* %74, align 8, !noalias !188
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !188
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to i32*
  store i32 0, i32* %78, align 8, !noalias !188
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %20, i64* %80, align 8, !noalias !188
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.138"**
  store %"struct.std::__1::__hash_node_base.138"* null, %"struct.std::__1::__hash_node_base.138"** %81, align 8, !noalias !188
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %22 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %23, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %22, 1
  %94 = icmp ult i64 %22, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %22) #14, !range !12
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #14
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.134"* %0, i64 %104)
  %105 = load i64, i64* %21, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #14, !range !12
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %20
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %20, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %20, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %22, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %20, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.138"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.138"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.138"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.138"* %124, %"struct.std::__1::__hash_node_base.138"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.138"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.138"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #14, !range !12
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.138"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.138"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.138"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.138"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.138"* [ %157, %156 ], [ %47, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.138"*, i8 } undef, %"struct.std::__1::__hash_node_base.138"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.138"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.138"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.134"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !12
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #14
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.134"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #14, !range !12
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #14
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #14, !range !12
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #14
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.134"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.134"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #15
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #16
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.134"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.138"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.138"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #16
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.140", %"class.std::__1::__bucket_list_deallocator.140"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.138"* null, %"struct.std::__1::__hash_node_base.138"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !191

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.138"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.138"* null, %"struct.std::__1::__hash_node_base.138"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.138"* null, %"struct.std::__1::__hash_node_base.138"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.138"* null, %"struct.std::__1::__hash_node_base.138"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.138"* null, %"struct.std::__1::__hash_node_base.138"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.138"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #14, !range !12
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.138"* %36, %"struct.std::__1::__hash_node_base.138"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.138"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.138"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.138"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.138"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.138"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.138"* %101 to %"class.SkSL::FunctionDeclaration"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.138"* %82, %"struct.std::__1::__hash_node_base.138"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.138"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.138"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.138"* %110 to %"class.SkSL::FunctionDeclaration"**
  %112 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %102, align 8
  %113 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %111, align 8
  %114 = icmp eq %"class.SkSL::FunctionDeclaration"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.138"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.138"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.138"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.138"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.138"* %80, %"struct.std::__1::__hash_node_base.138"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.138"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.138"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.138"** null, %"struct.std::__1::__hash_node_base.138"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.138"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.138"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #16
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.140", %"class.std::__1::__bucket_list_deallocator.140"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.166"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.162"*, %"class.SkSL::Variable"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.703"* dereferenceable(8), %"class.std::__1::tuple.633"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.SkSL::Variable"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.SkSL::Variable"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #14, !range !12
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.166"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.166"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.166"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.166"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.166"* %65 to %"class.SkSL::Variable"**
  %67 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %66, align 8
  %68 = icmp eq %"class.SkSL::Variable"* %67, %24
  br i1 %68, label %160, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 32) #16, !noalias !192
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple.703"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !192
  %75 = load i64, i64* %74, align 8, !noalias !192
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !192
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to i32*
  store i32 0, i32* %78, align 8, !noalias !192
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %20, i64* %80, align 8, !noalias !192
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.166"**
  store %"struct.std::__1::__hash_node_base.166"* null, %"struct.std::__1::__hash_node_base.166"** %81, align 8, !noalias !192
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %22 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %23, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %22, 1
  %94 = icmp ult i64 %22, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %22) #14, !range !12
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #14
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.162"* %0, i64 %104)
  %105 = load i64, i64* %21, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #14, !range !12
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %20
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %20, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %20, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %22, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %20, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.166"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.166"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.166"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.166"* %124, %"struct.std::__1::__hash_node_base.166"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.166"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.166"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #14, !range !12
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.166"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.166"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.166"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.166"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.166"* [ %157, %156 ], [ %47, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.166"*, i8 } undef, %"struct.std::__1::__hash_node_base.166"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.166"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.166"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.162"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !12
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #14
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.162"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #14, !range !12
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #14
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #14, !range !12
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #14
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.162"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.162"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #15
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #16
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.162"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.166"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.166"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #16
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.168", %"class.std::__1::__bucket_list_deallocator.168"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.166"* null, %"struct.std::__1::__hash_node_base.166"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !195

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.166"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.166"* null, %"struct.std::__1::__hash_node_base.166"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.166"* null, %"struct.std::__1::__hash_node_base.166"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.166"* null, %"struct.std::__1::__hash_node_base.166"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.166"* null, %"struct.std::__1::__hash_node_base.166"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.166"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #14, !range !12
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.166"* %36, %"struct.std::__1::__hash_node_base.166"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.166"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.166"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.166"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.166"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.166"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.166"* %101 to %"class.SkSL::Variable"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.166"* %82, %"struct.std::__1::__hash_node_base.166"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.166"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.166"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.166"* %110 to %"class.SkSL::Variable"**
  %112 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %102, align 8
  %113 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %111, align 8
  %114 = icmp eq %"class.SkSL::Variable"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.166"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.166"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.166"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.166"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.166"* %80, %"struct.std::__1::__hash_node_base.166"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.166"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.166"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.166"** null, %"struct.std::__1::__hash_node_base.166"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.166"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.166"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #16
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.168", %"class.std::__1::__bucket_list_deallocator.168"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.166"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.162"*, %"class.SkSL::Variable"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.713"* dereferenceable(8), %"class.std::__1::tuple.633"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.SkSL::Variable"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.SkSL::Variable"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #14, !range !12
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.166"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.166"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.166"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.166"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.166"* %65 to %"class.SkSL::Variable"**
  %67 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %66, align 8
  %68 = icmp eq %"class.SkSL::Variable"* %67, %24
  br i1 %68, label %160, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 32) #16, !noalias !196
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple.713"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !196
  %75 = load i64, i64* %74, align 8, !noalias !196
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !196
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to i32*
  store i32 0, i32* %78, align 8, !noalias !196
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %20, i64* %80, align 8, !noalias !196
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.166"**
  store %"struct.std::__1::__hash_node_base.166"* null, %"struct.std::__1::__hash_node_base.166"** %81, align 8, !noalias !196
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %22 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %23, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %22, 1
  %94 = icmp ult i64 %22, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %22) #14, !range !12
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #14
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.162"* %0, i64 %104)
  %105 = load i64, i64* %21, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #14, !range !12
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %20
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %20, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %20, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %22, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %20, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.166"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.162", %"class.std::__1::__hash_table.162"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.166"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.166"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.166"* %124, %"struct.std::__1::__hash_node_base.166"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.166"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166", %"struct.std::__1::__hash_node_base.166"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.166"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #14, !range !12
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.166"**, %"struct.std::__1::__hash_node_base.166"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.166"*, %"struct.std::__1::__hash_node_base.166"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.166"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.166"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.166"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.166"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.166"* [ %157, %156 ], [ %47, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.166"*, i8 } undef, %"struct.std::__1::__hash_node_base.166"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.166"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.166"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIjNS_9allocatorIjEEE19__add_back_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca i32*, align 8
  %3 = alloca i32*, align 8
  %4 = alloca %"struct.std::__1::__split_buffer.720", align 8
  %5 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 1023
  br i1 %7, label %8, label %162

8:                                                ; preds = %1
  %9 = add i64 %6, -1024
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32**, i32*** %10, align 8
  %12 = bitcast i32** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds i32*, i32** %11, i64 1
  store i32** %14, i32*** %10, align 8
  %15 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load i32**, i32*** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load i32**, i32*** %17, align 8
  %19 = icmp eq i32** %16, %18
  %20 = ptrtoint i32** %18 to i64
  %21 = bitcast i32** %16 to i64*
  br i1 %19, label %22, label %158

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i32**, i32*** %23, align 8
  %25 = icmp ugt i32** %14, %24
  %26 = ptrtoint i32** %24 to i64
  br i1 %25, label %27, label %47

27:                                               ; preds = %22
  %28 = ptrtoint i32** %14 to i64
  %29 = sub i64 %28, %26
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = sdiv i64 %31, -2
  %33 = getelementptr inbounds i32*, i32** %14, i64 %32
  %34 = ptrtoint i32** %16 to i64
  %35 = sub i64 %34, %28
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %27
  %39 = bitcast i32** %33 to i8*
  %40 = bitcast i32** %14 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #14
  %41 = load i32**, i32*** %10, align 8
  br label %42

42:                                               ; preds = %38, %27
  %43 = phi i32** [ %14, %27 ], [ %41, %38 ]
  %44 = getelementptr inbounds i32*, i32** %33, i64 %36
  store i32** %44, i32*** %15, align 8
  %45 = getelementptr inbounds i32*, i32** %43, i64 %32
  store i32** %45, i32*** %10, align 8
  %46 = bitcast i32** %44 to i64*
  br label %158

47:                                               ; preds = %22
  %48 = bitcast i32*** %17 to i64*
  %49 = bitcast %"class.std::__1::deque"* %0 to i64*
  %50 = sub i64 %20, %26
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  %53 = select i1 %52, i64 1, i64 %51
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  tail call void @abort() #15
  unreachable

56:                                               ; preds = %47
  %57 = lshr i64 %53, 2
  %58 = shl i64 %53, 3
  %59 = tail call i8* @_Znwm(i64 %58) #16
  %60 = bitcast i8* %59 to i32**
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds i32*, i32** %60, i64 %57
  %63 = ptrtoint i32** %62 to i64
  %64 = getelementptr inbounds i32*, i32** %60, i64 %53
  %65 = ptrtoint i32** %64 to i64
  %66 = ptrtoint i32** %14 to i64
  %67 = ptrtoint i32** %16 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = getelementptr inbounds i32*, i32** %62, i64 %69
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %147, label %72

72:                                               ; preds = %56
  %73 = add i64 %68, -8
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %72, %78
  %79 = phi i32** [ %86, %78 ], [ %62, %72 ]
  %80 = phi i64 [ %87, %78 ], [ %63, %72 ]
  %81 = phi i32** [ %88, %78 ], [ %14, %72 ]
  %82 = phi i64 [ %89, %78 ], [ %76, %72 ]
  %83 = bitcast i32** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds i32*, i32** %79, i64 1
  %87 = ptrtoint i32** %86 to i64
  %88 = getelementptr inbounds i32*, i32** %81, i64 1
  %89 = add i64 %82, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78, !llvm.loop !199

91:                                               ; preds = %78
  %92 = ptrtoint i32** %86 to i64
  br label %93

93:                                               ; preds = %72, %91
  %94 = phi i32** [ %62, %72 ], [ %86, %91 ]
  %95 = phi i64 [ %63, %72 ], [ %92, %91 ]
  %96 = phi i32** [ %14, %72 ], [ %88, %91 ]
  %97 = icmp ult i64 %73, 56
  br i1 %97, label %144, label %98

98:                                               ; preds = %93, %98
  %99 = phi i32** [ %140, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %141, %98 ], [ %95, %93 ]
  %101 = phi i32** [ %142, %98 ], [ %96, %93 ]
  %102 = bitcast i32** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds i32*, i32** %99, i64 1
  %106 = getelementptr inbounds i32*, i32** %101, i64 1
  %107 = bitcast i32** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast i32** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds i32*, i32** %99, i64 2
  %111 = getelementptr inbounds i32*, i32** %101, i64 2
  %112 = bitcast i32** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast i32** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds i32*, i32** %99, i64 3
  %116 = getelementptr inbounds i32*, i32** %101, i64 3
  %117 = bitcast i32** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast i32** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds i32*, i32** %99, i64 4
  %121 = getelementptr inbounds i32*, i32** %101, i64 4
  %122 = bitcast i32** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast i32** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds i32*, i32** %99, i64 5
  %126 = getelementptr inbounds i32*, i32** %101, i64 5
  %127 = bitcast i32** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast i32** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds i32*, i32** %99, i64 6
  %131 = getelementptr inbounds i32*, i32** %101, i64 6
  %132 = bitcast i32** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast i32** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds i32*, i32** %99, i64 7
  %136 = getelementptr inbounds i32*, i32** %101, i64 7
  %137 = bitcast i32** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast i32** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds i32*, i32** %99, i64 8
  %141 = ptrtoint i32** %140 to i64
  %142 = getelementptr inbounds i32*, i32** %101, i64 8
  %143 = icmp eq i32** %70, %140
  br i1 %143, label %144, label %98

144:                                              ; preds = %98, %93
  %145 = ptrtoint i32** %70 to i64
  %146 = load i32**, i32*** %23, align 8
  br label %147

147:                                              ; preds = %144, %56
  %148 = phi i32** [ %146, %144 ], [ %24, %56 ]
  %149 = phi i64 [ %145, %144 ], [ %63, %56 ]
  store i64 %61, i64* %49, align 8
  %150 = bitcast i32*** %10 to i64*
  store i64 %63, i64* %150, align 8
  %151 = bitcast i32*** %15 to i64*
  store i64 %149, i64* %151, align 8
  store i64 %65, i64* %48, align 8
  %152 = icmp eq i32** %148, null
  %153 = inttoptr i64 %149 to i64*
  br i1 %152, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast i32** %148 to i8*
  tail call void @_ZdlPv(i8* %155) #16
  %156 = bitcast i32*** %15 to i64**
  %157 = load i64*, i64** %156, align 8
  br label %158

158:                                              ; preds = %8, %42, %147, %154
  %159 = phi i64* [ %157, %154 ], [ %153, %147 ], [ %46, %42 ], [ %21, %8 ]
  store i64 %13, i64* %159, align 8
  %160 = load i32**, i32*** %15, align 8
  %161 = getelementptr inbounds i32*, i32** %160, i64 1
  store i32** %161, i32*** %15, align 8
  br label %460

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast i32*** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast i32*** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %166, %169
  %171 = ashr exact i64 %170, 3
  %172 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %173 = bitcast i32*** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::deque"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %171, %178
  %180 = inttoptr i64 %166 to i32**
  %181 = inttoptr i64 %169 to i32**
  br i1 %179, label %182, label %337

182:                                              ; preds = %162
  %183 = icmp eq i64 %174, %166
  br i1 %183, label %188, label %184

184:                                              ; preds = %182
  %185 = bitcast i32** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #14
  %186 = tail call i8* @_Znwm(i64 4096) #16
  %187 = bitcast i32** %2 to i8**
  store i8* %186, i8** %187, align 8
  call void @_ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEE9push_backEOS1_(%"struct.std::__1::__split_buffer"* %163, i32** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #14
  br label %460

188:                                              ; preds = %182
  %189 = bitcast i32** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #14
  %190 = tail call i8* @_Znwm(i64 4096) #16
  %191 = bitcast i32** %3 to i8**
  store i8* %190, i8** %191, align 8
  call void @_ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEE10push_frontEOS1_(%"struct.std::__1::__split_buffer"* %163, i32** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #14
  %192 = load i32**, i32*** %167, align 8
  %193 = bitcast i32** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds i32*, i32** %192, i64 1
  store i32** %195, i32*** %167, align 8
  %196 = load i32**, i32*** %164, align 8
  %197 = load i32**, i32*** %172, align 8
  %198 = icmp eq i32** %196, %197
  %199 = ptrtoint i32** %197 to i64
  %200 = bitcast i32** %196 to i64*
  br i1 %198, label %201, label %333

201:                                              ; preds = %188
  %202 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %203 = load i32**, i32*** %202, align 8
  %204 = icmp ugt i32** %195, %203
  %205 = ptrtoint i32** %203 to i64
  br i1 %204, label %206, label %226

206:                                              ; preds = %201
  %207 = ptrtoint i32** %195 to i64
  %208 = sub i64 %207, %205
  %209 = ashr exact i64 %208, 3
  %210 = add nsw i64 %209, 1
  %211 = sdiv i64 %210, -2
  %212 = getelementptr inbounds i32*, i32** %195, i64 %211
  %213 = ptrtoint i32** %196 to i64
  %214 = sub i64 %213, %207
  %215 = ashr exact i64 %214, 3
  %216 = icmp eq i64 %214, 0
  br i1 %216, label %221, label %217

217:                                              ; preds = %206
  %218 = bitcast i32** %212 to i8*
  %219 = bitcast i32** %195 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %214, i1 false) #14
  %220 = load i32**, i32*** %167, align 8
  br label %221

221:                                              ; preds = %217, %206
  %222 = phi i32** [ %195, %206 ], [ %220, %217 ]
  %223 = getelementptr inbounds i32*, i32** %212, i64 %215
  store i32** %223, i32*** %164, align 8
  %224 = getelementptr inbounds i32*, i32** %222, i64 %211
  store i32** %224, i32*** %167, align 8
  %225 = bitcast i32** %223 to i64*
  br label %333

226:                                              ; preds = %201
  %227 = sub i64 %199, %205
  %228 = ashr exact i64 %227, 2
  %229 = icmp eq i64 %227, 0
  %230 = select i1 %229, i64 1, i64 %228
  %231 = icmp ugt i64 %230, 2305843009213693951
  br i1 %231, label %232, label %233

232:                                              ; preds = %226
  call void @abort() #15
  unreachable

233:                                              ; preds = %226
  %234 = lshr i64 %230, 2
  %235 = shl i64 %230, 3
  %236 = call i8* @_Znwm(i64 %235) #16
  %237 = bitcast i8* %236 to i32**
  %238 = ptrtoint i8* %236 to i64
  %239 = getelementptr inbounds i32*, i32** %237, i64 %234
  %240 = ptrtoint i32** %239 to i64
  %241 = getelementptr inbounds i32*, i32** %237, i64 %230
  %242 = ptrtoint i32** %241 to i64
  %243 = ptrtoint i32** %195 to i64
  %244 = ptrtoint i32** %196 to i64
  %245 = sub i64 %244, %243
  %246 = ashr exact i64 %245, 3
  %247 = getelementptr inbounds i32*, i32** %239, i64 %246
  %248 = icmp eq i64 %245, 0
  br i1 %248, label %324, label %249

249:                                              ; preds = %233
  %250 = add i64 %245, -8
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %270, label %255

255:                                              ; preds = %249, %255
  %256 = phi i32** [ %263, %255 ], [ %239, %249 ]
  %257 = phi i64 [ %264, %255 ], [ %240, %249 ]
  %258 = phi i32** [ %265, %255 ], [ %195, %249 ]
  %259 = phi i64 [ %266, %255 ], [ %253, %249 ]
  %260 = bitcast i32** %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = inttoptr i64 %257 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds i32*, i32** %256, i64 1
  %264 = ptrtoint i32** %263 to i64
  %265 = getelementptr inbounds i32*, i32** %258, i64 1
  %266 = add i64 %259, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %255, !llvm.loop !200

268:                                              ; preds = %255
  %269 = ptrtoint i32** %263 to i64
  br label %270

270:                                              ; preds = %249, %268
  %271 = phi i32** [ %239, %249 ], [ %263, %268 ]
  %272 = phi i64 [ %240, %249 ], [ %269, %268 ]
  %273 = phi i32** [ %195, %249 ], [ %265, %268 ]
  %274 = icmp ult i64 %250, 56
  br i1 %274, label %321, label %275

275:                                              ; preds = %270, %275
  %276 = phi i32** [ %317, %275 ], [ %271, %270 ]
  %277 = phi i64 [ %318, %275 ], [ %272, %270 ]
  %278 = phi i32** [ %319, %275 ], [ %273, %270 ]
  %279 = bitcast i32** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = inttoptr i64 %277 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds i32*, i32** %276, i64 1
  %283 = getelementptr inbounds i32*, i32** %278, i64 1
  %284 = bitcast i32** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast i32** %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds i32*, i32** %276, i64 2
  %288 = getelementptr inbounds i32*, i32** %278, i64 2
  %289 = bitcast i32** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast i32** %287 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds i32*, i32** %276, i64 3
  %293 = getelementptr inbounds i32*, i32** %278, i64 3
  %294 = bitcast i32** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast i32** %292 to i64*
  store i64 %295, i64* %296, align 8
  %297 = getelementptr inbounds i32*, i32** %276, i64 4
  %298 = getelementptr inbounds i32*, i32** %278, i64 4
  %299 = bitcast i32** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast i32** %297 to i64*
  store i64 %300, i64* %301, align 8
  %302 = getelementptr inbounds i32*, i32** %276, i64 5
  %303 = getelementptr inbounds i32*, i32** %278, i64 5
  %304 = bitcast i32** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast i32** %302 to i64*
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds i32*, i32** %276, i64 6
  %308 = getelementptr inbounds i32*, i32** %278, i64 6
  %309 = bitcast i32** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast i32** %307 to i64*
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds i32*, i32** %276, i64 7
  %313 = getelementptr inbounds i32*, i32** %278, i64 7
  %314 = bitcast i32** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast i32** %312 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds i32*, i32** %276, i64 8
  %318 = ptrtoint i32** %317 to i64
  %319 = getelementptr inbounds i32*, i32** %278, i64 8
  %320 = icmp eq i32** %247, %317
  br i1 %320, label %321, label %275

321:                                              ; preds = %275, %270
  %322 = ptrtoint i32** %247 to i64
  %323 = load i32**, i32*** %202, align 8
  br label %324

324:                                              ; preds = %321, %233
  %325 = phi i32** [ %323, %321 ], [ %203, %233 ]
  %326 = phi i64 [ %322, %321 ], [ %240, %233 ]
  store i64 %238, i64* %175, align 8
  store i64 %240, i64* %168, align 8
  store i64 %326, i64* %165, align 8
  store i64 %242, i64* %173, align 8
  %327 = icmp eq i32** %325, null
  %328 = inttoptr i64 %326 to i64*
  br i1 %327, label %333, label %329

329:                                              ; preds = %324
  %330 = bitcast i32** %325 to i8*
  call void @_ZdlPv(i8* %330) #16
  %331 = bitcast i32*** %164 to i64**
  %332 = load i64*, i64** %331, align 8
  br label %333

333:                                              ; preds = %188, %221, %324, %329
  %334 = phi i64* [ %332, %329 ], [ %328, %324 ], [ %225, %221 ], [ %200, %188 ]
  store i64 %194, i64* %334, align 8
  %335 = load i32**, i32*** %164, align 8
  %336 = getelementptr inbounds i32*, i32** %335, i64 1
  store i32** %336, i32*** %164, align 8
  br label %460

337:                                              ; preds = %162
  %338 = bitcast %"struct.std::__1::__split_buffer.720"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338) #14
  %339 = getelementptr inbounds %"struct.std::__1::__split_buffer.720", %"struct.std::__1::__split_buffer.720"* %4, i64 0, i32 1
  %340 = getelementptr inbounds %"struct.std::__1::__split_buffer.720", %"struct.std::__1::__split_buffer.720"* %4, i64 0, i32 2
  %341 = getelementptr inbounds %"struct.std::__1::__split_buffer.720", %"struct.std::__1::__split_buffer.720"* %4, i64 0, i32 3, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::__1::__split_buffer.720", %"struct.std::__1::__split_buffer.720"* %4, i64 0, i32 3, i32 1, i32 0
  %343 = ashr exact i64 %177, 2
  %344 = icmp eq i64 %177, 0
  %345 = select i1 %344, i64 1, i64 %343
  %346 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3
  %347 = bitcast %"struct.std::__1::__split_buffer.720"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 24, i1 false)
  store i32** null, i32*** %341, align 8
  %348 = bitcast %"class.std::__1::allocator.297"** %342 to %"class.std::__1::__compressed_pair.294"**
  store %"class.std::__1::__compressed_pair.294"* %346, %"class.std::__1::__compressed_pair.294"** %348, align 8
  %349 = icmp ugt i64 %345, 2305843009213693951
  br i1 %349, label %350, label %351

350:                                              ; preds = %337
  tail call void @abort() #15
  unreachable

351:                                              ; preds = %337
  %352 = shl i64 %345, 3
  %353 = tail call i8* @_Znwm(i64 %352) #16
  %354 = bitcast i8* %353 to i32**
  %355 = bitcast %"struct.std::__1::__split_buffer.720"* %4 to i8**
  store i8* %353, i8** %355, align 8
  %356 = getelementptr inbounds i32*, i32** %354, i64 %171
  store i32** %356, i32*** %340, align 8
  store i32** %356, i32*** %339, align 8
  %357 = getelementptr inbounds i32*, i32** %354, i64 %345
  store i32** %357, i32*** %341, align 8
  %358 = tail call i8* @_Znwm(i64 4096) #16
  %359 = ptrtoint i8* %358 to i64
  %360 = icmp eq i64 %171, %345
  %361 = ptrtoint i32** %357 to i64
  %362 = ptrtoint i8* %353 to i64
  %363 = ptrtoint i32** %356 to i64
  br i1 %360, label %364, label %398

364:                                              ; preds = %351
  %365 = icmp ugt i32** %356, %354
  br i1 %365, label %366, label %373

366:                                              ; preds = %364
  %367 = sub i64 %363, %362
  %368 = ashr exact i64 %367, 3
  %369 = add nsw i64 %368, 1
  %370 = sdiv i64 %369, -2
  %371 = getelementptr inbounds i32*, i32** %356, i64 %370
  store i32** %371, i32*** %340, align 8
  store i32** %371, i32*** %339, align 8
  %372 = ptrtoint i32** %371 to i64
  br label %398

373:                                              ; preds = %364
  %374 = sub i64 %361, %362
  %375 = ashr exact i64 %374, 2
  %376 = icmp eq i64 %374, 0
  %377 = select i1 %376, i64 1, i64 %375
  %378 = icmp ugt i64 %377, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %373
  tail call void @abort() #15
  unreachable

380:                                              ; preds = %373
  %381 = bitcast %"struct.std::__1::__split_buffer.720"* %4 to i64*
  %382 = bitcast i32*** %341 to i64*
  %383 = lshr i64 %377, 2
  %384 = shl i64 %377, 3
  %385 = tail call i8* @_Znwm(i64 %384) #16
  %386 = bitcast i8* %385 to i32**
  %387 = ptrtoint i8* %385 to i64
  %388 = getelementptr inbounds i32*, i32** %386, i64 %383
  %389 = ptrtoint i32** %388 to i64
  %390 = getelementptr inbounds i32*, i32** %386, i64 %377
  %391 = ptrtoint i32** %390 to i64
  store i64 %387, i64* %381, align 8
  %392 = bitcast i32*** %339 to i64*
  store i64 %389, i64* %392, align 8
  %393 = bitcast i32*** %340 to i64*
  store i64 %389, i64* %393, align 8
  store i64 %391, i64* %382, align 8
  tail call void @_ZdlPv(i8* nonnull %353) #16
  %394 = load i32**, i32*** %164, align 8
  %395 = load i32**, i32*** %167, align 8
  %396 = ptrtoint i32** %395 to i64
  %397 = ptrtoint i32** %394 to i64
  br label %398

398:                                              ; preds = %351, %366, %380
  %399 = phi i64 [ %391, %380 ], [ %361, %366 ], [ %361, %351 ]
  %400 = phi i64 [ %397, %380 ], [ %166, %366 ], [ %166, %351 ]
  %401 = phi i64 [ %389, %380 ], [ %372, %366 ], [ %363, %351 ]
  %402 = phi i64 [ %396, %380 ], [ %169, %366 ], [ %169, %351 ]
  %403 = phi i64 [ %387, %380 ], [ %362, %366 ], [ %362, %351 ]
  %404 = phi i32** [ %395, %380 ], [ %181, %366 ], [ %181, %351 ]
  %405 = phi i32** [ %394, %380 ], [ %180, %366 ], [ %180, %351 ]
  %406 = phi i32** [ %388, %380 ], [ %371, %366 ], [ %356, %351 ]
  %407 = bitcast i32** %406 to i64*
  store i64 %359, i64* %407, align 8
  %408 = getelementptr inbounds i32*, i32** %406, i64 1
  store i32** %408, i32*** %340, align 8
  %409 = icmp eq i32** %405, %404
  br i1 %409, label %410, label %455

410:                                              ; preds = %398
  %411 = ptrtoint i32** %408 to i64
  %412 = bitcast %"struct.std::__1::__split_buffer.720"* %4 to i64*
  %413 = bitcast i32*** %339 to i64*
  %414 = bitcast i32*** %340 to i64*
  %415 = bitcast i32*** %341 to i64*
  br label %427

416:                                              ; preds = %455
  %417 = ptrtoint i32** %458 to i64
  %418 = bitcast %"struct.std::__1::__split_buffer.720"* %4 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast i32*** %339 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = load i64, i64* %165, align 8
  %423 = bitcast i32*** %340 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast i32*** %341 to i64*
  %426 = load i64, i64* %425, align 8
  br label %427

427:                                              ; preds = %410, %416
  %428 = phi i64* [ %415, %410 ], [ %425, %416 ]
  %429 = phi i64* [ %414, %410 ], [ %423, %416 ]
  %430 = phi i64* [ %413, %410 ], [ %420, %416 ]
  %431 = phi i64* [ %412, %410 ], [ %418, %416 ]
  %432 = phi i64 [ %399, %410 ], [ %426, %416 ]
  %433 = phi i64 [ %411, %410 ], [ %424, %416 ]
  %434 = phi i64 [ %400, %410 ], [ %422, %416 ]
  %435 = phi i64 [ %401, %410 ], [ %421, %416 ]
  %436 = phi i64 [ %402, %410 ], [ %417, %416 ]
  %437 = phi i64 [ %403, %410 ], [ %419, %416 ]
  %438 = load i64, i64* %175, align 8
  store i64 %437, i64* %175, align 8
  store i64 %438, i64* %431, align 8
  store i64 %435, i64* %168, align 8
  store i64 %436, i64* %430, align 8
  store i64 %433, i64* %165, align 8
  store i64 %434, i64* %429, align 8
  %439 = load i64, i64* %173, align 8
  store i64 %432, i64* %173, align 8
  store i64 %439, i64* %428, align 8
  %440 = inttoptr i64 %436 to i32**
  %441 = inttoptr i64 %434 to i32**
  %442 = icmp eq i32** %441, %440
  br i1 %442, label %450, label %443

443:                                              ; preds = %427
  %444 = getelementptr i32*, i32** %441, i64 -1
  %445 = ptrtoint i32** %444 to i64
  %446 = sub i64 %445, %436
  %447 = lshr i64 %446, 3
  %448 = xor i64 %447, -1
  %449 = getelementptr i32*, i32** %441, i64 %448
  store i32** %449, i32*** %340, align 8
  br label %450

450:                                              ; preds = %443, %427
  %451 = icmp eq i64 %438, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450
  %453 = inttoptr i64 %438 to i8*
  call void @_ZdlPv(i8* %453) #16
  br label %454

454:                                              ; preds = %450, %452
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #14
  br label %460

455:                                              ; preds = %398, %455
  %456 = phi i32** [ %457, %455 ], [ %405, %398 ]
  %457 = getelementptr inbounds i32*, i32** %456, i64 -1
  call void @_ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEE10push_frontERKS1_(%"struct.std::__1::__split_buffer.720"* nonnull %4, i32** dereferenceable(8) %457)
  %458 = load i32**, i32*** %167, align 8
  %459 = icmp eq i32** %457, %458
  br i1 %459, label %416, label %455

460:                                              ; preds = %454, %333, %184, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEE9push_backEOS1_(%"struct.std::__1::__split_buffer"*, i32** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load i32**, i32*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load i32**, i32*** %5, align 8
  %7 = icmp eq i32** %4, %6
  %8 = ptrtoint i32** %6 to i64
  %9 = bitcast i32** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load i32**, i32*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load i32**, i32*** %13, align 8
  %15 = icmp ugt i32** %12, %14
  %16 = ptrtoint i32** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint i32** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds i32*, i32** %12, i64 %22
  %24 = ptrtoint i32** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast i32** %23 to i8*
  %30 = bitcast i32** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #14
  %31 = load i32**, i32*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi i32** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds i32*, i32** %23, i64 %26
  store i32** %34, i32*** %3, align 8
  %35 = getelementptr inbounds i32*, i32** %33, i64 %22
  store i32** %35, i32*** %11, align 8
  %36 = bitcast i32** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast i32*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #15
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #16
  %50 = bitcast i8* %49 to i32**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds i32*, i32** %50, i64 %47
  %53 = ptrtoint i32** %52 to i64
  %54 = getelementptr inbounds i32*, i32** %50, i64 %43
  %55 = ptrtoint i32** %54 to i64
  %56 = ptrtoint i32** %12 to i64
  %57 = ptrtoint i32** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds i32*, i32** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi i32** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi i32** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast i32** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds i32*, i32** %69, i64 1
  %77 = ptrtoint i32** %76 to i64
  %78 = getelementptr inbounds i32*, i32** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !201

81:                                               ; preds = %68
  %82 = ptrtoint i32** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi i32** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi i32** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi i32** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi i32** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast i32** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds i32*, i32** %89, i64 1
  %96 = getelementptr inbounds i32*, i32** %91, i64 1
  %97 = bitcast i32** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast i32** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds i32*, i32** %89, i64 2
  %101 = getelementptr inbounds i32*, i32** %91, i64 2
  %102 = bitcast i32** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast i32** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds i32*, i32** %89, i64 3
  %106 = getelementptr inbounds i32*, i32** %91, i64 3
  %107 = bitcast i32** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast i32** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds i32*, i32** %89, i64 4
  %111 = getelementptr inbounds i32*, i32** %91, i64 4
  %112 = bitcast i32** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast i32** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds i32*, i32** %89, i64 5
  %116 = getelementptr inbounds i32*, i32** %91, i64 5
  %117 = bitcast i32** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast i32** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds i32*, i32** %89, i64 6
  %121 = getelementptr inbounds i32*, i32** %91, i64 6
  %122 = bitcast i32** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast i32** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds i32*, i32** %89, i64 7
  %126 = getelementptr inbounds i32*, i32** %91, i64 7
  %127 = bitcast i32** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast i32** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds i32*, i32** %89, i64 8
  %131 = ptrtoint i32** %130 to i64
  %132 = getelementptr inbounds i32*, i32** %91, i64 8
  %133 = icmp eq i32** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint i32** %60 to i64
  %136 = load i32**, i32*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi i32** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast i32*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast i32*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq i32** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast i32** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #16
  %146 = bitcast i32*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast i32** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load i32**, i32*** %3, align 8
  %153 = getelementptr inbounds i32*, i32** %152, i64 1
  store i32** %153, i32*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEE10push_frontEOS1_(%"struct.std::__1::__split_buffer"*, i32** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load i32**, i32*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load i32**, i32*** %5, align 8
  %7 = icmp eq i32** %4, %6
  %8 = ptrtoint i32** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load i32**, i32*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load i32**, i32*** %12, align 8
  %14 = icmp ult i32** %11, %13
  %15 = bitcast i32*** %12 to i64*
  %16 = ptrtoint i32** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint i32** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds i32*, i32** %11, i64 %22
  %24 = ptrtoint i32** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds i32*, i32** %23, i64 %29
  %31 = bitcast i32** %30 to i8*
  %32 = bitcast i32** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #14
  %33 = load i32**, i32*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi i32** [ %33, %27 ], [ %11, %17 ]
  %36 = phi i32** [ %30, %27 ], [ %23, %17 ]
  store i32** %36, i32*** %3, align 8
  %37 = getelementptr inbounds i32*, i32** %35, i64 %22
  store i32** %37, i32*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #15
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #16
  %51 = bitcast i8* %50 to i32**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds i32*, i32** %51, i64 %48
  %54 = ptrtoint i32** %53 to i64
  %55 = getelementptr inbounds i32*, i32** %51, i64 %43
  %56 = ptrtoint i32** %55 to i64
  %57 = ptrtoint i32** %4 to i64
  %58 = ptrtoint i32** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds i32*, i32** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi i32** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi i32** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast i32** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds i32*, i32** %70, i64 1
  %78 = ptrtoint i32** %77 to i64
  %79 = getelementptr inbounds i32*, i32** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !202

82:                                               ; preds = %69
  %83 = ptrtoint i32** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi i32** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi i32** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi i32** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi i32** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast i32** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds i32*, i32** %90, i64 1
  %97 = getelementptr inbounds i32*, i32** %92, i64 1
  %98 = bitcast i32** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast i32** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds i32*, i32** %90, i64 2
  %102 = getelementptr inbounds i32*, i32** %92, i64 2
  %103 = bitcast i32** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast i32** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds i32*, i32** %90, i64 3
  %107 = getelementptr inbounds i32*, i32** %92, i64 3
  %108 = bitcast i32** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast i32** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds i32*, i32** %90, i64 4
  %112 = getelementptr inbounds i32*, i32** %92, i64 4
  %113 = bitcast i32** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast i32** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds i32*, i32** %90, i64 5
  %117 = getelementptr inbounds i32*, i32** %92, i64 5
  %118 = bitcast i32** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast i32** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds i32*, i32** %90, i64 6
  %122 = getelementptr inbounds i32*, i32** %92, i64 6
  %123 = bitcast i32** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast i32** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds i32*, i32** %90, i64 7
  %127 = getelementptr inbounds i32*, i32** %92, i64 7
  %128 = bitcast i32** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast i32** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds i32*, i32** %90, i64 8
  %132 = ptrtoint i32** %131 to i64
  %133 = getelementptr inbounds i32*, i32** %92, i64 8
  %134 = icmp eq i32** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint i32** %61 to i64
  %137 = load i32**, i32*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi i32** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast i32*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast i32*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq i32** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast i32** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #16
  %146 = load i32**, i32*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi i32** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds i32*, i32** %148, i64 -1
  %150 = bitcast i32** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i32** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load i32**, i32*** %3, align 8
  %154 = getelementptr inbounds i32*, i32** %153, i64 -1
  store i32** %154, i32*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEE10push_frontERKS1_(%"struct.std::__1::__split_buffer.720"*, i32** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.720", %"struct.std::__1::__split_buffer.720"* %0, i64 0, i32 1
  %4 = load i32**, i32*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.720", %"struct.std::__1::__split_buffer.720"* %0, i64 0, i32 0
  %6 = load i32**, i32*** %5, align 8
  %7 = icmp eq i32** %4, %6
  %8 = ptrtoint i32** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.720", %"struct.std::__1::__split_buffer.720"* %0, i64 0, i32 2
  %11 = load i32**, i32*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.720", %"struct.std::__1::__split_buffer.720"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load i32**, i32*** %12, align 8
  %14 = icmp ult i32** %11, %13
  %15 = bitcast i32*** %12 to i64*
  %16 = ptrtoint i32** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint i32** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds i32*, i32** %11, i64 %22
  %24 = ptrtoint i32** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds i32*, i32** %23, i64 %29
  %31 = bitcast i32** %30 to i8*
  %32 = bitcast i32** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #14
  %33 = load i32**, i32*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi i32** [ %33, %27 ], [ %11, %17 ]
  %36 = phi i32** [ %30, %27 ], [ %23, %17 ]
  store i32** %36, i32*** %3, align 8
  %37 = getelementptr inbounds i32*, i32** %35, i64 %22
  store i32** %37, i32*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.720"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #15
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #16
  %51 = bitcast i8* %50 to i32**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds i32*, i32** %51, i64 %48
  %54 = ptrtoint i32** %53 to i64
  %55 = getelementptr inbounds i32*, i32** %51, i64 %43
  %56 = ptrtoint i32** %55 to i64
  %57 = ptrtoint i32** %4 to i64
  %58 = ptrtoint i32** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds i32*, i32** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi i32** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi i32** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast i32** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds i32*, i32** %70, i64 1
  %78 = ptrtoint i32** %77 to i64
  %79 = getelementptr inbounds i32*, i32** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !203

82:                                               ; preds = %69
  %83 = ptrtoint i32** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi i32** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi i32** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi i32** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi i32** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast i32** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds i32*, i32** %90, i64 1
  %97 = getelementptr inbounds i32*, i32** %92, i64 1
  %98 = bitcast i32** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast i32** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds i32*, i32** %90, i64 2
  %102 = getelementptr inbounds i32*, i32** %92, i64 2
  %103 = bitcast i32** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast i32** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds i32*, i32** %90, i64 3
  %107 = getelementptr inbounds i32*, i32** %92, i64 3
  %108 = bitcast i32** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast i32** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds i32*, i32** %90, i64 4
  %112 = getelementptr inbounds i32*, i32** %92, i64 4
  %113 = bitcast i32** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast i32** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds i32*, i32** %90, i64 5
  %117 = getelementptr inbounds i32*, i32** %92, i64 5
  %118 = bitcast i32** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast i32** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds i32*, i32** %90, i64 6
  %122 = getelementptr inbounds i32*, i32** %92, i64 6
  %123 = bitcast i32** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast i32** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds i32*, i32** %90, i64 7
  %127 = getelementptr inbounds i32*, i32** %92, i64 7
  %128 = bitcast i32** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast i32** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds i32*, i32** %90, i64 8
  %132 = ptrtoint i32** %131 to i64
  %133 = getelementptr inbounds i32*, i32** %92, i64 8
  %134 = icmp eq i32** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint i32** %61 to i64
  %137 = load i32**, i32*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi i32** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast i32*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast i32*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq i32** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast i32** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #16
  %146 = load i32**, i32*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi i32** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds i32*, i32** %148, i64 -1
  %150 = bitcast i32** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i32** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load i32**, i32*** %3, align 8
  %154 = getelementptr inbounds i32*, i32** %153, i64 -1
  store i32** %154, i32*** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN4SkSL17VariableReferenceC1EiPKNS_8VariableENS_15VariableRefKindE(%"class.SkSL::VariableReference"*, i32, %"class.SkSL::Variable"*, i8 signext) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL25SingleArgumentConstructorD2Ev(%"class.SkSL::SingleArgumentConstructor"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::SingleArgumentConstructor", %"class.SkSL::SingleArgumentConstructor"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN4SkSL25SingleArgumentConstructorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::SingleArgumentConstructor", %"class.SkSL::SingleArgumentConstructor"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %3, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %3, align 8
  %5 = icmp eq %"class.SkSL::Expression"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.SkSL::Expression"* %4 to void (%"class.SkSL::Expression"*)***
  %8 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %8, i64 1
  %10 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %9, align 8
  tail call void %10(%"class.SkSL::Expression"* nonnull %4) #14
  br label %11

11:                                               ; preds = %1, %6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN4SkSL14AnyConstructorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %12 = getelementptr inbounds %"class.SkSL::SingleArgumentConstructor", %"class.SkSL::SingleArgumentConstructor"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %12, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %12, align 8
  %14 = icmp eq %"class.SkSL::Expression"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.SkSL::Expression"* %13 to void (%"class.SkSL::Expression"*)***
  %17 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %17, i64 1
  %19 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %18, align 8
  tail call void %19(%"class.SkSL::Expression"* nonnull %13) #14
  br label %20

20:                                               ; preds = %11, %15
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL16ConstructorSplatD0Ev(%"class.SkSL::ConstructorSplat"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::ConstructorSplat", %"class.SkSL::ConstructorSplat"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN4SkSL25SingleArgumentConstructorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::ConstructorSplat", %"class.SkSL::ConstructorSplat"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %3, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %3, align 8
  %5 = icmp eq %"class.SkSL::Expression"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.SkSL::Expression"* %4 to void (%"class.SkSL::Expression"*)***
  %8 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %8, i64 1
  %10 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %9, align 8
  tail call void %10(%"class.SkSL::Expression"* nonnull %4) #14
  br label %11

11:                                               ; preds = %6, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN4SkSL14AnyConstructorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %12 = getelementptr inbounds %"class.SkSL::ConstructorSplat", %"class.SkSL::ConstructorSplat"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %12, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %12, align 8
  %14 = icmp eq %"class.SkSL::Expression"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.SkSL::Expression"* %13 to void (%"class.SkSL::Expression"*)***
  %17 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %17, i64 1
  %19 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %18, align 8
  tail call void %19(%"class.SkSL::Expression"* nonnull %13) #14
  br label %20

20:                                               ; preds = %11, %15
  %21 = bitcast %"class.SkSL::ConstructorSplat"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %21) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL16ConstructorSplat24getConstantSubexpressionEi(%"class.SkSL::ConstructorSplat"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::ConstructorSplat", %"class.SkSL::ConstructorSplat"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %3, align 8
  %5 = bitcast %"class.SkSL::Expression"* %4 to %"class.SkSL::Expression"* (%"class.SkSL::Expression"*, i32)***
  %6 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*, i32)**, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*, i32)*** %5, align 8
  %7 = getelementptr inbounds %"class.SkSL::Expression"* (%"class.SkSL::Expression"*, i32)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*, i32)** %6, i64 9
  %8 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*, i32)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*, i32)** %7, align 8
  %9 = tail call %"class.SkSL::Expression"* %8(%"class.SkSL::Expression"* %4, i32 0) #14
  ret %"class.SkSL::Expression"* %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL16ConstructorSplat5cloneEv(%"class.SkSL::ConstructorSplat"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::ConstructorSplat", %"class.SkSL::ConstructorSplat"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds %"class.SkSL::ConstructorSplat", %"class.SkSL::ConstructorSplat"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %4 = bitcast %"class.SkSL::Type"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::ConstructorSplat", %"class.SkSL::ConstructorSplat"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %6, align 8
  %8 = bitcast %"class.SkSL::Expression"* %7 to %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)***
  %9 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %9, i64 10
  %11 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %10, align 8
  %12 = tail call %"class.SkSL::Expression"* %11(%"class.SkSL::Expression"* %7) #14
  %13 = ptrtoint %"class.SkSL::Expression"* %12 to i64
  %14 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 40) #14
  %15 = load i32, i32* %2, align 4
  %16 = bitcast i8* %14 to i32 (...)***
  %17 = getelementptr inbounds i8, i8* %14, i64 8
  %18 = bitcast i8* %17 to i32*
  store i32 %15, i32* %18, align 8
  %19 = getelementptr inbounds i8, i8* %14, i64 12
  %20 = bitcast i8* %19 to i32*
  store i32 39, i32* %20, align 4
  %21 = getelementptr inbounds i8, i8* %14, i64 16
  %22 = bitcast i8* %21 to i64*
  store i64 %5, i64* %22, align 8
  %23 = getelementptr inbounds i8, i8* %14, i64 24
  %24 = bitcast i8* %23 to i64*
  store i64 0, i64* %24, align 8
  %25 = getelementptr inbounds i8, i8* %14, i64 32
  %26 = bitcast i8* %25 to i64*
  store i64 %13, i64* %26, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN4SkSL16ConstructorSplatE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %27 = bitcast i8* %14 to %"class.SkSL::Expression"*
  ret %"class.SkSL::Expression"* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::unique_ptr.336"*, i64 } @_ZN4SkSL25SingleArgumentConstructor12argumentSpanEv(%"class.SkSL::SingleArgumentConstructor"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::SingleArgumentConstructor", %"class.SkSL::SingleArgumentConstructor"* %0, i64 0, i32 1
  %3 = insertvalue { %"class.std::__1::unique_ptr.336"*, i64 } undef, %"class.std::__1::unique_ptr.336"* %2, 0
  %4 = insertvalue { %"class.std::__1::unique_ptr.336"*, i64 } %3, i64 1, 1
  ret { %"class.std::__1::unique_ptr.336"*, i64 } %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::unique_ptr.336"*, i64 } @_ZNK4SkSL25SingleArgumentConstructor12argumentSpanEv(%"class.SkSL::SingleArgumentConstructor"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::SingleArgumentConstructor", %"class.SkSL::SingleArgumentConstructor"* %0, i64 0, i32 1
  %3 = insertvalue { %"class.std::__1::unique_ptr.336"*, i64 } undef, %"class.std::__1::unique_ptr.336"* %2, 0
  %4 = insertvalue { %"class.std::__1::unique_ptr.336"*, i64 } %3, i64 1, 1
  ret { %"class.std::__1::unique_ptr.336"*, i64 } %4
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL25SingleArgumentConstructorD0Ev(%"class.SkSL::SingleArgumentConstructor"*) unnamed_addr #5 comdat align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL19ExpressionStatementD2Ev(%"class.SkSL::ExpressionStatement"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::ExpressionStatement", %"class.SkSL::ExpressionStatement"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL19ExpressionStatementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::ExpressionStatement", %"class.SkSL::ExpressionStatement"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %3, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %3, align 8
  %5 = icmp eq %"class.SkSL::Expression"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.SkSL::Expression"* %4 to void (%"class.SkSL::Expression"*)***
  %8 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %8, i64 1
  %10 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %9, align 8
  tail call void %10(%"class.SkSL::Expression"* nonnull %4) #14
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL19ExpressionStatementD0Ev(%"class.SkSL::ExpressionStatement"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::ExpressionStatement", %"class.SkSL::ExpressionStatement"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL19ExpressionStatementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::ExpressionStatement", %"class.SkSL::ExpressionStatement"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %3, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %3, align 8
  %5 = icmp eq %"class.SkSL::Expression"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.SkSL::Expression"* %4 to void (%"class.SkSL::Expression"*)***
  %8 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %8, i64 1
  %10 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %9, align 8
  tail call void %10(%"class.SkSL::Expression"* nonnull %4) #14
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.SkSL::ExpressionStatement"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %12) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL19ExpressionStatement11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::ExpressionStatement"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #14
  %5 = getelementptr inbounds %"class.SkSL::ExpressionStatement", %"class.SkSL::ExpressionStatement"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %5, align 8
  %7 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %6, i64 0, i32 0
  %8 = bitcast %"class.SkSL::Expression"* %6 to void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)***
  %9 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)**, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %9, i64 2
  %11 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %10, align 8
  call void %11(%"class.SkSL::String"* nonnull sret %3, %"class.SkSL::IRNode"* %7) #14
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* sret %0, %"class.SkSL::String"* nonnull %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i64 0, i64 0)) #14
  %12 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %18) #16
  br label %19

19:                                               ; preds = %2, %16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL9Statement7isEmptyEv(%"class.SkSL::Statement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Statement"* @_ZNK4SkSL19ExpressionStatement5cloneEv(%"class.SkSL::ExpressionStatement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::ExpressionStatement", %"class.SkSL::ExpressionStatement"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %2, align 8
  %4 = bitcast %"class.SkSL::Expression"* %3 to %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)***
  %5 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %5, i64 10
  %7 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %6, align 8
  %8 = tail call %"class.SkSL::Expression"* %7(%"class.SkSL::Expression"* %3) #14
  %9 = ptrtoint %"class.SkSL::Expression"* %8 to i64
  %10 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 24) #14
  %11 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %8, i64 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds i8, i8* %10, i64 8
  %14 = bitcast i8* %13 to i32*
  store i32 %12, i32* %14, align 8
  %15 = getelementptr inbounds i8, i8* %10, i64 12
  %16 = bitcast i8* %15 to i32*
  store i32 21, i32* %16, align 4
  %17 = bitcast i8* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL19ExpressionStatementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds i8, i8* %10, i64 16
  %19 = bitcast i8* %18 to i64*
  store i64 %9, i64* %19, align 8
  %20 = bitcast i8* %10 to %"class.SkSL::Statement"*
  ret %"class.SkSL::Statement"* %20
}

declare void @_ZN4SkSL19FunctionDeclarationC1EiPKNS_9ModifiersENS_14StringFragmentENSt3__16vectorIPKNS_8VariableENS5_9allocatorIS9_EEEEPKNS_4TypeEb(%"class.SkSL::FunctionDeclaration"*, i32, %"struct.SkSL::Modifiers"*, i8*, i64, %"class.std::__1::vector.422"*, %"class.SkSL::Type"*, i1 zeroext) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL18FunctionDefinitionD2Ev(%"class.SkSL::FunctionDefinition"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL18FunctionDefinitionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.398"*, %"struct.std::__1::__hash_node_base.398"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.398"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1, %6
  %7 = phi %"struct.std::__1::__hash_node_base.398"* [ %9, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.398", %"struct.std::__1::__hash_node_base.398"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.398"*, %"struct.std::__1::__hash_node_base.398"** %8, align 8
  %10 = bitcast %"struct.std::__1::__hash_node_base.398"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #16
  %11 = icmp eq %"struct.std::__1::__hash_node_base.398"* %9, null
  br i1 %11, label %12, label %6

12:                                               ; preds = %6, %1
  %13 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::__hash_node_base.398"**, %"struct.std::__1::__hash_node_base.398"*** %13, align 8
  store %"struct.std::__1::__hash_node_base.398"** null, %"struct.std::__1::__hash_node_base.398"*** %13, align 8
  %15 = icmp eq %"struct.std::__1::__hash_node_base.398"** %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = bitcast %"struct.std::__1::__hash_node_base.398"** %14 to i8*
  tail call void @_ZdlPv(i8* %17) #16
  br label %18

18:                                               ; preds = %12, %16
  %19 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %19, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %19, align 8
  %21 = icmp eq %"class.SkSL::Statement"* %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %18
  %23 = bitcast %"class.SkSL::Statement"* %20 to void (%"class.SkSL::Statement"*)***
  %24 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %24, i64 1
  %26 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %25, align 8
  tail call void %26(%"class.SkSL::Statement"* nonnull %20) #14
  br label %27

27:                                               ; preds = %18, %22
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL18FunctionDefinitionD0Ev(%"class.SkSL::FunctionDefinition"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL18FunctionDefinitionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.398"*, %"struct.std::__1::__hash_node_base.398"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.398"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1, %6
  %7 = phi %"struct.std::__1::__hash_node_base.398"* [ %9, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.398", %"struct.std::__1::__hash_node_base.398"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.398"*, %"struct.std::__1::__hash_node_base.398"** %8, align 8
  %10 = bitcast %"struct.std::__1::__hash_node_base.398"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #16
  %11 = icmp eq %"struct.std::__1::__hash_node_base.398"* %9, null
  br i1 %11, label %12, label %6

12:                                               ; preds = %6, %1
  %13 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::__hash_node_base.398"**, %"struct.std::__1::__hash_node_base.398"*** %13, align 8
  store %"struct.std::__1::__hash_node_base.398"** null, %"struct.std::__1::__hash_node_base.398"*** %13, align 8
  %15 = icmp eq %"struct.std::__1::__hash_node_base.398"** %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = bitcast %"struct.std::__1::__hash_node_base.398"** %14 to i8*
  tail call void @_ZdlPv(i8* %17) #16
  br label %18

18:                                               ; preds = %16, %12
  %19 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %19, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %19, align 8
  %21 = icmp eq %"class.SkSL::Statement"* %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %18
  %23 = bitcast %"class.SkSL::Statement"* %20 to void (%"class.SkSL::Statement"*)***
  %24 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %24, i64 1
  %26 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %25, align 8
  tail call void %26(%"class.SkSL::Statement"* nonnull %20) #14
  br label %27

27:                                               ; preds = %18, %22
  %28 = bitcast %"class.SkSL::FunctionDefinition"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %28) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL18FunctionDefinition11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::FunctionDefinition"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #14
  %7 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #14
  %8 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %1, i64 0, i32 1
  %9 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %8, align 8
  call void @_ZNK4SkSL19FunctionDeclaration11descriptionEv(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::FunctionDeclaration"* %9) #14
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %3, %"class.SkSL::String"* nonnull %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.45, i64 0, i64 0)) #14
  %10 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #14
  %11 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %12 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %11, align 8
  %13 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %12, i64 0, i32 0
  %14 = bitcast %"class.SkSL::Statement"* %12 to void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)***
  %15 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)**, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %15, i64 2
  %17 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %16, align 8
  call void %17(%"class.SkSL::String"* nonnull sret %5, %"class.SkSL::IRNode"* %13) #14
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* sret %0, %"class.SkSL::String"* nonnull %3, %"class.SkSL::String"* nonnull dereferenceable(24) %5) #14
  %18 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %24) #16
  br label %25

25:                                               ; preds = %2, %22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #14
  %26 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %32) #16
  br label %33

33:                                               ; preds = %25, %30
  %34 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  call void @_ZdlPv(i8* %40) #16
  br label %41

41:                                               ; preds = %33, %38
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::ProgramElement"* @_ZNK4SkSL18FunctionDefinition5cloneEv(%"class.SkSL::FunctionDefinition"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.SkSL::FunctionDeclaration"*, align 8
  %3 = alloca i8, align 1
  %4 = alloca %"class.std::__1::unique_ptr.387", align 8
  %5 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast %"class.SkSL::FunctionDeclaration"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %0, i64 0, i32 1
  %8 = bitcast %"class.SkSL::FunctionDeclaration"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.SkSL::FunctionDeclaration"** %2 to i64*
  store i64 %9, i64* %10, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #14
  store i8 0, i8* %3, align 1
  %11 = bitcast %"class.std::__1::unique_ptr.387"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #14
  %12 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %13 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %12, align 8
  %14 = bitcast %"class.SkSL::Statement"* %13 to %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)***
  %15 = load %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)**, %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)*** %14, align 8
  %16 = getelementptr inbounds %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)*, %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)** %15, i64 4
  %17 = load %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)*, %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)** %16, align 8
  %18 = tail call %"class.SkSL::Statement"* %17(%"class.SkSL::Statement"* %13) #14
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.387", %"class.std::__1::unique_ptr.387"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::Statement"* %18, %"class.SkSL::Statement"** %19, align 8
  %20 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %0, i64 0, i32 4
  %21 = call %"class.SkSL::FunctionDefinition"* @_ZNSt3__111make_uniqueIN4SkSL18FunctionDefinitionEJRKiPKNS1_19FunctionDeclarationEbNS_10unique_ptrINS1_9StatementENS_14default_deleteIS9_EEEERKNS_13unordered_setIS7_NS_4hashIS7_EENS_8equal_toIS7_EENS_9allocatorIS7_EEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(i32* dereferenceable(4) %5, %"class.SkSL::FunctionDeclaration"** nonnull dereferenceable(8) %2, i8* nonnull dereferenceable(1) %3, %"class.std::__1::unique_ptr.387"* nonnull dereferenceable(8) %4, %"class.std::__1::unordered_set.393"* dereferenceable(40) %20)
  %22 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %19, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %19, align 8
  %23 = icmp eq %"class.SkSL::Statement"* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %1
  %25 = bitcast %"class.SkSL::Statement"* %22 to void (%"class.SkSL::Statement"*)***
  %26 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %26, i64 1
  %28 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %27, align 8
  call void %28(%"class.SkSL::Statement"* nonnull %22) #14
  br label %29

29:                                               ; preds = %1, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  %30 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %21, i64 0, i32 0
  ret %"class.SkSL::ProgramElement"* %30
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::FunctionDefinition"* @_ZNSt3__111make_uniqueIN4SkSL18FunctionDefinitionEJRKiPKNS1_19FunctionDeclarationEbNS_10unique_ptrINS1_9StatementENS_14default_deleteIS9_EEEERKNS_13unordered_setIS7_NS_4hashIS7_EENS_8equal_toIS7_EENS_9allocatorIS7_EEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(i32* dereferenceable(4), %"class.SkSL::FunctionDeclaration"** dereferenceable(8), i8* dereferenceable(1), %"class.std::__1::unique_ptr.387"* dereferenceable(8), %"class.std::__1::unordered_set.393"* dereferenceable(40)) local_unnamed_addr #5 comdat {
  %6 = alloca %"class.std::__1::unordered_set.393", align 8
  %7 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 88) #14
  %8 = bitcast i8* %7 to %"class.SkSL::FunctionDefinition"*
  %9 = load i32, i32* %0, align 4
  %10 = bitcast %"class.SkSL::FunctionDeclaration"** %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = load i8, i8* %2, align 1, !range !2
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.387", %"class.std::__1::unique_ptr.387"* %3, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.std::__1::unique_ptr.387"* %3 to i64*
  %15 = load i64, i64* %14, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %13, align 8
  %16 = getelementptr inbounds %"class.std::__1::unordered_set.393", %"class.std::__1::unordered_set.393"* %6, i64 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::unordered_set.393", %"class.std::__1::unordered_set.393"* %6, i64 0, i32 0, i32 3
  %18 = getelementptr inbounds %"class.std::__1::unordered_set.393", %"class.std::__1::unordered_set.393"* %4, i64 0, i32 0, i32 3
  %19 = bitcast %"class.std::__1::__compressed_pair.412"* %18 to i32*
  %20 = bitcast %"class.std::__1::__compressed_pair.412"* %17 to i32*
  %21 = bitcast %"class.std::__1::unordered_set.393"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 32, i1 false) #14
  %22 = load i32, i32* %19, align 8
  store i32 %22, i32* %20, align 8
  %23 = getelementptr inbounds %"class.std::__1::unordered_set.393", %"class.std::__1::unordered_set.393"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  call void @_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table.394"* nonnull %16, i64 %24) #14
  %25 = getelementptr inbounds %"class.std::__1::unordered_set.393", %"class.std::__1::unordered_set.393"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.398"*, %"struct.std::__1::__hash_node_base.398"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.398"* %26, null
  br i1 %27, label %38, label %28

28:                                               ; preds = %5
  %29 = ptrtoint %"struct.std::__1::__hash_node_base.398"* %26 to i64
  br label %30

30:                                               ; preds = %30, %28
  %31 = phi i64 [ %29, %28 ], [ %36, %30 ]
  %32 = inttoptr i64 %31 to %"struct.std::__1::__hash_node.726"*
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node.726", %"struct.std::__1::__hash_node.726"* %32, i64 0, i32 2
  %34 = call { %"struct.std::__1::__hash_node_base.398"*, i8 } @_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.394"* nonnull %16, %"class.SkSL::FunctionDeclaration"** dereferenceable(8) %33, %"class.SkSL::FunctionDeclaration"** dereferenceable(8) %33) #14
  %35 = inttoptr i64 %31 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %38, label %30

38:                                               ; preds = %30, %5
  %39 = getelementptr inbounds i8, i8* %7, i64 8
  %40 = bitcast i8* %39 to i32*
  store i32 %9, i32* %40, align 8
  %41 = getelementptr inbounds i8, i8* %7, i64 12
  %42 = bitcast i8* %41 to i32*
  store i32 2, i32* %42, align 4
  %43 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL18FunctionDefinitionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %44 = getelementptr inbounds i8, i8* %7, i64 16
  %45 = bitcast i8* %44 to i64*
  store i64 %11, i64* %45, align 8
  %46 = getelementptr inbounds i8, i8* %7, i64 24
  store i8 %12, i8* %46, align 8
  %47 = getelementptr inbounds i8, i8* %7, i64 32
  %48 = bitcast i8* %47 to i64*
  store i64 %15, i64* %48, align 8
  %49 = getelementptr inbounds i8, i8* %7, i64 40
  %50 = getelementptr inbounds %"class.std::__1::unordered_set.393", %"class.std::__1::unordered_set.393"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unordered_set.393"* %6 to i64*
  %52 = load i64, i64* %51, align 8
  store %"struct.std::__1::__hash_node_base.398"** null, %"struct.std::__1::__hash_node_base.398"*** %50, align 8
  %53 = bitcast i8* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = getelementptr inbounds %"class.std::__1::unordered_set.393", %"class.std::__1::unordered_set.393"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %55 = getelementptr inbounds i8, i8* %7, i64 48
  %56 = bitcast i8* %55 to i64*
  %57 = load i64, i64* %54, align 8
  store i64 %57, i64* %56, align 8
  store i64 0, i64* %54, align 8
  %58 = getelementptr inbounds i8, i8* %7, i64 56
  %59 = getelementptr inbounds %"class.std::__1::unordered_set.393", %"class.std::__1::unordered_set.393"* %6, i64 0, i32 0, i32 1
  %60 = bitcast %"class.std::__1::__compressed_pair.405"* %59 to i64*
  %61 = bitcast i8* %58 to i64*
  %62 = load i64, i64* %60, align 8
  store i64 %62, i64* %61, align 8
  %63 = getelementptr inbounds %"class.std::__1::unordered_set.393", %"class.std::__1::unordered_set.393"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %64 = getelementptr inbounds i8, i8* %7, i64 64
  %65 = bitcast i8* %64 to i64*
  %66 = load i64, i64* %63, align 8
  store i64 %66, i64* %65, align 8
  %67 = getelementptr inbounds i8, i8* %7, i64 72
  %68 = bitcast i8* %67 to i32*
  %69 = load i32, i32* %20, align 8
  store i32 %69, i32* %68, align 8
  %70 = icmp eq i64 %66, 0
  %71 = inttoptr i64 %52 to %"struct.std::__1::__hash_node_base.398"**
  %72 = inttoptr i64 %62 to %"struct.std::__1::__hash_node_base.398"*
  br i1 %70, label %93, label %73

73:                                               ; preds = %38
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.398", %"struct.std::__1::__hash_node_base.398"* %72, i64 1
  %75 = bitcast %"struct.std::__1::__hash_node_base.398"* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = call i64 @llvm.ctpop.i64(i64 %57) #14, !range !12
  %78 = icmp ugt i64 %77, 1
  br i1 %78, label %82, label %79

79:                                               ; preds = %73
  %80 = add i64 %57, -1
  %81 = and i64 %76, %80
  br label %86

82:                                               ; preds = %73
  %83 = icmp ult i64 %76, %57
  br i1 %83, label %86, label %84

84:                                               ; preds = %82
  %85 = urem i64 %76, %57
  br label %86

86:                                               ; preds = %79, %82, %84
  %87 = phi i64 [ %81, %79 ], [ %85, %84 ], [ %76, %82 ]
  %88 = getelementptr inbounds %"struct.std::__1::__hash_node_base.398"*, %"struct.std::__1::__hash_node_base.398"** %71, i64 %87
  %89 = bitcast %"struct.std::__1::__hash_node_base.398"** %88 to i8**
  store i8* %58, i8** %89, align 8
  %90 = bitcast %"class.std::__1::__compressed_pair.405"* %59 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %90, i8 0, i64 16, i1 false) #14
  %91 = getelementptr inbounds i8, i8* %7, i64 80
  %92 = bitcast i8* %91 to %"struct.SkSL::ASTNode"**
  store %"struct.SkSL::ASTNode"* null, %"struct.SkSL::ASTNode"** %92, align 8
  br label %103

93:                                               ; preds = %38
  %94 = getelementptr inbounds i8, i8* %7, i64 80
  %95 = bitcast i8* %94 to %"struct.SkSL::ASTNode"**
  store %"struct.SkSL::ASTNode"* null, %"struct.SkSL::ASTNode"** %95, align 8
  %96 = icmp eq i64 %62, 0
  br i1 %96, label %103, label %97

97:                                               ; preds = %93, %97
  %98 = phi %"struct.std::__1::__hash_node_base.398"* [ %100, %97 ], [ %72, %93 ]
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base.398", %"struct.std::__1::__hash_node_base.398"* %98, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base.398"*, %"struct.std::__1::__hash_node_base.398"** %99, align 8
  %101 = bitcast %"struct.std::__1::__hash_node_base.398"* %98 to i8*
  call void @_ZdlPv(i8* %101) #16
  %102 = icmp eq %"struct.std::__1::__hash_node_base.398"* %100, null
  br i1 %102, label %103, label %97

103:                                              ; preds = %97, %86, %93
  %104 = load %"struct.std::__1::__hash_node_base.398"**, %"struct.std::__1::__hash_node_base.398"*** %50, align 8
  store %"struct.std::__1::__hash_node_base.398"** null, %"struct.std::__1::__hash_node_base.398"*** %50, align 8
  %105 = icmp eq %"struct.std::__1::__hash_node_base.398"** %104, null
  br i1 %105, label %108, label %106

106:                                              ; preds = %103
  %107 = bitcast %"struct.std::__1::__hash_node_base.398"** %104 to i8*
  call void @_ZdlPv(i8* %107) #16
  br label %108

108:                                              ; preds = %103, %106
  ret %"class.SkSL::FunctionDefinition"* %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table.394"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !12
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #14
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.394", %"class.std::__1::__hash_table.394"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.394"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #14, !range !12
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.394", %"class.std::__1::__hash_table.394"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.394", %"class.std::__1::__hash_table.394"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #14
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #14, !range !12
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #14
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.394"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.394"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.394", %"class.std::__1::__hash_table.394"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #15
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #16
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.394", %"class.std::__1::__hash_table.394"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.398"**, %"struct.std::__1::__hash_node_base.398"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.394"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.398"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.398"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #16
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.400", %"class.std::__1::__bucket_list_deallocator.400"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.398"**, %"struct.std::__1::__hash_node_base.398"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.398"*, %"struct.std::__1::__hash_node_base.398"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.398"* null, %"struct.std::__1::__hash_node_base.398"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !204

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.394", %"class.std::__1::__hash_table.394"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.398", %"struct.std::__1::__hash_node_base.398"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.398"*, %"struct.std::__1::__hash_node_base.398"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.398"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.398"**, %"struct.std::__1::__hash_node_base.398"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.398"*, %"struct.std::__1::__hash_node_base.398"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.398"* null, %"struct.std::__1::__hash_node_base.398"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.398"**, %"struct.std::__1::__hash_node_base.398"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.398"*, %"struct.std::__1::__hash_node_base.398"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.398"* null, %"struct.std::__1::__hash_node_base.398"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.398"**, %"struct.std::__1::__hash_node_base.398"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.398"*, %"struct.std::__1::__hash_node_base.398"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.398"* null, %"struct.std::__1::__hash_node_base.398"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.398"**, %"struct.std::__1::__hash_node_base.398"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.398"*, %"struct.std::__1::__hash_node_base.398"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.398"* null, %"struct.std::__1::__hash_node_base.398"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.398", %"struct.std::__1::__hash_node_base.398"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.398"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #14, !range !12
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.398"**, %"struct.std::__1::__hash_node_base.398"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.398"*, %"struct.std::__1::__hash_node_base.398"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.398"* %36, %"struct.std::__1::__hash_node_base.398"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.398", %"struct.std::__1::__hash_node_base.398"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.398"*, %"struct.std::__1::__hash_node_base.398"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.398"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.398"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.398"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.398", %"struct.std::__1::__hash_node_base.398"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.398"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.398"**, %"struct.std::__1::__hash_node_base.398"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.398"*, %"struct.std::__1::__hash_node_base.398"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.398"*, %"struct.std::__1::__hash_node_base.398"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.398"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.398", %"struct.std::__1::__hash_node_base.398"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.398"* %101 to %"class.SkSL::FunctionDeclaration"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.398"* %82, %"struct.std::__1::__hash_node_base.398"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.398"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.398", %"struct.std::__1::__hash_node_base.398"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.398"*, %"struct.std::__1::__hash_node_base.398"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.398"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.398", %"struct.std::__1::__hash_node_base.398"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.398"* %110 to %"class.SkSL::FunctionDeclaration"**
  %112 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %102, align 8
  %113 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %111, align 8
  %114 = icmp eq %"class.SkSL::FunctionDeclaration"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.398"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.398"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.398"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.398"**, %"struct.std::__1::__hash_node_base.398"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.398"*, %"struct.std::__1::__hash_node_base.398"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.398"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.398"**, %"struct.std::__1::__hash_node_base.398"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.398"*, %"struct.std::__1::__hash_node_base.398"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.398"*, %"struct.std::__1::__hash_node_base.398"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.398", %"struct.std::__1::__hash_node_base.398"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.398"* %80, %"struct.std::__1::__hash_node_base.398"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.398"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.398", %"struct.std::__1::__hash_node_base.398"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.398"*, %"struct.std::__1::__hash_node_base.398"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.398"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.394", %"class.std::__1::__hash_table.394"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.398"**, %"struct.std::__1::__hash_node_base.398"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.398"** null, %"struct.std::__1::__hash_node_base.398"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.398"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.398"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #16
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.400", %"class.std::__1::__bucket_list_deallocator.400"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.398"*, i8 } @_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.394"*, %"class.SkSL::FunctionDeclaration"** dereferenceable(8), %"class.SkSL::FunctionDeclaration"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %1, align 8
  %5 = ptrtoint %"class.SkSL::FunctionDeclaration"* %4 to i64
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.std::__1::__hash_table.394", %"class.std::__1::__hash_table.394"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %66, label %22

22:                                               ; preds = %3
  %23 = tail call i64 @llvm.ctpop.i64(i64 %20) #14, !range !12
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %18, %26
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table.394", %"class.std::__1::__hash_table.394"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.398"**, %"struct.std::__1::__hash_node_base.398"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.398"*, %"struct.std::__1::__hash_node_base.398"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base.398"*, %"struct.std::__1::__hash_node_base.398"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.398"* %37, null
  br i1 %38, label %66, label %39

39:                                               ; preds = %32
  %40 = add i64 %20, -1
  br label %41

41:                                               ; preds = %39, %61
  %42 = phi %"struct.std::__1::__hash_node_base.398"* [ %44, %61 ], [ %37, %39 ]
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.398", %"struct.std::__1::__hash_node_base.398"* %42, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base.398"*, %"struct.std::__1::__hash_node_base.398"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base.398"* %44, null
  br i1 %45, label %66, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.398", %"struct.std::__1::__hash_node_base.398"* %44, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base.398"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %18
  br i1 %50, label %61, label %51

51:                                               ; preds = %46
  br i1 %24, label %54, label %52

52:                                               ; preds = %51
  %53 = and i64 %49, %40
  br label %58

54:                                               ; preds = %51
  %55 = icmp ult i64 %49, %20
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %49, %20
  br label %58

58:                                               ; preds = %52, %54, %56
  %59 = phi i64 [ %53, %52 ], [ %57, %56 ], [ %49, %54 ]
  %60 = icmp eq i64 %59, %33
  br i1 %60, label %61, label %66

61:                                               ; preds = %46, %58
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.398", %"struct.std::__1::__hash_node_base.398"* %44, i64 2
  %63 = bitcast %"struct.std::__1::__hash_node_base.398"* %62 to %"class.SkSL::FunctionDeclaration"**
  %64 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %63, align 8
  %65 = icmp eq %"class.SkSL::FunctionDeclaration"* %64, %4
  br i1 %65, label %154, label %41

66:                                               ; preds = %41, %58, %32, %3
  %67 = phi i64 [ %33, %32 ], [ -6148914691236517206, %3 ], [ %33, %58 ], [ %33, %41 ]
  %68 = tail call i8* @_Znwm(i64 24) #16, !noalias !205
  %69 = getelementptr inbounds i8, i8* %68, i64 16
  %70 = bitcast %"class.SkSL::FunctionDeclaration"** %2 to i64*
  %71 = load i64, i64* %70, align 8, !noalias !205
  %72 = bitcast i8* %69 to i64*
  store i64 %71, i64* %72, align 8, !noalias !205
  %73 = getelementptr inbounds i8, i8* %68, i64 8
  %74 = bitcast i8* %73 to i64*
  store i64 %18, i64* %74, align 8, !noalias !205
  %75 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.398"**
  store %"struct.std::__1::__hash_node_base.398"* null, %"struct.std::__1::__hash_node_base.398"** %75, align 8, !noalias !205
  %76 = getelementptr inbounds %"class.std::__1::__hash_table.394", %"class.std::__1::__hash_table.394"* %0, i64 0, i32 2, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 1
  %79 = uitofp i64 %78 to float
  %80 = uitofp i64 %20 to float
  %81 = getelementptr inbounds %"class.std::__1::__hash_table.394", %"class.std::__1::__hash_table.394"* %0, i64 0, i32 3, i32 0, i32 0
  %82 = load float, float* %81, align 4
  %83 = fmul float %82, %80
  %84 = fcmp olt float %83, %79
  %85 = or i1 %21, %84
  br i1 %85, label %86, label %109

86:                                               ; preds = %66
  %87 = shl i64 %20, 1
  %88 = icmp ult i64 %20, 3
  %89 = tail call i64 @llvm.ctpop.i64(i64 %20) #14, !range !12
  %90 = icmp ugt i64 %89, 1
  %91 = or i1 %88, %90
  %92 = zext i1 %91 to i64
  %93 = or i64 %87, %92
  %94 = fdiv float %79, %82
  %95 = tail call float @llvm.ceil.f32(float %94) #14
  %96 = fptoui float %95 to i64
  %97 = icmp ult i64 %93, %96
  %98 = select i1 %97, i64 %96, i64 %93
  tail call void @_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table.394"* %0, i64 %98)
  %99 = load i64, i64* %19, align 8
  %100 = tail call i64 @llvm.ctpop.i64(i64 %99) #14, !range !12
  %101 = icmp ugt i64 %100, 1
  br i1 %101, label %105, label %102

102:                                              ; preds = %86
  %103 = add i64 %99, -1
  %104 = and i64 %103, %18
  br label %109

105:                                              ; preds = %86
  %106 = icmp ult i64 %18, %99
  br i1 %106, label %109, label %107

107:                                              ; preds = %105
  %108 = urem i64 %18, %99
  br label %109

109:                                              ; preds = %107, %105, %102, %66
  %110 = phi i64 [ %20, %66 ], [ %99, %102 ], [ %99, %105 ], [ %99, %107 ]
  %111 = phi i64 [ %67, %66 ], [ %104, %102 ], [ %18, %105 ], [ %108, %107 ]
  %112 = getelementptr inbounds %"class.std::__1::__hash_table.394", %"class.std::__1::__hash_table.394"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load %"struct.std::__1::__hash_node_base.398"**, %"struct.std::__1::__hash_node_base.398"*** %112, align 8
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base.398"*, %"struct.std::__1::__hash_node_base.398"** %113, i64 %111
  %115 = load %"struct.std::__1::__hash_node_base.398"*, %"struct.std::__1::__hash_node_base.398"** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.398"* %115, null
  br i1 %116, label %117, label %143

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.394", %"class.std::__1::__hash_table.394"* %0, i64 0, i32 1, i32 0, i32 0
  %119 = bitcast %"struct.std::__1::__hash_node_base.398"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast i8* %68 to i64*
  store i64 %120, i64* %121, align 8
  %122 = bitcast %"struct.std::__1::__hash_node_base.398"* %118 to i8**
  store i8* %68, i8** %122, align 8
  store %"struct.std::__1::__hash_node_base.398"* %118, %"struct.std::__1::__hash_node_base.398"** %114, align 8
  %123 = load %"struct.std::__1::__hash_node_base.398"*, %"struct.std::__1::__hash_node_base.398"** %75, align 8
  %124 = icmp eq %"struct.std::__1::__hash_node_base.398"* %123, null
  br i1 %124, label %150, label %125

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.398", %"struct.std::__1::__hash_node_base.398"* %123, i64 1
  %127 = bitcast %"struct.std::__1::__hash_node_base.398"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = tail call i64 @llvm.ctpop.i64(i64 %110) #14, !range !12
  %130 = icmp ugt i64 %129, 1
  br i1 %130, label %134, label %131

131:                                              ; preds = %125
  %132 = add i64 %110, -1
  %133 = and i64 %128, %132
  br label %138

134:                                              ; preds = %125
  %135 = icmp ult i64 %128, %110
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = urem i64 %128, %110
  br label %138

138:                                              ; preds = %131, %134, %136
  %139 = phi i64 [ %133, %131 ], [ %137, %136 ], [ %128, %134 ]
  %140 = load %"struct.std::__1::__hash_node_base.398"**, %"struct.std::__1::__hash_node_base.398"*** %112, align 8
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base.398"*, %"struct.std::__1::__hash_node_base.398"** %140, i64 %139
  %142 = bitcast %"struct.std::__1::__hash_node_base.398"** %141 to i8**
  br label %148

143:                                              ; preds = %109
  %144 = bitcast %"struct.std::__1::__hash_node_base.398"* %115 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast i8* %68 to i64*
  store i64 %145, i64* %146, align 8
  %147 = bitcast %"struct.std::__1::__hash_node_base.398"* %115 to i8**
  br label %148

148:                                              ; preds = %138, %143
  %149 = phi i8** [ %147, %143 ], [ %142, %138 ]
  store i8* %68, i8** %149, align 8
  br label %150

150:                                              ; preds = %148, %117
  %151 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.398"*
  %152 = load i64, i64* %76, align 8
  %153 = add i64 %152, 1
  store i64 %153, i64* %76, align 8
  br label %154

154:                                              ; preds = %61, %150
  %155 = phi i8 [ 1, %150 ], [ 0, %61 ]
  %156 = phi %"struct.std::__1::__hash_node_base.398"* [ %151, %150 ], [ %44, %61 ]
  %157 = insertvalue { %"struct.std::__1::__hash_node_base.398"*, i8 } undef, %"struct.std::__1::__hash_node_base.398"* %156, 0
  %158 = insertvalue { %"struct.std::__1::__hash_node_base.398"*, i8 } %157, i8 %155, 1
  ret { %"struct.std::__1::__hash_node_base.398"*, i8 } %158
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.190"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !12
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #14
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.190", %"class.std::__1::__hash_table.190"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.190"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #14, !range !12
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.190", %"class.std::__1::__hash_table.190"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.190", %"class.std::__1::__hash_table.190"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #14
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #14, !range !12
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #14
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.190"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.190"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.190", %"class.std::__1::__hash_table.190"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #15
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #16
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.190", %"class.std::__1::__hash_table.190"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.194"**, %"struct.std::__1::__hash_node_base.194"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.190"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.194"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.194"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #16
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.196", %"class.std::__1::__bucket_list_deallocator.196"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.194"**, %"struct.std::__1::__hash_node_base.194"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.194"*, %"struct.std::__1::__hash_node_base.194"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.194"* null, %"struct.std::__1::__hash_node_base.194"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !208

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.190", %"class.std::__1::__hash_table.190"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.194", %"struct.std::__1::__hash_node_base.194"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.194"*, %"struct.std::__1::__hash_node_base.194"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.194"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.194"**, %"struct.std::__1::__hash_node_base.194"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.194"*, %"struct.std::__1::__hash_node_base.194"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.194"* null, %"struct.std::__1::__hash_node_base.194"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.194"**, %"struct.std::__1::__hash_node_base.194"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.194"*, %"struct.std::__1::__hash_node_base.194"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.194"* null, %"struct.std::__1::__hash_node_base.194"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.194"**, %"struct.std::__1::__hash_node_base.194"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.194"*, %"struct.std::__1::__hash_node_base.194"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.194"* null, %"struct.std::__1::__hash_node_base.194"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.194"**, %"struct.std::__1::__hash_node_base.194"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.194"*, %"struct.std::__1::__hash_node_base.194"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.194"* null, %"struct.std::__1::__hash_node_base.194"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.194", %"struct.std::__1::__hash_node_base.194"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.194"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #14, !range !12
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.194"**, %"struct.std::__1::__hash_node_base.194"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.194"*, %"struct.std::__1::__hash_node_base.194"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.194"* %36, %"struct.std::__1::__hash_node_base.194"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.194", %"struct.std::__1::__hash_node_base.194"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.194"*, %"struct.std::__1::__hash_node_base.194"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.194"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.194"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.194"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.194", %"struct.std::__1::__hash_node_base.194"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.194"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.194"**, %"struct.std::__1::__hash_node_base.194"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.194"*, %"struct.std::__1::__hash_node_base.194"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.194"*, %"struct.std::__1::__hash_node_base.194"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.194"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.194", %"struct.std::__1::__hash_node_base.194"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.194"* %101 to %"class.SkSL::Variable"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.194"* %82, %"struct.std::__1::__hash_node_base.194"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.194"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.194", %"struct.std::__1::__hash_node_base.194"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.194"*, %"struct.std::__1::__hash_node_base.194"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.194"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.194", %"struct.std::__1::__hash_node_base.194"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.194"* %110 to %"class.SkSL::Variable"**
  %112 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %102, align 8
  %113 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %111, align 8
  %114 = icmp eq %"class.SkSL::Variable"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.194"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.194"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.194"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.194"**, %"struct.std::__1::__hash_node_base.194"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.194"*, %"struct.std::__1::__hash_node_base.194"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.194"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.194"**, %"struct.std::__1::__hash_node_base.194"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.194"*, %"struct.std::__1::__hash_node_base.194"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.194"*, %"struct.std::__1::__hash_node_base.194"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.194", %"struct.std::__1::__hash_node_base.194"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.194"* %80, %"struct.std::__1::__hash_node_base.194"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.194"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.194", %"struct.std::__1::__hash_node_base.194"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.194"*, %"struct.std::__1::__hash_node_base.194"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.194"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.190", %"class.std::__1::__hash_table.190"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.194"**, %"struct.std::__1::__hash_node_base.194"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.194"** null, %"struct.std::__1::__hash_node_base.194"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.194"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.194"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #16
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.196", %"class.std::__1::__bucket_list_deallocator.196"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.194"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.190"*, %"class.SkSL::Variable"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.703"* dereferenceable(8), %"class.std::__1::tuple.633"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.SkSL::Variable"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.190", %"class.std::__1::__hash_table.190"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.SkSL::Variable"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #14, !range !12
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.190", %"class.std::__1::__hash_table.190"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.194"**, %"struct.std::__1::__hash_node_base.194"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.194"*, %"struct.std::__1::__hash_node_base.194"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.194"*, %"struct.std::__1::__hash_node_base.194"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.194"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.194"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.194", %"struct.std::__1::__hash_node_base.194"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.194"*, %"struct.std::__1::__hash_node_base.194"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.194"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.194", %"struct.std::__1::__hash_node_base.194"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.194"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.194", %"struct.std::__1::__hash_node_base.194"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.194"* %65 to %"class.SkSL::Variable"**
  %67 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %66, align 8
  %68 = icmp eq %"class.SkSL::Variable"* %67, %24
  br i1 %68, label %160, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 32) #16, !noalias !209
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple.703"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !209
  %75 = load i64, i64* %74, align 8, !noalias !209
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !209
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to i32*
  store i32 0, i32* %78, align 8, !noalias !209
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %20, i64* %80, align 8, !noalias !209
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.194"**
  store %"struct.std::__1::__hash_node_base.194"* null, %"struct.std::__1::__hash_node_base.194"** %81, align 8, !noalias !209
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.190", %"class.std::__1::__hash_table.190"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %22 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.190", %"class.std::__1::__hash_table.190"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %23, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %22, 1
  %94 = icmp ult i64 %22, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %22) #14, !range !12
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #14
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.190"* %0, i64 %104)
  %105 = load i64, i64* %21, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #14, !range !12
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %20
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %20, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %20, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %22, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %20, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.190", %"class.std::__1::__hash_table.190"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.194"**, %"struct.std::__1::__hash_node_base.194"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.194"*, %"struct.std::__1::__hash_node_base.194"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.194"*, %"struct.std::__1::__hash_node_base.194"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.194"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.190", %"class.std::__1::__hash_table.190"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.194"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.194"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.194"* %124, %"struct.std::__1::__hash_node_base.194"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.194"*, %"struct.std::__1::__hash_node_base.194"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.194"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.194", %"struct.std::__1::__hash_node_base.194"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.194"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #14, !range !12
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.194"**, %"struct.std::__1::__hash_node_base.194"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.194"*, %"struct.std::__1::__hash_node_base.194"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.194"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.194"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.194"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.194"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.194"* [ %157, %156 ], [ %47, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.194"*, i8 } undef, %"struct.std::__1::__hash_node_base.194"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.194"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.194"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #14
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #14
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #16
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.138"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.134"*, %"class.SkSL::FunctionDeclaration"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.752"* dereferenceable(8), %"class.std::__1::tuple.633"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.SkSL::FunctionDeclaration"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.SkSL::FunctionDeclaration"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #14, !range !12
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.138"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.138"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.138"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.138"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.138"* %65 to %"class.SkSL::FunctionDeclaration"**
  %67 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %66, align 8
  %68 = icmp eq %"class.SkSL::FunctionDeclaration"* %67, %24
  br i1 %68, label %160, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 32) #16, !noalias !212
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple.752"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !212
  %75 = load i64, i64* %74, align 8, !noalias !212
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !212
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to i32*
  store i32 0, i32* %78, align 8, !noalias !212
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %20, i64* %80, align 8, !noalias !212
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.138"**
  store %"struct.std::__1::__hash_node_base.138"* null, %"struct.std::__1::__hash_node_base.138"** %81, align 8, !noalias !212
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %22 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %23, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %22, 1
  %94 = icmp ult i64 %22, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %22) #14, !range !12
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #14
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.134"* %0, i64 %104)
  %105 = load i64, i64* %21, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #14, !range !12
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %20
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %20, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %20, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %22, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %20, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.138"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.134", %"class.std::__1::__hash_table.134"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.138"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.138"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.138"* %124, %"struct.std::__1::__hash_node_base.138"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.138"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138", %"struct.std::__1::__hash_node_base.138"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.138"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #14, !range !12
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.138"**, %"struct.std::__1::__hash_node_base.138"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.138"*, %"struct.std::__1::__hash_node_base.138"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.138"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.138"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.138"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.138"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.138"* [ %157, %156 ], [ %47, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.138"*, i8 } undef, %"struct.std::__1::__hash_node_base.138"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.138"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.138"*, i8 } %164
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #12

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { cold noreturn nounwind }
attributes #12 = { nounwind readnone speculatable }
attributes #13 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { noreturn nounwind }
attributes #16 = { builtin nounwind }
attributes #17 = { nounwind readonly }
attributes #18 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK4SkSL4Type11displayNameEv: argument 0"}
!5 = distinct !{!5, !"_ZNK4SkSL4Type11displayNameEv"}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.isvectorized", i32 1}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.unroll.disable"}
!10 = distinct !{!10, !11, !7}
!11 = !{!"llvm.loop.unroll.runtime.disable"}
!12 = !{i64 0, i64 65}
!13 = !{!14, !16}
!14 = distinct !{!14, !15, !"_ZNK4SkSL4Type11displayNameEv: argument 0"}
!15 = distinct !{!15, !"_ZNK4SkSL4Type11displayNameEv"}
!16 = distinct !{!16, !17, !"_ZNK4SkSL4Type11descriptionEv: argument 0"}
!17 = distinct !{!17, !"_ZNK4SkSL4Type11descriptionEv"}
!18 = !{!19, !21}
!19 = distinct !{!19, !20, !"_ZNK4SkSL4Type11displayNameEv: argument 0"}
!20 = distinct !{!20, !"_ZNK4SkSL4Type11displayNameEv"}
!21 = distinct !{!21, !22, !"_ZNK4SkSL4Type11descriptionEv: argument 0"}
!22 = distinct !{!22, !"_ZNK4SkSL4Type11descriptionEv"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNK4SkSL4Type11displayNameEv: argument 0"}
!25 = distinct !{!25, !"_ZNK4SkSL4Type11displayNameEv"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZNK4SkSL7Program18ElementsCollection5beginEv: argument 0"}
!28 = distinct !{!28, !"_ZNK4SkSL7Program18ElementsCollection5beginEv"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZNK4SkSL7Program18ElementsCollection3endEv: argument 0"}
!31 = distinct !{!31, !"_ZNK4SkSL7Program18ElementsCollection3endEv"}
!32 = !{!33, !35}
!33 = distinct !{!33, !34, !"_ZNK4SkSL4Type11displayNameEv: argument 0"}
!34 = distinct !{!34, !"_ZNK4SkSL4Type11displayNameEv"}
!35 = distinct !{!35, !36, !"_ZNK4SkSL4Type11descriptionEv: argument 0"}
!36 = distinct !{!36, !"_ZNK4SkSL4Type11descriptionEv"}
!37 = distinct !{!37, !7}
!38 = distinct !{!38, !9}
!39 = distinct !{!39, !11, !7}
!40 = distinct !{!40, !7}
!41 = distinct !{!41, !9}
!42 = distinct !{!42, !11, !7}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZNK4SkSL7Program18ElementsCollection5beginEv: argument 0"}
!45 = distinct !{!45, !"_ZNK4SkSL7Program18ElementsCollection5beginEv"}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZNK4SkSL7Program18ElementsCollection3endEv: argument 0"}
!48 = distinct !{!48, !"_ZNK4SkSL7Program18ElementsCollection3endEv"}
!49 = !{!50, !52}
!50 = distinct !{!50, !51, !"_ZNK4SkSL4Type11displayNameEv: argument 0"}
!51 = distinct !{!51, !"_ZNK4SkSL4Type11displayNameEv"}
!52 = distinct !{!52, !53, !"_ZNK4SkSL4Type11descriptionEv: argument 0"}
!53 = distinct !{!53, !"_ZNK4SkSL4Type11descriptionEv"}
!54 = !{!55, !57}
!55 = distinct !{!55, !56, !"_ZNK4SkSL4Type11displayNameEv: argument 0"}
!56 = distinct !{!56, !"_ZNK4SkSL4Type11displayNameEv"}
!57 = distinct !{!57, !58, !"_ZNK4SkSL4Type11descriptionEv: argument 0"}
!58 = distinct !{!58, !"_ZNK4SkSL4Type11descriptionEv"}
!59 = !{!60}
!60 = distinct !{!60, !61, !"_ZNK4SkSL7Program18ElementsCollection5beginEv: argument 0"}
!61 = distinct !{!61, !"_ZNK4SkSL7Program18ElementsCollection5beginEv"}
!62 = !{!63}
!63 = distinct !{!63, !64, !"_ZNK4SkSL7Program18ElementsCollection3endEv: argument 0"}
!64 = distinct !{!64, !"_ZNK4SkSL7Program18ElementsCollection3endEv"}
!65 = !{!66}
!66 = distinct !{!66, !67, !"_ZNK4SkSL7Program18ElementsCollection5beginEv: argument 0"}
!67 = distinct !{!67, !"_ZNK4SkSL7Program18ElementsCollection5beginEv"}
!68 = !{!69}
!69 = distinct !{!69, !70, !"_ZNK4SkSL7Program18ElementsCollection3endEv: argument 0"}
!70 = distinct !{!70, !"_ZNK4SkSL7Program18ElementsCollection3endEv"}
!71 = !{!72}
!72 = distinct !{!72, !73, !"_ZNK4SkSL7Program18ElementsCollection5beginEv: argument 0"}
!73 = distinct !{!73, !"_ZNK4SkSL7Program18ElementsCollection5beginEv"}
!74 = !{!75}
!75 = distinct !{!75, !76, !"_ZNK4SkSL7Program18ElementsCollection3endEv: argument 0"}
!76 = distinct !{!76, !"_ZNK4SkSL7Program18ElementsCollection3endEv"}
!77 = !{!78}
!78 = distinct !{!78, !79, !"_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__construct_nodeIJRKjEEENS_10unique_ptrINS_11__tree_nodeIjPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_: argument 0"}
!79 = distinct !{!79, !"_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__construct_nodeIJRKjEEENS_10unique_ptrINS_11__tree_nodeIjPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_"}
!80 = !{!81}
!81 = distinct !{!81, !82, !"_ZNK4SkSL7Program18ElementsCollection5beginEv: argument 0"}
!82 = distinct !{!82, !"_ZNK4SkSL7Program18ElementsCollection5beginEv"}
!83 = !{!84}
!84 = distinct !{!84, !85, !"_ZNK4SkSL7Program18ElementsCollection3endEv: argument 0"}
!85 = distinct !{!85, !"_ZNK4SkSL7Program18ElementsCollection3endEv"}
!86 = !{!87}
!87 = distinct !{!87, !88, !"_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__construct_nodeIJRKjEEENS_10unique_ptrINS_11__tree_nodeIjPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_: argument 0"}
!88 = distinct !{!88, !"_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__construct_nodeIJRKjEEENS_10unique_ptrINS_11__tree_nodeIjPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_"}
!89 = !{!90}
!90 = distinct !{!90, !91, !"_ZNK4SkSL7Program18ElementsCollection5beginEv: argument 0"}
!91 = distinct !{!91, !"_ZNK4SkSL7Program18ElementsCollection5beginEv"}
!92 = !{!93}
!93 = distinct !{!93, !94, !"_ZNK4SkSL7Program18ElementsCollection3endEv: argument 0"}
!94 = distinct !{!94, !"_ZNK4SkSL7Program18ElementsCollection3endEv"}
!95 = !{!96, !98}
!96 = distinct !{!96, !97, !"_ZNK4SkSL4Type11displayNameEv: argument 0"}
!97 = distinct !{!97, !"_ZNK4SkSL4Type11displayNameEv"}
!98 = distinct !{!98, !99, !"_ZNK4SkSL4Type11descriptionEv: argument 0"}
!99 = distinct !{!99, !"_ZNK4SkSL4Type11descriptionEv"}
!100 = distinct !{!100, !9}
!101 = !{!102}
!102 = distinct !{!102, !103, !"_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE21__construct_node_hashIRKS2_JEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINS7_ISG_EEEEEEmOT_DpOT0_: argument 0"}
!103 = distinct !{!103, !"_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE21__construct_node_hashIRKS2_JEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINS7_ISG_EEEEEEmOT_DpOT0_"}
!104 = distinct !{!104, !9}
!105 = !{!106}
!106 = distinct !{!106, !107, !"_ZNK4SkSL4Type11displayNameEv: argument 0"}
!107 = distinct !{!107, !"_ZNK4SkSL4Type11displayNameEv"}
!108 = !{!109}
!109 = distinct !{!109, !110, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!110 = distinct !{!110, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!111 = !{!112}
!112 = distinct !{!112, !113, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!113 = distinct !{!113, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!114 = !{!115}
!115 = distinct !{!115, !116, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!116 = distinct !{!116, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!117 = !{!118}
!118 = distinct !{!118, !119, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!119 = distinct !{!119, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!120 = !{!121}
!121 = distinct !{!121, !122, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!122 = distinct !{!122, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!123 = !{!124}
!124 = distinct !{!124, !125, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!125 = distinct !{!125, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!126 = !{!127}
!127 = distinct !{!127, !128, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!128 = distinct !{!128, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!129 = !{!130}
!130 = distinct !{!130, !131, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!131 = distinct !{!131, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!132 = !{!133}
!133 = distinct !{!133, !134, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!134 = distinct !{!134, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!135 = !{!136}
!136 = distinct !{!136, !137, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!137 = distinct !{!137, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!138 = !{!139}
!139 = distinct !{!139, !140, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!140 = distinct !{!140, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!141 = !{!142}
!142 = distinct !{!142, !143, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!143 = distinct !{!143, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!144 = !{!145}
!145 = distinct !{!145, !146, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!146 = distinct !{!146, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!147 = !{!148}
!148 = distinct !{!148, !149, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!149 = distinct !{!149, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!150 = !{!151}
!151 = distinct !{!151, !152, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!152 = distinct !{!152, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!153 = !{!154}
!154 = distinct !{!154, !155, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!155 = distinct !{!155, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!156 = !{!157}
!157 = distinct !{!157, !158, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!158 = distinct !{!158, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!159 = !{!160}
!160 = distinct !{!160, !161, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!161 = distinct !{!161, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!162 = !{!163}
!163 = distinct !{!163, !164, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!164 = distinct !{!164, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!165 = !{!166}
!166 = distinct !{!166, !167, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!167 = distinct !{!167, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!168 = !{!169}
!169 = distinct !{!169, !170, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!170 = distinct !{!170, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!171 = !{!172}
!172 = distinct !{!172, !173, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS4_IJOS3_EEENS4_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISU_EEEEEEmOT_DpOT0_: argument 0"}
!173 = distinct !{!173, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL13IntrinsicKindENS_5tupleIJNS2_18SPIRVCodeGenerator19IntrinsicOpcodeKindEiiiiEEEEENS_22__unordered_map_hasherIS3_S8_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS4_IJOS3_EEENS4_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISU_EEEEEEmOT_DpOT0_"}
!174 = distinct !{!174, !9}
!175 = !{!176}
!176 = distinct !{!176, !177, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringEjEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_S9_S7_Lb1EEENS_9allocatorIS4_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS3_EEENSK_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINSD_ISS_EEEEEEmOT_DpOT0_: argument 0"}
!177 = distinct !{!177, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringEjEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_S9_S7_Lb1EEENS_9allocatorIS4_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS3_EEENSK_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINSD_ISS_EEEEEEmOT_DpOT0_"}
!178 = distinct !{!178, !9}
!179 = !{!180}
!180 = distinct !{!180, !181, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL19SPIRVVectorConstantEjEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_S9_S7_Lb1EEENS_9allocatorIS4_EEE21__construct_node_hashINS_4pairIKS3_jEEJEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINSD_ISN_EEEEEEmOT_DpOT0_: argument 0"}
!181 = distinct !{!181, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL19SPIRVVectorConstantEjEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_S9_S7_Lb1EEENS_9allocatorIS4_EEE21__construct_node_hashINS_4pairIKS3_jEEJEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINSD_ISN_EEEEEEmOT_DpOT0_"}
!182 = distinct !{!182, !9}
!183 = distinct !{!183, !9}
!184 = !{!185}
!185 = distinct !{!185, !186, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL19SPIRVNumberConstantEjEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_S9_S7_Lb1EEENS_9allocatorIS4_EEE21__construct_node_hashINS_4pairIKS3_jEEJEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINSD_ISN_EEEEEEmOT_DpOT0_: argument 0"}
!186 = distinct !{!186, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL19SPIRVNumberConstantEjEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_S9_S7_Lb1EEENS_9allocatorIS4_EEE21__construct_node_hashINS_4pairIKS3_jEEJEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINSD_ISN_EEEEEEmOT_DpOT0_"}
!187 = distinct !{!187, !9}
!188 = !{!189}
!189 = distinct !{!189, !190, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS5_EEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_IST_EEEEEEmOT_DpOT0_: argument 0"}
!190 = distinct !{!190, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS5_EEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_IST_EEEEEEmOT_DpOT0_"}
!191 = distinct !{!191, !9}
!192 = !{!193}
!193 = distinct !{!193, !194, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_: argument 0"}
!194 = distinct !{!194, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_"}
!195 = distinct !{!195, !9}
!196 = !{!197}
!197 = distinct !{!197, !198, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS5_EEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_IST_EEEEEEmOT_DpOT0_: argument 0"}
!198 = distinct !{!198, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS5_EEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_IST_EEEEEEmOT_DpOT0_"}
!199 = distinct !{!199, !9}
!200 = distinct !{!200, !9}
!201 = distinct !{!201, !9}
!202 = distinct !{!202, !9}
!203 = distinct !{!203, !9}
!204 = distinct !{!204, !9}
!205 = !{!206}
!206 = distinct !{!206, !207, !"_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIRKS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISI_EEEEEEmOT_DpOT0_: argument 0"}
!207 = distinct !{!207, !"_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIRKS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISI_EEEEEEmOT_DpOT0_"}
!208 = distinct !{!208, !9}
!209 = !{!210}
!210 = distinct !{!210, !211, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_: argument 0"}
!211 = distinct !{!211, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL8VariableEiEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_"}
!212 = !{!213}
!213 = distinct !{!213, !214, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_: argument 0"}
!214 = distinct !{!214, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4SkSL19FunctionDeclarationEjEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_"}
