; ModuleID = '../../third_party/skia/modules/skottie/src/animator/Animator.cpp'
source_filename = "../../third_party/skia/modules/skottie/src/animator/Animator.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.skottie::internal::AnimatablePropertyContainer" = type <{ %"class.skottie::internal::Animator.base", [4 x i8], %"class.std::__1::vector", i8, [7 x i8] }>
%"class.skottie::internal::Animator.base" = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.sk_sp*, %class.sk_sp*, %"class.std::__1::__compressed_pair" }
%class.sk_sp = type { %"class.skottie::internal::Animator"* }
%"class.skottie::internal::Animator" = type { %class.SkRefCnt.base, [4 x i8] }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.sk_sp* }
%class.sk_sp.2 = type { %"class.skottie::internal::AnimatablePropertyContainer"* }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.skottie::internal::AnimationBuilder" = type { %class.sk_sp.3, %"struct.skottie::internal::AnimationBuilder::LazyResolveFontMgr", %class.sk_sp.5, %class.sk_sp.6, %class.sk_sp.7, %class.sk_sp.8, %"struct.skottie::Animation::Builder::Stats"*, %struct.SkSize, float, float, i32, %"class.std::__1::vector"*, i8*, i8, %class.SkTHashMap, %class.SkTHashMap.12, %class.SkTHashMap.21 }
%class.sk_sp.3 = type { %"class.skresources::ResourceProvider"* }
%"class.skresources::ResourceProvider" = type { %class.SkRefCnt.base, [4 x i8] }
%"struct.skottie::internal::AnimationBuilder::LazyResolveFontMgr" = type { %class.sk_sp.4 }
%class.sk_sp.4 = type { %class.SkFontMgr* }
%class.SkFontMgr = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.5 = type { %"class.skottie::PropertyObserver"* }
%"class.skottie::PropertyObserver" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.6 = type { %"class.skottie::Logger"* }
%"class.skottie::Logger" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.7 = type { %"class.skottie::MarkerObserver"* }
%"class.skottie::MarkerObserver" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.8 = type { %"class.skottie::PrecompInterceptor"* }
%"class.skottie::PrecompInterceptor" = type { %class.SkRefCnt.base, [4 x i8] }
%"struct.skottie::Animation::Builder::Stats" = type { float, float, float, i64, i64 }
%struct.SkSize = type { float, float }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.12 = type { %class.SkTHashTable.13 }
%class.SkTHashTable.13 = type { i32, i32, %class.SkAutoTArray.14 }
%class.SkAutoTArray.14 = type { %"class.std::__1::unique_ptr.15" }
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.21 = type { %class.SkTHashTable.22 }
%class.SkTHashTable.22 = type { i32, i32, %class.SkAutoTArray.23 }
%class.SkAutoTArray.23 = type { %"class.std::__1::unique_ptr.24" }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair>::Slot" = type opaque
%"class.skjson::ObjectValue" = type { %"class.skjson::VectorValue" }
%"class.skjson::VectorValue" = type { %"class.skjson::Value" }
%"class.skjson::Value" = type { [8 x i8] }
%"class.skottie::internal::KeyframeAnimatorBuilder" = type { i32 (...)**, %"class.std::__1::vector.30", %"class.std::__1::vector.37", %struct.SkPoint, %struct.SkPoint }
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { %"struct.skottie::internal::Keyframe"*, %"struct.skottie::internal::Keyframe"*, %"class.std::__1::__compressed_pair.32" }
%"struct.skottie::internal::Keyframe" = type { float, %"struct.skottie::internal::Keyframe::Value", i32 }
%"struct.skottie::internal::Keyframe::Value" = type { %union.anon }
%union.anon = type { i32 }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.skottie::internal::Keyframe"* }
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { %class.SkCubicMap*, %class.SkCubicMap*, %"class.std::__1::__compressed_pair.39" }
%class.SkCubicMap = type { [3 x %struct.SkPoint], i32 }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %class.SkCubicMap* }
%struct.SkPoint = type { float, float }
%class.sk_sp.44 = type { %"class.skottie::internal::KeyframeAnimator"* }
%"class.skottie::internal::KeyframeAnimator" = type { %"class.skottie::internal::Animator.base", %"class.std::__1::vector.30", %"class.std::__1::vector.37", %"struct.skottie::internal::KeyframeAnimator::KFSegment" }
%"struct.skottie::internal::KeyframeAnimator::KFSegment" = type { %"struct.skottie::internal::Keyframe"*, %"struct.skottie::internal::Keyframe"* }
%"class.skjson::ArrayValue" = type { %"class.skjson::VectorValue.45" }
%"class.skjson::VectorValue.45" = type { %"class.skjson::Value" }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE13shrink_to_fitEv = comdat any

$_ZN7skottie8internal27AnimatablePropertyContainerD2Ev = comdat any

$_ZN7skottie8internal27AnimatablePropertyContainerD0Ev = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_ = comdat any

@.str = private unnamed_addr constant [2 x i8] c"a\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"k\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@.str.3 = private unnamed_addr constant [24 x i8] c"Unsupported expression.\00", align 1
@.str.4 = private unnamed_addr constant [44 x i8] c"Could not parse (explicit) static property.\00", align 1
@.str.5 = private unnamed_addr constant [36 x i8] c"Could not parse keyframed property.\00", align 1
@_ZTVN7skottie8internal27AnimatablePropertyContainerE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.skottie::internal::AnimatablePropertyContainer"*)* @_ZN7skottie8internal27AnimatablePropertyContainerD2Ev to i8*), i8* bitcast (void (%"class.skottie::internal::AnimatablePropertyContainer"*)* @_ZN7skottie8internal27AnimatablePropertyContainerD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i1 (%"class.skottie::internal::AnimatablePropertyContainer"*, float)* @_ZN7skottie8internal27AnimatablePropertyContainer6onSeekEf to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer6onSeekEf(%"class.skottie::internal::AnimatablePropertyContainer"*, float) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.skottie::internal::AnimatablePropertyContainer", %"class.skottie::internal::AnimatablePropertyContainer"* %0, i64 0, i32 3
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = xor i8 %4, 1
  %6 = getelementptr inbounds %"class.skottie::internal::AnimatablePropertyContainer", %"class.skottie::internal::AnimatablePropertyContainer"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load %class.sk_sp*, %class.sk_sp** %6, align 8
  %8 = getelementptr inbounds %"class.skottie::internal::AnimatablePropertyContainer", %"class.skottie::internal::AnimatablePropertyContainer"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = load %class.sk_sp*, %class.sk_sp** %8, align 8
  %10 = icmp eq %class.sk_sp* %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %15, %2
  %12 = phi i8 [ %5, %2 ], [ %26, %15 ]
  %13 = and i8 %12, 1
  %14 = icmp ne i8 %13, 0
  br i1 %14, label %29, label %34

15:                                               ; preds = %2, %15
  %16 = phi i8 [ %26, %15 ], [ %5, %2 ]
  %17 = phi %class.sk_sp* [ %27, %15 ], [ %7, %2 ]
  %18 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %17, i64 0, i32 0
  %19 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %18, align 8
  %20 = bitcast %"class.skottie::internal::Animator"* %19 to i1 (%"class.skottie::internal::Animator"*, float)***
  %21 = load i1 (%"class.skottie::internal::Animator"*, float)**, i1 (%"class.skottie::internal::Animator"*, float)*** %20, align 8
  %22 = getelementptr inbounds i1 (%"class.skottie::internal::Animator"*, float)*, i1 (%"class.skottie::internal::Animator"*, float)** %21, i64 3
  %23 = load i1 (%"class.skottie::internal::Animator"*, float)*, i1 (%"class.skottie::internal::Animator"*, float)** %22, align 8
  %24 = tail call zeroext i1 %23(%"class.skottie::internal::Animator"* %19, float %1) #9
  %25 = zext i1 %24 to i8
  %26 = or i8 %16, %25
  %27 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %17, i64 1
  %28 = icmp eq %class.sk_sp* %27, %9
  br i1 %28, label %11, label %15

29:                                               ; preds = %11
  %30 = bitcast %"class.skottie::internal::AnimatablePropertyContainer"* %0 to void (%"class.skottie::internal::AnimatablePropertyContainer"*)***
  %31 = load void (%"class.skottie::internal::AnimatablePropertyContainer"*)**, void (%"class.skottie::internal::AnimatablePropertyContainer"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.skottie::internal::AnimatablePropertyContainer"*)*, void (%"class.skottie::internal::AnimatablePropertyContainer"*)** %31, i64 4
  %33 = load void (%"class.skottie::internal::AnimatablePropertyContainer"*)*, void (%"class.skottie::internal::AnimatablePropertyContainer"*)** %32, align 8
  tail call void %33(%"class.skottie::internal::AnimatablePropertyContainer"* %0) #9
  store i8 1, i8* %3, align 8
  br label %34

34:                                               ; preds = %29, %11
  ret i1 %14
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7skottie8internal27AnimatablePropertyContainer24attachDiscardableAdapterE5sk_spIS1_E(%"class.skottie::internal::AnimatablePropertyContainer"*, %class.sk_sp.2* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp, align 8
  %4 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %1, i64 0, i32 0
  %5 = load %"class.skottie::internal::AnimatablePropertyContainer"*, %"class.skottie::internal::AnimatablePropertyContainer"** %4, align 8
  %6 = icmp eq %"class.skottie::internal::AnimatablePropertyContainer"* %5, null
  br i1 %6, label %54, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.skottie::internal::AnimatablePropertyContainer", %"class.skottie::internal::AnimatablePropertyContainer"* %5, i64 0, i32 2, i32 0, i32 0
  %9 = load %class.sk_sp*, %class.sk_sp** %8, align 8
  %10 = getelementptr inbounds %"class.skottie::internal::AnimatablePropertyContainer", %"class.skottie::internal::AnimatablePropertyContainer"* %5, i64 0, i32 2, i32 0, i32 1
  %11 = load %class.sk_sp*, %class.sk_sp** %10, align 8
  %12 = icmp eq %class.sk_sp* %9, %11
  br i1 %12, label %13, label %20

13:                                               ; preds = %7
  %14 = bitcast %"class.skottie::internal::AnimatablePropertyContainer"* %5 to %"class.skottie::internal::Animator"*
  %15 = bitcast %"class.skottie::internal::AnimatablePropertyContainer"* %5 to i1 (%"class.skottie::internal::Animator"*, float)***
  %16 = load i1 (%"class.skottie::internal::Animator"*, float)**, i1 (%"class.skottie::internal::Animator"*, float)*** %15, align 8
  %17 = getelementptr inbounds i1 (%"class.skottie::internal::Animator"*, float)*, i1 (%"class.skottie::internal::Animator"*, float)** %16, i64 3
  %18 = load i1 (%"class.skottie::internal::Animator"*, float)*, i1 (%"class.skottie::internal::Animator"*, float)** %17, align 8
  %19 = tail call zeroext i1 %18(%"class.skottie::internal::Animator"* nonnull %14, float 0.000000e+00) #9
  br label %54

20:                                               ; preds = %7
  %21 = bitcast %class.sk_sp* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  %22 = getelementptr inbounds %"class.skottie::internal::AnimatablePropertyContainer", %"class.skottie::internal::AnimatablePropertyContainer"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 1 monotonic
  %24 = bitcast %class.sk_sp* %3 to %"class.skottie::internal::AnimatablePropertyContainer"**
  store %"class.skottie::internal::AnimatablePropertyContainer"* %5, %"class.skottie::internal::AnimatablePropertyContainer"** %24, align 8
  %25 = getelementptr inbounds %"class.skottie::internal::AnimatablePropertyContainer", %"class.skottie::internal::AnimatablePropertyContainer"* %0, i64 0, i32 2, i32 0, i32 1
  %26 = load %class.sk_sp*, %class.sk_sp** %25, align 8
  %27 = getelementptr inbounds %"class.skottie::internal::AnimatablePropertyContainer", %"class.skottie::internal::AnimatablePropertyContainer"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %28 = load %class.sk_sp*, %class.sk_sp** %27, align 8
  %29 = icmp ult %class.sk_sp* %26, %28
  br i1 %29, label %30, label %37

30:                                               ; preds = %20
  %31 = ptrtoint %"class.skottie::internal::AnimatablePropertyContainer"* %5 to i64
  %32 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %32, align 8
  %33 = bitcast %class.sk_sp* %26 to i64*
  store i64 %31, i64* %33, align 8
  %34 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %26, i64 1
  %35 = ptrtoint %class.sk_sp* %34 to i64
  %36 = bitcast %class.sk_sp** %25 to i64*
  store i64 %35, i64* %36, align 8
  br label %39

37:                                               ; preds = %20
  %38 = getelementptr inbounds %"class.skottie::internal::AnimatablePropertyContainer", %"class.skottie::internal::AnimatablePropertyContainer"* %0, i64 0, i32 2
  call void @_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"* %38, %class.sk_sp* nonnull dereferenceable(8) %3) #9
  br label %39

39:                                               ; preds = %30, %37
  %40 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  %41 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %40, align 8
  %42 = icmp eq %"class.skottie::internal::Animator"* %41, null
  br i1 %42, label %53, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %41, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw add i32* %44, i32 -1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %53

47:                                               ; preds = %43
  %48 = bitcast %"class.skottie::internal::Animator"* %41 to %class.SkRefCntBase*
  %49 = bitcast %"class.skottie::internal::Animator"* %41 to void (%class.SkRefCntBase*)***
  %50 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %49, align 8
  %51 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %50, i64 2
  %52 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %51, align 8
  call void %52(%class.SkRefCntBase* nonnull %48) #9
  br label %53

53:                                               ; preds = %39, %43, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  br label %54

54:                                               ; preds = %2, %53, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7skottie8internal27AnimatablePropertyContainer13shrink_to_fitEv(%"class.skottie::internal::AnimatablePropertyContainer"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::AnimatablePropertyContainer", %"class.skottie::internal::AnimatablePropertyContainer"* %0, i64 0, i32 2
  tail call void @_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE13shrink_to_fitEv(%"class.std::__1::vector"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE13shrink_to_fitEv(%"class.std::__1::vector"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %3 = bitcast %class.sk_sp** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.std::__1::vector"* %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 %4, %6
  %8 = ashr exact i64 %7, 3
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %10 = bitcast %class.sk_sp** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %11, %6
  %13 = ashr exact i64 %12, 3
  %14 = icmp ugt i64 %8, %13
  %15 = inttoptr i64 %6 to %class.sk_sp*
  %16 = inttoptr i64 %11 to %class.sk_sp*
  br i1 %14, label %17, label %140

17:                                               ; preds = %1
  %18 = icmp eq i64 %12, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %17
  %20 = icmp ugt i64 %13, 2305843009213693951
  br i1 %20, label %21, label %22

21:                                               ; preds = %19
  tail call void @abort() #10
  unreachable

22:                                               ; preds = %19
  %23 = tail call i8* @_Znwm(i64 %12) #11
  %24 = bitcast i8* %23 to %class.sk_sp*
  br label %25

25:                                               ; preds = %17, %22
  %26 = phi %class.sk_sp* [ %24, %22 ], [ null, %17 ]
  %27 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %26, i64 %13
  %28 = ptrtoint %class.sk_sp* %27 to i64
  %29 = icmp eq %class.sk_sp* %16, %15
  br i1 %29, label %57, label %30

30:                                               ; preds = %25
  %31 = getelementptr %class.sk_sp, %class.sk_sp* %16, i64 -1, i32 0
  %32 = bitcast %"class.skottie::internal::Animator"** %31 to i8*
  %33 = sub i64 0, %6
  %34 = getelementptr i8, i8* %32, i64 %33
  %35 = ptrtoint i8* %34 to i64
  %36 = lshr i64 %35, 3
  %37 = add nuw nsw i64 %36, 1
  %38 = and i64 %37, 7
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %52, label %40

40:                                               ; preds = %30, %40
  %41 = phi %class.sk_sp* [ %44, %40 ], [ %27, %30 ]
  %42 = phi %class.sk_sp* [ %45, %40 ], [ %16, %30 ]
  %43 = phi i64 [ %50, %40 ], [ %38, %30 ]
  %44 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %41, i64 -1
  %45 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %42, i64 -1
  %46 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %45, i64 0, i32 0
  %47 = bitcast %class.sk_sp* %45 to i64*
  %48 = load i64, i64* %47, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %46, align 8
  %49 = bitcast %class.sk_sp* %44 to i64*
  store i64 %48, i64* %49, align 8
  %50 = add i64 %43, -1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %40, !llvm.loop !3

52:                                               ; preds = %40, %30
  %53 = phi %class.sk_sp* [ undef, %30 ], [ %44, %40 ]
  %54 = phi %class.sk_sp* [ %27, %30 ], [ %44, %40 ]
  %55 = phi %class.sk_sp* [ %16, %30 ], [ %45, %40 ]
  %56 = icmp ult i8* %34, inttoptr (i64 56 to i8*)
  br i1 %56, label %110, label %58

57:                                               ; preds = %25
  store i64 %28, i64* %5, align 8
  store i64 %28, i64* %10, align 8
  store i64 %28, i64* %3, align 8
  br label %135

58:                                               ; preds = %52, %58
  %59 = phi %class.sk_sp* [ %103, %58 ], [ %54, %52 ]
  %60 = phi %class.sk_sp* [ %104, %58 ], [ %55, %52 ]
  %61 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %59, i64 -1
  %62 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %60, i64 -1
  %63 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %62, i64 0, i32 0
  %64 = bitcast %class.sk_sp* %62 to i64*
  %65 = load i64, i64* %64, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %63, align 8
  %66 = bitcast %class.sk_sp* %61 to i64*
  store i64 %65, i64* %66, align 8
  %67 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %59, i64 -2
  %68 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %60, i64 -2
  %69 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %68, i64 0, i32 0
  %70 = bitcast %class.sk_sp* %68 to i64*
  %71 = load i64, i64* %70, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %69, align 8
  %72 = bitcast %class.sk_sp* %67 to i64*
  store i64 %71, i64* %72, align 8
  %73 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %59, i64 -3
  %74 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %60, i64 -3
  %75 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %74, i64 0, i32 0
  %76 = bitcast %class.sk_sp* %74 to i64*
  %77 = load i64, i64* %76, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %75, align 8
  %78 = bitcast %class.sk_sp* %73 to i64*
  store i64 %77, i64* %78, align 8
  %79 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %59, i64 -4
  %80 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %60, i64 -4
  %81 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %80, i64 0, i32 0
  %82 = bitcast %class.sk_sp* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %81, align 8
  %84 = bitcast %class.sk_sp* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %59, i64 -5
  %86 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %60, i64 -5
  %87 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %86, i64 0, i32 0
  %88 = bitcast %class.sk_sp* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %87, align 8
  %90 = bitcast %class.sk_sp* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %59, i64 -6
  %92 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %60, i64 -6
  %93 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %92, i64 0, i32 0
  %94 = bitcast %class.sk_sp* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %93, align 8
  %96 = bitcast %class.sk_sp* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %59, i64 -7
  %98 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %60, i64 -7
  %99 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %98, i64 0, i32 0
  %100 = bitcast %class.sk_sp* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %99, align 8
  %102 = bitcast %class.sk_sp* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %59, i64 -8
  %104 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %60, i64 -8
  %105 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %104, i64 0, i32 0
  %106 = bitcast %class.sk_sp* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %105, align 8
  %108 = bitcast %class.sk_sp* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = icmp eq %class.sk_sp* %104, %15
  br i1 %109, label %110, label %58

110:                                              ; preds = %58, %52
  %111 = phi %class.sk_sp* [ %53, %52 ], [ %103, %58 ]
  %112 = ptrtoint %class.sk_sp* %111 to i64
  %113 = load i64, i64* %5, align 8
  %114 = load %class.sk_sp*, %class.sk_sp** %9, align 8
  %115 = inttoptr i64 %113 to %class.sk_sp*
  store i64 %112, i64* %5, align 8
  store i64 %28, i64* %10, align 8
  store i64 %28, i64* %3, align 8
  %116 = icmp eq %class.sk_sp* %114, %115
  br i1 %116, label %135, label %117

117:                                              ; preds = %110, %133
  %118 = phi %class.sk_sp* [ %119, %133 ], [ %114, %110 ]
  %119 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %118, i64 -1
  %120 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %119, i64 0, i32 0
  %121 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %120, align 8
  %122 = icmp eq %"class.skottie::internal::Animator"* %121, null
  br i1 %122, label %133, label %123

123:                                              ; preds = %117
  %124 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %121, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = atomicrmw add i32* %124, i32 -1 acq_rel
  %126 = icmp eq i32 %125, 1
  br i1 %126, label %127, label %133

127:                                              ; preds = %123
  %128 = bitcast %"class.skottie::internal::Animator"* %121 to %class.SkRefCntBase*
  %129 = bitcast %"class.skottie::internal::Animator"* %121 to void (%class.SkRefCntBase*)***
  %130 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %129, align 8
  %131 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %130, i64 2
  %132 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %131, align 8
  tail call void %132(%class.SkRefCntBase* nonnull %128) #9
  br label %133

133:                                              ; preds = %127, %123, %117
  %134 = icmp eq %class.sk_sp* %119, %115
  br i1 %134, label %135, label %117

135:                                              ; preds = %133, %57, %110
  %136 = phi i64 [ %6, %57 ], [ %113, %110 ], [ %113, %133 ]
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %140, label %138

138:                                              ; preds = %135
  %139 = inttoptr i64 %136 to i8*
  tail call void @_ZdlPv(i8* %139) #11
  br label %140

140:                                              ; preds = %138, %135, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer8bindImplERKNS0_16AnimationBuilderEPKN6skjson11ObjectValueERNS0_23KeyframeAnimatorBuilderE(%"class.skottie::internal::AnimatablePropertyContainer"*, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152), %"class.skjson::ObjectValue"*, %"class.skottie::internal::KeyframeAnimatorBuilder"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca i8, align 1
  %6 = alloca %class.sk_sp.44, align 8
  %7 = alloca %class.sk_sp, align 8
  %8 = icmp eq %"class.skjson::ObjectValue"* %2, null
  br i1 %8, label %119, label %9

9:                                                ; preds = %4
  %10 = tail call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* nonnull %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #9
  %11 = tail call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* nonnull %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #9
  %12 = tail call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* nonnull %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #9
  %13 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %12, i64 0, i32 0, i64 0
  %14 = load i8, i8* %13, align 8
  %15 = and i8 %14, 7
  switch i8 %15, label %17 [
    i8 7, label %16
    i8 2, label %16
    i8 3, label %16
    i8 4, label %16
    i8 0, label %16
    i8 5, label %16
    i8 6, label %16
  ]

16:                                               ; preds = %9, %9, %9, %9, %9, %9, %9
  tail call void (%"class.skottie::internal::AnimationBuilder"*, i32, %"class.skjson::Value"*, i8*, ...) @_ZNK7skottie8internal16AnimationBuilder3logENS_6Logger5LevelEPKN6skjson5ValueEPKcz(%"class.skottie::internal::AnimationBuilder"* %1, i32 0, %"class.skjson::Value"* null, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0)) #9
  br label %17

17:                                               ; preds = %9, %16
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #9
  store i8 -86, i8* %5, align 1
  %18 = call zeroext i1 @_ZN7skottie5ParseIbEEbRKN6skjson5ValueEPT_(%"class.skjson::Value"* dereferenceable(8) %10, i8* nonnull %5) #9
  br i1 %18, label %20, label %19

19:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #9
  br label %23

20:                                               ; preds = %17
  %21 = load i8, i8* %5, align 1, !range !2
  %22 = icmp eq i8 %21, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #9
  br i1 %22, label %23, label %35

23:                                               ; preds = %20, %19
  %24 = bitcast %"class.skottie::internal::KeyframeAnimatorBuilder"* %3 to i1 (%"class.skottie::internal::KeyframeAnimatorBuilder"*, %"class.skottie::internal::AnimationBuilder"*, %"class.skjson::Value"*)***
  %25 = load i1 (%"class.skottie::internal::KeyframeAnimatorBuilder"*, %"class.skottie::internal::AnimationBuilder"*, %"class.skjson::Value"*)**, i1 (%"class.skottie::internal::KeyframeAnimatorBuilder"*, %"class.skottie::internal::AnimationBuilder"*, %"class.skjson::Value"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.skottie::internal::KeyframeAnimatorBuilder"*, %"class.skottie::internal::AnimationBuilder"*, %"class.skjson::Value"*)*, i1 (%"class.skottie::internal::KeyframeAnimatorBuilder"*, %"class.skottie::internal::AnimationBuilder"*, %"class.skjson::Value"*)** %25, i64 3
  %27 = load i1 (%"class.skottie::internal::KeyframeAnimatorBuilder"*, %"class.skottie::internal::AnimationBuilder"*, %"class.skjson::Value"*)*, i1 (%"class.skottie::internal::KeyframeAnimatorBuilder"*, %"class.skottie::internal::AnimationBuilder"*, %"class.skjson::Value"*)** %26, align 8
  %28 = call zeroext i1 %27(%"class.skottie::internal::KeyframeAnimatorBuilder"* %3, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %1, %"class.skjson::Value"* dereferenceable(8) %11) #9
  br i1 %28, label %119, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %10, i64 0, i32 0, i64 0
  %31 = load i8, i8* %30, align 8
  %32 = and i8 %31, 7
  switch i8 %32, label %35 [
    i8 7, label %33
    i8 2, label %33
    i8 3, label %33
    i8 4, label %33
    i8 0, label %33
    i8 5, label %33
    i8 6, label %33
  ]

33:                                               ; preds = %29, %29, %29, %29, %29, %29, %29
  %34 = getelementptr inbounds %"class.skjson::ObjectValue", %"class.skjson::ObjectValue"* %2, i64 0, i32 0, i32 0
  call void (%"class.skottie::internal::AnimationBuilder"*, i32, %"class.skjson::Value"*, i8*, ...) @_ZNK7skottie8internal16AnimationBuilder3logENS_6Logger5LevelEPKN6skjson5ValueEPKcz(%"class.skottie::internal::AnimationBuilder"* %1, i32 1, %"class.skjson::Value"* %34, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0)) #9
  br label %119

35:                                               ; preds = %20, %29
  %36 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %11, i64 0, i32 0, i64 0
  %37 = load i8, i8* %36, align 8
  %38 = and i8 %37, 7
  %39 = icmp ne i8 %38, 6
  %40 = bitcast %"class.skjson::Value"* %11 to %"class.skjson::ArrayValue"*
  %41 = icmp eq %"class.skjson::Value"* %11, null
  %42 = or i1 %41, %39
  br i1 %42, label %60, label %43

43:                                               ; preds = %35
  %44 = bitcast %"class.skjson::Value"* %11 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = and i64 %45, -8
  %47 = inttoptr i64 %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %60, label %50

50:                                               ; preds = %43
  %51 = bitcast %class.sk_sp.44* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #9
  %52 = bitcast %"class.skottie::internal::KeyframeAnimatorBuilder"* %3 to void (%class.sk_sp.44*, %"class.skottie::internal::KeyframeAnimatorBuilder"*, %"class.skottie::internal::AnimationBuilder"*, %"class.skjson::ArrayValue"*)***
  %53 = load void (%class.sk_sp.44*, %"class.skottie::internal::KeyframeAnimatorBuilder"*, %"class.skottie::internal::AnimationBuilder"*, %"class.skjson::ArrayValue"*)**, void (%class.sk_sp.44*, %"class.skottie::internal::KeyframeAnimatorBuilder"*, %"class.skottie::internal::AnimationBuilder"*, %"class.skjson::ArrayValue"*)*** %52, align 8
  %54 = getelementptr inbounds void (%class.sk_sp.44*, %"class.skottie::internal::KeyframeAnimatorBuilder"*, %"class.skottie::internal::AnimationBuilder"*, %"class.skjson::ArrayValue"*)*, void (%class.sk_sp.44*, %"class.skottie::internal::KeyframeAnimatorBuilder"*, %"class.skottie::internal::AnimationBuilder"*, %"class.skjson::ArrayValue"*)** %53, i64 2
  %55 = load void (%class.sk_sp.44*, %"class.skottie::internal::KeyframeAnimatorBuilder"*, %"class.skottie::internal::AnimationBuilder"*, %"class.skjson::ArrayValue"*)*, void (%class.sk_sp.44*, %"class.skottie::internal::KeyframeAnimatorBuilder"*, %"class.skottie::internal::AnimationBuilder"*, %"class.skjson::ArrayValue"*)** %54, align 8
  call void %55(%class.sk_sp.44* nonnull sret %6, %"class.skottie::internal::KeyframeAnimatorBuilder"* %3, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %1, %"class.skjson::ArrayValue"* nonnull dereferenceable(8) %40) #9
  %56 = bitcast %class.sk_sp.44* %6 to i64*
  %57 = load i64, i64* %56, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #9
  %58 = inttoptr i64 %57 to %"class.skottie::internal::KeyframeAnimator"*
  %59 = icmp eq i64 %57, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %35, %43, %50
  %61 = getelementptr inbounds %"class.skjson::ObjectValue", %"class.skjson::ObjectValue"* %2, i64 0, i32 0, i32 0
  call void (%"class.skottie::internal::AnimationBuilder"*, i32, %"class.skjson::Value"*, i8*, ...) @_ZNK7skottie8internal16AnimationBuilder3logENS_6Logger5LevelEPKN6skjson5ValueEPKcz(%"class.skottie::internal::AnimationBuilder"* %1, i32 1, %"class.skjson::Value"* %61, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i64 0, i64 0)) #9
  br label %119

62:                                               ; preds = %50
  %63 = getelementptr inbounds %"class.skottie::internal::KeyframeAnimator", %"class.skottie::internal::KeyframeAnimator"* %58, i64 0, i32 1
  %64 = getelementptr inbounds %"class.skottie::internal::KeyframeAnimator", %"class.skottie::internal::KeyframeAnimator"* %58, i64 0, i32 1, i32 0, i32 1
  %65 = bitcast %"struct.skottie::internal::Keyframe"** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = bitcast %"class.std::__1::vector.30"* %63 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = sub i64 %66, %68
  %70 = icmp eq i64 %69, 12
  br i1 %70, label %102, label %71

71:                                               ; preds = %62
  %72 = bitcast %class.sk_sp* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #9
  %73 = bitcast %class.sk_sp* %7 to i64*
  store i64 %57, i64* %73, align 8
  %74 = getelementptr inbounds %"class.skottie::internal::AnimatablePropertyContainer", %"class.skottie::internal::AnimatablePropertyContainer"* %0, i64 0, i32 2, i32 0, i32 1
  %75 = load %class.sk_sp*, %class.sk_sp** %74, align 8
  %76 = getelementptr inbounds %"class.skottie::internal::AnimatablePropertyContainer", %"class.skottie::internal::AnimatablePropertyContainer"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %77 = load %class.sk_sp*, %class.sk_sp** %76, align 8
  %78 = icmp ult %class.sk_sp* %75, %77
  br i1 %78, label %79, label %85

79:                                               ; preds = %71
  %80 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %7, i64 0, i32 0
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %80, align 8
  %81 = bitcast %class.sk_sp* %75 to i64*
  store i64 %57, i64* %81, align 8
  %82 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %75, i64 1
  %83 = ptrtoint %class.sk_sp* %82 to i64
  %84 = bitcast %class.sk_sp** %74 to i64*
  store i64 %83, i64* %84, align 8
  br label %87

85:                                               ; preds = %71
  %86 = getelementptr inbounds %"class.skottie::internal::AnimatablePropertyContainer", %"class.skottie::internal::AnimatablePropertyContainer"* %0, i64 0, i32 2
  call void @_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"* %86, %class.sk_sp* nonnull dereferenceable(8) %7) #9
  br label %87

87:                                               ; preds = %79, %85
  %88 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %7, i64 0, i32 0
  %89 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %88, align 8
  %90 = icmp eq %"class.skottie::internal::Animator"* %89, null
  br i1 %90, label %101, label %91

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %89, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = atomicrmw add i32* %92, i32 -1 acq_rel
  %94 = icmp eq i32 %93, 1
  br i1 %94, label %95, label %101

95:                                               ; preds = %91
  %96 = bitcast %"class.skottie::internal::Animator"* %89 to %class.SkRefCntBase*
  %97 = bitcast %"class.skottie::internal::Animator"* %89 to void (%class.SkRefCntBase*)***
  %98 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %97, align 8
  %99 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %98, i64 2
  %100 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %99, align 8
  call void %100(%class.SkRefCntBase* nonnull %96) #9
  br label %101

101:                                              ; preds = %95, %91, %87
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #9
  br label %119

102:                                              ; preds = %62
  %103 = inttoptr i64 %57 to %"class.skottie::internal::Animator"*
  %104 = inttoptr i64 %57 to i1 (%"class.skottie::internal::Animator"*, float)***
  %105 = load i1 (%"class.skottie::internal::Animator"*, float)**, i1 (%"class.skottie::internal::Animator"*, float)*** %104, align 8
  %106 = getelementptr inbounds i1 (%"class.skottie::internal::Animator"*, float)*, i1 (%"class.skottie::internal::Animator"*, float)** %105, i64 3
  %107 = load i1 (%"class.skottie::internal::Animator"*, float)*, i1 (%"class.skottie::internal::Animator"*, float)** %106, align 8
  %108 = call zeroext i1 %107(%"class.skottie::internal::Animator"* %103, float 0.000000e+00) #9
  %109 = inttoptr i64 %57 to %"class.skottie::internal::KeyframeAnimator"*
  %110 = getelementptr inbounds %"class.skottie::internal::KeyframeAnimator", %"class.skottie::internal::KeyframeAnimator"* %109, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = atomicrmw add i32* %110, i32 -1 acq_rel
  %112 = icmp eq i32 %111, 1
  br i1 %112, label %113, label %119

113:                                              ; preds = %102
  %114 = inttoptr i64 %57 to %class.SkRefCntBase*
  %115 = inttoptr i64 %57 to void (%class.SkRefCntBase*)***
  %116 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %115, align 8
  %117 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %116, i64 2
  %118 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %117, align 8
  call void %118(%class.SkRefCntBase* nonnull %114) #9
  br label %119

119:                                              ; preds = %60, %113, %102, %101, %33, %23, %4
  %120 = phi i1 [ false, %4 ], [ false, %33 ], [ true, %23 ], [ true, %101 ], [ true, %102 ], [ true, %113 ], [ false, %60 ]
  ret i1 %120
}

declare dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"*, i8*) local_unnamed_addr #2

declare void @_ZNK7skottie8internal16AnimationBuilder3logENS_6Logger5LevelEPKN6skjson5ValueEPKcz(%"class.skottie::internal::AnimationBuilder"*, i32, %"class.skjson::Value"*, i8*, ...) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7skottie8internal27AnimatablePropertyContainerD2Ev(%"class.skottie::internal::AnimatablePropertyContainer"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::AnimatablePropertyContainer", %"class.skottie::internal::AnimatablePropertyContainer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal27AnimatablePropertyContainerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::AnimatablePropertyContainer", %"class.skottie::internal::AnimatablePropertyContainer"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %class.sk_sp*, %class.sk_sp** %4, align 8
  %6 = icmp eq %class.sk_sp* %5, null
  br i1 %6, label %35, label %7

7:                                                ; preds = %1
  %8 = bitcast %class.sk_sp* %5 to i8*
  %9 = getelementptr inbounds %"class.skottie::internal::AnimatablePropertyContainer", %"class.skottie::internal::AnimatablePropertyContainer"* %0, i64 0, i32 2, i32 0, i32 1
  %10 = load %class.sk_sp*, %class.sk_sp** %9, align 8
  %11 = icmp eq %class.sk_sp* %10, %5
  br i1 %11, label %33, label %12

12:                                               ; preds = %7, %28
  %13 = phi %class.sk_sp* [ %14, %28 ], [ %10, %7 ]
  %14 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %13, i64 -1
  %15 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %14, i64 0, i32 0
  %16 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %15, align 8
  %17 = icmp eq %"class.skottie::internal::Animator"* %16, null
  br i1 %17, label %28, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %16, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 -1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %28

22:                                               ; preds = %18
  %23 = bitcast %"class.skottie::internal::Animator"* %16 to %class.SkRefCntBase*
  %24 = bitcast %"class.skottie::internal::Animator"* %16 to void (%class.SkRefCntBase*)***
  %25 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %24, align 8
  %26 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %25, i64 2
  %27 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %26, align 8
  tail call void %27(%class.SkRefCntBase* nonnull %23) #9
  br label %28

28:                                               ; preds = %22, %18, %12
  %29 = icmp eq %class.sk_sp* %14, %5
  br i1 %29, label %30, label %12

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::vector"* %3 to i8**
  %32 = load i8*, i8** %31, align 8
  br label %33

33:                                               ; preds = %30, %7
  %34 = phi i8* [ %32, %30 ], [ %8, %7 ]
  store %class.sk_sp* %5, %class.sk_sp** %9, align 8
  tail call void @_ZdlPv(i8* %34) #11
  br label %35

35:                                               ; preds = %1, %33
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7skottie8internal27AnimatablePropertyContainerD0Ev(%"class.skottie::internal::AnimatablePropertyContainer"*) unnamed_addr #3 comdat align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #9
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"*, %class.sk_sp* dereferenceable(8)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %class.sk_sp** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #10
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %class.sk_sp** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #10
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #11
  %33 = bitcast i8* %32 to %class.sk_sp*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %class.sk_sp* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %36, i64 %9
  %38 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %36, i64 %35
  %39 = ptrtoint %class.sk_sp* %38 to i64
  %40 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  %41 = bitcast %class.sk_sp* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %40, align 8
  %43 = bitcast %class.sk_sp* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %37, i64 1
  %45 = ptrtoint %class.sk_sp* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %class.sk_sp*, %class.sk_sp** %46, align 8
  %48 = ptrtoint %class.sk_sp* %47 to i64
  %49 = load %class.sk_sp*, %class.sk_sp** %3, align 8
  %50 = icmp eq %class.sk_sp* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %class.sk_sp, %class.sk_sp* %49, i64 -1, i32 0
  %53 = ptrtoint %"class.skottie::internal::Animator"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %class.sk_sp* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %class.sk_sp* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %60, i64 -1
  %64 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %61, i64 -1
  %65 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %64, i64 0, i32 0
  %66 = bitcast %class.sk_sp* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %65, align 8
  %68 = bitcast %class.sk_sp* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !5

71:                                               ; preds = %59, %51
  %72 = phi %class.sk_sp* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %class.sk_sp* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %class.sk_sp* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %class.sk_sp* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %class.sk_sp* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %77, i64 -1
  %80 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %78, i64 -1
  %81 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %80, i64 0, i32 0
  %82 = bitcast %class.sk_sp* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %81, align 8
  %84 = bitcast %class.sk_sp* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %77, i64 -2
  %86 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %78, i64 -2
  %87 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %86, i64 0, i32 0
  %88 = bitcast %class.sk_sp* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %87, align 8
  %90 = bitcast %class.sk_sp* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %77, i64 -3
  %92 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %78, i64 -3
  %93 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %92, i64 0, i32 0
  %94 = bitcast %class.sk_sp* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %93, align 8
  %96 = bitcast %class.sk_sp* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %77, i64 -4
  %98 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %78, i64 -4
  %99 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %98, i64 0, i32 0
  %100 = bitcast %class.sk_sp* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %99, align 8
  %102 = bitcast %class.sk_sp* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %77, i64 -5
  %104 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %78, i64 -5
  %105 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %104, i64 0, i32 0
  %106 = bitcast %class.sk_sp* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %105, align 8
  %108 = bitcast %class.sk_sp* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %77, i64 -6
  %110 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %78, i64 -6
  %111 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %110, i64 0, i32 0
  %112 = bitcast %class.sk_sp* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %111, align 8
  %114 = bitcast %class.sk_sp* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %77, i64 -7
  %116 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %78, i64 -7
  %117 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %116, i64 0, i32 0
  %118 = bitcast %class.sk_sp* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %117, align 8
  %120 = bitcast %class.sk_sp* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %77, i64 -8
  %122 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %78, i64 -8
  %123 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %122, i64 0, i32 0
  %124 = bitcast %class.sk_sp* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %123, align 8
  %126 = bitcast %class.sk_sp* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %class.sk_sp* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %class.sk_sp* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %class.sk_sp*, %class.sk_sp** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %class.sk_sp* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %class.sk_sp* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %class.sk_sp* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %class.sk_sp*
  %138 = icmp eq %class.sk_sp* %133, %137
  br i1 %138, label %157, label %139

139:                                              ; preds = %132, %155
  %140 = phi %class.sk_sp* [ %141, %155 ], [ %133, %132 ]
  %141 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %140, i64 -1
  %142 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %141, i64 0, i32 0
  %143 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %142, align 8
  %144 = icmp eq %"class.skottie::internal::Animator"* %143, null
  br i1 %144, label %155, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %143, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = atomicrmw add i32* %146, i32 -1 acq_rel
  %148 = icmp eq i32 %147, 1
  br i1 %148, label %149, label %155

149:                                              ; preds = %145
  %150 = bitcast %"class.skottie::internal::Animator"* %143 to %class.SkRefCntBase*
  %151 = bitcast %"class.skottie::internal::Animator"* %143 to void (%class.SkRefCntBase*)***
  %152 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %151, align 8
  %153 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %152, i64 2
  %154 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %153, align 8
  tail call void %154(%class.SkRefCntBase* nonnull %150) #9
  br label %155

155:                                              ; preds = %149, %145, %139
  %156 = icmp eq %class.sk_sp* %141, %137
  br i1 %156, label %157, label %139

157:                                              ; preds = %155, %132
  %158 = icmp eq i64 %135, 0
  br i1 %158, label %161, label %159

159:                                              ; preds = %157
  %160 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %160) #11
  br label %161

161:                                              ; preds = %157, %159
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare zeroext i1 @_ZN7skottie5ParseIbEEbRKN6skjson5ValueEPT_(%"class.skjson::Value"* dereferenceable(8), i8*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
!5 = distinct !{!5, !4}
