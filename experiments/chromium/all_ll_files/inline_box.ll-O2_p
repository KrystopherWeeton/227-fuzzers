; ModuleID = '../../third_party/blink/renderer/core/layout/line/inline_box.cc'
source_filename = "../../third_party/blink/renderer/core/layout/line/inline_box.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::PartitionRoot" = type <{ i8, i8, i8, i8, i8, i8, i8, %"class.base::internal::MaybeSpinLock", [5 x i8], [128 x %"struct.base::internal::PartitionBucket"], %"struct.base::internal::PartitionBucket", i8, [7 x i8], %"struct.std::__1::atomic.95", %"struct.std::__1::atomic.95", %"struct.std::__1::atomic.95", i8*, i8*, i8*, %"struct.base::internal::PartitionSuperPageExtentEntry"*, %"struct.base::internal::PartitionSuperPageExtentEntry"*, %"struct.base::internal::PartitionDirectMapExtent"*, [16 x %"struct.base::internal::SlotSpanMetadata"*], i16, [6 x i8], i64, %"struct.std::__1::atomic.41", [4 x i8] }>
%"class.base::internal::MaybeSpinLock" = type { [4 x i8] }
%"struct.base::internal::PartitionBucket" = type { %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"*, i32, i32, i64 }
%"struct.base::internal::SlotSpanMetadata" = type <{ %"class.base::internal::PartitionFreelistEntry"*, %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::PartitionBucket"*, i16, i16, i8, i8 }>
%"class.base::internal::PartitionFreelistEntry" = type { %"struct.base::internal::EncodedPartitionFreelistEntry"*, i64 }
%"struct.base::internal::EncodedPartitionFreelistEntry" = type { [8 x i8], [8 x i8] }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"struct.base::internal::PartitionSuperPageExtentEntry" = type { %"struct.base::PartitionRoot"*, i8*, i8*, %"struct.base::internal::PartitionSuperPageExtentEntry"* }
%"struct.base::internal::PartitionDirectMapExtent" = type opaque
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::internal::PCScan" = type <{ %"class.base::internal::PCScanScheduler", %"struct.std::__1::atomic.2001", i8, [6 x i8] }>
%"class.base::internal::PCScanScheduler" = type { %"struct.base::internal::QuarantineData", %"class.base::internal::LimitBackend", %"class.base::internal::PCScanSchedulingBackend"* }
%"struct.base::internal::QuarantineData" = type { %"struct.std::__1::atomic.95", %"struct.std::__1::atomic.95", %"struct.std::__1::atomic.95", i64 }
%"class.base::internal::LimitBackend" = type { %"class.base::internal::PCScanSchedulingBackend" }
%"class.base::internal::PCScanSchedulingBackend" = type { i32 (...)**, %"class.base::internal::PCScanScheduler"* }
%"struct.std::__1::atomic.2001" = type { %"struct.std::__1::__atomic_base.2002" }
%"struct.std::__1::__atomic_base.2002" = type { %"struct.std::__1::__cxx_atomic_impl.2003" }
%"struct.std::__1::__cxx_atomic_impl.2003" = type { %"struct.std::__1::__cxx_atomic_base_impl.2004" }
%"struct.std::__1::__cxx_atomic_base_impl.2004" = type { i8 }
%"struct.base::internal::DeferredUnmap" = type { i8*, i64 }
%"struct.base::internal::PartitionPage" = type { %union.anon.2005, i8, i8 }
%union.anon.2005 = type <{ %"struct.base::internal::SubsequentPageMetadata", [22 x i8] }>
%"struct.base::internal::SubsequentPageMetadata" = type { i64 }
%"class.base::internal::ObjectBitmap" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [2048 x i64] }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1603" = type { %"class.std::__1::__compressed_pair.1604" }
%"class.std::__1::__compressed_pair.1604" = type { %"struct.std::__1::__compressed_pair_elem.1605" }
%"struct.std::__1::__compressed_pair_elem.1605" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1606", %"class.absl::optional.1615" }
%"class.absl::optional.1606" = type { %"class.absl::optional_internal::optional_data.1607" }
%"class.absl::optional_internal::optional_data.1607" = type { %"class.absl::optional_internal::optional_data_base.1608" }
%"class.absl::optional_internal::optional_data_base.1608" = type { %"class.absl::optional_internal::optional_data_dtor_base.1609" }
%"class.absl::optional_internal::optional_data_dtor_base.1609" = type { i8, %union.anon.1610 }
%union.anon.1610 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.absl::optional.1615" = type { %"class.absl::optional_internal::optional_data.1616" }
%"class.absl::optional_internal::optional_data.1616" = type { %"class.absl::optional_internal::optional_data_base.1617" }
%"class.absl::optional_internal::optional_data_base.1617" = type { %"class.absl::optional_internal::optional_data_dtor_base.1618" }
%"class.absl::optional_internal::optional_data_dtor_base.1618" = type { i8, %union.anon.1619 }
%union.anon.1619 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1601", [4 x i8] }>
%"class.WTF::RefCounted.1601" = type { %"class.base::RefCounted.1602" }
%"class.base::RefCounted.1602" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1594", i64 }
%"class.std::__1::vector.1594" = type { %"class.std::__1::__vector_base.1595" }
%"class.std::__1::__vector_base.1595" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1596" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1596" = type { %"struct.std::__1::__compressed_pair_elem.1597" }
%"struct.std::__1::__compressed_pair_elem.1597" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1940 }
%class.scoped_refptr.1940 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1941", %"class.WTF::Vector.630", %"class.WTF::Vector.1943", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1941" = type { %"class.base::RefCounted.1942" }
%"class.base::RefCounted.1942" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.1943" = type { %"class.WTF::VectorBuffer.1944" }
%"class.WTF::VectorBuffer.1944" = type { %"class.WTF::VectorBufferBase.1945" }
%"class.WTF::VectorBufferBase.1945" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1946 }
%union.anon.1946 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1382", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1390", i8, i32, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1398", %"class.WTF::HashMap.1400", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1413", i8, i32, %"class.blink::Member.1420", %"class.blink::Member.1422", i32, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.std::__1::unique_ptr.1430", i64, %"class.std::__1::unique_ptr.1436", i32, i32, %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1453", %"class.WTF::Vector.1455", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1460", %"class.blink::Member.1467", %"class.std::__1::unique_ptr.1469", %"class.blink::Member.1475", i8, i8, %"class.WTF::String", %"class.blink::Member.1477", i8, [7 x i8], %"class.blink::HeapHashMap.1479", %"class.blink::HeapObserverSet", %"class.blink::Member.1493", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1495", i32, i8, i8, %"class.blink::WeakMember.1497", %"class.blink::Member.1498" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1522", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1563", i32, i8, [3 x i8], %"class.blink::HeapVector.1565", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1573", %"class.blink::Member.1575", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1584", %"class.blink::Member.1590", %"class.blink::Member.1592", i8, [7 x i8] }>
%"class.blink::Supplementable.1522" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1523" }
%"class.blink::HeapHashMap.1523" = type { %"class.WTF::HashMap.1526" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1529" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1538" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1530" }
%"class.blink::HeapObserverSet.1530" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1531" }
%"class.blink::HeapHashSet.1531" = type { %"class.WTF::HashSet.1534" }
%"class.WTF::HashSet.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"class.blink::WeakMember.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1537" = type opaque
%"class.blink::Supplementable.1538" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1539" }
%"class.blink::HeapHashMap.1539" = type { %"class.WTF::HashMap.1542" }
%"class.WTF::HashMap.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type { i8*, %"class.blink::Member.1926" }
%"class.blink::Member.1926" = type { %"class.blink::MemberBase.1927" }
%"class.blink::MemberBase.1927" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1928" }
%"class.blink::Member.1928" = type { %"class.blink::MemberBase.1929" }
%"class.blink::MemberBase.1929" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1546, %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1553", %"class.std::__1::unique_ptr.1553", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1559", i32, i32 }
%class.scoped_refptr.1546 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1623", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1625", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1630 }
%"class.WTF::RefCounted.1623" = type { %"class.base::RefCounted.1624" }
%"class.base::RefCounted.1624" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1625" = type { %"class.absl::optional_internal::optional_data.1626" }
%"class.absl::optional_internal::optional_data.1626" = type { %"class.absl::optional_internal::optional_data_base.1627" }
%"class.absl::optional_internal::optional_data_base.1627" = type { %"class.absl::optional_internal::optional_data_dtor_base.1628" }
%"class.absl::optional_internal::optional_data_dtor_base.1628" = type { i8, %union.anon.1629 }
%union.anon.1629 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1630 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1547" = type { %"class.std::__1::__compressed_pair.1548" }
%"class.std::__1::__compressed_pair.1548" = type { %"struct.std::__1::__compressed_pair_elem.1549" }
%"struct.std::__1::__compressed_pair_elem.1549" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1553" = type { %"class.std::__1::__compressed_pair.1554" }
%"class.std::__1::__compressed_pair.1554" = type { %"struct.std::__1::__compressed_pair_elem.1555" }
%"struct.std::__1::__compressed_pair_elem.1555" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1559" = type { %"class.WTF::HashTable.1560" }
%"class.WTF::HashTable.1560" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1565" = type { %"class.WTF::Vector.1568" }
%"class.WTF::Vector.1568" = type { %"class.WTF::VectorBuffer.1569" }
%"class.WTF::VectorBuffer.1569" = type { %"class.WTF::VectorBufferBase.1570" }
%"class.WTF::VectorBufferBase.1570" = type { %"class.blink::Member.1571"*, i32, i32 }
%"class.blink::Member.1571" = type opaque
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1575" = type { %"class.blink::MemberBase.1576" }
%"class.blink::MemberBase.1576" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1577", i32, i32 }
%"class.blink::HeapHashMap.1577" = type { %"class.WTF::HashMap.1580" }
%"class.WTF::HashMap.1580" = type { %"class.WTF::HashTable.1581" }
%"class.WTF::HashTable.1581" = type <{ %"struct.WTF::KeyValuePair.1583"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1583" = type opaque
%"class.std::__1::unique_ptr.1584" = type { %"class.std::__1::__compressed_pair.1585" }
%"class.std::__1::__compressed_pair.1585" = type { %"struct.std::__1::__compressed_pair_elem.1586" }
%"struct.std::__1::__compressed_pair_elem.1586" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1513", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1513" = type { %"class.WTF::Vector.1516" }
%"class.WTF::Vector.1516" = type { %"class.WTF::VectorBuffer.1517" }
%"class.WTF::VectorBuffer.1517" = type { %"class.WTF::VectorBufferBase.1518" }
%"class.WTF::VectorBufferBase.1518" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1954 }
%class.scoped_refptr.1954 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.1964" }
%"class.blink::Member.1964" = type { %"class.blink::MemberBase.1965" }
%"class.blink::MemberBase.1965" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.1960" }
%"class.blink::MemberBase.1960" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.1961" }
%"class.blink::MemberBase.1961" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.1962" }
%"class.blink::MemberBase.1962" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.1963" }
%"class.blink::MemberBase.1963" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.1955", %"class.WTF::Vector.1955" }
%"class.WTF::Vector.1955" = type { %"class.WTF::VectorBuffer.1956" }
%"class.WTF::VectorBuffer.1956" = type { %"class.WTF::VectorBufferBase.1957" }
%"class.WTF::VectorBufferBase.1957" = type { %class.scoped_refptr.1954*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1382" = type { %"class.WTF::Vector.1385" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::Member.1388"*, i32, i32 }
%"class.blink::Member.1388" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1455" = type { %"class.WTF::VectorBuffer.1456" }
%"class.WTF::VectorBuffer.1456" = type { %"class.WTF::VectorBufferBase.1457" }
%"class.WTF::VectorBufferBase.1457" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1460" = type { %"class.WTF::HashMap.1463" }
%"class.WTF::HashMap.1463" = type { %"class.WTF::HashTable.1464" }
%"class.WTF::HashTable.1464" = type <{ %"struct.WTF::KeyValuePair.1466"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1466" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1469" = type { %"class.std::__1::__compressed_pair.1470" }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1479" = type { %"class.WTF::HashMap.1482" }
%"class.WTF::HashMap.1482" = type { %"class.WTF::HashTable.1483" }
%"class.WTF::HashTable.1483" = type <{ %"struct.WTF::KeyValuePair.1485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1485" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1486" }
%"class.blink::HeapHashSet.1486" = type { %"class.WTF::HashSet.1489" }
%"class.WTF::HashSet.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"class.blink::WeakMember.1492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1492" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1502", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1509", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::HeapTaskRunnerTimer.1509" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1510", { i64, i64 } }
%"class.blink::WeakMember.1510" = type { %"class.blink::MemberBase.1496" }
%"class.blink::WeakMember.1497" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.1930" }
%"class.WTF::Vector.1930" = type { %"class.WTF::VectorBuffer.1931" }
%"class.WTF::VectorBuffer.1931" = type { %"class.WTF::VectorBufferBase.1932" }
%"class.WTF::VectorBufferBase.1932" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1935", %"class.absl::optional.1935", %"class.absl::optional.1935" }
%"class.absl::optional.1935" = type { %"class.absl::optional_internal::optional_data.1936" }
%"class.absl::optional_internal::optional_data.1936" = type { %"class.absl::optional_internal::optional_data_base.1937" }
%"class.absl::optional_internal::optional_data_base.1937" = type { %"class.absl::optional_internal::optional_data_dtor_base.1938" }
%"class.absl::optional_internal::optional_data_dtor_base.1938" = type { i8, %union.anon.1939 }
%union.anon.1939 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.1950" }
%"class.WTF::VectorBuffer.1950" = type { %"class.WTF::VectorBufferBase.1951", [32 x i8] }
%"class.WTF::VectorBufferBase.1951" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.blink::ObjectPaintInvalidator" = type { %"class.blink::LayoutObject"* }
%"class.blink::LayoutTextFragment" = type { %"class.blink::LayoutText", i32, i32, i8, %class.scoped_refptr.5, %"class.blink::UntracedMember.1968" }
%"class.blink::LayoutText" = type { %"class.blink::LayoutObject", i16, i32, float, float, float, float, %"class.WTF::String", %"struct.blink::LogicalOffset", %union.anon.1966 }
%"struct.blink::LogicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.1966 = type { %"class.blink::InlineTextBoxList" }
%"class.blink::InlineTextBoxList" = type { %"class.blink::InlineBoxList.1967" }
%"class.blink::InlineBoxList.1967" = type { %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"* }
%"class.blink::InlineTextBox" = type opaque
%"class.blink::UntracedMember.1968" = type { %"class.blink::MemberBase.1969" }
%"class.blink::MemberBase.1969" = type { %"class.blink::FirstLetterPseudoElement"* }
%"class.blink::FirstLetterPseudoElement" = type opaque
%"class.blink::Text" = type { %"class.blink::CharacterData" }
%"class.blink::CharacterData" = type { %"class.blink::Node", i8, %"class.blink::ParkableString", %"class.WTF::String" }
%"class.blink::ParkableString" = type { %class.scoped_refptr.1970 }
%class.scoped_refptr.1970 = type { %"class.blink::ParkableStringImpl"* }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.1971", %"class.WTF::String", %"class.std::__1::unique_ptr.1973" }
%"class.WTF::RefCounted.1971" = type { %"class.base::RefCounted.1972" }
%"class.base::RefCounted.1972" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1973" = type { %"class.std::__1::__compressed_pair.1974" }
%"class.std::__1::__compressed_pair.1974" = type { %"struct.std::__1::__compressed_pair_elem.1975" }
%"struct.std::__1::__compressed_pair_elem.1975" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.1976", %"class.std::__1::unique_ptr.1987", %"class.WTF::Vector.1993", i8, i32 }
%"class.std::__1::unique_ptr.1976" = type { %"class.std::__1::__compressed_pair.1977" }
%"class.std::__1::__compressed_pair.1977" = type { %"struct.std::__1::__compressed_pair_elem.1978" }
%"struct.std::__1::__compressed_pair_elem.1978" = type { %"class.WTF::Vector.1979"* }
%"class.WTF::Vector.1979" = type { %"class.WTF::VectorBuffer.1980" }
%"class.WTF::VectorBuffer.1980" = type { %"class.WTF::VectorBufferBase.1981" }
%"class.WTF::VectorBufferBase.1981" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.1987" = type { %"class.std::__1::__compressed_pair.1988" }
%"class.std::__1::__compressed_pair.1988" = type { %"struct.std::__1::__compressed_pair_elem.1989" }
%"struct.std::__1::__compressed_pair_elem.1989" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.1993" = type { %"class.WTF::VectorBuffer.1994" }
%"class.WTF::VectorBuffer.1994" = type { %"class.WTF::VectorBufferBase.1981", [32 x i8] }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1846, %"class.WTF::Vector.1847", %"class.std::__1::unique_ptr.1852", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1873, %"class.blink::Persistent.1874" }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1846 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.1847" = type { %"class.WTF::VectorBuffer.1848" }
%"class.WTF::VectorBuffer.1848" = type { %"class.WTF::VectorBufferBase.1849", [8 x i8] }
%"class.WTF::VectorBufferBase.1849" = type { %class.scoped_refptr.1846*, i32, i32 }
%"class.std::__1::unique_ptr.1852" = type { %"class.std::__1::__compressed_pair.1853" }
%"class.std::__1::__compressed_pair.1853" = type { %"struct.std::__1::__compressed_pair_elem.1854" }
%"struct.std::__1::__compressed_pair_elem.1854" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1855", %"class.absl::optional.1860", %"class.absl::optional.1865" }
%"class.absl::optional.1855" = type { %"class.absl::optional_internal::optional_data.1856" }
%"class.absl::optional_internal::optional_data.1856" = type { %"class.absl::optional_internal::optional_data_base.1857" }
%"class.absl::optional_internal::optional_data_base.1857" = type { %"class.absl::optional_internal::optional_data_dtor_base.1858" }
%"class.absl::optional_internal::optional_data_dtor_base.1858" = type { i8, %union.anon.1859 }
%union.anon.1859 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1860" = type { %"class.absl::optional_internal::optional_data.1861" }
%"class.absl::optional_internal::optional_data.1861" = type { %"class.absl::optional_internal::optional_data_base.1862" }
%"class.absl::optional_internal::optional_data_base.1862" = type { %"class.absl::optional_internal::optional_data_dtor_base.1863" }
%"class.absl::optional_internal::optional_data_dtor_base.1863" = type { i8, [3 x i8], %union.anon.1864 }
%union.anon.1864 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1865" = type { %"class.absl::optional_internal::optional_data.1866" }
%"class.absl::optional_internal::optional_data.1866" = type { %"class.absl::optional_internal::optional_data_base.1867" }
%"class.absl::optional_internal::optional_data_base.1867" = type { %"class.absl::optional_internal::optional_data_dtor_base.1868" }
%"class.absl::optional_internal::optional_data_dtor_base.1868" = type { i8, %union.anon.1869 }
%union.anon.1869 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1873 = type { %"class.blink::InlineBox"* }
%"class.blink::Persistent.1874" = type { %"class.blink::PersistentBase.1875" }
%"class.blink::PersistentBase.1875" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1878", %"struct.blink::PhysicalRect", %"class.blink::Member.1888" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.std::__1::unique_ptr.1878" = type { %"class.std::__1::__compressed_pair.1879" }
%"class.std::__1::__compressed_pair.1879" = type { %"struct.std::__1::__compressed_pair_elem.1880" }
%"struct.std::__1::__compressed_pair_elem.1880" = type { %"class.WTF::HashSet.1881"* }
%"class.WTF::HashSet.1881" = type { %"class.WTF::HashTable.1882" }
%"class.WTF::HashTable.1882" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1888" = type { %"class.blink::MemberBase.1889" }
%"class.blink::MemberBase.1889" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"struct.blink::PaintInfo" = type <{ %"class.blink::GraphicsContext"*, i32, %"class.blink::CullRect", [4 x i8], %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutUnit", i32, i32, i8, i8, [2 x i8] }>
%"class.blink::GraphicsContext" = type { %"class.cc::PaintCanvas"*, %"class.blink::PaintController"*, %"class.WTF::Vector.1706", i32, %"class.blink::GraphicsContextState"*, %"class.cc::PaintRecorder", %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"*, float, %"class.std::__1::unique_ptr.1786", i8, i8, i8, i32 }
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1631, %class.scoped_refptr.1631, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1686", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1691", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1631 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1632", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1639" }
%"class.WTF::RefCounted.1632" = type { %"class.base::RefCounted.1633" }
%"class.base::RefCounted.1633" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1634", i32, [4 x i8] }>
%"class.WTF::Vector.1634" = type { %"class.WTF::VectorBuffer.1635" }
%"class.WTF::VectorBuffer.1635" = type { %"class.WTF::VectorBufferBase.1636" }
%"class.WTF::VectorBufferBase.1636" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1639" = type { %"class.WTF::VectorBuffer.1640" }
%"class.WTF::VectorBuffer.1640" = type { %"class.WTF::VectorBufferBase.1641" }
%"class.WTF::VectorBufferBase.1641" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1642", %"class.std::__1::unique_ptr.1658", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1642" = type { %"class.std::__1::__compressed_pair.1643" }
%"class.std::__1::__compressed_pair.1643" = type { %"struct.std::__1::__compressed_pair_elem.1644" }
%"struct.std::__1::__compressed_pair_elem.1644" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1645", %"class.WTF::Vector.1650", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1645" = type { %"class.WTF::VectorBuffer.1646" }
%"class.WTF::VectorBuffer.1646" = type { %"class.WTF::VectorBufferBase.1647" }
%"class.WTF::VectorBufferBase.1647" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1650" = type { %"class.WTF::VectorBuffer.1651" }
%"class.WTF::VectorBuffer.1651" = type { %"class.WTF::VectorBufferBase.1652" }
%"class.WTF::VectorBufferBase.1652" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.std::__1::unique_ptr.1658" = type { %"class.std::__1::__compressed_pair.1659" }
%"class.std::__1::__compressed_pair.1659" = type { %"struct.std::__1::__compressed_pair_elem.1660" }
%"struct.std::__1::__compressed_pair_elem.1660" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1661", %"class.absl::optional.1661" }
%"class.absl::optional.1661" = type { %"class.absl::optional_internal::optional_data.1662" }
%"class.absl::optional_internal::optional_data.1662" = type { %"class.absl::optional_internal::optional_data_base.1663" }
%"class.absl::optional_internal::optional_data_base.1663" = type { %"class.absl::optional_internal::optional_data_dtor_base.1664" }
%"class.absl::optional_internal::optional_data_dtor_base.1664" = type { i8, [3 x i8], %union.anon.1665 }
%union.anon.1665 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1639"*, %"class.absl::optional.1671", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1671" = type { %"class.absl::optional_internal::optional_data.1672" }
%"class.absl::optional_internal::optional_data.1672" = type { %"class.absl::optional_internal::optional_data_base.1673" }
%"class.absl::optional_internal::optional_data_base.1673" = type { %"class.absl::optional_internal::optional_data_dtor_base.1674" }
%"class.absl::optional_internal::optional_data_dtor_base.1674" = type { i8, %union.anon.1675 }
%union.anon.1675 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1676", %"class.WTF::Vector.1681" }
%"class.WTF::Vector.1676" = type { %"class.WTF::VectorBuffer.1677" }
%"class.WTF::VectorBuffer.1677" = type { %"class.WTF::VectorBufferBase.1678", [128 x i8] }
%"class.WTF::VectorBufferBase.1678" = type { i32*, i32, i32 }
%"class.WTF::Vector.1681" = type { %"class.WTF::VectorBuffer.1682" }
%"class.WTF::VectorBuffer.1682" = type { %"class.WTF::VectorBufferBase.1683", [128 x i8] }
%"class.WTF::VectorBufferBase.1683" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1686" = type { %"class.WTF::VectorBuffer.1687" }
%"class.WTF::VectorBuffer.1687" = type { %"class.WTF::VectorBufferBase.1688" }
%"class.WTF::VectorBufferBase.1688" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1691" = type { %"class.WTF::HashTable.1692" }
%"class.WTF::HashTable.1692" = type <{ %"struct.WTF::KeyValuePair.1695"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1695" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1696", %"class.WTF::Vector.1701" }
%"class.WTF::HashMap.1696" = type { %"class.WTF::HashTable.1697" }
%"class.WTF::HashTable.1697" = type <{ %"struct.WTF::KeyValuePair.1700"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1700" = type opaque
%"class.WTF::Vector.1701" = type { %"class.WTF::VectorBuffer.1702" }
%"class.WTF::VectorBuffer.1702" = type { %"class.WTF::VectorBufferBase.1703" }
%"class.WTF::VectorBufferBase.1703" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.WTF::Vector.1706" = type { %"class.WTF::VectorBuffer.1707" }
%"class.WTF::VectorBuffer.1707" = type { %"class.WTF::VectorBufferBase.1708" }
%"class.WTF::VectorBufferBase.1708" = type { %"class.std::__1::unique_ptr.1709"*, i32, i32 }
%"class.std::__1::unique_ptr.1709" = type { %"class.std::__1::__compressed_pair.1710" }
%"class.std::__1::__compressed_pair.1710" = type { %"struct.std::__1::__compressed_pair_elem.1711" }
%"struct.std::__1::__compressed_pair_elem.1711" = type { %"class.blink::GraphicsContextState"* }
%"class.blink::GraphicsContextState" = type <{ %"class.cc::PaintFlags", %"class.cc::PaintFlags", %"class.blink::StrokeData", i32, i32, i16, i8, [5 x i8] }>
%"class.cc::PaintFlags" = type <{ %class.sk_sp.1712, %class.sk_sp.1713, %class.sk_sp.1751, %class.sk_sp.1752, %class.sk_sp.1753, %class.sk_sp.817, i32, float, float, i32, %union.anon.1754, [4 x i8] }>
%class.sk_sp.1712 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.1713 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional.1714", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.1722, i32, %"class.absl::optional.1738", %"class.std::__1::vector.842", %"class.std::__1::vector.1743", %class.sk_sp.1750, %class.sk_sp.1719, i32, [4 x i8] }>
%"class.absl::optional.1714" = type { %"class.absl::optional_internal::optional_data.1715" }
%"class.absl::optional_internal::optional_data.1715" = type { %"class.absl::optional_internal::optional_data_base.1716" }
%"class.absl::optional_internal::optional_data_base.1716" = type { %"class.absl::optional_internal::optional_data_dtor_base.1717" }
%"class.absl::optional_internal::optional_data_dtor_base.1717" = type { i8, %union.anon.1718 }
%union.anon.1718 = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%"class.cc::PaintImage" = type { %class.sk_sp.1719, %class.sk_sp.1722, %"class.gfx::Rect", i32, %class.sk_sp.1727, %class.sk_sp.1735, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.1719, %class.scoped_refptr.1736 }
%class.sk_sp.1727 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector.1728" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.1720, i32, i32 }
%class.sk_sp.1720 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.1721, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.1721 = type { %"struct.std::__1::atomic.41" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::vector.1728" = type { %"class.std::__1::__vector_base.1729" }
%"class.std::__1::__vector_base.1729" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.1730" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.std::__1::__compressed_pair.1730" = type { %"struct.std::__1::__compressed_pair_elem.1731" }
%"struct.std::__1::__compressed_pair_elem.1731" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.1735 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type { %class.SkRefCnt.base, [4 x i8] }
%class.scoped_refptr.1736 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1737", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1737" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.sk_sp.1722 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.1723", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1723" = type { %"class.std::__1::__compressed_pair.1724" }
%"class.std::__1::__compressed_pair.1724" = type { %"struct.std::__1::__compressed_pair_elem.1725" }
%"struct.std::__1::__compressed_pair_elem.1725" = type { i8* }
%"class.absl::optional.1738" = type { %"class.absl::optional_internal::optional_data.1739" }
%"class.absl::optional_internal::optional_data.1739" = type { %"class.absl::optional_internal::optional_data_base.1740" }
%"class.absl::optional_internal::optional_data_base.1740" = type { %"class.absl::optional_internal::optional_data_dtor_base.1741" }
%"class.absl::optional_internal::optional_data_dtor_base.1741" = type { i8, %union.anon.1742 }
%union.anon.1742 = type { %"class.gfx::SizeF" }
%"class.std::__1::vector.1743" = type { %"class.std::__1::__vector_base.1744" }
%"class.std::__1::__vector_base.1744" = type { float*, float*, %"class.std::__1::__compressed_pair.1745" }
%"class.std::__1::__compressed_pair.1745" = type { %"struct.std::__1::__compressed_pair_elem.1746" }
%"struct.std::__1::__compressed_pair_elem.1746" = type { float* }
%class.sk_sp.1750 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.238", [7 x i8] }>
%class.sk_sp.1719 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.sk_sp.1751 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.1752 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.1753 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%union.anon.1754 = type { i32 }
%"class.blink::StrokeData" = type { i32, float, i32, i32, float, %class.sk_sp.1712 }
%"class.cc::PaintRecorder" = type { i32 (...)**, %class.scoped_refptr.1760, %"class.std::__1::unique_ptr.1761" }
%class.scoped_refptr.1760 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.std::__1::unique_ptr.1761" = type { %"class.std::__1::__compressed_pair.1762" }
%"class.std::__1::__compressed_pair.1762" = type { %"struct.std::__1::__compressed_pair_elem.1763" }
%"struct.std::__1::__compressed_pair_elem.1763" = type { %"class.cc::RecordPaintCanvas"* }
%"class.cc::RecordPaintCanvas" = type { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, %"class.absl::optional.1764", %struct.SkRect }
%"class.absl::optional.1764" = type { %"class.absl::optional_internal::optional_data.1765" }
%"class.absl::optional_internal::optional_data.1765" = type { %"class.absl::optional_internal::optional_data_base.1766" }
%"class.absl::optional_internal::optional_data_base.1766" = type { %"class.absl::optional_internal::optional_data_dtor_base.1767" }
%"class.absl::optional_internal::optional_data_dtor_base.1767" = type { i8, %union.anon.1768 }
%union.anon.1768 = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.1769, [384 x i64], %class.sk_sp.1770, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.1771", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.1777" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.1769 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.1770 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.1771" = type { %"class.std::__1::__compressed_pair.1772" }
%"class.std::__1::__compressed_pair.1772" = type { %"struct.std::__1::__compressed_pair_elem.1773" }
%"struct.std::__1::__compressed_pair_elem.1773" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.1777" = type { %"class.std::__1::__compressed_pair.1778" }
%"class.std::__1::__compressed_pair.1778" = type { %"struct.std::__1::__compressed_pair_elem.1779" }
%"struct.std::__1::__compressed_pair_elem.1779" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%"class.std::__1::unique_ptr.1786" = type { %"class.std::__1::__compressed_pair.1787" }
%"class.std::__1::__compressed_pair.1787" = type { %"struct.std::__1::__compressed_pair_elem.1788" }
%"struct.std::__1::__compressed_pair_elem.1788" = type { %"class.blink::DarkModeFilter"* }
%"class.blink::DarkModeFilter" = type { %"struct.blink::DarkModeFilter::ImmutableData", %"class.absl::optional.1807", %"class.std::__1::unique_ptr.1812" }
%"struct.blink::DarkModeFilter::ImmutableData" = type { %"struct.blink::DarkModeSettings", %"class.std::__1::unique_ptr.1789", %"class.std::__1::unique_ptr.1789", %"class.std::__1::unique_ptr.1795", %"class.std::__1::unique_ptr.1801", %class.sk_sp.1752 }
%"struct.blink::DarkModeSettings" = type <{ i32, i8, [3 x i8], float, float, i32, i32, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1789" = type { %"class.std::__1::__compressed_pair.1790" }
%"class.std::__1::__compressed_pair.1790" = type { %"struct.std::__1::__compressed_pair_elem.1791" }
%"struct.std::__1::__compressed_pair_elem.1791" = type { %"class.blink::DarkModeColorClassifier"* }
%"class.blink::DarkModeColorClassifier" = type opaque
%"class.std::__1::unique_ptr.1795" = type { %"class.std::__1::__compressed_pair.1796" }
%"class.std::__1::__compressed_pair.1796" = type { %"struct.std::__1::__compressed_pair_elem.1797" }
%"struct.std::__1::__compressed_pair_elem.1797" = type { %"class.blink::DarkModeImageClassifier"* }
%"class.blink::DarkModeImageClassifier" = type opaque
%"class.std::__1::unique_ptr.1801" = type { %"class.std::__1::__compressed_pair.1802" }
%"class.std::__1::__compressed_pair.1802" = type { %"struct.std::__1::__compressed_pair_elem.1803" }
%"struct.std::__1::__compressed_pair_elem.1803" = type { %"class.blink::DarkModeColorFilter"* }
%"class.blink::DarkModeColorFilter" = type opaque
%"class.absl::optional.1807" = type { %"class.absl::optional_internal::optional_data.1808" }
%"class.absl::optional_internal::optional_data.1808" = type { %"class.absl::optional_internal::optional_data_base.1809" }
%"class.absl::optional_internal::optional_data_base.1809" = type { %"class.absl::optional_internal::optional_data_dtor_base.1810" }
%"class.absl::optional_internal::optional_data_dtor_base.1810" = type { i8, %union.anon.1811 }
%union.anon.1811 = type { i32 }
%"class.std::__1::unique_ptr.1812" = type { %"class.std::__1::__compressed_pair.1813" }
%"class.std::__1::__compressed_pair.1813" = type { %"struct.std::__1::__compressed_pair_elem.1814" }
%"struct.std::__1::__compressed_pair_elem.1814" = type { %"class.blink::DarkModeInvertedColorCache"* }
%"class.blink::DarkModeInvertedColorCache" = type opaque
%"class.blink::HitTestResult" = type { %"class.blink::HitTestRequest", i8, %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.343", %"class.blink::Member.318", %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset", %"class.blink::Member.343", %"class.blink::Member.1821", i8, %"class.blink::Member.1823", %"class.WTF::String" }
%"class.blink::HitTestRequest" = type { i32, %"class.blink::LayoutObject"* }
%"class.blink::Member.1821" = type { %"class.blink::MemberBase.1822" }
%"class.blink::MemberBase.1822" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1827", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1837", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.343" }
%"class.blink::Member.1827" = type { %"class.blink::MemberBase.1828" }
%"class.blink::MemberBase.1828" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.1829", %"class.blink::Member.1831", %"class.blink::Member.1833", %"class.blink::Member.1835", %"class.WTF::Vector.906", i16, %class.scoped_refptr.963 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.1829" = type { %"class.blink::MemberBase.1830" }
%"class.blink::MemberBase.1830" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1831" = type { %"class.blink::MemberBase.1832" }
%"class.blink::MemberBase.1832" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1833" = type { %"class.blink::MemberBase.1834" }
%"class.blink::MemberBase.1834" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1835" = type { %"class.blink::MemberBase.1836" }
%"class.blink::MemberBase.1836" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer.1837" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1838", { i64, i64 } }
%"class.blink::WeakMember.1838" = type { %"class.blink::MemberBase.1822" }
%"class.blink::Member.1823" = type { %"class.blink::MemberBase.1824" }
%"class.blink::MemberBase.1824" = type { %"class.blink::HeapLinkedHashSet"* }
%"class.blink::HeapLinkedHashSet" = type opaque
%"class.blink::HitTestLocation" = type <{ %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalRect", %"class.blink::FloatPoint", %"class.blink::FloatQuad", i32, i8, i8, [2 x i8] }>
%"class.blink::FloatQuad" = type { %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint" }
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.1839, %"class.std::__1::unique_ptr.1840", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.1839 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.1895", i16, %class.scoped_refptr.1839 }
%"class.WTF::ThreadSafeRefCounted.1895" = type { %"class.base::RefCountedThreadSafe.1896" }
%"class.base::RefCountedThreadSafe.1896" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1840" = type { %"class.std::__1::__compressed_pair.1841" }
%"class.std::__1::__compressed_pair.1841" = type { %"struct.std::__1::__compressed_pair_elem.1842" }
%"struct.std::__1::__compressed_pair_elem.1842" = type { %"class.WTF::Vector.1843"* }
%"class.WTF::Vector.1843" = type { %"class.WTF::VectorBuffer.1844" }
%"class.WTF::VectorBuffer.1844" = type { %"class.WTF::VectorBufferBase.1845" }
%"class.WTF::VectorBufferBase.1845" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.1897", %"class.std::__1::unique_ptr.1907" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::Persistent.1897" = type { %"class.blink::PersistentBase.1898" }
%"class.blink::PersistentBase.1898" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.1901", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type opaque
%"class.std::__1::unique_ptr.1901" = type { %"class.std::__1::__compressed_pair.1902" }
%"class.std::__1::__compressed_pair.1902" = type { %"struct.std::__1::__compressed_pair_elem.1903" }
%"struct.std::__1::__compressed_pair_elem.1903" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type opaque
%"class.std::__1::unique_ptr.1907" = type { %"class.std::__1::__compressed_pair.1908" }
%"class.std::__1::__compressed_pair.1908" = type { %"struct.std::__1::__compressed_pair_elem.1909" }
%"struct.std::__1::__compressed_pair_elem.1909" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.1910", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.1910" = type { %"class.WTF::HashTable.1913", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.1913" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.1916", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.1916" = type { %"class.std::__1::__compressed_pair.1917" }
%"class.std::__1::__compressed_pair.1917" = type { %"struct.std::__1::__compressed_pair_elem.1918" }
%"struct.std::__1::__compressed_pair_elem.1918" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.1922, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%class.scoped_refptr.1922 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>

$_ZNK5blink14LineLayoutItem5StyleEb = comdat any

$_ZNK5blink20LayoutBoxModelObject29BorderAndPaddingLogicalHeightEv = comdat any

@.str = private unnamed_addr constant [10 x i8] c"InlineBox\00", align 1
@_ZN3WTF10Partitions12layout_root_E = external local_unnamed_addr global %"struct.base::PartitionRoot"*, align 8
@.str.1 = private unnamed_addr constant [64 x i8] c"../../third_party/blink/renderer/core/css/css_global_rule_set.h\00", align 1
@.str.2 = private unnamed_addr constant [20 x i8] c"features_.IsAlive()\00", align 1
@.str.3 = private unnamed_addr constant [58 x i8] c"../../third_party/blink/renderer/core/layout/layout_box.h\00", align 1
@.str.4 = private unnamed_addr constant [39 x i8] c"!IsInLayoutNGInlineFormattingContext()\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase21is_layout_ng_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase26is_layout_ng_grid_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase31is_bidi_caret_affinity_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase33is_css_container_queries_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN4base19PartitionAllocHooks14hooks_enabled_E = external local_unnamed_addr global %"struct.std::__1::atomic.238", align 1
@_ZZN4base8internal17BucketIndexLookup8GetIndexEmE6lookup = internal unnamed_addr constant { [128 x i64], [521 x i16] } { [128 x i64] [i64 16, i64 18, i64 20, i64 22, i64 24, i64 26, i64 28, i64 30, i64 32, i64 36, i64 40, i64 44, i64 48, i64 52, i64 56, i64 60, i64 64, i64 72, i64 80, i64 88, i64 96, i64 104, i64 112, i64 120, i64 128, i64 144, i64 160, i64 176, i64 192, i64 208, i64 224, i64 240, i64 256, i64 288, i64 320, i64 352, i64 384, i64 416, i64 448, i64 480, i64 512, i64 576, i64 640, i64 704, i64 768, i64 832, i64 896, i64 960, i64 1024, i64 1152, i64 1280, i64 1408, i64 1536, i64 1664, i64 1792, i64 1920, i64 2048, i64 2304, i64 2560, i64 2816, i64 3072, i64 3328, i64 3584, i64 3840, i64 4096, i64 4608, i64 5120, i64 5632, i64 6144, i64 6656, i64 7168, i64 7680, i64 8192, i64 9216, i64 10240, i64 11264, i64 12288, i64 13312, i64 14336, i64 15360, i64 16384, i64 18432, i64 20480, i64 22528, i64 24576, i64 26624, i64 28672, i64 30720, i64 32768, i64 36864, i64 40960, i64 45056, i64 49152, i64 53248, i64 57344, i64 61440, i64 65536, i64 73728, i64 81920, i64 90112, i64 98304, i64 106496, i64 114688, i64 122880, i64 131072, i64 147456, i64 163840, i64 180224, i64 196608, i64 212992, i64 229376, i64 245760, i64 262144, i64 294912, i64 327680, i64 360448, i64 393216, i64 425984, i64 458752, i64 491520, i64 524288, i64 589824, i64 655360, i64 720896, i64 786432, i64 851968, i64 917504, i64 983040], [521 x i16] [i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 12, i16 12, i16 12, i16 12, i16 16, i16 16, i16 16, i16 16, i16 18, i16 18, i16 20, i16 20, i16 22, i16 22, i16 24, i16 24, i16 25, i16 26, i16 27, i16 28, i16 29, i16 30, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 88, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 113, i16 114, i16 115, i16 116, i16 117, i16 118, i16 119, i16 120, i16 121, i16 122, i16 123, i16 124, i16 125, i16 126, i16 127, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128] }, align 8
@_ZN4base12_GLOBAL__N_116kOrderIndexShiftE = internal unnamed_addr constant [65 x i8] c"\00\00\00\00\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F !\22#$%&'()*+,-./0123456789:;<", align 16
@_ZN4base12_GLOBAL__N_118kOrderSubIndexMaskE = internal unnamed_addr constant [65 x i64] [i64 0, i64 0, i64 0, i64 0, i64 0, i64 1, i64 3, i64 7, i64 15, i64 31, i64 63, i64 127, i64 255, i64 511, i64 1023, i64 2047, i64 4095, i64 8191, i64 16383, i64 32767, i64 65535, i64 131071, i64 262143, i64 524287, i64 1048575, i64 2097151, i64 4194303, i64 8388607, i64 16777215, i64 33554431, i64 67108863, i64 134217727, i64 268435455, i64 536870911, i64 1073741823, i64 2147483647, i64 4294967295, i64 8589934591, i64 17179869183, i64 34359738367, i64 68719476735, i64 137438953471, i64 274877906943, i64 549755813887, i64 1099511627775, i64 2199023255551, i64 4398046511103, i64 8796093022207, i64 17592186044415, i64 35184372088831, i64 70368744177663, i64 140737488355327, i64 281474976710655, i64 562949953421311, i64 1125899906842623, i64 2251799813685247, i64 4503599627370495, i64 9007199254740991, i64 18014398509481983, i64 36028797018963967, i64 72057594037927935, i64 144115188075855871, i64 288230376151711743, i64 576460752303423487, i64 1152921504606846975], align 16
@_ZN4base8internal6PCScan9instance_E = external global %"class.base::internal::PCScan", align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9InlineBoxEEEPKcv = private unnamed_addr constant [64 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::InlineBox]\00", align 1
@.str.6 = private unnamed_addr constant [105 x i8] c"../../base/allocator/partition_allocator/partition_page.h(549) Check failed: slot_start != freelist_head\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9InlineBoxdlEPv(i8*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.base::internal::DeferredUnmap", align 8
  %3 = icmp eq i8* %0, null
  br i1 %3, label %136, label %4, !prof !2

4:                                                ; preds = %1
  %5 = load atomic i8, i8* getelementptr inbounds (%"struct.std::__1::atomic.238", %"struct.std::__1::atomic.238"* @_ZN4base19PartitionAllocHooks14hooks_enabled_E, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 1
  %6 = and i8 %5, 1
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %4
  tail call void @_ZN4base19PartitionAllocHooks25FreeObserverHookIfEnabledEPv(i8* nonnull %0) #13
  %9 = tail call zeroext i1 @_ZN4base19PartitionAllocHooks25FreeOverrideHookIfEnabledEPv(i8* nonnull %0) #13
  br i1 %9, label %136, label %10

10:                                               ; preds = %8, %4
  tail call void @llvm.prefetch(i8* nonnull %0, i32 0, i32 3, i32 1) #13
  %11 = ptrtoint i8* %0 to i64
  %12 = and i64 %11, -2097152
  %13 = or i64 %12, 4096
  %14 = inttoptr i64 %13 to i8*
  %15 = lshr i64 %11, 9
  %16 = and i64 %15, 4064
  %17 = getelementptr inbounds i8, i8* %14, i64 %16
  %18 = bitcast i8* %17 to %"struct.base::internal::PartitionPage"*
  %19 = getelementptr inbounds i8, i8* %17, i64 30
  %20 = load i8, i8* %19, align 2
  %21 = zext i8 %20 to i64
  %22 = sub nsw i64 0, %21
  %23 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %18, i64 %22, i32 0
  %24 = bitcast %union.anon.2005* %23 to %"struct.base::internal::SlotSpanMetadata"*
  %25 = bitcast %union.anon.2005* %23 to i8*
  tail call void @llvm.prefetch(i8* %25, i32 0, i32 3, i32 1) #13
  %26 = ptrtoint %union.anon.2005* %23 to i64
  %27 = and i64 %26, -4096
  %28 = inttoptr i64 %27 to %"struct.base::internal::PartitionSuperPageExtentEntry"*
  %29 = getelementptr inbounds %"struct.base::internal::PartitionSuperPageExtentEntry", %"struct.base::internal::PartitionSuperPageExtentEntry"* %28, i64 0, i32 0
  %30 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %29, align 4096
  %31 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %30, i64 0, i32 0
  %32 = load i8, i8* %31, align 8
  %33 = icmp eq i8 %32, 2
  br i1 %33, label %34, label %103, !prof !2

34:                                               ; preds = %10
  %35 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %36 = icmp eq i8 %35, 2
  br i1 %36, label %37, label %38, !prof !2

37:                                               ; preds = %34
  tail call void @_ZN4base8internal6PCScan8JoinScanEv() #13
  br label %38

38:                                               ; preds = %37, %34
  %39 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %18, i64 %22, i32 0, i32 1, i64 8
  %40 = bitcast i8* %39 to %"struct.base::internal::PartitionBucket"**
  %41 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %40, align 1
  %42 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %30, i64 0, i32 9, i64 0
  %43 = icmp ugt %"struct.base::internal::PartitionBucket"* %42, %41
  %44 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %30, i64 0, i32 10
  %45 = icmp ult %"struct.base::internal::PartitionBucket"* %44, %41
  %46 = or i1 %43, %45
  br i1 %46, label %103, label %47, !prof !2

47:                                               ; preds = %38
  %48 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %18, i64 %22, i32 0, i32 1, i64 21
  %49 = load i8, i8* %48, align 1, !range !3
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %55, !prof !4

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %41, i64 0, i32 3
  %53 = load i32, i32* %52, align 8
  %54 = zext i32 %53 to i64
  br label %62

55:                                               ; preds = %47
  %56 = bitcast %union.anon.2005* %23 to %"struct.base::internal::PartitionPage"*
  %57 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %56, i64 1, i32 0, i32 0, i32 0
  %58 = load i64, i64* %57, align 1
  %59 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %41, i64 0, i32 3
  %60 = load i32, i32* %59, align 8
  %61 = zext i32 %60 to i64
  br label %62

62:                                               ; preds = %55, %51
  %63 = phi i64 [ %54, %51 ], [ %61, %55 ]
  %64 = phi i64 [ %54, %51 ], [ %58, %55 ]
  %65 = load atomic i64, i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %66 = inttoptr i64 %12 to i8*
  %67 = and i64 %65, 1
  %68 = icmp eq i64 %67, 0
  %69 = select i1 %68, i64 16384, i64 32768
  %70 = getelementptr inbounds i8, i8* %66, i64 %69
  %71 = bitcast i8* %70 to %"class.base::internal::ObjectBitmap"*
  %72 = lshr i64 %11, 4
  %73 = lshr i64 %11, 10
  %74 = and i64 %73, 2047
  %75 = and i64 %72, 63
  %76 = shl i64 1, %75
  %77 = getelementptr inbounds %"class.base::internal::ObjectBitmap", %"class.base::internal::ObjectBitmap"* %71, i64 0, i32 0, i32 0, i64 %74
  %78 = atomicrmw or i64* %77, i64 %76 monotonic
  %79 = and i64 %78, %76
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %82, label %81, !prof !4

81:                                               ; preds = %62
  notail call void @_ZN4base8internal17DoubleFreeAttemptEv() #14
  unreachable

82:                                               ; preds = %62
  %83 = atomicrmw add i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0), i64 %63 monotonic
  %84 = add i64 %83, %63
  %85 = load atomic i64, i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %86 = icmp ugt i64 %84, %85
  br i1 %86, label %87, label %93

87:                                               ; preds = %82
  %88 = load %"class.base::internal::PCScanSchedulingBackend"*, %"class.base::internal::PCScanSchedulingBackend"** getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 2), align 8
  %89 = bitcast %"class.base::internal::PCScanSchedulingBackend"* %88 to i1 (%"class.base::internal::PCScanSchedulingBackend"*)***
  %90 = load i1 (%"class.base::internal::PCScanSchedulingBackend"*)**, i1 (%"class.base::internal::PCScanSchedulingBackend"*)*** %89, align 8
  %91 = load i1 (%"class.base::internal::PCScanSchedulingBackend"*)*, i1 (%"class.base::internal::PCScanSchedulingBackend"*)** %90, align 8
  %92 = tail call zeroext i1 %91(%"class.base::internal::PCScanSchedulingBackend"* %88) #13
  br label %93

93:                                               ; preds = %87, %82
  %94 = phi i1 [ false, %82 ], [ %92, %87 ]
  %95 = load i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 2), align 1
  %96 = icmp eq i8 %95, 1
  br i1 %96, label %97, label %98

97:                                               ; preds = %93
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %0, i8 0, i64 %64, i1 false) #13
  br label %98

98:                                               ; preds = %97, %93
  br i1 %94, label %99, label %136, !prof !2

99:                                               ; preds = %98
  %100 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %102, label %136

102:                                              ; preds = %99
  tail call void @_ZN4base8internal6PCScan11PerformScanENS1_14InvocationModeE(%"class.base::internal::PCScan"* nonnull @_ZN4base8internal6PCScan9instance_E, i32 1) #13
  br label %136

103:                                              ; preds = %38, %10
  %104 = bitcast %"struct.base::internal::DeferredUnmap"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %104) #13
  %105 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %2, i64 0, i32 0
  %106 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %2, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %104, i8 0, i64 16, i1 false) #13
  %107 = bitcast %union.anon.2005* %23 to i8**
  %108 = load i8*, i8** %107, align 1
  %109 = icmp eq i8* %108, %0
  br i1 %109, label %112, label %110, !prof !2

110:                                              ; preds = %103
  %111 = ptrtoint i8* %108 to i64
  br label %115

112:                                              ; preds = %103
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.6, i64 0, i64 0)) #13
  %113 = getelementptr inbounds %union.anon.2005, %union.anon.2005* %23, i64 0, i32 0, i32 0
  %114 = load i64, i64* %113, align 1
  br label %115

115:                                              ; preds = %112, %110
  %116 = phi i64 [ %111, %110 ], [ %114, %112 ]
  %117 = tail call i64 @llvm.bswap.i64(i64 %116) #13
  %118 = inttoptr i64 %117 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %119 = bitcast i8* %0 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %118, %"struct.base::internal::EncodedPartitionFreelistEntry"** %119, align 8
  %120 = xor i64 %117, -1
  %121 = getelementptr inbounds i8, i8* %0, i64 8
  %122 = bitcast i8* %121 to i64*
  store i64 %120, i64* %122, align 8
  store i8* %0, i8** %107, align 1
  %123 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %18, i64 %22, i32 0, i32 1, i64 16
  %124 = bitcast i8* %123 to i16*
  %125 = load i16, i16* %124, align 1
  %126 = add i16 %125, -1
  store i16 %126, i16* %124, align 1
  %127 = icmp slt i16 %126, 1
  br i1 %127, label %129, label %128, !prof !2

128:                                              ; preds = %115
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %104, i8 0, i64 16, i1 false) #13
  br label %135

129:                                              ; preds = %115
  %130 = tail call { i8*, i64 } @_ZN4base8internal16SlotSpanMetadataILb0EE12FreeSlowPathEv(%"struct.base::internal::SlotSpanMetadata"* %24) #13
  %131 = extractvalue { i8*, i64 } %130, 0
  %132 = extractvalue { i8*, i64 } %130, 1
  store i8* %131, i8** %105, align 8
  store i64 %132, i64* %106, align 8
  %133 = icmp eq i8* %131, null
  br i1 %133, label %135, label %134, !prof !4

134:                                              ; preds = %129
  call void @_ZN4base8internal13DeferredUnmap5UnmapEv(%"struct.base::internal::DeferredUnmap"* nonnull %2) #13
  br label %135

135:                                              ; preds = %134, %129, %128
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #13
  br label %136

136:                                              ; preds = %1, %8, %98, %99, %102, %135
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9InlineBox7DestroyEv(%"class.blink::InlineBox"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::ObjectPaintInvalidator", align 8
  %3 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.blink::LineLayoutItem", %"class.blink::LineLayoutItem"* %3, i64 0, i32 0
  %5 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %5, i64 0, i32 6, i32 0, i32 0
  %7 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %8 = icmp eq %"class.blink::Node"* %7, null
  br i1 %8, label %9, label %16

9:                                                ; preds = %1, %9
  %10 = phi %"class.blink::LayoutObject"* [ %12, %9 ], [ %5, %1 ]
  %11 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %10, i64 0, i32 7
  %12 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %12, i64 0, i32 6, i32 0, i32 0
  %14 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %15 = icmp eq %"class.blink::Node"* %14, null
  br i1 %15, label %9, label %16

16:                                               ; preds = %9, %1
  %17 = phi %"class.blink::Node"* [ %7, %1 ], [ %14, %9 ]
  %18 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %17, i64 0, i32 3, i32 0, i32 0
  %19 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %19, i64 0, i32 2, i32 0, i32 0
  %21 = load %"class.blink::Document"*, %"class.blink::Document"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %21, i64 0, i32 5, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp sgt i32 %23, 19
  br i1 %24, label %44, label %25

25:                                               ; preds = %16
  %26 = bitcast %"class.blink::InlineBox"* %0 to i1 (%"class.blink::InlineBox"*)***
  %27 = load i1 (%"class.blink::InlineBox"*)**, i1 (%"class.blink::InlineBox"*)*** %26, align 8
  %28 = getelementptr inbounds i1 (%"class.blink::InlineBox"*)*, i1 (%"class.blink::InlineBox"*)** %27, i64 16
  %29 = load i1 (%"class.blink::InlineBox"*)*, i1 (%"class.blink::InlineBox"*)** %28, align 8
  %30 = tail call zeroext i1 %29(%"class.blink::InlineBox"* %0) #13
  br i1 %30, label %31, label %36

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %0, i64 0, i32 7, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %31, %25
  %37 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %0, i64 0, i32 4, i32 0
  %38 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  tail call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %38, i8 zeroext 3) #13
  br label %39

39:                                               ; preds = %31, %36
  %40 = bitcast %"class.blink::ObjectPaintInvalidator"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #13
  %41 = bitcast %"class.blink::LineLayoutItem"* %3 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.blink::ObjectPaintInvalidator"* %2 to i64*
  store i64 %42, i64* %43, align 8
  call void @_ZN5blink22ObjectPaintInvalidator32SlowSetPaintingLayerNeedsRepaintEv(%"class.blink::ObjectPaintInvalidator"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #13
  br label %44

44:                                               ; preds = %39, %16
  %45 = icmp eq %"class.blink::InlineBox"* %0, null
  br i1 %45, label %51, label %46

46:                                               ; preds = %44
  %47 = bitcast %"class.blink::InlineBox"* %0 to void (%"class.blink::InlineBox"*)***
  %48 = load void (%"class.blink::InlineBox"*)**, void (%"class.blink::InlineBox"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.blink::InlineBox"*)*, void (%"class.blink::InlineBox"*)** %48, i64 1
  %50 = load void (%"class.blink::InlineBox"*)*, void (%"class.blink::InlineBox"*)** %49, align 8
  call void %50(%"class.blink::InlineBox"* nonnull %0) #13
  br label %51

51:                                               ; preds = %46, %44
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9InlineBox54SetLineLayoutItemShouldDoFullPaintInvalidationIfNeededEv(%"class.blink::InlineBox"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::InlineBox"* %0 to i1 (%"class.blink::InlineBox"*)***
  %3 = load i1 (%"class.blink::InlineBox"*)**, i1 (%"class.blink::InlineBox"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.blink::InlineBox"*)*, i1 (%"class.blink::InlineBox"*)** %3, i64 16
  %5 = load i1 (%"class.blink::InlineBox"*)*, i1 (%"class.blink::InlineBox"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.blink::InlineBox"* %0) #13
  br i1 %6, label %7, label %12

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %0, i64 0, i32 7, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %7, %1
  %13 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %0, i64 0, i32 4, i32 0
  %14 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %13, align 8
  tail call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %14, i8 zeroext 3) #13
  br label %15

15:                                               ; preds = %7, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9InlineBox6RemoveENS_13MarkLineBoxesE(%"class.blink::InlineBox"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %0, i64 0, i32 3
  %4 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %3, align 8
  %5 = icmp eq %"class.blink::InlineFlowBox"* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @_ZN5blink13InlineFlowBox11RemoveChildEPNS_9InlineBoxENS_13MarkLineBoxesE(%"class.blink::InlineFlowBox"* nonnull %4, %"class.blink::InlineBox"* %0, i32 %1) #13
  br label %7

7:                                                ; preds = %2, %6
  ret void
}

declare void @_ZN5blink13InlineFlowBox11RemoveChildEPNS_9InlineBoxENS_13MarkLineBoxesE(%"class.blink::InlineFlowBox"*, %"class.blink::InlineBox"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN5blink9InlineBoxnwEm(i64) local_unnamed_addr #0 align 2 {
  %2 = alloca i8, align 1
  %3 = alloca i8*, align 8
  %4 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** @_ZN3WTF10Partitions12layout_root_E, align 8
  %5 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  store i8* null, i8** %3, align 8
  %6 = load atomic i8, i8* getelementptr inbounds (%"struct.std::__1::atomic.238", %"struct.std::__1::atomic.238"* @_ZN4base19PartitionAllocHooks14hooks_enabled_E, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 1
  %7 = and i8 %6, 1
  %8 = icmp ne i8 %7, 0
  br i1 %8, label %9, label %13, !prof !2

9:                                                ; preds = %1
  %10 = call zeroext i1 @_ZN4base19PartitionAllocHooks31AllocationOverrideHookIfEnabledEPPvimPKc(i8** nonnull %3, i32 0, i64 %0, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9InlineBoxEEEPKcv, i64 0, i64 0)) #13
  br i1 %10, label %11, label %13

11:                                               ; preds = %9
  %12 = load i8*, i8** %3, align 8
  br label %78

13:                                               ; preds = %9, %1
  %14 = call i64 @llvm.ctlz.i64(i64 %0, i1 false) #13, !range !5
  %15 = sub nuw nsw i64 64, %14
  %16 = and i64 %15, 255
  %17 = getelementptr inbounds [65 x i8], [65 x i8]* @_ZN4base12_GLOBAL__N_116kOrderIndexShiftE, i64 0, i64 %16
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i64
  %20 = lshr i64 %0, %19
  %21 = and i64 %20, 7
  %22 = getelementptr inbounds [65 x i64], [65 x i64]* @_ZN4base12_GLOBAL__N_118kOrderSubIndexMaskE, i64 0, i64 %16
  %23 = load i64, i64* %22, align 8
  %24 = and i64 %23, %0
  %25 = shl nuw nsw i64 %16, 3
  %26 = or i64 %21, %25
  %27 = icmp ne i64 %24, 0
  %28 = zext i1 %27 to i64
  %29 = add nuw nsw i64 %26, %28
  %30 = getelementptr inbounds { [128 x i64], [521 x i16] }, { [128 x i64], [521 x i16] }* @_ZZN4base8internal17BucketIndexLookup8GetIndexEmE6lookup, i64 0, i32 1, i64 %29
  %31 = load i16, i16* %30, align 2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #13
  store i8 0, i8* %2, align 1
  %32 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %4, i64 0, i32 0
  %33 = load i8, i8* %32, align 8
  %34 = icmp eq i8 %33, 2
  br i1 %34, label %35, label %39

35:                                               ; preds = %13
  %36 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %37 = icmp eq i8 %36, 2
  br i1 %37, label %38, label %39, !prof !2

38:                                               ; preds = %35
  call void @_ZN4base8internal6PCScan8JoinScanEv() #13
  br label %39

39:                                               ; preds = %38, %35, %13
  %40 = zext i16 %31 to i64
  %41 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %4, i64 0, i32 9, i64 %40
  %42 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %41, i64 0, i32 0
  %43 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %42, align 8
  %44 = bitcast %"struct.base::internal::SlotSpanMetadata"* %43 to i8**
  %45 = load i8*, i8** %44, align 1
  %46 = icmp eq i8* %45, null
  br i1 %46, label %71, label %47, !prof !2

47:                                               ; preds = %39
  %48 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %43, i64 0, i32 0
  store i8 0, i8* %2, align 1
  %49 = bitcast i8* %45 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %50 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %49, align 8
  %51 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %50, null
  %52 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %50 to i64
  br i1 %51, label %53, label %55

53:                                               ; preds = %47
  %54 = call i64 @llvm.bswap.i64(i64 %52) #13
  br label %65

55:                                               ; preds = %47
  %56 = xor i64 %52, -1
  %57 = getelementptr inbounds i8, i8* %45, i64 8
  %58 = bitcast i8* %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = icmp eq i64 %59, %56
  br i1 %60, label %62, label %61, !prof !4

61:                                               ; preds = %55
  call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #14
  unreachable

62:                                               ; preds = %55
  %63 = call i64 @llvm.bswap.i64(i64 %52) #13
  %64 = inttoptr i64 %63 to i8*
  call void @llvm.prefetch(i8* nonnull %64, i32 0, i32 3, i32 1) #13
  br label %65

65:                                               ; preds = %62, %53
  %66 = phi i64 [ %54, %53 ], [ %63, %62 ]
  %67 = inttoptr i64 %66 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %67, %"class.base::internal::PartitionFreelistEntry"** %48, align 1
  %68 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %43, i64 0, i32 3
  %69 = load i16, i16* %68, align 1
  %70 = add i16 %69, 1
  store i16 %70, i16* %68, align 1
  br label %74

71:                                               ; preds = %39
  %72 = call i8* @_ZN4base8internal15PartitionBucketILb0EE13SlowPathAllocEPNS_13PartitionRootILb0EEEimmPb(%"struct.base::internal::PartitionBucket"* %41, %"struct.base::PartitionRoot"* %4, i32 0, i64 %0, i64 16384, i8* nonnull %2) #13
  %73 = icmp eq i8* %72, null
  br i1 %73, label %76, label %74, !prof !2

74:                                               ; preds = %71, %65
  %75 = phi i8* [ %45, %65 ], [ %72, %71 ]
  br label %76

76:                                               ; preds = %74, %71
  %77 = phi i8* [ %75, %74 ], [ null, %71 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #13
  store i8* %77, i8** %3, align 8
  br i1 %8, label %78, label %80

78:                                               ; preds = %76, %11
  %79 = phi i8* [ %12, %11 ], [ %77, %76 ]
  call void @_ZN4base19PartitionAllocHooks31AllocationObserverHookIfEnabledEPvmPKc(i8* %79, i64 %0, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9InlineBoxEEEPKcv, i64 0, i64 0)) #13
  br label %80

80:                                               ; preds = %78, %76
  %81 = load i8*, i8** %3, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  ret i8* %81
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZNK5blink9InlineBox7BoxNameEv(%"class.blink::InlineBox"* nocapture readnone) unnamed_addr #2 align 2 {
  ret i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink9InlineBox9DebugNameEv(%"class.blink::InlineBox"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = bitcast %"class.blink::InlineBox"* %0 to i8* (%"class.blink::InlineBox"*)***
  %4 = load i8* (%"class.blink::InlineBox"*)**, i8* (%"class.blink::InlineBox"*)*** %3, align 8
  %5 = getelementptr inbounds i8* (%"class.blink::InlineBox"*)*, i8* (%"class.blink::InlineBox"*)** %4, i64 13
  %6 = load i8* (%"class.blink::InlineBox"*)*, i8* (%"class.blink::InlineBox"*)** %5, align 8
  %7 = tail call i8* %6(%"class.blink::InlineBox"* %0) #13
  %8 = icmp eq i8* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = tail call i64 @strlen(i8* nonnull %7) #15
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i64 [ %10, %9 ], [ 0, %1 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* %7, i64 %12) #13
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  ret %"class.WTF::StringImpl"* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9InlineBox11OwnerNodeIdEv(%"class.blink::InlineBox"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %0, i64 0, i32 4, i32 0
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = icmp eq %"class.blink::LayoutObject"* %3, null
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = load i96, i96* inttoptr (i64 20 to i96*), align 4
  br label %23

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3, i64 0, i32 4
  %9 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %8 to i96*
  %10 = load i96, i96* %9, align 4
  %11 = and i96 %10, 33554432
  %12 = icmp eq i96 %11, 0
  br i1 %12, label %23, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3, i64 1
  %15 = bitcast %"class.blink::LayoutObject"* %14 to i16*
  %16 = load i16, i16* %15, align 8
  %17 = and i16 %16, 8192
  %18 = icmp eq i16 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.blink::LayoutObject"* %3 to %"class.blink::LayoutTextFragment"*
  %21 = tail call %"class.blink::Text"* @_ZNK5blink18LayoutTextFragment18AssociatedTextNodeEv(%"class.blink::LayoutTextFragment"* nonnull %20) #13
  %22 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %21, i64 0, i32 0, i32 0
  br label %30

23:                                               ; preds = %13, %7, %5
  %24 = phi i96 [ %6, %5 ], [ %10, %13 ], [ %10, %7 ]
  %25 = and i96 %24, 16777216
  %26 = icmp eq i96 %25, 0
  br i1 %26, label %27, label %64

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3, i64 0, i32 6, i32 0, i32 0
  %29 = load %"class.blink::Node"*, %"class.blink::Node"** %28, align 8
  br label %30

30:                                               ; preds = %19, %27
  %31 = phi %"class.blink::Node"* [ %22, %19 ], [ %29, %27 ]
  %32 = icmp eq %"class.blink::Node"* %31, null
  br i1 %32, label %64, label %33

33:                                               ; preds = %30
  %34 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %35 = icmp eq %"class.blink::LayoutObject"* %34, null
  br i1 %35, label %36, label %38

36:                                               ; preds = %33
  %37 = load i96, i96* inttoptr (i64 20 to i96*), align 4
  br label %54

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %34, i64 0, i32 4
  %40 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %39 to i96*
  %41 = load i96, i96* %40, align 4
  %42 = and i96 %41, 33554432
  %43 = icmp eq i96 %42, 0
  br i1 %43, label %54, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %34, i64 1
  %46 = bitcast %"class.blink::LayoutObject"* %45 to i16*
  %47 = load i16, i16* %46, align 8
  %48 = and i16 %47, 8192
  %49 = icmp eq i16 %48, 0
  br i1 %49, label %54, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.blink::LayoutObject"* %34 to %"class.blink::LayoutTextFragment"*
  %52 = tail call %"class.blink::Text"* @_ZNK5blink18LayoutTextFragment18AssociatedTextNodeEv(%"class.blink::LayoutTextFragment"* nonnull %51) #13
  %53 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %52, i64 0, i32 0, i32 0
  br label %61

54:                                               ; preds = %44, %38, %36
  %55 = phi i96 [ %37, %36 ], [ %41, %44 ], [ %41, %38 ]
  %56 = and i96 %55, 16777216
  %57 = icmp eq i96 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %34, i64 0, i32 6, i32 0, i32 0
  %60 = load %"class.blink::Node"*, %"class.blink::Node"** %59, align 8
  br label %61

61:                                               ; preds = %50, %54, %58
  %62 = phi %"class.blink::Node"* [ %53, %50 ], [ %60, %58 ], [ null, %54 ]
  %63 = tail call i32 @_ZN5blink10DOMNodeIds9IdForNodeEPNS_4NodeE(%"class.blink::Node"* %62) #13
  br label %64

64:                                               ; preds = %23, %30, %61
  %65 = phi i32 [ %63, %61 ], [ 0, %30 ], [ 0, %23 ]
  ret i32 %65
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare i32 @_ZN5blink10DOMNodeIds9IdForNodeEPNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::LineLayoutItem", align 8
  %3 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %0, i64 0, i32 7, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 1024
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::InlineBox"* %0 to i32 (%"class.blink::InlineBox"*)***
  %9 = load i32 (%"class.blink::InlineBox"*)**, i32 (%"class.blink::InlineBox"*)*** %8, align 8
  %10 = getelementptr inbounds i32 (%"class.blink::InlineBox"*)*, i32 (%"class.blink::InlineBox"*)** %9, i64 20
  %11 = load i32 (%"class.blink::InlineBox"*)*, i32 (%"class.blink::InlineBox"*)** %10, align 8
  %12 = tail call i32 %11(%"class.blink::InlineBox"* %0) #13
  br label %106

13:                                               ; preds = %1
  %14 = bitcast %"class.blink::LineLayoutItem"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #13
  %15 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %0, i64 0, i32 4, i32 0
  %16 = bitcast %"class.blink::LayoutObject"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.blink::LineLayoutItem"* %2 to i64*
  store i64 %17, i64* %18, align 8
  %19 = and i32 %4, 1
  %20 = icmp ne i32 %19, 0
  %21 = call %"class.blink::ComputedStyle"* @_ZNK5blink14LineLayoutItem5StyleEb(%"class.blink::LineLayoutItem"* nonnull %2, i1 zeroext %20)
  %22 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %23, i64 0, i32 1, i32 0, i32 0
  %25 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %25, i64 0, i32 1
  %27 = call %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"* %26) #13
  %28 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %27, i64 0, i32 2
  %29 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %28, align 8
  %30 = icmp eq %"class.blink::SimpleFontData"* %29, null
  br i1 %30, label %31, label %34

31:                                               ; preds = %13
  %32 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %26, i64 0, i32 0
  %33 = call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %27, %"class.blink::FontDescription"* dereferenceable(80) %32) #13
  store %"class.blink::SimpleFontData"* %33, %"class.blink::SimpleFontData"** %28, align 8
  br label %34

34:                                               ; preds = %13, %31
  %35 = phi %"class.blink::SimpleFontData"* [ %29, %13 ], [ %33, %31 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13
  %36 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %15, align 8
  %37 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %36, i64 0, i32 4
  %38 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %37 to i96*
  %39 = load i96, i96* %38, align 4
  %40 = and i96 %39, 33554432
  %41 = icmp eq i96 %40, 0
  br i1 %41, label %59, label %42

42:                                               ; preds = %34
  %43 = load i32, i32* %3, align 4
  %44 = and i32 %43, 131072
  %45 = icmp ne i32 %44, 0
  %46 = icmp ne %"class.blink::SimpleFontData"* %35, null
  %47 = and i1 %46, %45
  br i1 %47, label %48, label %106

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %35, i64 0, i32 1, i32 9
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %35, i64 0, i32 1, i32 10
  %52 = load i32, i32* %51, align 4
  %53 = add nsw i32 %52, %50
  %54 = icmp sgt i32 %53, 33554431
  br i1 %54, label %106, label %55

55:                                               ; preds = %48
  %56 = icmp slt i32 %53, -33554432
  %57 = shl i32 %53, 6
  %58 = select i1 %56, i32 -2147483648, i32 %57
  ret i32 %58

59:                                               ; preds = %34
  %60 = and i96 %39, 67108864
  %61 = icmp eq i96 %60, 0
  br i1 %61, label %78, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %0, i64 0, i32 3
  %64 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %63, align 8
  %65 = icmp eq %"class.blink::InlineFlowBox"* %64, null
  br i1 %65, label %78, label %66

66:                                               ; preds = %62
  %67 = load i32, i32* %3, align 4
  %68 = and i32 %67, 2048
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %36, i64 1, i32 4, i32 0, i64 4
  %71 = bitcast i8* %70 to i64*
  %72 = load i64, i64* %71, align 4
  br i1 %69, label %76, label %73

73:                                               ; preds = %66
  %74 = lshr i64 %72, 32
  %75 = trunc i64 %74 to i32
  br label %106

76:                                               ; preds = %66
  %77 = trunc i64 %72 to i32
  br label %106

78:                                               ; preds = %59, %62
  %79 = icmp eq %"class.blink::SimpleFontData"* %35, null
  br i1 %79, label %89, label %80

80:                                               ; preds = %78
  %81 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %35, i64 0, i32 1, i32 9
  %82 = load i32, i32* %81, align 4
  %83 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %35, i64 0, i32 1, i32 10
  %84 = load i32, i32* %83, align 4
  %85 = add nsw i32 %84, %82
  %86 = icmp sgt i32 %85, 33554431
  br i1 %86, label %92, label %87

87:                                               ; preds = %80
  %88 = icmp slt i32 %85, -33554432
  br i1 %88, label %92, label %89

89:                                               ; preds = %78, %87
  %90 = phi i32 [ %85, %87 ], [ 0, %78 ]
  %91 = shl i32 %90, 6
  br label %92

92:                                               ; preds = %87, %80, %89
  %93 = phi i32 [ %91, %89 ], [ 2147483647, %80 ], [ -2147483648, %87 ]
  %94 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %0, i64 0, i32 3
  %95 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %94, align 8
  %96 = icmp eq %"class.blink::InlineFlowBox"* %95, null
  br i1 %96, label %106, label %97

97:                                               ; preds = %92
  %98 = bitcast %"class.blink::LayoutObject"* %36 to %"class.blink::LayoutBoxModelObject"*
  %99 = call i32 @_ZNK5blink20LayoutBoxModelObject29BorderAndPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"* %98) #13
  %100 = icmp slt i32 %99, 0
  %101 = select i1 %100, i32 -2147483648, i32 2147483647
  %102 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %93, i32 %99) #13
  %103 = extractvalue { i32, i1 } %102, 1
  %104 = extractvalue { i32, i1 } %102, 0
  %105 = select i1 %103, i32 %101, i32 %104, !prof !2
  br label %106

106:                                              ; preds = %97, %92, %73, %76, %42, %48, %7
  %107 = phi i32 [ %12, %7 ], [ 2147483647, %48 ], [ 0, %42 ], [ %75, %73 ], [ %77, %76 ], [ %93, %92 ], [ %105, %97 ]
  ret i32 %107
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ComputedStyle"* @_ZNK5blink14LineLayoutItem5StyleEb(%"class.blink::LineLayoutItem"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::LineLayoutItem", %"class.blink::LineLayoutItem"* %0, i64 0, i32 0
  %5 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  br i1 %1, label %6, label %41

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %5, i64 0, i32 6, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %9 = icmp eq %"class.blink::Node"* %8, null
  br i1 %9, label %10, label %17

10:                                               ; preds = %6, %10
  %11 = phi %"class.blink::LayoutObject"* [ %13, %10 ], [ %5, %6 ]
  %12 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %11, i64 0, i32 7
  %13 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %13, i64 0, i32 6, i32 0, i32 0
  %15 = load %"class.blink::Node"*, %"class.blink::Node"** %14, align 8
  %16 = icmp eq %"class.blink::Node"* %15, null
  br i1 %16, label %10, label %17

17:                                               ; preds = %10, %6
  %18 = phi %"class.blink::Node"* [ %8, %6 ], [ %15, %10 ]
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 0, i32 3, i32 0, i32 0
  %20 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %20, i64 0, i32 2, i32 0, i32 0
  %22 = load %"class.blink::Document"*, %"class.blink::Document"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %22, i64 0, i32 59, i32 0, i32 0
  %24 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %24, i64 0, i32 31, i32 0, i32 0
  %26 = load %"class.blink::CSSGlobalRuleSet"*, %"class.blink::CSSGlobalRuleSet"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %26, i64 0, i32 0, i32 11
  %28 = load i8, i8* %27, align 8
  %29 = and i8 %28, 1
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %17
  %32 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1, i64 0, i64 0), i32 37, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2, i64 0, i64 0)) #13
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #13
  br label %34

34:                                               ; preds = %31, %17
  %35 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %26, i64 0, i32 0, i32 0, i32 0
  %36 = load i8, i8* %35, align 8, !range !3
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %34
  %39 = call %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"* %5) #13
  %40 = icmp eq %"class.blink::ComputedStyle"* %39, null
  br i1 %40, label %41, label %44

41:                                               ; preds = %2, %34, %38
  %42 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %5, i64 0, i32 5, i32 0
  %43 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %42, align 8
  br label %44

44:                                               ; preds = %41, %38
  %45 = phi %"class.blink::ComputedStyle"* [ %39, %38 ], [ %43, %41 ]
  ret %"class.blink::ComputedStyle"* %45
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9InlineBox16BaselinePositionENS_12FontBaselineE(%"class.blink::InlineBox"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %0, i64 0, i32 4, i32 0
  %4 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %4, i64 0, i32 4
  %6 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %5 to i96*
  %7 = load i96, i96* %6, align 4
  %8 = and i96 %7, 33554432
  %9 = icmp eq i96 %8, 0
  %10 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %0, i64 0, i32 7, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, 1
  %13 = icmp ne i32 %12, 0
  %14 = lshr i32 %11, 11
  %15 = and i32 %14, 1
  %16 = xor i32 %15, 1
  %17 = bitcast %"class.blink::LayoutObject"* %4 to %"class.blink::LayoutBoxModelObject"*
  %18 = select i1 %9, %"class.blink::LayoutBoxModelObject"* %17, %"class.blink::LayoutBoxModelObject"* null
  %19 = bitcast %"class.blink::LayoutBoxModelObject"* %18 to i32 (%"class.blink::LayoutBoxModelObject"*, i32, i1, i32, i32)***
  %20 = load i32 (%"class.blink::LayoutBoxModelObject"*, i32, i1, i32, i32)**, i32 (%"class.blink::LayoutBoxModelObject"*, i32, i1, i32, i32)*** %19, align 8
  %21 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*, i32, i1, i32, i32)*, i32 (%"class.blink::LayoutBoxModelObject"*, i32, i1, i32, i32)** %20, i64 134
  %22 = load i32 (%"class.blink::LayoutBoxModelObject"*, i32, i1, i32, i32)*, i32 (%"class.blink::LayoutBoxModelObject"*, i32, i1, i32, i32)** %21, align 8
  %23 = tail call i32 %22(%"class.blink::LayoutBoxModelObject"* %18, i32 %1, i1 zeroext %13, i32 %16, i32 0) #13
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9InlineBox10LineHeightEv(%"class.blink::InlineBox"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %0, i64 0, i32 4, i32 0
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3, i64 0, i32 4
  %5 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %4 to i96*
  %6 = load i96, i96* %5, align 4
  %7 = and i96 %6, 33554432
  %8 = icmp eq i96 %7, 0
  %9 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %0, i64 0, i32 7, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, 1
  %12 = icmp ne i32 %11, 0
  %13 = lshr i32 %10, 11
  %14 = and i32 %13, 1
  %15 = xor i32 %14, 1
  %16 = bitcast %"class.blink::LayoutObject"* %3 to %"class.blink::LayoutBoxModelObject"*
  %17 = select i1 %8, %"class.blink::LayoutBoxModelObject"* %16, %"class.blink::LayoutBoxModelObject"* null
  %18 = bitcast %"class.blink::LayoutBoxModelObject"* %17 to i32 (%"class.blink::LayoutBoxModelObject"*, i1, i32, i32)***
  %19 = load i32 (%"class.blink::LayoutBoxModelObject"*, i1, i32, i32)**, i32 (%"class.blink::LayoutBoxModelObject"*, i1, i32, i32)*** %18, align 8
  %20 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*, i1, i32, i32)*, i32 (%"class.blink::LayoutBoxModelObject"*, i1, i32, i32)** %19, i64 133
  %21 = load i32 (%"class.blink::LayoutBoxModelObject"*, i1, i32, i32)*, i32 (%"class.blink::LayoutBoxModelObject"*, i1, i32, i32)** %20, align 8
  %22 = tail call i32 %21(%"class.blink::LayoutBoxModelObject"* %17, i1 zeroext %12, i32 %15, i32 0) #13
  ret i32 %22
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK5blink9InlineBox14CaretMinOffsetEv(%"class.blink::InlineBox"* nocapture readnone) unnamed_addr #2 align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9InlineBox14CaretMaxOffsetEv(%"class.blink::InlineBox"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %0, i64 0, i32 4, i32 0
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3, i64 0, i32 4
  %5 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %4 to i96*
  %6 = load i96, i96* %5, align 4
  %7 = and i96 %6, 1073741824
  %8 = icmp eq i96 %7, 0
  br i1 %8, label %26, label %9

9:                                                ; preds = %1
  %10 = and i96 %6, 16777216
  %11 = icmp eq i96 %10, 0
  br i1 %11, label %12, label %29

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3, i64 0, i32 6, i32 0, i32 0
  %14 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %15 = icmp eq %"class.blink::Node"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %29, label %21

21:                                               ; preds = %16
  %22 = bitcast %"class.blink::Node"* %14 to %"class.blink::ContainerNode"*
  %23 = tail call i32 @_ZNK5blink13ContainerNode13CountChildrenEv(%"class.blink::ContainerNode"* nonnull %22) #13
  %24 = icmp ugt i32 %23, 1
  %25 = select i1 %24, i32 %23, i32 1
  br label %29

26:                                               ; preds = %1
  %27 = tail call zeroext i1 @_ZNK5blink12LayoutObject4IsHREv(%"class.blink::LayoutObject"* %3) #13
  %28 = zext i1 %27 to i32
  br label %29

29:                                               ; preds = %9, %12, %16, %26, %21
  %30 = phi i32 [ %25, %21 ], [ %28, %26 ], [ 1, %16 ], [ 1, %12 ], [ 1, %9 ]
  ret i32 %30
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9InlineBox14DirtyLineBoxesEv(%"class.blink::InlineBox"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::InlineBox"* %0 to void (%"class.blink::InlineBox"*)***
  %3 = load void (%"class.blink::InlineBox"*)**, void (%"class.blink::InlineBox"*)*** %2, align 8
  %4 = getelementptr inbounds void (%"class.blink::InlineBox"*)*, void (%"class.blink::InlineBox"*)** %3, i64 28
  %5 = load void (%"class.blink::InlineBox"*)*, void (%"class.blink::InlineBox"*)** %4, align 8
  tail call void %5(%"class.blink::InlineBox"* %0) #13
  %6 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %0, i64 0, i32 3
  %7 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %6, align 8
  %8 = icmp eq %"class.blink::InlineFlowBox"* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %1, %16
  %10 = phi %"class.blink::InlineFlowBox"* [ %23, %16 ], [ %7, %1 ]
  %11 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %10, i64 0, i32 0, i32 7, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 256
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %16, label %15

15:                                               ; preds = %16, %9, %1
  ret void

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %10, i64 0, i32 0
  %18 = bitcast %"class.blink::InlineFlowBox"* %10 to void (%"class.blink::InlineBox"*)***
  %19 = load void (%"class.blink::InlineBox"*)**, void (%"class.blink::InlineBox"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::InlineBox"*)*, void (%"class.blink::InlineBox"*)** %19, i64 28
  %21 = load void (%"class.blink::InlineBox"*)*, void (%"class.blink::InlineBox"*)** %20, align 8
  tail call void %21(%"class.blink::InlineBox"* %17) #13
  %22 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %10, i64 0, i32 0, i32 3
  %23 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %22, align 8
  %24 = icmp eq %"class.blink::InlineFlowBox"* %23, null
  br i1 %24, label %15, label %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9InlineBox10DeleteLineEv(%"class.blink::InlineBox"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %0, i64 0, i32 7, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 512
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %24

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %0, i64 0, i32 4, i32 0
  %9 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %9, i64 0, i32 4
  %11 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %10 to i96*
  %12 = load i96, i96* %11, align 4
  %13 = and i96 %12, 67108864
  %14 = icmp eq i96 %13, 0
  br i1 %14, label %24, label %15

15:                                               ; preds = %7
  %16 = and i96 %12, 268435456
  %17 = icmp eq i96 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %15
  %19 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.3, i64 0, i64 0), i32 2455, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.4, i64 0, i64 0)) #13
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #13
  br label %21

21:                                               ; preds = %15, %18
  %22 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %9, i64 2, i32 1, i32 1
  %23 = bitcast i8* %22 to %"class.blink::InlineBox"**
  store %"class.blink::InlineBox"* null, %"class.blink::InlineBox"** %23, align 8
  br label %24

24:                                               ; preds = %7, %1, %21
  %25 = bitcast %"class.blink::InlineBox"* %0 to void (%"class.blink::InlineBox"*)***
  %26 = load void (%"class.blink::InlineBox"*)**, void (%"class.blink::InlineBox"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::InlineBox"*)*, void (%"class.blink::InlineBox"*)** %26, i64 5
  %28 = load void (%"class.blink::InlineBox"*)*, void (%"class.blink::InlineBox"*)** %27, align 8
  call void %28(%"class.blink::InlineBox"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9InlineBox11ExtractLineEv(%"class.blink::InlineBox"* nocapture) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %0, i64 0, i32 7, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = or i32 %4, 512
  store i32 %5, i32* %3, align 4
  %6 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %0, i64 0, i32 4, i32 0
  %7 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %7, i64 0, i32 4
  %9 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %8 to i96*
  %10 = load i96, i96* %9, align 4
  %11 = and i96 %10, 67108864
  %12 = icmp eq i96 %11, 0
  br i1 %12, label %22, label %13

13:                                               ; preds = %1
  %14 = and i96 %10, 268435456
  %15 = icmp eq i96 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %13
  %17 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.3, i64 0, i64 0), i32 2455, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.4, i64 0, i64 0)) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %13, %16
  %20 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %7, i64 2, i32 1, i32 1
  %21 = bitcast i8* %20 to %"class.blink::InlineBox"**
  store %"class.blink::InlineBox"* null, %"class.blink::InlineBox"** %21, align 8
  br label %22

22:                                               ; preds = %1, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9InlineBox10AttachLineEv(%"class.blink::InlineBox"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %0, i64 0, i32 7, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, -513
  store i32 %5, i32* %3, align 4
  %6 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %0, i64 0, i32 4, i32 0
  %7 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %7, i64 0, i32 4
  %9 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %8 to i96*
  %10 = load i96, i96* %9, align 4
  %11 = and i96 %10, 67108864
  %12 = icmp eq i96 %11, 0
  br i1 %12, label %31, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.blink::LayoutObject"* %7 to %"class.blink::LayoutBox"*
  %15 = and i96 %10, 268435456
  %16 = icmp eq i96 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %13
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.3, i64 0, i64 0), i32 2455, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.4, i64 0, i64 0)) #13
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #13
  br label %20

20:                                               ; preds = %17, %13
  %21 = icmp eq %"class.blink::InlineBox"* %0, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %7, i64 2, i32 1, i32 1
  %24 = bitcast i8* %23 to %"class.blink::InlineBox"**
  %25 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %24, align 8
  %26 = icmp eq %"class.blink::InlineBox"* %25, null
  br i1 %26, label %28, label %27, !prof !4

27:                                               ; preds = %22
  call void @_ZN5blink9LayoutBox20DeleteLineBoxWrapperEv(%"class.blink::LayoutBox"* %14) #13
  br label %28

28:                                               ; preds = %20, %22, %27
  %29 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %7, i64 2, i32 1, i32 1
  %30 = bitcast i8* %29 to %"class.blink::InlineBox"**
  store %"class.blink::InlineBox"* %0, %"class.blink::InlineBox"** %30, align 8
  br label %31

31:                                               ; preds = %1, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9InlineBox4MoveERKNS_10LayoutSizeE(%"class.blink::InlineBox"*, %"class.blink::LayoutSize"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutSize", %"class.blink::LayoutSize"* %1, i64 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.blink::LayoutSize", %"class.blink::LayoutSize"* %1, i64 0, i32 1, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %0, i64 0, i32 5, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %4, 0
  %10 = select i1 %9, i32 -2147483648, i32 2147483647
  %11 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %8, i32 %4) #13
  %12 = extractvalue { i32, i1 } %11, 1
  %13 = extractvalue { i32, i1 } %11, 0
  %14 = select i1 %12, i32 %10, i32 %13, !prof !2
  store i32 %14, i32* %7, align 4
  %15 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %0, i64 0, i32 5, i32 1, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp slt i32 %6, 0
  %18 = select i1 %17, i32 -2147483648, i32 2147483647
  %19 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %16, i32 %6) #13
  %20 = extractvalue { i32, i1 } %19, 1
  %21 = extractvalue { i32, i1 } %19, 0
  %22 = select i1 %20, i32 %18, i32 %21, !prof !2
  store i32 %22, i32* %15, align 4
  %23 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %0, i64 0, i32 4, i32 0
  %24 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %24, i64 0, i32 4
  %26 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %25 to i96*
  %27 = load i96, i96* %26, align 4
  %28 = and i96 %27, 1073741824
  %29 = icmp eq i96 %28, 0
  br i1 %29, label %55, label %30

30:                                               ; preds = %2
  %31 = load i32, i32* %3, align 4
  %32 = load i32, i32* %5, align 4
  %33 = or i32 %32, %31
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = bitcast %"class.blink::LayoutObject"* %24 to %"class.blink::LayoutBox"*
  %37 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %24, i64 1, i32 1, i32 1
  %38 = bitcast i8* %37 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = icmp slt i32 %31, 0
  %41 = select i1 %40, i32 -2147483648, i32 2147483647
  %42 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %39, i32 %31) #13
  %43 = extractvalue { i32, i1 } %42, 1
  %44 = extractvalue { i32, i1 } %42, 0
  %45 = select i1 %43, i32 %41, i32 %44, !prof !2
  store i32 %45, i32* %38, align 4
  %46 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %24, i64 1, i32 4
  %47 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %46 to i32*
  %48 = load i32, i32* %47, align 4
  %49 = icmp slt i32 %32, 0
  %50 = select i1 %49, i32 -2147483648, i32 2147483647
  %51 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %48, i32 %32) #13
  %52 = extractvalue { i32, i1 } %51, 1
  %53 = extractvalue { i32, i1 } %51, 0
  %54 = select i1 %52, i32 %50, i32 %53, !prof !2
  store i32 %54, i32* %47, align 4
  tail call void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"* %36) #13
  br label %55

55:                                               ; preds = %2, %35, %30
  %56 = bitcast %"class.blink::InlineBox"* %0 to i1 (%"class.blink::InlineBox"*)***
  %57 = load i1 (%"class.blink::InlineBox"*)**, i1 (%"class.blink::InlineBox"*)*** %56, align 8
  %58 = getelementptr inbounds i1 (%"class.blink::InlineBox"*)*, i1 (%"class.blink::InlineBox"*)** %57, i64 16
  %59 = load i1 (%"class.blink::InlineBox"*)*, i1 (%"class.blink::InlineBox"*)** %58, align 8
  %60 = tail call zeroext i1 %59(%"class.blink::InlineBox"* %0) #13
  br i1 %60, label %61, label %66

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %0, i64 0, i32 7, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = and i32 %63, 1
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %68, label %66

66:                                               ; preds = %61, %55
  %67 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %23, align 8
  tail call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %67, i8 zeroext 3) #13
  br label %68

68:                                               ; preds = %61, %66
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9InlineBox5PaintERKNS_9PaintInfoERKNS_14PhysicalOffsetENS_10LayoutUnitES7_(%"class.blink::InlineBox"*, %"struct.blink::PaintInfo"* dereferenceable(56), %"struct.blink::PhysicalOffset"* nocapture readnone dereferenceable(8), i32, i32) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink12BlockPainter14PaintInlineBoxERKNS_9InlineBoxERKNS_9PaintInfoE(%"class.blink::InlineBox"* dereferenceable(64) %0, %"struct.blink::PaintInfo"* dereferenceable(56) %1) #13
  ret void
}

declare void @_ZN5blink12BlockPainter14PaintInlineBoxERKNS_9InlineBoxERKNS_9PaintInfoE(%"class.blink::InlineBox"* dereferenceable(64), %"struct.blink::PaintInfo"* dereferenceable(56)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink9InlineBox11NodeAtPointERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_10LayoutUnitES9_(%"class.blink::InlineBox"* nocapture readonly, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* nocapture readonly dereferenceable(8), i32, i32) unnamed_addr #0 align 2 {
  %7 = alloca i64, align 8
  %8 = bitcast i64* %7 to %"struct.blink::PhysicalOffset"*
  %9 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = bitcast %"struct.blink::PhysicalOffset"* %3 to i64*
  %11 = load i64, i64* %10, align 4
  store i64 %11, i64* %7, align 8
  %12 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %0, i64 0, i32 4, i32 0
  %13 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %13, i64 0, i32 4
  %15 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %14 to i96*
  %16 = load i96, i96* %15, align 4
  %17 = and i96 %16, 67108864
  %18 = icmp eq i96 %17, 0
  %19 = trunc i64 %11 to i32
  %20 = lshr i64 %11, 32
  %21 = trunc i64 %20 to i32
  br i1 %18, label %90, label %22

22:                                               ; preds = %6
  %23 = bitcast %"class.blink::LayoutObject"* %13 to %"class.blink::LayoutBox"*
  %24 = bitcast %"class.blink::LayoutObject"* %13 to %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)***
  %25 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)**, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*** %24, align 8
  %26 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %25, i64 147
  %27 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %26, align 8
  %28 = tail call %"class.blink::LayoutBox"* %27(%"class.blink::LayoutBox"* %23) #13
  %29 = icmp eq %"class.blink::LayoutBox"* %28, null
  br i1 %29, label %38, label %30

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %28, i64 0, i32 0, i32 0, i32 5, i32 0
  %32 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %32, i64 0, i32 0, i32 9
  %34 = bitcast [20 x i8]* %33 to i160*
  %35 = load i160, i160* %34, align 8
  %36 = and i160 %35, 15211807202738752817960438464512
  %37 = icmp eq i160 %36, 5070602400912917605986812821504
  br i1 %37, label %43, label %38, !prof !2

38:                                               ; preds = %30, %22
  %39 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %13, i64 1, i32 1, i32 1
  %40 = bitcast i8* %39 to i64*
  %41 = load i64, i64* %40, align 4
  %42 = trunc i64 %41 to i32
  br label %68

43:                                               ; preds = %30
  %44 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %28, i64 0, i32 2, i32 1
  %45 = bitcast %"class.blink::LayoutSize"* %44 to i64*
  %46 = load i64, i64* %45, align 4
  %47 = trunc i64 %46 to i32
  %48 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %13, i64 1, i32 4, i32 0, i64 4
  %49 = bitcast i8* %48 to i64*
  %50 = load i64, i64* %49, align 4
  %51 = trunc i64 %50 to i32
  %52 = icmp sgt i32 %51, -1
  %53 = select i1 %52, i32 -2147483648, i32 2147483647
  %54 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %47, i32 %51) #13
  %55 = extractvalue { i32, i1 } %54, 1
  %56 = extractvalue { i32, i1 } %54, 0
  %57 = select i1 %55, i32 %53, i32 %56, !prof !2
  %58 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %13, i64 1, i32 1, i32 1
  %59 = bitcast i8* %58 to i64*
  %60 = load i64, i64* %59, align 4
  %61 = trunc i64 %60 to i32
  %62 = icmp sgt i32 %61, -1
  %63 = select i1 %62, i32 -2147483648, i32 2147483647
  %64 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %57, i32 %61) #13
  %65 = extractvalue { i32, i1 } %64, 1
  %66 = extractvalue { i32, i1 } %64, 0
  %67 = select i1 %65, i32 %63, i32 %66, !prof !2
  br label %68

68:                                               ; preds = %38, %43
  %69 = phi i32 [ %42, %38 ], [ %67, %43 ]
  %70 = phi i64 [ %41, %38 ], [ %60, %43 ]
  %71 = lshr i64 %70, 32
  %72 = trunc i64 %71 to i32
  %73 = icmp slt i32 %69, 0
  %74 = select i1 %73, i32 -2147483648, i32 2147483647
  %75 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %19, i32 %69) #13
  %76 = extractvalue { i32, i1 } %75, 1
  %77 = extractvalue { i32, i1 } %75, 0
  %78 = select i1 %76, i32 %74, i32 %77, !prof !2
  %79 = icmp slt i32 %72, 0
  %80 = select i1 %79, i32 -2147483648, i32 2147483647
  %81 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %21, i32 %72) #13
  %82 = extractvalue { i32, i1 } %81, 1
  %83 = extractvalue { i32, i1 } %81, 0
  %84 = select i1 %82, i32 %80, i32 %83, !prof !2
  %85 = zext i32 %84 to i64
  %86 = shl nuw i64 %85, 32
  %87 = zext i32 %78 to i64
  %88 = or i64 %86, %87
  store i64 %88, i64* %7, align 8
  %89 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %12, align 8
  br label %90

90:                                               ; preds = %6, %68
  %91 = phi %"class.blink::LayoutObject"* [ %13, %6 ], [ %89, %68 ]
  %92 = bitcast %"class.blink::LayoutObject"* %91 to i1 (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)***
  %93 = load i1 (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)**, i1 (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)*** %92, align 8
  %94 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)*, i1 (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)** %93, i64 60
  %95 = load i1 (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)*, i1 (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)** %94, align 8
  %96 = call zeroext i1 %95(%"class.blink::LayoutObject"* %91, %"class.blink::HitTestResult"* dereferenceable(112) %1, %"class.blink::HitTestLocation"* dereferenceable(72) %2, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %8, i32 0) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  ret i1 %96
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(160) %"class.blink::RootInlineBox"* @_ZNK5blink9InlineBox4RootEv(%"class.blink::InlineBox"* readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %0, i64 0, i32 3
  %3 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %2, align 8
  %4 = icmp eq %"class.blink::InlineFlowBox"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"class.blink::InlineFlowBox"* [ %8, %5 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %6, i64 0, i32 0, i32 3
  %8 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %7, align 8
  %9 = icmp eq %"class.blink::InlineFlowBox"* %8, null
  br i1 %9, label %10, label %5

10:                                               ; preds = %5
  %11 = bitcast %"class.blink::InlineFlowBox"* %6 to %"class.blink::RootInlineBox"*
  br label %14

12:                                               ; preds = %1
  %13 = bitcast %"class.blink::InlineBox"* %0 to %"class.blink::RootInlineBox"*
  br label %14

14:                                               ; preds = %12, %10
  %15 = phi %"class.blink::RootInlineBox"* [ %11, %10 ], [ %13, %12 ]
  ret %"class.blink::RootInlineBox"* %15
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden dereferenceable(160) %"class.blink::RootInlineBox"* @_ZN5blink9InlineBox4RootEv(%"class.blink::InlineBox"* readonly) local_unnamed_addr #5 align 2 {
  br label %2

2:                                                ; preds = %2, %1
  %3 = phi %"class.blink::InlineBox"* [ %0, %1 ], [ %7, %2 ]
  %4 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %3, i64 0, i32 3
  %5 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %4, align 8
  %6 = icmp eq %"class.blink::InlineFlowBox"* %5, null
  %7 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %5, i64 0, i32 0
  br i1 %6, label %8, label %2

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::InlineBox"* %3 to %"class.blink::RootInlineBox"*
  ret %"class.blink::RootInlineBox"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::InlineBox"* @_ZNK5blink9InlineBox13NextLeafChildEv(%"class.blink::InlineBox"* nocapture readonly) local_unnamed_addr #0 align 2 {
  br label %2

2:                                                ; preds = %23, %1
  %3 = phi %"class.blink::InlineBox"* [ %0, %1 ], [ %27, %23 ]
  %4 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %3, i64 0, i32 1
  %5 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %4, align 8
  %6 = icmp eq %"class.blink::InlineBox"* %5, null
  br i1 %6, label %23, label %8

7:                                                ; preds = %15
  br i1 %21, label %23, label %28

8:                                                ; preds = %2, %15
  %9 = phi %"class.blink::InlineBox"* [ %19, %15 ], [ %5, %2 ]
  %10 = bitcast %"class.blink::InlineBox"* %9 to i1 (%"class.blink::InlineBox"*)***
  %11 = load i1 (%"class.blink::InlineBox"*)**, i1 (%"class.blink::InlineBox"*)*** %10, align 8
  %12 = getelementptr inbounds i1 (%"class.blink::InlineBox"*)*, i1 (%"class.blink::InlineBox"*)** %11, i64 22
  %13 = load i1 (%"class.blink::InlineBox"*)*, i1 (%"class.blink::InlineBox"*)** %12, align 8
  %14 = tail call zeroext i1 %13(%"class.blink::InlineBox"* nonnull %9) #13
  br i1 %14, label %28, label %15

15:                                               ; preds = %8
  %16 = bitcast %"class.blink::InlineBox"* %9 to %"class.blink::InlineFlowBox"*
  %17 = tail call %"class.blink::InlineBox"* @_ZNK5blink13InlineFlowBox14FirstLeafChildEv(%"class.blink::InlineFlowBox"* nonnull %16) #13
  %18 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %9, i64 0, i32 1
  %19 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %18, align 8
  %20 = icmp ne %"class.blink::InlineBox"* %19, null
  %21 = icmp eq %"class.blink::InlineBox"* %17, null
  %22 = and i1 %21, %20
  br i1 %22, label %8, label %7

23:                                               ; preds = %2, %7
  %24 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %3, i64 0, i32 3
  %25 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %24, align 8
  %26 = icmp eq %"class.blink::InlineFlowBox"* %25, null
  %27 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %25, i64 0, i32 0
  br i1 %26, label %28, label %2

28:                                               ; preds = %23, %7, %8
  %29 = phi %"class.blink::InlineBox"* [ %9, %8 ], [ null, %23 ], [ %17, %7 ]
  ret %"class.blink::InlineBox"* %29
}

declare %"class.blink::InlineBox"* @_ZNK5blink13InlineFlowBox14FirstLeafChildEv(%"class.blink::InlineFlowBox"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::InlineBox"* @_ZNK5blink9InlineBox13PrevLeafChildEv(%"class.blink::InlineBox"* nocapture readonly) local_unnamed_addr #0 align 2 {
  br label %2

2:                                                ; preds = %23, %1
  %3 = phi %"class.blink::InlineBox"* [ %0, %1 ], [ %27, %23 ]
  %4 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %3, i64 0, i32 2
  %5 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %4, align 8
  %6 = icmp eq %"class.blink::InlineBox"* %5, null
  br i1 %6, label %23, label %8

7:                                                ; preds = %15
  br i1 %21, label %23, label %28

8:                                                ; preds = %2, %15
  %9 = phi %"class.blink::InlineBox"* [ %19, %15 ], [ %5, %2 ]
  %10 = bitcast %"class.blink::InlineBox"* %9 to i1 (%"class.blink::InlineBox"*)***
  %11 = load i1 (%"class.blink::InlineBox"*)**, i1 (%"class.blink::InlineBox"*)*** %10, align 8
  %12 = getelementptr inbounds i1 (%"class.blink::InlineBox"*)*, i1 (%"class.blink::InlineBox"*)** %11, i64 22
  %13 = load i1 (%"class.blink::InlineBox"*)*, i1 (%"class.blink::InlineBox"*)** %12, align 8
  %14 = tail call zeroext i1 %13(%"class.blink::InlineBox"* nonnull %9) #13
  br i1 %14, label %28, label %15

15:                                               ; preds = %8
  %16 = bitcast %"class.blink::InlineBox"* %9 to %"class.blink::InlineFlowBox"*
  %17 = tail call %"class.blink::InlineBox"* @_ZNK5blink13InlineFlowBox13LastLeafChildEv(%"class.blink::InlineFlowBox"* nonnull %16) #13
  %18 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %9, i64 0, i32 2
  %19 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %18, align 8
  %20 = icmp ne %"class.blink::InlineBox"* %19, null
  %21 = icmp eq %"class.blink::InlineBox"* %17, null
  %22 = and i1 %21, %20
  br i1 %22, label %8, label %7

23:                                               ; preds = %2, %7
  %24 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %3, i64 0, i32 3
  %25 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %24, align 8
  %26 = icmp eq %"class.blink::InlineFlowBox"* %25, null
  %27 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %25, i64 0, i32 0
  br i1 %26, label %28, label %2

28:                                               ; preds = %23, %7, %8
  %29 = phi %"class.blink::InlineBox"* [ %9, %8 ], [ null, %23 ], [ %17, %7 ]
  ret %"class.blink::InlineBox"* %29
}

declare %"class.blink::InlineBox"* @_ZNK5blink13InlineFlowBox13LastLeafChildEv(%"class.blink::InlineFlowBox"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::InlineBox"* @_ZNK5blink9InlineBox30NextLeafChildIgnoringLineBreakEv(%"class.blink::InlineBox"* nocapture readonly) local_unnamed_addr #0 align 2 {
  br label %2

2:                                                ; preds = %23, %1
  %3 = phi %"class.blink::InlineBox"* [ %0, %1 ], [ %27, %23 ]
  %4 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %3, i64 0, i32 1
  %5 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %4, align 8
  %6 = icmp eq %"class.blink::InlineBox"* %5, null
  br i1 %6, label %23, label %8

7:                                                ; preds = %15
  br i1 %21, label %23, label %28

8:                                                ; preds = %2, %15
  %9 = phi %"class.blink::InlineBox"* [ %19, %15 ], [ %5, %2 ]
  %10 = bitcast %"class.blink::InlineBox"* %9 to i1 (%"class.blink::InlineBox"*)***
  %11 = load i1 (%"class.blink::InlineBox"*)**, i1 (%"class.blink::InlineBox"*)*** %10, align 8
  %12 = getelementptr inbounds i1 (%"class.blink::InlineBox"*)*, i1 (%"class.blink::InlineBox"*)** %11, i64 22
  %13 = load i1 (%"class.blink::InlineBox"*)*, i1 (%"class.blink::InlineBox"*)** %12, align 8
  %14 = tail call zeroext i1 %13(%"class.blink::InlineBox"* nonnull %9) #13
  br i1 %14, label %28, label %15

15:                                               ; preds = %8
  %16 = bitcast %"class.blink::InlineBox"* %9 to %"class.blink::InlineFlowBox"*
  %17 = tail call %"class.blink::InlineBox"* @_ZNK5blink13InlineFlowBox14FirstLeafChildEv(%"class.blink::InlineFlowBox"* nonnull %16) #13
  %18 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %9, i64 0, i32 1
  %19 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %18, align 8
  %20 = icmp ne %"class.blink::InlineBox"* %19, null
  %21 = icmp eq %"class.blink::InlineBox"* %17, null
  %22 = and i1 %21, %20
  br i1 %22, label %8, label %7

23:                                               ; preds = %7, %2
  %24 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %3, i64 0, i32 3
  %25 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %24, align 8
  %26 = icmp eq %"class.blink::InlineFlowBox"* %25, null
  %27 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %25, i64 0, i32 0
  br i1 %26, label %35, label %2

28:                                               ; preds = %7, %8
  %29 = phi %"class.blink::InlineBox"* [ %9, %8 ], [ %17, %7 ]
  %30 = bitcast %"class.blink::InlineBox"* %29 to i1 (%"class.blink::InlineBox"*)***
  %31 = load i1 (%"class.blink::InlineBox"*)**, i1 (%"class.blink::InlineBox"*)*** %30, align 8
  %32 = getelementptr inbounds i1 (%"class.blink::InlineBox"*)*, i1 (%"class.blink::InlineBox"*)** %31, i64 9
  %33 = load i1 (%"class.blink::InlineBox"*)*, i1 (%"class.blink::InlineBox"*)** %32, align 8
  %34 = tail call zeroext i1 %33(%"class.blink::InlineBox"* nonnull %29) #13
  br i1 %34, label %37, label %35

35:                                               ; preds = %23, %28
  %36 = phi %"class.blink::InlineBox"* [ %29, %28 ], [ null, %23 ]
  br label %37

37:                                               ; preds = %28, %35
  %38 = phi %"class.blink::InlineBox"* [ %36, %35 ], [ null, %28 ]
  ret %"class.blink::InlineBox"* %38
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::InlineBox"* @_ZNK5blink9InlineBox30PrevLeafChildIgnoringLineBreakEv(%"class.blink::InlineBox"* nocapture readonly) local_unnamed_addr #0 align 2 {
  br label %2

2:                                                ; preds = %23, %1
  %3 = phi %"class.blink::InlineBox"* [ %0, %1 ], [ %27, %23 ]
  %4 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %3, i64 0, i32 2
  %5 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %4, align 8
  %6 = icmp eq %"class.blink::InlineBox"* %5, null
  br i1 %6, label %23, label %8

7:                                                ; preds = %15
  br i1 %21, label %23, label %28

8:                                                ; preds = %2, %15
  %9 = phi %"class.blink::InlineBox"* [ %19, %15 ], [ %5, %2 ]
  %10 = bitcast %"class.blink::InlineBox"* %9 to i1 (%"class.blink::InlineBox"*)***
  %11 = load i1 (%"class.blink::InlineBox"*)**, i1 (%"class.blink::InlineBox"*)*** %10, align 8
  %12 = getelementptr inbounds i1 (%"class.blink::InlineBox"*)*, i1 (%"class.blink::InlineBox"*)** %11, i64 22
  %13 = load i1 (%"class.blink::InlineBox"*)*, i1 (%"class.blink::InlineBox"*)** %12, align 8
  %14 = tail call zeroext i1 %13(%"class.blink::InlineBox"* nonnull %9) #13
  br i1 %14, label %28, label %15

15:                                               ; preds = %8
  %16 = bitcast %"class.blink::InlineBox"* %9 to %"class.blink::InlineFlowBox"*
  %17 = tail call %"class.blink::InlineBox"* @_ZNK5blink13InlineFlowBox13LastLeafChildEv(%"class.blink::InlineFlowBox"* nonnull %16) #13
  %18 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %9, i64 0, i32 2
  %19 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %18, align 8
  %20 = icmp ne %"class.blink::InlineBox"* %19, null
  %21 = icmp eq %"class.blink::InlineBox"* %17, null
  %22 = and i1 %21, %20
  br i1 %22, label %8, label %7

23:                                               ; preds = %7, %2
  %24 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %3, i64 0, i32 3
  %25 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %24, align 8
  %26 = icmp eq %"class.blink::InlineFlowBox"* %25, null
  %27 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %25, i64 0, i32 0
  br i1 %26, label %35, label %2

28:                                               ; preds = %7, %8
  %29 = phi %"class.blink::InlineBox"* [ %9, %8 ], [ %17, %7 ]
  %30 = bitcast %"class.blink::InlineBox"* %29 to i1 (%"class.blink::InlineBox"*)***
  %31 = load i1 (%"class.blink::InlineBox"*)**, i1 (%"class.blink::InlineBox"*)*** %30, align 8
  %32 = getelementptr inbounds i1 (%"class.blink::InlineBox"*)*, i1 (%"class.blink::InlineBox"*)** %31, i64 9
  %33 = load i1 (%"class.blink::InlineBox"*)*, i1 (%"class.blink::InlineBox"*)** %32, align 8
  %34 = tail call zeroext i1 %33(%"class.blink::InlineBox"* nonnull %29) #13
  br i1 %34, label %37, label %35

35:                                               ; preds = %23, %28
  %36 = phi %"class.blink::InlineBox"* [ %29, %28 ], [ null, %23 ]
  br label %37

37:                                               ; preds = %28, %35
  %38 = phi %"class.blink::InlineBox"* [ %36, %35 ], [ null, %28 ]
  ret %"class.blink::InlineBox"* %38
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9InlineBox10IsSelectedEv(%"class.blink::InlineBox"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %0, i64 0, i32 4, i32 0
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = tail call zeroext i1 @_ZNK5blink12LayoutObject10IsSelectedEv(%"class.blink::LayoutObject"* %3) #13
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9InlineBox22CanAccommodateEllipsisEbNS_10LayoutUnitES1_(%"class.blink::InlineBox"* nocapture readonly, i1 zeroext, i32, i32) unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::LayoutRect", align 4
  %6 = alloca %"class.blink::LayoutRect", align 4
  %7 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %0, i64 0, i32 4, i32 0
  %8 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %8, i64 0, i32 4
  %10 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %9 to i96*
  %11 = load i96, i96* %10, align 4
  %12 = and i96 %11, 1073741824
  %13 = icmp eq i96 %12, 0
  br i1 %13, label %57, label %14

14:                                               ; preds = %4
  %15 = bitcast %"class.blink::LayoutObject"* %8 to i1 (%"class.blink::LayoutObject"*, i32)***
  %16 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %15, align 8
  %17 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %16, i64 92
  %18 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %17, align 8
  %19 = tail call zeroext i1 %18(%"class.blink::LayoutObject"* %8, i32 15) #13
  br i1 %19, label %57, label %20

20:                                               ; preds = %14
  %21 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %15, align 8
  %22 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %21, i64 92
  %23 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %22, align 8
  %24 = tail call zeroext i1 %23(%"class.blink::LayoutObject"* %8, i32 13) #13
  br i1 %24, label %57, label %25

25:                                               ; preds = %20
  %26 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %15, align 8
  %27 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %26, i64 92
  %28 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %27, align 8
  %29 = tail call zeroext i1 %28(%"class.blink::LayoutObject"* %8, i32 36) #13
  br i1 %29, label %57, label %30

30:                                               ; preds = %25
  %31 = bitcast %"class.blink::LayoutRect"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #13
  %32 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %5, i64 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %5, i64 0, i32 0, i32 1, i32 0
  %34 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %5, i64 0, i32 1, i32 0, i32 0
  %35 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %5, i64 0, i32 1, i32 1, i32 0
  %36 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %0, i64 0, i32 5, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %0, i64 0, i32 6, i32 0
  %39 = load i32, i32* %38, align 8
  store i32 %37, i32* %32, align 4
  store i32 0, i32* %33, align 4
  store i32 %39, i32* %34, align 4
  store i32 640, i32* %35, align 4
  %40 = bitcast %"class.blink::LayoutRect"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #13
  %41 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %6, i64 0, i32 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %6, i64 0, i32 0, i32 1, i32 0
  %43 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %6, i64 0, i32 1, i32 0, i32 0
  %44 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %6, i64 0, i32 1, i32 1, i32 0
  %45 = bitcast %"class.blink::LayoutRect"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %45, i8 -86, i64 16, i1 false)
  br i1 %1, label %46, label %53

46:                                               ; preds = %30
  %47 = icmp sgt i32 %3, -1
  %48 = select i1 %47, i32 -2147483648, i32 2147483647
  %49 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %2, i32 %3) #13
  %50 = extractvalue { i32, i1 } %49, 1
  %51 = extractvalue { i32, i1 } %49, 0
  %52 = select i1 %50, i32 %48, i32 %51, !prof !2
  br label %53

53:                                               ; preds = %30, %46
  %54 = phi i32 [ %52, %46 ], [ %2, %30 ]
  store i32 %54, i32* %41, align 4
  store i32 0, i32* %42, align 4
  store i32 %3, i32* %43, align 4
  store i32 640, i32* %44, align 4
  %55 = call zeroext i1 @_ZNK5blink10LayoutRect10IntersectsERKS0_(%"class.blink::LayoutRect"* nonnull %5, %"class.blink::LayoutRect"* nonnull dereferenceable(16) %6) #13
  %56 = xor i1 %55, true
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #13
  br label %57

57:                                               ; preds = %4, %14, %20, %25, %53
  %58 = phi i1 [ %56, %53 ], [ true, %25 ], [ true, %4 ], [ true, %20 ], [ true, %14 ]
  ret i1 %58
}

declare zeroext i1 @_ZNK5blink10LayoutRect10IntersectsERKS0_(%"class.blink::LayoutRect"*, %"class.blink::LayoutRect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink9InlineBox16PlaceEllipsisBoxEbNS_10LayoutUnitES1_S1_RS1_PPS0_S1_(%"class.blink::InlineBox"* nocapture readonly, i1 zeroext, i32, i32, i32, %"class.blink::LayoutUnit"* nocapture dereferenceable(4), %"class.blink::InlineBox"** nocapture readnone, i32) unnamed_addr #0 align 2 {
  %9 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %0, i64 0, i32 6, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %5, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp slt i32 %10, 0
  %14 = select i1 %13, i32 -2147483648, i32 2147483647
  %15 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %12, i32 %10) #13
  %16 = extractvalue { i32, i1 } %15, 1
  %17 = extractvalue { i32, i1 } %15, 0
  %18 = select i1 %16, i32 %14, i32 %17, !prof !2
  store i32 %18, i32* %11, align 4
  ret i32 -64
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN5blink9InlineBox26ClearKnownToHaveNoOverflowEv(%"class.blink::InlineBox"* nocapture) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %0, i64 0, i32 7, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = and i32 %3, -16385
  store i32 %4, i32* %2, align 4
  %5 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %0, i64 0, i32 3
  %6 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %5, align 8
  %7 = icmp eq %"class.blink::InlineFlowBox"* %6, null
  br i1 %7, label %19, label %13

8:                                                ; preds = %13
  %9 = and i32 %16, -16385
  store i32 %9, i32* %15, align 4
  %10 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %14, i64 0, i32 0, i32 3
  %11 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %10, align 8
  %12 = icmp eq %"class.blink::InlineFlowBox"* %11, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %1, %8
  %14 = phi %"class.blink::InlineFlowBox"* [ %11, %8 ], [ %6, %1 ]
  %15 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %14, i64 0, i32 0, i32 7, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = and i32 %16, 16384
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %8

19:                                               ; preds = %8, %13, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink9InlineBox16PhysicalLocationEv(%"class.blink::InlineBox"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %0, i64 0, i32 5
  %3 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %0, i64 0, i32 7, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 2048
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %0, i64 0, i32 6, i32 0
  %9 = load i32, i32* %8, align 8
  br label %15

10:                                               ; preds = %1
  %11 = tail call i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"* %0) #13
  %12 = load i32, i32* %3, align 4
  %13 = and i32 %12, 2048
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %7, %10
  %16 = phi i32 [ %9, %7 ], [ %11, %10 ]
  %17 = tail call i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"* %0) #13
  br label %18

18:                                               ; preds = %10, %15
  %19 = phi i32 [ %11, %10 ], [ %16, %15 ]
  %20 = bitcast %"class.blink::LayoutPoint"* %2 to i64*
  %21 = load i64, i64* %20, align 4
  %22 = trunc i64 %21 to i32
  %23 = and i64 %21, -4294967296
  %24 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %0, i64 0, i32 4, i32 0
  %25 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %25, i64 0, i32 5, i32 0
  %27 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %27, i64 0, i32 0, i32 9
  %29 = bitcast [20 x i8]* %28 to i160*
  %30 = load i160, i160* %29, align 8
  %31 = and i160 %30, 15211807202738752817960438464512
  %32 = icmp eq i160 %31, 5070602400912917605986812821504
  br i1 %32, label %33, label %64

33:                                               ; preds = %18
  %34 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %0, i64 0, i32 3
  %35 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %34, align 8
  %36 = icmp eq %"class.blink::InlineFlowBox"* %35, null
  br i1 %36, label %44, label %37

37:                                               ; preds = %33, %37
  %38 = phi %"class.blink::InlineFlowBox"* [ %40, %37 ], [ %35, %33 ]
  %39 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %38, i64 0, i32 0, i32 3
  %40 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %39, align 8
  %41 = icmp eq %"class.blink::InlineFlowBox"* %40, null
  br i1 %41, label %42, label %37

42:                                               ; preds = %37
  %43 = bitcast %"class.blink::InlineFlowBox"* %38 to %"class.blink::RootInlineBox"*
  br label %46

44:                                               ; preds = %33
  %45 = bitcast %"class.blink::InlineBox"* %0 to %"class.blink::RootInlineBox"*
  br label %46

46:                                               ; preds = %44, %42
  %47 = phi %"class.blink::RootInlineBox"* [ %43, %42 ], [ %45, %44 ]
  %48 = tail call %"class.blink::LayoutObject"* @_ZNK5blink13RootInlineBox5BlockEv(%"class.blink::RootInlineBox"* %47) #13
  %49 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %48, i64 0, i32 5, i32 0
  %50 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %50, i64 0, i32 0, i32 9
  %52 = bitcast [20 x i8]* %51 to i160*
  %53 = load i160, i160* %52, align 8
  %54 = and i160 %53, 15211807202738752817960438464512
  %55 = icmp eq i160 %54, 5070602400912917605986812821504
  br i1 %55, label %56, label %64, !prof !2

56:                                               ; preds = %46
  %57 = bitcast %"class.blink::LayoutObject"* %48 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %58 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %57, align 8
  %59 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %58, i64 106
  %60 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %59, align 8
  %61 = tail call i32 %60(%"class.blink::LayoutObject"* %48, i32 %22, i32 %19, %"class.blink::LayoutBox"* null) #13
  %62 = zext i32 %61 to i64
  %63 = or i64 %23, %62
  br label %64

64:                                               ; preds = %18, %46, %56
  %65 = phi i64 [ %63, %56 ], [ %21, %46 ], [ %21, %18 ]
  %66 = and i64 %65, 4294967295
  %67 = or i64 %66, %23
  ret i64 %67
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9InlineBox18FlipForWritingModeERNS_10LayoutRectE(%"class.blink::InlineBox"*, %"class.blink::LayoutRect"* nocapture dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %0, i64 0, i32 4, i32 0
  %4 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %4, i64 0, i32 5, i32 0
  %6 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %6, i64 0, i32 0, i32 9
  %8 = bitcast [20 x i8]* %7 to i160*
  %9 = load i160, i160* %8, align 8
  %10 = and i160 %9, 15211807202738752817960438464512
  %11 = icmp eq i160 %10, 5070602400912917605986812821504
  br i1 %11, label %12, label %61

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %0, i64 0, i32 3
  %14 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %13, align 8
  %15 = icmp eq %"class.blink::InlineFlowBox"* %14, null
  br i1 %15, label %23, label %16

16:                                               ; preds = %12, %16
  %17 = phi %"class.blink::InlineFlowBox"* [ %19, %16 ], [ %14, %12 ]
  %18 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %17, i64 0, i32 0, i32 3
  %19 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %18, align 8
  %20 = icmp eq %"class.blink::InlineFlowBox"* %19, null
  br i1 %20, label %21, label %16

21:                                               ; preds = %16
  %22 = bitcast %"class.blink::InlineFlowBox"* %17 to %"class.blink::RootInlineBox"*
  br label %25

23:                                               ; preds = %12
  %24 = bitcast %"class.blink::InlineBox"* %0 to %"class.blink::RootInlineBox"*
  br label %25

25:                                               ; preds = %21, %23
  %26 = phi %"class.blink::RootInlineBox"* [ %22, %21 ], [ %24, %23 ]
  %27 = tail call %"class.blink::LayoutObject"* @_ZNK5blink13RootInlineBox5BlockEv(%"class.blink::RootInlineBox"* %26) #13
  %28 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %27, i64 0, i32 5, i32 0
  %29 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %29, i64 0, i32 0, i32 9
  %31 = bitcast [20 x i8]* %30 to i160*
  %32 = load i160, i160* %31, align 8
  %33 = and i160 %32, 15211807202738752817960438464512
  %34 = icmp eq i160 %33, 5070602400912917605986812821504
  br i1 %34, label %35, label %61, !prof !2

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %1, i64 0, i32 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %1, i64 0, i32 1, i32 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = bitcast %"class.blink::LayoutObject"* %27 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %41 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %40, align 8
  %42 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %41, i64 106
  %43 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %42, align 8
  %44 = tail call i32 %43(%"class.blink::LayoutObject"* %27, i32 %37, i32 %39, %"class.blink::LayoutBox"* null) #13
  %45 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %1, i64 0, i32 0, i32 1, i32 0
  %46 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %1, i64 0, i32 1, i32 1, i32 0
  %47 = load i32, i32* %45, align 4
  %48 = load i32, i32* %38, align 4
  %49 = load i32, i32* %46, align 4
  %50 = zext i32 %47 to i64
  %51 = shl nuw i64 %50, 32
  %52 = zext i32 %49 to i64
  %53 = shl nuw i64 %52, 32
  %54 = zext i32 %44 to i64
  %55 = or i64 %51, %54
  %56 = zext i32 %48 to i64
  %57 = or i64 %53, %56
  %58 = bitcast %"class.blink::LayoutRect"* %1 to i64*
  store i64 %55, i64* %58, align 4
  %59 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %1, i64 0, i32 1
  %60 = bitcast %"class.blink::LayoutSize"* %59 to i64*
  store i64 %57, i64* %60, align 4
  br label %61

61:                                               ; preds = %35, %25, %2
  ret void
}

declare %"class.blink::LayoutObject"* @_ZNK5blink13RootInlineBox5BlockEv(%"class.blink::RootInlineBox"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink9InlineBox18FlipForWritingModeERKNS_11LayoutPointE(%"class.blink::InlineBox"*, %"class.blink::LayoutPoint"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %0, i64 0, i32 4, i32 0
  %4 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %4, i64 0, i32 5, i32 0
  %6 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %6, i64 0, i32 0, i32 9
  %8 = bitcast [20 x i8]* %7 to i160*
  %9 = load i160, i160* %8, align 8
  %10 = and i160 %9, 15211807202738752817960438464512
  %11 = icmp eq i160 %10, 5070602400912917605986812821504
  br i1 %11, label %15, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.blink::LayoutPoint"* %1 to i64*
  %14 = load i64, i64* %13, align 4
  br label %58

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %0, i64 0, i32 3
  %17 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %16, align 8
  %18 = icmp eq %"class.blink::InlineFlowBox"* %17, null
  br i1 %18, label %26, label %19

19:                                               ; preds = %15, %19
  %20 = phi %"class.blink::InlineFlowBox"* [ %22, %19 ], [ %17, %15 ]
  %21 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %20, i64 0, i32 0, i32 3
  %22 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %21, align 8
  %23 = icmp eq %"class.blink::InlineFlowBox"* %22, null
  br i1 %23, label %24, label %19

24:                                               ; preds = %19
  %25 = bitcast %"class.blink::InlineFlowBox"* %20 to %"class.blink::RootInlineBox"*
  br label %28

26:                                               ; preds = %15
  %27 = bitcast %"class.blink::InlineBox"* %0 to %"class.blink::RootInlineBox"*
  br label %28

28:                                               ; preds = %24, %26
  %29 = phi %"class.blink::RootInlineBox"* [ %25, %24 ], [ %27, %26 ]
  %30 = tail call %"class.blink::LayoutObject"* @_ZNK5blink13RootInlineBox5BlockEv(%"class.blink::RootInlineBox"* %29) #13
  %31 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %1, i64 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %30, i64 0, i32 5, i32 0
  %34 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %34, i64 0, i32 0, i32 9
  %36 = bitcast [20 x i8]* %35 to i160*
  %37 = load i160, i160* %36, align 8
  %38 = and i160 %37, 15211807202738752817960438464512
  %39 = icmp eq i160 %38, 5070602400912917605986812821504
  br i1 %39, label %40, label %50, !prof !2

40:                                               ; preds = %28
  %41 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %30, i64 1, i32 4, i32 0, i64 4
  %42 = bitcast i8* %41 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = icmp sgt i32 %32, -1
  %45 = select i1 %44, i32 -2147483648, i32 2147483647
  %46 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %43, i32 %32) #13
  %47 = extractvalue { i32, i1 } %46, 1
  %48 = extractvalue { i32, i1 } %46, 0
  %49 = select i1 %47, i32 %45, i32 %48, !prof !2
  br label %50

50:                                               ; preds = %28, %40
  %51 = phi i32 [ %49, %40 ], [ %32, %28 ]
  %52 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %1, i64 0, i32 1, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = zext i32 %53 to i64
  %55 = shl nuw i64 %54, 32
  %56 = zext i32 %51 to i64
  %57 = or i64 %55, %56
  br label %58

58:                                               ; preds = %50, %12
  %59 = phi i64 [ %14, %12 ], [ %57, %50 ]
  ret i64 %59
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9InlineBox44SetShouldDoFullPaintInvalidationForFirstLineEv(%"class.blink::InlineBox"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %0, i64 0, i32 4, i32 0
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3, i64 0, i32 5, i32 0
  %5 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  tail call void @_ZNK5blink13ComputedStyle30ClearCachedPseudoElementStylesEv(%"class.blink::ComputedStyle"* %5) #13
  %6 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  tail call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %6, i8 zeroext 3) #13
  %7 = bitcast %"class.blink::InlineBox"* %0 to i1 (%"class.blink::InlineBox"*)***
  %8 = load i1 (%"class.blink::InlineBox"*)**, i1 (%"class.blink::InlineBox"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::InlineBox"*)*, i1 (%"class.blink::InlineBox"*)** %8, i64 14
  %10 = load i1 (%"class.blink::InlineBox"*)*, i1 (%"class.blink::InlineBox"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::InlineBox"* %0) #13
  br i1 %11, label %12, label %22

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %0, i64 1, i32 0, i32 1
  %14 = bitcast i8* %13 to %"class.blink::InlineBox"**
  %15 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %14, align 8
  %16 = icmp eq %"class.blink::InlineBox"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %12, %17
  %18 = phi %"class.blink::InlineBox"* [ %20, %17 ], [ %15, %12 ]
  tail call void @_ZN5blink9InlineBox44SetShouldDoFullPaintInvalidationForFirstLineEv(%"class.blink::InlineBox"* nonnull %18)
  %19 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %18, i64 0, i32 1
  %20 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %19, align 8
  %21 = icmp eq %"class.blink::InlineBox"* %20, null
  br i1 %21, label %22, label %17

22:                                               ; preds = %17, %12, %1
  ret void
}

declare void @_ZNK5blink13ComputedStyle30ClearCachedPseudoElementStylesEv(%"class.blink::ComputedStyle"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink15CanUseInlineBoxERKNS_12LayoutObjectE(%"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #0 {
  %2 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase33is_css_container_queries_enabled_E, align 1, !range !3
  %3 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase26is_layout_ng_grid_enabled_E, align 1
  %4 = or i8 %3, %2
  %5 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase31is_bidi_caret_affinity_enabled_E, align 1
  %6 = or i8 %4, %5
  %7 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase21is_layout_ng_enabled_E, align 1
  %8 = or i8 %6, %7
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %1
  %11 = tail call %"class.blink::LayoutBlockFlow"* @_ZNK5blink12LayoutObject21ContainingNGBlockFlowEv(%"class.blink::LayoutObject"* %0) #13
  %12 = icmp eq %"class.blink::LayoutBlockFlow"* %11, null
  br label %13

13:                                               ; preds = %1, %10
  %14 = phi i1 [ true, %1 ], [ %12, %10 ]
  ret i1 %14
}

declare %"class.blink::LayoutBlockFlow"* @_ZNK5blink12LayoutObject21ContainingNGBlockFlowEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

declare void @_ZN5blink22ObjectPaintInvalidator32SlowSetPaintingLayerNeedsRepaintEv(%"class.blink::ObjectPaintInvalidator"*) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare %"class.blink::Text"* @_ZNK5blink18LayoutTextFragment18AssociatedTextNodeEv(%"class.blink::LayoutTextFragment"*) local_unnamed_addr #1

declare %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #8

declare %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"*) local_unnamed_addr #1

declare %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"*, %"class.blink::FontDescription"* dereferenceable(80)) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject29BorderAndPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 27
  %7 = load i16, i16* %6, align 8
  %8 = and i16 %7, 224
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %17, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 24, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp ne i32 %12, 0
  %14 = and i16 %7, 240
  %15 = icmp ne i16 %14, 0
  %16 = and i1 %15, %13
  br i1 %16, label %49, label %17

17:                                               ; preds = %10, %1
  %18 = and i16 %7, 3584
  %19 = icmp eq i16 %18, 0
  br i1 %19, label %27, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 25, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp ne i32 %22, 0
  %24 = and i16 %7, 3840
  %25 = icmp ne i16 %24, 0
  %26 = and i1 %25, %23
  br i1 %26, label %49, label %27

27:                                               ; preds = %20, %17
  %28 = icmp ult i16 %7, 8192
  br i1 %28, label %33, label %29

29:                                               ; preds = %27
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 26, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %49

33:                                               ; preds = %29, %27
  %34 = and i16 %7, 14
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %43, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 23, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp ne i32 %38, 0
  %40 = and i16 %7, 15
  %41 = icmp ne i16 %40, 0
  %42 = and i1 %41, %39
  br i1 %42, label %49, label %43

43:                                               ; preds = %36, %33
  %44 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %45 = bitcast [20 x i8]* %44 to i160*
  %46 = load i160, i160* %45, align 8
  %47 = and i160 %46, 89202980794122492566142873090593446023921664
  %48 = icmp eq i160 %47, 0
  br i1 %48, label %196, label %49

49:                                               ; preds = %43, %36, %20, %10, %29
  %50 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %51 = bitcast [20 x i8]* %50 to i160*
  %52 = load i160, i160* %51, align 8, !noalias !6
  %53 = lshr i160 %52, 102
  %54 = trunc i160 %53 to i8
  %55 = and i8 %54, 3
  %56 = bitcast %"class.blink::LayoutBoxModelObject"* %0 to i8*
  switch i8 %55, label %57 [
    i8 0, label %66
    i8 1, label %58
  ]

57:                                               ; preds = %49
  br label %58

58:                                               ; preds = %57, %49
  %59 = phi { i64, i64 } [ { i64 993, i64 0 }, %57 ], [ { i64 1001, i64 0 }, %49 ]
  %60 = extractvalue { i64, i64 } %59, 0
  %61 = extractvalue { i64, i64 } %59, 1
  %62 = getelementptr inbounds i8, i8* %56, i64 %61
  %63 = bitcast i8* %62 to %"class.blink::LayoutBoxModelObject"*
  %64 = and i64 %60, 1
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %76, label %66

66:                                               ; preds = %58, %49
  %67 = phi %"class.blink::LayoutBoxModelObject"* [ %63, %58 ], [ %0, %49 ]
  %68 = phi i8* [ %62, %58 ], [ %56, %49 ]
  %69 = phi i64 [ %60, %58 ], [ 977, %49 ]
  %70 = bitcast i8* %68 to i8**
  %71 = load i8*, i8** %70, align 8
  %72 = add i64 %69, -1
  %73 = getelementptr i8, i8* %71, i64 %72
  %74 = bitcast i8* %73 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %75 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %74, align 8
  br label %78

76:                                               ; preds = %58
  %77 = inttoptr i64 %60 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %78

78:                                               ; preds = %76, %66
  %79 = phi %"class.blink::LayoutBoxModelObject"* [ %67, %66 ], [ %63, %76 ]
  %80 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %75, %66 ], [ %77, %76 ]
  %81 = tail call i32 %80(%"class.blink::LayoutBoxModelObject"* %79) #13
  %82 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !9
  %83 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %82, i64 0, i32 0, i32 9
  %84 = bitcast [20 x i8]* %83 to i160*
  %85 = load i160, i160* %84, align 8, !noalias !9
  %86 = lshr i160 %85, 102
  %87 = trunc i160 %86 to i8
  %88 = and i8 %87, 3
  switch i8 %88, label %89 [
    i8 0, label %98
    i8 1, label %90
  ]

89:                                               ; preds = %78
  br label %90

90:                                               ; preds = %89, %78
  %91 = phi { i64, i64 } [ { i64 961, i64 0 }, %89 ], [ { i64 969, i64 0 }, %78 ]
  %92 = extractvalue { i64, i64 } %91, 0
  %93 = extractvalue { i64, i64 } %91, 1
  %94 = getelementptr inbounds i8, i8* %56, i64 %93
  %95 = bitcast i8* %94 to %"class.blink::LayoutBoxModelObject"*
  %96 = and i64 %92, 1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %108, label %98

98:                                               ; preds = %90, %78
  %99 = phi %"class.blink::LayoutBoxModelObject"* [ %95, %90 ], [ %0, %78 ]
  %100 = phi i8* [ %94, %90 ], [ %56, %78 ]
  %101 = phi i64 [ %92, %90 ], [ 945, %78 ]
  %102 = bitcast i8* %100 to i8**
  %103 = load i8*, i8** %102, align 8
  %104 = add i64 %101, -1
  %105 = getelementptr i8, i8* %103, i64 %104
  %106 = bitcast i8* %105 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %107 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %106, align 8
  br label %110

108:                                              ; preds = %90
  %109 = inttoptr i64 %92 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %110

110:                                              ; preds = %98, %108
  %111 = phi %"class.blink::LayoutBoxModelObject"* [ %99, %98 ], [ %95, %108 ]
  %112 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %107, %98 ], [ %109, %108 ]
  %113 = tail call i32 %112(%"class.blink::LayoutBoxModelObject"* %111) #13
  %114 = icmp slt i32 %113, 0
  %115 = select i1 %114, i32 -2147483648, i32 2147483647
  %116 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %81, i32 %113) #13
  %117 = extractvalue { i32, i1 } %116, 1
  %118 = extractvalue { i32, i1 } %116, 0
  %119 = select i1 %117, i32 %115, i32 %118, !prof !2
  %120 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !12
  %121 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %120, i64 0, i32 0, i32 9
  %122 = bitcast [20 x i8]* %121 to i160*
  %123 = load i160, i160* %122, align 8, !noalias !12
  %124 = lshr i160 %123, 102
  %125 = trunc i160 %124 to i8
  %126 = and i8 %125, 3
  switch i8 %126, label %127 [
    i8 0, label %136
    i8 1, label %128
  ]

127:                                              ; preds = %110
  br label %128

128:                                              ; preds = %127, %110
  %129 = phi { i64, i64 } [ { i64 1001, i64 0 }, %127 ], [ { i64 993, i64 0 }, %110 ]
  %130 = extractvalue { i64, i64 } %129, 0
  %131 = extractvalue { i64, i64 } %129, 1
  %132 = getelementptr inbounds i8, i8* %56, i64 %131
  %133 = bitcast i8* %132 to %"class.blink::LayoutBoxModelObject"*
  %134 = and i64 %130, 1
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %146, label %136

136:                                              ; preds = %128, %110
  %137 = phi %"class.blink::LayoutBoxModelObject"* [ %133, %128 ], [ %0, %110 ]
  %138 = phi i8* [ %132, %128 ], [ %56, %110 ]
  %139 = phi i64 [ %130, %128 ], [ 985, %110 ]
  %140 = bitcast i8* %138 to i8**
  %141 = load i8*, i8** %140, align 8
  %142 = add i64 %139, -1
  %143 = getelementptr i8, i8* %141, i64 %142
  %144 = bitcast i8* %143 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %145 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %144, align 8
  br label %148

146:                                              ; preds = %128
  %147 = inttoptr i64 %130 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %148

148:                                              ; preds = %146, %136
  %149 = phi %"class.blink::LayoutBoxModelObject"* [ %137, %136 ], [ %133, %146 ]
  %150 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %145, %136 ], [ %147, %146 ]
  %151 = tail call i32 %150(%"class.blink::LayoutBoxModelObject"* %149) #13
  %152 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !15
  %153 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %152, i64 0, i32 0, i32 9
  %154 = bitcast [20 x i8]* %153 to i160*
  %155 = load i160, i160* %154, align 8, !noalias !15
  %156 = lshr i160 %155, 102
  %157 = trunc i160 %156 to i8
  %158 = and i8 %157, 3
  switch i8 %158, label %159 [
    i8 0, label %168
    i8 1, label %160
  ]

159:                                              ; preds = %148
  br label %160

160:                                              ; preds = %159, %148
  %161 = phi { i64, i64 } [ { i64 969, i64 0 }, %159 ], [ { i64 961, i64 0 }, %148 ]
  %162 = extractvalue { i64, i64 } %161, 0
  %163 = extractvalue { i64, i64 } %161, 1
  %164 = getelementptr inbounds i8, i8* %56, i64 %163
  %165 = bitcast i8* %164 to %"class.blink::LayoutBoxModelObject"*
  %166 = and i64 %162, 1
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %178, label %168

168:                                              ; preds = %160, %148
  %169 = phi %"class.blink::LayoutBoxModelObject"* [ %165, %160 ], [ %0, %148 ]
  %170 = phi i8* [ %164, %160 ], [ %56, %148 ]
  %171 = phi i64 [ %162, %160 ], [ 953, %148 ]
  %172 = bitcast i8* %170 to i8**
  %173 = load i8*, i8** %172, align 8
  %174 = add i64 %171, -1
  %175 = getelementptr i8, i8* %173, i64 %174
  %176 = bitcast i8* %175 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %177 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %176, align 8
  br label %180

178:                                              ; preds = %160
  %179 = inttoptr i64 %162 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %180

180:                                              ; preds = %168, %178
  %181 = phi %"class.blink::LayoutBoxModelObject"* [ %169, %168 ], [ %165, %178 ]
  %182 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %177, %168 ], [ %179, %178 ]
  %183 = tail call i32 %182(%"class.blink::LayoutBoxModelObject"* %181) #13
  %184 = icmp slt i32 %183, 0
  %185 = select i1 %184, i32 -2147483648, i32 2147483647
  %186 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %151, i32 %183) #13
  %187 = extractvalue { i32, i1 } %186, 1
  %188 = extractvalue { i32, i1 } %186, 0
  %189 = select i1 %187, i32 %185, i32 %188, !prof !2
  %190 = icmp slt i32 %189, 0
  %191 = select i1 %190, i32 -2147483648, i32 2147483647
  %192 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %119, i32 %189) #13
  %193 = extractvalue { i32, i1 } %192, 1
  %194 = extractvalue { i32, i1 } %192, 0
  %195 = select i1 %193, i32 %191, i32 %194, !prof !2
  br label %196

196:                                              ; preds = %43, %180
  %197 = phi i32 [ %195, %180 ], [ 0, %43 ]
  ret i32 %197
}

declare zeroext i1 @_ZNK5blink12LayoutObject4IsHREv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

declare i32 @_ZNK5blink13ContainerNode13CountChildrenEv(%"class.blink::ContainerNode"*) local_unnamed_addr #1

declare void @_ZN5blink9LayoutBox20DeleteLineBoxWrapperEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink12LayoutObject10IsSelectedEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #9

declare void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"*, i8 zeroext) local_unnamed_addr #1

declare zeroext i1 @_ZN4base19PartitionAllocHooks31AllocationOverrideHookIfEnabledEPPvimPKc(i8**, i32, i64, i8*) local_unnamed_addr #1

declare void @_ZN4base19PartitionAllocHooks31AllocationObserverHookIfEnabledEPvmPKc(i8*, i64, i8*) local_unnamed_addr #1

declare void @_ZN7logging8RawCheckEPKc(i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #9

declare void @_ZN4base8internal6PCScan8JoinScanEv() local_unnamed_addr #1

declare i8* @_ZN4base8internal15PartitionBucketILb0EE13SlowPathAllocEPNS_13PartitionRootILb0EEEimmPb(%"struct.base::internal::PartitionBucket"*, %"struct.base::PartitionRoot"*, i32, i64, i64, i8*) local_unnamed_addr #1

; Function Attrs: noinline noreturn nounwind ssp uwtable
define internal fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() unnamed_addr #10 {
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !18
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !19
  unreachable
}

; Function Attrs: inaccessiblemem_or_argmemonly nounwind
declare void @llvm.prefetch(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #11

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.bswap.i64(i64) #9

declare void @_ZN4base19PartitionAllocHooks25FreeObserverHookIfEnabledEPv(i8*) local_unnamed_addr #1

declare zeroext i1 @_ZN4base19PartitionAllocHooks25FreeOverrideHookIfEnabledEPv(i8*) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZN4base8internal17DoubleFreeAttemptEv() local_unnamed_addr #12

declare void @_ZN4base8internal6PCScan11PerformScanENS1_14InvocationModeE(%"class.base::internal::PCScan"*, i32) local_unnamed_addr #1

declare { i8*, i64 } @_ZN4base8internal16SlotSpanMetadataILb0EE12FreeSlowPathEv(%"struct.base::internal::SlotSpanMetadata"*) local_unnamed_addr #1

declare void @_ZN4base8internal13DeferredUnmap5UnmapEv(%"struct.base::internal::DeferredUnmap"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { noinline noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { inaccessiblemem_or_argmemonly nounwind }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind }
attributes #15 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{i64 0, i64 65}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!8 = distinct !{!8, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!11 = distinct !{!11, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!14 = distinct !{!14, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!17 = distinct !{!17, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!18 = !{i32 -2142192912}
!19 = !{i32 -2142192891}
