; ModuleID = '../../third_party/pdfium/fxjs/xfa/cfxjse_resolveprocessor.cpp'
source_filename = "../../third_party/pdfium/fxjs/xfa/cfxjse_resolveprocessor.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CFXJSE_ResolveProcessor = type { i32, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CFXJSE_NodeHelper* }
%class.CFXJSE_NodeHelper = type { i16, i32, i64, i32, %"class.cppgc::internal::BasicPersistent", %"class.cppgc::internal::BasicPersistent" }
%"class.cppgc::internal::BasicPersistent" = type { %"class.cppgc::internal::PersistentBase" }
%"class.cppgc::internal::PersistentBase" = type { i8*, %"class.cppgc::internal::PersistentNode"* }
%"class.cppgc::internal::PersistentNode" = type { %union.anon, void (%"class.cppgc::Visitor"*, i8*)* }
%union.anon = type { i8* }
%"class.cppgc::Visitor" = type { i32 (...)** }
%class.CFXJSE_ResolveNodeData = type { %"class.fxcrt::UnownedPtr", %"class.fxcrt::UnownedPtr.68", %"class.fxcrt::WideString", %"class.fxcrt::WideString", i32, i32, i16, %"class.CFXJSE_Engine::ResolveResult" }
%"class.fxcrt::UnownedPtr" = type { %class.CFXJSE_Engine* }
%"class.fxcrt::UnownedPtr.68" = type { %class.CXFA_Object* }
%class.CXFA_Object = type { i32 (...)**, i32, i16, %"class.fxcrt::StringViewTemplate", i32, %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember.29" }
%"class.fxcrt::StringViewTemplate" = type { %"class.pdfium::span" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr.28", i64 }
%"class.fxcrt::UnownedPtr.28" = type { i8* }
%"class.cppgc::internal::BasicMember" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::MemberBase" = type { i8* }
%"class.cppgc::internal::BasicMember.29" = type { %"class.cppgc::internal::MemberBase" }
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr.43" }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%"class.CFXJSE_Engine::ResolveResult" = type { i32, %struct.XFA_SCRIPTATTRIBUTEINFO, %"class.std::__1::vector.90" }
%struct.XFA_SCRIPTATTRIBUTEINFO = type { i16, i8, void (%"class.v8::Isolate"*, %class.CJX_Object*, %"class.v8::Local"*, i1, i16)* }
%"class.v8::Isolate" = type { i8 }
%class.CJX_Object = type { %class.CFXJSE_HostObject, %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.71", %"class.cppgc::internal::BasicMember.72", %"class.std::__1::unique_ptr.73", %"class.std::__1::map.79", i64 }
%class.CFXJSE_HostObject = type { i32 (...)** }
%"class.cppgc::internal::BasicMember.70" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.71" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.72" = type { %"class.cppgc::internal::MemberBase" }
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %class.CFXJSE_MapModule* }
%class.CFXJSE_MapModule = type opaque
%"class.std::__1::map.79" = type { %"class.std::__1::__tree.80" }
%"class.std::__1::__tree.80" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.81", %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { i64 }
%"class.v8::Local" = type { %"class.v8::Value"* }
%"class.v8::Value" = type { i8 }
%"class.std::__1::vector.90" = type { %"class.std::__1::__vector_base.91" }
%"class.std::__1::__vector_base.91" = type { %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"*, %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.cppgc::internal::BasicMember.70"* }
%class.CFXJSE_Engine = type <{ %class.CFX_V8, %"class.fxcrt::UnownedPtr.2", %"class.cppgc::internal::BasicPersistent.3", %"class.std::__1::unique_ptr.4", %"class.fxcrt::UnownedPtr.10", i32, [4 x i8], %"class.std::__1::map", %"class.std::__1::map.17", %"class.fxcrt::UnownedPtr.26", %"class.std::__1::vector.47", %"class.fxcrt::UnownedPtr.54", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.61", %"class.cppgc::internal::BasicPersistent.67", i16, [6 x i8] }>
%class.CFX_V8 = type { i32 (...)**, %"class.fxcrt::UnownedPtr.1" }
%"class.fxcrt::UnownedPtr.1" = type { %"class.v8::Isolate"* }
%"class.fxcrt::UnownedPtr.2" = type { %class.CJS_Runtime* }
%class.CJS_Runtime = type opaque
%"class.cppgc::internal::BasicPersistent.3" = type { %"class.cppgc::internal::PersistentBase" }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %class.CFXJSE_Context* }
%class.CFXJSE_Context = type opaque
%"class.fxcrt::UnownedPtr.10" = type { %class.CFXJSE_Class* }
%class.CFXJSE_Class = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.11", %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::map.17" = type { %"class.std::__1::__tree.18" }
%"class.std::__1::__tree.18" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.19", %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.fxcrt::UnownedPtr.26" = type { %class.CXFA_EventParam* }
%class.CXFA_EventParam = type { i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, %"class.fxcrt::UnownedPtr.27", %"class.fxcrt::WideString", %"class.fxcrt::WideString", %"class.fxcrt::WideString", %"class.fxcrt::WideString", %"class.fxcrt::WideString", %"class.fxcrt::WideString", %"class.fxcrt::WideString", %"class.fxcrt::WideString" }
%"class.fxcrt::UnownedPtr.27" = type { %class.CXFA_Node* }
%class.CXFA_Node = type { %class.CXFA_Object, %"class.fxjs::GCedTreeNodeMixin", i32, i8, i8, i8, %"class.pdfium::span.31", %"class.pdfium::span.33", i32, %"class.fxcrt::UnownedPtr.35", i8, i8, i8, i32, %"class.cppgc::internal::BasicMember.30", %"class.std::__1::vector", %"class.cppgc::internal::BasicMember.41", %"class.cppgc::internal::BasicMember.42" }
%"class.fxjs::GCedTreeNodeMixin" = type { %"class.cppgc::GarbageCollectedMixin", %"class.fxcrt::TreeNode" }
%"class.cppgc::GarbageCollectedMixin" = type { i32 (...)** }
%"class.fxcrt::TreeNode" = type { i32 (...)**, %"class.cppgc::internal::BasicMember.30", %"class.cppgc::internal::BasicMember.30", %"class.cppgc::internal::BasicMember.30", %"class.cppgc::internal::BasicMember.30", %"class.cppgc::internal::BasicMember.30" }
%"class.pdfium::span.31" = type { %"class.fxcrt::UnownedPtr.32", i64 }
%"class.fxcrt::UnownedPtr.32" = type { %"struct.CXFA_Node::PropertyData"* }
%"struct.CXFA_Node::PropertyData" = type { i16, i8, i8 }
%"class.pdfium::span.33" = type { %"class.fxcrt::UnownedPtr.34", i64 }
%"class.fxcrt::UnownedPtr.34" = type { %"struct.CXFA_Node::AttributeData"* }
%"struct.CXFA_Node::AttributeData" = type { i16, i8, i8* }
%"class.fxcrt::UnownedPtr.35" = type { %class.CFX_XMLNode* }
%class.CFX_XMLNode = type opaque
%"class.cppgc::internal::BasicMember.30" = type { %"class.cppgc::internal::MemberBase" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.cppgc::internal::BasicMember.30"*, %"class.cppgc::internal::BasicMember.30"*, %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.cppgc::internal::BasicMember.30"* }
%"class.cppgc::internal::BasicMember.41" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.42" = type { %"class.cppgc::internal::MemberBase" }
%"class.std::__1::vector.47" = type { %"class.std::__1::__vector_base.48" }
%"class.std::__1::__vector_base.48" = type { %"class.cppgc::internal::BasicPersistent"*, %"class.cppgc::internal::BasicPersistent"*, %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.cppgc::internal::BasicPersistent"* }
%"class.fxcrt::UnownedPtr.54" = type { %"class.std::__1::vector.47"* }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %class.CFXJSE_ResolveProcessor* }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %class.CFXJSE_FormCalcContext* }
%class.CFXJSE_FormCalcContext = type opaque
%"class.cppgc::internal::BasicPersistent.67" = type { %"class.cppgc::internal::PersistentBase" }
%"class.std::__1::vector.130" = type { %"class.std::__1::__vector_base.131" }
%"class.std::__1::__vector_base.131" = type { %class.CXFA_Node**, %class.CXFA_Node**, %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %class.CXFA_Node** }
%"class.fxcrt::StringViewTemplate.97" = type { %"class.pdfium::span.98" }
%"class.pdfium::span.98" = type { %"class.fxcrt::UnownedPtr.99", i64 }
%"class.fxcrt::UnownedPtr.99" = type { i32* }
%"class.std::__1::__vector_base_common" = type { i8 }
%class.CXFA_Document = type { %"class.fxcrt::UnownedPtr.101", %"class.cppgc::internal::BasicMember.102", %"class.cppgc::internal::BasicMember.103", %"class.cppgc::internal::BasicMember.30", %"class.std::__1::unique_ptr.104", %"class.cppgc::internal::BasicMember.110", %"class.cppgc::internal::BasicMember.111", %"class.cppgc::internal::BasicMember.112", %"class.cppgc::internal::BasicMember.113", %"class.cppgc::internal::BasicMember.114", %"class.cppgc::internal::BasicMember.115", %"class.cppgc::internal::BasicMember.116", %"class.cppgc::internal::BasicMember.117", %"class.std::__1::map.118", %"class.std::__1::vector", i32, %"class.pdfium::Optional", i8, i8 }
%"class.fxcrt::UnownedPtr.101" = type { %"class.cppgc::Heap"* }
%"class.cppgc::Heap" = type { i32 (...)** }
%"class.cppgc::internal::BasicMember.102" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.103" = type { %"class.cppgc::internal::MemberBase" }
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %class.CFXJSE_Engine* }
%"class.cppgc::internal::BasicMember.110" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.111" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.112" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.113" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.114" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.115" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.116" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.117" = type { %"class.cppgc::internal::MemberBase" }
%"class.std::__1::map.118" = type { %"class.std::__1::__tree.119" }
%"class.std::__1::__tree.119" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.120", %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.pdfium::Optional" = type { %"class.pdfium::internal::OptionalBase" }
%"class.pdfium::internal::OptionalBase" = type { %"struct.pdfium::internal::OptionalStorage" }
%"struct.pdfium::internal::OptionalStorage" = type { %"struct.pdfium::internal::OptionalStorageBase" }
%"struct.pdfium::internal::OptionalStorageBase" = type { i8, %union.anon.129 }
%union.anon.129 = type { %"struct.pdfium::internal::DummyUnionMember" }
%"struct.pdfium::internal::DummyUnionMember" = type { i8 }
%"class.pdfium::Optional.140" = type { %"class.pdfium::internal::OptionalBase.141" }
%"class.pdfium::internal::OptionalBase.141" = type { %"struct.pdfium::internal::OptionalStorage.142" }
%"struct.pdfium::internal::OptionalStorage.142" = type { %"struct.pdfium::internal::OptionalStorageBase.143" }
%"struct.pdfium::internal::OptionalStorageBase.143" = type { i8, %union.anon.144 }
%union.anon.144 = type { %struct.XFA_SCRIPTATTRIBUTEINFO }
%"class.cppgc::internal::PersistentRegion" = type { %"class.std::__1::vector.182", %"class.cppgc::internal::PersistentNode"*, i64 }
%"class.std::__1::vector.182" = type { %"class.std::__1::__vector_base.183" }
%"class.std::__1::__vector_base.183" = type { %"class.std::__1::unique_ptr.184"*, %"class.std::__1::unique_ptr.184"*, %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::unique_ptr.184" = type opaque
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.std::__1::unique_ptr.184"* }
%class.CFXJSE_Value = type { %"class.v8::Global" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Value"* }
%"struct.cppgc::internal::CagedHeapLocalData" = type { i8, %"class.cppgc::internal::HeapBase"* }
%"class.cppgc::internal::HeapBase" = type opaque
%"class.pdfium::span.145" = type { %"class.fxcrt::UnownedPtr.146", i64 }
%"class.fxcrt::UnownedPtr.146" = type { i32* }
%"class.std::__1::vector.149" = type { %"class.std::__1::__vector_base.150" }
%"class.std::__1::__vector_base.150" = type { i32*, i32*, %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { i32* }
%"class.cppgc::SourceLocation" = type { i8*, i8*, i64 }

$_ZNSt3__16vectorIP9CXFA_NodeNS_9allocatorIS2_EEE6insertINS_11__wrap_iterIPS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISB_E9referenceEEE5valueES9_E4typeENS7_IPKS2_EESB_SB_ = comdat any

$_ZNSt3__16vectorIN5cppgc8internal11BasicMemberI11CXFA_ObjectNS2_15StrongMemberTagENS2_26DijkstraWriteBarrierPolicyENS2_22DisabledCheckingPolicyEEENS_9allocatorIS8_EEE6insertINS_11__wrap_iterIPS8_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS8_NS_15iterator_traitsISH_E9referenceEEE5valueESF_E4typeENSD_IPKS8_EESH_SH_ = comdat any

$_ZNSt3__16vectorIN5cppgc8internal11BasicMemberI11CXFA_ObjectNS2_15StrongMemberTagENS2_26DijkstraWriteBarrierPolicyENS2_22DisabledCheckingPolicyEEENS_9allocatorIS8_EEE6insertINS_11__wrap_iterIPP9CXFA_NodeEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS8_NS_15iterator_traitsISJ_E9referenceEEE5valueENSD_IPS8_EEE4typeENSD_IPKS8_EESJ_SJ_ = comdat any

$_ZNSt3__16vectorIN5cppgc8internal15BasicPersistentI9CXFA_NodeNS2_22StrongPersistentPolicyENS2_20IgnoreLocationPolicyENS2_22DisabledCheckingPolicyEEENS_9allocatorIS8_EEE21__push_back_slow_pathIS8_EEvOT_ = comdat any

$_ZN5cppgc8internal15BasicPersistentI9CXFA_NodeNS0_22StrongPersistentPolicyENS0_20IgnoreLocationPolicyENS0_22DisabledCheckingPolicyEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5cppgc8internal14TraceTraitBaseI9CXFA_NodeE5TraceEPNS_7VisitorEPKv = comdat any

@.str.2 = private unnamed_addr constant [1 x i32] zeroinitializer, align 4

@_ZN23CFXJSE_ResolveProcessorC1Ev = hidden unnamed_addr alias void (%class.CFXJSE_ResolveProcessor*), void (%class.CFXJSE_ResolveProcessor*)* @_ZN23CFXJSE_ResolveProcessorC2Ev
@_ZN23CFXJSE_ResolveProcessorD1Ev = hidden unnamed_addr alias void (%class.CFXJSE_ResolveProcessor*), void (%class.CFXJSE_ResolveProcessor*)* @_ZN23CFXJSE_ResolveProcessorD2Ev
@_ZN22CFXJSE_ResolveNodeDataC1EP13CFXJSE_Engine = hidden unnamed_addr alias void (%class.CFXJSE_ResolveNodeData*, %class.CFXJSE_Engine*), void (%class.CFXJSE_ResolveNodeData*, %class.CFXJSE_Engine*)* @_ZN22CFXJSE_ResolveNodeDataC2EP13CFXJSE_Engine
@_ZN22CFXJSE_ResolveNodeDataD1Ev = hidden unnamed_addr alias void (%class.CFXJSE_ResolveNodeData*), void (%class.CFXJSE_ResolveNodeData*)* @_ZN22CFXJSE_ResolveNodeDataD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23CFXJSE_ResolveProcessorC2Ev(%class.CFXJSE_ResolveProcessor* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFXJSE_ResolveProcessor, %class.CFXJSE_ResolveProcessor* %0, i64 0, i32 0
  store i32 0, i32* %2, align 8
  %3 = tail call i8* @_Znwm(i64 56) #10
  %4 = bitcast i8* %3 to %class.CFXJSE_NodeHelper*
  tail call void @_ZN17CFXJSE_NodeHelperC1Ev(%class.CFXJSE_NodeHelper* nonnull %4) #11
  %5 = getelementptr inbounds %class.CFXJSE_ResolveProcessor, %class.CFXJSE_ResolveProcessor* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = bitcast %class.CFXJSE_NodeHelper** %5 to i8**
  store i8* %3, i8** %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23CFXJSE_ResolveProcessorD2Ev(%class.CFXJSE_ResolveProcessor* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFXJSE_ResolveProcessor, %class.CFXJSE_ResolveProcessor* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %class.CFXJSE_NodeHelper*, %class.CFXJSE_NodeHelper** %2, align 8
  store %class.CFXJSE_NodeHelper* null, %class.CFXJSE_NodeHelper** %2, align 8
  %4 = icmp eq %class.CFXJSE_NodeHelper* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN17CFXJSE_NodeHelperD1Ev(%class.CFXJSE_NodeHelper* nonnull %3) #11
  %6 = bitcast %class.CFXJSE_NodeHelper* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #10
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN23CFXJSE_ResolveProcessor7ResolveEPN2v87IsolateER22CFXJSE_ResolveNodeData(%class.CFXJSE_ResolveProcessor*, %"class.v8::Isolate"*, %class.CFXJSE_ResolveNodeData* dereferenceable(96)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector.130", align 8
  %5 = alloca %"class.fxcrt::StringViewTemplate.97", align 8
  %6 = alloca %"class.fxcrt::StringViewTemplate.97", align 8
  %7 = alloca %"class.fxcrt::WideString", align 8
  %8 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 1, i32 0
  %9 = load %class.CXFA_Object*, %class.CXFA_Object** %8, align 8
  %10 = icmp eq %class.CXFA_Object* %9, null
  br i1 %10, label %704, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %class.CXFA_Object, %class.CXFA_Object* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  switch i32 %13, label %14 [
    i32 2, label %35
    i32 3, label %35
    i32 4, label %35
    i32 5, label %35
    i32 6, label %35
    i32 8, label %35
    i32 9, label %35
  ]

14:                                               ; preds = %11
  %15 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 6
  %16 = load i16, i16* %15, align 8
  %17 = and i16 %16, 4
  %18 = icmp eq i16 %17, 0
  br i1 %18, label %704, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7
  %21 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %21, align 8, !noalias !2
  %23 = icmp eq %"class.fxcrt::StringDataTemplate"* %22, null
  %24 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %22, i64 0, i32 3
  %25 = select i1 %23, [1 x i32]* @.str.2, [1 x i32]* %24
  %26 = getelementptr inbounds [1 x i32], [1 x i32]* %25, i64 0, i64 0
  br i1 %23, label %30, label %27

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %22, i64 0, i32 1
  %29 = load i64, i64* %28, align 8, !noalias !2
  br label %30

30:                                               ; preds = %19, %27
  %31 = phi i64 [ %29, %27 ], [ 0, %19 ]
  %32 = getelementptr inbounds %"class.fxcrt::StringViewTemplate.97", %"class.fxcrt::StringViewTemplate.97"* %5, i64 0, i32 0, i32 0, i32 0
  store i32* %26, i32** %32, align 8, !alias.scope !2
  %33 = getelementptr inbounds %"class.fxcrt::StringViewTemplate.97", %"class.fxcrt::StringViewTemplate.97"* %5, i64 0, i32 0, i32 1
  store i64 %31, i64* %33, align 8, !alias.scope !2
  %34 = call zeroext i1 @_ZN23CFXJSE_ResolveProcessor21ResolveForAttributeRsEP11CXFA_ObjectPN13CFXJSE_Engine13ResolveResultEN5fxcrt18StringViewTemplateIwEE(%class.CFXJSE_ResolveProcessor* undef, %class.CXFA_Object* nonnull %9, %"class.CFXJSE_Engine::ResolveResult"* %20, %"class.fxcrt::StringViewTemplate.97"* nonnull %5)
  br label %704

35:                                               ; preds = %11, %11, %11, %11, %11, %11, %11
  %36 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 6
  %37 = load i16, i16* %36, align 8
  %38 = trunc i16 %37 to i8
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %35
  %41 = tail call zeroext i1 @_ZN23CFXJSE_ResolveProcessor15ResolveAnyChildEPN2v87IsolateER22CFXJSE_ResolveNodeData(%class.CFXJSE_ResolveProcessor* %0, %"class.v8::Isolate"* %1, %class.CFXJSE_ResolveNodeData* dereferenceable(96) %2)
  br label %704

42:                                               ; preds = %35
  %43 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %43, align 8
  %45 = icmp eq %"class.fxcrt::StringDataTemplate"* %44, null
  br i1 %45, label %83, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %44, i64 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %83, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %44, i64 0, i32 3, i64 0
  %52 = load i32, i32* %51, align 4
  switch i32 %52, label %83 [
    i32 36, label %53
    i32 33, label %55
    i32 35, label %57
    i32 42, label %59
    i32 46, label %81
  ]

53:                                               ; preds = %50
  %54 = tail call zeroext i1 @_ZN23CFXJSE_ResolveProcessor13ResolveDollarEPN2v87IsolateER22CFXJSE_ResolveNodeData(%class.CFXJSE_ResolveProcessor* %0, %"class.v8::Isolate"* %1, %class.CFXJSE_ResolveNodeData* dereferenceable(96) %2)
  br label %704

55:                                               ; preds = %50
  %56 = tail call zeroext i1 @_ZN23CFXJSE_ResolveProcessor18ResolveExcalmatoryEPN2v87IsolateER22CFXJSE_ResolveNodeData(%class.CFXJSE_ResolveProcessor* %0, %"class.v8::Isolate"* %1, %class.CFXJSE_ResolveNodeData* dereferenceable(96) %2)
  br label %704

57:                                               ; preds = %50
  %58 = tail call zeroext i1 @_ZN23CFXJSE_ResolveProcessor17ResolveNumberSignEPN2v87IsolateER22CFXJSE_ResolveNodeData(%class.CFXJSE_ResolveProcessor* %0, %"class.v8::Isolate"* %1, %class.CFXJSE_ResolveNodeData* dereferenceable(96) %2)
  br label %704

59:                                               ; preds = %50
  %60 = tail call %class.CXFA_Node* @_Z6ToNodeP11CXFA_Object(%class.CXFA_Object* nonnull %9) #11
  %61 = bitcast %"class.std::__1::vector.130"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #11
  %62 = getelementptr inbounds %"class.std::__1::vector.130", %"class.std::__1::vector.130"* %4, i64 0, i32 0, i32 0
  %63 = getelementptr inbounds %"class.std::__1::vector.130", %"class.std::__1::vector.130"* %4, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 -86, i64 24, i1 false) #11
  call void @_ZN9CXFA_Node21GetNodeListWithFilterEh(%"class.std::__1::vector.130"* nonnull sret %4, %class.CXFA_Node* %60, i8 zeroext 3) #11
  %64 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2
  %65 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2, i32 0, i32 1
  %66 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %65, align 8
  %67 = load %class.CXFA_Node**, %class.CXFA_Node*** %62, align 8
  %68 = load %class.CXFA_Node**, %class.CXFA_Node*** %63, align 8
  %69 = call %"class.cppgc::internal::BasicMember.70"* @_ZNSt3__16vectorIN5cppgc8internal11BasicMemberI11CXFA_ObjectNS2_15StrongMemberTagENS2_26DijkstraWriteBarrierPolicyENS2_22DisabledCheckingPolicyEEENS_9allocatorIS8_EEE6insertINS_11__wrap_iterIPP9CXFA_NodeEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS8_NS_15iterator_traitsISJ_E9referenceEEE5valueENSD_IPS8_EEE4typeENSD_IPKS8_EESJ_SJ_(%"class.std::__1::vector.90"* %64, %"class.cppgc::internal::BasicMember.70"* %66, %class.CXFA_Node** %67, %class.CXFA_Node** %68) #11
  %70 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %64, i64 0, i32 0, i32 0
  %71 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %70, align 8
  %72 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %65, align 8
  %73 = icmp ne %"class.cppgc::internal::BasicMember.70"* %71, %72
  %74 = load %class.CXFA_Node**, %class.CXFA_Node*** %62, align 8
  %75 = icmp eq %class.CXFA_Node** %74, null
  br i1 %75, label %80, label %76

76:                                               ; preds = %59
  %77 = ptrtoint %class.CXFA_Node** %74 to i64
  %78 = bitcast %class.CXFA_Node*** %63 to i64*
  store i64 %77, i64* %78, align 8
  %79 = bitcast %class.CXFA_Node** %74 to i8*
  call void @_ZdlPv(i8* %79) #10
  br label %80

80:                                               ; preds = %59, %76
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #11
  br label %704

81:                                               ; preds = %50
  %82 = tail call zeroext i1 @_ZN23CFXJSE_ResolveProcessor15ResolveAnyChildEPN2v87IsolateER22CFXJSE_ResolveNodeData(%class.CFXJSE_ResolveProcessor* %0, %"class.v8::Isolate"* %1, %class.CFXJSE_ResolveNodeData* dereferenceable(96) %2)
  br label %704

83:                                               ; preds = %42, %50, %46
  %84 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 4
  %85 = load i32, i32* %84, align 8
  %86 = icmp eq i32 %85, 760696152
  br i1 %86, label %87, label %230

87:                                               ; preds = %83
  %88 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 5
  %89 = load i32, i32* %88, align 4
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %230

91:                                               ; preds = %87
  %92 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2
  %93 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 0, i32 0
  %94 = load %class.CFXJSE_Engine*, %class.CFXJSE_Engine** %93, align 8
  %95 = getelementptr inbounds %class.CFXJSE_Engine, %class.CFXJSE_Engine* %94, i64 0, i32 14
  %96 = bitcast %"class.cppgc::internal::BasicPersistent.67"* %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2, i32 0, i32 1
  %99 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %98, align 8
  %100 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2, i32 0, i32 2, i32 0, i32 0
  %101 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %100, align 8
  %102 = icmp ult %"class.cppgc::internal::BasicMember.70"* %99, %101
  %103 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %101 to i64
  br i1 %102, label %104, label %109

104:                                              ; preds = %91
  %105 = bitcast %"class.cppgc::internal::BasicMember.70"* %99 to i64*
  store i64 %97, i64* %105, align 8
  %106 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %99, i64 1
  %107 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %106 to i64
  %108 = bitcast %"class.cppgc::internal::BasicMember.70"** %98 to i64*
  store i64 %107, i64* %108, align 8
  br label %704

109:                                              ; preds = %91
  %110 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %99 to i64
  %111 = bitcast %"class.cppgc::internal::BasicMember.70"** %98 to i64*
  %112 = bitcast %"class.std::__1::vector.90"* %92 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = sub i64 %110, %113
  %115 = ashr exact i64 %114, 3
  %116 = add nsw i64 %115, 1
  %117 = icmp ugt i64 %116, 2305843009213693951
  br i1 %117, label %118, label %120

118:                                              ; preds = %109
  %119 = bitcast %"class.std::__1::vector.90"* %92 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %119) #12
  unreachable

120:                                              ; preds = %109
  %121 = bitcast %"class.cppgc::internal::BasicMember.70"** %100 to i64*
  %122 = sub i64 %103, %113
  %123 = ashr exact i64 %122, 3
  %124 = icmp ult i64 %123, 1152921504606846975
  br i1 %124, label %125, label %133

125:                                              ; preds = %120
  %126 = ashr exact i64 %122, 2
  %127 = icmp ult i64 %126, %116
  %128 = select i1 %127, i64 %116, i64 %126
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %138, label %130

130:                                              ; preds = %125
  %131 = icmp ugt i64 %128, 2305843009213693951
  br i1 %131, label %132, label %133

132:                                              ; preds = %130
  tail call void @abort() #12
  unreachable

133:                                              ; preds = %130, %120
  %134 = phi i64 [ %128, %130 ], [ 2305843009213693951, %120 ]
  %135 = shl i64 %134, 3
  %136 = tail call i8* @_Znwm(i64 %135) #10
  %137 = bitcast i8* %136 to %"class.cppgc::internal::BasicMember.70"*
  br label %138

138:                                              ; preds = %133, %125
  %139 = phi i64 [ %134, %133 ], [ 0, %125 ]
  %140 = phi %"class.cppgc::internal::BasicMember.70"* [ %137, %133 ], [ null, %125 ]
  %141 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %140, i64 %115
  %142 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %140, i64 %139
  %143 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %142 to i64
  %144 = bitcast %"class.cppgc::internal::BasicMember.70"* %141 to i64*
  store i64 %97, i64* %144, align 8
  %145 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %141, i64 1
  %146 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %145 to i64
  %147 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %92, i64 0, i32 0, i32 0
  %148 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %147, align 8
  %149 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %148 to i64
  %150 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %98, align 8
  %151 = icmp eq %"class.cppgc::internal::BasicMember.70"* %150, %148
  br i1 %151, label %223, label %152

152:                                              ; preds = %138
  %153 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %150, i64 -1, i32 0, i32 0
  %154 = ptrtoint i8** %153 to i64
  %155 = sub i64 %154, %149
  %156 = lshr i64 %155, 3
  %157 = add nuw nsw i64 %156, 1
  %158 = and i64 %157, 7
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %171, label %160

160:                                              ; preds = %152, %160
  %161 = phi %"class.cppgc::internal::BasicMember.70"* [ %164, %160 ], [ %141, %152 ]
  %162 = phi %"class.cppgc::internal::BasicMember.70"* [ %165, %160 ], [ %150, %152 ]
  %163 = phi i64 [ %169, %160 ], [ %158, %152 ]
  %164 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %161, i64 -1
  %165 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %162, i64 -1
  %166 = bitcast %"class.cppgc::internal::BasicMember.70"* %165 to i64*
  %167 = load i64, i64* %166, align 8
  %168 = bitcast %"class.cppgc::internal::BasicMember.70"* %164 to i64*
  store i64 %167, i64* %168, align 8
  store atomic i64 0, i64* %166 monotonic, align 8
  %169 = add i64 %163, -1
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %160, !llvm.loop !5

171:                                              ; preds = %160, %152
  %172 = phi %"class.cppgc::internal::BasicMember.70"* [ undef, %152 ], [ %164, %160 ]
  %173 = phi %"class.cppgc::internal::BasicMember.70"* [ %141, %152 ], [ %164, %160 ]
  %174 = phi %"class.cppgc::internal::BasicMember.70"* [ %150, %152 ], [ %165, %160 ]
  %175 = icmp ult i64 %155, 56
  br i1 %175, label %220, label %176

176:                                              ; preds = %171, %176
  %177 = phi %"class.cppgc::internal::BasicMember.70"* [ %214, %176 ], [ %173, %171 ]
  %178 = phi %"class.cppgc::internal::BasicMember.70"* [ %215, %176 ], [ %174, %171 ]
  %179 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %177, i64 -1
  %180 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %178, i64 -1
  %181 = bitcast %"class.cppgc::internal::BasicMember.70"* %180 to i64*
  %182 = load i64, i64* %181, align 8
  %183 = bitcast %"class.cppgc::internal::BasicMember.70"* %179 to i64*
  store i64 %182, i64* %183, align 8
  store atomic i64 0, i64* %181 monotonic, align 8
  %184 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %177, i64 -2
  %185 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %178, i64 -2
  %186 = bitcast %"class.cppgc::internal::BasicMember.70"* %185 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = bitcast %"class.cppgc::internal::BasicMember.70"* %184 to i64*
  store i64 %187, i64* %188, align 8
  store atomic i64 0, i64* %186 monotonic, align 8
  %189 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %177, i64 -3
  %190 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %178, i64 -3
  %191 = bitcast %"class.cppgc::internal::BasicMember.70"* %190 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = bitcast %"class.cppgc::internal::BasicMember.70"* %189 to i64*
  store i64 %192, i64* %193, align 8
  store atomic i64 0, i64* %191 monotonic, align 8
  %194 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %177, i64 -4
  %195 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %178, i64 -4
  %196 = bitcast %"class.cppgc::internal::BasicMember.70"* %195 to i64*
  %197 = load i64, i64* %196, align 8
  %198 = bitcast %"class.cppgc::internal::BasicMember.70"* %194 to i64*
  store i64 %197, i64* %198, align 8
  store atomic i64 0, i64* %196 monotonic, align 8
  %199 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %177, i64 -5
  %200 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %178, i64 -5
  %201 = bitcast %"class.cppgc::internal::BasicMember.70"* %200 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = bitcast %"class.cppgc::internal::BasicMember.70"* %199 to i64*
  store i64 %202, i64* %203, align 8
  store atomic i64 0, i64* %201 monotonic, align 8
  %204 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %177, i64 -6
  %205 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %178, i64 -6
  %206 = bitcast %"class.cppgc::internal::BasicMember.70"* %205 to i64*
  %207 = load i64, i64* %206, align 8
  %208 = bitcast %"class.cppgc::internal::BasicMember.70"* %204 to i64*
  store i64 %207, i64* %208, align 8
  store atomic i64 0, i64* %206 monotonic, align 8
  %209 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %177, i64 -7
  %210 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %178, i64 -7
  %211 = bitcast %"class.cppgc::internal::BasicMember.70"* %210 to i64*
  %212 = load i64, i64* %211, align 8
  %213 = bitcast %"class.cppgc::internal::BasicMember.70"* %209 to i64*
  store i64 %212, i64* %213, align 8
  store atomic i64 0, i64* %211 monotonic, align 8
  %214 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %177, i64 -8
  %215 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %178, i64 -8
  %216 = bitcast %"class.cppgc::internal::BasicMember.70"* %215 to i64*
  %217 = load i64, i64* %216, align 8
  %218 = bitcast %"class.cppgc::internal::BasicMember.70"* %214 to i64*
  store i64 %217, i64* %218, align 8
  store atomic i64 0, i64* %216 monotonic, align 8
  %219 = icmp eq %"class.cppgc::internal::BasicMember.70"* %215, %148
  br i1 %219, label %220, label %176

220:                                              ; preds = %176, %171
  %221 = phi %"class.cppgc::internal::BasicMember.70"* [ %172, %171 ], [ %214, %176 ]
  %222 = load i64, i64* %112, align 8
  br label %223

223:                                              ; preds = %138, %220
  %224 = phi %"class.cppgc::internal::BasicMember.70"* [ %221, %220 ], [ %141, %138 ]
  %225 = phi i64 [ %222, %220 ], [ %149, %138 ]
  %226 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %224 to i64
  store i64 %226, i64* %112, align 8
  store i64 %146, i64* %111, align 8
  store i64 %143, i64* %121, align 8
  %227 = icmp eq i64 %225, 0
  br i1 %227, label %704, label %228

228:                                              ; preds = %223
  %229 = inttoptr i64 %225 to i8*
  tail call void @_ZdlPv(i8* %229) #10
  br label %704

230:                                              ; preds = %87, %83
  %231 = getelementptr inbounds %class.CXFA_Object, %class.CXFA_Object* %9, i64 0, i32 2
  %232 = load i16, i16* %231, align 4
  %233 = icmp eq i16 %232, 32
  br i1 %233, label %234, label %550

234:                                              ; preds = %230
  %235 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 0, i32 0
  %236 = load %class.CFXJSE_Engine*, %class.CFXJSE_Engine** %235, align 8
  %237 = getelementptr inbounds %class.CFXJSE_Engine, %class.CFXJSE_Engine* %236, i64 0, i32 2
  %238 = bitcast %"class.cppgc::internal::BasicPersistent.3"* %237 to %class.CXFA_Document**
  %239 = load %class.CXFA_Document*, %class.CXFA_Document** %238, align 8
  %240 = tail call %class.CXFA_Object* @_ZN13CXFA_Document12GetXFAObjectE12XFA_HashCode(%class.CXFA_Document* %239, i32 %85) #11
  %241 = ptrtoint %class.CXFA_Object* %240 to i64
  %242 = icmp eq %class.CXFA_Object* %240, null
  br i1 %242, label %377, label %243

243:                                              ; preds = %234
  %244 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2
  %245 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2, i32 0, i32 1
  %246 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %245, align 8
  %247 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2, i32 0, i32 2, i32 0, i32 0
  %248 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %247, align 8
  %249 = icmp ult %"class.cppgc::internal::BasicMember.70"* %246, %248
  %250 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %248 to i64
  br i1 %249, label %251, label %256

251:                                              ; preds = %243
  %252 = bitcast %"class.cppgc::internal::BasicMember.70"* %246 to i64*
  store i64 %241, i64* %252, align 8
  %253 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %246, i64 1
  %254 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %253 to i64
  %255 = bitcast %"class.cppgc::internal::BasicMember.70"** %245 to i64*
  store i64 %254, i64* %255, align 8
  br label %536

256:                                              ; preds = %243
  %257 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %246 to i64
  %258 = bitcast %"class.cppgc::internal::BasicMember.70"** %245 to i64*
  %259 = bitcast %"class.std::__1::vector.90"* %244 to i64*
  %260 = load i64, i64* %259, align 8
  %261 = sub i64 %257, %260
  %262 = ashr exact i64 %261, 3
  %263 = add nsw i64 %262, 1
  %264 = icmp ugt i64 %263, 2305843009213693951
  br i1 %264, label %265, label %267

265:                                              ; preds = %256
  %266 = bitcast %"class.std::__1::vector.90"* %244 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %266) #12
  unreachable

267:                                              ; preds = %256
  %268 = bitcast %"class.cppgc::internal::BasicMember.70"** %247 to i64*
  %269 = sub i64 %250, %260
  %270 = ashr exact i64 %269, 3
  %271 = icmp ult i64 %270, 1152921504606846975
  br i1 %271, label %272, label %280

272:                                              ; preds = %267
  %273 = ashr exact i64 %269, 2
  %274 = icmp ult i64 %273, %263
  %275 = select i1 %274, i64 %263, i64 %273
  %276 = icmp eq i64 %275, 0
  br i1 %276, label %285, label %277

277:                                              ; preds = %272
  %278 = icmp ugt i64 %275, 2305843009213693951
  br i1 %278, label %279, label %280

279:                                              ; preds = %277
  tail call void @abort() #12
  unreachable

280:                                              ; preds = %277, %267
  %281 = phi i64 [ %275, %277 ], [ 2305843009213693951, %267 ]
  %282 = shl i64 %281, 3
  %283 = tail call i8* @_Znwm(i64 %282) #10
  %284 = bitcast i8* %283 to %"class.cppgc::internal::BasicMember.70"*
  br label %285

285:                                              ; preds = %280, %272
  %286 = phi i64 [ %281, %280 ], [ 0, %272 ]
  %287 = phi %"class.cppgc::internal::BasicMember.70"* [ %284, %280 ], [ null, %272 ]
  %288 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %287, i64 %262
  %289 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %287, i64 %286
  %290 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %289 to i64
  %291 = bitcast %"class.cppgc::internal::BasicMember.70"* %288 to i64*
  store i64 %241, i64* %291, align 8
  %292 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %288, i64 1
  %293 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %292 to i64
  %294 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %244, i64 0, i32 0, i32 0
  %295 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %294, align 8
  %296 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %295 to i64
  %297 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %245, align 8
  %298 = icmp eq %"class.cppgc::internal::BasicMember.70"* %297, %295
  br i1 %298, label %370, label %299

299:                                              ; preds = %285
  %300 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %297, i64 -1, i32 0, i32 0
  %301 = ptrtoint i8** %300 to i64
  %302 = sub i64 %301, %296
  %303 = lshr i64 %302, 3
  %304 = add nuw nsw i64 %303, 1
  %305 = and i64 %304, 7
  %306 = icmp eq i64 %305, 0
  br i1 %306, label %318, label %307

307:                                              ; preds = %299, %307
  %308 = phi %"class.cppgc::internal::BasicMember.70"* [ %311, %307 ], [ %288, %299 ]
  %309 = phi %"class.cppgc::internal::BasicMember.70"* [ %312, %307 ], [ %297, %299 ]
  %310 = phi i64 [ %316, %307 ], [ %305, %299 ]
  %311 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %308, i64 -1
  %312 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %309, i64 -1
  %313 = bitcast %"class.cppgc::internal::BasicMember.70"* %312 to i64*
  %314 = load i64, i64* %313, align 8
  %315 = bitcast %"class.cppgc::internal::BasicMember.70"* %311 to i64*
  store i64 %314, i64* %315, align 8
  store atomic i64 0, i64* %313 monotonic, align 8
  %316 = add i64 %310, -1
  %317 = icmp eq i64 %316, 0
  br i1 %317, label %318, label %307, !llvm.loop !7

318:                                              ; preds = %307, %299
  %319 = phi %"class.cppgc::internal::BasicMember.70"* [ undef, %299 ], [ %311, %307 ]
  %320 = phi %"class.cppgc::internal::BasicMember.70"* [ %288, %299 ], [ %311, %307 ]
  %321 = phi %"class.cppgc::internal::BasicMember.70"* [ %297, %299 ], [ %312, %307 ]
  %322 = icmp ult i64 %302, 56
  br i1 %322, label %367, label %323

323:                                              ; preds = %318, %323
  %324 = phi %"class.cppgc::internal::BasicMember.70"* [ %361, %323 ], [ %320, %318 ]
  %325 = phi %"class.cppgc::internal::BasicMember.70"* [ %362, %323 ], [ %321, %318 ]
  %326 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %324, i64 -1
  %327 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %325, i64 -1
  %328 = bitcast %"class.cppgc::internal::BasicMember.70"* %327 to i64*
  %329 = load i64, i64* %328, align 8
  %330 = bitcast %"class.cppgc::internal::BasicMember.70"* %326 to i64*
  store i64 %329, i64* %330, align 8
  store atomic i64 0, i64* %328 monotonic, align 8
  %331 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %324, i64 -2
  %332 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %325, i64 -2
  %333 = bitcast %"class.cppgc::internal::BasicMember.70"* %332 to i64*
  %334 = load i64, i64* %333, align 8
  %335 = bitcast %"class.cppgc::internal::BasicMember.70"* %331 to i64*
  store i64 %334, i64* %335, align 8
  store atomic i64 0, i64* %333 monotonic, align 8
  %336 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %324, i64 -3
  %337 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %325, i64 -3
  %338 = bitcast %"class.cppgc::internal::BasicMember.70"* %337 to i64*
  %339 = load i64, i64* %338, align 8
  %340 = bitcast %"class.cppgc::internal::BasicMember.70"* %336 to i64*
  store i64 %339, i64* %340, align 8
  store atomic i64 0, i64* %338 monotonic, align 8
  %341 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %324, i64 -4
  %342 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %325, i64 -4
  %343 = bitcast %"class.cppgc::internal::BasicMember.70"* %342 to i64*
  %344 = load i64, i64* %343, align 8
  %345 = bitcast %"class.cppgc::internal::BasicMember.70"* %341 to i64*
  store i64 %344, i64* %345, align 8
  store atomic i64 0, i64* %343 monotonic, align 8
  %346 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %324, i64 -5
  %347 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %325, i64 -5
  %348 = bitcast %"class.cppgc::internal::BasicMember.70"* %347 to i64*
  %349 = load i64, i64* %348, align 8
  %350 = bitcast %"class.cppgc::internal::BasicMember.70"* %346 to i64*
  store i64 %349, i64* %350, align 8
  store atomic i64 0, i64* %348 monotonic, align 8
  %351 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %324, i64 -6
  %352 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %325, i64 -6
  %353 = bitcast %"class.cppgc::internal::BasicMember.70"* %352 to i64*
  %354 = load i64, i64* %353, align 8
  %355 = bitcast %"class.cppgc::internal::BasicMember.70"* %351 to i64*
  store i64 %354, i64* %355, align 8
  store atomic i64 0, i64* %353 monotonic, align 8
  %356 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %324, i64 -7
  %357 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %325, i64 -7
  %358 = bitcast %"class.cppgc::internal::BasicMember.70"* %357 to i64*
  %359 = load i64, i64* %358, align 8
  %360 = bitcast %"class.cppgc::internal::BasicMember.70"* %356 to i64*
  store i64 %359, i64* %360, align 8
  store atomic i64 0, i64* %358 monotonic, align 8
  %361 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %324, i64 -8
  %362 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %325, i64 -8
  %363 = bitcast %"class.cppgc::internal::BasicMember.70"* %362 to i64*
  %364 = load i64, i64* %363, align 8
  %365 = bitcast %"class.cppgc::internal::BasicMember.70"* %361 to i64*
  store i64 %364, i64* %365, align 8
  store atomic i64 0, i64* %363 monotonic, align 8
  %366 = icmp eq %"class.cppgc::internal::BasicMember.70"* %362, %295
  br i1 %366, label %367, label %323

367:                                              ; preds = %323, %318
  %368 = phi %"class.cppgc::internal::BasicMember.70"* [ %319, %318 ], [ %361, %323 ]
  %369 = load i64, i64* %259, align 8
  br label %370

370:                                              ; preds = %285, %367
  %371 = phi %"class.cppgc::internal::BasicMember.70"* [ %368, %367 ], [ %288, %285 ]
  %372 = phi i64 [ %369, %367 ], [ %296, %285 ]
  %373 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %371 to i64
  store i64 %373, i64* %259, align 8
  store i64 %293, i64* %258, align 8
  store i64 %290, i64* %268, align 8
  %374 = icmp eq i64 %372, 0
  br i1 %374, label %536, label %375

375:                                              ; preds = %370
  %376 = inttoptr i64 %372 to i8*
  tail call void @_ZdlPv(i8* %376) #10
  br label %536

377:                                              ; preds = %234
  %378 = load i32, i32* %84, align 8
  %379 = icmp eq i32 %378, 207010303
  br i1 %379, label %380, label %516

380:                                              ; preds = %377
  %381 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2
  %382 = bitcast %class.CXFA_Object** %8 to i64*
  %383 = load i64, i64* %382, align 8
  %384 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2, i32 0, i32 1
  %385 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %384, align 8
  %386 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2, i32 0, i32 2, i32 0, i32 0
  %387 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %386, align 8
  %388 = icmp ult %"class.cppgc::internal::BasicMember.70"* %385, %387
  %389 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %387 to i64
  br i1 %388, label %390, label %395

390:                                              ; preds = %380
  %391 = bitcast %"class.cppgc::internal::BasicMember.70"* %385 to i64*
  store i64 %383, i64* %391, align 8
  %392 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %385, i64 1
  %393 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %392 to i64
  %394 = bitcast %"class.cppgc::internal::BasicMember.70"** %384 to i64*
  store i64 %393, i64* %394, align 8
  br label %536

395:                                              ; preds = %380
  %396 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %385 to i64
  %397 = bitcast %"class.cppgc::internal::BasicMember.70"** %384 to i64*
  %398 = bitcast %"class.std::__1::vector.90"* %381 to i64*
  %399 = load i64, i64* %398, align 8
  %400 = sub i64 %396, %399
  %401 = ashr exact i64 %400, 3
  %402 = add nsw i64 %401, 1
  %403 = icmp ugt i64 %402, 2305843009213693951
  br i1 %403, label %404, label %406

404:                                              ; preds = %395
  %405 = bitcast %"class.std::__1::vector.90"* %381 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %405) #12
  unreachable

406:                                              ; preds = %395
  %407 = bitcast %"class.cppgc::internal::BasicMember.70"** %386 to i64*
  %408 = sub i64 %389, %399
  %409 = ashr exact i64 %408, 3
  %410 = icmp ult i64 %409, 1152921504606846975
  br i1 %410, label %411, label %419

411:                                              ; preds = %406
  %412 = ashr exact i64 %408, 2
  %413 = icmp ult i64 %412, %402
  %414 = select i1 %413, i64 %402, i64 %412
  %415 = icmp eq i64 %414, 0
  br i1 %415, label %424, label %416

416:                                              ; preds = %411
  %417 = icmp ugt i64 %414, 2305843009213693951
  br i1 %417, label %418, label %419

418:                                              ; preds = %416
  tail call void @abort() #12
  unreachable

419:                                              ; preds = %416, %406
  %420 = phi i64 [ %414, %416 ], [ 2305843009213693951, %406 ]
  %421 = shl i64 %420, 3
  %422 = tail call i8* @_Znwm(i64 %421) #10
  %423 = bitcast i8* %422 to %"class.cppgc::internal::BasicMember.70"*
  br label %424

424:                                              ; preds = %419, %411
  %425 = phi i64 [ %420, %419 ], [ 0, %411 ]
  %426 = phi %"class.cppgc::internal::BasicMember.70"* [ %423, %419 ], [ null, %411 ]
  %427 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %426, i64 %401
  %428 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %426, i64 %425
  %429 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %428 to i64
  %430 = bitcast %"class.cppgc::internal::BasicMember.70"* %427 to i64*
  store i64 %383, i64* %430, align 8
  %431 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %427, i64 1
  %432 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %431 to i64
  %433 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %381, i64 0, i32 0, i32 0
  %434 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %433, align 8
  %435 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %434 to i64
  %436 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %384, align 8
  %437 = icmp eq %"class.cppgc::internal::BasicMember.70"* %436, %434
  br i1 %437, label %509, label %438

438:                                              ; preds = %424
  %439 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %436, i64 -1, i32 0, i32 0
  %440 = ptrtoint i8** %439 to i64
  %441 = sub i64 %440, %435
  %442 = lshr i64 %441, 3
  %443 = add nuw nsw i64 %442, 1
  %444 = and i64 %443, 7
  %445 = icmp eq i64 %444, 0
  br i1 %445, label %457, label %446

446:                                              ; preds = %438, %446
  %447 = phi %"class.cppgc::internal::BasicMember.70"* [ %450, %446 ], [ %427, %438 ]
  %448 = phi %"class.cppgc::internal::BasicMember.70"* [ %451, %446 ], [ %436, %438 ]
  %449 = phi i64 [ %455, %446 ], [ %444, %438 ]
  %450 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %447, i64 -1
  %451 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %448, i64 -1
  %452 = bitcast %"class.cppgc::internal::BasicMember.70"* %451 to i64*
  %453 = load i64, i64* %452, align 8
  %454 = bitcast %"class.cppgc::internal::BasicMember.70"* %450 to i64*
  store i64 %453, i64* %454, align 8
  store atomic i64 0, i64* %452 monotonic, align 8
  %455 = add i64 %449, -1
  %456 = icmp eq i64 %455, 0
  br i1 %456, label %457, label %446, !llvm.loop !8

457:                                              ; preds = %446, %438
  %458 = phi %"class.cppgc::internal::BasicMember.70"* [ undef, %438 ], [ %450, %446 ]
  %459 = phi %"class.cppgc::internal::BasicMember.70"* [ %427, %438 ], [ %450, %446 ]
  %460 = phi %"class.cppgc::internal::BasicMember.70"* [ %436, %438 ], [ %451, %446 ]
  %461 = icmp ult i64 %441, 56
  br i1 %461, label %506, label %462

462:                                              ; preds = %457, %462
  %463 = phi %"class.cppgc::internal::BasicMember.70"* [ %500, %462 ], [ %459, %457 ]
  %464 = phi %"class.cppgc::internal::BasicMember.70"* [ %501, %462 ], [ %460, %457 ]
  %465 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %463, i64 -1
  %466 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %464, i64 -1
  %467 = bitcast %"class.cppgc::internal::BasicMember.70"* %466 to i64*
  %468 = load i64, i64* %467, align 8
  %469 = bitcast %"class.cppgc::internal::BasicMember.70"* %465 to i64*
  store i64 %468, i64* %469, align 8
  store atomic i64 0, i64* %467 monotonic, align 8
  %470 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %463, i64 -2
  %471 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %464, i64 -2
  %472 = bitcast %"class.cppgc::internal::BasicMember.70"* %471 to i64*
  %473 = load i64, i64* %472, align 8
  %474 = bitcast %"class.cppgc::internal::BasicMember.70"* %470 to i64*
  store i64 %473, i64* %474, align 8
  store atomic i64 0, i64* %472 monotonic, align 8
  %475 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %463, i64 -3
  %476 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %464, i64 -3
  %477 = bitcast %"class.cppgc::internal::BasicMember.70"* %476 to i64*
  %478 = load i64, i64* %477, align 8
  %479 = bitcast %"class.cppgc::internal::BasicMember.70"* %475 to i64*
  store i64 %478, i64* %479, align 8
  store atomic i64 0, i64* %477 monotonic, align 8
  %480 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %463, i64 -4
  %481 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %464, i64 -4
  %482 = bitcast %"class.cppgc::internal::BasicMember.70"* %481 to i64*
  %483 = load i64, i64* %482, align 8
  %484 = bitcast %"class.cppgc::internal::BasicMember.70"* %480 to i64*
  store i64 %483, i64* %484, align 8
  store atomic i64 0, i64* %482 monotonic, align 8
  %485 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %463, i64 -5
  %486 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %464, i64 -5
  %487 = bitcast %"class.cppgc::internal::BasicMember.70"* %486 to i64*
  %488 = load i64, i64* %487, align 8
  %489 = bitcast %"class.cppgc::internal::BasicMember.70"* %485 to i64*
  store i64 %488, i64* %489, align 8
  store atomic i64 0, i64* %487 monotonic, align 8
  %490 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %463, i64 -6
  %491 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %464, i64 -6
  %492 = bitcast %"class.cppgc::internal::BasicMember.70"* %491 to i64*
  %493 = load i64, i64* %492, align 8
  %494 = bitcast %"class.cppgc::internal::BasicMember.70"* %490 to i64*
  store i64 %493, i64* %494, align 8
  store atomic i64 0, i64* %492 monotonic, align 8
  %495 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %463, i64 -7
  %496 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %464, i64 -7
  %497 = bitcast %"class.cppgc::internal::BasicMember.70"* %496 to i64*
  %498 = load i64, i64* %497, align 8
  %499 = bitcast %"class.cppgc::internal::BasicMember.70"* %495 to i64*
  store i64 %498, i64* %499, align 8
  store atomic i64 0, i64* %497 monotonic, align 8
  %500 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %463, i64 -8
  %501 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %464, i64 -8
  %502 = bitcast %"class.cppgc::internal::BasicMember.70"* %501 to i64*
  %503 = load i64, i64* %502, align 8
  %504 = bitcast %"class.cppgc::internal::BasicMember.70"* %500 to i64*
  store i64 %503, i64* %504, align 8
  store atomic i64 0, i64* %502 monotonic, align 8
  %505 = icmp eq %"class.cppgc::internal::BasicMember.70"* %501, %434
  br i1 %505, label %506, label %462

506:                                              ; preds = %462, %457
  %507 = phi %"class.cppgc::internal::BasicMember.70"* [ %458, %457 ], [ %500, %462 ]
  %508 = load i64, i64* %398, align 8
  br label %509

509:                                              ; preds = %424, %506
  %510 = phi %"class.cppgc::internal::BasicMember.70"* [ %507, %506 ], [ %427, %424 ]
  %511 = phi i64 [ %508, %506 ], [ %435, %424 ]
  %512 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %510 to i64
  store i64 %512, i64* %398, align 8
  store i64 %432, i64* %397, align 8
  store i64 %429, i64* %407, align 8
  %513 = icmp eq i64 %511, 0
  br i1 %513, label %536, label %514

514:                                              ; preds = %509
  %515 = inttoptr i64 %511 to i8*
  tail call void @_ZdlPv(i8* %515) #10
  br label %536

516:                                              ; preds = %377
  %517 = load i16, i16* %36, align 8
  %518 = and i16 %517, 4
  %519 = icmp eq i16 %518, 0
  br i1 %519, label %536, label %520

520:                                              ; preds = %516
  %521 = load %class.CXFA_Object*, %class.CXFA_Object** %8, align 8
  %522 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7
  %523 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %43, align 8, !noalias !9
  %524 = icmp eq %"class.fxcrt::StringDataTemplate"* %523, null
  %525 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %523, i64 0, i32 3
  %526 = select i1 %524, [1 x i32]* @.str.2, [1 x i32]* %525
  %527 = getelementptr inbounds [1 x i32], [1 x i32]* %526, i64 0, i64 0
  br i1 %524, label %531, label %528

528:                                              ; preds = %520
  %529 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %523, i64 0, i32 1
  %530 = load i64, i64* %529, align 8, !noalias !9
  br label %531

531:                                              ; preds = %520, %528
  %532 = phi i64 [ %530, %528 ], [ 0, %520 ]
  %533 = getelementptr inbounds %"class.fxcrt::StringViewTemplate.97", %"class.fxcrt::StringViewTemplate.97"* %6, i64 0, i32 0, i32 0, i32 0
  store i32* %527, i32** %533, align 8, !alias.scope !9
  %534 = getelementptr inbounds %"class.fxcrt::StringViewTemplate.97", %"class.fxcrt::StringViewTemplate.97"* %6, i64 0, i32 0, i32 1
  store i64 %532, i64* %534, align 8, !alias.scope !9
  %535 = call zeroext i1 @_ZN23CFXJSE_ResolveProcessor21ResolveForAttributeRsEP11CXFA_ObjectPN13CFXJSE_Engine13ResolveResultEN5fxcrt18StringViewTemplateIwEE(%class.CFXJSE_ResolveProcessor* undef, %class.CXFA_Object* %521, %"class.CFXJSE_Engine::ResolveResult"* %522, %"class.fxcrt::StringViewTemplate.97"* nonnull %6)
  br i1 %535, label %704, label %536

536:                                              ; preds = %516, %514, %509, %390, %375, %370, %251, %531
  %537 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2, i32 0, i32 0
  %538 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %537, align 8
  %539 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2, i32 0, i32 1
  %540 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %539, align 8
  %541 = icmp eq %"class.cppgc::internal::BasicMember.70"* %538, %540
  br i1 %541, label %546, label %542

542:                                              ; preds = %536
  %543 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 3
  call void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"* nonnull %7, %"class.fxcrt::WideString"* dereferenceable(8) %543) #11
  call void @_ZN23CFXJSE_ResolveProcessor15FilterConditionEPN2v87IsolateEN5fxcrt10WideStringEP22CFXJSE_ResolveNodeData(%class.CFXJSE_ResolveProcessor* %0, %"class.v8::Isolate"* %1, %"class.fxcrt::WideString"* nonnull %7, %class.CFXJSE_ResolveNodeData* %2)
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %7) #11
  %544 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %537, align 8
  %545 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %539, align 8
  br label %546

546:                                              ; preds = %542, %536
  %547 = phi %"class.cppgc::internal::BasicMember.70"* [ %545, %542 ], [ %538, %536 ]
  %548 = phi %"class.cppgc::internal::BasicMember.70"* [ %544, %542 ], [ %538, %536 ]
  %549 = icmp ne %"class.cppgc::internal::BasicMember.70"* %548, %547
  br label %704

550:                                              ; preds = %230
  %551 = tail call zeroext i1 @_ZN23CFXJSE_ResolveProcessor13ResolveNormalEPN2v87IsolateER22CFXJSE_ResolveNodeData(%class.CFXJSE_ResolveProcessor* %0, %"class.v8::Isolate"* %1, %class.CFXJSE_ResolveNodeData* dereferenceable(96) %2)
  %552 = xor i1 %551, true
  %553 = load i32, i32* %84, align 8
  %554 = icmp eq i32 %553, 207010303
  %555 = and i1 %554, %552
  br i1 %555, label %556, label %698

556:                                              ; preds = %550
  %557 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2
  %558 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 0, i32 0
  %559 = load %class.CFXJSE_Engine*, %class.CFXJSE_Engine** %558, align 8
  %560 = getelementptr inbounds %class.CFXJSE_Engine, %class.CFXJSE_Engine* %559, i64 0, i32 2
  %561 = bitcast %"class.cppgc::internal::BasicPersistent.3"* %560 to %class.CXFA_Document**
  %562 = load %class.CXFA_Document*, %class.CXFA_Document** %561, align 8
  %563 = getelementptr inbounds %class.CXFA_Document, %class.CXFA_Document* %562, i64 0, i32 3
  %564 = bitcast %"class.cppgc::internal::BasicMember.30"* %563 to i64*
  %565 = load i64, i64* %564, align 8
  %566 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2, i32 0, i32 1
  %567 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %566, align 8
  %568 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2, i32 0, i32 2, i32 0, i32 0
  %569 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %568, align 8
  %570 = icmp ult %"class.cppgc::internal::BasicMember.70"* %567, %569
  %571 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %569 to i64
  br i1 %570, label %572, label %577

572:                                              ; preds = %556
  %573 = bitcast %"class.cppgc::internal::BasicMember.70"* %567 to i64*
  store i64 %565, i64* %573, align 8
  %574 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %567, i64 1
  %575 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %574 to i64
  %576 = bitcast %"class.cppgc::internal::BasicMember.70"** %566 to i64*
  store i64 %575, i64* %576, align 8
  br label %698

577:                                              ; preds = %556
  %578 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %567 to i64
  %579 = bitcast %"class.cppgc::internal::BasicMember.70"** %566 to i64*
  %580 = bitcast %"class.std::__1::vector.90"* %557 to i64*
  %581 = load i64, i64* %580, align 8
  %582 = sub i64 %578, %581
  %583 = ashr exact i64 %582, 3
  %584 = add nsw i64 %583, 1
  %585 = icmp ugt i64 %584, 2305843009213693951
  br i1 %585, label %586, label %588

586:                                              ; preds = %577
  %587 = bitcast %"class.std::__1::vector.90"* %557 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %587) #12
  unreachable

588:                                              ; preds = %577
  %589 = bitcast %"class.cppgc::internal::BasicMember.70"** %568 to i64*
  %590 = sub i64 %571, %581
  %591 = ashr exact i64 %590, 3
  %592 = icmp ult i64 %591, 1152921504606846975
  br i1 %592, label %593, label %601

593:                                              ; preds = %588
  %594 = ashr exact i64 %590, 2
  %595 = icmp ult i64 %594, %584
  %596 = select i1 %595, i64 %584, i64 %594
  %597 = icmp eq i64 %596, 0
  br i1 %597, label %606, label %598

598:                                              ; preds = %593
  %599 = icmp ugt i64 %596, 2305843009213693951
  br i1 %599, label %600, label %601

600:                                              ; preds = %598
  tail call void @abort() #12
  unreachable

601:                                              ; preds = %598, %588
  %602 = phi i64 [ %596, %598 ], [ 2305843009213693951, %588 ]
  %603 = shl i64 %602, 3
  %604 = tail call i8* @_Znwm(i64 %603) #10
  %605 = bitcast i8* %604 to %"class.cppgc::internal::BasicMember.70"*
  br label %606

606:                                              ; preds = %601, %593
  %607 = phi i64 [ %602, %601 ], [ 0, %593 ]
  %608 = phi %"class.cppgc::internal::BasicMember.70"* [ %605, %601 ], [ null, %593 ]
  %609 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %608, i64 %583
  %610 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %608, i64 %607
  %611 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %610 to i64
  %612 = bitcast %"class.cppgc::internal::BasicMember.70"* %609 to i64*
  store i64 %565, i64* %612, align 8
  %613 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %609, i64 1
  %614 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %613 to i64
  %615 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %557, i64 0, i32 0, i32 0
  %616 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %615, align 8
  %617 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %616 to i64
  %618 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %566, align 8
  %619 = icmp eq %"class.cppgc::internal::BasicMember.70"* %618, %616
  br i1 %619, label %691, label %620

620:                                              ; preds = %606
  %621 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %618, i64 -1, i32 0, i32 0
  %622 = ptrtoint i8** %621 to i64
  %623 = sub i64 %622, %617
  %624 = lshr i64 %623, 3
  %625 = add nuw nsw i64 %624, 1
  %626 = and i64 %625, 7
  %627 = icmp eq i64 %626, 0
  br i1 %627, label %639, label %628

628:                                              ; preds = %620, %628
  %629 = phi %"class.cppgc::internal::BasicMember.70"* [ %632, %628 ], [ %609, %620 ]
  %630 = phi %"class.cppgc::internal::BasicMember.70"* [ %633, %628 ], [ %618, %620 ]
  %631 = phi i64 [ %637, %628 ], [ %626, %620 ]
  %632 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %629, i64 -1
  %633 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %630, i64 -1
  %634 = bitcast %"class.cppgc::internal::BasicMember.70"* %633 to i64*
  %635 = load i64, i64* %634, align 8
  %636 = bitcast %"class.cppgc::internal::BasicMember.70"* %632 to i64*
  store i64 %635, i64* %636, align 8
  store atomic i64 0, i64* %634 monotonic, align 8
  %637 = add i64 %631, -1
  %638 = icmp eq i64 %637, 0
  br i1 %638, label %639, label %628, !llvm.loop !12

639:                                              ; preds = %628, %620
  %640 = phi %"class.cppgc::internal::BasicMember.70"* [ undef, %620 ], [ %632, %628 ]
  %641 = phi %"class.cppgc::internal::BasicMember.70"* [ %609, %620 ], [ %632, %628 ]
  %642 = phi %"class.cppgc::internal::BasicMember.70"* [ %618, %620 ], [ %633, %628 ]
  %643 = icmp ult i64 %623, 56
  br i1 %643, label %688, label %644

644:                                              ; preds = %639, %644
  %645 = phi %"class.cppgc::internal::BasicMember.70"* [ %682, %644 ], [ %641, %639 ]
  %646 = phi %"class.cppgc::internal::BasicMember.70"* [ %683, %644 ], [ %642, %639 ]
  %647 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %645, i64 -1
  %648 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %646, i64 -1
  %649 = bitcast %"class.cppgc::internal::BasicMember.70"* %648 to i64*
  %650 = load i64, i64* %649, align 8
  %651 = bitcast %"class.cppgc::internal::BasicMember.70"* %647 to i64*
  store i64 %650, i64* %651, align 8
  store atomic i64 0, i64* %649 monotonic, align 8
  %652 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %645, i64 -2
  %653 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %646, i64 -2
  %654 = bitcast %"class.cppgc::internal::BasicMember.70"* %653 to i64*
  %655 = load i64, i64* %654, align 8
  %656 = bitcast %"class.cppgc::internal::BasicMember.70"* %652 to i64*
  store i64 %655, i64* %656, align 8
  store atomic i64 0, i64* %654 monotonic, align 8
  %657 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %645, i64 -3
  %658 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %646, i64 -3
  %659 = bitcast %"class.cppgc::internal::BasicMember.70"* %658 to i64*
  %660 = load i64, i64* %659, align 8
  %661 = bitcast %"class.cppgc::internal::BasicMember.70"* %657 to i64*
  store i64 %660, i64* %661, align 8
  store atomic i64 0, i64* %659 monotonic, align 8
  %662 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %645, i64 -4
  %663 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %646, i64 -4
  %664 = bitcast %"class.cppgc::internal::BasicMember.70"* %663 to i64*
  %665 = load i64, i64* %664, align 8
  %666 = bitcast %"class.cppgc::internal::BasicMember.70"* %662 to i64*
  store i64 %665, i64* %666, align 8
  store atomic i64 0, i64* %664 monotonic, align 8
  %667 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %645, i64 -5
  %668 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %646, i64 -5
  %669 = bitcast %"class.cppgc::internal::BasicMember.70"* %668 to i64*
  %670 = load i64, i64* %669, align 8
  %671 = bitcast %"class.cppgc::internal::BasicMember.70"* %667 to i64*
  store i64 %670, i64* %671, align 8
  store atomic i64 0, i64* %669 monotonic, align 8
  %672 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %645, i64 -6
  %673 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %646, i64 -6
  %674 = bitcast %"class.cppgc::internal::BasicMember.70"* %673 to i64*
  %675 = load i64, i64* %674, align 8
  %676 = bitcast %"class.cppgc::internal::BasicMember.70"* %672 to i64*
  store i64 %675, i64* %676, align 8
  store atomic i64 0, i64* %674 monotonic, align 8
  %677 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %645, i64 -7
  %678 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %646, i64 -7
  %679 = bitcast %"class.cppgc::internal::BasicMember.70"* %678 to i64*
  %680 = load i64, i64* %679, align 8
  %681 = bitcast %"class.cppgc::internal::BasicMember.70"* %677 to i64*
  store i64 %680, i64* %681, align 8
  store atomic i64 0, i64* %679 monotonic, align 8
  %682 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %645, i64 -8
  %683 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %646, i64 -8
  %684 = bitcast %"class.cppgc::internal::BasicMember.70"* %683 to i64*
  %685 = load i64, i64* %684, align 8
  %686 = bitcast %"class.cppgc::internal::BasicMember.70"* %682 to i64*
  store i64 %685, i64* %686, align 8
  store atomic i64 0, i64* %684 monotonic, align 8
  %687 = icmp eq %"class.cppgc::internal::BasicMember.70"* %683, %616
  br i1 %687, label %688, label %644

688:                                              ; preds = %644, %639
  %689 = phi %"class.cppgc::internal::BasicMember.70"* [ %640, %639 ], [ %682, %644 ]
  %690 = load i64, i64* %580, align 8
  br label %691

691:                                              ; preds = %606, %688
  %692 = phi %"class.cppgc::internal::BasicMember.70"* [ %689, %688 ], [ %609, %606 ]
  %693 = phi i64 [ %690, %688 ], [ %617, %606 ]
  %694 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %692 to i64
  store i64 %694, i64* %580, align 8
  store i64 %614, i64* %579, align 8
  store i64 %611, i64* %589, align 8
  %695 = icmp eq i64 %693, 0
  br i1 %695, label %698, label %696

696:                                              ; preds = %691
  %697 = inttoptr i64 %693 to i8*
  tail call void @_ZdlPv(i8* %697) #10
  br label %698

698:                                              ; preds = %696, %691, %572, %550
  %699 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2, i32 0, i32 0
  %700 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %699, align 8
  %701 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2, i32 0, i32 1
  %702 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %701, align 8
  %703 = icmp ne %"class.cppgc::internal::BasicMember.70"* %700, %702
  br label %704

704:                                              ; preds = %3, %53, %55, %57, %80, %81, %546, %531, %228, %223, %104, %14, %698, %40, %30
  %705 = phi i1 [ %41, %40 ], [ %703, %698 ], [ %34, %30 ], [ false, %3 ], [ false, %14 ], [ true, %104 ], [ true, %223 ], [ true, %228 ], [ %549, %546 ], [ true, %531 ], [ %54, %53 ], [ %56, %55 ], [ %58, %57 ], [ %73, %80 ], [ %82, %81 ]
  ret i1 %705
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN23CFXJSE_ResolveProcessor21ResolveForAttributeRsEP11CXFA_ObjectPN13CFXJSE_Engine13ResolveResultEN5fxcrt18StringViewTemplateIwEE(%class.CFXJSE_ResolveProcessor* nocapture readnone, %class.CXFA_Object*, %"class.CFXJSE_Engine::ResolveResult"*, %"class.fxcrt::StringViewTemplate.97"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.pdfium::Optional.140", align 8
  %6 = alloca %"class.fxcrt::StringViewTemplate.97", align 8
  %7 = ptrtoint %class.CXFA_Object* %1 to i64
  %8 = getelementptr inbounds %"class.pdfium::Optional.140", %"class.pdfium::Optional.140"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 24, i1 false)
  %9 = getelementptr inbounds %class.CXFA_Object, %class.CXFA_Object* %1, i64 0, i32 2
  %10 = load i16, i16* %9, align 4
  %11 = bitcast %"class.fxcrt::StringViewTemplate.97"* %6 to i8*
  %12 = bitcast %"class.fxcrt::StringViewTemplate.97"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 %12, i64 16, i1 false)
  call void @_Z28XFA_GetScriptAttributeByName11XFA_ElementN5fxcrt18StringViewTemplateIwEE(%"class.pdfium::Optional.140"* nonnull sret %5, i16 signext %10, %"class.fxcrt::StringViewTemplate.97"* nonnull %6) #11
  %13 = load i8, i8* %8, align 8, !range !13
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %154, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.CFXJSE_Engine::ResolveResult", %"class.CFXJSE_Engine::ResolveResult"* %2, i64 0, i32 0
  store i32 1, i32* %16, align 8
  %17 = getelementptr inbounds %"class.pdfium::Optional.140", %"class.pdfium::Optional.140"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %18 = getelementptr inbounds %"class.CFXJSE_Engine::ResolveResult", %"class.CFXJSE_Engine::ResolveResult"* %2, i64 0, i32 1
  %19 = bitcast %struct.XFA_SCRIPTATTRIBUTEINFO* %18 to i8*
  %20 = bitcast %struct.XFA_SCRIPTATTRIBUTEINFO* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 16, i1 false)
  %21 = getelementptr inbounds %"class.CFXJSE_Engine::ResolveResult", %"class.CFXJSE_Engine::ResolveResult"* %2, i64 0, i32 2
  %22 = getelementptr inbounds %"class.CFXJSE_Engine::ResolveResult", %"class.CFXJSE_Engine::ResolveResult"* %2, i64 0, i32 2, i32 0, i32 1
  %23 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %22, align 8
  %24 = getelementptr inbounds %"class.CFXJSE_Engine::ResolveResult", %"class.CFXJSE_Engine::ResolveResult"* %2, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %25 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %24, align 8
  %26 = icmp ult %"class.cppgc::internal::BasicMember.70"* %23, %25
  %27 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %25 to i64
  br i1 %26, label %28, label %33

28:                                               ; preds = %15
  %29 = bitcast %"class.cppgc::internal::BasicMember.70"* %23 to i64*
  store i64 %7, i64* %29, align 8
  %30 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %23, i64 1
  %31 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %30 to i64
  %32 = bitcast %"class.cppgc::internal::BasicMember.70"** %22 to i64*
  store i64 %31, i64* %32, align 8
  br label %154

33:                                               ; preds = %15
  %34 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %23 to i64
  %35 = bitcast %"class.cppgc::internal::BasicMember.70"** %22 to i64*
  %36 = bitcast %"class.std::__1::vector.90"* %21 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = sub i64 %34, %37
  %39 = ashr exact i64 %38, 3
  %40 = add nsw i64 %39, 1
  %41 = icmp ugt i64 %40, 2305843009213693951
  br i1 %41, label %42, label %44

42:                                               ; preds = %33
  %43 = bitcast %"class.std::__1::vector.90"* %21 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %43) #12
  unreachable

44:                                               ; preds = %33
  %45 = bitcast %"class.cppgc::internal::BasicMember.70"** %24 to i64*
  %46 = sub i64 %27, %37
  %47 = ashr exact i64 %46, 3
  %48 = icmp ult i64 %47, 1152921504606846975
  br i1 %48, label %49, label %57

49:                                               ; preds = %44
  %50 = ashr exact i64 %46, 2
  %51 = icmp ult i64 %50, %40
  %52 = select i1 %51, i64 %40, i64 %50
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %62, label %54

54:                                               ; preds = %49
  %55 = icmp ugt i64 %52, 2305843009213693951
  br i1 %55, label %56, label %57

56:                                               ; preds = %54
  call void @abort() #12
  unreachable

57:                                               ; preds = %54, %44
  %58 = phi i64 [ %52, %54 ], [ 2305843009213693951, %44 ]
  %59 = shl i64 %58, 3
  %60 = call i8* @_Znwm(i64 %59) #10
  %61 = bitcast i8* %60 to %"class.cppgc::internal::BasicMember.70"*
  br label %62

62:                                               ; preds = %57, %49
  %63 = phi i64 [ %58, %57 ], [ 0, %49 ]
  %64 = phi %"class.cppgc::internal::BasicMember.70"* [ %61, %57 ], [ null, %49 ]
  %65 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %64, i64 %39
  %66 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %64, i64 %63
  %67 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %66 to i64
  %68 = bitcast %"class.cppgc::internal::BasicMember.70"* %65 to i64*
  store i64 %7, i64* %68, align 8
  %69 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %65, i64 1
  %70 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %69 to i64
  %71 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %21, i64 0, i32 0, i32 0
  %72 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %71, align 8
  %73 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %72 to i64
  %74 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %22, align 8
  %75 = icmp eq %"class.cppgc::internal::BasicMember.70"* %74, %72
  br i1 %75, label %147, label %76

76:                                               ; preds = %62
  %77 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %74, i64 -1, i32 0, i32 0
  %78 = ptrtoint i8** %77 to i64
  %79 = sub i64 %78, %73
  %80 = lshr i64 %79, 3
  %81 = add nuw nsw i64 %80, 1
  %82 = and i64 %81, 7
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %95, label %84

84:                                               ; preds = %76, %84
  %85 = phi %"class.cppgc::internal::BasicMember.70"* [ %88, %84 ], [ %65, %76 ]
  %86 = phi %"class.cppgc::internal::BasicMember.70"* [ %89, %84 ], [ %74, %76 ]
  %87 = phi i64 [ %93, %84 ], [ %82, %76 ]
  %88 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %85, i64 -1
  %89 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %86, i64 -1
  %90 = bitcast %"class.cppgc::internal::BasicMember.70"* %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = bitcast %"class.cppgc::internal::BasicMember.70"* %88 to i64*
  store i64 %91, i64* %92, align 8
  store atomic i64 0, i64* %90 monotonic, align 8
  %93 = add i64 %87, -1
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %95, label %84, !llvm.loop !14

95:                                               ; preds = %84, %76
  %96 = phi %"class.cppgc::internal::BasicMember.70"* [ undef, %76 ], [ %88, %84 ]
  %97 = phi %"class.cppgc::internal::BasicMember.70"* [ %65, %76 ], [ %88, %84 ]
  %98 = phi %"class.cppgc::internal::BasicMember.70"* [ %74, %76 ], [ %89, %84 ]
  %99 = icmp ult i64 %79, 56
  br i1 %99, label %144, label %100

100:                                              ; preds = %95, %100
  %101 = phi %"class.cppgc::internal::BasicMember.70"* [ %138, %100 ], [ %97, %95 ]
  %102 = phi %"class.cppgc::internal::BasicMember.70"* [ %139, %100 ], [ %98, %95 ]
  %103 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %101, i64 -1
  %104 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %102, i64 -1
  %105 = bitcast %"class.cppgc::internal::BasicMember.70"* %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %"class.cppgc::internal::BasicMember.70"* %103 to i64*
  store i64 %106, i64* %107, align 8
  store atomic i64 0, i64* %105 monotonic, align 8
  %108 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %101, i64 -2
  %109 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %102, i64 -2
  %110 = bitcast %"class.cppgc::internal::BasicMember.70"* %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = bitcast %"class.cppgc::internal::BasicMember.70"* %108 to i64*
  store i64 %111, i64* %112, align 8
  store atomic i64 0, i64* %110 monotonic, align 8
  %113 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %101, i64 -3
  %114 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %102, i64 -3
  %115 = bitcast %"class.cppgc::internal::BasicMember.70"* %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = bitcast %"class.cppgc::internal::BasicMember.70"* %113 to i64*
  store i64 %116, i64* %117, align 8
  store atomic i64 0, i64* %115 monotonic, align 8
  %118 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %101, i64 -4
  %119 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %102, i64 -4
  %120 = bitcast %"class.cppgc::internal::BasicMember.70"* %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = bitcast %"class.cppgc::internal::BasicMember.70"* %118 to i64*
  store i64 %121, i64* %122, align 8
  store atomic i64 0, i64* %120 monotonic, align 8
  %123 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %101, i64 -5
  %124 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %102, i64 -5
  %125 = bitcast %"class.cppgc::internal::BasicMember.70"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast %"class.cppgc::internal::BasicMember.70"* %123 to i64*
  store i64 %126, i64* %127, align 8
  store atomic i64 0, i64* %125 monotonic, align 8
  %128 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %101, i64 -6
  %129 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %102, i64 -6
  %130 = bitcast %"class.cppgc::internal::BasicMember.70"* %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast %"class.cppgc::internal::BasicMember.70"* %128 to i64*
  store i64 %131, i64* %132, align 8
  store atomic i64 0, i64* %130 monotonic, align 8
  %133 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %101, i64 -7
  %134 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %102, i64 -7
  %135 = bitcast %"class.cppgc::internal::BasicMember.70"* %134 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = bitcast %"class.cppgc::internal::BasicMember.70"* %133 to i64*
  store i64 %136, i64* %137, align 8
  store atomic i64 0, i64* %135 monotonic, align 8
  %138 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %101, i64 -8
  %139 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %102, i64 -8
  %140 = bitcast %"class.cppgc::internal::BasicMember.70"* %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = bitcast %"class.cppgc::internal::BasicMember.70"* %138 to i64*
  store i64 %141, i64* %142, align 8
  store atomic i64 0, i64* %140 monotonic, align 8
  %143 = icmp eq %"class.cppgc::internal::BasicMember.70"* %139, %72
  br i1 %143, label %144, label %100

144:                                              ; preds = %100, %95
  %145 = phi %"class.cppgc::internal::BasicMember.70"* [ %96, %95 ], [ %138, %100 ]
  %146 = load i64, i64* %36, align 8
  br label %147

147:                                              ; preds = %62, %144
  %148 = phi %"class.cppgc::internal::BasicMember.70"* [ %145, %144 ], [ %65, %62 ]
  %149 = phi i64 [ %146, %144 ], [ %73, %62 ]
  %150 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %148 to i64
  store i64 %150, i64* %36, align 8
  store i64 %70, i64* %35, align 8
  store i64 %67, i64* %45, align 8
  %151 = icmp eq i64 %149, 0
  br i1 %151, label %154, label %152

152:                                              ; preds = %147
  %153 = inttoptr i64 %149 to i8*
  call void @_ZdlPv(i8* %153) #10
  br label %154

154:                                              ; preds = %4, %152, %147, %28
  %155 = phi i1 [ false, %4 ], [ true, %28 ], [ true, %147 ], [ true, %152 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #11
  ret i1 %155
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN23CFXJSE_ResolveProcessor15ResolveAnyChildEPN2v87IsolateER22CFXJSE_ResolveNodeData(%class.CFXJSE_ResolveProcessor* nocapture readonly, %"class.v8::Isolate"*, %class.CFXJSE_ResolveNodeData* dereferenceable(96)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.fxcrt::WideString", align 8
  %5 = alloca %"class.fxcrt::StringViewTemplate.97", align 8
  %6 = alloca %"class.fxcrt::StringViewTemplate.97", align 8
  %7 = alloca %"class.std::__1::vector.130", align 8
  %8 = alloca %"class.std::__1::vector.130", align 8
  %9 = alloca %"class.std::__1::vector.90", align 8
  %10 = alloca %"class.fxcrt::WideString", align 8
  %11 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 1, i32 0
  %12 = load %class.CXFA_Object*, %class.CXFA_Object** %11, align 8
  %13 = tail call %class.CXFA_Node* @_Z6ToNodeP11CXFA_Object(%class.CXFA_Object* %12) #11
  %14 = icmp eq %class.CXFA_Node* %13, null
  br i1 %14, label %532, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %16, align 8, !noalias !15
  %18 = icmp eq %"class.fxcrt::StringDataTemplate"* %17, null
  %19 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %17, i64 0, i32 3
  %20 = select i1 %18, [1 x i32]* @.str.2, [1 x i32]* %19
  %21 = getelementptr inbounds [1 x i32], [1 x i32]* %20, i64 0, i64 0
  br i1 %18, label %25, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %17, i64 0, i32 1
  %24 = load i64, i64* %23, align 8, !noalias !15
  br label %25

25:                                               ; preds = %15, %22
  %26 = phi i64 [ %24, %22 ], [ 0, %15 ]
  %27 = bitcast %"class.fxcrt::WideString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  %28 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %28, align 8
  %29 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 3
  call void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"* nonnull %4, %"class.fxcrt::WideString"* dereferenceable(8) %29) #11
  %30 = icmp eq i64 %26, 0
  br i1 %30, label %47, label %31

31:                                               ; preds = %25
  %32 = load i32, i32* %21, align 4
  %33 = icmp eq i32 %32, 35
  br i1 %33, label %34, label %47

34:                                               ; preds = %31
  %35 = add i64 %26, -1
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %34
  %38 = bitcast %"class.fxcrt::StringViewTemplate.97"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 0, i64 16, i1 false) #11, !alias.scope !18
  br label %51

39:                                               ; preds = %34
  %40 = icmp eq [1 x i32]* %20, null
  br i1 %40, label %41, label %43

41:                                               ; preds = %39
  %42 = bitcast %"class.fxcrt::StringViewTemplate.97"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 0, i64 16, i1 false) #11, !alias.scope !21
  br label %51

43:                                               ; preds = %39
  %44 = getelementptr inbounds [1 x i32], [1 x i32]* %20, i64 0, i64 1
  %45 = getelementptr inbounds %"class.fxcrt::StringViewTemplate.97", %"class.fxcrt::StringViewTemplate.97"* %5, i64 0, i32 0, i32 0, i32 0
  store i32* %44, i32** %45, align 8, !alias.scope !21
  %46 = getelementptr inbounds %"class.fxcrt::StringViewTemplate.97", %"class.fxcrt::StringViewTemplate.97"* %5, i64 0, i32 0, i32 1
  store i64 %35, i64* %46, align 8, !alias.scope !21
  br label %51

47:                                               ; preds = %25, %31
  %48 = getelementptr inbounds %"class.fxcrt::StringViewTemplate.97", %"class.fxcrt::StringViewTemplate.97"* %6, i64 0, i32 0, i32 0, i32 0
  store i32* %21, i32** %48, align 8
  %49 = getelementptr inbounds %"class.fxcrt::StringViewTemplate.97", %"class.fxcrt::StringViewTemplate.97"* %6, i64 0, i32 0, i32 1
  store i64 %26, i64* %49, align 8
  %50 = call %class.CXFA_Node* @_ZN9CXFA_Node16GetOneChildNamedEN5fxcrt18StringViewTemplateIwEE(%class.CXFA_Node* nonnull %13, %"class.fxcrt::StringViewTemplate.97"* nonnull %6) #11
  br label %53

51:                                               ; preds = %37, %41, %43
  %52 = call %class.CXFA_Node* @_ZN9CXFA_Node18GetOneChildOfClassEN5fxcrt18StringViewTemplateIwEE(%class.CXFA_Node* nonnull %13, %"class.fxcrt::StringViewTemplate.97"* nonnull %5) #11
  br label %53

53:                                               ; preds = %47, %51
  %54 = phi i1 [ true, %51 ], [ false, %47 ]
  %55 = phi %class.CXFA_Node* [ %52, %51 ], [ %50, %47 ]
  %56 = ptrtoint %class.CXFA_Node* %55 to i64
  %57 = icmp eq %class.CXFA_Node* %55, null
  br i1 %57, label %530, label %58

58:                                               ; preds = %53
  %59 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %28, align 8
  %60 = icmp eq %"class.fxcrt::StringDataTemplate"* %59, null
  br i1 %60, label %65, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %59, i64 0, i32 1
  %63 = load i64, i64* %62, align 8
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %199

65:                                               ; preds = %58, %61
  %66 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2
  %67 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2, i32 0, i32 1
  %68 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %67, align 8
  %69 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2, i32 0, i32 2, i32 0, i32 0
  %70 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %69, align 8
  %71 = icmp ult %"class.cppgc::internal::BasicMember.70"* %68, %70
  %72 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %70 to i64
  br i1 %71, label %73, label %78

73:                                               ; preds = %65
  %74 = bitcast %"class.cppgc::internal::BasicMember.70"* %68 to i64*
  store i64 %56, i64* %74, align 8
  %75 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %68, i64 1
  %76 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %75 to i64
  %77 = bitcast %"class.cppgc::internal::BasicMember.70"** %67 to i64*
  store i64 %76, i64* %77, align 8
  br label %530

78:                                               ; preds = %65
  %79 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %68 to i64
  %80 = bitcast %"class.cppgc::internal::BasicMember.70"** %67 to i64*
  %81 = bitcast %"class.std::__1::vector.90"* %66 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = sub i64 %79, %82
  %84 = ashr exact i64 %83, 3
  %85 = add nsw i64 %84, 1
  %86 = icmp ugt i64 %85, 2305843009213693951
  br i1 %86, label %87, label %89

87:                                               ; preds = %78
  %88 = bitcast %"class.std::__1::vector.90"* %66 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %88) #12
  unreachable

89:                                               ; preds = %78
  %90 = bitcast %"class.cppgc::internal::BasicMember.70"** %69 to i64*
  %91 = sub i64 %72, %82
  %92 = ashr exact i64 %91, 3
  %93 = icmp ult i64 %92, 1152921504606846975
  br i1 %93, label %94, label %102

94:                                               ; preds = %89
  %95 = ashr exact i64 %91, 2
  %96 = icmp ult i64 %95, %85
  %97 = select i1 %96, i64 %85, i64 %95
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %107, label %99

99:                                               ; preds = %94
  %100 = icmp ugt i64 %97, 2305843009213693951
  br i1 %100, label %101, label %102

101:                                              ; preds = %99
  call void @abort() #12
  unreachable

102:                                              ; preds = %99, %89
  %103 = phi i64 [ %97, %99 ], [ 2305843009213693951, %89 ]
  %104 = shl i64 %103, 3
  %105 = call i8* @_Znwm(i64 %104) #10
  %106 = bitcast i8* %105 to %"class.cppgc::internal::BasicMember.70"*
  br label %107

107:                                              ; preds = %102, %94
  %108 = phi i64 [ %103, %102 ], [ 0, %94 ]
  %109 = phi %"class.cppgc::internal::BasicMember.70"* [ %106, %102 ], [ null, %94 ]
  %110 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %109, i64 %84
  %111 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %109, i64 %108
  %112 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %111 to i64
  %113 = bitcast %"class.cppgc::internal::BasicMember.70"* %110 to i64*
  store i64 %56, i64* %113, align 8
  %114 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %110, i64 1
  %115 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %114 to i64
  %116 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %66, i64 0, i32 0, i32 0
  %117 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %116, align 8
  %118 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %117 to i64
  %119 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %67, align 8
  %120 = icmp eq %"class.cppgc::internal::BasicMember.70"* %119, %117
  br i1 %120, label %192, label %121

121:                                              ; preds = %107
  %122 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %119, i64 -1, i32 0, i32 0
  %123 = ptrtoint i8** %122 to i64
  %124 = sub i64 %123, %118
  %125 = lshr i64 %124, 3
  %126 = add nuw nsw i64 %125, 1
  %127 = and i64 %126, 7
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %140, label %129

129:                                              ; preds = %121, %129
  %130 = phi %"class.cppgc::internal::BasicMember.70"* [ %133, %129 ], [ %110, %121 ]
  %131 = phi %"class.cppgc::internal::BasicMember.70"* [ %134, %129 ], [ %119, %121 ]
  %132 = phi i64 [ %138, %129 ], [ %127, %121 ]
  %133 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %130, i64 -1
  %134 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %131, i64 -1
  %135 = bitcast %"class.cppgc::internal::BasicMember.70"* %134 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = bitcast %"class.cppgc::internal::BasicMember.70"* %133 to i64*
  store i64 %136, i64* %137, align 8
  store atomic i64 0, i64* %135 monotonic, align 8
  %138 = add i64 %132, -1
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %129, !llvm.loop !24

140:                                              ; preds = %129, %121
  %141 = phi %"class.cppgc::internal::BasicMember.70"* [ undef, %121 ], [ %133, %129 ]
  %142 = phi %"class.cppgc::internal::BasicMember.70"* [ %110, %121 ], [ %133, %129 ]
  %143 = phi %"class.cppgc::internal::BasicMember.70"* [ %119, %121 ], [ %134, %129 ]
  %144 = icmp ult i64 %124, 56
  br i1 %144, label %189, label %145

145:                                              ; preds = %140, %145
  %146 = phi %"class.cppgc::internal::BasicMember.70"* [ %183, %145 ], [ %142, %140 ]
  %147 = phi %"class.cppgc::internal::BasicMember.70"* [ %184, %145 ], [ %143, %140 ]
  %148 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %146, i64 -1
  %149 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %147, i64 -1
  %150 = bitcast %"class.cppgc::internal::BasicMember.70"* %149 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.cppgc::internal::BasicMember.70"* %148 to i64*
  store i64 %151, i64* %152, align 8
  store atomic i64 0, i64* %150 monotonic, align 8
  %153 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %146, i64 -2
  %154 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %147, i64 -2
  %155 = bitcast %"class.cppgc::internal::BasicMember.70"* %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = bitcast %"class.cppgc::internal::BasicMember.70"* %153 to i64*
  store i64 %156, i64* %157, align 8
  store atomic i64 0, i64* %155 monotonic, align 8
  %158 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %146, i64 -3
  %159 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %147, i64 -3
  %160 = bitcast %"class.cppgc::internal::BasicMember.70"* %159 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = bitcast %"class.cppgc::internal::BasicMember.70"* %158 to i64*
  store i64 %161, i64* %162, align 8
  store atomic i64 0, i64* %160 monotonic, align 8
  %163 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %146, i64 -4
  %164 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %147, i64 -4
  %165 = bitcast %"class.cppgc::internal::BasicMember.70"* %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = bitcast %"class.cppgc::internal::BasicMember.70"* %163 to i64*
  store i64 %166, i64* %167, align 8
  store atomic i64 0, i64* %165 monotonic, align 8
  %168 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %146, i64 -5
  %169 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %147, i64 -5
  %170 = bitcast %"class.cppgc::internal::BasicMember.70"* %169 to i64*
  %171 = load i64, i64* %170, align 8
  %172 = bitcast %"class.cppgc::internal::BasicMember.70"* %168 to i64*
  store i64 %171, i64* %172, align 8
  store atomic i64 0, i64* %170 monotonic, align 8
  %173 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %146, i64 -6
  %174 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %147, i64 -6
  %175 = bitcast %"class.cppgc::internal::BasicMember.70"* %174 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = bitcast %"class.cppgc::internal::BasicMember.70"* %173 to i64*
  store i64 %176, i64* %177, align 8
  store atomic i64 0, i64* %175 monotonic, align 8
  %178 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %146, i64 -7
  %179 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %147, i64 -7
  %180 = bitcast %"class.cppgc::internal::BasicMember.70"* %179 to i64*
  %181 = load i64, i64* %180, align 8
  %182 = bitcast %"class.cppgc::internal::BasicMember.70"* %178 to i64*
  store i64 %181, i64* %182, align 8
  store atomic i64 0, i64* %180 monotonic, align 8
  %183 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %146, i64 -8
  %184 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %147, i64 -8
  %185 = bitcast %"class.cppgc::internal::BasicMember.70"* %184 to i64*
  %186 = load i64, i64* %185, align 8
  %187 = bitcast %"class.cppgc::internal::BasicMember.70"* %183 to i64*
  store i64 %186, i64* %187, align 8
  store atomic i64 0, i64* %185 monotonic, align 8
  %188 = icmp eq %"class.cppgc::internal::BasicMember.70"* %184, %117
  br i1 %188, label %189, label %145

189:                                              ; preds = %145, %140
  %190 = phi %"class.cppgc::internal::BasicMember.70"* [ %141, %140 ], [ %183, %145 ]
  %191 = load i64, i64* %81, align 8
  br label %192

192:                                              ; preds = %107, %189
  %193 = phi %"class.cppgc::internal::BasicMember.70"* [ %190, %189 ], [ %110, %107 ]
  %194 = phi i64 [ %191, %189 ], [ %118, %107 ]
  %195 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %193 to i64
  store i64 %195, i64* %81, align 8
  store i64 %115, i64* %80, align 8
  store i64 %112, i64* %90, align 8
  %196 = icmp eq i64 %194, 0
  br i1 %196, label %530, label %197

197:                                              ; preds = %192
  %198 = inttoptr i64 %194 to i8*
  call void @_ZdlPv(i8* %198) #10
  br label %530

199:                                              ; preds = %61
  %200 = bitcast %"class.std::__1::vector.130"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %200) #11
  %201 = getelementptr inbounds %"class.std::__1::vector.130", %"class.std::__1::vector.130"* %7, i64 0, i32 0, i32 0
  %202 = getelementptr inbounds %"class.std::__1::vector.130", %"class.std::__1::vector.130"* %7, i64 0, i32 0, i32 1
  %203 = getelementptr inbounds %"class.std::__1::vector.130", %"class.std::__1::vector.130"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %200, i8 0, i64 24, i1 false) #11
  %204 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2
  %205 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %204, i64 0, i32 0, i32 0
  %206 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %205, align 8
  %207 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2, i32 0, i32 1
  %208 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %207, align 8
  %209 = icmp eq %"class.cppgc::internal::BasicMember.70"* %206, %208
  br i1 %209, label %214, label %210

210:                                              ; preds = %199
  %211 = bitcast %class.CXFA_Node*** %202 to i64*
  %212 = bitcast %"class.std::__1::vector.130"* %7 to i64*
  %213 = bitcast %class.CXFA_Node*** %203 to i64*
  br label %469

214:                                              ; preds = %527, %199
  %215 = bitcast %"class.std::__1::vector.130"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %215) #11
  %216 = getelementptr inbounds %"class.std::__1::vector.130", %"class.std::__1::vector.130"* %8, i64 0, i32 0, i32 0
  %217 = getelementptr inbounds %"class.std::__1::vector.130", %"class.std::__1::vector.130"* %8, i64 0, i32 0, i32 1
  %218 = bitcast %"class.std::__1::vector.130"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %218, i8 -86, i64 24, i1 false)
  call void @_ZN9CXFA_Node11GetSiblingsEb(%"class.std::__1::vector.130"* nonnull sret %8, %class.CXFA_Node* nonnull %55, i1 zeroext %54) #11
  %219 = load %class.CXFA_Node**, %class.CXFA_Node*** %202, align 8
  %220 = load %class.CXFA_Node**, %class.CXFA_Node*** %216, align 8
  %221 = load %class.CXFA_Node**, %class.CXFA_Node*** %217, align 8
  %222 = call %class.CXFA_Node** @_ZNSt3__16vectorIP9CXFA_NodeNS_9allocatorIS2_EEE6insertINS_11__wrap_iterIPS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISB_E9referenceEEE5valueES9_E4typeENS7_IPKS2_EESB_SB_(%"class.std::__1::vector.130"* nonnull %7, %class.CXFA_Node** %219, %class.CXFA_Node** %220, %class.CXFA_Node** %221)
  %223 = bitcast %"class.std::__1::vector.90"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %223) #11
  %224 = load %class.CXFA_Node**, %class.CXFA_Node*** %201, align 8
  %225 = bitcast %class.CXFA_Node** %224 to i8*
  %226 = ptrtoint %class.CXFA_Node** %224 to i64
  %227 = load %class.CXFA_Node**, %class.CXFA_Node*** %202, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %223, i8 0, i64 24, i1 false) #11
  %228 = ptrtoint %class.CXFA_Node** %227 to i64
  %229 = sub i64 %228, %226
  %230 = ashr exact i64 %229, 3
  %231 = icmp eq i64 %229, 0
  br i1 %231, label %425, label %232

232:                                              ; preds = %214
  %233 = icmp ugt i64 %230, 2305843009213693951
  br i1 %233, label %234, label %236

234:                                              ; preds = %232
  %235 = bitcast %"class.std::__1::vector.90"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %235) #12
  unreachable

236:                                              ; preds = %232
  %237 = call i8* @_Znwm(i64 %229) #10
  %238 = bitcast i8* %237 to %"class.cppgc::internal::BasicMember.70"*
  %239 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %9, i64 0, i32 0, i32 1
  %240 = bitcast %"class.cppgc::internal::BasicMember.70"** %239 to i8**
  store i8* %237, i8** %240, align 8
  %241 = bitcast %"class.std::__1::vector.90"* %9 to i8**
  store i8* %237, i8** %241, align 8
  %242 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %238, i64 %230
  %243 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.cppgc::internal::BasicMember.70"* %242, %"class.cppgc::internal::BasicMember.70"** %243, align 8
  %244 = bitcast %"class.cppgc::internal::BasicMember.70"** %239 to i64*
  %245 = ptrtoint i8* %237 to i64
  %246 = icmp eq %class.CXFA_Node** %224, %227
  br i1 %246, label %423, label %247

247:                                              ; preds = %236
  %248 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %227, i64 -1
  %249 = ptrtoint %class.CXFA_Node** %248 to i64
  %250 = sub i64 %249, %226
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = icmp ult i64 %252, 4
  br i1 %253, label %349, label %254

254:                                              ; preds = %247
  %255 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %227, i64 -1
  %256 = ptrtoint %class.CXFA_Node** %255 to i64
  %257 = sub i64 %256, %226
  %258 = lshr i64 %257, 3
  %259 = add i64 %257, 8
  %260 = and i64 %259, -8
  %261 = getelementptr i8, i8* %237, i64 %260
  %262 = add nuw nsw i64 %258, 1
  %263 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %224, i64 %262
  %264 = bitcast %class.CXFA_Node** %263 to i8*
  %265 = icmp ult i8* %237, %264
  %266 = icmp ugt i8* %261, %225
  %267 = and i1 %265, %266
  br i1 %267, label %349, label %268

268:                                              ; preds = %254
  %269 = and i64 %252, 4611686018427387900
  %270 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %238, i64 %269
  %271 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %224, i64 %269
  %272 = add nsw i64 %269, -4
  %273 = lshr exact i64 %272, 2
  %274 = add nuw nsw i64 %273, 1
  %275 = and i64 %274, 3
  %276 = icmp ult i64 %272, 12
  br i1 %276, label %328, label %277

277:                                              ; preds = %268
  %278 = sub nsw i64 %274, %275
  br label %279

279:                                              ; preds = %279, %277
  %280 = phi i64 [ 0, %277 ], [ %325, %279 ]
  %281 = phi i64 [ %278, %277 ], [ %326, %279 ]
  %282 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %238, i64 %280
  %283 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %224, i64 %280
  %284 = bitcast %class.CXFA_Node** %283 to <2 x i64>*
  %285 = load <2 x i64>, <2 x i64>* %284, align 8, !alias.scope !25
  %286 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %283, i64 2
  %287 = bitcast %class.CXFA_Node** %286 to <2 x i64>*
  %288 = load <2 x i64>, <2 x i64>* %287, align 8, !alias.scope !25
  %289 = bitcast %"class.cppgc::internal::BasicMember.70"* %282 to <2 x i64>*
  store <2 x i64> %285, <2 x i64>* %289, align 8, !alias.scope !28, !noalias !25
  %290 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %282, i64 2
  %291 = bitcast %"class.cppgc::internal::BasicMember.70"* %290 to <2 x i64>*
  store <2 x i64> %288, <2 x i64>* %291, align 8, !alias.scope !28, !noalias !25
  %292 = or i64 %280, 4
  %293 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %238, i64 %292
  %294 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %224, i64 %292
  %295 = bitcast %class.CXFA_Node** %294 to <2 x i64>*
  %296 = load <2 x i64>, <2 x i64>* %295, align 8, !alias.scope !25
  %297 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %294, i64 2
  %298 = bitcast %class.CXFA_Node** %297 to <2 x i64>*
  %299 = load <2 x i64>, <2 x i64>* %298, align 8, !alias.scope !25
  %300 = bitcast %"class.cppgc::internal::BasicMember.70"* %293 to <2 x i64>*
  store <2 x i64> %296, <2 x i64>* %300, align 8, !alias.scope !28, !noalias !25
  %301 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %293, i64 2
  %302 = bitcast %"class.cppgc::internal::BasicMember.70"* %301 to <2 x i64>*
  store <2 x i64> %299, <2 x i64>* %302, align 8, !alias.scope !28, !noalias !25
  %303 = or i64 %280, 8
  %304 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %238, i64 %303
  %305 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %224, i64 %303
  %306 = bitcast %class.CXFA_Node** %305 to <2 x i64>*
  %307 = load <2 x i64>, <2 x i64>* %306, align 8, !alias.scope !25
  %308 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %305, i64 2
  %309 = bitcast %class.CXFA_Node** %308 to <2 x i64>*
  %310 = load <2 x i64>, <2 x i64>* %309, align 8, !alias.scope !25
  %311 = bitcast %"class.cppgc::internal::BasicMember.70"* %304 to <2 x i64>*
  store <2 x i64> %307, <2 x i64>* %311, align 8, !alias.scope !28, !noalias !25
  %312 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %304, i64 2
  %313 = bitcast %"class.cppgc::internal::BasicMember.70"* %312 to <2 x i64>*
  store <2 x i64> %310, <2 x i64>* %313, align 8, !alias.scope !28, !noalias !25
  %314 = or i64 %280, 12
  %315 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %238, i64 %314
  %316 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %224, i64 %314
  %317 = bitcast %class.CXFA_Node** %316 to <2 x i64>*
  %318 = load <2 x i64>, <2 x i64>* %317, align 8, !alias.scope !25
  %319 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %316, i64 2
  %320 = bitcast %class.CXFA_Node** %319 to <2 x i64>*
  %321 = load <2 x i64>, <2 x i64>* %320, align 8, !alias.scope !25
  %322 = bitcast %"class.cppgc::internal::BasicMember.70"* %315 to <2 x i64>*
  store <2 x i64> %318, <2 x i64>* %322, align 8, !alias.scope !28, !noalias !25
  %323 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %315, i64 2
  %324 = bitcast %"class.cppgc::internal::BasicMember.70"* %323 to <2 x i64>*
  store <2 x i64> %321, <2 x i64>* %324, align 8, !alias.scope !28, !noalias !25
  %325 = add i64 %280, 16
  %326 = add i64 %281, -4
  %327 = icmp eq i64 %326, 0
  br i1 %327, label %328, label %279, !llvm.loop !30

328:                                              ; preds = %279, %268
  %329 = phi i64 [ 0, %268 ], [ %325, %279 ]
  %330 = icmp eq i64 %275, 0
  br i1 %330, label %347, label %331

331:                                              ; preds = %328, %331
  %332 = phi i64 [ %344, %331 ], [ %329, %328 ]
  %333 = phi i64 [ %345, %331 ], [ %275, %328 ]
  %334 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %238, i64 %332
  %335 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %224, i64 %332
  %336 = bitcast %class.CXFA_Node** %335 to <2 x i64>*
  %337 = load <2 x i64>, <2 x i64>* %336, align 8, !alias.scope !25
  %338 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %335, i64 2
  %339 = bitcast %class.CXFA_Node** %338 to <2 x i64>*
  %340 = load <2 x i64>, <2 x i64>* %339, align 8, !alias.scope !25
  %341 = bitcast %"class.cppgc::internal::BasicMember.70"* %334 to <2 x i64>*
  store <2 x i64> %337, <2 x i64>* %341, align 8, !alias.scope !28, !noalias !25
  %342 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %334, i64 2
  %343 = bitcast %"class.cppgc::internal::BasicMember.70"* %342 to <2 x i64>*
  store <2 x i64> %340, <2 x i64>* %343, align 8, !alias.scope !28, !noalias !25
  %344 = add i64 %332, 4
  %345 = add i64 %333, -1
  %346 = icmp eq i64 %345, 0
  br i1 %346, label %347, label %331, !llvm.loop !32

347:                                              ; preds = %331, %328
  %348 = icmp eq i64 %252, %269
  br i1 %348, label %420, label %349

349:                                              ; preds = %347, %254, %247
  %350 = phi %"class.cppgc::internal::BasicMember.70"* [ %238, %254 ], [ %238, %247 ], [ %270, %347 ]
  %351 = phi %class.CXFA_Node** [ %224, %254 ], [ %224, %247 ], [ %271, %347 ]
  %352 = ptrtoint %class.CXFA_Node** %351 to i64
  %353 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %227, i64 -1
  %354 = ptrtoint %class.CXFA_Node** %353 to i64
  %355 = sub i64 %354, %352
  %356 = lshr i64 %355, 3
  %357 = add nuw nsw i64 %356, 1
  %358 = and i64 %357, 7
  %359 = icmp eq i64 %358, 0
  br i1 %359, label %371, label %360

360:                                              ; preds = %349, %360
  %361 = phi %"class.cppgc::internal::BasicMember.70"* [ %368, %360 ], [ %350, %349 ]
  %362 = phi %class.CXFA_Node** [ %367, %360 ], [ %351, %349 ]
  %363 = phi i64 [ %369, %360 ], [ %358, %349 ]
  %364 = bitcast %"class.cppgc::internal::BasicMember.70"* %361 to i64*
  %365 = bitcast %class.CXFA_Node** %362 to i64*
  %366 = load i64, i64* %365, align 8
  store i64 %366, i64* %364, align 8
  %367 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %362, i64 1
  %368 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %361, i64 1
  %369 = add i64 %363, -1
  %370 = icmp eq i64 %369, 0
  br i1 %370, label %371, label %360, !llvm.loop !33

371:                                              ; preds = %360, %349
  %372 = phi %"class.cppgc::internal::BasicMember.70"* [ undef, %349 ], [ %368, %360 ]
  %373 = phi %"class.cppgc::internal::BasicMember.70"* [ %350, %349 ], [ %368, %360 ]
  %374 = phi %class.CXFA_Node** [ %351, %349 ], [ %367, %360 ]
  %375 = icmp ult i64 %355, 56
  br i1 %375, label %420, label %376

376:                                              ; preds = %371, %376
  %377 = phi %"class.cppgc::internal::BasicMember.70"* [ %418, %376 ], [ %373, %371 ]
  %378 = phi %class.CXFA_Node** [ %417, %376 ], [ %374, %371 ]
  %379 = bitcast %"class.cppgc::internal::BasicMember.70"* %377 to i64*
  %380 = bitcast %class.CXFA_Node** %378 to i64*
  %381 = load i64, i64* %380, align 8
  store i64 %381, i64* %379, align 8
  %382 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %378, i64 1
  %383 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %377, i64 1
  %384 = bitcast %"class.cppgc::internal::BasicMember.70"* %383 to i64*
  %385 = bitcast %class.CXFA_Node** %382 to i64*
  %386 = load i64, i64* %385, align 8
  store i64 %386, i64* %384, align 8
  %387 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %378, i64 2
  %388 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %377, i64 2
  %389 = bitcast %"class.cppgc::internal::BasicMember.70"* %388 to i64*
  %390 = bitcast %class.CXFA_Node** %387 to i64*
  %391 = load i64, i64* %390, align 8
  store i64 %391, i64* %389, align 8
  %392 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %378, i64 3
  %393 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %377, i64 3
  %394 = bitcast %"class.cppgc::internal::BasicMember.70"* %393 to i64*
  %395 = bitcast %class.CXFA_Node** %392 to i64*
  %396 = load i64, i64* %395, align 8
  store i64 %396, i64* %394, align 8
  %397 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %378, i64 4
  %398 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %377, i64 4
  %399 = bitcast %"class.cppgc::internal::BasicMember.70"* %398 to i64*
  %400 = bitcast %class.CXFA_Node** %397 to i64*
  %401 = load i64, i64* %400, align 8
  store i64 %401, i64* %399, align 8
  %402 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %378, i64 5
  %403 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %377, i64 5
  %404 = bitcast %"class.cppgc::internal::BasicMember.70"* %403 to i64*
  %405 = bitcast %class.CXFA_Node** %402 to i64*
  %406 = load i64, i64* %405, align 8
  store i64 %406, i64* %404, align 8
  %407 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %378, i64 6
  %408 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %377, i64 6
  %409 = bitcast %"class.cppgc::internal::BasicMember.70"* %408 to i64*
  %410 = bitcast %class.CXFA_Node** %407 to i64*
  %411 = load i64, i64* %410, align 8
  store i64 %411, i64* %409, align 8
  %412 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %378, i64 7
  %413 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %377, i64 7
  %414 = bitcast %"class.cppgc::internal::BasicMember.70"* %413 to i64*
  %415 = bitcast %class.CXFA_Node** %412 to i64*
  %416 = load i64, i64* %415, align 8
  store i64 %416, i64* %414, align 8
  %417 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %378, i64 8
  %418 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %377, i64 8
  %419 = icmp eq %class.CXFA_Node** %417, %227
  br i1 %419, label %420, label %376, !llvm.loop !34

420:                                              ; preds = %371, %376, %347
  %421 = phi %"class.cppgc::internal::BasicMember.70"* [ %270, %347 ], [ %372, %371 ], [ %418, %376 ]
  %422 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %421 to i64
  br label %423

423:                                              ; preds = %420, %236
  %424 = phi i64 [ %245, %236 ], [ %422, %420 ]
  store i64 %424, i64* %244, align 8
  br label %425

425:                                              ; preds = %214, %423
  %426 = phi i64 [ 0, %214 ], [ %424, %423 ]
  %427 = phi i64 [ 0, %214 ], [ %245, %423 ]
  %428 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %205, align 8
  %429 = icmp eq %"class.cppgc::internal::BasicMember.70"* %428, null
  br i1 %429, label %430, label %432

430:                                              ; preds = %425
  %431 = bitcast %"class.cppgc::internal::BasicMember.70"** %207 to i64*
  br label %442

432:                                              ; preds = %425
  %433 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %428 to i64
  %434 = bitcast %"class.cppgc::internal::BasicMember.70"** %207 to i64*
  store i64 %433, i64* %434, align 8
  %435 = bitcast %"class.cppgc::internal::BasicMember.70"* %428 to i8*
  call void @_ZdlPv(i8* %435) #10
  %436 = bitcast %"class.std::__1::vector.90"* %204 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %436, i8 0, i64 24, i1 false) #11
  %437 = bitcast %"class.std::__1::vector.90"* %9 to i64*
  %438 = load i64, i64* %437, align 8
  %439 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %9, i64 0, i32 0, i32 1
  %440 = bitcast %"class.cppgc::internal::BasicMember.70"** %439 to i64*
  %441 = load i64, i64* %440, align 8
  br label %442

442:                                              ; preds = %432, %430
  %443 = phi i64* [ %431, %430 ], [ %434, %432 ]
  %444 = phi i64 [ %426, %430 ], [ %441, %432 ]
  %445 = phi i64 [ %427, %430 ], [ %438, %432 ]
  %446 = bitcast %"class.std::__1::vector.90"* %204 to i64*
  store i64 %445, i64* %446, align 8
  store i64 %444, i64* %443, align 8
  %447 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %448 = bitcast %"class.cppgc::internal::BasicMember.70"** %447 to i64*
  %449 = load i64, i64* %448, align 8
  %450 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2, i32 0, i32 2, i32 0, i32 0
  %451 = bitcast %"class.cppgc::internal::BasicMember.70"** %450 to i64*
  store i64 %449, i64* %451, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %223) #11
  call void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"* nonnull %10, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %4) #11
  call void @_ZN23CFXJSE_ResolveProcessor15FilterConditionEPN2v87IsolateEN5fxcrt10WideStringEP22CFXJSE_ResolveNodeData(%class.CFXJSE_ResolveProcessor* %0, %"class.v8::Isolate"* %1, %"class.fxcrt::WideString"* nonnull %10, %class.CFXJSE_ResolveNodeData* %2)
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %10) #11
  %452 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %205, align 8
  %453 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %207, align 8
  %454 = icmp ne %"class.cppgc::internal::BasicMember.70"* %452, %453
  %455 = load %class.CXFA_Node**, %class.CXFA_Node*** %216, align 8
  %456 = icmp eq %class.CXFA_Node** %455, null
  br i1 %456, label %461, label %457

457:                                              ; preds = %442
  %458 = ptrtoint %class.CXFA_Node** %455 to i64
  %459 = bitcast %class.CXFA_Node*** %217 to i64*
  store i64 %458, i64* %459, align 8
  %460 = bitcast %class.CXFA_Node** %455 to i8*
  call void @_ZdlPv(i8* %460) #10
  br label %461

461:                                              ; preds = %442, %457
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %215) #11
  %462 = load %class.CXFA_Node**, %class.CXFA_Node*** %201, align 8
  %463 = icmp eq %class.CXFA_Node** %462, null
  br i1 %463, label %468, label %464

464:                                              ; preds = %461
  %465 = ptrtoint %class.CXFA_Node** %462 to i64
  %466 = bitcast %class.CXFA_Node*** %202 to i64*
  store i64 %465, i64* %466, align 8
  %467 = bitcast %class.CXFA_Node** %462 to i8*
  call void @_ZdlPv(i8* %467) #10
  br label %468

468:                                              ; preds = %461, %464
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %200) #11
  br label %530

469:                                              ; preds = %210, %527
  %470 = phi %"class.cppgc::internal::BasicMember.70"* [ %206, %210 ], [ %528, %527 ]
  %471 = bitcast %"class.cppgc::internal::BasicMember.70"* %470 to %class.CXFA_Object**
  %472 = load %class.CXFA_Object*, %class.CXFA_Object** %471, align 8
  %473 = call %class.CXFA_Node* @_ZN11CXFA_Object6AsNodeEv(%class.CXFA_Object* %472) #11
  %474 = ptrtoint %class.CXFA_Node* %473 to i64
  %475 = load %class.CXFA_Node**, %class.CXFA_Node*** %202, align 8
  %476 = load %class.CXFA_Node**, %class.CXFA_Node*** %203, align 8
  %477 = icmp ult %class.CXFA_Node** %475, %476
  %478 = ptrtoint %class.CXFA_Node** %476 to i64
  br i1 %477, label %479, label %483

479:                                              ; preds = %469
  %480 = bitcast %class.CXFA_Node** %475 to i64*
  store i64 %474, i64* %480, align 8
  %481 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %475, i64 1
  %482 = ptrtoint %class.CXFA_Node** %481 to i64
  store i64 %482, i64* %211, align 8
  br label %527

483:                                              ; preds = %469
  %484 = ptrtoint %class.CXFA_Node** %475 to i64
  %485 = load i64, i64* %212, align 8
  %486 = sub i64 %484, %485
  %487 = ashr exact i64 %486, 3
  %488 = add nsw i64 %487, 1
  %489 = icmp ugt i64 %488, 2305843009213693951
  br i1 %489, label %490, label %492

490:                                              ; preds = %483
  %491 = bitcast %"class.std::__1::vector.130"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %491) #12
  unreachable

492:                                              ; preds = %483
  %493 = sub i64 %478, %485
  %494 = ashr exact i64 %493, 3
  %495 = icmp ult i64 %494, 1152921504606846975
  br i1 %495, label %496, label %504

496:                                              ; preds = %492
  %497 = ashr exact i64 %493, 2
  %498 = icmp ult i64 %497, %488
  %499 = select i1 %498, i64 %488, i64 %497
  %500 = icmp eq i64 %499, 0
  br i1 %500, label %509, label %501

501:                                              ; preds = %496
  %502 = icmp ugt i64 %499, 2305843009213693951
  br i1 %502, label %503, label %504

503:                                              ; preds = %501
  call void @abort() #12
  unreachable

504:                                              ; preds = %501, %492
  %505 = phi i64 [ %499, %501 ], [ 2305843009213693951, %492 ]
  %506 = shl i64 %505, 3
  %507 = call i8* @_Znwm(i64 %506) #10
  %508 = bitcast i8* %507 to %class.CXFA_Node**
  br label %509

509:                                              ; preds = %504, %496
  %510 = phi i64 [ %505, %504 ], [ 0, %496 ]
  %511 = phi i8* [ %507, %504 ], [ null, %496 ]
  %512 = phi %class.CXFA_Node** [ %508, %504 ], [ null, %496 ]
  %513 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %512, i64 %487
  %514 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %512, i64 %510
  %515 = ptrtoint %class.CXFA_Node** %514 to i64
  %516 = bitcast %class.CXFA_Node** %513 to i64*
  store i64 %474, i64* %516, align 8
  %517 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %513, i64 1
  %518 = ptrtoint %class.CXFA_Node** %517 to i64
  %519 = ptrtoint %class.CXFA_Node** %512 to i64
  %520 = icmp sgt i64 %486, 0
  br i1 %520, label %521, label %523

521:                                              ; preds = %509
  %522 = inttoptr i64 %485 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %511, i8* align 8 %522, i64 %486, i1 false) #11
  br label %523

523:                                              ; preds = %521, %509
  store i64 %519, i64* %212, align 8
  store i64 %518, i64* %211, align 8
  store i64 %515, i64* %213, align 8
  %524 = icmp eq i64 %485, 0
  br i1 %524, label %527, label %525

525:                                              ; preds = %523
  %526 = inttoptr i64 %485 to i8*
  call void @_ZdlPv(i8* %526) #10
  br label %527

527:                                              ; preds = %479, %523, %525
  %528 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %470, i64 1
  %529 = icmp eq %"class.cppgc::internal::BasicMember.70"* %528, %208
  br i1 %529, label %214, label %469

530:                                              ; preds = %197, %192, %73, %53, %468
  %531 = phi i1 [ %454, %468 ], [ false, %53 ], [ true, %73 ], [ true, %192 ], [ true, %197 ]
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  br label %532

532:                                              ; preds = %3, %530
  %533 = phi i1 [ %531, %530 ], [ false, %3 ]
  ret i1 %533
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN23CFXJSE_ResolveProcessor13ResolveDollarEPN2v87IsolateER22CFXJSE_ResolveNodeData(%class.CFXJSE_ResolveProcessor* nocapture readonly, %"class.v8::Isolate"*, %class.CFXJSE_ResolveNodeData* dereferenceable(96)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.fxcrt::WideString", align 8
  %5 = alloca %"class.fxcrt::WideString", align 8
  %6 = alloca %"class.fxcrt::StringViewTemplate.97", align 8
  %7 = alloca %"class.fxcrt::WideString", align 8
  %8 = bitcast %"class.fxcrt::WideString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %9, align 8
  %10 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 2
  call void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"* nonnull %4, %"class.fxcrt::WideString"* dereferenceable(8) %10) #11
  %11 = bitcast %"class.fxcrt::WideString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %12, align 8
  %13 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 3
  call void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"* nonnull %5, %"class.fxcrt::WideString"* dereferenceable(8) %13) #11
  %14 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %9, align 8
  %15 = icmp eq %"class.fxcrt::StringDataTemplate"* %14, null
  br i1 %15, label %158, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %14, i64 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = trunc i64 %18 to i32
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %158

21:                                               ; preds = %16
  %22 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2
  %23 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 1, i32 0
  %24 = bitcast %class.CXFA_Object** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2, i32 0, i32 1
  %27 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %26, align 8
  %28 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2, i32 0, i32 2, i32 0, i32 0
  %29 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %28, align 8
  %30 = icmp ult %"class.cppgc::internal::BasicMember.70"* %27, %29
  %31 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %29 to i64
  br i1 %30, label %32, label %37

32:                                               ; preds = %21
  %33 = bitcast %"class.cppgc::internal::BasicMember.70"* %27 to i64*
  store i64 %25, i64* %33, align 8
  %34 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %27, i64 1
  %35 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %34 to i64
  %36 = bitcast %"class.cppgc::internal::BasicMember.70"** %26 to i64*
  store i64 %35, i64* %36, align 8
  br label %493

37:                                               ; preds = %21
  %38 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %27 to i64
  %39 = bitcast %"class.cppgc::internal::BasicMember.70"** %26 to i64*
  %40 = bitcast %"class.std::__1::vector.90"* %22 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %38, %41
  %43 = ashr exact i64 %42, 3
  %44 = add nsw i64 %43, 1
  %45 = icmp ugt i64 %44, 2305843009213693951
  br i1 %45, label %46, label %48

46:                                               ; preds = %37
  %47 = bitcast %"class.std::__1::vector.90"* %22 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %47) #12
  unreachable

48:                                               ; preds = %37
  %49 = bitcast %"class.cppgc::internal::BasicMember.70"** %28 to i64*
  %50 = sub i64 %31, %41
  %51 = ashr exact i64 %50, 3
  %52 = icmp ult i64 %51, 1152921504606846975
  br i1 %52, label %53, label %61

53:                                               ; preds = %48
  %54 = ashr exact i64 %50, 2
  %55 = icmp ult i64 %54, %44
  %56 = select i1 %55, i64 %44, i64 %54
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %66, label %58

58:                                               ; preds = %53
  %59 = icmp ugt i64 %56, 2305843009213693951
  br i1 %59, label %60, label %61

60:                                               ; preds = %58
  call void @abort() #12
  unreachable

61:                                               ; preds = %58, %48
  %62 = phi i64 [ %56, %58 ], [ 2305843009213693951, %48 ]
  %63 = shl i64 %62, 3
  %64 = call i8* @_Znwm(i64 %63) #10
  %65 = bitcast i8* %64 to %"class.cppgc::internal::BasicMember.70"*
  br label %66

66:                                               ; preds = %61, %53
  %67 = phi i64 [ %62, %61 ], [ 0, %53 ]
  %68 = phi %"class.cppgc::internal::BasicMember.70"* [ %65, %61 ], [ null, %53 ]
  %69 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %68, i64 %43
  %70 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %68, i64 %67
  %71 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %70 to i64
  %72 = bitcast %"class.cppgc::internal::BasicMember.70"* %69 to i64*
  store i64 %25, i64* %72, align 8
  %73 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %69, i64 1
  %74 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %73 to i64
  %75 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %22, i64 0, i32 0, i32 0
  %76 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %75, align 8
  %77 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %76 to i64
  %78 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %26, align 8
  %79 = icmp eq %"class.cppgc::internal::BasicMember.70"* %78, %76
  br i1 %79, label %151, label %80

80:                                               ; preds = %66
  %81 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %78, i64 -1, i32 0, i32 0
  %82 = ptrtoint i8** %81 to i64
  %83 = sub i64 %82, %77
  %84 = lshr i64 %83, 3
  %85 = add nuw nsw i64 %84, 1
  %86 = and i64 %85, 7
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %99, label %88

88:                                               ; preds = %80, %88
  %89 = phi %"class.cppgc::internal::BasicMember.70"* [ %92, %88 ], [ %69, %80 ]
  %90 = phi %"class.cppgc::internal::BasicMember.70"* [ %93, %88 ], [ %78, %80 ]
  %91 = phi i64 [ %97, %88 ], [ %86, %80 ]
  %92 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %89, i64 -1
  %93 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %90, i64 -1
  %94 = bitcast %"class.cppgc::internal::BasicMember.70"* %93 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast %"class.cppgc::internal::BasicMember.70"* %92 to i64*
  store i64 %95, i64* %96, align 8
  store atomic i64 0, i64* %94 monotonic, align 8
  %97 = add i64 %91, -1
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %88, !llvm.loop !35

99:                                               ; preds = %88, %80
  %100 = phi %"class.cppgc::internal::BasicMember.70"* [ undef, %80 ], [ %92, %88 ]
  %101 = phi %"class.cppgc::internal::BasicMember.70"* [ %69, %80 ], [ %92, %88 ]
  %102 = phi %"class.cppgc::internal::BasicMember.70"* [ %78, %80 ], [ %93, %88 ]
  %103 = icmp ult i64 %83, 56
  br i1 %103, label %148, label %104

104:                                              ; preds = %99, %104
  %105 = phi %"class.cppgc::internal::BasicMember.70"* [ %142, %104 ], [ %101, %99 ]
  %106 = phi %"class.cppgc::internal::BasicMember.70"* [ %143, %104 ], [ %102, %99 ]
  %107 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %105, i64 -1
  %108 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %106, i64 -1
  %109 = bitcast %"class.cppgc::internal::BasicMember.70"* %108 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = bitcast %"class.cppgc::internal::BasicMember.70"* %107 to i64*
  store i64 %110, i64* %111, align 8
  store atomic i64 0, i64* %109 monotonic, align 8
  %112 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %105, i64 -2
  %113 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %106, i64 -2
  %114 = bitcast %"class.cppgc::internal::BasicMember.70"* %113 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = bitcast %"class.cppgc::internal::BasicMember.70"* %112 to i64*
  store i64 %115, i64* %116, align 8
  store atomic i64 0, i64* %114 monotonic, align 8
  %117 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %105, i64 -3
  %118 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %106, i64 -3
  %119 = bitcast %"class.cppgc::internal::BasicMember.70"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast %"class.cppgc::internal::BasicMember.70"* %117 to i64*
  store i64 %120, i64* %121, align 8
  store atomic i64 0, i64* %119 monotonic, align 8
  %122 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %105, i64 -4
  %123 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %106, i64 -4
  %124 = bitcast %"class.cppgc::internal::BasicMember.70"* %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast %"class.cppgc::internal::BasicMember.70"* %122 to i64*
  store i64 %125, i64* %126, align 8
  store atomic i64 0, i64* %124 monotonic, align 8
  %127 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %105, i64 -5
  %128 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %106, i64 -5
  %129 = bitcast %"class.cppgc::internal::BasicMember.70"* %128 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %"class.cppgc::internal::BasicMember.70"* %127 to i64*
  store i64 %130, i64* %131, align 8
  store atomic i64 0, i64* %129 monotonic, align 8
  %132 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %105, i64 -6
  %133 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %106, i64 -6
  %134 = bitcast %"class.cppgc::internal::BasicMember.70"* %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = bitcast %"class.cppgc::internal::BasicMember.70"* %132 to i64*
  store i64 %135, i64* %136, align 8
  store atomic i64 0, i64* %134 monotonic, align 8
  %137 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %105, i64 -7
  %138 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %106, i64 -7
  %139 = bitcast %"class.cppgc::internal::BasicMember.70"* %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = bitcast %"class.cppgc::internal::BasicMember.70"* %137 to i64*
  store i64 %140, i64* %141, align 8
  store atomic i64 0, i64* %139 monotonic, align 8
  %142 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %105, i64 -8
  %143 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %106, i64 -8
  %144 = bitcast %"class.cppgc::internal::BasicMember.70"* %143 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast %"class.cppgc::internal::BasicMember.70"* %142 to i64*
  store i64 %145, i64* %146, align 8
  store atomic i64 0, i64* %144 monotonic, align 8
  %147 = icmp eq %"class.cppgc::internal::BasicMember.70"* %143, %76
  br i1 %147, label %148, label %104

148:                                              ; preds = %104, %99
  %149 = phi %"class.cppgc::internal::BasicMember.70"* [ %100, %99 ], [ %142, %104 ]
  %150 = load i64, i64* %40, align 8
  br label %151

151:                                              ; preds = %66, %148
  %152 = phi %"class.cppgc::internal::BasicMember.70"* [ %149, %148 ], [ %69, %66 ]
  %153 = phi i64 [ %150, %148 ], [ %77, %66 ]
  %154 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %152 to i64
  store i64 %154, i64* %40, align 8
  store i64 %74, i64* %39, align 8
  store i64 %71, i64* %49, align 8
  %155 = icmp eq i64 %153, 0
  br i1 %155, label %493, label %156

156:                                              ; preds = %151
  %157 = inttoptr i64 %153 to i8*
  call void @_ZdlPv(i8* %157) #10
  br label %493

158:                                              ; preds = %3, %16
  %159 = phi i64 [ %18, %16 ], [ 0, %3 ]
  %160 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 5
  %161 = load i32, i32* %160, align 4
  %162 = icmp sgt i32 %161, 0
  br i1 %162, label %493, label %163

163:                                              ; preds = %158
  %164 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %14, i64 0, i32 3
  %165 = select i1 %15, [1 x i32]* @.str.2, [1 x i32]* %164
  br i1 %15, label %169, label %166

166:                                              ; preds = %163
  %167 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %14, i64 0, i32 1
  %168 = load i64, i64* %167, align 8, !noalias !36
  br label %169

169:                                              ; preds = %163, %166
  %170 = phi i64 [ %168, %166 ], [ 0, %163 ]
  %171 = shl i64 %159, 32
  %172 = add i64 %171, -4294967296
  %173 = ashr exact i64 %172, 32
  %174 = icmp eq i64 %172, 0
  %175 = icmp ult i64 %170, %173
  %176 = or i1 %174, %175
  br i1 %176, label %177, label %179

177:                                              ; preds = %169
  %178 = bitcast %"class.fxcrt::StringViewTemplate.97"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %178, i8 0, i64 16, i1 false) #11, !alias.scope !39
  br label %192

179:                                              ; preds = %169
  %180 = sub i64 %170, %173
  %181 = icmp eq [1 x i32]* %165, null
  br i1 %181, label %182, label %184

182:                                              ; preds = %179
  %183 = bitcast %"class.fxcrt::StringViewTemplate.97"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %183, i8 0, i64 16, i1 false) #11, !alias.scope !42
  br label %192

184:                                              ; preds = %179
  %185 = icmp ugt i64 %170, %180
  br i1 %185, label %188, label %186

186:                                              ; preds = %184
  %187 = bitcast %"class.fxcrt::StringViewTemplate.97"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %187, i8 0, i64 16, i1 false) #11, !alias.scope !42
  br label %192

188:                                              ; preds = %184
  %189 = getelementptr inbounds [1 x i32], [1 x i32]* %165, i64 0, i64 %180
  %190 = getelementptr inbounds %"class.fxcrt::StringViewTemplate.97", %"class.fxcrt::StringViewTemplate.97"* %6, i64 0, i32 0, i32 0, i32 0
  store i32* %189, i32** %190, align 8, !alias.scope !42
  %191 = getelementptr inbounds %"class.fxcrt::StringViewTemplate.97", %"class.fxcrt::StringViewTemplate.97"* %6, i64 0, i32 0, i32 1
  store i64 %173, i64* %191, align 8, !alias.scope !42
  br label %192

192:                                              ; preds = %177, %182, %186, %188
  %193 = call i32 @_Z16FX_HashCode_GetWN5fxcrt18StringViewTemplateIwEEb(%"class.fxcrt::StringViewTemplate.97"* nonnull %6, i1 zeroext false) #11
  %194 = icmp eq i32 %193, 207010303
  br i1 %194, label %195, label %337

195:                                              ; preds = %192
  %196 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2
  %197 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 0, i32 0
  %198 = load %class.CFXJSE_Engine*, %class.CFXJSE_Engine** %197, align 8
  %199 = getelementptr inbounds %class.CFXJSE_Engine, %class.CFXJSE_Engine* %198, i64 0, i32 2
  %200 = bitcast %"class.cppgc::internal::BasicPersistent.3"* %199 to %class.CXFA_Document**
  %201 = load %class.CXFA_Document*, %class.CXFA_Document** %200, align 8
  %202 = getelementptr inbounds %class.CXFA_Document, %class.CXFA_Document* %201, i64 0, i32 3
  %203 = bitcast %"class.cppgc::internal::BasicMember.30"* %202 to i64*
  %204 = load i64, i64* %203, align 8
  %205 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2, i32 0, i32 1
  %206 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %205, align 8
  %207 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2, i32 0, i32 2, i32 0, i32 0
  %208 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %207, align 8
  %209 = icmp ult %"class.cppgc::internal::BasicMember.70"* %206, %208
  %210 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %208 to i64
  br i1 %209, label %211, label %216

211:                                              ; preds = %195
  %212 = bitcast %"class.cppgc::internal::BasicMember.70"* %206 to i64*
  store i64 %204, i64* %212, align 8
  %213 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %206, i64 1
  %214 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %213 to i64
  %215 = bitcast %"class.cppgc::internal::BasicMember.70"** %205 to i64*
  store i64 %214, i64* %215, align 8
  br label %480

216:                                              ; preds = %195
  %217 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %206 to i64
  %218 = bitcast %"class.cppgc::internal::BasicMember.70"** %205 to i64*
  %219 = bitcast %"class.std::__1::vector.90"* %196 to i64*
  %220 = load i64, i64* %219, align 8
  %221 = sub i64 %217, %220
  %222 = ashr exact i64 %221, 3
  %223 = add nsw i64 %222, 1
  %224 = icmp ugt i64 %223, 2305843009213693951
  br i1 %224, label %225, label %227

225:                                              ; preds = %216
  %226 = bitcast %"class.std::__1::vector.90"* %196 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %226) #12
  unreachable

227:                                              ; preds = %216
  %228 = bitcast %"class.cppgc::internal::BasicMember.70"** %207 to i64*
  %229 = sub i64 %210, %220
  %230 = ashr exact i64 %229, 3
  %231 = icmp ult i64 %230, 1152921504606846975
  br i1 %231, label %232, label %240

232:                                              ; preds = %227
  %233 = ashr exact i64 %229, 2
  %234 = icmp ult i64 %233, %223
  %235 = select i1 %234, i64 %223, i64 %233
  %236 = icmp eq i64 %235, 0
  br i1 %236, label %245, label %237

237:                                              ; preds = %232
  %238 = icmp ugt i64 %235, 2305843009213693951
  br i1 %238, label %239, label %240

239:                                              ; preds = %237
  call void @abort() #12
  unreachable

240:                                              ; preds = %237, %227
  %241 = phi i64 [ %235, %237 ], [ 2305843009213693951, %227 ]
  %242 = shl i64 %241, 3
  %243 = call i8* @_Znwm(i64 %242) #10
  %244 = bitcast i8* %243 to %"class.cppgc::internal::BasicMember.70"*
  br label %245

245:                                              ; preds = %240, %232
  %246 = phi i64 [ %241, %240 ], [ 0, %232 ]
  %247 = phi %"class.cppgc::internal::BasicMember.70"* [ %244, %240 ], [ null, %232 ]
  %248 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %247, i64 %222
  %249 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %247, i64 %246
  %250 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %249 to i64
  %251 = bitcast %"class.cppgc::internal::BasicMember.70"* %248 to i64*
  store i64 %204, i64* %251, align 8
  %252 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %248, i64 1
  %253 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %252 to i64
  %254 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %196, i64 0, i32 0, i32 0
  %255 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %254, align 8
  %256 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %255 to i64
  %257 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %205, align 8
  %258 = icmp eq %"class.cppgc::internal::BasicMember.70"* %257, %255
  br i1 %258, label %330, label %259

259:                                              ; preds = %245
  %260 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %257, i64 -1, i32 0, i32 0
  %261 = ptrtoint i8** %260 to i64
  %262 = sub i64 %261, %256
  %263 = lshr i64 %262, 3
  %264 = add nuw nsw i64 %263, 1
  %265 = and i64 %264, 7
  %266 = icmp eq i64 %265, 0
  br i1 %266, label %278, label %267

267:                                              ; preds = %259, %267
  %268 = phi %"class.cppgc::internal::BasicMember.70"* [ %271, %267 ], [ %248, %259 ]
  %269 = phi %"class.cppgc::internal::BasicMember.70"* [ %272, %267 ], [ %257, %259 ]
  %270 = phi i64 [ %276, %267 ], [ %265, %259 ]
  %271 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %268, i64 -1
  %272 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %269, i64 -1
  %273 = bitcast %"class.cppgc::internal::BasicMember.70"* %272 to i64*
  %274 = load i64, i64* %273, align 8
  %275 = bitcast %"class.cppgc::internal::BasicMember.70"* %271 to i64*
  store i64 %274, i64* %275, align 8
  store atomic i64 0, i64* %273 monotonic, align 8
  %276 = add i64 %270, -1
  %277 = icmp eq i64 %276, 0
  br i1 %277, label %278, label %267, !llvm.loop !45

278:                                              ; preds = %267, %259
  %279 = phi %"class.cppgc::internal::BasicMember.70"* [ undef, %259 ], [ %271, %267 ]
  %280 = phi %"class.cppgc::internal::BasicMember.70"* [ %248, %259 ], [ %271, %267 ]
  %281 = phi %"class.cppgc::internal::BasicMember.70"* [ %257, %259 ], [ %272, %267 ]
  %282 = icmp ult i64 %262, 56
  br i1 %282, label %327, label %283

283:                                              ; preds = %278, %283
  %284 = phi %"class.cppgc::internal::BasicMember.70"* [ %321, %283 ], [ %280, %278 ]
  %285 = phi %"class.cppgc::internal::BasicMember.70"* [ %322, %283 ], [ %281, %278 ]
  %286 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %284, i64 -1
  %287 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %285, i64 -1
  %288 = bitcast %"class.cppgc::internal::BasicMember.70"* %287 to i64*
  %289 = load i64, i64* %288, align 8
  %290 = bitcast %"class.cppgc::internal::BasicMember.70"* %286 to i64*
  store i64 %289, i64* %290, align 8
  store atomic i64 0, i64* %288 monotonic, align 8
  %291 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %284, i64 -2
  %292 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %285, i64 -2
  %293 = bitcast %"class.cppgc::internal::BasicMember.70"* %292 to i64*
  %294 = load i64, i64* %293, align 8
  %295 = bitcast %"class.cppgc::internal::BasicMember.70"* %291 to i64*
  store i64 %294, i64* %295, align 8
  store atomic i64 0, i64* %293 monotonic, align 8
  %296 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %284, i64 -3
  %297 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %285, i64 -3
  %298 = bitcast %"class.cppgc::internal::BasicMember.70"* %297 to i64*
  %299 = load i64, i64* %298, align 8
  %300 = bitcast %"class.cppgc::internal::BasicMember.70"* %296 to i64*
  store i64 %299, i64* %300, align 8
  store atomic i64 0, i64* %298 monotonic, align 8
  %301 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %284, i64 -4
  %302 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %285, i64 -4
  %303 = bitcast %"class.cppgc::internal::BasicMember.70"* %302 to i64*
  %304 = load i64, i64* %303, align 8
  %305 = bitcast %"class.cppgc::internal::BasicMember.70"* %301 to i64*
  store i64 %304, i64* %305, align 8
  store atomic i64 0, i64* %303 monotonic, align 8
  %306 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %284, i64 -5
  %307 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %285, i64 -5
  %308 = bitcast %"class.cppgc::internal::BasicMember.70"* %307 to i64*
  %309 = load i64, i64* %308, align 8
  %310 = bitcast %"class.cppgc::internal::BasicMember.70"* %306 to i64*
  store i64 %309, i64* %310, align 8
  store atomic i64 0, i64* %308 monotonic, align 8
  %311 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %284, i64 -6
  %312 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %285, i64 -6
  %313 = bitcast %"class.cppgc::internal::BasicMember.70"* %312 to i64*
  %314 = load i64, i64* %313, align 8
  %315 = bitcast %"class.cppgc::internal::BasicMember.70"* %311 to i64*
  store i64 %314, i64* %315, align 8
  store atomic i64 0, i64* %313 monotonic, align 8
  %316 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %284, i64 -7
  %317 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %285, i64 -7
  %318 = bitcast %"class.cppgc::internal::BasicMember.70"* %317 to i64*
  %319 = load i64, i64* %318, align 8
  %320 = bitcast %"class.cppgc::internal::BasicMember.70"* %316 to i64*
  store i64 %319, i64* %320, align 8
  store atomic i64 0, i64* %318 monotonic, align 8
  %321 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %284, i64 -8
  %322 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %285, i64 -8
  %323 = bitcast %"class.cppgc::internal::BasicMember.70"* %322 to i64*
  %324 = load i64, i64* %323, align 8
  %325 = bitcast %"class.cppgc::internal::BasicMember.70"* %321 to i64*
  store i64 %324, i64* %325, align 8
  store atomic i64 0, i64* %323 monotonic, align 8
  %326 = icmp eq %"class.cppgc::internal::BasicMember.70"* %322, %255
  br i1 %326, label %327, label %283

327:                                              ; preds = %283, %278
  %328 = phi %"class.cppgc::internal::BasicMember.70"* [ %279, %278 ], [ %321, %283 ]
  %329 = load i64, i64* %219, align 8
  br label %330

330:                                              ; preds = %245, %327
  %331 = phi %"class.cppgc::internal::BasicMember.70"* [ %328, %327 ], [ %248, %245 ]
  %332 = phi i64 [ %329, %327 ], [ %256, %245 ]
  %333 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %331 to i64
  store i64 %333, i64* %219, align 8
  store i64 %253, i64* %218, align 8
  store i64 %250, i64* %228, align 8
  %334 = icmp eq i64 %332, 0
  br i1 %334, label %480, label %335

335:                                              ; preds = %330
  %336 = inttoptr i64 %332 to i8*
  call void @_ZdlPv(i8* %336) #10
  br label %480

337:                                              ; preds = %192
  %338 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 0, i32 0
  %339 = load %class.CFXJSE_Engine*, %class.CFXJSE_Engine** %338, align 8
  %340 = getelementptr inbounds %class.CFXJSE_Engine, %class.CFXJSE_Engine* %339, i64 0, i32 2
  %341 = bitcast %"class.cppgc::internal::BasicPersistent.3"* %340 to %class.CXFA_Document**
  %342 = load %class.CXFA_Document*, %class.CXFA_Document** %341, align 8
  %343 = call %class.CXFA_Object* @_ZN13CXFA_Document12GetXFAObjectE12XFA_HashCode(%class.CXFA_Document* %342, i32 %193) #11
  %344 = ptrtoint %class.CXFA_Object* %343 to i64
  %345 = icmp eq %class.CXFA_Object* %343, null
  br i1 %345, label %480, label %346

346:                                              ; preds = %337
  %347 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2
  %348 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2, i32 0, i32 1
  %349 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %348, align 8
  %350 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2, i32 0, i32 2, i32 0, i32 0
  %351 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %350, align 8
  %352 = icmp ult %"class.cppgc::internal::BasicMember.70"* %349, %351
  %353 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %351 to i64
  br i1 %352, label %354, label %359

354:                                              ; preds = %346
  %355 = bitcast %"class.cppgc::internal::BasicMember.70"* %349 to i64*
  store i64 %344, i64* %355, align 8
  %356 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %349, i64 1
  %357 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %356 to i64
  %358 = bitcast %"class.cppgc::internal::BasicMember.70"** %348 to i64*
  store i64 %357, i64* %358, align 8
  br label %480

359:                                              ; preds = %346
  %360 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %349 to i64
  %361 = bitcast %"class.cppgc::internal::BasicMember.70"** %348 to i64*
  %362 = bitcast %"class.std::__1::vector.90"* %347 to i64*
  %363 = load i64, i64* %362, align 8
  %364 = sub i64 %360, %363
  %365 = ashr exact i64 %364, 3
  %366 = add nsw i64 %365, 1
  %367 = icmp ugt i64 %366, 2305843009213693951
  br i1 %367, label %368, label %370

368:                                              ; preds = %359
  %369 = bitcast %"class.std::__1::vector.90"* %347 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %369) #12
  unreachable

370:                                              ; preds = %359
  %371 = bitcast %"class.cppgc::internal::BasicMember.70"** %350 to i64*
  %372 = sub i64 %353, %363
  %373 = ashr exact i64 %372, 3
  %374 = icmp ult i64 %373, 1152921504606846975
  br i1 %374, label %375, label %383

375:                                              ; preds = %370
  %376 = ashr exact i64 %372, 2
  %377 = icmp ult i64 %376, %366
  %378 = select i1 %377, i64 %366, i64 %376
  %379 = icmp eq i64 %378, 0
  br i1 %379, label %388, label %380

380:                                              ; preds = %375
  %381 = icmp ugt i64 %378, 2305843009213693951
  br i1 %381, label %382, label %383

382:                                              ; preds = %380
  call void @abort() #12
  unreachable

383:                                              ; preds = %380, %370
  %384 = phi i64 [ %378, %380 ], [ 2305843009213693951, %370 ]
  %385 = shl i64 %384, 3
  %386 = call i8* @_Znwm(i64 %385) #10
  %387 = bitcast i8* %386 to %"class.cppgc::internal::BasicMember.70"*
  br label %388

388:                                              ; preds = %383, %375
  %389 = phi i64 [ %384, %383 ], [ 0, %375 ]
  %390 = phi %"class.cppgc::internal::BasicMember.70"* [ %387, %383 ], [ null, %375 ]
  %391 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %390, i64 %365
  %392 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %390, i64 %389
  %393 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %392 to i64
  %394 = bitcast %"class.cppgc::internal::BasicMember.70"* %391 to i64*
  store i64 %344, i64* %394, align 8
  %395 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %391, i64 1
  %396 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %395 to i64
  %397 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %347, i64 0, i32 0, i32 0
  %398 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %397, align 8
  %399 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %398 to i64
  %400 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %348, align 8
  %401 = icmp eq %"class.cppgc::internal::BasicMember.70"* %400, %398
  br i1 %401, label %473, label %402

402:                                              ; preds = %388
  %403 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %400, i64 -1, i32 0, i32 0
  %404 = ptrtoint i8** %403 to i64
  %405 = sub i64 %404, %399
  %406 = lshr i64 %405, 3
  %407 = add nuw nsw i64 %406, 1
  %408 = and i64 %407, 7
  %409 = icmp eq i64 %408, 0
  br i1 %409, label %421, label %410

410:                                              ; preds = %402, %410
  %411 = phi %"class.cppgc::internal::BasicMember.70"* [ %414, %410 ], [ %391, %402 ]
  %412 = phi %"class.cppgc::internal::BasicMember.70"* [ %415, %410 ], [ %400, %402 ]
  %413 = phi i64 [ %419, %410 ], [ %408, %402 ]
  %414 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %411, i64 -1
  %415 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %412, i64 -1
  %416 = bitcast %"class.cppgc::internal::BasicMember.70"* %415 to i64*
  %417 = load i64, i64* %416, align 8
  %418 = bitcast %"class.cppgc::internal::BasicMember.70"* %414 to i64*
  store i64 %417, i64* %418, align 8
  store atomic i64 0, i64* %416 monotonic, align 8
  %419 = add i64 %413, -1
  %420 = icmp eq i64 %419, 0
  br i1 %420, label %421, label %410, !llvm.loop !46

421:                                              ; preds = %410, %402
  %422 = phi %"class.cppgc::internal::BasicMember.70"* [ undef, %402 ], [ %414, %410 ]
  %423 = phi %"class.cppgc::internal::BasicMember.70"* [ %391, %402 ], [ %414, %410 ]
  %424 = phi %"class.cppgc::internal::BasicMember.70"* [ %400, %402 ], [ %415, %410 ]
  %425 = icmp ult i64 %405, 56
  br i1 %425, label %470, label %426

426:                                              ; preds = %421, %426
  %427 = phi %"class.cppgc::internal::BasicMember.70"* [ %464, %426 ], [ %423, %421 ]
  %428 = phi %"class.cppgc::internal::BasicMember.70"* [ %465, %426 ], [ %424, %421 ]
  %429 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %427, i64 -1
  %430 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %428, i64 -1
  %431 = bitcast %"class.cppgc::internal::BasicMember.70"* %430 to i64*
  %432 = load i64, i64* %431, align 8
  %433 = bitcast %"class.cppgc::internal::BasicMember.70"* %429 to i64*
  store i64 %432, i64* %433, align 8
  store atomic i64 0, i64* %431 monotonic, align 8
  %434 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %427, i64 -2
  %435 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %428, i64 -2
  %436 = bitcast %"class.cppgc::internal::BasicMember.70"* %435 to i64*
  %437 = load i64, i64* %436, align 8
  %438 = bitcast %"class.cppgc::internal::BasicMember.70"* %434 to i64*
  store i64 %437, i64* %438, align 8
  store atomic i64 0, i64* %436 monotonic, align 8
  %439 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %427, i64 -3
  %440 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %428, i64 -3
  %441 = bitcast %"class.cppgc::internal::BasicMember.70"* %440 to i64*
  %442 = load i64, i64* %441, align 8
  %443 = bitcast %"class.cppgc::internal::BasicMember.70"* %439 to i64*
  store i64 %442, i64* %443, align 8
  store atomic i64 0, i64* %441 monotonic, align 8
  %444 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %427, i64 -4
  %445 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %428, i64 -4
  %446 = bitcast %"class.cppgc::internal::BasicMember.70"* %445 to i64*
  %447 = load i64, i64* %446, align 8
  %448 = bitcast %"class.cppgc::internal::BasicMember.70"* %444 to i64*
  store i64 %447, i64* %448, align 8
  store atomic i64 0, i64* %446 monotonic, align 8
  %449 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %427, i64 -5
  %450 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %428, i64 -5
  %451 = bitcast %"class.cppgc::internal::BasicMember.70"* %450 to i64*
  %452 = load i64, i64* %451, align 8
  %453 = bitcast %"class.cppgc::internal::BasicMember.70"* %449 to i64*
  store i64 %452, i64* %453, align 8
  store atomic i64 0, i64* %451 monotonic, align 8
  %454 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %427, i64 -6
  %455 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %428, i64 -6
  %456 = bitcast %"class.cppgc::internal::BasicMember.70"* %455 to i64*
  %457 = load i64, i64* %456, align 8
  %458 = bitcast %"class.cppgc::internal::BasicMember.70"* %454 to i64*
  store i64 %457, i64* %458, align 8
  store atomic i64 0, i64* %456 monotonic, align 8
  %459 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %427, i64 -7
  %460 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %428, i64 -7
  %461 = bitcast %"class.cppgc::internal::BasicMember.70"* %460 to i64*
  %462 = load i64, i64* %461, align 8
  %463 = bitcast %"class.cppgc::internal::BasicMember.70"* %459 to i64*
  store i64 %462, i64* %463, align 8
  store atomic i64 0, i64* %461 monotonic, align 8
  %464 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %427, i64 -8
  %465 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %428, i64 -8
  %466 = bitcast %"class.cppgc::internal::BasicMember.70"* %465 to i64*
  %467 = load i64, i64* %466, align 8
  %468 = bitcast %"class.cppgc::internal::BasicMember.70"* %464 to i64*
  store i64 %467, i64* %468, align 8
  store atomic i64 0, i64* %466 monotonic, align 8
  %469 = icmp eq %"class.cppgc::internal::BasicMember.70"* %465, %398
  br i1 %469, label %470, label %426

470:                                              ; preds = %426, %421
  %471 = phi %"class.cppgc::internal::BasicMember.70"* [ %422, %421 ], [ %464, %426 ]
  %472 = load i64, i64* %362, align 8
  br label %473

473:                                              ; preds = %388, %470
  %474 = phi %"class.cppgc::internal::BasicMember.70"* [ %471, %470 ], [ %391, %388 ]
  %475 = phi i64 [ %472, %470 ], [ %399, %388 ]
  %476 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %474 to i64
  store i64 %476, i64* %362, align 8
  store i64 %396, i64* %361, align 8
  store i64 %393, i64* %371, align 8
  %477 = icmp eq i64 %475, 0
  br i1 %477, label %480, label %478

478:                                              ; preds = %473
  %479 = inttoptr i64 %475 to i8*
  call void @_ZdlPv(i8* %479) #10
  br label %480

480:                                              ; preds = %337, %354, %473, %478, %335, %330, %211
  %481 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2, i32 0, i32 0
  %482 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %481, align 8
  %483 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2, i32 0, i32 1
  %484 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %483, align 8
  %485 = icmp eq %"class.cppgc::internal::BasicMember.70"* %482, %484
  br i1 %485, label %489, label %486

486:                                              ; preds = %480
  call void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"* nonnull %7, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %5) #11
  call void @_ZN23CFXJSE_ResolveProcessor15FilterConditionEPN2v87IsolateEN5fxcrt10WideStringEP22CFXJSE_ResolveNodeData(%class.CFXJSE_ResolveProcessor* %0, %"class.v8::Isolate"* %1, %"class.fxcrt::WideString"* nonnull %7, %class.CFXJSE_ResolveNodeData* %2)
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %7) #11
  %487 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %481, align 8
  %488 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %483, align 8
  br label %489

489:                                              ; preds = %486, %480
  %490 = phi %"class.cppgc::internal::BasicMember.70"* [ %488, %486 ], [ %482, %480 ]
  %491 = phi %"class.cppgc::internal::BasicMember.70"* [ %487, %486 ], [ %482, %480 ]
  %492 = icmp ne %"class.cppgc::internal::BasicMember.70"* %491, %490
  br label %493

493:                                              ; preds = %156, %151, %32, %158, %489
  %494 = phi i1 [ %492, %489 ], [ false, %158 ], [ true, %32 ], [ true, %151 ], [ true, %156 ]
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #11
  ret i1 %494
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN23CFXJSE_ResolveProcessor18ResolveExcalmatoryEPN2v87IsolateER22CFXJSE_ResolveNodeData(%class.CFXJSE_ResolveProcessor*, %"class.v8::Isolate"*, %class.CFXJSE_ResolveNodeData* dereferenceable(96)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.CFXJSE_ResolveNodeData, align 8
  %5 = alloca %"class.fxcrt::WideString", align 8
  %6 = alloca %"class.fxcrt::StringViewTemplate.97", align 8
  %7 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 5
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %77, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 0, i32 0
  %12 = load %class.CFXJSE_Engine*, %class.CFXJSE_Engine** %11, align 8
  %13 = getelementptr inbounds %class.CFXJSE_Engine, %class.CFXJSE_Engine* %12, i64 0, i32 2
  %14 = bitcast %"class.cppgc::internal::BasicPersistent.3"* %13 to %class.CXFA_Document**
  %15 = load %class.CXFA_Document*, %class.CXFA_Document** %14, align 8
  %16 = tail call %class.CXFA_Object* @_ZN13CXFA_Document12GetXFAObjectE12XFA_HashCode(%class.CXFA_Document* %15, i32 -1715908487) #11
  %17 = tail call %class.CXFA_Node* @_Z6ToNodeP11CXFA_Object(%class.CXFA_Object* %16) #11
  %18 = icmp eq %class.CXFA_Node* %17, null
  br i1 %18, label %77, label %19

19:                                               ; preds = %10
  %20 = bitcast %class.CFXJSE_ResolveNodeData* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %20) #11
  %21 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %4, i64 0, i32 2
  %22 = bitcast %"class.fxcrt::WideString"* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 80, i1 false)
  %23 = bitcast %class.CFXJSE_ResolveNodeData* %2 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %class.CFXJSE_ResolveNodeData* %4 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %4, i64 0, i32 1, i32 0
  store %class.CXFA_Object* null, %class.CXFA_Object** %26, align 8
  %27 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %4, i64 0, i32 2
  call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* %27) #11
  %28 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %4, i64 0, i32 3
  call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* %28) #11
  %29 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %4, i64 0, i32 4
  store i32 0, i32* %29, align 8
  %30 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %4, i64 0, i32 5
  store i32 0, i32* %30, align 4
  %31 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %4, i64 0, i32 6
  store i16 1, i16* %31, align 8
  %32 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %4, i64 0, i32 7
  call void @_ZN13CFXJSE_Engine13ResolveResultC1Ev(%"class.CFXJSE_Engine::ResolveResult"* %32) #11
  %33 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %17, i64 0, i32 0
  store %class.CXFA_Object* %33, %class.CXFA_Object** %26, align 8
  %34 = bitcast %"class.fxcrt::WideString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #11
  %35 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 2
  %36 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %36, align 8
  %38 = icmp eq %"class.fxcrt::StringDataTemplate"* %37, null
  br i1 %38, label %43, label %39

39:                                               ; preds = %19
  %40 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %37, i64 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = add i64 %41, -1
  br label %43

43:                                               ; preds = %19, %39
  %44 = phi i64 [ %42, %39 ], [ -1, %19 ]
  call void @_ZNK5fxcrt10WideString4LastEm(%"class.fxcrt::WideString"* nonnull sret %5, %"class.fxcrt::WideString"* %35, i64 %44) #11
  %45 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* %27, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %5) #11
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #11
  %46 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %46, align 8, !noalias !47
  %48 = icmp eq %"class.fxcrt::StringDataTemplate"* %47, null
  %49 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %47, i64 0, i32 3
  %50 = select i1 %48, [1 x i32]* @.str.2, [1 x i32]* %49
  %51 = getelementptr inbounds [1 x i32], [1 x i32]* %50, i64 0, i64 0
  br i1 %48, label %55, label %52

52:                                               ; preds = %43
  %53 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %47, i64 0, i32 1
  %54 = load i64, i64* %53, align 8, !noalias !47
  br label %55

55:                                               ; preds = %43, %52
  %56 = phi i64 [ %54, %52 ], [ 0, %43 ]
  %57 = getelementptr inbounds %"class.fxcrt::StringViewTemplate.97", %"class.fxcrt::StringViewTemplate.97"* %6, i64 0, i32 0, i32 0, i32 0
  store i32* %51, i32** %57, align 8, !alias.scope !47
  %58 = getelementptr inbounds %"class.fxcrt::StringViewTemplate.97", %"class.fxcrt::StringViewTemplate.97"* %6, i64 0, i32 0, i32 1
  store i64 %56, i64* %58, align 8, !alias.scope !47
  %59 = call i32 @_Z16FX_HashCode_GetWN5fxcrt18StringViewTemplateIwEEb(%"class.fxcrt::StringViewTemplate.97"* nonnull %6, i1 zeroext false) #11
  store i32 %59, i32* %29, align 8
  %60 = load i32, i32* %7, align 4
  %61 = add nsw i32 %60, 1
  store i32 %61, i32* %30, align 4
  store i16 1, i16* %31, align 8
  %62 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 3
  %63 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSERKS0_(%"class.fxcrt::WideString"* %28, %"class.fxcrt::WideString"* dereferenceable(8) %62) #11
  %64 = call zeroext i1 @_ZN23CFXJSE_ResolveProcessor7ResolveEPN2v87IsolateER22CFXJSE_ResolveNodeData(%class.CFXJSE_ResolveProcessor* %0, %"class.v8::Isolate"* %1, %class.CFXJSE_ResolveNodeData* nonnull dereferenceable(96) %4)
  %65 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2
  %66 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2, i32 0, i32 1
  %67 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %66, align 8
  %68 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %4, i64 0, i32 7, i32 2, i32 0, i32 0
  %69 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %68, align 8
  %70 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %4, i64 0, i32 7, i32 2, i32 0, i32 1
  %71 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %70, align 8
  %72 = call %"class.cppgc::internal::BasicMember.70"* @_ZNSt3__16vectorIN5cppgc8internal11BasicMemberI11CXFA_ObjectNS2_15StrongMemberTagENS2_26DijkstraWriteBarrierPolicyENS2_22DisabledCheckingPolicyEEENS_9allocatorIS8_EEE6insertINS_11__wrap_iterIPS8_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS8_NS_15iterator_traitsISH_E9referenceEEE5valueESF_E4typeENSD_IPKS8_EESH_SH_(%"class.std::__1::vector.90"* %65, %"class.cppgc::internal::BasicMember.70"* %67, %"class.cppgc::internal::BasicMember.70"* %69, %"class.cppgc::internal::BasicMember.70"* %71)
  %73 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %65, i64 0, i32 0, i32 0
  %74 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %73, align 8
  %75 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %66, align 8
  %76 = icmp ne %"class.cppgc::internal::BasicMember.70"* %74, %75
  call void @_ZN13CFXJSE_Engine13ResolveResultD1Ev(%"class.CFXJSE_Engine::ResolveResult"* %32) #11
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* %28) #11
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* %27) #11
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %20) #11
  br label %77

77:                                               ; preds = %55, %10, %3
  %78 = phi i1 [ false, %3 ], [ %76, %55 ], [ false, %10 ]
  ret i1 %78
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN23CFXJSE_ResolveProcessor17ResolveNumberSignEPN2v87IsolateER22CFXJSE_ResolveNodeData(%class.CFXJSE_ResolveProcessor* readonly, %"class.v8::Isolate"*, %class.CFXJSE_ResolveNodeData* dereferenceable(96)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.fxcrt::WideString", align 8
  %5 = alloca %"class.fxcrt::WideString", align 8
  %6 = alloca %"class.fxcrt::StringViewTemplate.97", align 8
  %7 = alloca %class.CFXJSE_ResolveNodeData, align 8
  %8 = alloca %"class.fxcrt::StringViewTemplate.97", align 8
  %9 = bitcast %"class.fxcrt::WideString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %10, align 8
  %11 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 2
  %12 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %12, align 8
  %14 = icmp eq %"class.fxcrt::StringDataTemplate"* %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %13, i64 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %17, -1
  br label %19

19:                                               ; preds = %3, %15
  %20 = phi i64 [ %18, %15 ], [ -1, %3 ]
  call void @_ZNK5fxcrt10WideString4LastEm(%"class.fxcrt::WideString"* nonnull sret %4, %"class.fxcrt::WideString"* %11, i64 %20) #11
  %21 = bitcast %"class.fxcrt::WideString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #11
  %22 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %22, align 8
  %23 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 3
  call void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"* nonnull %5, %"class.fxcrt::WideString"* dereferenceable(8) %23) #11
  %24 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 1, i32 0
  %25 = load %class.CXFA_Object*, %class.CXFA_Object** %24, align 8
  %26 = call %class.CXFA_Node* @_Z6ToNodeP11CXFA_Object(%class.CXFA_Object* %25) #11
  %27 = ptrtoint %class.CXFA_Node* %26 to i64
  %28 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %26, i64 0, i32 0
  %29 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7
  %30 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %10, align 8, !noalias !50
  %31 = icmp eq %"class.fxcrt::StringDataTemplate"* %30, null
  %32 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %30, i64 0, i32 3
  %33 = select i1 %31, [1 x i32]* @.str.2, [1 x i32]* %32
  %34 = getelementptr inbounds [1 x i32], [1 x i32]* %33, i64 0, i64 0
  br i1 %31, label %38, label %35

35:                                               ; preds = %19
  %36 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %30, i64 0, i32 1
  %37 = load i64, i64* %36, align 8, !noalias !50
  br label %38

38:                                               ; preds = %19, %35
  %39 = phi i64 [ %37, %35 ], [ 0, %19 ]
  %40 = getelementptr inbounds %"class.fxcrt::StringViewTemplate.97", %"class.fxcrt::StringViewTemplate.97"* %6, i64 0, i32 0, i32 0, i32 0
  store i32* %34, i32** %40, align 8, !alias.scope !50
  %41 = getelementptr inbounds %"class.fxcrt::StringViewTemplate.97", %"class.fxcrt::StringViewTemplate.97"* %6, i64 0, i32 0, i32 1
  store i64 %39, i64* %41, align 8, !alias.scope !50
  %42 = call zeroext i1 @_ZN23CFXJSE_ResolveProcessor21ResolveForAttributeRsEP11CXFA_ObjectPN13CFXJSE_Engine13ResolveResultEN5fxcrt18StringViewTemplateIwEE(%class.CFXJSE_ResolveProcessor* undef, %class.CXFA_Object* %28, %"class.CFXJSE_Engine::ResolveResult"* %29, %"class.fxcrt::StringViewTemplate.97"* nonnull %6)
  br i1 %42, label %251, label %43

43:                                               ; preds = %38
  %44 = bitcast %class.CFXJSE_ResolveNodeData* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %44) #11
  %45 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %7, i64 0, i32 2
  %46 = bitcast %"class.fxcrt::WideString"* %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 80, i1 false)
  %47 = bitcast %class.CFXJSE_ResolveNodeData* %2 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %class.CFXJSE_ResolveNodeData* %7 to i64*
  store i64 %48, i64* %49, align 8
  %50 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %7, i64 0, i32 1, i32 0
  store %class.CXFA_Object* null, %class.CXFA_Object** %50, align 8
  %51 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %7, i64 0, i32 2
  call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* %51) #11
  %52 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %7, i64 0, i32 3
  call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* %52) #11
  %53 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %7, i64 0, i32 4
  store i32 0, i32* %53, align 8
  %54 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %7, i64 0, i32 5
  store i32 0, i32* %54, align 4
  %55 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %7, i64 0, i32 6
  store i16 1, i16* %55, align 8
  %56 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %7, i64 0, i32 7
  call void @_ZN13CFXJSE_Engine13ResolveResultC1Ev(%"class.CFXJSE_Engine::ResolveResult"* %56) #11
  %57 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 5
  %58 = load i32, i32* %57, align 4
  %59 = add nsw i32 %58, 1
  store i32 %59, i32* %54, align 4
  %60 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 6
  %61 = load i16, i16* %60, align 8
  %62 = and i16 %61, -7
  %63 = or i16 %62, 2
  store i16 %63, i16* %55, align 8
  %64 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* %51, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %4) #11
  %65 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %65, align 8, !noalias !53
  %67 = icmp eq %"class.fxcrt::StringDataTemplate"* %66, null
  %68 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %66, i64 0, i32 3
  %69 = select i1 %67, [1 x i32]* @.str.2, [1 x i32]* %68
  %70 = getelementptr inbounds [1 x i32], [1 x i32]* %69, i64 0, i64 0
  br i1 %67, label %74, label %71

71:                                               ; preds = %43
  %72 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %66, i64 0, i32 1
  %73 = load i64, i64* %72, align 8, !noalias !53
  br label %74

74:                                               ; preds = %43, %71
  %75 = phi i64 [ %73, %71 ], [ 0, %43 ]
  %76 = getelementptr inbounds %"class.fxcrt::StringViewTemplate.97", %"class.fxcrt::StringViewTemplate.97"* %8, i64 0, i32 0, i32 0, i32 0
  store i32* %70, i32** %76, align 8, !alias.scope !53
  %77 = getelementptr inbounds %"class.fxcrt::StringViewTemplate.97", %"class.fxcrt::StringViewTemplate.97"* %8, i64 0, i32 0, i32 1
  store i64 %75, i64* %77, align 8, !alias.scope !53
  %78 = call i32 @_Z16FX_HashCode_GetWN5fxcrt18StringViewTemplateIwEEb(%"class.fxcrt::StringViewTemplate.97"* nonnull %8, i1 zeroext false) #11
  store i32 %78, i32* %53, align 8
  %79 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSERKS0_(%"class.fxcrt::WideString"* %52, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %5) #11
  store %class.CXFA_Object* %28, %class.CXFA_Object** %50, align 8
  %80 = call zeroext i1 @_ZN23CFXJSE_ResolveProcessor13ResolveNormalEPN2v87IsolateER22CFXJSE_ResolveNodeData(%class.CFXJSE_ResolveProcessor* %0, %"class.v8::Isolate"* %1, %class.CFXJSE_ResolveNodeData* nonnull dereferenceable(96) %7)
  %81 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %7, i64 0, i32 7, i32 2, i32 0, i32 0
  %82 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %81, align 8
  %83 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %7, i64 0, i32 7, i32 2, i32 0, i32 1
  %84 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %83, align 8
  %85 = icmp eq %"class.cppgc::internal::BasicMember.70"* %82, %84
  br i1 %85, label %249, label %86

86:                                               ; preds = %74
  %87 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %22, align 8
  %88 = icmp eq %"class.fxcrt::StringDataTemplate"* %87, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %86
  %90 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %87, i64 0, i32 1
  %91 = load i64, i64* %90, align 8
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %93, label %238

93:                                               ; preds = %86, %89
  br label %94

94:                                               ; preds = %93, %99
  %95 = phi %"class.cppgc::internal::BasicMember.70"* [ %100, %99 ], [ %82, %93 ]
  %96 = bitcast %"class.cppgc::internal::BasicMember.70"* %95 to %class.CXFA_Object**
  %97 = load %class.CXFA_Object*, %class.CXFA_Object** %96, align 8
  %98 = icmp eq %class.CXFA_Object* %97, %28
  br i1 %98, label %102, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %95, i64 1
  %101 = icmp eq %"class.cppgc::internal::BasicMember.70"* %100, %84
  br i1 %101, label %238, label %94

102:                                              ; preds = %94
  %103 = icmp eq %"class.cppgc::internal::BasicMember.70"* %95, %84
  br i1 %103, label %238, label %104

104:                                              ; preds = %102
  %105 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2
  %106 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2, i32 0, i32 1
  %107 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %106, align 8
  %108 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2, i32 0, i32 2, i32 0, i32 0
  %109 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %108, align 8
  %110 = icmp ult %"class.cppgc::internal::BasicMember.70"* %107, %109
  %111 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %109 to i64
  br i1 %110, label %112, label %117

112:                                              ; preds = %104
  %113 = bitcast %"class.cppgc::internal::BasicMember.70"* %107 to i64*
  store i64 %27, i64* %113, align 8
  %114 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %107, i64 1
  %115 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %114 to i64
  %116 = bitcast %"class.cppgc::internal::BasicMember.70"** %106 to i64*
  store i64 %115, i64* %116, align 8
  br label %243

117:                                              ; preds = %104
  %118 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %107 to i64
  %119 = bitcast %"class.cppgc::internal::BasicMember.70"** %106 to i64*
  %120 = bitcast %"class.std::__1::vector.90"* %105 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = sub i64 %118, %121
  %123 = ashr exact i64 %122, 3
  %124 = add nsw i64 %123, 1
  %125 = icmp ugt i64 %124, 2305843009213693951
  br i1 %125, label %126, label %128

126:                                              ; preds = %117
  %127 = bitcast %"class.std::__1::vector.90"* %105 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %127) #12
  unreachable

128:                                              ; preds = %117
  %129 = bitcast %"class.cppgc::internal::BasicMember.70"** %108 to i64*
  %130 = sub i64 %111, %121
  %131 = ashr exact i64 %130, 3
  %132 = icmp ult i64 %131, 1152921504606846975
  br i1 %132, label %133, label %141

133:                                              ; preds = %128
  %134 = ashr exact i64 %130, 2
  %135 = icmp ult i64 %134, %124
  %136 = select i1 %135, i64 %124, i64 %134
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %146, label %138

138:                                              ; preds = %133
  %139 = icmp ugt i64 %136, 2305843009213693951
  br i1 %139, label %140, label %141

140:                                              ; preds = %138
  call void @abort() #12
  unreachable

141:                                              ; preds = %138, %128
  %142 = phi i64 [ %136, %138 ], [ 2305843009213693951, %128 ]
  %143 = shl i64 %142, 3
  %144 = call i8* @_Znwm(i64 %143) #10
  %145 = bitcast i8* %144 to %"class.cppgc::internal::BasicMember.70"*
  br label %146

146:                                              ; preds = %141, %133
  %147 = phi i64 [ %142, %141 ], [ 0, %133 ]
  %148 = phi %"class.cppgc::internal::BasicMember.70"* [ %145, %141 ], [ null, %133 ]
  %149 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %148, i64 %123
  %150 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %148, i64 %147
  %151 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %150 to i64
  %152 = bitcast %"class.cppgc::internal::BasicMember.70"* %149 to i64*
  store i64 %27, i64* %152, align 8
  %153 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %149, i64 1
  %154 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %153 to i64
  %155 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %105, i64 0, i32 0, i32 0
  %156 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %155, align 8
  %157 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %156 to i64
  %158 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %106, align 8
  %159 = icmp eq %"class.cppgc::internal::BasicMember.70"* %158, %156
  br i1 %159, label %231, label %160

160:                                              ; preds = %146
  %161 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %158, i64 -1, i32 0, i32 0
  %162 = ptrtoint i8** %161 to i64
  %163 = sub i64 %162, %157
  %164 = lshr i64 %163, 3
  %165 = add nuw nsw i64 %164, 1
  %166 = and i64 %165, 7
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %179, label %168

168:                                              ; preds = %160, %168
  %169 = phi %"class.cppgc::internal::BasicMember.70"* [ %172, %168 ], [ %149, %160 ]
  %170 = phi %"class.cppgc::internal::BasicMember.70"* [ %173, %168 ], [ %158, %160 ]
  %171 = phi i64 [ %177, %168 ], [ %166, %160 ]
  %172 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %169, i64 -1
  %173 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %170, i64 -1
  %174 = bitcast %"class.cppgc::internal::BasicMember.70"* %173 to i64*
  %175 = load i64, i64* %174, align 8
  %176 = bitcast %"class.cppgc::internal::BasicMember.70"* %172 to i64*
  store i64 %175, i64* %176, align 8
  store atomic i64 0, i64* %174 monotonic, align 8
  %177 = add i64 %171, -1
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %179, label %168, !llvm.loop !56

179:                                              ; preds = %168, %160
  %180 = phi %"class.cppgc::internal::BasicMember.70"* [ undef, %160 ], [ %172, %168 ]
  %181 = phi %"class.cppgc::internal::BasicMember.70"* [ %149, %160 ], [ %172, %168 ]
  %182 = phi %"class.cppgc::internal::BasicMember.70"* [ %158, %160 ], [ %173, %168 ]
  %183 = icmp ult i64 %163, 56
  br i1 %183, label %228, label %184

184:                                              ; preds = %179, %184
  %185 = phi %"class.cppgc::internal::BasicMember.70"* [ %222, %184 ], [ %181, %179 ]
  %186 = phi %"class.cppgc::internal::BasicMember.70"* [ %223, %184 ], [ %182, %179 ]
  %187 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %185, i64 -1
  %188 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %186, i64 -1
  %189 = bitcast %"class.cppgc::internal::BasicMember.70"* %188 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = bitcast %"class.cppgc::internal::BasicMember.70"* %187 to i64*
  store i64 %190, i64* %191, align 8
  store atomic i64 0, i64* %189 monotonic, align 8
  %192 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %185, i64 -2
  %193 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %186, i64 -2
  %194 = bitcast %"class.cppgc::internal::BasicMember.70"* %193 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = bitcast %"class.cppgc::internal::BasicMember.70"* %192 to i64*
  store i64 %195, i64* %196, align 8
  store atomic i64 0, i64* %194 monotonic, align 8
  %197 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %185, i64 -3
  %198 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %186, i64 -3
  %199 = bitcast %"class.cppgc::internal::BasicMember.70"* %198 to i64*
  %200 = load i64, i64* %199, align 8
  %201 = bitcast %"class.cppgc::internal::BasicMember.70"* %197 to i64*
  store i64 %200, i64* %201, align 8
  store atomic i64 0, i64* %199 monotonic, align 8
  %202 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %185, i64 -4
  %203 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %186, i64 -4
  %204 = bitcast %"class.cppgc::internal::BasicMember.70"* %203 to i64*
  %205 = load i64, i64* %204, align 8
  %206 = bitcast %"class.cppgc::internal::BasicMember.70"* %202 to i64*
  store i64 %205, i64* %206, align 8
  store atomic i64 0, i64* %204 monotonic, align 8
  %207 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %185, i64 -5
  %208 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %186, i64 -5
  %209 = bitcast %"class.cppgc::internal::BasicMember.70"* %208 to i64*
  %210 = load i64, i64* %209, align 8
  %211 = bitcast %"class.cppgc::internal::BasicMember.70"* %207 to i64*
  store i64 %210, i64* %211, align 8
  store atomic i64 0, i64* %209 monotonic, align 8
  %212 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %185, i64 -6
  %213 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %186, i64 -6
  %214 = bitcast %"class.cppgc::internal::BasicMember.70"* %213 to i64*
  %215 = load i64, i64* %214, align 8
  %216 = bitcast %"class.cppgc::internal::BasicMember.70"* %212 to i64*
  store i64 %215, i64* %216, align 8
  store atomic i64 0, i64* %214 monotonic, align 8
  %217 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %185, i64 -7
  %218 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %186, i64 -7
  %219 = bitcast %"class.cppgc::internal::BasicMember.70"* %218 to i64*
  %220 = load i64, i64* %219, align 8
  %221 = bitcast %"class.cppgc::internal::BasicMember.70"* %217 to i64*
  store i64 %220, i64* %221, align 8
  store atomic i64 0, i64* %219 monotonic, align 8
  %222 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %185, i64 -8
  %223 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %186, i64 -8
  %224 = bitcast %"class.cppgc::internal::BasicMember.70"* %223 to i64*
  %225 = load i64, i64* %224, align 8
  %226 = bitcast %"class.cppgc::internal::BasicMember.70"* %222 to i64*
  store i64 %225, i64* %226, align 8
  store atomic i64 0, i64* %224 monotonic, align 8
  %227 = icmp eq %"class.cppgc::internal::BasicMember.70"* %223, %156
  br i1 %227, label %228, label %184

228:                                              ; preds = %184, %179
  %229 = phi %"class.cppgc::internal::BasicMember.70"* [ %180, %179 ], [ %222, %184 ]
  %230 = load i64, i64* %120, align 8
  br label %231

231:                                              ; preds = %146, %228
  %232 = phi %"class.cppgc::internal::BasicMember.70"* [ %229, %228 ], [ %149, %146 ]
  %233 = phi i64 [ %230, %228 ], [ %157, %146 ]
  %234 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %232 to i64
  store i64 %234, i64* %120, align 8
  store i64 %154, i64* %119, align 8
  store i64 %151, i64* %129, align 8
  %235 = icmp eq i64 %233, 0
  br i1 %235, label %243, label %236

236:                                              ; preds = %231
  %237 = inttoptr i64 %233 to i8*
  call void @_ZdlPv(i8* %237) #10
  br label %243

238:                                              ; preds = %99, %102, %89
  %239 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2
  %240 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2, i32 0, i32 1
  %241 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %240, align 8
  %242 = call %"class.cppgc::internal::BasicMember.70"* @_ZNSt3__16vectorIN5cppgc8internal11BasicMemberI11CXFA_ObjectNS2_15StrongMemberTagENS2_26DijkstraWriteBarrierPolicyENS2_22DisabledCheckingPolicyEEENS_9allocatorIS8_EEE6insertINS_11__wrap_iterIPS8_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS8_NS_15iterator_traitsISH_E9referenceEEE5valueESF_E4typeENSD_IPKS8_EESH_SH_(%"class.std::__1::vector.90"* %239, %"class.cppgc::internal::BasicMember.70"* %241, %"class.cppgc::internal::BasicMember.70"* %82, %"class.cppgc::internal::BasicMember.70"* %84)
  br label %243

243:                                              ; preds = %236, %231, %112, %238
  %244 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2, i32 0, i32 0
  %245 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %244, align 8
  %246 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2, i32 0, i32 1
  %247 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %246, align 8
  %248 = icmp ne %"class.cppgc::internal::BasicMember.70"* %245, %247
  br label %249

249:                                              ; preds = %74, %243
  %250 = phi i1 [ %248, %243 ], [ false, %74 ]
  call void @_ZN13CFXJSE_Engine13ResolveResultD1Ev(%"class.CFXJSE_Engine::ResolveResult"* %56) #11
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* %52) #11
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* %51) #11
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %44) #11
  br label %251

251:                                              ; preds = %38, %249
  %252 = phi i1 [ %250, %249 ], [ true, %38 ]
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #11
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  ret i1 %252
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN23CFXJSE_ResolveProcessor15ResolveAsteriskER22CFXJSE_ResolveNodeData(%class.CFXJSE_ResolveProcessor* nocapture readnone, %class.CFXJSE_ResolveNodeData* dereferenceable(96)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.130", align 8
  %4 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %1, i64 0, i32 1, i32 0
  %5 = load %class.CXFA_Object*, %class.CXFA_Object** %4, align 8
  %6 = tail call %class.CXFA_Node* @_Z6ToNodeP11CXFA_Object(%class.CXFA_Object* %5) #11
  %7 = bitcast %"class.std::__1::vector.130"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.std::__1::vector.130", %"class.std::__1::vector.130"* %3, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector.130", %"class.std::__1::vector.130"* %3, i64 0, i32 0, i32 1
  %10 = bitcast %"class.std::__1::vector.130"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  call void @_ZN9CXFA_Node21GetNodeListWithFilterEh(%"class.std::__1::vector.130"* nonnull sret %3, %class.CXFA_Node* %6, i8 zeroext 3) #11
  %11 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %1, i64 0, i32 7, i32 2
  %12 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %1, i64 0, i32 7, i32 2, i32 0, i32 1
  %13 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %12, align 8
  %14 = load %class.CXFA_Node**, %class.CXFA_Node*** %8, align 8
  %15 = load %class.CXFA_Node**, %class.CXFA_Node*** %9, align 8
  %16 = call %"class.cppgc::internal::BasicMember.70"* @_ZNSt3__16vectorIN5cppgc8internal11BasicMemberI11CXFA_ObjectNS2_15StrongMemberTagENS2_26DijkstraWriteBarrierPolicyENS2_22DisabledCheckingPolicyEEENS_9allocatorIS8_EEE6insertINS_11__wrap_iterIPP9CXFA_NodeEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS8_NS_15iterator_traitsISJ_E9referenceEEE5valueENSD_IPS8_EEE4typeENSD_IPKS8_EESJ_SJ_(%"class.std::__1::vector.90"* %11, %"class.cppgc::internal::BasicMember.70"* %13, %class.CXFA_Node** %14, %class.CXFA_Node** %15)
  %17 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %11, i64 0, i32 0, i32 0
  %18 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %17, align 8
  %19 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %12, align 8
  %20 = icmp ne %"class.cppgc::internal::BasicMember.70"* %18, %19
  %21 = load %class.CXFA_Node**, %class.CXFA_Node*** %8, align 8
  %22 = icmp eq %class.CXFA_Node** %21, null
  br i1 %22, label %27, label %23

23:                                               ; preds = %2
  %24 = ptrtoint %class.CXFA_Node** %21 to i64
  %25 = bitcast %class.CXFA_Node*** %9 to i64*
  store i64 %24, i64* %25, align 8
  %26 = bitcast %class.CXFA_Node** %21 to i8*
  call void @_ZdlPv(i8* %26) #10
  br label %27

27:                                               ; preds = %2, %23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #11
  ret i1 %20
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %class.CXFA_Object* @_ZN13CXFA_Document12GetXFAObjectE12XFA_HashCode(%class.CXFA_Document*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23CFXJSE_ResolveProcessor15FilterConditionEPN2v87IsolateEN5fxcrt10WideStringEP22CFXJSE_ResolveNodeData(%class.CFXJSE_ResolveProcessor* nocapture readonly, %"class.v8::Isolate"*, %"class.fxcrt::WideString"*, %class.CFXJSE_ResolveNodeData* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.fxcrt::WideString", align 8
  %6 = alloca %"class.fxcrt::WideString", align 8
  %7 = alloca %"class.fxcrt::WideString", align 8
  %8 = alloca %"class.fxcrt::WideString", align 8
  %9 = alloca %"class.fxcrt::StringViewTemplate.97", align 8
  %10 = alloca %"class.fxcrt::WideString", align 8
  %11 = alloca %"class.fxcrt::WideString", align 8
  %12 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %3, i64 0, i32 0, i32 0
  %13 = load %class.CFXJSE_Engine*, %class.CFXJSE_Engine** %12, align 8
  %14 = getelementptr inbounds %class.CFXJSE_Engine, %class.CFXJSE_Engine* %13, i64 0, i32 10, i32 0, i32 0
  %15 = load %"class.cppgc::internal::BasicPersistent"*, %"class.cppgc::internal::BasicPersistent"** %14, align 8
  %16 = getelementptr inbounds %class.CFXJSE_Engine, %class.CFXJSE_Engine* %13, i64 0, i32 10, i32 0, i32 1
  %17 = load %"class.cppgc::internal::BasicPersistent"*, %"class.cppgc::internal::BasicPersistent"** %16, align 8
  %18 = icmp eq %"class.cppgc::internal::BasicPersistent"* %15, %17
  br i1 %18, label %36, label %19

19:                                               ; preds = %4
  %20 = getelementptr inbounds %"class.cppgc::internal::BasicPersistent", %"class.cppgc::internal::BasicPersistent"* %17, i64 -1
  %21 = bitcast %"class.cppgc::internal::BasicPersistent"* %20 to %class.CXFA_Node**
  %22 = load %class.CXFA_Node*, %class.CXFA_Node** %21, align 8
  %23 = tail call zeroext i1 @_ZNK9CXFA_Node10IsPropertyEv(%class.CXFA_Node* %22) #11
  %24 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %22, i64 0, i32 13
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  %27 = xor i1 %23, true
  %28 = or i1 %26, %27
  br i1 %28, label %33, label %29

29:                                               ; preds = %19
  %30 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %22, i64 0, i32 0, i32 2
  %31 = load i16, i16* %30, align 4
  %32 = icmp ne i16 %31, 158
  br label %33

33:                                               ; preds = %19, %29
  %34 = phi i1 [ %26, %19 ], [ %32, %29 ]
  %35 = tail call i64 @_ZN9CXFA_Node8GetIndexEbb(%class.CXFA_Node* %22, i1 zeroext %23, i1 zeroext %34) #11
  br label %36

36:                                               ; preds = %33, %4
  %37 = phi i64 [ 0, %4 ], [ %35, %33 ]
  %38 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %3, i64 0, i32 7, i32 2
  %39 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %3, i64 0, i32 7, i32 2, i32 0, i32 1
  %40 = bitcast %"class.cppgc::internal::BasicMember.70"** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.std::__1::vector.90"* %38 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = sub i64 %41, %43
  %45 = ashr exact i64 %44, 3
  tail call void @_ZN5fxcrt10WideString4TrimEv(%"class.fxcrt::WideString"* %2) #11
  %46 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %46, align 8
  %48 = icmp eq %"class.fxcrt::StringDataTemplate"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %36
  %50 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %47, i64 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = trunc i64 %51 to i32
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %142

54:                                               ; preds = %36, %49
  %55 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %3, i64 0, i32 6
  %56 = load i16, i16* %55, align 8
  %57 = zext i16 %56 to i32
  %58 = and i32 %57, 256
  %59 = icmp ne i32 %58, 0
  %60 = icmp eq i64 %44, 8
  %61 = or i1 %60, %59
  br i1 %61, label %308, label %62

62:                                               ; preds = %54
  %63 = icmp ult i64 %37, %45
  br i1 %63, label %123, label %64

64:                                               ; preds = %62
  %65 = and i32 %57, 1024
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %121, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %3, i64 0, i32 1, i32 0
  %69 = load %class.CXFA_Object*, %class.CXFA_Object** %68, align 8
  %70 = tail call %class.CXFA_Node* @_Z6ToNodeP11CXFA_Object(%class.CXFA_Object* %69) #11
  %71 = getelementptr inbounds %class.CFXJSE_ResolveProcessor, %class.CFXJSE_ResolveProcessor* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %72 = load %class.CFXJSE_NodeHelper*, %class.CFXJSE_NodeHelper** %71, align 8
  %73 = getelementptr inbounds %class.CFXJSE_NodeHelper, %class.CFXJSE_NodeHelper* %72, i64 0, i32 4
  %74 = bitcast %"class.cppgc::internal::BasicPersistent"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = icmp ult i64 %75, 2
  %77 = inttoptr i64 %75 to i8*
  br i1 %76, label %94, label %78

78:                                               ; preds = %67
  %79 = icmp ult %class.CXFA_Node* %70, inttoptr (i64 2 to %class.CXFA_Node*)
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = bitcast %"class.cppgc::internal::BasicPersistent"* %73 to %class.CXFA_Node**
  store %class.CXFA_Node* %70, %class.CXFA_Node** %81, align 8
  br label %116

82:                                               ; preds = %78
  %83 = tail call dereferenceable(40) %"class.cppgc::internal::PersistentRegion"* @_ZN5cppgc8internal22StrongPersistentPolicy19GetPersistentRegionEPKv(i8* %77) #11
  %84 = getelementptr inbounds %class.CFXJSE_NodeHelper, %class.CFXJSE_NodeHelper* %72, i64 0, i32 4, i32 0, i32 1
  %85 = load %"class.cppgc::internal::PersistentNode"*, %"class.cppgc::internal::PersistentNode"** %84, align 8
  %86 = getelementptr inbounds %"class.cppgc::internal::PersistentRegion", %"class.cppgc::internal::PersistentRegion"* %83, i64 0, i32 1
  %87 = bitcast %"class.cppgc::internal::PersistentNode"** %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = bitcast %"class.cppgc::internal::PersistentNode"* %85 to i64*
  store i64 %88, i64* %89, align 8
  %90 = getelementptr inbounds %"class.cppgc::internal::PersistentNode", %"class.cppgc::internal::PersistentNode"* %85, i64 0, i32 1
  store void (%"class.cppgc::Visitor"*, i8*)* null, void (%"class.cppgc::Visitor"*, i8*)** %90, align 8
  store %"class.cppgc::internal::PersistentNode"* %85, %"class.cppgc::internal::PersistentNode"** %86, align 8
  %91 = getelementptr inbounds %"class.cppgc::internal::PersistentRegion", %"class.cppgc::internal::PersistentRegion"* %83, i64 0, i32 2
  %92 = load i64, i64* %91, align 8
  %93 = add i64 %92, -1
  store i64 %93, i64* %91, align 8
  store %"class.cppgc::internal::PersistentNode"* null, %"class.cppgc::internal::PersistentNode"** %84, align 8
  br label %94

94:                                               ; preds = %82, %67
  %95 = bitcast %"class.cppgc::internal::BasicPersistent"* %73 to %class.CXFA_Node**
  store %class.CXFA_Node* %70, %class.CXFA_Node** %95, align 8
  %96 = icmp ult %class.CXFA_Node* %70, inttoptr (i64 2 to %class.CXFA_Node*)
  br i1 %96, label %116, label %97

97:                                               ; preds = %94
  %98 = bitcast %class.CXFA_Node* %70 to i8*
  %99 = tail call dereferenceable(40) %"class.cppgc::internal::PersistentRegion"* @_ZN5cppgc8internal22StrongPersistentPolicy19GetPersistentRegionEPKv(i8* %98) #11
  %100 = getelementptr inbounds %"class.cppgc::internal::PersistentRegion", %"class.cppgc::internal::PersistentRegion"* %99, i64 0, i32 1
  %101 = load %"class.cppgc::internal::PersistentNode"*, %"class.cppgc::internal::PersistentNode"** %100, align 8
  %102 = icmp eq %"class.cppgc::internal::PersistentNode"* %101, null
  br i1 %102, label %103, label %105

103:                                              ; preds = %97
  tail call void @_ZN5cppgc8internal16PersistentRegion15EnsureNodeSlotsEv(%"class.cppgc::internal::PersistentRegion"* %99) #11
  %104 = load %"class.cppgc::internal::PersistentNode"*, %"class.cppgc::internal::PersistentNode"** %100, align 8
  br label %105

105:                                              ; preds = %103, %97
  %106 = phi %"class.cppgc::internal::PersistentNode"* [ %101, %97 ], [ %104, %103 ]
  %107 = bitcast %"class.cppgc::internal::PersistentNode"* %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.cppgc::internal::PersistentNode"** %100 to i64*
  store i64 %108, i64* %109, align 8
  %110 = bitcast %"class.cppgc::internal::PersistentNode"* %106 to %"class.cppgc::internal::BasicPersistent"**
  store %"class.cppgc::internal::BasicPersistent"* %73, %"class.cppgc::internal::BasicPersistent"** %110, align 8
  %111 = getelementptr inbounds %"class.cppgc::internal::PersistentNode", %"class.cppgc::internal::PersistentNode"* %106, i64 0, i32 1
  store void (%"class.cppgc::Visitor"*, i8*)* @_ZN5cppgc8internal15BasicPersistentI9CXFA_NodeNS0_22StrongPersistentPolicyENS0_20IgnoreLocationPolicyENS0_22DisabledCheckingPolicyEE5TraceEPNS_7VisitorEPKv, void (%"class.cppgc::Visitor"*, i8*)** %111, align 8
  %112 = getelementptr inbounds %"class.cppgc::internal::PersistentRegion", %"class.cppgc::internal::PersistentRegion"* %99, i64 0, i32 2
  %113 = load i64, i64* %112, align 8
  %114 = add i64 %113, 1
  store i64 %114, i64* %112, align 8
  %115 = getelementptr inbounds %class.CFXJSE_NodeHelper, %class.CFXJSE_NodeHelper* %72, i64 0, i32 4, i32 0, i32 1
  store %"class.cppgc::internal::PersistentNode"* %106, %"class.cppgc::internal::PersistentNode"** %115, align 8
  br label %116

116:                                              ; preds = %80, %94, %105
  %117 = add i64 %37, 1
  %118 = sub i64 %117, %45
  %119 = load %class.CFXJSE_NodeHelper*, %class.CFXJSE_NodeHelper** %71, align 8
  %120 = getelementptr inbounds %class.CFXJSE_NodeHelper, %class.CFXJSE_NodeHelper* %119, i64 0, i32 2
  store i64 %118, i64* %120, align 8
  br label %121

121:                                              ; preds = %64, %116
  %122 = load i64, i64* %42, align 8
  store i64 %122, i64* %40, align 8
  br label %308

123:                                              ; preds = %62
  %124 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %38, i64 0, i32 0, i32 0
  %125 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %124, align 8
  %126 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %125, i64 %37
  %127 = tail call i8* @_Znwm(i64 8) #10
  %128 = getelementptr inbounds i8, i8* %127, i64 8
  %129 = bitcast %"class.cppgc::internal::BasicMember.70"* %126 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast i8* %127 to i64*
  store i64 %130, i64* %131, align 8
  %132 = ptrtoint i8* %127 to i64
  %133 = ptrtoint i8* %128 to i64
  %134 = icmp eq %"class.cppgc::internal::BasicMember.70"* %125, null
  br i1 %134, label %139, label %135

135:                                              ; preds = %123
  %136 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %125 to i64
  store i64 %136, i64* %40, align 8
  %137 = bitcast %"class.cppgc::internal::BasicMember.70"* %125 to i8*
  tail call void @_ZdlPv(i8* %137) #10
  %138 = bitcast %"class.std::__1::vector.90"* %38 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %138, i8 0, i64 24, i1 false) #11
  br label %139

139:                                              ; preds = %135, %123
  store i64 %132, i64* %42, align 8
  store i64 %133, i64* %40, align 8
  %140 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %3, i64 0, i32 7, i32 2, i32 0, i32 2, i32 0, i32 0
  %141 = bitcast %"class.cppgc::internal::BasicMember.70"** %140 to i64*
  store i64 %133, i64* %141, align 8
  br label %308

142:                                              ; preds = %49
  %143 = icmp eq i64 %51, 0
  br i1 %143, label %144, label %145, !prof !57

144:                                              ; preds = %142
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #11, !srcloc !58
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #11, !srcloc !59
  unreachable

145:                                              ; preds = %142
  %146 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %47, i64 0, i32 3, i64 0
  %147 = load i32, i32* %146, align 4
  switch i32 %147, label %308 [
    i32 91, label %148
    i32 46, label %149
  ]

148:                                              ; preds = %145
  call void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"* nonnull %10, %"class.fxcrt::WideString"* dereferenceable(8) %2) #11
  call void @_ZN23CFXJSE_ResolveProcessor14ConditionArrayEmN5fxcrt10WideStringEmP22CFXJSE_ResolveNodeData(%class.CFXJSE_ResolveProcessor* %0, i64 %37, %"class.fxcrt::WideString"* nonnull %10, i64 %45, %class.CFXJSE_ResolveNodeData* %3)
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %10) #11
  br label %308

149:                                              ; preds = %145
  %150 = icmp sgt i32 %52, 1
  br i1 %150, label %151, label %308

151:                                              ; preds = %149
  %152 = icmp ugt i64 %51, 1
  br i1 %152, label %154, label %153, !prof !60

153:                                              ; preds = %151
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #11, !srcloc !58
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #11, !srcloc !59
  unreachable

154:                                              ; preds = %151
  %155 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %47, i64 0, i32 3, i64 1
  %156 = load i32, i32* %155, align 4
  switch i32 %156, label %308 [
    i32 91, label %157
    i32 40, label %157
  ]

157:                                              ; preds = %154, %154
  call void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"* nonnull %11, %"class.fxcrt::WideString"* dereferenceable(8) %2) #11
  %158 = bitcast %"class.fxcrt::StringViewTemplate.97"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %158)
  %159 = bitcast %"class.fxcrt::WideString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %159) #11
  %160 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %160, align 8
  call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* nonnull %5) #11
  %161 = bitcast %"class.fxcrt::WideString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %161) #11
  call void @_ZNK5fxcrt10WideString5FirstEm(%"class.fxcrt::WideString"* nonnull sret %6, %"class.fxcrt::WideString"* nonnull %11, i64 2) #11
  %162 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %163 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %162, align 8, !noalias !61
  %164 = icmp eq %"class.fxcrt::StringDataTemplate"* %163, null
  %165 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %163, i64 0, i32 3
  %166 = select i1 %164, [1 x i32]* @.str.2, [1 x i32]* %165
  br i1 %164, label %194, label %167

167:                                              ; preds = %157
  %168 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %163, i64 0, i32 1
  %169 = load i64, i64* %168, align 8, !noalias !61
  %170 = icmp eq i64 %169, 2
  br i1 %170, label %171, label %194

171:                                              ; preds = %167
  %172 = getelementptr inbounds [1 x i32], [1 x i32]* %166, i64 0, i64 0
  %173 = load i32, i32* %172, align 4
  %174 = add i32 %173, -1
  %175 = icmp ult i32 %174, 127
  %176 = icmp eq i32 %173, 46
  %177 = and i1 %175, %176
  br i1 %177, label %178, label %194

178:                                              ; preds = %171
  %179 = getelementptr inbounds [1 x i32], [1 x i32]* %166, i64 0, i64 1
  %180 = load i32, i32* %179, align 4
  %181 = add i32 %180, -1
  %182 = icmp ult i32 %181, 127
  %183 = icmp eq i32 %180, 91
  %184 = and i1 %182, %183
  br i1 %184, label %313, label %194

185:                                              ; preds = %313
  %186 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %315, i64 0, i32 1
  %187 = load i64, i64* %186, align 8
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %194, label %189

189:                                              ; preds = %185
  %190 = add i64 %187, -1
  %191 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %315, i64 0, i32 3, i64 %190
  %192 = load i32, i32* %191, align 4
  %193 = icmp eq i32 %192, 93
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %161) #11
  br i1 %193, label %230, label %195

194:                                              ; preds = %313, %185, %157, %167, %171, %178
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %161) #11
  br label %195

195:                                              ; preds = %194, %189
  %196 = bitcast %"class.fxcrt::WideString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %196) #11
  call void @_ZNK5fxcrt10WideString5FirstEm(%"class.fxcrt::WideString"* nonnull sret %7, %"class.fxcrt::WideString"* nonnull %11, i64 2) #11
  %197 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %198 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %197, align 8, !noalias !64
  %199 = icmp eq %"class.fxcrt::StringDataTemplate"* %198, null
  %200 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %198, i64 0, i32 3
  %201 = select i1 %199, [1 x i32]* @.str.2, [1 x i32]* %200
  br i1 %199, label %229, label %202

202:                                              ; preds = %195
  %203 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %198, i64 0, i32 1
  %204 = load i64, i64* %203, align 8, !noalias !64
  %205 = icmp eq i64 %204, 2
  br i1 %205, label %206, label %229

206:                                              ; preds = %202
  %207 = getelementptr inbounds [1 x i32], [1 x i32]* %201, i64 0, i64 0
  %208 = load i32, i32* %207, align 4
  %209 = add i32 %208, -1
  %210 = icmp ult i32 %209, 127
  %211 = icmp eq i32 %208, 46
  %212 = and i1 %210, %211
  br i1 %212, label %213, label %229

213:                                              ; preds = %206
  %214 = getelementptr inbounds [1 x i32], [1 x i32]* %201, i64 0, i64 1
  %215 = load i32, i32* %214, align 4
  %216 = add i32 %215, -1
  %217 = icmp ult i32 %216, 127
  %218 = icmp eq i32 %215, 40
  %219 = and i1 %217, %218
  br i1 %219, label %309, label %229

220:                                              ; preds = %309
  %221 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %311, i64 0, i32 1
  %222 = load i64, i64* %221, align 8
  %223 = icmp eq i64 %222, 0
  br i1 %223, label %305, label %224

224:                                              ; preds = %220
  %225 = add i64 %222, -1
  %226 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %311, i64 0, i32 3, i64 %225
  %227 = load i32, i32* %226, align 4
  %228 = icmp eq i32 %227, 41
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %196) #11
  br i1 %228, label %230, label %307

229:                                              ; preds = %213, %206, %202, %195
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %196) #11
  br label %307

230:                                              ; preds = %224, %189
  %231 = phi i32 [ 0, %189 ], [ 1, %224 ]
  %232 = bitcast %"class.fxcrt::WideString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %232) #11
  %233 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %234 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %233, align 8
  %235 = icmp eq %"class.fxcrt::StringDataTemplate"* %234, null
  br i1 %235, label %240, label %236

236:                                              ; preds = %230
  %237 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %234, i64 0, i32 1
  %238 = load i64, i64* %237, align 8
  %239 = add i64 %238, -3
  br label %240

240:                                              ; preds = %236, %230
  %241 = phi i64 [ %239, %236 ], [ -3, %230 ]
  call void @_ZNK5fxcrt10WideString6SubstrEmm(%"class.fxcrt::WideString"* nonnull sret %8, %"class.fxcrt::WideString"* nonnull %11, i64 2, i64 %241) #11
  %242 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* nonnull %5, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %8) #11
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %232) #11
  %243 = icmp eq i64 %44, 0
  br i1 %243, label %307, label %244

244:                                              ; preds = %240
  %245 = getelementptr inbounds %"class.fxcrt::StringViewTemplate.97", %"class.fxcrt::StringViewTemplate.97"* %9, i64 0, i32 0, i32 0, i32 0
  %246 = getelementptr inbounds %"class.fxcrt::StringViewTemplate.97", %"class.fxcrt::StringViewTemplate.97"* %9, i64 0, i32 0, i32 1
  %247 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %3, i64 0, i32 7, i32 2, i32 0, i32 0
  br label %248

248:                                              ; preds = %303, %244
  %249 = phi i64 [ %45, %244 ], [ %263, %303 ]
  %250 = call i8* @_Znwm(i64 8) #10
  %251 = bitcast i8* %250 to %class.CFXJSE_Value*
  call void @_ZN12CFXJSE_ValueC1Ev(%class.CFXJSE_Value* nonnull %251) #11
  %252 = load %class.CFXJSE_Engine*, %class.CFXJSE_Engine** %12, align 8
  %253 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %160, align 8, !noalias !67
  %254 = icmp eq %"class.fxcrt::StringDataTemplate"* %253, null
  %255 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %253, i64 0, i32 3
  %256 = select i1 %254, [1 x i32]* @.str.2, [1 x i32]* %255
  %257 = getelementptr inbounds [1 x i32], [1 x i32]* %256, i64 0, i64 0
  br i1 %254, label %261, label %258

258:                                              ; preds = %248
  %259 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %253, i64 0, i32 1
  %260 = load i64, i64* %259, align 8, !noalias !67
  br label %261

261:                                              ; preds = %258, %248
  %262 = phi i64 [ %260, %258 ], [ 0, %248 ]
  store i32* %257, i32** %245, align 8, !alias.scope !67
  store i64 %262, i64* %246, align 8, !alias.scope !67
  %263 = add i64 %249, -1
  %264 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %247, align 8
  %265 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %264, i64 %263
  %266 = bitcast %"class.cppgc::internal::BasicMember.70"* %265 to %class.CXFA_Object**
  %267 = load %class.CXFA_Object*, %class.CXFA_Object** %266, align 8
  %268 = call zeroext i1 @_ZN13CFXJSE_Engine9RunScriptEN11CXFA_Script4TypeEN5fxcrt18StringViewTemplateIwEEP12CFXJSE_ValueP11CXFA_Object(%class.CFXJSE_Engine* %252, i32 %231, %"class.fxcrt::StringViewTemplate.97"* nonnull %9, %class.CFXJSE_Value* nonnull %251, %class.CXFA_Object* %267) #11
  br i1 %268, label %269, label %271

269:                                              ; preds = %261
  %270 = call zeroext i1 @_ZNK12CFXJSE_Value9ToBooleanEPN2v87IsolateE(%class.CFXJSE_Value* nonnull %251, %"class.v8::Isolate"* %1) #11
  br i1 %270, label %303, label %271

271:                                              ; preds = %269, %261
  %272 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %247, align 8
  %273 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %272, i64 -1
  %274 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %273, i64 %249
  %275 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %274, i64 1
  %276 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %39, align 8
  %277 = icmp eq %"class.cppgc::internal::BasicMember.70"* %275, %276
  br i1 %277, label %301, label %278

278:                                              ; preds = %271, %296
  %279 = phi %"class.cppgc::internal::BasicMember.70"* [ %299, %296 ], [ %274, %271 ]
  %280 = phi %"class.cppgc::internal::BasicMember.70"* [ %298, %296 ], [ %275, %271 ]
  %281 = bitcast %"class.cppgc::internal::BasicMember.70"* %280 to %class.CXFA_Object**
  %282 = load %class.CXFA_Object*, %class.CXFA_Object** %281, align 8
  %283 = ptrtoint %class.CXFA_Object* %282 to i64
  %284 = bitcast %"class.cppgc::internal::BasicMember.70"* %279 to i64*
  store atomic i64 %283, i64* %284 monotonic, align 8
  %285 = bitcast %class.CXFA_Object* %282 to i8*
  %286 = and i64 %283, -4294967296
  %287 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %279 to i64
  %288 = sub i64 %287, %286
  %289 = icmp ult i64 %288, 4294967297
  br i1 %289, label %290, label %296

290:                                              ; preds = %278
  %291 = inttoptr i64 %286 to %"struct.cppgc::internal::CagedHeapLocalData"*
  %292 = getelementptr inbounds %"struct.cppgc::internal::CagedHeapLocalData", %"struct.cppgc::internal::CagedHeapLocalData"* %291, i64 0, i32 0
  %293 = load i8, i8* %292, align 536870912, !range !13
  %294 = icmp eq i8 %293, 1
  br i1 %294, label %295, label %296, !prof !57

295:                                              ; preds = %290
  call void @_ZN5cppgc8internal12WriteBarrier26DijkstraMarkingBarrierSlowEPKv(i8* %285) #11
  br label %296

296:                                              ; preds = %295, %290, %278
  %297 = bitcast %"class.cppgc::internal::BasicMember.70"* %280 to i64*
  store atomic i64 0, i64* %297 monotonic, align 8
  %298 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %280, i64 1
  %299 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %279, i64 1
  %300 = icmp eq %"class.cppgc::internal::BasicMember.70"* %298, %276
  br i1 %300, label %301, label %278

301:                                              ; preds = %296, %271
  %302 = phi %"class.cppgc::internal::BasicMember.70"* [ %274, %271 ], [ %299, %296 ]
  store %"class.cppgc::internal::BasicMember.70"* %302, %"class.cppgc::internal::BasicMember.70"** %39, align 8
  br label %303

303:                                              ; preds = %301, %269
  call void @_ZN12CFXJSE_ValueD1Ev(%class.CFXJSE_Value* nonnull %251) #11
  call void @_ZdlPv(i8* nonnull %250) #10
  %304 = icmp eq i64 %263, 0
  br i1 %304, label %307, label %248

305:                                              ; preds = %220
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %196) #11
  br label %307

306:                                              ; preds = %309
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %196) #11
  br label %307

307:                                              ; preds = %303, %224, %229, %240, %305, %306
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %159) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %158)
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %11) #11
  br label %308

308:                                              ; preds = %154, %54, %148, %307, %149, %145, %139, %121
  ret void

309:                                              ; preds = %213
  %310 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %311 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %310, align 8
  %312 = icmp eq %"class.fxcrt::StringDataTemplate"* %311, null
  br i1 %312, label %306, label %220

313:                                              ; preds = %178
  %314 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %315 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %314, align 8
  %316 = icmp eq %"class.fxcrt::StringDataTemplate"* %315, null
  br i1 %316, label %194, label %185
}

declare void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"*, %"class.fxcrt::WideString"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN23CFXJSE_ResolveProcessor13ResolveNormalEPN2v87IsolateER22CFXJSE_ResolveNodeData(%class.CFXJSE_ResolveProcessor* readonly, %"class.v8::Isolate"*, %class.CFXJSE_ResolveNodeData* dereferenceable(96)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.CFXJSE_ResolveNodeData, align 8
  %5 = alloca %"class.std::__1::vector.130", align 8
  %6 = alloca %"class.std::__1::vector.130", align 8
  %7 = alloca %"class.fxcrt::WideString", align 8
  %8 = alloca %"class.fxcrt::WideString", align 8
  %9 = alloca %"class.fxcrt::WideString", align 8
  %10 = alloca %"class.std::__1::vector.130", align 8
  %11 = alloca %"class.std::__1::vector.90", align 8
  %12 = alloca %"class.fxcrt::WideString", align 8
  %13 = alloca %"class.fxcrt::StringViewTemplate.97", align 8
  %14 = alloca %"class.fxcrt::WideString", align 8
  %15 = alloca %"class.fxcrt::StringViewTemplate.97", align 8
  %16 = alloca %"class.fxcrt::WideString", align 8
  %17 = alloca %"class.fxcrt::WideString", align 8
  %18 = alloca %"class.std::__1::vector.130", align 8
  %19 = alloca %"class.std::__1::vector.90", align 8
  %20 = alloca %"class.fxcrt::WideString", align 8
  %21 = alloca %"class.cppgc::internal::BasicPersistent", align 8
  %22 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 5
  %23 = load i32, i32* %22, align 4
  %24 = icmp sgt i32 %23, 32
  br i1 %24, label %2764, label %25

25:                                               ; preds = %3
  %26 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 1, i32 0
  %27 = load %class.CXFA_Object*, %class.CXFA_Object** %26, align 8
  %28 = getelementptr inbounds %class.CXFA_Object, %class.CXFA_Object* %27, i64 0, i32 1
  %29 = load i32, i32* %28, align 8
  switch i32 %29, label %2764 [
    i32 2, label %30
    i32 3, label %30
    i32 4, label %30
    i32 5, label %30
    i32 6, label %30
    i32 8, label %30
    i32 9, label %30
  ]

30:                                               ; preds = %25, %25, %25, %25, %25, %25, %25
  %31 = tail call %class.CXFA_Node* @_ZN11CXFA_Object6AsNodeEv(%class.CXFA_Object* %27) #11
  %32 = ptrtoint %class.CXFA_Node* %31 to i64
  %33 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7
  %34 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2
  %35 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2, i32 0, i32 1
  %36 = bitcast %"class.cppgc::internal::BasicMember.70"** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.std::__1::vector.90"* %34 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = sub i64 %37, %39
  %41 = ashr exact i64 %40, 3
  %42 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 6
  %43 = load i16, i16* %42, align 8
  %44 = zext i16 %43 to i32
  %45 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 2
  %46 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 4
  %47 = load i32, i32* %46, align 8
  %48 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 3
  %49 = bitcast %class.CFXJSE_ResolveNodeData* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %49) #11
  %50 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %4, i64 0, i32 2
  %51 = bitcast %"class.fxcrt::WideString"* %50 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 80, i1 false)
  %52 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 0, i32 0
  %53 = bitcast %class.CFXJSE_ResolveNodeData* %2 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %class.CFXJSE_ResolveNodeData* %4 to i64*
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %4, i64 0, i32 1, i32 0
  store %class.CXFA_Object* null, %class.CXFA_Object** %56, align 8
  %57 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %4, i64 0, i32 2
  call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* %57) #11
  %58 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %4, i64 0, i32 3
  call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* %58) #11
  %59 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %4, i64 0, i32 4
  store i32 0, i32* %59, align 8
  %60 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %4, i64 0, i32 5
  store i32 0, i32* %60, align 4
  %61 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %4, i64 0, i32 6
  store i16 1, i16* %61, align 8
  %62 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %4, i64 0, i32 7
  call void @_ZN13CFXJSE_Engine13ResolveResultC1Ev(%"class.CFXJSE_Engine::ResolveResult"* %62) #11
  %63 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSERKS0_(%"class.fxcrt::WideString"* %57, %"class.fxcrt::WideString"* dereferenceable(8) %45) #11
  %64 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSERKS0_(%"class.fxcrt::WideString"* %58, %"class.fxcrt::WideString"* dereferenceable(8) %48) #11
  %65 = load i32, i32* %22, align 4
  %66 = add nsw i32 %65, 1
  store i32 %66, i32* %60, align 4
  store i32 %47, i32* %59, align 8
  %67 = bitcast %"class.std::__1::vector.130"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #11
  %68 = getelementptr inbounds %"class.std::__1::vector.130", %"class.std::__1::vector.130"* %5, i64 0, i32 0, i32 0
  %69 = getelementptr inbounds %"class.std::__1::vector.130", %"class.std::__1::vector.130"* %5, i64 0, i32 0, i32 1
  %70 = getelementptr inbounds %"class.std::__1::vector.130", %"class.std::__1::vector.130"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 0, i64 24, i1 false) #11
  %71 = bitcast %"class.std::__1::vector.130"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #11
  %72 = getelementptr inbounds %"class.std::__1::vector.130", %"class.std::__1::vector.130"* %6, i64 0, i32 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::vector.130", %"class.std::__1::vector.130"* %6, i64 0, i32 0, i32 1
  %74 = getelementptr inbounds %"class.std::__1::vector.130", %"class.std::__1::vector.130"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 24, i1 false) #11
  %75 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %31, i64 0, i32 1, i32 1, i32 2
  %76 = bitcast %"class.cppgc::internal::BasicMember.30"* %75 to %class.CXFA_Node**
  %77 = load %class.CXFA_Node*, %class.CXFA_Node** %76, align 8
  %78 = icmp eq %class.CXFA_Node* %77, null
  br i1 %78, label %79, label %82

79:                                               ; preds = %30
  %80 = and i32 %44, 8
  %81 = icmp ne i32 %80, 0
  br label %381

82:                                               ; preds = %30
  %83 = bitcast %class.CXFA_Node*** %69 to i64*
  %84 = bitcast %"class.std::__1::vector.130"* %5 to i64*
  %85 = bitcast %class.CXFA_Node*** %70 to i64*
  %86 = bitcast %class.CXFA_Node*** %73 to i64*
  %87 = bitcast %"class.std::__1::vector.130"* %6 to i64*
  %88 = bitcast %class.CXFA_Node*** %74 to i64*
  br label %94

89:                                               ; preds = %210
  %90 = and i32 %44, 8
  %91 = icmp ne i32 %90, 0
  %92 = icmp ne i64 %212, 0
  %93 = and i1 %91, %92
  br i1 %93, label %217, label %381

94:                                               ; preds = %82, %210
  %95 = phi %class.CXFA_Node* [ %77, %82 ], [ %215, %210 ]
  %96 = phi i64 [ 0, %82 ], [ %212, %210 ]
  %97 = phi i64 [ 0, %82 ], [ %211, %210 ]
  %98 = ptrtoint %class.CXFA_Node* %95 to i64
  %99 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %95, i64 0, i32 0, i32 2
  %100 = load i16, i16* %99, align 4
  switch i16 %100, label %101 [
    i16 285, label %210
    i16 158, label %209
  ]

101:                                              ; preds = %94
  %102 = call zeroext i1 @_ZNK9CXFA_Node11HasPropertyE11XFA_Element(%class.CXFA_Node* %31, i16 signext %100) #11
  br i1 %102, label %103, label %156

103:                                              ; preds = %101
  %104 = load %class.CXFA_Node**, %class.CXFA_Node*** %73, align 8
  %105 = load %class.CXFA_Node**, %class.CXFA_Node*** %74, align 8
  %106 = icmp eq %class.CXFA_Node** %104, %105
  %107 = ptrtoint %class.CXFA_Node** %105 to i64
  br i1 %106, label %112, label %108

108:                                              ; preds = %103
  %109 = bitcast %class.CXFA_Node** %104 to i64*
  store i64 %98, i64* %109, align 8
  %110 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %104, i64 1
  %111 = ptrtoint %class.CXFA_Node** %110 to i64
  store i64 %111, i64* %86, align 8
  br label %210

112:                                              ; preds = %103
  %113 = ptrtoint %class.CXFA_Node** %104 to i64
  %114 = load i64, i64* %87, align 8
  %115 = sub i64 %113, %114
  %116 = ashr exact i64 %115, 3
  %117 = add nsw i64 %116, 1
  %118 = icmp ugt i64 %117, 2305843009213693951
  br i1 %118, label %119, label %121

119:                                              ; preds = %112
  %120 = bitcast %"class.std::__1::vector.130"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %120) #12
  unreachable

121:                                              ; preds = %112
  %122 = sub i64 %107, %114
  %123 = ashr exact i64 %122, 3
  %124 = icmp ult i64 %123, 1152921504606846975
  br i1 %124, label %125, label %133

125:                                              ; preds = %121
  %126 = ashr exact i64 %122, 2
  %127 = icmp ult i64 %126, %117
  %128 = select i1 %127, i64 %117, i64 %126
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %138, label %130

130:                                              ; preds = %125
  %131 = icmp ugt i64 %128, 2305843009213693951
  br i1 %131, label %132, label %133

132:                                              ; preds = %130
  call void @abort() #12
  unreachable

133:                                              ; preds = %130, %121
  %134 = phi i64 [ %128, %130 ], [ 2305843009213693951, %121 ]
  %135 = shl i64 %134, 3
  %136 = call i8* @_Znwm(i64 %135) #10
  %137 = bitcast i8* %136 to %class.CXFA_Node**
  br label %138

138:                                              ; preds = %133, %125
  %139 = phi i64 [ %134, %133 ], [ 0, %125 ]
  %140 = phi i8* [ %136, %133 ], [ null, %125 ]
  %141 = phi %class.CXFA_Node** [ %137, %133 ], [ null, %125 ]
  %142 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %141, i64 %116
  %143 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %141, i64 %139
  %144 = ptrtoint %class.CXFA_Node** %143 to i64
  %145 = bitcast %class.CXFA_Node** %142 to i64*
  store i64 %98, i64* %145, align 8
  %146 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %142, i64 1
  %147 = ptrtoint %class.CXFA_Node** %146 to i64
  %148 = ptrtoint %class.CXFA_Node** %141 to i64
  %149 = icmp sgt i64 %115, 0
  br i1 %149, label %150, label %152

150:                                              ; preds = %138
  %151 = inttoptr i64 %114 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %140, i8* align 8 %151, i64 %115, i1 false) #11
  br label %152

152:                                              ; preds = %150, %138
  store i64 %148, i64* %87, align 8
  store i64 %147, i64* %86, align 8
  store i64 %144, i64* %88, align 8
  %153 = icmp eq i64 %114, 0
  br i1 %153, label %210, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %114 to i8*
  call void @_ZdlPv(i8* %155) #10
  br label %210

156:                                              ; preds = %101
  %157 = load %class.CXFA_Node**, %class.CXFA_Node*** %69, align 8
  %158 = load %class.CXFA_Node**, %class.CXFA_Node*** %70, align 8
  %159 = icmp eq %class.CXFA_Node** %157, %158
  %160 = ptrtoint %class.CXFA_Node** %158 to i64
  br i1 %159, label %165, label %161

161:                                              ; preds = %156
  %162 = bitcast %class.CXFA_Node** %157 to i64*
  store i64 %98, i64* %162, align 8
  %163 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %157, i64 1
  %164 = ptrtoint %class.CXFA_Node** %163 to i64
  store i64 %164, i64* %83, align 8
  br label %210

165:                                              ; preds = %156
  %166 = ptrtoint %class.CXFA_Node** %157 to i64
  %167 = load i64, i64* %84, align 8
  %168 = sub i64 %166, %167
  %169 = ashr exact i64 %168, 3
  %170 = add nsw i64 %169, 1
  %171 = icmp ugt i64 %170, 2305843009213693951
  br i1 %171, label %172, label %174

172:                                              ; preds = %165
  %173 = bitcast %"class.std::__1::vector.130"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %173) #12
  unreachable

174:                                              ; preds = %165
  %175 = sub i64 %160, %167
  %176 = ashr exact i64 %175, 3
  %177 = icmp ult i64 %176, 1152921504606846975
  br i1 %177, label %178, label %186

178:                                              ; preds = %174
  %179 = ashr exact i64 %175, 2
  %180 = icmp ult i64 %179, %170
  %181 = select i1 %180, i64 %170, i64 %179
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %191, label %183

183:                                              ; preds = %178
  %184 = icmp ugt i64 %181, 2305843009213693951
  br i1 %184, label %185, label %186

185:                                              ; preds = %183
  call void @abort() #12
  unreachable

186:                                              ; preds = %183, %174
  %187 = phi i64 [ %181, %183 ], [ 2305843009213693951, %174 ]
  %188 = shl i64 %187, 3
  %189 = call i8* @_Znwm(i64 %188) #10
  %190 = bitcast i8* %189 to %class.CXFA_Node**
  br label %191

191:                                              ; preds = %186, %178
  %192 = phi i64 [ %187, %186 ], [ 0, %178 ]
  %193 = phi i8* [ %189, %186 ], [ null, %178 ]
  %194 = phi %class.CXFA_Node** [ %190, %186 ], [ null, %178 ]
  %195 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %194, i64 %169
  %196 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %194, i64 %192
  %197 = ptrtoint %class.CXFA_Node** %196 to i64
  %198 = bitcast %class.CXFA_Node** %195 to i64*
  store i64 %98, i64* %198, align 8
  %199 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %195, i64 1
  %200 = ptrtoint %class.CXFA_Node** %199 to i64
  %201 = ptrtoint %class.CXFA_Node** %194 to i64
  %202 = icmp sgt i64 %168, 0
  br i1 %202, label %203, label %205

203:                                              ; preds = %191
  %204 = inttoptr i64 %167 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %193, i8* align 8 %204, i64 %168, i1 false) #11
  br label %205

205:                                              ; preds = %203, %191
  store i64 %201, i64* %84, align 8
  store i64 %200, i64* %83, align 8
  store i64 %197, i64* %85, align 8
  %206 = icmp eq i64 %167, 0
  br i1 %206, label %210, label %207

207:                                              ; preds = %205
  %208 = inttoptr i64 %167 to i8*
  call void @_ZdlPv(i8* %208) #10
  br label %210

209:                                              ; preds = %94
  br label %210

210:                                              ; preds = %94, %209, %207, %205, %161, %154, %152, %108
  %211 = phi i64 [ %97, %94 ], [ %97, %108 ], [ %97, %152 ], [ %97, %154 ], [ %97, %161 ], [ %97, %205 ], [ %97, %207 ], [ %98, %209 ]
  %212 = phi i64 [ %98, %94 ], [ %96, %108 ], [ %96, %152 ], [ %96, %154 ], [ %96, %161 ], [ %96, %205 ], [ %96, %207 ], [ %96, %209 ]
  %213 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %95, i64 0, i32 1, i32 1, i32 4
  %214 = bitcast %"class.cppgc::internal::BasicMember.30"* %213 to %class.CXFA_Node**
  %215 = load %class.CXFA_Node*, %class.CXFA_Node** %214, align 8
  %216 = icmp eq %class.CXFA_Node* %215, null
  br i1 %216, label %89, label %94

217:                                              ; preds = %89
  %218 = inttoptr i64 %212 to %class.CXFA_Node*
  %219 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %218, i64 0, i32 0, i32 4
  %220 = load i32, i32* %219, align 8
  %221 = icmp eq i32 %220, %47
  br i1 %221, label %222, label %351

222:                                              ; preds = %217
  %223 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %35, align 8
  %224 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2, i32 0, i32 2, i32 0, i32 0
  %225 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %224, align 8
  %226 = icmp ult %"class.cppgc::internal::BasicMember.70"* %223, %225
  %227 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %225 to i64
  br i1 %226, label %228, label %232

228:                                              ; preds = %222
  %229 = bitcast %"class.cppgc::internal::BasicMember.70"* %223 to i64*
  store i64 %212, i64* %229, align 8
  %230 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %223, i64 1
  %231 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %230 to i64
  store i64 %231, i64* %36, align 8
  br label %370

232:                                              ; preds = %222
  %233 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %223 to i64
  %234 = load i64, i64* %38, align 8
  %235 = sub i64 %233, %234
  %236 = ashr exact i64 %235, 3
  %237 = add nsw i64 %236, 1
  %238 = icmp ugt i64 %237, 2305843009213693951
  br i1 %238, label %239, label %241

239:                                              ; preds = %232
  %240 = bitcast %"class.std::__1::vector.90"* %34 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %240) #12
  unreachable

241:                                              ; preds = %232
  %242 = bitcast %"class.cppgc::internal::BasicMember.70"** %224 to i64*
  %243 = sub i64 %227, %234
  %244 = ashr exact i64 %243, 3
  %245 = icmp ult i64 %244, 1152921504606846975
  br i1 %245, label %246, label %254

246:                                              ; preds = %241
  %247 = ashr exact i64 %243, 2
  %248 = icmp ult i64 %247, %237
  %249 = select i1 %248, i64 %237, i64 %247
  %250 = icmp eq i64 %249, 0
  br i1 %250, label %259, label %251

251:                                              ; preds = %246
  %252 = icmp ugt i64 %249, 2305843009213693951
  br i1 %252, label %253, label %254

253:                                              ; preds = %251
  call void @abort() #12
  unreachable

254:                                              ; preds = %251, %241
  %255 = phi i64 [ %249, %251 ], [ 2305843009213693951, %241 ]
  %256 = shl i64 %255, 3
  %257 = call i8* @_Znwm(i64 %256) #10
  %258 = bitcast i8* %257 to %"class.cppgc::internal::BasicMember.70"*
  br label %259

259:                                              ; preds = %254, %246
  %260 = phi i64 [ %255, %254 ], [ 0, %246 ]
  %261 = phi %"class.cppgc::internal::BasicMember.70"* [ %258, %254 ], [ null, %246 ]
  %262 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %261, i64 %236
  %263 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %261, i64 %260
  %264 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %263 to i64
  %265 = bitcast %"class.cppgc::internal::BasicMember.70"* %262 to i64*
  store i64 %212, i64* %265, align 8
  %266 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %262, i64 1
  %267 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %266 to i64
  %268 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %34, i64 0, i32 0, i32 0
  %269 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %268, align 8
  %270 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %269 to i64
  %271 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %35, align 8
  %272 = icmp eq %"class.cppgc::internal::BasicMember.70"* %271, %269
  br i1 %272, label %344, label %273

273:                                              ; preds = %259
  %274 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %271, i64 -1, i32 0, i32 0
  %275 = ptrtoint i8** %274 to i64
  %276 = sub i64 %275, %270
  %277 = lshr i64 %276, 3
  %278 = add nuw nsw i64 %277, 1
  %279 = and i64 %278, 7
  %280 = icmp eq i64 %279, 0
  br i1 %280, label %292, label %281

281:                                              ; preds = %273, %281
  %282 = phi %"class.cppgc::internal::BasicMember.70"* [ %285, %281 ], [ %262, %273 ]
  %283 = phi %"class.cppgc::internal::BasicMember.70"* [ %286, %281 ], [ %271, %273 ]
  %284 = phi i64 [ %290, %281 ], [ %279, %273 ]
  %285 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %282, i64 -1
  %286 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %283, i64 -1
  %287 = bitcast %"class.cppgc::internal::BasicMember.70"* %286 to i64*
  %288 = load i64, i64* %287, align 8
  %289 = bitcast %"class.cppgc::internal::BasicMember.70"* %285 to i64*
  store i64 %288, i64* %289, align 8
  store atomic i64 0, i64* %287 monotonic, align 8
  %290 = add i64 %284, -1
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %292, label %281, !llvm.loop !70

292:                                              ; preds = %281, %273
  %293 = phi %"class.cppgc::internal::BasicMember.70"* [ undef, %273 ], [ %285, %281 ]
  %294 = phi %"class.cppgc::internal::BasicMember.70"* [ %262, %273 ], [ %285, %281 ]
  %295 = phi %"class.cppgc::internal::BasicMember.70"* [ %271, %273 ], [ %286, %281 ]
  %296 = icmp ult i64 %276, 56
  br i1 %296, label %341, label %297

297:                                              ; preds = %292, %297
  %298 = phi %"class.cppgc::internal::BasicMember.70"* [ %335, %297 ], [ %294, %292 ]
  %299 = phi %"class.cppgc::internal::BasicMember.70"* [ %336, %297 ], [ %295, %292 ]
  %300 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %298, i64 -1
  %301 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %299, i64 -1
  %302 = bitcast %"class.cppgc::internal::BasicMember.70"* %301 to i64*
  %303 = load i64, i64* %302, align 8
  %304 = bitcast %"class.cppgc::internal::BasicMember.70"* %300 to i64*
  store i64 %303, i64* %304, align 8
  store atomic i64 0, i64* %302 monotonic, align 8
  %305 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %298, i64 -2
  %306 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %299, i64 -2
  %307 = bitcast %"class.cppgc::internal::BasicMember.70"* %306 to i64*
  %308 = load i64, i64* %307, align 8
  %309 = bitcast %"class.cppgc::internal::BasicMember.70"* %305 to i64*
  store i64 %308, i64* %309, align 8
  store atomic i64 0, i64* %307 monotonic, align 8
  %310 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %298, i64 -3
  %311 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %299, i64 -3
  %312 = bitcast %"class.cppgc::internal::BasicMember.70"* %311 to i64*
  %313 = load i64, i64* %312, align 8
  %314 = bitcast %"class.cppgc::internal::BasicMember.70"* %310 to i64*
  store i64 %313, i64* %314, align 8
  store atomic i64 0, i64* %312 monotonic, align 8
  %315 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %298, i64 -4
  %316 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %299, i64 -4
  %317 = bitcast %"class.cppgc::internal::BasicMember.70"* %316 to i64*
  %318 = load i64, i64* %317, align 8
  %319 = bitcast %"class.cppgc::internal::BasicMember.70"* %315 to i64*
  store i64 %318, i64* %319, align 8
  store atomic i64 0, i64* %317 monotonic, align 8
  %320 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %298, i64 -5
  %321 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %299, i64 -5
  %322 = bitcast %"class.cppgc::internal::BasicMember.70"* %321 to i64*
  %323 = load i64, i64* %322, align 8
  %324 = bitcast %"class.cppgc::internal::BasicMember.70"* %320 to i64*
  store i64 %323, i64* %324, align 8
  store atomic i64 0, i64* %322 monotonic, align 8
  %325 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %298, i64 -6
  %326 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %299, i64 -6
  %327 = bitcast %"class.cppgc::internal::BasicMember.70"* %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = bitcast %"class.cppgc::internal::BasicMember.70"* %325 to i64*
  store i64 %328, i64* %329, align 8
  store atomic i64 0, i64* %327 monotonic, align 8
  %330 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %298, i64 -7
  %331 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %299, i64 -7
  %332 = bitcast %"class.cppgc::internal::BasicMember.70"* %331 to i64*
  %333 = load i64, i64* %332, align 8
  %334 = bitcast %"class.cppgc::internal::BasicMember.70"* %330 to i64*
  store i64 %333, i64* %334, align 8
  store atomic i64 0, i64* %332 monotonic, align 8
  %335 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %298, i64 -8
  %336 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %299, i64 -8
  %337 = bitcast %"class.cppgc::internal::BasicMember.70"* %336 to i64*
  %338 = load i64, i64* %337, align 8
  %339 = bitcast %"class.cppgc::internal::BasicMember.70"* %335 to i64*
  store i64 %338, i64* %339, align 8
  store atomic i64 0, i64* %337 monotonic, align 8
  %340 = icmp eq %"class.cppgc::internal::BasicMember.70"* %336, %269
  br i1 %340, label %341, label %297

341:                                              ; preds = %297, %292
  %342 = phi %"class.cppgc::internal::BasicMember.70"* [ %293, %292 ], [ %335, %297 ]
  %343 = load i64, i64* %38, align 8
  br label %344

344:                                              ; preds = %259, %341
  %345 = phi %"class.cppgc::internal::BasicMember.70"* [ %342, %341 ], [ %262, %259 ]
  %346 = phi i64 [ %343, %341 ], [ %270, %259 ]
  %347 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %345 to i64
  store i64 %347, i64* %38, align 8
  store i64 %267, i64* %36, align 8
  store i64 %264, i64* %242, align 8
  %348 = icmp eq i64 %346, 0
  br i1 %348, label %370, label %349

349:                                              ; preds = %344
  %350 = inttoptr i64 %346 to i8*
  call void @_ZdlPv(i8* %350) #10
  br label %370

351:                                              ; preds = %217
  %352 = inttoptr i64 %212 to %class.CXFA_Object*
  store %class.CXFA_Object* %352, %class.CXFA_Object** %56, align 8
  %353 = and i32 %44, 2
  %354 = icmp eq i32 %353, 0
  %355 = select i1 %354, i16 257, i16 259
  store i16 %355, i16* %61, align 8
  %356 = bitcast %"class.fxcrt::WideString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %356) #11
  %357 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %357, align 8
  call void @_ZN5fxcrt10WideStringC1EOS0_(%"class.fxcrt::WideString"* nonnull %7, %"class.fxcrt::WideString"* dereferenceable(8) %58) #11
  %358 = call zeroext i1 @_ZN23CFXJSE_ResolveProcessor13ResolveNormalEPN2v87IsolateER22CFXJSE_ResolveNodeData(%class.CFXJSE_ResolveProcessor* %0, %"class.v8::Isolate"* %1, %class.CFXJSE_ResolveNodeData* nonnull dereferenceable(96) %4)
  %359 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* %58, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %7) #11
  %360 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %35, align 8
  %361 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %4, i64 0, i32 7, i32 2
  %362 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %361, i64 0, i32 0, i32 0
  %363 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %362, align 8
  %364 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %4, i64 0, i32 7, i32 2, i32 0, i32 1
  %365 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %364, align 8
  %366 = call %"class.cppgc::internal::BasicMember.70"* @_ZNSt3__16vectorIN5cppgc8internal11BasicMemberI11CXFA_ObjectNS2_15StrongMemberTagENS2_26DijkstraWriteBarrierPolicyENS2_22DisabledCheckingPolicyEEENS_9allocatorIS8_EEE6insertINS_11__wrap_iterIPS8_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS8_NS_15iterator_traitsISH_E9referenceEEE5valueESF_E4typeENSD_IPKS8_EESH_SH_(%"class.std::__1::vector.90"* %34, %"class.cppgc::internal::BasicMember.70"* %360, %"class.cppgc::internal::BasicMember.70"* %363, %"class.cppgc::internal::BasicMember.70"* %365)
  %367 = bitcast %"class.std::__1::vector.90"* %361 to i64*
  %368 = load i64, i64* %367, align 8
  %369 = bitcast %"class.cppgc::internal::BasicMember.70"** %364 to i64*
  store i64 %368, i64* %369, align 8
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %356) #11
  br label %370

370:                                              ; preds = %349, %344, %228, %351
  %371 = load i64, i64* %36, align 8
  %372 = load i64, i64* %38, align 8
  %373 = sub i64 %371, %372
  %374 = ashr exact i64 %373, 3
  %375 = icmp ugt i64 %374, %41
  br i1 %375, label %376, label %381

376:                                              ; preds = %370
  call void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"* nonnull %8, %"class.fxcrt::WideString"* dereferenceable(8) %48) #11
  call void @_ZN23CFXJSE_ResolveProcessor15FilterConditionEPN2v87IsolateEN5fxcrt10WideStringEP22CFXJSE_ResolveNodeData(%class.CFXJSE_ResolveProcessor* %0, %"class.v8::Isolate"* %1, %"class.fxcrt::WideString"* nonnull %8, %class.CFXJSE_ResolveNodeData* %2)
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %8) #11
  %377 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %34, i64 0, i32 0, i32 0
  %378 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %377, align 8
  %379 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %35, align 8
  %380 = icmp ne %"class.cppgc::internal::BasicMember.70"* %378, %379
  br label %2748

381:                                              ; preds = %79, %370, %89
  %382 = phi i1 [ %81, %79 ], [ %91, %370 ], [ %91, %89 ]
  %383 = phi i64 [ 0, %79 ], [ %211, %370 ], [ %211, %89 ]
  %384 = and i32 %44, 1
  %385 = icmp eq i32 %384, 0
  br i1 %385, label %1042, label %386

386:                                              ; preds = %381
  %387 = icmp eq i64 %383, 0
  %388 = xor i1 %382, true
  %389 = or i1 %387, %388
  br i1 %389, label %447, label %390

390:                                              ; preds = %386
  %391 = load %class.CXFA_Node**, %class.CXFA_Node*** %69, align 8
  %392 = load %class.CXFA_Node**, %class.CXFA_Node*** %70, align 8
  %393 = icmp eq %class.CXFA_Node** %391, %392
  %394 = ptrtoint %class.CXFA_Node** %392 to i64
  br i1 %393, label %400, label %395

395:                                              ; preds = %390
  %396 = bitcast %class.CXFA_Node** %391 to i64*
  store i64 %383, i64* %396, align 8
  %397 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %391, i64 1
  %398 = ptrtoint %class.CXFA_Node** %397 to i64
  %399 = bitcast %class.CXFA_Node*** %69 to i64*
  store i64 %398, i64* %399, align 8
  br label %447

400:                                              ; preds = %390
  %401 = ptrtoint %class.CXFA_Node** %391 to i64
  %402 = bitcast %class.CXFA_Node*** %69 to i64*
  %403 = bitcast %"class.std::__1::vector.130"* %5 to i64*
  %404 = load i64, i64* %403, align 8
  %405 = sub i64 %401, %404
  %406 = ashr exact i64 %405, 3
  %407 = add nsw i64 %406, 1
  %408 = icmp ugt i64 %407, 2305843009213693951
  br i1 %408, label %409, label %411

409:                                              ; preds = %400
  %410 = bitcast %"class.std::__1::vector.130"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %410) #12
  unreachable

411:                                              ; preds = %400
  %412 = bitcast %class.CXFA_Node*** %70 to i64*
  %413 = sub i64 %394, %404
  %414 = ashr exact i64 %413, 3
  %415 = icmp ult i64 %414, 1152921504606846975
  br i1 %415, label %416, label %424

416:                                              ; preds = %411
  %417 = ashr exact i64 %413, 2
  %418 = icmp ult i64 %417, %407
  %419 = select i1 %418, i64 %407, i64 %417
  %420 = icmp eq i64 %419, 0
  br i1 %420, label %429, label %421

421:                                              ; preds = %416
  %422 = icmp ugt i64 %419, 2305843009213693951
  br i1 %422, label %423, label %424

423:                                              ; preds = %421
  call void @abort() #12
  unreachable

424:                                              ; preds = %421, %411
  %425 = phi i64 [ %419, %421 ], [ 2305843009213693951, %411 ]
  %426 = shl i64 %425, 3
  %427 = call i8* @_Znwm(i64 %426) #10
  %428 = bitcast i8* %427 to %class.CXFA_Node**
  br label %429

429:                                              ; preds = %424, %416
  %430 = phi i64 [ %425, %424 ], [ 0, %416 ]
  %431 = phi i8* [ %427, %424 ], [ null, %416 ]
  %432 = phi %class.CXFA_Node** [ %428, %424 ], [ null, %416 ]
  %433 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %432, i64 %406
  %434 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %432, i64 %430
  %435 = ptrtoint %class.CXFA_Node** %434 to i64
  %436 = bitcast %class.CXFA_Node** %433 to i64*
  store i64 %383, i64* %436, align 8
  %437 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %433, i64 1
  %438 = ptrtoint %class.CXFA_Node** %437 to i64
  %439 = ptrtoint %class.CXFA_Node** %432 to i64
  %440 = icmp sgt i64 %405, 0
  br i1 %440, label %441, label %443

441:                                              ; preds = %429
  %442 = inttoptr i64 %404 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %431, i8* align 8 %442, i64 %405, i1 false) #11
  br label %443

443:                                              ; preds = %441, %429
  store i64 %439, i64* %403, align 8
  store i64 %438, i64* %402, align 8
  store i64 %435, i64* %412, align 8
  %444 = icmp eq i64 %404, 0
  br i1 %444, label %447, label %445

445:                                              ; preds = %443
  %446 = inttoptr i64 %404 to i8*
  call void @_ZdlPv(i8* %446) #10
  br label %447

447:                                              ; preds = %445, %443, %395, %386
  %448 = load %class.CXFA_Node**, %class.CXFA_Node*** %68, align 8
  %449 = load %class.CXFA_Node**, %class.CXFA_Node*** %69, align 8
  %450 = icmp eq %class.CXFA_Node** %448, %449
  br i1 %450, label %465, label %451

451:                                              ; preds = %447
  %452 = and i32 %44, 2
  %453 = icmp eq i32 %452, 0
  %454 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2, i32 0, i32 2, i32 0, i32 0
  %455 = bitcast %"class.cppgc::internal::BasicMember.70"** %454 to i64*
  %456 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %34, i64 0, i32 0, i32 0
  %457 = select i1 %453, i16 257, i16 259
  %458 = bitcast %"class.fxcrt::WideString"* %9 to i8*
  %459 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %460 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %4, i64 0, i32 7, i32 2
  %461 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %460, i64 0, i32 0, i32 0
  %462 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %4, i64 0, i32 7, i32 2, i32 0, i32 1
  %463 = bitcast %"class.std::__1::vector.90"* %460 to i64*
  %464 = bitcast %"class.cppgc::internal::BasicMember.70"** %462 to i64*
  br label %471

465:                                              ; preds = %756, %447
  %466 = load i64, i64* %36, align 8
  %467 = load i64, i64* %38, align 8
  %468 = sub i64 %466, %467
  %469 = ashr exact i64 %468, 3
  %470 = icmp ugt i64 %469, %41
  br i1 %470, label %760, label %1042

471:                                              ; preds = %451, %756
  %472 = phi i8 [ 0, %451 ], [ %757, %756 ]
  %473 = phi %class.CXFA_Node** [ %448, %451 ], [ %758, %756 ]
  %474 = load %class.CXFA_Node*, %class.CXFA_Node** %473, align 8
  %475 = ptrtoint %class.CXFA_Node* %474 to i64
  br i1 %453, label %606, label %476

476:                                              ; preds = %471
  %477 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %474, i64 0, i32 0, i32 4
  %478 = load i32, i32* %477, align 8
  %479 = icmp eq i32 %478, %47
  br i1 %479, label %480, label %736

480:                                              ; preds = %476
  %481 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %35, align 8
  %482 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %454, align 8
  %483 = icmp ult %"class.cppgc::internal::BasicMember.70"* %481, %482
  %484 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %482 to i64
  br i1 %483, label %485, label %489

485:                                              ; preds = %480
  %486 = bitcast %"class.cppgc::internal::BasicMember.70"* %481 to i64*
  store i64 %475, i64* %486, align 8
  %487 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %481, i64 1
  %488 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %487 to i64
  store i64 %488, i64* %36, align 8
  br label %736

489:                                              ; preds = %480
  %490 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %481 to i64
  %491 = load i64, i64* %38, align 8
  %492 = sub i64 %490, %491
  %493 = ashr exact i64 %492, 3
  %494 = add nsw i64 %493, 1
  %495 = icmp ugt i64 %494, 2305843009213693951
  br i1 %495, label %496, label %498

496:                                              ; preds = %489
  %497 = bitcast %"class.std::__1::vector.90"* %34 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %497) #12
  unreachable

498:                                              ; preds = %489
  %499 = sub i64 %484, %491
  %500 = ashr exact i64 %499, 3
  %501 = icmp ult i64 %500, 1152921504606846975
  br i1 %501, label %502, label %510

502:                                              ; preds = %498
  %503 = ashr exact i64 %499, 2
  %504 = icmp ult i64 %503, %494
  %505 = select i1 %504, i64 %494, i64 %503
  %506 = icmp eq i64 %505, 0
  br i1 %506, label %515, label %507

507:                                              ; preds = %502
  %508 = icmp ugt i64 %505, 2305843009213693951
  br i1 %508, label %509, label %510

509:                                              ; preds = %507
  call void @abort() #12
  unreachable

510:                                              ; preds = %507, %498
  %511 = phi i64 [ %505, %507 ], [ 2305843009213693951, %498 ]
  %512 = shl i64 %511, 3
  %513 = call i8* @_Znwm(i64 %512) #10
  %514 = bitcast i8* %513 to %"class.cppgc::internal::BasicMember.70"*
  br label %515

515:                                              ; preds = %510, %502
  %516 = phi i64 [ %511, %510 ], [ 0, %502 ]
  %517 = phi %"class.cppgc::internal::BasicMember.70"* [ %514, %510 ], [ null, %502 ]
  %518 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %517, i64 %493
  %519 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %517, i64 %516
  %520 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %519 to i64
  %521 = bitcast %"class.cppgc::internal::BasicMember.70"* %518 to i64*
  store i64 %475, i64* %521, align 8
  %522 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %518, i64 1
  %523 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %522 to i64
  %524 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %456, align 8
  %525 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %524 to i64
  %526 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %35, align 8
  %527 = icmp eq %"class.cppgc::internal::BasicMember.70"* %526, %524
  br i1 %527, label %599, label %528

528:                                              ; preds = %515
  %529 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %526, i64 -1
  %530 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %529 to i64
  %531 = sub i64 %530, %525
  %532 = lshr i64 %531, 3
  %533 = add nuw nsw i64 %532, 1
  %534 = and i64 %533, 7
  %535 = icmp eq i64 %534, 0
  br i1 %535, label %547, label %536

536:                                              ; preds = %528, %536
  %537 = phi %"class.cppgc::internal::BasicMember.70"* [ %540, %536 ], [ %518, %528 ]
  %538 = phi %"class.cppgc::internal::BasicMember.70"* [ %541, %536 ], [ %526, %528 ]
  %539 = phi i64 [ %545, %536 ], [ %534, %528 ]
  %540 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %537, i64 -1
  %541 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %538, i64 -1
  %542 = bitcast %"class.cppgc::internal::BasicMember.70"* %541 to i64*
  %543 = load i64, i64* %542, align 8
  %544 = bitcast %"class.cppgc::internal::BasicMember.70"* %540 to i64*
  store i64 %543, i64* %544, align 8
  store atomic i64 0, i64* %542 monotonic, align 8
  %545 = add i64 %539, -1
  %546 = icmp eq i64 %545, 0
  br i1 %546, label %547, label %536, !llvm.loop !71

547:                                              ; preds = %536, %528
  %548 = phi %"class.cppgc::internal::BasicMember.70"* [ undef, %528 ], [ %540, %536 ]
  %549 = phi %"class.cppgc::internal::BasicMember.70"* [ %518, %528 ], [ %540, %536 ]
  %550 = phi %"class.cppgc::internal::BasicMember.70"* [ %526, %528 ], [ %541, %536 ]
  %551 = icmp ult i64 %531, 56
  br i1 %551, label %596, label %552

552:                                              ; preds = %547, %552
  %553 = phi %"class.cppgc::internal::BasicMember.70"* [ %590, %552 ], [ %549, %547 ]
  %554 = phi %"class.cppgc::internal::BasicMember.70"* [ %591, %552 ], [ %550, %547 ]
  %555 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %553, i64 -1
  %556 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %554, i64 -1
  %557 = bitcast %"class.cppgc::internal::BasicMember.70"* %556 to i64*
  %558 = load i64, i64* %557, align 8
  %559 = bitcast %"class.cppgc::internal::BasicMember.70"* %555 to i64*
  store i64 %558, i64* %559, align 8
  store atomic i64 0, i64* %557 monotonic, align 8
  %560 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %553, i64 -2
  %561 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %554, i64 -2
  %562 = bitcast %"class.cppgc::internal::BasicMember.70"* %561 to i64*
  %563 = load i64, i64* %562, align 8
  %564 = bitcast %"class.cppgc::internal::BasicMember.70"* %560 to i64*
  store i64 %563, i64* %564, align 8
  store atomic i64 0, i64* %562 monotonic, align 8
  %565 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %553, i64 -3
  %566 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %554, i64 -3
  %567 = bitcast %"class.cppgc::internal::BasicMember.70"* %566 to i64*
  %568 = load i64, i64* %567, align 8
  %569 = bitcast %"class.cppgc::internal::BasicMember.70"* %565 to i64*
  store i64 %568, i64* %569, align 8
  store atomic i64 0, i64* %567 monotonic, align 8
  %570 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %553, i64 -4
  %571 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %554, i64 -4
  %572 = bitcast %"class.cppgc::internal::BasicMember.70"* %571 to i64*
  %573 = load i64, i64* %572, align 8
  %574 = bitcast %"class.cppgc::internal::BasicMember.70"* %570 to i64*
  store i64 %573, i64* %574, align 8
  store atomic i64 0, i64* %572 monotonic, align 8
  %575 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %553, i64 -5
  %576 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %554, i64 -5
  %577 = bitcast %"class.cppgc::internal::BasicMember.70"* %576 to i64*
  %578 = load i64, i64* %577, align 8
  %579 = bitcast %"class.cppgc::internal::BasicMember.70"* %575 to i64*
  store i64 %578, i64* %579, align 8
  store atomic i64 0, i64* %577 monotonic, align 8
  %580 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %553, i64 -6
  %581 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %554, i64 -6
  %582 = bitcast %"class.cppgc::internal::BasicMember.70"* %581 to i64*
  %583 = load i64, i64* %582, align 8
  %584 = bitcast %"class.cppgc::internal::BasicMember.70"* %580 to i64*
  store i64 %583, i64* %584, align 8
  store atomic i64 0, i64* %582 monotonic, align 8
  %585 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %553, i64 -7
  %586 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %554, i64 -7
  %587 = bitcast %"class.cppgc::internal::BasicMember.70"* %586 to i64*
  %588 = load i64, i64* %587, align 8
  %589 = bitcast %"class.cppgc::internal::BasicMember.70"* %585 to i64*
  store i64 %588, i64* %589, align 8
  store atomic i64 0, i64* %587 monotonic, align 8
  %590 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %553, i64 -8
  %591 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %554, i64 -8
  %592 = bitcast %"class.cppgc::internal::BasicMember.70"* %591 to i64*
  %593 = load i64, i64* %592, align 8
  %594 = bitcast %"class.cppgc::internal::BasicMember.70"* %590 to i64*
  store i64 %593, i64* %594, align 8
  store atomic i64 0, i64* %592 monotonic, align 8
  %595 = icmp eq %"class.cppgc::internal::BasicMember.70"* %591, %524
  br i1 %595, label %596, label %552

596:                                              ; preds = %552, %547
  %597 = phi %"class.cppgc::internal::BasicMember.70"* [ %548, %547 ], [ %590, %552 ]
  %598 = load i64, i64* %38, align 8
  br label %599

599:                                              ; preds = %515, %596
  %600 = phi %"class.cppgc::internal::BasicMember.70"* [ %597, %596 ], [ %518, %515 ]
  %601 = phi i64 [ %598, %596 ], [ %525, %515 ]
  %602 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %600 to i64
  store i64 %602, i64* %38, align 8
  store i64 %523, i64* %36, align 8
  store i64 %520, i64* %455, align 8
  %603 = icmp eq i64 %601, 0
  br i1 %603, label %736, label %604

604:                                              ; preds = %599
  %605 = inttoptr i64 %601 to i8*
  call void @_ZdlPv(i8* %605) #10
  br label %736

606:                                              ; preds = %471
  %607 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %474, i64 0, i32 13
  %608 = load i32, i32* %607, align 4
  %609 = icmp eq i32 %608, %47
  br i1 %609, label %610, label %736

610:                                              ; preds = %606
  %611 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %35, align 8
  %612 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %454, align 8
  %613 = icmp ult %"class.cppgc::internal::BasicMember.70"* %611, %612
  %614 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %612 to i64
  br i1 %613, label %615, label %619

615:                                              ; preds = %610
  %616 = bitcast %"class.cppgc::internal::BasicMember.70"* %611 to i64*
  store i64 %475, i64* %616, align 8
  %617 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %611, i64 1
  %618 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %617 to i64
  store i64 %618, i64* %36, align 8
  br label %736

619:                                              ; preds = %610
  %620 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %611 to i64
  %621 = load i64, i64* %38, align 8
  %622 = sub i64 %620, %621
  %623 = ashr exact i64 %622, 3
  %624 = add nsw i64 %623, 1
  %625 = icmp ugt i64 %624, 2305843009213693951
  br i1 %625, label %626, label %628

626:                                              ; preds = %619
  %627 = bitcast %"class.std::__1::vector.90"* %34 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %627) #12
  unreachable

628:                                              ; preds = %619
  %629 = sub i64 %614, %621
  %630 = ashr exact i64 %629, 3
  %631 = icmp ult i64 %630, 1152921504606846975
  br i1 %631, label %632, label %640

632:                                              ; preds = %628
  %633 = ashr exact i64 %629, 2
  %634 = icmp ult i64 %633, %624
  %635 = select i1 %634, i64 %624, i64 %633
  %636 = icmp eq i64 %635, 0
  br i1 %636, label %645, label %637

637:                                              ; preds = %632
  %638 = icmp ugt i64 %635, 2305843009213693951
  br i1 %638, label %639, label %640

639:                                              ; preds = %637
  call void @abort() #12
  unreachable

640:                                              ; preds = %637, %628
  %641 = phi i64 [ %635, %637 ], [ 2305843009213693951, %628 ]
  %642 = shl i64 %641, 3
  %643 = call i8* @_Znwm(i64 %642) #10
  %644 = bitcast i8* %643 to %"class.cppgc::internal::BasicMember.70"*
  br label %645

645:                                              ; preds = %640, %632
  %646 = phi i64 [ %641, %640 ], [ 0, %632 ]
  %647 = phi %"class.cppgc::internal::BasicMember.70"* [ %644, %640 ], [ null, %632 ]
  %648 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %647, i64 %623
  %649 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %647, i64 %646
  %650 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %649 to i64
  %651 = bitcast %"class.cppgc::internal::BasicMember.70"* %648 to i64*
  store i64 %475, i64* %651, align 8
  %652 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %648, i64 1
  %653 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %652 to i64
  %654 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %456, align 8
  %655 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %654 to i64
  %656 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %35, align 8
  %657 = icmp eq %"class.cppgc::internal::BasicMember.70"* %656, %654
  br i1 %657, label %729, label %658

658:                                              ; preds = %645
  %659 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %656, i64 -1
  %660 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %659 to i64
  %661 = sub i64 %660, %655
  %662 = lshr i64 %661, 3
  %663 = add nuw nsw i64 %662, 1
  %664 = and i64 %663, 7
  %665 = icmp eq i64 %664, 0
  br i1 %665, label %677, label %666

666:                                              ; preds = %658, %666
  %667 = phi %"class.cppgc::internal::BasicMember.70"* [ %670, %666 ], [ %648, %658 ]
  %668 = phi %"class.cppgc::internal::BasicMember.70"* [ %671, %666 ], [ %656, %658 ]
  %669 = phi i64 [ %675, %666 ], [ %664, %658 ]
  %670 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %667, i64 -1
  %671 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %668, i64 -1
  %672 = bitcast %"class.cppgc::internal::BasicMember.70"* %671 to i64*
  %673 = load i64, i64* %672, align 8
  %674 = bitcast %"class.cppgc::internal::BasicMember.70"* %670 to i64*
  store i64 %673, i64* %674, align 8
  store atomic i64 0, i64* %672 monotonic, align 8
  %675 = add i64 %669, -1
  %676 = icmp eq i64 %675, 0
  br i1 %676, label %677, label %666, !llvm.loop !72

677:                                              ; preds = %666, %658
  %678 = phi %"class.cppgc::internal::BasicMember.70"* [ undef, %658 ], [ %670, %666 ]
  %679 = phi %"class.cppgc::internal::BasicMember.70"* [ %648, %658 ], [ %670, %666 ]
  %680 = phi %"class.cppgc::internal::BasicMember.70"* [ %656, %658 ], [ %671, %666 ]
  %681 = icmp ult i64 %661, 56
  br i1 %681, label %726, label %682

682:                                              ; preds = %677, %682
  %683 = phi %"class.cppgc::internal::BasicMember.70"* [ %720, %682 ], [ %679, %677 ]
  %684 = phi %"class.cppgc::internal::BasicMember.70"* [ %721, %682 ], [ %680, %677 ]
  %685 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %683, i64 -1
  %686 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %684, i64 -1
  %687 = bitcast %"class.cppgc::internal::BasicMember.70"* %686 to i64*
  %688 = load i64, i64* %687, align 8
  %689 = bitcast %"class.cppgc::internal::BasicMember.70"* %685 to i64*
  store i64 %688, i64* %689, align 8
  store atomic i64 0, i64* %687 monotonic, align 8
  %690 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %683, i64 -2
  %691 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %684, i64 -2
  %692 = bitcast %"class.cppgc::internal::BasicMember.70"* %691 to i64*
  %693 = load i64, i64* %692, align 8
  %694 = bitcast %"class.cppgc::internal::BasicMember.70"* %690 to i64*
  store i64 %693, i64* %694, align 8
  store atomic i64 0, i64* %692 monotonic, align 8
  %695 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %683, i64 -3
  %696 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %684, i64 -3
  %697 = bitcast %"class.cppgc::internal::BasicMember.70"* %696 to i64*
  %698 = load i64, i64* %697, align 8
  %699 = bitcast %"class.cppgc::internal::BasicMember.70"* %695 to i64*
  store i64 %698, i64* %699, align 8
  store atomic i64 0, i64* %697 monotonic, align 8
  %700 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %683, i64 -4
  %701 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %684, i64 -4
  %702 = bitcast %"class.cppgc::internal::BasicMember.70"* %701 to i64*
  %703 = load i64, i64* %702, align 8
  %704 = bitcast %"class.cppgc::internal::BasicMember.70"* %700 to i64*
  store i64 %703, i64* %704, align 8
  store atomic i64 0, i64* %702 monotonic, align 8
  %705 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %683, i64 -5
  %706 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %684, i64 -5
  %707 = bitcast %"class.cppgc::internal::BasicMember.70"* %706 to i64*
  %708 = load i64, i64* %707, align 8
  %709 = bitcast %"class.cppgc::internal::BasicMember.70"* %705 to i64*
  store i64 %708, i64* %709, align 8
  store atomic i64 0, i64* %707 monotonic, align 8
  %710 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %683, i64 -6
  %711 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %684, i64 -6
  %712 = bitcast %"class.cppgc::internal::BasicMember.70"* %711 to i64*
  %713 = load i64, i64* %712, align 8
  %714 = bitcast %"class.cppgc::internal::BasicMember.70"* %710 to i64*
  store i64 %713, i64* %714, align 8
  store atomic i64 0, i64* %712 monotonic, align 8
  %715 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %683, i64 -7
  %716 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %684, i64 -7
  %717 = bitcast %"class.cppgc::internal::BasicMember.70"* %716 to i64*
  %718 = load i64, i64* %717, align 8
  %719 = bitcast %"class.cppgc::internal::BasicMember.70"* %715 to i64*
  store i64 %718, i64* %719, align 8
  store atomic i64 0, i64* %717 monotonic, align 8
  %720 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %683, i64 -8
  %721 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %684, i64 -8
  %722 = bitcast %"class.cppgc::internal::BasicMember.70"* %721 to i64*
  %723 = load i64, i64* %722, align 8
  %724 = bitcast %"class.cppgc::internal::BasicMember.70"* %720 to i64*
  store i64 %723, i64* %724, align 8
  store atomic i64 0, i64* %722 monotonic, align 8
  %725 = icmp eq %"class.cppgc::internal::BasicMember.70"* %721, %654
  br i1 %725, label %726, label %682

726:                                              ; preds = %682, %677
  %727 = phi %"class.cppgc::internal::BasicMember.70"* [ %678, %677 ], [ %720, %682 ]
  %728 = load i64, i64* %38, align 8
  br label %729

729:                                              ; preds = %645, %726
  %730 = phi %"class.cppgc::internal::BasicMember.70"* [ %727, %726 ], [ %648, %645 ]
  %731 = phi i64 [ %728, %726 ], [ %655, %645 ]
  %732 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %730 to i64
  store i64 %732, i64* %38, align 8
  store i64 %653, i64* %36, align 8
  store i64 %650, i64* %455, align 8
  %733 = icmp eq i64 %731, 0
  br i1 %733, label %736, label %734

734:                                              ; preds = %729
  %735 = inttoptr i64 %731 to i8*
  call void @_ZdlPv(i8* %735) #10
  br label %736

736:                                              ; preds = %734, %729, %615, %604, %599, %485, %606, %476
  %737 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %474, i64 0, i32 0
  %738 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %474, i64 0, i32 0, i32 2
  %739 = load i16, i16* %738, align 4
  %740 = icmp eq i16 %739, 158
  br i1 %740, label %756, label %741

741:                                              ; preds = %736
  %742 = call zeroext i1 @_ZNK9CXFA_Node13IsTransparentEv(%class.CXFA_Node* %474) #11
  br i1 %742, label %743, label %756

743:                                              ; preds = %741
  %744 = and i8 %472, 1
  %745 = icmp eq i8 %744, 0
  br i1 %745, label %746, label %747

746:                                              ; preds = %743
  store i16 %457, i16* %61, align 8
  br label %747

747:                                              ; preds = %743, %746
  %748 = phi i8 [ %472, %743 ], [ 1, %746 ]
  store %class.CXFA_Object* %737, %class.CXFA_Object** %56, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %458) #11
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %459, align 8
  call void @_ZN5fxcrt10WideStringC1EOS0_(%"class.fxcrt::WideString"* nonnull %9, %"class.fxcrt::WideString"* dereferenceable(8) %58) #11
  %749 = call zeroext i1 @_ZN23CFXJSE_ResolveProcessor13ResolveNormalEPN2v87IsolateER22CFXJSE_ResolveNodeData(%class.CFXJSE_ResolveProcessor* %0, %"class.v8::Isolate"* %1, %class.CFXJSE_ResolveNodeData* nonnull dereferenceable(96) %4)
  %750 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* %58, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %9) #11
  %751 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %35, align 8
  %752 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %461, align 8
  %753 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %462, align 8
  %754 = call %"class.cppgc::internal::BasicMember.70"* @_ZNSt3__16vectorIN5cppgc8internal11BasicMemberI11CXFA_ObjectNS2_15StrongMemberTagENS2_26DijkstraWriteBarrierPolicyENS2_22DisabledCheckingPolicyEEENS_9allocatorIS8_EEE6insertINS_11__wrap_iterIPS8_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS8_NS_15iterator_traitsISH_E9referenceEEE5valueESF_E4typeENSD_IPKS8_EESH_SH_(%"class.std::__1::vector.90"* %34, %"class.cppgc::internal::BasicMember.70"* %751, %"class.cppgc::internal::BasicMember.70"* %752, %"class.cppgc::internal::BasicMember.70"* %753)
  %755 = load i64, i64* %463, align 8
  store i64 %755, i64* %464, align 8
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %458) #11
  br label %756

756:                                              ; preds = %736, %747, %741
  %757 = phi i8 [ %748, %747 ], [ %472, %741 ], [ %472, %736 ]
  %758 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %473, i64 1
  %759 = icmp eq %class.CXFA_Node** %758, %449
  br i1 %759, label %465, label %471

760:                                              ; preds = %465
  %761 = and i32 %44, 256
  %762 = icmp eq i32 %761, 0
  br i1 %762, label %763, label %1037

763:                                              ; preds = %760
  %764 = call zeroext i1 @_ZNK9CXFA_Node13IsTransparentEv(%class.CXFA_Node* %31) #11
  br i1 %764, label %765, label %780

765:                                              ; preds = %763
  %766 = bitcast %"class.std::__1::vector.90"* %34 to %class.CXFA_Object***
  %767 = load %class.CXFA_Object**, %class.CXFA_Object*** %766, align 8
  %768 = load %class.CXFA_Object*, %class.CXFA_Object** %767, align 8
  %769 = call %class.CXFA_Node* @_Z6ToNodeP11CXFA_Object(%class.CXFA_Object* %768) #11
  %770 = icmp eq %class.CXFA_Node* %769, null
  br i1 %770, label %780, label %771

771:                                              ; preds = %765
  %772 = bitcast %"class.std::__1::vector.130"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %772) #11
  %773 = and i32 %44, 2
  %774 = icmp ne i32 %773, 0
  call void @_ZN9CXFA_Node11GetSiblingsEb(%"class.std::__1::vector.130"* nonnull sret %10, %class.CXFA_Node* nonnull %769, i1 zeroext %774) #11
  %775 = bitcast %"class.std::__1::vector.130"* %10 to i64*
  %776 = load i64, i64* %775, align 8
  %777 = getelementptr inbounds %"class.std::__1::vector.130", %"class.std::__1::vector.130"* %10, i64 0, i32 0, i32 1
  %778 = bitcast %class.CXFA_Node*** %777 to i64*
  %779 = load i64, i64* %778, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %772) #11
  br label %780

780:                                              ; preds = %771, %765, %763
  %781 = phi i64 [ 0, %765 ], [ %776, %771 ], [ 0, %763 ]
  %782 = phi i64 [ 0, %765 ], [ %779, %771 ], [ 0, %763 ]
  %783 = sub i64 %782, %781
  %784 = ashr exact i64 %783, 3
  %785 = load i64, i64* %36, align 8
  %786 = load i64, i64* %38, align 8
  %787 = sub i64 %785, %786
  %788 = ashr exact i64 %787, 3
  %789 = icmp ugt i64 %784, %788
  %790 = inttoptr i64 %786 to %"class.cppgc::internal::BasicMember.70"*
  br i1 %789, label %791, label %1033

791:                                              ; preds = %780
  %792 = inttoptr i64 %786 to %class.CXFA_Object**
  %793 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %34, i64 0, i32 0, i32 0
  %794 = load %class.CXFA_Object*, %class.CXFA_Object** %792, align 8
  %795 = bitcast %"class.std::__1::vector.90"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %795) #11
  %796 = inttoptr i64 %781 to %class.CXFA_Node**
  %797 = inttoptr i64 %781 to i8*
  %798 = inttoptr i64 %782 to %class.CXFA_Node**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %795, i8 0, i64 24, i1 false) #11
  %799 = icmp eq i64 %783, 0
  br i1 %799, label %999, label %800

800:                                              ; preds = %791
  %801 = icmp ugt i64 %784, 2305843009213693951
  br i1 %801, label %802, label %804

802:                                              ; preds = %800
  %803 = bitcast %"class.std::__1::vector.90"* %11 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %803) #12
  unreachable

804:                                              ; preds = %800
  %805 = call i8* @_Znwm(i64 %783) #10
  %806 = bitcast i8* %805 to %"class.cppgc::internal::BasicMember.70"*
  %807 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %11, i64 0, i32 0, i32 1
  %808 = bitcast %"class.cppgc::internal::BasicMember.70"** %807 to i8**
  store i8* %805, i8** %808, align 8
  %809 = bitcast %"class.std::__1::vector.90"* %11 to i8**
  store i8* %805, i8** %809, align 8
  %810 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %806, i64 %784
  %811 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.cppgc::internal::BasicMember.70"* %810, %"class.cppgc::internal::BasicMember.70"** %811, align 8
  %812 = bitcast %"class.cppgc::internal::BasicMember.70"** %807 to i64*
  %813 = ptrtoint i8* %805 to i64
  %814 = icmp eq %class.CXFA_Node** %796, %798
  br i1 %814, label %996, label %815

815:                                              ; preds = %804
  %816 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %798, i64 -1
  %817 = bitcast %class.CXFA_Node** %816 to i8*
  %818 = sub i64 0, %781
  %819 = getelementptr i8, i8* %817, i64 %818
  %820 = ptrtoint i8* %819 to i64
  %821 = lshr i64 %820, 3
  %822 = add nuw nsw i64 %821, 1
  %823 = icmp ult i64 %822, 4
  br i1 %823, label %921, label %824

824:                                              ; preds = %815
  %825 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %798, i64 -1
  %826 = bitcast %class.CXFA_Node** %825 to i8*
  %827 = sub i64 0, %781
  %828 = getelementptr i8, i8* %826, i64 %827
  %829 = ptrtoint i8* %828 to i64
  %830 = lshr i64 %829, 3
  %831 = add i64 %829, 8
  %832 = and i64 %831, -8
  %833 = getelementptr i8, i8* %805, i64 %832
  %834 = add nuw nsw i64 %830, 1
  %835 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %796, i64 %834
  %836 = bitcast %class.CXFA_Node** %835 to i8*
  %837 = icmp ult i8* %805, %836
  %838 = icmp ugt i8* %833, %797
  %839 = and i1 %837, %838
  br i1 %839, label %921, label %840

840:                                              ; preds = %824
  %841 = and i64 %822, 4611686018427387900
  %842 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %806, i64 %841
  %843 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %796, i64 %841
  %844 = add nsw i64 %841, -4
  %845 = lshr exact i64 %844, 2
  %846 = add nuw nsw i64 %845, 1
  %847 = and i64 %846, 3
  %848 = icmp ult i64 %844, 12
  br i1 %848, label %900, label %849

849:                                              ; preds = %840
  %850 = sub nsw i64 %846, %847
  br label %851

851:                                              ; preds = %851, %849
  %852 = phi i64 [ 0, %849 ], [ %897, %851 ]
  %853 = phi i64 [ %850, %849 ], [ %898, %851 ]
  %854 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %806, i64 %852
  %855 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %796, i64 %852
  %856 = bitcast %class.CXFA_Node** %855 to <2 x i64>*
  %857 = load <2 x i64>, <2 x i64>* %856, align 8, !alias.scope !73
  %858 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %855, i64 2
  %859 = bitcast %class.CXFA_Node** %858 to <2 x i64>*
  %860 = load <2 x i64>, <2 x i64>* %859, align 8, !alias.scope !73
  %861 = bitcast %"class.cppgc::internal::BasicMember.70"* %854 to <2 x i64>*
  store <2 x i64> %857, <2 x i64>* %861, align 8, !alias.scope !76, !noalias !73
  %862 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %854, i64 2
  %863 = bitcast %"class.cppgc::internal::BasicMember.70"* %862 to <2 x i64>*
  store <2 x i64> %860, <2 x i64>* %863, align 8, !alias.scope !76, !noalias !73
  %864 = or i64 %852, 4
  %865 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %806, i64 %864
  %866 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %796, i64 %864
  %867 = bitcast %class.CXFA_Node** %866 to <2 x i64>*
  %868 = load <2 x i64>, <2 x i64>* %867, align 8, !alias.scope !73
  %869 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %866, i64 2
  %870 = bitcast %class.CXFA_Node** %869 to <2 x i64>*
  %871 = load <2 x i64>, <2 x i64>* %870, align 8, !alias.scope !73
  %872 = bitcast %"class.cppgc::internal::BasicMember.70"* %865 to <2 x i64>*
  store <2 x i64> %868, <2 x i64>* %872, align 8, !alias.scope !76, !noalias !73
  %873 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %865, i64 2
  %874 = bitcast %"class.cppgc::internal::BasicMember.70"* %873 to <2 x i64>*
  store <2 x i64> %871, <2 x i64>* %874, align 8, !alias.scope !76, !noalias !73
  %875 = or i64 %852, 8
  %876 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %806, i64 %875
  %877 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %796, i64 %875
  %878 = bitcast %class.CXFA_Node** %877 to <2 x i64>*
  %879 = load <2 x i64>, <2 x i64>* %878, align 8, !alias.scope !73
  %880 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %877, i64 2
  %881 = bitcast %class.CXFA_Node** %880 to <2 x i64>*
  %882 = load <2 x i64>, <2 x i64>* %881, align 8, !alias.scope !73
  %883 = bitcast %"class.cppgc::internal::BasicMember.70"* %876 to <2 x i64>*
  store <2 x i64> %879, <2 x i64>* %883, align 8, !alias.scope !76, !noalias !73
  %884 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %876, i64 2
  %885 = bitcast %"class.cppgc::internal::BasicMember.70"* %884 to <2 x i64>*
  store <2 x i64> %882, <2 x i64>* %885, align 8, !alias.scope !76, !noalias !73
  %886 = or i64 %852, 12
  %887 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %806, i64 %886
  %888 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %796, i64 %886
  %889 = bitcast %class.CXFA_Node** %888 to <2 x i64>*
  %890 = load <2 x i64>, <2 x i64>* %889, align 8, !alias.scope !73
  %891 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %888, i64 2
  %892 = bitcast %class.CXFA_Node** %891 to <2 x i64>*
  %893 = load <2 x i64>, <2 x i64>* %892, align 8, !alias.scope !73
  %894 = bitcast %"class.cppgc::internal::BasicMember.70"* %887 to <2 x i64>*
  store <2 x i64> %890, <2 x i64>* %894, align 8, !alias.scope !76, !noalias !73
  %895 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %887, i64 2
  %896 = bitcast %"class.cppgc::internal::BasicMember.70"* %895 to <2 x i64>*
  store <2 x i64> %893, <2 x i64>* %896, align 8, !alias.scope !76, !noalias !73
  %897 = add i64 %852, 16
  %898 = add i64 %853, -4
  %899 = icmp eq i64 %898, 0
  br i1 %899, label %900, label %851, !llvm.loop !78

900:                                              ; preds = %851, %840
  %901 = phi i64 [ 0, %840 ], [ %897, %851 ]
  %902 = icmp eq i64 %847, 0
  br i1 %902, label %919, label %903

903:                                              ; preds = %900, %903
  %904 = phi i64 [ %916, %903 ], [ %901, %900 ]
  %905 = phi i64 [ %917, %903 ], [ %847, %900 ]
  %906 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %806, i64 %904
  %907 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %796, i64 %904
  %908 = bitcast %class.CXFA_Node** %907 to <2 x i64>*
  %909 = load <2 x i64>, <2 x i64>* %908, align 8, !alias.scope !73
  %910 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %907, i64 2
  %911 = bitcast %class.CXFA_Node** %910 to <2 x i64>*
  %912 = load <2 x i64>, <2 x i64>* %911, align 8, !alias.scope !73
  %913 = bitcast %"class.cppgc::internal::BasicMember.70"* %906 to <2 x i64>*
  store <2 x i64> %909, <2 x i64>* %913, align 8, !alias.scope !76, !noalias !73
  %914 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %906, i64 2
  %915 = bitcast %"class.cppgc::internal::BasicMember.70"* %914 to <2 x i64>*
  store <2 x i64> %912, <2 x i64>* %915, align 8, !alias.scope !76, !noalias !73
  %916 = add i64 %904, 4
  %917 = add i64 %905, -1
  %918 = icmp eq i64 %917, 0
  br i1 %918, label %919, label %903, !llvm.loop !79

919:                                              ; preds = %903, %900
  %920 = icmp eq i64 %822, %841
  br i1 %920, label %992, label %921

921:                                              ; preds = %919, %824, %815
  %922 = phi %"class.cppgc::internal::BasicMember.70"* [ %806, %824 ], [ %806, %815 ], [ %842, %919 ]
  %923 = phi %class.CXFA_Node** [ %796, %824 ], [ %796, %815 ], [ %843, %919 ]
  %924 = ptrtoint %class.CXFA_Node** %923 to i64
  %925 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %798, i64 -1
  %926 = ptrtoint %class.CXFA_Node** %925 to i64
  %927 = sub i64 %926, %924
  %928 = lshr i64 %927, 3
  %929 = add nuw nsw i64 %928, 1
  %930 = and i64 %929, 7
  %931 = icmp eq i64 %930, 0
  br i1 %931, label %943, label %932

932:                                              ; preds = %921, %932
  %933 = phi %"class.cppgc::internal::BasicMember.70"* [ %940, %932 ], [ %922, %921 ]
  %934 = phi %class.CXFA_Node** [ %939, %932 ], [ %923, %921 ]
  %935 = phi i64 [ %941, %932 ], [ %930, %921 ]
  %936 = bitcast %"class.cppgc::internal::BasicMember.70"* %933 to i64*
  %937 = bitcast %class.CXFA_Node** %934 to i64*
  %938 = load i64, i64* %937, align 8
  store i64 %938, i64* %936, align 8
  %939 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %934, i64 1
  %940 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %933, i64 1
  %941 = add i64 %935, -1
  %942 = icmp eq i64 %941, 0
  br i1 %942, label %943, label %932, !llvm.loop !80

943:                                              ; preds = %932, %921
  %944 = phi %"class.cppgc::internal::BasicMember.70"* [ undef, %921 ], [ %940, %932 ]
  %945 = phi %"class.cppgc::internal::BasicMember.70"* [ %922, %921 ], [ %940, %932 ]
  %946 = phi %class.CXFA_Node** [ %923, %921 ], [ %939, %932 ]
  %947 = icmp ult i64 %927, 56
  br i1 %947, label %992, label %948

948:                                              ; preds = %943, %948
  %949 = phi %"class.cppgc::internal::BasicMember.70"* [ %990, %948 ], [ %945, %943 ]
  %950 = phi %class.CXFA_Node** [ %989, %948 ], [ %946, %943 ]
  %951 = bitcast %"class.cppgc::internal::BasicMember.70"* %949 to i64*
  %952 = bitcast %class.CXFA_Node** %950 to i64*
  %953 = load i64, i64* %952, align 8
  store i64 %953, i64* %951, align 8
  %954 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %950, i64 1
  %955 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %949, i64 1
  %956 = bitcast %"class.cppgc::internal::BasicMember.70"* %955 to i64*
  %957 = bitcast %class.CXFA_Node** %954 to i64*
  %958 = load i64, i64* %957, align 8
  store i64 %958, i64* %956, align 8
  %959 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %950, i64 2
  %960 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %949, i64 2
  %961 = bitcast %"class.cppgc::internal::BasicMember.70"* %960 to i64*
  %962 = bitcast %class.CXFA_Node** %959 to i64*
  %963 = load i64, i64* %962, align 8
  store i64 %963, i64* %961, align 8
  %964 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %950, i64 3
  %965 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %949, i64 3
  %966 = bitcast %"class.cppgc::internal::BasicMember.70"* %965 to i64*
  %967 = bitcast %class.CXFA_Node** %964 to i64*
  %968 = load i64, i64* %967, align 8
  store i64 %968, i64* %966, align 8
  %969 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %950, i64 4
  %970 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %949, i64 4
  %971 = bitcast %"class.cppgc::internal::BasicMember.70"* %970 to i64*
  %972 = bitcast %class.CXFA_Node** %969 to i64*
  %973 = load i64, i64* %972, align 8
  store i64 %973, i64* %971, align 8
  %974 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %950, i64 5
  %975 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %949, i64 5
  %976 = bitcast %"class.cppgc::internal::BasicMember.70"* %975 to i64*
  %977 = bitcast %class.CXFA_Node** %974 to i64*
  %978 = load i64, i64* %977, align 8
  store i64 %978, i64* %976, align 8
  %979 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %950, i64 6
  %980 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %949, i64 6
  %981 = bitcast %"class.cppgc::internal::BasicMember.70"* %980 to i64*
  %982 = bitcast %class.CXFA_Node** %979 to i64*
  %983 = load i64, i64* %982, align 8
  store i64 %983, i64* %981, align 8
  %984 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %950, i64 7
  %985 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %949, i64 7
  %986 = bitcast %"class.cppgc::internal::BasicMember.70"* %985 to i64*
  %987 = bitcast %class.CXFA_Node** %984 to i64*
  %988 = load i64, i64* %987, align 8
  store i64 %988, i64* %986, align 8
  %989 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %950, i64 8
  %990 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %949, i64 8
  %991 = icmp eq %class.CXFA_Node** %989, %798
  br i1 %991, label %992, label %948, !llvm.loop !81

992:                                              ; preds = %943, %948, %919
  %993 = phi %"class.cppgc::internal::BasicMember.70"* [ %842, %919 ], [ %944, %943 ], [ %990, %948 ]
  %994 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %993 to i64
  %995 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %793, align 8
  br label %996

996:                                              ; preds = %992, %804
  %997 = phi %"class.cppgc::internal::BasicMember.70"* [ %790, %804 ], [ %995, %992 ]
  %998 = phi i64 [ %813, %804 ], [ %994, %992 ]
  store i64 %998, i64* %812, align 8
  br label %999

999:                                              ; preds = %791, %996
  %1000 = phi i64 [ 0, %791 ], [ %998, %996 ]
  %1001 = phi i64 [ 0, %791 ], [ %813, %996 ]
  %1002 = phi %"class.cppgc::internal::BasicMember.70"* [ %790, %791 ], [ %997, %996 ]
  %1003 = icmp eq %"class.cppgc::internal::BasicMember.70"* %1002, null
  br i1 %1003, label %1013, label %1004

1004:                                             ; preds = %999
  %1005 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %1002 to i64
  store i64 %1005, i64* %36, align 8
  %1006 = bitcast %"class.cppgc::internal::BasicMember.70"* %1002 to i8*
  call void @_ZdlPv(i8* %1006) #10
  %1007 = bitcast %"class.std::__1::vector.90"* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1007, i8 0, i64 24, i1 false) #11
  %1008 = bitcast %"class.std::__1::vector.90"* %11 to i64*
  %1009 = load i64, i64* %1008, align 8
  %1010 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %11, i64 0, i32 0, i32 1
  %1011 = bitcast %"class.cppgc::internal::BasicMember.70"** %1010 to i64*
  %1012 = load i64, i64* %1011, align 8
  br label %1013

1013:                                             ; preds = %1004, %999
  %1014 = phi i64 [ %1012, %1004 ], [ %1000, %999 ]
  %1015 = phi i64 [ %1009, %1004 ], [ %1001, %999 ]
  store i64 %1015, i64* %38, align 8
  store i64 %1014, i64* %36, align 8
  %1016 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  %1017 = bitcast %"class.cppgc::internal::BasicMember.70"** %1016 to i64*
  %1018 = load i64, i64* %1017, align 8
  %1019 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2, i32 0, i32 2, i32 0, i32 0
  %1020 = bitcast %"class.cppgc::internal::BasicMember.70"** %1019 to i64*
  store i64 %1018, i64* %1020, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %795) #11
  %1021 = ptrtoint %class.CXFA_Object* %794 to i64
  %1022 = inttoptr i64 %1015 to i64*
  store atomic i64 %1021, i64* %1022 monotonic, align 8
  %1023 = bitcast %class.CXFA_Object* %794 to i8*
  %1024 = and i64 %1021, -4294967296
  %1025 = sub i64 %1015, %1024
  %1026 = icmp ult i64 %1025, 4294967297
  br i1 %1026, label %1027, label %1033

1027:                                             ; preds = %1013
  %1028 = inttoptr i64 %1024 to %"struct.cppgc::internal::CagedHeapLocalData"*
  %1029 = getelementptr inbounds %"struct.cppgc::internal::CagedHeapLocalData", %"struct.cppgc::internal::CagedHeapLocalData"* %1028, i64 0, i32 0
  %1030 = load i8, i8* %1029, align 536870912, !range !13
  %1031 = icmp eq i8 %1030, 1
  br i1 %1031, label %1032, label %1033, !prof !57

1032:                                             ; preds = %1027
  call void @_ZN5cppgc8internal12WriteBarrier26DijkstraMarkingBarrierSlowEPKv(i8* %1023) #11
  br label %1033

1033:                                             ; preds = %1032, %1027, %1013, %780
  %1034 = icmp eq i64 %781, 0
  br i1 %1034, label %1037, label %1035

1035:                                             ; preds = %1033
  %1036 = inttoptr i64 %781 to i8*
  call void @_ZdlPv(i8* %1036) #10
  br label %1037

1037:                                             ; preds = %760, %1033, %1035
  call void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"* nonnull %12, %"class.fxcrt::WideString"* dereferenceable(8) %48) #11
  call void @_ZN23CFXJSE_ResolveProcessor15FilterConditionEPN2v87IsolateEN5fxcrt10WideStringEP22CFXJSE_ResolveNodeData(%class.CFXJSE_ResolveProcessor* %0, %"class.v8::Isolate"* %1, %"class.fxcrt::WideString"* nonnull %12, %class.CFXJSE_ResolveNodeData* %2)
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %12) #11
  %1038 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %34, i64 0, i32 0, i32 0
  %1039 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %1038, align 8
  %1040 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %35, align 8
  %1041 = icmp ne %"class.cppgc::internal::BasicMember.70"* %1039, %1040
  br label %2748

1042:                                             ; preds = %465, %381
  %1043 = and i32 %44, 4
  %1044 = icmp eq i32 %1043, 0
  br i1 %1044, label %1061, label %1045

1045:                                             ; preds = %1042
  %1046 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %31, i64 0, i32 0
  %1047 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1048 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %1047, align 8, !noalias !82
  %1049 = icmp eq %"class.fxcrt::StringDataTemplate"* %1048, null
  %1050 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %1048, i64 0, i32 3
  %1051 = select i1 %1049, [1 x i32]* @.str.2, [1 x i32]* %1050
  %1052 = getelementptr inbounds [1 x i32], [1 x i32]* %1051, i64 0, i64 0
  br i1 %1049, label %1056, label %1053

1053:                                             ; preds = %1045
  %1054 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %1048, i64 0, i32 1
  %1055 = load i64, i64* %1054, align 8, !noalias !82
  br label %1056

1056:                                             ; preds = %1045, %1053
  %1057 = phi i64 [ %1055, %1053 ], [ 0, %1045 ]
  %1058 = getelementptr inbounds %"class.fxcrt::StringViewTemplate.97", %"class.fxcrt::StringViewTemplate.97"* %13, i64 0, i32 0, i32 0, i32 0
  store i32* %1052, i32** %1058, align 8, !alias.scope !82
  %1059 = getelementptr inbounds %"class.fxcrt::StringViewTemplate.97", %"class.fxcrt::StringViewTemplate.97"* %13, i64 0, i32 0, i32 1
  store i64 %1057, i64* %1059, align 8, !alias.scope !82
  %1060 = call zeroext i1 @_ZN23CFXJSE_ResolveProcessor21ResolveForAttributeRsEP11CXFA_ObjectPN13CFXJSE_Engine13ResolveResultEN5fxcrt18StringViewTemplateIwEE(%class.CFXJSE_ResolveProcessor* undef, %class.CXFA_Object* %1046, %"class.CFXJSE_Engine::ResolveResult"* %33, %"class.fxcrt::StringViewTemplate.97"* nonnull %13)
  br i1 %1060, label %2748, label %1061

1061:                                             ; preds = %1042, %1056
  br i1 %382, label %1062, label %1531

1062:                                             ; preds = %1061
  %1063 = load %class.CXFA_Node**, %class.CXFA_Node*** %72, align 8
  %1064 = load %class.CXFA_Node**, %class.CXFA_Node*** %73, align 8
  %1065 = icmp eq %class.CXFA_Node** %1063, %1064
  br i1 %1065, label %1070, label %1066

1066:                                             ; preds = %1062
  %1067 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2, i32 0, i32 2, i32 0, i32 0
  %1068 = bitcast %"class.cppgc::internal::BasicMember.70"** %1067 to i64*
  %1069 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %34, i64 0, i32 0, i32 0
  br label %1076

1070:                                             ; preds = %1344, %1062
  %1071 = load i64, i64* %36, align 8
  %1072 = load i64, i64* %38, align 8
  %1073 = sub i64 %1071, %1072
  %1074 = ashr exact i64 %1073, 3
  %1075 = icmp ugt i64 %1074, %41
  br i1 %1075, label %1347, label %1352

1076:                                             ; preds = %1066, %1344
  %1077 = phi %class.CXFA_Node** [ %1063, %1066 ], [ %1345, %1344 ]
  %1078 = load %class.CXFA_Node*, %class.CXFA_Node** %1077, align 8
  %1079 = ptrtoint %class.CXFA_Node* %1078 to i64
  %1080 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %1078, i64 0, i32 13
  %1081 = load i32, i32* %1080, align 4
  %1082 = icmp eq i32 %1081, 0
  br i1 %1082, label %1083, label %1213

1083:                                             ; preds = %1076
  %1084 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %1078, i64 0, i32 0, i32 4
  %1085 = load i32, i32* %1084, align 8
  %1086 = icmp eq i32 %1085, %47
  br i1 %1086, label %1087, label %1344

1087:                                             ; preds = %1083
  %1088 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %35, align 8
  %1089 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %1067, align 8
  %1090 = icmp ult %"class.cppgc::internal::BasicMember.70"* %1088, %1089
  %1091 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %1089 to i64
  br i1 %1090, label %1092, label %1096

1092:                                             ; preds = %1087
  %1093 = bitcast %"class.cppgc::internal::BasicMember.70"* %1088 to i64*
  store i64 %1079, i64* %1093, align 8
  %1094 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1088, i64 1
  %1095 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %1094 to i64
  store i64 %1095, i64* %36, align 8
  br label %1344

1096:                                             ; preds = %1087
  %1097 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %1088 to i64
  %1098 = load i64, i64* %38, align 8
  %1099 = sub i64 %1097, %1098
  %1100 = ashr exact i64 %1099, 3
  %1101 = add nsw i64 %1100, 1
  %1102 = icmp ugt i64 %1101, 2305843009213693951
  br i1 %1102, label %1103, label %1105

1103:                                             ; preds = %1096
  %1104 = bitcast %"class.std::__1::vector.90"* %34 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1104) #12
  unreachable

1105:                                             ; preds = %1096
  %1106 = sub i64 %1091, %1098
  %1107 = ashr exact i64 %1106, 3
  %1108 = icmp ult i64 %1107, 1152921504606846975
  br i1 %1108, label %1109, label %1117

1109:                                             ; preds = %1105
  %1110 = ashr exact i64 %1106, 2
  %1111 = icmp ult i64 %1110, %1101
  %1112 = select i1 %1111, i64 %1101, i64 %1110
  %1113 = icmp eq i64 %1112, 0
  br i1 %1113, label %1122, label %1114

1114:                                             ; preds = %1109
  %1115 = icmp ugt i64 %1112, 2305843009213693951
  br i1 %1115, label %1116, label %1117

1116:                                             ; preds = %1114
  call void @abort() #12
  unreachable

1117:                                             ; preds = %1114, %1105
  %1118 = phi i64 [ %1112, %1114 ], [ 2305843009213693951, %1105 ]
  %1119 = shl i64 %1118, 3
  %1120 = call i8* @_Znwm(i64 %1119) #10
  %1121 = bitcast i8* %1120 to %"class.cppgc::internal::BasicMember.70"*
  br label %1122

1122:                                             ; preds = %1117, %1109
  %1123 = phi i64 [ %1118, %1117 ], [ 0, %1109 ]
  %1124 = phi %"class.cppgc::internal::BasicMember.70"* [ %1121, %1117 ], [ null, %1109 ]
  %1125 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1124, i64 %1100
  %1126 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1124, i64 %1123
  %1127 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %1126 to i64
  %1128 = bitcast %"class.cppgc::internal::BasicMember.70"* %1125 to i64*
  store i64 %1079, i64* %1128, align 8
  %1129 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1125, i64 1
  %1130 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %1129 to i64
  %1131 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %1069, align 8
  %1132 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %1131 to i64
  %1133 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %35, align 8
  %1134 = icmp eq %"class.cppgc::internal::BasicMember.70"* %1133, %1131
  br i1 %1134, label %1206, label %1135

1135:                                             ; preds = %1122
  %1136 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1133, i64 -1
  %1137 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %1136 to i64
  %1138 = sub i64 %1137, %1132
  %1139 = lshr i64 %1138, 3
  %1140 = add nuw nsw i64 %1139, 1
  %1141 = and i64 %1140, 7
  %1142 = icmp eq i64 %1141, 0
  br i1 %1142, label %1154, label %1143

1143:                                             ; preds = %1135, %1143
  %1144 = phi %"class.cppgc::internal::BasicMember.70"* [ %1147, %1143 ], [ %1125, %1135 ]
  %1145 = phi %"class.cppgc::internal::BasicMember.70"* [ %1148, %1143 ], [ %1133, %1135 ]
  %1146 = phi i64 [ %1152, %1143 ], [ %1141, %1135 ]
  %1147 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1144, i64 -1
  %1148 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1145, i64 -1
  %1149 = bitcast %"class.cppgc::internal::BasicMember.70"* %1148 to i64*
  %1150 = load i64, i64* %1149, align 8
  %1151 = bitcast %"class.cppgc::internal::BasicMember.70"* %1147 to i64*
  store i64 %1150, i64* %1151, align 8
  store atomic i64 0, i64* %1149 monotonic, align 8
  %1152 = add i64 %1146, -1
  %1153 = icmp eq i64 %1152, 0
  br i1 %1153, label %1154, label %1143, !llvm.loop !85

1154:                                             ; preds = %1143, %1135
  %1155 = phi %"class.cppgc::internal::BasicMember.70"* [ undef, %1135 ], [ %1147, %1143 ]
  %1156 = phi %"class.cppgc::internal::BasicMember.70"* [ %1125, %1135 ], [ %1147, %1143 ]
  %1157 = phi %"class.cppgc::internal::BasicMember.70"* [ %1133, %1135 ], [ %1148, %1143 ]
  %1158 = icmp ult i64 %1138, 56
  br i1 %1158, label %1203, label %1159

1159:                                             ; preds = %1154, %1159
  %1160 = phi %"class.cppgc::internal::BasicMember.70"* [ %1197, %1159 ], [ %1156, %1154 ]
  %1161 = phi %"class.cppgc::internal::BasicMember.70"* [ %1198, %1159 ], [ %1157, %1154 ]
  %1162 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1160, i64 -1
  %1163 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1161, i64 -1
  %1164 = bitcast %"class.cppgc::internal::BasicMember.70"* %1163 to i64*
  %1165 = load i64, i64* %1164, align 8
  %1166 = bitcast %"class.cppgc::internal::BasicMember.70"* %1162 to i64*
  store i64 %1165, i64* %1166, align 8
  store atomic i64 0, i64* %1164 monotonic, align 8
  %1167 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1160, i64 -2
  %1168 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1161, i64 -2
  %1169 = bitcast %"class.cppgc::internal::BasicMember.70"* %1168 to i64*
  %1170 = load i64, i64* %1169, align 8
  %1171 = bitcast %"class.cppgc::internal::BasicMember.70"* %1167 to i64*
  store i64 %1170, i64* %1171, align 8
  store atomic i64 0, i64* %1169 monotonic, align 8
  %1172 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1160, i64 -3
  %1173 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1161, i64 -3
  %1174 = bitcast %"class.cppgc::internal::BasicMember.70"* %1173 to i64*
  %1175 = load i64, i64* %1174, align 8
  %1176 = bitcast %"class.cppgc::internal::BasicMember.70"* %1172 to i64*
  store i64 %1175, i64* %1176, align 8
  store atomic i64 0, i64* %1174 monotonic, align 8
  %1177 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1160, i64 -4
  %1178 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1161, i64 -4
  %1179 = bitcast %"class.cppgc::internal::BasicMember.70"* %1178 to i64*
  %1180 = load i64, i64* %1179, align 8
  %1181 = bitcast %"class.cppgc::internal::BasicMember.70"* %1177 to i64*
  store i64 %1180, i64* %1181, align 8
  store atomic i64 0, i64* %1179 monotonic, align 8
  %1182 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1160, i64 -5
  %1183 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1161, i64 -5
  %1184 = bitcast %"class.cppgc::internal::BasicMember.70"* %1183 to i64*
  %1185 = load i64, i64* %1184, align 8
  %1186 = bitcast %"class.cppgc::internal::BasicMember.70"* %1182 to i64*
  store i64 %1185, i64* %1186, align 8
  store atomic i64 0, i64* %1184 monotonic, align 8
  %1187 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1160, i64 -6
  %1188 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1161, i64 -6
  %1189 = bitcast %"class.cppgc::internal::BasicMember.70"* %1188 to i64*
  %1190 = load i64, i64* %1189, align 8
  %1191 = bitcast %"class.cppgc::internal::BasicMember.70"* %1187 to i64*
  store i64 %1190, i64* %1191, align 8
  store atomic i64 0, i64* %1189 monotonic, align 8
  %1192 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1160, i64 -7
  %1193 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1161, i64 -7
  %1194 = bitcast %"class.cppgc::internal::BasicMember.70"* %1193 to i64*
  %1195 = load i64, i64* %1194, align 8
  %1196 = bitcast %"class.cppgc::internal::BasicMember.70"* %1192 to i64*
  store i64 %1195, i64* %1196, align 8
  store atomic i64 0, i64* %1194 monotonic, align 8
  %1197 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1160, i64 -8
  %1198 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1161, i64 -8
  %1199 = bitcast %"class.cppgc::internal::BasicMember.70"* %1198 to i64*
  %1200 = load i64, i64* %1199, align 8
  %1201 = bitcast %"class.cppgc::internal::BasicMember.70"* %1197 to i64*
  store i64 %1200, i64* %1201, align 8
  store atomic i64 0, i64* %1199 monotonic, align 8
  %1202 = icmp eq %"class.cppgc::internal::BasicMember.70"* %1198, %1131
  br i1 %1202, label %1203, label %1159

1203:                                             ; preds = %1159, %1154
  %1204 = phi %"class.cppgc::internal::BasicMember.70"* [ %1155, %1154 ], [ %1197, %1159 ]
  %1205 = load i64, i64* %38, align 8
  br label %1206

1206:                                             ; preds = %1122, %1203
  %1207 = phi %"class.cppgc::internal::BasicMember.70"* [ %1204, %1203 ], [ %1125, %1122 ]
  %1208 = phi i64 [ %1205, %1203 ], [ %1132, %1122 ]
  %1209 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %1207 to i64
  store i64 %1209, i64* %38, align 8
  store i64 %1130, i64* %36, align 8
  store i64 %1127, i64* %1068, align 8
  %1210 = icmp eq i64 %1208, 0
  br i1 %1210, label %1344, label %1211

1211:                                             ; preds = %1206
  %1212 = inttoptr i64 %1208 to i8*
  call void @_ZdlPv(i8* %1212) #10
  br label %1344

1213:                                             ; preds = %1076
  %1214 = icmp eq i32 %1081, %47
  br i1 %1214, label %1215, label %1344

1215:                                             ; preds = %1213
  %1216 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %1078, i64 0, i32 0, i32 2
  %1217 = load i16, i16* %1216, align 4
  switch i16 %1217, label %1218 [
    i16 264, label %1344
    i16 303, label %1344
  ]

1218:                                             ; preds = %1215
  %1219 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %35, align 8
  %1220 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %1067, align 8
  %1221 = icmp ult %"class.cppgc::internal::BasicMember.70"* %1219, %1220
  %1222 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %1220 to i64
  br i1 %1221, label %1223, label %1227

1223:                                             ; preds = %1218
  %1224 = bitcast %"class.cppgc::internal::BasicMember.70"* %1219 to i64*
  store i64 %1079, i64* %1224, align 8
  %1225 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1219, i64 1
  %1226 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %1225 to i64
  store i64 %1226, i64* %36, align 8
  br label %1344

1227:                                             ; preds = %1218
  %1228 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %1219 to i64
  %1229 = load i64, i64* %38, align 8
  %1230 = sub i64 %1228, %1229
  %1231 = ashr exact i64 %1230, 3
  %1232 = add nsw i64 %1231, 1
  %1233 = icmp ugt i64 %1232, 2305843009213693951
  br i1 %1233, label %1234, label %1236

1234:                                             ; preds = %1227
  %1235 = bitcast %"class.std::__1::vector.90"* %34 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1235) #12
  unreachable

1236:                                             ; preds = %1227
  %1237 = sub i64 %1222, %1229
  %1238 = ashr exact i64 %1237, 3
  %1239 = icmp ult i64 %1238, 1152921504606846975
  br i1 %1239, label %1240, label %1248

1240:                                             ; preds = %1236
  %1241 = ashr exact i64 %1237, 2
  %1242 = icmp ult i64 %1241, %1232
  %1243 = select i1 %1242, i64 %1232, i64 %1241
  %1244 = icmp eq i64 %1243, 0
  br i1 %1244, label %1253, label %1245

1245:                                             ; preds = %1240
  %1246 = icmp ugt i64 %1243, 2305843009213693951
  br i1 %1246, label %1247, label %1248

1247:                                             ; preds = %1245
  call void @abort() #12
  unreachable

1248:                                             ; preds = %1245, %1236
  %1249 = phi i64 [ %1243, %1245 ], [ 2305843009213693951, %1236 ]
  %1250 = shl i64 %1249, 3
  %1251 = call i8* @_Znwm(i64 %1250) #10
  %1252 = bitcast i8* %1251 to %"class.cppgc::internal::BasicMember.70"*
  br label %1253

1253:                                             ; preds = %1248, %1240
  %1254 = phi i64 [ %1249, %1248 ], [ 0, %1240 ]
  %1255 = phi %"class.cppgc::internal::BasicMember.70"* [ %1252, %1248 ], [ null, %1240 ]
  %1256 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1255, i64 %1231
  %1257 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1255, i64 %1254
  %1258 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %1257 to i64
  %1259 = bitcast %"class.cppgc::internal::BasicMember.70"* %1256 to i64*
  store i64 %1079, i64* %1259, align 8
  %1260 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1256, i64 1
  %1261 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %1260 to i64
  %1262 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %1069, align 8
  %1263 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %1262 to i64
  %1264 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %35, align 8
  %1265 = icmp eq %"class.cppgc::internal::BasicMember.70"* %1264, %1262
  br i1 %1265, label %1337, label %1266

1266:                                             ; preds = %1253
  %1267 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1264, i64 -1
  %1268 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %1267 to i64
  %1269 = sub i64 %1268, %1263
  %1270 = lshr i64 %1269, 3
  %1271 = add nuw nsw i64 %1270, 1
  %1272 = and i64 %1271, 7
  %1273 = icmp eq i64 %1272, 0
  br i1 %1273, label %1285, label %1274

1274:                                             ; preds = %1266, %1274
  %1275 = phi %"class.cppgc::internal::BasicMember.70"* [ %1278, %1274 ], [ %1256, %1266 ]
  %1276 = phi %"class.cppgc::internal::BasicMember.70"* [ %1279, %1274 ], [ %1264, %1266 ]
  %1277 = phi i64 [ %1283, %1274 ], [ %1272, %1266 ]
  %1278 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1275, i64 -1
  %1279 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1276, i64 -1
  %1280 = bitcast %"class.cppgc::internal::BasicMember.70"* %1279 to i64*
  %1281 = load i64, i64* %1280, align 8
  %1282 = bitcast %"class.cppgc::internal::BasicMember.70"* %1278 to i64*
  store i64 %1281, i64* %1282, align 8
  store atomic i64 0, i64* %1280 monotonic, align 8
  %1283 = add i64 %1277, -1
  %1284 = icmp eq i64 %1283, 0
  br i1 %1284, label %1285, label %1274, !llvm.loop !86

1285:                                             ; preds = %1274, %1266
  %1286 = phi %"class.cppgc::internal::BasicMember.70"* [ undef, %1266 ], [ %1278, %1274 ]
  %1287 = phi %"class.cppgc::internal::BasicMember.70"* [ %1256, %1266 ], [ %1278, %1274 ]
  %1288 = phi %"class.cppgc::internal::BasicMember.70"* [ %1264, %1266 ], [ %1279, %1274 ]
  %1289 = icmp ult i64 %1269, 56
  br i1 %1289, label %1334, label %1290

1290:                                             ; preds = %1285, %1290
  %1291 = phi %"class.cppgc::internal::BasicMember.70"* [ %1328, %1290 ], [ %1287, %1285 ]
  %1292 = phi %"class.cppgc::internal::BasicMember.70"* [ %1329, %1290 ], [ %1288, %1285 ]
  %1293 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1291, i64 -1
  %1294 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1292, i64 -1
  %1295 = bitcast %"class.cppgc::internal::BasicMember.70"* %1294 to i64*
  %1296 = load i64, i64* %1295, align 8
  %1297 = bitcast %"class.cppgc::internal::BasicMember.70"* %1293 to i64*
  store i64 %1296, i64* %1297, align 8
  store atomic i64 0, i64* %1295 monotonic, align 8
  %1298 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1291, i64 -2
  %1299 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1292, i64 -2
  %1300 = bitcast %"class.cppgc::internal::BasicMember.70"* %1299 to i64*
  %1301 = load i64, i64* %1300, align 8
  %1302 = bitcast %"class.cppgc::internal::BasicMember.70"* %1298 to i64*
  store i64 %1301, i64* %1302, align 8
  store atomic i64 0, i64* %1300 monotonic, align 8
  %1303 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1291, i64 -3
  %1304 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1292, i64 -3
  %1305 = bitcast %"class.cppgc::internal::BasicMember.70"* %1304 to i64*
  %1306 = load i64, i64* %1305, align 8
  %1307 = bitcast %"class.cppgc::internal::BasicMember.70"* %1303 to i64*
  store i64 %1306, i64* %1307, align 8
  store atomic i64 0, i64* %1305 monotonic, align 8
  %1308 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1291, i64 -4
  %1309 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1292, i64 -4
  %1310 = bitcast %"class.cppgc::internal::BasicMember.70"* %1309 to i64*
  %1311 = load i64, i64* %1310, align 8
  %1312 = bitcast %"class.cppgc::internal::BasicMember.70"* %1308 to i64*
  store i64 %1311, i64* %1312, align 8
  store atomic i64 0, i64* %1310 monotonic, align 8
  %1313 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1291, i64 -5
  %1314 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1292, i64 -5
  %1315 = bitcast %"class.cppgc::internal::BasicMember.70"* %1314 to i64*
  %1316 = load i64, i64* %1315, align 8
  %1317 = bitcast %"class.cppgc::internal::BasicMember.70"* %1313 to i64*
  store i64 %1316, i64* %1317, align 8
  store atomic i64 0, i64* %1315 monotonic, align 8
  %1318 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1291, i64 -6
  %1319 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1292, i64 -6
  %1320 = bitcast %"class.cppgc::internal::BasicMember.70"* %1319 to i64*
  %1321 = load i64, i64* %1320, align 8
  %1322 = bitcast %"class.cppgc::internal::BasicMember.70"* %1318 to i64*
  store i64 %1321, i64* %1322, align 8
  store atomic i64 0, i64* %1320 monotonic, align 8
  %1323 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1291, i64 -7
  %1324 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1292, i64 -7
  %1325 = bitcast %"class.cppgc::internal::BasicMember.70"* %1324 to i64*
  %1326 = load i64, i64* %1325, align 8
  %1327 = bitcast %"class.cppgc::internal::BasicMember.70"* %1323 to i64*
  store i64 %1326, i64* %1327, align 8
  store atomic i64 0, i64* %1325 monotonic, align 8
  %1328 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1291, i64 -8
  %1329 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1292, i64 -8
  %1330 = bitcast %"class.cppgc::internal::BasicMember.70"* %1329 to i64*
  %1331 = load i64, i64* %1330, align 8
  %1332 = bitcast %"class.cppgc::internal::BasicMember.70"* %1328 to i64*
  store i64 %1331, i64* %1332, align 8
  store atomic i64 0, i64* %1330 monotonic, align 8
  %1333 = icmp eq %"class.cppgc::internal::BasicMember.70"* %1329, %1262
  br i1 %1333, label %1334, label %1290

1334:                                             ; preds = %1290, %1285
  %1335 = phi %"class.cppgc::internal::BasicMember.70"* [ %1286, %1285 ], [ %1328, %1290 ]
  %1336 = load i64, i64* %38, align 8
  br label %1337

1337:                                             ; preds = %1253, %1334
  %1338 = phi %"class.cppgc::internal::BasicMember.70"* [ %1335, %1334 ], [ %1256, %1253 ]
  %1339 = phi i64 [ %1336, %1334 ], [ %1263, %1253 ]
  %1340 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %1338 to i64
  store i64 %1340, i64* %38, align 8
  store i64 %1261, i64* %36, align 8
  store i64 %1258, i64* %1068, align 8
  %1341 = icmp eq i64 %1339, 0
  br i1 %1341, label %1344, label %1342

1342:                                             ; preds = %1337
  %1343 = inttoptr i64 %1339 to i8*
  call void @_ZdlPv(i8* %1343) #10
  br label %1344

1344:                                             ; preds = %1215, %1215, %1342, %1337, %1223, %1211, %1206, %1092, %1213, %1083
  %1345 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %1077, i64 1
  %1346 = icmp eq %class.CXFA_Node** %1345, %1064
  br i1 %1346, label %1070, label %1076

1347:                                             ; preds = %1070
  call void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"* nonnull %14, %"class.fxcrt::WideString"* dereferenceable(8) %48) #11
  call void @_ZN23CFXJSE_ResolveProcessor15FilterConditionEPN2v87IsolateEN5fxcrt10WideStringEP22CFXJSE_ResolveNodeData(%class.CFXJSE_ResolveProcessor* %0, %"class.v8::Isolate"* %1, %"class.fxcrt::WideString"* nonnull %14, %class.CFXJSE_ResolveNodeData* %2)
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %14) #11
  %1348 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %34, i64 0, i32 0, i32 0
  %1349 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %1348, align 8
  %1350 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %35, align 8
  %1351 = icmp ne %"class.cppgc::internal::BasicMember.70"* %1349, %1350
  br label %2748

1352:                                             ; preds = %1070
  %1353 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %31, i64 0, i32 0, i32 2
  %1354 = load i16, i16* %1353, align 4
  %1355 = icmp eq i16 %1354, 124
  %1356 = icmp eq i32 %47, -135348708
  %1357 = and i1 %1356, %1355
  br i1 %1357, label %1358, label %1366

1358:                                             ; preds = %1352
  %1359 = call %class.CXFA_Node* @_ZN9CXFA_Node23GetInstanceMgrOfSubformEv(%class.CXFA_Node* %31) #11
  %1360 = icmp eq %class.CXFA_Node* %1359, null
  br i1 %1360, label %1531, label %1361

1361:                                             ; preds = %1358
  %1362 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %1359, i64 0, i32 0, i32 6
  %1363 = bitcast %"class.cppgc::internal::BasicMember.29"* %1362 to %class.CJX_Object**
  %1364 = load %class.CJX_Object*, %class.CJX_Object** %1363, align 8
  %1365 = call %class.CXFA_Node* @_ZN10CJX_Object27GetOrCreatePropertyInternalEi11XFA_Element(%class.CJX_Object* %1364, i32 0, i16 signext 295) #11
  br label %1392

1366:                                             ; preds = %1352
  %1367 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1368 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %1367, align 8, !noalias !87
  %1369 = icmp eq %"class.fxcrt::StringDataTemplate"* %1368, null
  %1370 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %1368, i64 0, i32 3
  %1371 = select i1 %1369, [1 x i32]* @.str.2, [1 x i32]* %1370
  %1372 = getelementptr inbounds [1 x i32], [1 x i32]* %1371, i64 0, i64 0
  br i1 %1369, label %1376, label %1373

1373:                                             ; preds = %1366
  %1374 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %1368, i64 0, i32 1
  %1375 = load i64, i64* %1374, align 8, !noalias !87
  br label %1376

1376:                                             ; preds = %1366, %1373
  %1377 = phi i64 [ %1375, %1373 ], [ 0, %1366 ]
  %1378 = getelementptr inbounds %"class.fxcrt::StringViewTemplate.97", %"class.fxcrt::StringViewTemplate.97"* %15, i64 0, i32 0, i32 0, i32 0
  store i32* %1372, i32** %1378, align 8, !alias.scope !87
  %1379 = getelementptr inbounds %"class.fxcrt::StringViewTemplate.97", %"class.fxcrt::StringViewTemplate.97"* %15, i64 0, i32 0, i32 1
  store i64 %1377, i64* %1379, align 8, !alias.scope !87
  %1380 = call signext i16 @_Z20XFA_GetElementByNameN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::StringViewTemplate.97"* nonnull %15) #11
  switch i16 %1380, label %1387 [
    i16 158, label %1381
    i16 -1, label %1531
  ]

1381:                                             ; preds = %1376
  %1382 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %31, i64 0, i32 0, i32 6
  %1383 = bitcast %"class.cppgc::internal::BasicMember.29"* %1382 to %class.CJX_Object**
  %1384 = load %class.CJX_Object*, %class.CJX_Object** %1383, align 8
  %1385 = call { %class.CXFA_Node*, i32 } @_ZNK10CJX_Object19GetPropertyInternalEi11XFA_Element(%class.CJX_Object* %1384, i32 0, i16 signext 158) #11
  %1386 = extractvalue { %class.CXFA_Node*, i32 } %1385, 0
  br label %1392

1387:                                             ; preds = %1376
  %1388 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %31, i64 0, i32 0, i32 6
  %1389 = bitcast %"class.cppgc::internal::BasicMember.29"* %1388 to %class.CJX_Object**
  %1390 = load %class.CJX_Object*, %class.CJX_Object** %1389, align 8
  %1391 = call %class.CXFA_Node* @_ZN10CJX_Object27GetOrCreatePropertyInternalEi11XFA_Element(%class.CJX_Object* %1390, i32 0, i16 signext %1380) #11
  br label %1392

1392:                                             ; preds = %1381, %1387, %1361
  %1393 = phi %class.CXFA_Node* [ %1365, %1361 ], [ %1391, %1387 ], [ %1386, %1381 ]
  %1394 = ptrtoint %class.CXFA_Node* %1393 to i64
  %1395 = icmp eq %class.CXFA_Node* %1393, null
  br i1 %1395, label %1531, label %1396

1396:                                             ; preds = %1392
  %1397 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %35, align 8
  %1398 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2, i32 0, i32 2, i32 0, i32 0
  %1399 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %1398, align 8
  %1400 = icmp ult %"class.cppgc::internal::BasicMember.70"* %1397, %1399
  %1401 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %1399 to i64
  br i1 %1400, label %1402, label %1406

1402:                                             ; preds = %1396
  %1403 = bitcast %"class.cppgc::internal::BasicMember.70"* %1397 to i64*
  store i64 %1394, i64* %1403, align 8
  %1404 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1397, i64 1
  %1405 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %1404 to i64
  store i64 %1405, i64* %36, align 8
  br label %1526

1406:                                             ; preds = %1396
  %1407 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %1397 to i64
  %1408 = load i64, i64* %38, align 8
  %1409 = sub i64 %1407, %1408
  %1410 = ashr exact i64 %1409, 3
  %1411 = add nsw i64 %1410, 1
  %1412 = icmp ugt i64 %1411, 2305843009213693951
  br i1 %1412, label %1413, label %1415

1413:                                             ; preds = %1406
  %1414 = bitcast %"class.std::__1::vector.90"* %34 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1414) #12
  unreachable

1415:                                             ; preds = %1406
  %1416 = bitcast %"class.cppgc::internal::BasicMember.70"** %1398 to i64*
  %1417 = sub i64 %1401, %1408
  %1418 = ashr exact i64 %1417, 3
  %1419 = icmp ult i64 %1418, 1152921504606846975
  br i1 %1419, label %1420, label %1428

1420:                                             ; preds = %1415
  %1421 = ashr exact i64 %1417, 2
  %1422 = icmp ult i64 %1421, %1411
  %1423 = select i1 %1422, i64 %1411, i64 %1421
  %1424 = icmp eq i64 %1423, 0
  br i1 %1424, label %1433, label %1425

1425:                                             ; preds = %1420
  %1426 = icmp ugt i64 %1423, 2305843009213693951
  br i1 %1426, label %1427, label %1428

1427:                                             ; preds = %1425
  call void @abort() #12
  unreachable

1428:                                             ; preds = %1425, %1415
  %1429 = phi i64 [ %1423, %1425 ], [ 2305843009213693951, %1415 ]
  %1430 = shl i64 %1429, 3
  %1431 = call i8* @_Znwm(i64 %1430) #10
  %1432 = bitcast i8* %1431 to %"class.cppgc::internal::BasicMember.70"*
  br label %1433

1433:                                             ; preds = %1428, %1420
  %1434 = phi i64 [ %1429, %1428 ], [ 0, %1420 ]
  %1435 = phi %"class.cppgc::internal::BasicMember.70"* [ %1432, %1428 ], [ null, %1420 ]
  %1436 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1435, i64 %1410
  %1437 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1435, i64 %1434
  %1438 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %1437 to i64
  %1439 = bitcast %"class.cppgc::internal::BasicMember.70"* %1436 to i64*
  store i64 %1394, i64* %1439, align 8
  %1440 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1436, i64 1
  %1441 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %1440 to i64
  %1442 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %34, i64 0, i32 0, i32 0
  %1443 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %1442, align 8
  %1444 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %1443 to i64
  %1445 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %35, align 8
  %1446 = icmp eq %"class.cppgc::internal::BasicMember.70"* %1445, %1443
  br i1 %1446, label %1518, label %1447

1447:                                             ; preds = %1433
  %1448 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1445, i64 -1, i32 0, i32 0
  %1449 = ptrtoint i8** %1448 to i64
  %1450 = sub i64 %1449, %1444
  %1451 = lshr i64 %1450, 3
  %1452 = add nuw nsw i64 %1451, 1
  %1453 = and i64 %1452, 7
  %1454 = icmp eq i64 %1453, 0
  br i1 %1454, label %1466, label %1455

1455:                                             ; preds = %1447, %1455
  %1456 = phi %"class.cppgc::internal::BasicMember.70"* [ %1459, %1455 ], [ %1436, %1447 ]
  %1457 = phi %"class.cppgc::internal::BasicMember.70"* [ %1460, %1455 ], [ %1445, %1447 ]
  %1458 = phi i64 [ %1464, %1455 ], [ %1453, %1447 ]
  %1459 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1456, i64 -1
  %1460 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1457, i64 -1
  %1461 = bitcast %"class.cppgc::internal::BasicMember.70"* %1460 to i64*
  %1462 = load i64, i64* %1461, align 8
  %1463 = bitcast %"class.cppgc::internal::BasicMember.70"* %1459 to i64*
  store i64 %1462, i64* %1463, align 8
  store atomic i64 0, i64* %1461 monotonic, align 8
  %1464 = add i64 %1458, -1
  %1465 = icmp eq i64 %1464, 0
  br i1 %1465, label %1466, label %1455, !llvm.loop !90

1466:                                             ; preds = %1455, %1447
  %1467 = phi %"class.cppgc::internal::BasicMember.70"* [ undef, %1447 ], [ %1459, %1455 ]
  %1468 = phi %"class.cppgc::internal::BasicMember.70"* [ %1436, %1447 ], [ %1459, %1455 ]
  %1469 = phi %"class.cppgc::internal::BasicMember.70"* [ %1445, %1447 ], [ %1460, %1455 ]
  %1470 = icmp ult i64 %1450, 56
  br i1 %1470, label %1515, label %1471

1471:                                             ; preds = %1466, %1471
  %1472 = phi %"class.cppgc::internal::BasicMember.70"* [ %1509, %1471 ], [ %1468, %1466 ]
  %1473 = phi %"class.cppgc::internal::BasicMember.70"* [ %1510, %1471 ], [ %1469, %1466 ]
  %1474 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1472, i64 -1
  %1475 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1473, i64 -1
  %1476 = bitcast %"class.cppgc::internal::BasicMember.70"* %1475 to i64*
  %1477 = load i64, i64* %1476, align 8
  %1478 = bitcast %"class.cppgc::internal::BasicMember.70"* %1474 to i64*
  store i64 %1477, i64* %1478, align 8
  store atomic i64 0, i64* %1476 monotonic, align 8
  %1479 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1472, i64 -2
  %1480 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1473, i64 -2
  %1481 = bitcast %"class.cppgc::internal::BasicMember.70"* %1480 to i64*
  %1482 = load i64, i64* %1481, align 8
  %1483 = bitcast %"class.cppgc::internal::BasicMember.70"* %1479 to i64*
  store i64 %1482, i64* %1483, align 8
  store atomic i64 0, i64* %1481 monotonic, align 8
  %1484 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1472, i64 -3
  %1485 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1473, i64 -3
  %1486 = bitcast %"class.cppgc::internal::BasicMember.70"* %1485 to i64*
  %1487 = load i64, i64* %1486, align 8
  %1488 = bitcast %"class.cppgc::internal::BasicMember.70"* %1484 to i64*
  store i64 %1487, i64* %1488, align 8
  store atomic i64 0, i64* %1486 monotonic, align 8
  %1489 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1472, i64 -4
  %1490 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1473, i64 -4
  %1491 = bitcast %"class.cppgc::internal::BasicMember.70"* %1490 to i64*
  %1492 = load i64, i64* %1491, align 8
  %1493 = bitcast %"class.cppgc::internal::BasicMember.70"* %1489 to i64*
  store i64 %1492, i64* %1493, align 8
  store atomic i64 0, i64* %1491 monotonic, align 8
  %1494 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1472, i64 -5
  %1495 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1473, i64 -5
  %1496 = bitcast %"class.cppgc::internal::BasicMember.70"* %1495 to i64*
  %1497 = load i64, i64* %1496, align 8
  %1498 = bitcast %"class.cppgc::internal::BasicMember.70"* %1494 to i64*
  store i64 %1497, i64* %1498, align 8
  store atomic i64 0, i64* %1496 monotonic, align 8
  %1499 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1472, i64 -6
  %1500 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1473, i64 -6
  %1501 = bitcast %"class.cppgc::internal::BasicMember.70"* %1500 to i64*
  %1502 = load i64, i64* %1501, align 8
  %1503 = bitcast %"class.cppgc::internal::BasicMember.70"* %1499 to i64*
  store i64 %1502, i64* %1503, align 8
  store atomic i64 0, i64* %1501 monotonic, align 8
  %1504 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1472, i64 -7
  %1505 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1473, i64 -7
  %1506 = bitcast %"class.cppgc::internal::BasicMember.70"* %1505 to i64*
  %1507 = load i64, i64* %1506, align 8
  %1508 = bitcast %"class.cppgc::internal::BasicMember.70"* %1504 to i64*
  store i64 %1507, i64* %1508, align 8
  store atomic i64 0, i64* %1506 monotonic, align 8
  %1509 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1472, i64 -8
  %1510 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1473, i64 -8
  %1511 = bitcast %"class.cppgc::internal::BasicMember.70"* %1510 to i64*
  %1512 = load i64, i64* %1511, align 8
  %1513 = bitcast %"class.cppgc::internal::BasicMember.70"* %1509 to i64*
  store i64 %1512, i64* %1513, align 8
  store atomic i64 0, i64* %1511 monotonic, align 8
  %1514 = icmp eq %"class.cppgc::internal::BasicMember.70"* %1510, %1443
  br i1 %1514, label %1515, label %1471

1515:                                             ; preds = %1471, %1466
  %1516 = phi %"class.cppgc::internal::BasicMember.70"* [ %1467, %1466 ], [ %1509, %1471 ]
  %1517 = load i64, i64* %38, align 8
  br label %1518

1518:                                             ; preds = %1433, %1515
  %1519 = phi %"class.cppgc::internal::BasicMember.70"* [ %1516, %1515 ], [ %1436, %1433 ]
  %1520 = phi i64 [ %1517, %1515 ], [ %1444, %1433 ]
  %1521 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %1519 to i64
  store i64 %1521, i64* %38, align 8
  store i64 %1441, i64* %36, align 8
  store i64 %1438, i64* %1416, align 8
  %1522 = icmp eq i64 %1520, 0
  br i1 %1522, label %1526, label %1523

1523:                                             ; preds = %1518
  %1524 = inttoptr i64 %1520 to i8*
  call void @_ZdlPv(i8* %1524) #10
  %1525 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %35, align 8
  br label %1526

1526:                                             ; preds = %1523, %1518, %1402
  %1527 = phi %"class.cppgc::internal::BasicMember.70"* [ %1525, %1523 ], [ %1440, %1518 ], [ %1404, %1402 ]
  %1528 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %34, i64 0, i32 0, i32 0
  %1529 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %1528, align 8
  %1530 = icmp ne %"class.cppgc::internal::BasicMember.70"* %1529, %1527
  br label %2748

1531:                                             ; preds = %1376, %1358, %1392, %1061
  %1532 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %31, i64 0, i32 1, i32 1, i32 1
  %1533 = bitcast %"class.cppgc::internal::BasicMember.30"* %1532 to %class.CXFA_Node**
  %1534 = load %class.CXFA_Node*, %class.CXFA_Node** %1533, align 8
  %1535 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %31, i64 0, i32 0, i32 4
  %1536 = load i32, i32* %1535, align 8
  %1537 = icmp eq %class.CXFA_Node* %1534, null
  br i1 %1537, label %1538, label %1675

1538:                                             ; preds = %1531
  %1539 = icmp eq i32 %1536, %47
  br i1 %1539, label %1540, label %1674

1540:                                             ; preds = %1538
  %1541 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %35, align 8
  %1542 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2, i32 0, i32 2, i32 0, i32 0
  %1543 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %1542, align 8
  %1544 = icmp ult %"class.cppgc::internal::BasicMember.70"* %1541, %1543
  %1545 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %1543 to i64
  br i1 %1544, label %1546, label %1550

1546:                                             ; preds = %1540
  %1547 = bitcast %"class.cppgc::internal::BasicMember.70"* %1541 to i64*
  store i64 %32, i64* %1547, align 8
  %1548 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1541, i64 1
  %1549 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %1548 to i64
  store i64 %1549, i64* %36, align 8
  br label %1669

1550:                                             ; preds = %1540
  %1551 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %1541 to i64
  %1552 = load i64, i64* %38, align 8
  %1553 = sub i64 %1551, %1552
  %1554 = ashr exact i64 %1553, 3
  %1555 = add nsw i64 %1554, 1
  %1556 = icmp ugt i64 %1555, 2305843009213693951
  br i1 %1556, label %1557, label %1559

1557:                                             ; preds = %1550
  %1558 = bitcast %"class.std::__1::vector.90"* %34 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1558) #12
  unreachable

1559:                                             ; preds = %1550
  %1560 = bitcast %"class.cppgc::internal::BasicMember.70"** %1542 to i64*
  %1561 = sub i64 %1545, %1552
  %1562 = ashr exact i64 %1561, 3
  %1563 = icmp ult i64 %1562, 1152921504606846975
  br i1 %1563, label %1564, label %1572

1564:                                             ; preds = %1559
  %1565 = ashr exact i64 %1561, 2
  %1566 = icmp ult i64 %1565, %1555
  %1567 = select i1 %1566, i64 %1555, i64 %1565
  %1568 = icmp eq i64 %1567, 0
  br i1 %1568, label %1577, label %1569

1569:                                             ; preds = %1564
  %1570 = icmp ugt i64 %1567, 2305843009213693951
  br i1 %1570, label %1571, label %1572

1571:                                             ; preds = %1569
  call void @abort() #12
  unreachable

1572:                                             ; preds = %1569, %1559
  %1573 = phi i64 [ %1567, %1569 ], [ 2305843009213693951, %1559 ]
  %1574 = shl i64 %1573, 3
  %1575 = call i8* @_Znwm(i64 %1574) #10
  %1576 = bitcast i8* %1575 to %"class.cppgc::internal::BasicMember.70"*
  br label %1577

1577:                                             ; preds = %1572, %1564
  %1578 = phi i64 [ %1573, %1572 ], [ 0, %1564 ]
  %1579 = phi %"class.cppgc::internal::BasicMember.70"* [ %1576, %1572 ], [ null, %1564 ]
  %1580 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1579, i64 %1554
  %1581 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1579, i64 %1578
  %1582 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %1581 to i64
  %1583 = bitcast %"class.cppgc::internal::BasicMember.70"* %1580 to i64*
  store i64 %32, i64* %1583, align 8
  %1584 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1580, i64 1
  %1585 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %1584 to i64
  %1586 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %34, i64 0, i32 0, i32 0
  %1587 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %1586, align 8
  %1588 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %1587 to i64
  %1589 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %35, align 8
  %1590 = icmp eq %"class.cppgc::internal::BasicMember.70"* %1589, %1587
  br i1 %1590, label %1662, label %1591

1591:                                             ; preds = %1577
  %1592 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1589, i64 -1, i32 0, i32 0
  %1593 = ptrtoint i8** %1592 to i64
  %1594 = sub i64 %1593, %1588
  %1595 = lshr i64 %1594, 3
  %1596 = add nuw nsw i64 %1595, 1
  %1597 = and i64 %1596, 7
  %1598 = icmp eq i64 %1597, 0
  br i1 %1598, label %1610, label %1599

1599:                                             ; preds = %1591, %1599
  %1600 = phi %"class.cppgc::internal::BasicMember.70"* [ %1603, %1599 ], [ %1580, %1591 ]
  %1601 = phi %"class.cppgc::internal::BasicMember.70"* [ %1604, %1599 ], [ %1589, %1591 ]
  %1602 = phi i64 [ %1608, %1599 ], [ %1597, %1591 ]
  %1603 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1600, i64 -1
  %1604 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1601, i64 -1
  %1605 = bitcast %"class.cppgc::internal::BasicMember.70"* %1604 to i64*
  %1606 = load i64, i64* %1605, align 8
  %1607 = bitcast %"class.cppgc::internal::BasicMember.70"* %1603 to i64*
  store i64 %1606, i64* %1607, align 8
  store atomic i64 0, i64* %1605 monotonic, align 8
  %1608 = add i64 %1602, -1
  %1609 = icmp eq i64 %1608, 0
  br i1 %1609, label %1610, label %1599, !llvm.loop !91

1610:                                             ; preds = %1599, %1591
  %1611 = phi %"class.cppgc::internal::BasicMember.70"* [ undef, %1591 ], [ %1603, %1599 ]
  %1612 = phi %"class.cppgc::internal::BasicMember.70"* [ %1580, %1591 ], [ %1603, %1599 ]
  %1613 = phi %"class.cppgc::internal::BasicMember.70"* [ %1589, %1591 ], [ %1604, %1599 ]
  %1614 = icmp ult i64 %1594, 56
  br i1 %1614, label %1659, label %1615

1615:                                             ; preds = %1610, %1615
  %1616 = phi %"class.cppgc::internal::BasicMember.70"* [ %1653, %1615 ], [ %1612, %1610 ]
  %1617 = phi %"class.cppgc::internal::BasicMember.70"* [ %1654, %1615 ], [ %1613, %1610 ]
  %1618 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1616, i64 -1
  %1619 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1617, i64 -1
  %1620 = bitcast %"class.cppgc::internal::BasicMember.70"* %1619 to i64*
  %1621 = load i64, i64* %1620, align 8
  %1622 = bitcast %"class.cppgc::internal::BasicMember.70"* %1618 to i64*
  store i64 %1621, i64* %1622, align 8
  store atomic i64 0, i64* %1620 monotonic, align 8
  %1623 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1616, i64 -2
  %1624 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1617, i64 -2
  %1625 = bitcast %"class.cppgc::internal::BasicMember.70"* %1624 to i64*
  %1626 = load i64, i64* %1625, align 8
  %1627 = bitcast %"class.cppgc::internal::BasicMember.70"* %1623 to i64*
  store i64 %1626, i64* %1627, align 8
  store atomic i64 0, i64* %1625 monotonic, align 8
  %1628 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1616, i64 -3
  %1629 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1617, i64 -3
  %1630 = bitcast %"class.cppgc::internal::BasicMember.70"* %1629 to i64*
  %1631 = load i64, i64* %1630, align 8
  %1632 = bitcast %"class.cppgc::internal::BasicMember.70"* %1628 to i64*
  store i64 %1631, i64* %1632, align 8
  store atomic i64 0, i64* %1630 monotonic, align 8
  %1633 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1616, i64 -4
  %1634 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1617, i64 -4
  %1635 = bitcast %"class.cppgc::internal::BasicMember.70"* %1634 to i64*
  %1636 = load i64, i64* %1635, align 8
  %1637 = bitcast %"class.cppgc::internal::BasicMember.70"* %1633 to i64*
  store i64 %1636, i64* %1637, align 8
  store atomic i64 0, i64* %1635 monotonic, align 8
  %1638 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1616, i64 -5
  %1639 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1617, i64 -5
  %1640 = bitcast %"class.cppgc::internal::BasicMember.70"* %1639 to i64*
  %1641 = load i64, i64* %1640, align 8
  %1642 = bitcast %"class.cppgc::internal::BasicMember.70"* %1638 to i64*
  store i64 %1641, i64* %1642, align 8
  store atomic i64 0, i64* %1640 monotonic, align 8
  %1643 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1616, i64 -6
  %1644 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1617, i64 -6
  %1645 = bitcast %"class.cppgc::internal::BasicMember.70"* %1644 to i64*
  %1646 = load i64, i64* %1645, align 8
  %1647 = bitcast %"class.cppgc::internal::BasicMember.70"* %1643 to i64*
  store i64 %1646, i64* %1647, align 8
  store atomic i64 0, i64* %1645 monotonic, align 8
  %1648 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1616, i64 -7
  %1649 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1617, i64 -7
  %1650 = bitcast %"class.cppgc::internal::BasicMember.70"* %1649 to i64*
  %1651 = load i64, i64* %1650, align 8
  %1652 = bitcast %"class.cppgc::internal::BasicMember.70"* %1648 to i64*
  store i64 %1651, i64* %1652, align 8
  store atomic i64 0, i64* %1650 monotonic, align 8
  %1653 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1616, i64 -8
  %1654 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1617, i64 -8
  %1655 = bitcast %"class.cppgc::internal::BasicMember.70"* %1654 to i64*
  %1656 = load i64, i64* %1655, align 8
  %1657 = bitcast %"class.cppgc::internal::BasicMember.70"* %1653 to i64*
  store i64 %1656, i64* %1657, align 8
  store atomic i64 0, i64* %1655 monotonic, align 8
  %1658 = icmp eq %"class.cppgc::internal::BasicMember.70"* %1654, %1587
  br i1 %1658, label %1659, label %1615

1659:                                             ; preds = %1615, %1610
  %1660 = phi %"class.cppgc::internal::BasicMember.70"* [ %1611, %1610 ], [ %1653, %1615 ]
  %1661 = load i64, i64* %38, align 8
  br label %1662

1662:                                             ; preds = %1577, %1659
  %1663 = phi %"class.cppgc::internal::BasicMember.70"* [ %1660, %1659 ], [ %1580, %1577 ]
  %1664 = phi i64 [ %1661, %1659 ], [ %1588, %1577 ]
  %1665 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %1663 to i64
  store i64 %1665, i64* %38, align 8
  store i64 %1585, i64* %36, align 8
  store i64 %1582, i64* %1560, align 8
  %1666 = icmp eq i64 %1664, 0
  br i1 %1666, label %1669, label %1667

1667:                                             ; preds = %1662
  %1668 = inttoptr i64 %1664 to i8*
  call void @_ZdlPv(i8* %1668) #10
  br label %1669

1669:                                             ; preds = %1546, %1662, %1667
  call void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"* nonnull %16, %"class.fxcrt::WideString"* dereferenceable(8) %48) #11
  call void @_ZN23CFXJSE_ResolveProcessor15FilterConditionEPN2v87IsolateEN5fxcrt10WideStringEP22CFXJSE_ResolveNodeData(%class.CFXJSE_ResolveProcessor* %0, %"class.v8::Isolate"* %1, %"class.fxcrt::WideString"* nonnull %16, %class.CFXJSE_ResolveNodeData* %2)
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %16) #11
  %1670 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %34, i64 0, i32 0, i32 0
  %1671 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %1670, align 8
  %1672 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %35, align 8
  %1673 = icmp eq %"class.cppgc::internal::BasicMember.70"* %1671, %1672
  br i1 %1673, label %1674, label %2748

1674:                                             ; preds = %1669, %1538
  br label %2748

1675:                                             ; preds = %1531
  %1676 = and i32 %44, 32
  %1677 = icmp eq i32 %1676, 0
  br i1 %1677, label %2663, label %1678

1678:                                             ; preds = %1675
  %1679 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %1534, i64 0, i32 1, i32 1, i32 2
  %1680 = bitcast %"class.cppgc::internal::BasicMember.30"* %1679 to i64*
  %1681 = load i64, i64* %1680, align 8
  %1682 = and i32 %44, 2
  %1683 = icmp ne i32 %1682, 0
  %1684 = and i16 %43, 258
  %1685 = or i16 %1684, 9
  store i16 %1685, i16* %61, align 8
  %1686 = icmp eq i64 %1681, 0
  br i1 %1686, label %2380, label %1687

1687:                                             ; preds = %1678
  %1688 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2, i32 0, i32 2, i32 0, i32 0
  %1689 = bitcast %"class.cppgc::internal::BasicMember.70"** %1688 to i64*
  %1690 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %34, i64 0, i32 0, i32 0
  %1691 = bitcast %"class.fxcrt::WideString"* %17 to i8*
  %1692 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1693 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %4, i64 0, i32 7, i32 2
  %1694 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %1693, i64 0, i32 0, i32 0
  %1695 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %4, i64 0, i32 7, i32 2, i32 0, i32 1
  %1696 = bitcast %"class.std::__1::vector.90"* %1693 to i64*
  %1697 = bitcast %"class.cppgc::internal::BasicMember.70"** %1695 to i64*
  %1698 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1699 = icmp eq i32 %1536, %47
  %1700 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %31, i64 0, i32 13
  br label %1701

1701:                                             ; preds = %1687, %2089
  %1702 = phi i64 [ %1681, %1687 ], [ %2093, %2089 ]
  %1703 = inttoptr i64 %1702 to %class.CXFA_Node*
  %1704 = icmp eq %class.CXFA_Node* %31, %1703
  br i1 %1704, label %1705, label %2095

1705:                                             ; preds = %1701
  br i1 %1683, label %1706, label %1833

1706:                                             ; preds = %1705
  br i1 %1699, label %1707, label %2089

1707:                                             ; preds = %1706
  %1708 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %35, align 8
  %1709 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %1688, align 8
  %1710 = icmp ult %"class.cppgc::internal::BasicMember.70"* %1708, %1709
  %1711 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %1709 to i64
  br i1 %1710, label %1712, label %1716

1712:                                             ; preds = %1707
  %1713 = bitcast %"class.cppgc::internal::BasicMember.70"* %1708 to i64*
  store i64 %32, i64* %1713, align 8
  %1714 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1708, i64 1
  %1715 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %1714 to i64
  store i64 %1715, i64* %36, align 8
  br label %2089

1716:                                             ; preds = %1707
  %1717 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %1708 to i64
  %1718 = load i64, i64* %38, align 8
  %1719 = sub i64 %1717, %1718
  %1720 = ashr exact i64 %1719, 3
  %1721 = add nsw i64 %1720, 1
  %1722 = icmp ugt i64 %1721, 2305843009213693951
  br i1 %1722, label %1723, label %1725

1723:                                             ; preds = %1716
  %1724 = bitcast %"class.std::__1::vector.90"* %34 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1724) #12
  unreachable

1725:                                             ; preds = %1716
  %1726 = sub i64 %1711, %1718
  %1727 = ashr exact i64 %1726, 3
  %1728 = icmp ult i64 %1727, 1152921504606846975
  br i1 %1728, label %1729, label %1737

1729:                                             ; preds = %1725
  %1730 = ashr exact i64 %1726, 2
  %1731 = icmp ult i64 %1730, %1721
  %1732 = select i1 %1731, i64 %1721, i64 %1730
  %1733 = icmp eq i64 %1732, 0
  br i1 %1733, label %1742, label %1734

1734:                                             ; preds = %1729
  %1735 = icmp ugt i64 %1732, 2305843009213693951
  br i1 %1735, label %1736, label %1737

1736:                                             ; preds = %1734
  call void @abort() #12
  unreachable

1737:                                             ; preds = %1734, %1725
  %1738 = phi i64 [ %1732, %1734 ], [ 2305843009213693951, %1725 ]
  %1739 = shl i64 %1738, 3
  %1740 = call i8* @_Znwm(i64 %1739) #10
  %1741 = bitcast i8* %1740 to %"class.cppgc::internal::BasicMember.70"*
  br label %1742

1742:                                             ; preds = %1737, %1729
  %1743 = phi i64 [ %1738, %1737 ], [ 0, %1729 ]
  %1744 = phi %"class.cppgc::internal::BasicMember.70"* [ %1741, %1737 ], [ null, %1729 ]
  %1745 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1744, i64 %1720
  %1746 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1744, i64 %1743
  %1747 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %1746 to i64
  %1748 = bitcast %"class.cppgc::internal::BasicMember.70"* %1745 to i64*
  store i64 %32, i64* %1748, align 8
  %1749 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1745, i64 1
  %1750 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %1749 to i64
  %1751 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %1690, align 8
  %1752 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %1751 to i64
  %1753 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %35, align 8
  %1754 = icmp eq %"class.cppgc::internal::BasicMember.70"* %1753, %1751
  br i1 %1754, label %1826, label %1755

1755:                                             ; preds = %1742
  %1756 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1753, i64 -1
  %1757 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %1756 to i64
  %1758 = sub i64 %1757, %1752
  %1759 = lshr i64 %1758, 3
  %1760 = add nuw nsw i64 %1759, 1
  %1761 = and i64 %1760, 7
  %1762 = icmp eq i64 %1761, 0
  br i1 %1762, label %1774, label %1763

1763:                                             ; preds = %1755, %1763
  %1764 = phi %"class.cppgc::internal::BasicMember.70"* [ %1767, %1763 ], [ %1745, %1755 ]
  %1765 = phi %"class.cppgc::internal::BasicMember.70"* [ %1768, %1763 ], [ %1753, %1755 ]
  %1766 = phi i64 [ %1772, %1763 ], [ %1761, %1755 ]
  %1767 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1764, i64 -1
  %1768 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1765, i64 -1
  %1769 = bitcast %"class.cppgc::internal::BasicMember.70"* %1768 to i64*
  %1770 = load i64, i64* %1769, align 8
  %1771 = bitcast %"class.cppgc::internal::BasicMember.70"* %1767 to i64*
  store i64 %1770, i64* %1771, align 8
  store atomic i64 0, i64* %1769 monotonic, align 8
  %1772 = add i64 %1766, -1
  %1773 = icmp eq i64 %1772, 0
  br i1 %1773, label %1774, label %1763, !llvm.loop !92

1774:                                             ; preds = %1763, %1755
  %1775 = phi %"class.cppgc::internal::BasicMember.70"* [ undef, %1755 ], [ %1767, %1763 ]
  %1776 = phi %"class.cppgc::internal::BasicMember.70"* [ %1745, %1755 ], [ %1767, %1763 ]
  %1777 = phi %"class.cppgc::internal::BasicMember.70"* [ %1753, %1755 ], [ %1768, %1763 ]
  %1778 = icmp ult i64 %1758, 56
  br i1 %1778, label %1823, label %1779

1779:                                             ; preds = %1774, %1779
  %1780 = phi %"class.cppgc::internal::BasicMember.70"* [ %1817, %1779 ], [ %1776, %1774 ]
  %1781 = phi %"class.cppgc::internal::BasicMember.70"* [ %1818, %1779 ], [ %1777, %1774 ]
  %1782 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1780, i64 -1
  %1783 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1781, i64 -1
  %1784 = bitcast %"class.cppgc::internal::BasicMember.70"* %1783 to i64*
  %1785 = load i64, i64* %1784, align 8
  %1786 = bitcast %"class.cppgc::internal::BasicMember.70"* %1782 to i64*
  store i64 %1785, i64* %1786, align 8
  store atomic i64 0, i64* %1784 monotonic, align 8
  %1787 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1780, i64 -2
  %1788 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1781, i64 -2
  %1789 = bitcast %"class.cppgc::internal::BasicMember.70"* %1788 to i64*
  %1790 = load i64, i64* %1789, align 8
  %1791 = bitcast %"class.cppgc::internal::BasicMember.70"* %1787 to i64*
  store i64 %1790, i64* %1791, align 8
  store atomic i64 0, i64* %1789 monotonic, align 8
  %1792 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1780, i64 -3
  %1793 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1781, i64 -3
  %1794 = bitcast %"class.cppgc::internal::BasicMember.70"* %1793 to i64*
  %1795 = load i64, i64* %1794, align 8
  %1796 = bitcast %"class.cppgc::internal::BasicMember.70"* %1792 to i64*
  store i64 %1795, i64* %1796, align 8
  store atomic i64 0, i64* %1794 monotonic, align 8
  %1797 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1780, i64 -4
  %1798 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1781, i64 -4
  %1799 = bitcast %"class.cppgc::internal::BasicMember.70"* %1798 to i64*
  %1800 = load i64, i64* %1799, align 8
  %1801 = bitcast %"class.cppgc::internal::BasicMember.70"* %1797 to i64*
  store i64 %1800, i64* %1801, align 8
  store atomic i64 0, i64* %1799 monotonic, align 8
  %1802 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1780, i64 -5
  %1803 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1781, i64 -5
  %1804 = bitcast %"class.cppgc::internal::BasicMember.70"* %1803 to i64*
  %1805 = load i64, i64* %1804, align 8
  %1806 = bitcast %"class.cppgc::internal::BasicMember.70"* %1802 to i64*
  store i64 %1805, i64* %1806, align 8
  store atomic i64 0, i64* %1804 monotonic, align 8
  %1807 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1780, i64 -6
  %1808 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1781, i64 -6
  %1809 = bitcast %"class.cppgc::internal::BasicMember.70"* %1808 to i64*
  %1810 = load i64, i64* %1809, align 8
  %1811 = bitcast %"class.cppgc::internal::BasicMember.70"* %1807 to i64*
  store i64 %1810, i64* %1811, align 8
  store atomic i64 0, i64* %1809 monotonic, align 8
  %1812 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1780, i64 -7
  %1813 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1781, i64 -7
  %1814 = bitcast %"class.cppgc::internal::BasicMember.70"* %1813 to i64*
  %1815 = load i64, i64* %1814, align 8
  %1816 = bitcast %"class.cppgc::internal::BasicMember.70"* %1812 to i64*
  store i64 %1815, i64* %1816, align 8
  store atomic i64 0, i64* %1814 monotonic, align 8
  %1817 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1780, i64 -8
  %1818 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1781, i64 -8
  %1819 = bitcast %"class.cppgc::internal::BasicMember.70"* %1818 to i64*
  %1820 = load i64, i64* %1819, align 8
  %1821 = bitcast %"class.cppgc::internal::BasicMember.70"* %1817 to i64*
  store i64 %1820, i64* %1821, align 8
  store atomic i64 0, i64* %1819 monotonic, align 8
  %1822 = icmp eq %"class.cppgc::internal::BasicMember.70"* %1818, %1751
  br i1 %1822, label %1823, label %1779

1823:                                             ; preds = %1779, %1774
  %1824 = phi %"class.cppgc::internal::BasicMember.70"* [ %1775, %1774 ], [ %1817, %1779 ]
  %1825 = load i64, i64* %38, align 8
  br label %1826

1826:                                             ; preds = %1742, %1823
  %1827 = phi %"class.cppgc::internal::BasicMember.70"* [ %1824, %1823 ], [ %1745, %1742 ]
  %1828 = phi i64 [ %1825, %1823 ], [ %1752, %1742 ]
  %1829 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %1827 to i64
  store i64 %1829, i64* %38, align 8
  store i64 %1750, i64* %36, align 8
  store i64 %1747, i64* %1689, align 8
  %1830 = icmp eq i64 %1828, 0
  br i1 %1830, label %2089, label %1831

1831:                                             ; preds = %1826
  %1832 = inttoptr i64 %1828 to i8*
  call void @_ZdlPv(i8* %1832) #10
  br label %2089

1833:                                             ; preds = %1705
  %1834 = load i32, i32* %1700, align 4
  %1835 = icmp eq i32 %1834, %47
  br i1 %1835, label %1836, label %2089

1836:                                             ; preds = %1833
  %1837 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %35, align 8
  %1838 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %1688, align 8
  %1839 = icmp ult %"class.cppgc::internal::BasicMember.70"* %1837, %1838
  %1840 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %1838 to i64
  br i1 %1839, label %1841, label %1845

1841:                                             ; preds = %1836
  %1842 = bitcast %"class.cppgc::internal::BasicMember.70"* %1837 to i64*
  store i64 %32, i64* %1842, align 8
  %1843 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1837, i64 1
  %1844 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %1843 to i64
  store i64 %1844, i64* %36, align 8
  br label %1962

1845:                                             ; preds = %1836
  %1846 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %1837 to i64
  %1847 = load i64, i64* %38, align 8
  %1848 = sub i64 %1846, %1847
  %1849 = ashr exact i64 %1848, 3
  %1850 = add nsw i64 %1849, 1
  %1851 = icmp ugt i64 %1850, 2305843009213693951
  br i1 %1851, label %1852, label %1854

1852:                                             ; preds = %1845
  %1853 = bitcast %"class.std::__1::vector.90"* %34 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1853) #12
  unreachable

1854:                                             ; preds = %1845
  %1855 = sub i64 %1840, %1847
  %1856 = ashr exact i64 %1855, 3
  %1857 = icmp ult i64 %1856, 1152921504606846975
  br i1 %1857, label %1858, label %1866

1858:                                             ; preds = %1854
  %1859 = ashr exact i64 %1855, 2
  %1860 = icmp ult i64 %1859, %1850
  %1861 = select i1 %1860, i64 %1850, i64 %1859
  %1862 = icmp eq i64 %1861, 0
  br i1 %1862, label %1871, label %1863

1863:                                             ; preds = %1858
  %1864 = icmp ugt i64 %1861, 2305843009213693951
  br i1 %1864, label %1865, label %1866

1865:                                             ; preds = %1863
  call void @abort() #12
  unreachable

1866:                                             ; preds = %1863, %1854
  %1867 = phi i64 [ %1861, %1863 ], [ 2305843009213693951, %1854 ]
  %1868 = shl i64 %1867, 3
  %1869 = call i8* @_Znwm(i64 %1868) #10
  %1870 = bitcast i8* %1869 to %"class.cppgc::internal::BasicMember.70"*
  br label %1871

1871:                                             ; preds = %1866, %1858
  %1872 = phi i64 [ %1867, %1866 ], [ 0, %1858 ]
  %1873 = phi %"class.cppgc::internal::BasicMember.70"* [ %1870, %1866 ], [ null, %1858 ]
  %1874 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1873, i64 %1849
  %1875 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1873, i64 %1872
  %1876 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %1875 to i64
  %1877 = bitcast %"class.cppgc::internal::BasicMember.70"* %1874 to i64*
  store i64 %32, i64* %1877, align 8
  %1878 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1874, i64 1
  %1879 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %1878 to i64
  %1880 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %1690, align 8
  %1881 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %1880 to i64
  %1882 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %35, align 8
  %1883 = icmp eq %"class.cppgc::internal::BasicMember.70"* %1882, %1880
  br i1 %1883, label %1955, label %1884

1884:                                             ; preds = %1871
  %1885 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1882, i64 -1
  %1886 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %1885 to i64
  %1887 = sub i64 %1886, %1881
  %1888 = lshr i64 %1887, 3
  %1889 = add nuw nsw i64 %1888, 1
  %1890 = and i64 %1889, 7
  %1891 = icmp eq i64 %1890, 0
  br i1 %1891, label %1903, label %1892

1892:                                             ; preds = %1884, %1892
  %1893 = phi %"class.cppgc::internal::BasicMember.70"* [ %1896, %1892 ], [ %1874, %1884 ]
  %1894 = phi %"class.cppgc::internal::BasicMember.70"* [ %1897, %1892 ], [ %1882, %1884 ]
  %1895 = phi i64 [ %1901, %1892 ], [ %1890, %1884 ]
  %1896 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1893, i64 -1
  %1897 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1894, i64 -1
  %1898 = bitcast %"class.cppgc::internal::BasicMember.70"* %1897 to i64*
  %1899 = load i64, i64* %1898, align 8
  %1900 = bitcast %"class.cppgc::internal::BasicMember.70"* %1896 to i64*
  store i64 %1899, i64* %1900, align 8
  store atomic i64 0, i64* %1898 monotonic, align 8
  %1901 = add i64 %1895, -1
  %1902 = icmp eq i64 %1901, 0
  br i1 %1902, label %1903, label %1892, !llvm.loop !93

1903:                                             ; preds = %1892, %1884
  %1904 = phi %"class.cppgc::internal::BasicMember.70"* [ undef, %1884 ], [ %1896, %1892 ]
  %1905 = phi %"class.cppgc::internal::BasicMember.70"* [ %1874, %1884 ], [ %1896, %1892 ]
  %1906 = phi %"class.cppgc::internal::BasicMember.70"* [ %1882, %1884 ], [ %1897, %1892 ]
  %1907 = icmp ult i64 %1887, 56
  br i1 %1907, label %1952, label %1908

1908:                                             ; preds = %1903, %1908
  %1909 = phi %"class.cppgc::internal::BasicMember.70"* [ %1946, %1908 ], [ %1905, %1903 ]
  %1910 = phi %"class.cppgc::internal::BasicMember.70"* [ %1947, %1908 ], [ %1906, %1903 ]
  %1911 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1909, i64 -1
  %1912 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1910, i64 -1
  %1913 = bitcast %"class.cppgc::internal::BasicMember.70"* %1912 to i64*
  %1914 = load i64, i64* %1913, align 8
  %1915 = bitcast %"class.cppgc::internal::BasicMember.70"* %1911 to i64*
  store i64 %1914, i64* %1915, align 8
  store atomic i64 0, i64* %1913 monotonic, align 8
  %1916 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1909, i64 -2
  %1917 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1910, i64 -2
  %1918 = bitcast %"class.cppgc::internal::BasicMember.70"* %1917 to i64*
  %1919 = load i64, i64* %1918, align 8
  %1920 = bitcast %"class.cppgc::internal::BasicMember.70"* %1916 to i64*
  store i64 %1919, i64* %1920, align 8
  store atomic i64 0, i64* %1918 monotonic, align 8
  %1921 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1909, i64 -3
  %1922 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1910, i64 -3
  %1923 = bitcast %"class.cppgc::internal::BasicMember.70"* %1922 to i64*
  %1924 = load i64, i64* %1923, align 8
  %1925 = bitcast %"class.cppgc::internal::BasicMember.70"* %1921 to i64*
  store i64 %1924, i64* %1925, align 8
  store atomic i64 0, i64* %1923 monotonic, align 8
  %1926 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1909, i64 -4
  %1927 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1910, i64 -4
  %1928 = bitcast %"class.cppgc::internal::BasicMember.70"* %1927 to i64*
  %1929 = load i64, i64* %1928, align 8
  %1930 = bitcast %"class.cppgc::internal::BasicMember.70"* %1926 to i64*
  store i64 %1929, i64* %1930, align 8
  store atomic i64 0, i64* %1928 monotonic, align 8
  %1931 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1909, i64 -5
  %1932 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1910, i64 -5
  %1933 = bitcast %"class.cppgc::internal::BasicMember.70"* %1932 to i64*
  %1934 = load i64, i64* %1933, align 8
  %1935 = bitcast %"class.cppgc::internal::BasicMember.70"* %1931 to i64*
  store i64 %1934, i64* %1935, align 8
  store atomic i64 0, i64* %1933 monotonic, align 8
  %1936 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1909, i64 -6
  %1937 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1910, i64 -6
  %1938 = bitcast %"class.cppgc::internal::BasicMember.70"* %1937 to i64*
  %1939 = load i64, i64* %1938, align 8
  %1940 = bitcast %"class.cppgc::internal::BasicMember.70"* %1936 to i64*
  store i64 %1939, i64* %1940, align 8
  store atomic i64 0, i64* %1938 monotonic, align 8
  %1941 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1909, i64 -7
  %1942 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1910, i64 -7
  %1943 = bitcast %"class.cppgc::internal::BasicMember.70"* %1942 to i64*
  %1944 = load i64, i64* %1943, align 8
  %1945 = bitcast %"class.cppgc::internal::BasicMember.70"* %1941 to i64*
  store i64 %1944, i64* %1945, align 8
  store atomic i64 0, i64* %1943 monotonic, align 8
  %1946 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1909, i64 -8
  %1947 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1910, i64 -8
  %1948 = bitcast %"class.cppgc::internal::BasicMember.70"* %1947 to i64*
  %1949 = load i64, i64* %1948, align 8
  %1950 = bitcast %"class.cppgc::internal::BasicMember.70"* %1946 to i64*
  store i64 %1949, i64* %1950, align 8
  store atomic i64 0, i64* %1948 monotonic, align 8
  %1951 = icmp eq %"class.cppgc::internal::BasicMember.70"* %1947, %1880
  br i1 %1951, label %1952, label %1908

1952:                                             ; preds = %1908, %1903
  %1953 = phi %"class.cppgc::internal::BasicMember.70"* [ %1904, %1903 ], [ %1946, %1908 ]
  %1954 = load i64, i64* %38, align 8
  br label %1955

1955:                                             ; preds = %1871, %1952
  %1956 = phi %"class.cppgc::internal::BasicMember.70"* [ %1953, %1952 ], [ %1874, %1871 ]
  %1957 = phi i64 [ %1954, %1952 ], [ %1881, %1871 ]
  %1958 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %1956 to i64
  store i64 %1958, i64* %38, align 8
  store i64 %1879, i64* %36, align 8
  store i64 %1876, i64* %1689, align 8
  %1959 = icmp eq i64 %1957, 0
  br i1 %1959, label %1962, label %1960

1960:                                             ; preds = %1955
  %1961 = inttoptr i64 %1957 to i8*
  call void @_ZdlPv(i8* %1961) #10
  br label %1962

1962:                                             ; preds = %1841, %1955, %1960
  %1963 = load i32, i32* %22, align 4
  %1964 = icmp eq i32 %1963, 0
  br i1 %1964, label %1965, label %2089

1965:                                             ; preds = %1962
  %1966 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %1698, align 8
  %1967 = icmp eq %"class.fxcrt::StringDataTemplate"* %1966, null
  br i1 %1967, label %1972, label %1968

1968:                                             ; preds = %1965
  %1969 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %1966, i64 0, i32 1
  %1970 = load i64, i64* %1969, align 8
  %1971 = icmp eq i64 %1970, 0
  br i1 %1971, label %1972, label %2089

1972:                                             ; preds = %1965, %1968
  %1973 = load i64, i64* %38, align 8
  store i64 %1973, i64* %36, align 8
  %1974 = inttoptr i64 %1973 to %"class.cppgc::internal::BasicMember.70"*
  %1975 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %1688, align 8
  %1976 = icmp ugt %"class.cppgc::internal::BasicMember.70"* %1975, %1974
  br i1 %1976, label %1977, label %1981

1977:                                             ; preds = %1972
  %1978 = inttoptr i64 %1973 to i64*
  store i64 %32, i64* %1978, align 8
  %1979 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1974, i64 1
  %1980 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %1979 to i64
  store i64 %1980, i64* %36, align 8
  br label %2748

1981:                                             ; preds = %1972
  %1982 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %1975 to i64
  %1983 = sub i64 %1982, %1973
  %1984 = ashr exact i64 %1983, 3
  %1985 = icmp ult i64 %1984, 1152921504606846975
  br i1 %1985, label %1986, label %1994

1986:                                             ; preds = %1981
  %1987 = ashr exact i64 %1983, 2
  %1988 = icmp eq i64 %1983, 0
  %1989 = select i1 %1988, i64 1, i64 %1987
  %1990 = icmp eq i64 %1989, 0
  br i1 %1990, label %1999, label %1991

1991:                                             ; preds = %1986
  %1992 = icmp ugt i64 %1989, 2305843009213693951
  br i1 %1992, label %1993, label %1994

1993:                                             ; preds = %1991
  call void @abort() #12
  unreachable

1994:                                             ; preds = %1991, %1981
  %1995 = phi i64 [ %1989, %1991 ], [ 2305843009213693951, %1981 ]
  %1996 = shl i64 %1995, 3
  %1997 = call i8* @_Znwm(i64 %1996) #10
  %1998 = bitcast i8* %1997 to %"class.cppgc::internal::BasicMember.70"*
  br label %1999

1999:                                             ; preds = %1994, %1986
  %2000 = phi i64 [ %1995, %1994 ], [ 0, %1986 ]
  %2001 = phi %"class.cppgc::internal::BasicMember.70"* [ %1998, %1994 ], [ null, %1986 ]
  %2002 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2001, i64 %2000
  %2003 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %2002 to i64
  %2004 = bitcast %"class.cppgc::internal::BasicMember.70"* %2001 to i64*
  store i64 %32, i64* %2004, align 8
  %2005 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2001, i64 1
  %2006 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %2005 to i64
  %2007 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %1690, align 8
  %2008 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %2007 to i64
  %2009 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %35, align 8
  %2010 = icmp eq %"class.cppgc::internal::BasicMember.70"* %2009, %2007
  br i1 %2010, label %2082, label %2011

2011:                                             ; preds = %1999
  %2012 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2009, i64 -1, i32 0, i32 0
  %2013 = ptrtoint i8** %2012 to i64
  %2014 = sub i64 %2013, %2008
  %2015 = lshr i64 %2014, 3
  %2016 = add nuw nsw i64 %2015, 1
  %2017 = and i64 %2016, 7
  %2018 = icmp eq i64 %2017, 0
  br i1 %2018, label %2030, label %2019

2019:                                             ; preds = %2011, %2019
  %2020 = phi %"class.cppgc::internal::BasicMember.70"* [ %2023, %2019 ], [ %2001, %2011 ]
  %2021 = phi %"class.cppgc::internal::BasicMember.70"* [ %2024, %2019 ], [ %2009, %2011 ]
  %2022 = phi i64 [ %2028, %2019 ], [ %2017, %2011 ]
  %2023 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2020, i64 -1
  %2024 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2021, i64 -1
  %2025 = bitcast %"class.cppgc::internal::BasicMember.70"* %2024 to i64*
  %2026 = load i64, i64* %2025, align 8
  %2027 = bitcast %"class.cppgc::internal::BasicMember.70"* %2023 to i64*
  store i64 %2026, i64* %2027, align 8
  store atomic i64 0, i64* %2025 monotonic, align 8
  %2028 = add i64 %2022, -1
  %2029 = icmp eq i64 %2028, 0
  br i1 %2029, label %2030, label %2019, !llvm.loop !94

2030:                                             ; preds = %2019, %2011
  %2031 = phi %"class.cppgc::internal::BasicMember.70"* [ undef, %2011 ], [ %2023, %2019 ]
  %2032 = phi %"class.cppgc::internal::BasicMember.70"* [ %2001, %2011 ], [ %2023, %2019 ]
  %2033 = phi %"class.cppgc::internal::BasicMember.70"* [ %2009, %2011 ], [ %2024, %2019 ]
  %2034 = icmp ult i64 %2014, 56
  br i1 %2034, label %2079, label %2035

2035:                                             ; preds = %2030, %2035
  %2036 = phi %"class.cppgc::internal::BasicMember.70"* [ %2073, %2035 ], [ %2032, %2030 ]
  %2037 = phi %"class.cppgc::internal::BasicMember.70"* [ %2074, %2035 ], [ %2033, %2030 ]
  %2038 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2036, i64 -1
  %2039 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2037, i64 -1
  %2040 = bitcast %"class.cppgc::internal::BasicMember.70"* %2039 to i64*
  %2041 = load i64, i64* %2040, align 8
  %2042 = bitcast %"class.cppgc::internal::BasicMember.70"* %2038 to i64*
  store i64 %2041, i64* %2042, align 8
  store atomic i64 0, i64* %2040 monotonic, align 8
  %2043 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2036, i64 -2
  %2044 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2037, i64 -2
  %2045 = bitcast %"class.cppgc::internal::BasicMember.70"* %2044 to i64*
  %2046 = load i64, i64* %2045, align 8
  %2047 = bitcast %"class.cppgc::internal::BasicMember.70"* %2043 to i64*
  store i64 %2046, i64* %2047, align 8
  store atomic i64 0, i64* %2045 monotonic, align 8
  %2048 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2036, i64 -3
  %2049 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2037, i64 -3
  %2050 = bitcast %"class.cppgc::internal::BasicMember.70"* %2049 to i64*
  %2051 = load i64, i64* %2050, align 8
  %2052 = bitcast %"class.cppgc::internal::BasicMember.70"* %2048 to i64*
  store i64 %2051, i64* %2052, align 8
  store atomic i64 0, i64* %2050 monotonic, align 8
  %2053 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2036, i64 -4
  %2054 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2037, i64 -4
  %2055 = bitcast %"class.cppgc::internal::BasicMember.70"* %2054 to i64*
  %2056 = load i64, i64* %2055, align 8
  %2057 = bitcast %"class.cppgc::internal::BasicMember.70"* %2053 to i64*
  store i64 %2056, i64* %2057, align 8
  store atomic i64 0, i64* %2055 monotonic, align 8
  %2058 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2036, i64 -5
  %2059 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2037, i64 -5
  %2060 = bitcast %"class.cppgc::internal::BasicMember.70"* %2059 to i64*
  %2061 = load i64, i64* %2060, align 8
  %2062 = bitcast %"class.cppgc::internal::BasicMember.70"* %2058 to i64*
  store i64 %2061, i64* %2062, align 8
  store atomic i64 0, i64* %2060 monotonic, align 8
  %2063 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2036, i64 -6
  %2064 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2037, i64 -6
  %2065 = bitcast %"class.cppgc::internal::BasicMember.70"* %2064 to i64*
  %2066 = load i64, i64* %2065, align 8
  %2067 = bitcast %"class.cppgc::internal::BasicMember.70"* %2063 to i64*
  store i64 %2066, i64* %2067, align 8
  store atomic i64 0, i64* %2065 monotonic, align 8
  %2068 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2036, i64 -7
  %2069 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2037, i64 -7
  %2070 = bitcast %"class.cppgc::internal::BasicMember.70"* %2069 to i64*
  %2071 = load i64, i64* %2070, align 8
  %2072 = bitcast %"class.cppgc::internal::BasicMember.70"* %2068 to i64*
  store i64 %2071, i64* %2072, align 8
  store atomic i64 0, i64* %2070 monotonic, align 8
  %2073 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2036, i64 -8
  %2074 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2037, i64 -8
  %2075 = bitcast %"class.cppgc::internal::BasicMember.70"* %2074 to i64*
  %2076 = load i64, i64* %2075, align 8
  %2077 = bitcast %"class.cppgc::internal::BasicMember.70"* %2073 to i64*
  store i64 %2076, i64* %2077, align 8
  store atomic i64 0, i64* %2075 monotonic, align 8
  %2078 = icmp eq %"class.cppgc::internal::BasicMember.70"* %2074, %2007
  br i1 %2078, label %2079, label %2035

2079:                                             ; preds = %2035, %2030
  %2080 = phi %"class.cppgc::internal::BasicMember.70"* [ %2031, %2030 ], [ %2073, %2035 ]
  %2081 = load i64, i64* %38, align 8
  br label %2082

2082:                                             ; preds = %1999, %2079
  %2083 = phi %"class.cppgc::internal::BasicMember.70"* [ %2080, %2079 ], [ %2001, %1999 ]
  %2084 = phi i64 [ %2081, %2079 ], [ %2008, %1999 ]
  %2085 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %2083 to i64
  store i64 %2085, i64* %38, align 8
  store i64 %2006, i64* %36, align 8
  store i64 %2003, i64* %1689, align 8
  %2086 = icmp eq i64 %2084, 0
  br i1 %2086, label %2748, label %2087

2087:                                             ; preds = %2082
  %2088 = inttoptr i64 %2084 to i8*
  call void @_ZdlPv(i8* %2088) #10
  br label %2748

2089:                                             ; preds = %2368, %2370, %2365, %1706, %1962, %1968, %1833, %1712, %1826, %1831
  %2090 = inttoptr i64 %1702 to i8*
  %2091 = getelementptr inbounds i8, i8* %2090, i64 96
  %2092 = bitcast i8* %2091 to i64*
  %2093 = load i64, i64* %2092, align 8
  %2094 = icmp eq i64 %2093, 0
  br i1 %2094, label %2380, label %1701

2095:                                             ; preds = %1701
  br i1 %1683, label %2096, label %2226

2096:                                             ; preds = %2095
  %2097 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %1703, i64 0, i32 0, i32 4
  %2098 = load i32, i32* %2097, align 8
  %2099 = icmp eq i32 %2098, %47
  br i1 %2099, label %2100, label %2356

2100:                                             ; preds = %2096
  %2101 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %35, align 8
  %2102 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %1688, align 8
  %2103 = icmp ult %"class.cppgc::internal::BasicMember.70"* %2101, %2102
  %2104 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %2102 to i64
  br i1 %2103, label %2105, label %2109

2105:                                             ; preds = %2100
  %2106 = bitcast %"class.cppgc::internal::BasicMember.70"* %2101 to i64*
  store i64 %1702, i64* %2106, align 8
  %2107 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2101, i64 1
  %2108 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %2107 to i64
  store i64 %2108, i64* %36, align 8
  br label %2356

2109:                                             ; preds = %2100
  %2110 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %2101 to i64
  %2111 = load i64, i64* %38, align 8
  %2112 = sub i64 %2110, %2111
  %2113 = ashr exact i64 %2112, 3
  %2114 = add nsw i64 %2113, 1
  %2115 = icmp ugt i64 %2114, 2305843009213693951
  br i1 %2115, label %2116, label %2118

2116:                                             ; preds = %2109
  %2117 = bitcast %"class.std::__1::vector.90"* %34 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %2117) #12
  unreachable

2118:                                             ; preds = %2109
  %2119 = sub i64 %2104, %2111
  %2120 = ashr exact i64 %2119, 3
  %2121 = icmp ult i64 %2120, 1152921504606846975
  br i1 %2121, label %2122, label %2130

2122:                                             ; preds = %2118
  %2123 = ashr exact i64 %2119, 2
  %2124 = icmp ult i64 %2123, %2114
  %2125 = select i1 %2124, i64 %2114, i64 %2123
  %2126 = icmp eq i64 %2125, 0
  br i1 %2126, label %2135, label %2127

2127:                                             ; preds = %2122
  %2128 = icmp ugt i64 %2125, 2305843009213693951
  br i1 %2128, label %2129, label %2130

2129:                                             ; preds = %2127
  call void @abort() #12
  unreachable

2130:                                             ; preds = %2127, %2118
  %2131 = phi i64 [ %2125, %2127 ], [ 2305843009213693951, %2118 ]
  %2132 = shl i64 %2131, 3
  %2133 = call i8* @_Znwm(i64 %2132) #10
  %2134 = bitcast i8* %2133 to %"class.cppgc::internal::BasicMember.70"*
  br label %2135

2135:                                             ; preds = %2130, %2122
  %2136 = phi i64 [ %2131, %2130 ], [ 0, %2122 ]
  %2137 = phi %"class.cppgc::internal::BasicMember.70"* [ %2134, %2130 ], [ null, %2122 ]
  %2138 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2137, i64 %2113
  %2139 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2137, i64 %2136
  %2140 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %2139 to i64
  %2141 = bitcast %"class.cppgc::internal::BasicMember.70"* %2138 to i64*
  store i64 %1702, i64* %2141, align 8
  %2142 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2138, i64 1
  %2143 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %2142 to i64
  %2144 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %1690, align 8
  %2145 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %2144 to i64
  %2146 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %35, align 8
  %2147 = icmp eq %"class.cppgc::internal::BasicMember.70"* %2146, %2144
  br i1 %2147, label %2219, label %2148

2148:                                             ; preds = %2135
  %2149 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2146, i64 -1
  %2150 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %2149 to i64
  %2151 = sub i64 %2150, %2145
  %2152 = lshr i64 %2151, 3
  %2153 = add nuw nsw i64 %2152, 1
  %2154 = and i64 %2153, 7
  %2155 = icmp eq i64 %2154, 0
  br i1 %2155, label %2167, label %2156

2156:                                             ; preds = %2148, %2156
  %2157 = phi %"class.cppgc::internal::BasicMember.70"* [ %2160, %2156 ], [ %2138, %2148 ]
  %2158 = phi %"class.cppgc::internal::BasicMember.70"* [ %2161, %2156 ], [ %2146, %2148 ]
  %2159 = phi i64 [ %2165, %2156 ], [ %2154, %2148 ]
  %2160 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2157, i64 -1
  %2161 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2158, i64 -1
  %2162 = bitcast %"class.cppgc::internal::BasicMember.70"* %2161 to i64*
  %2163 = load i64, i64* %2162, align 8
  %2164 = bitcast %"class.cppgc::internal::BasicMember.70"* %2160 to i64*
  store i64 %2163, i64* %2164, align 8
  store atomic i64 0, i64* %2162 monotonic, align 8
  %2165 = add i64 %2159, -1
  %2166 = icmp eq i64 %2165, 0
  br i1 %2166, label %2167, label %2156, !llvm.loop !95

2167:                                             ; preds = %2156, %2148
  %2168 = phi %"class.cppgc::internal::BasicMember.70"* [ undef, %2148 ], [ %2160, %2156 ]
  %2169 = phi %"class.cppgc::internal::BasicMember.70"* [ %2138, %2148 ], [ %2160, %2156 ]
  %2170 = phi %"class.cppgc::internal::BasicMember.70"* [ %2146, %2148 ], [ %2161, %2156 ]
  %2171 = icmp ult i64 %2151, 56
  br i1 %2171, label %2216, label %2172

2172:                                             ; preds = %2167, %2172
  %2173 = phi %"class.cppgc::internal::BasicMember.70"* [ %2210, %2172 ], [ %2169, %2167 ]
  %2174 = phi %"class.cppgc::internal::BasicMember.70"* [ %2211, %2172 ], [ %2170, %2167 ]
  %2175 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2173, i64 -1
  %2176 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2174, i64 -1
  %2177 = bitcast %"class.cppgc::internal::BasicMember.70"* %2176 to i64*
  %2178 = load i64, i64* %2177, align 8
  %2179 = bitcast %"class.cppgc::internal::BasicMember.70"* %2175 to i64*
  store i64 %2178, i64* %2179, align 8
  store atomic i64 0, i64* %2177 monotonic, align 8
  %2180 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2173, i64 -2
  %2181 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2174, i64 -2
  %2182 = bitcast %"class.cppgc::internal::BasicMember.70"* %2181 to i64*
  %2183 = load i64, i64* %2182, align 8
  %2184 = bitcast %"class.cppgc::internal::BasicMember.70"* %2180 to i64*
  store i64 %2183, i64* %2184, align 8
  store atomic i64 0, i64* %2182 monotonic, align 8
  %2185 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2173, i64 -3
  %2186 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2174, i64 -3
  %2187 = bitcast %"class.cppgc::internal::BasicMember.70"* %2186 to i64*
  %2188 = load i64, i64* %2187, align 8
  %2189 = bitcast %"class.cppgc::internal::BasicMember.70"* %2185 to i64*
  store i64 %2188, i64* %2189, align 8
  store atomic i64 0, i64* %2187 monotonic, align 8
  %2190 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2173, i64 -4
  %2191 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2174, i64 -4
  %2192 = bitcast %"class.cppgc::internal::BasicMember.70"* %2191 to i64*
  %2193 = load i64, i64* %2192, align 8
  %2194 = bitcast %"class.cppgc::internal::BasicMember.70"* %2190 to i64*
  store i64 %2193, i64* %2194, align 8
  store atomic i64 0, i64* %2192 monotonic, align 8
  %2195 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2173, i64 -5
  %2196 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2174, i64 -5
  %2197 = bitcast %"class.cppgc::internal::BasicMember.70"* %2196 to i64*
  %2198 = load i64, i64* %2197, align 8
  %2199 = bitcast %"class.cppgc::internal::BasicMember.70"* %2195 to i64*
  store i64 %2198, i64* %2199, align 8
  store atomic i64 0, i64* %2197 monotonic, align 8
  %2200 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2173, i64 -6
  %2201 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2174, i64 -6
  %2202 = bitcast %"class.cppgc::internal::BasicMember.70"* %2201 to i64*
  %2203 = load i64, i64* %2202, align 8
  %2204 = bitcast %"class.cppgc::internal::BasicMember.70"* %2200 to i64*
  store i64 %2203, i64* %2204, align 8
  store atomic i64 0, i64* %2202 monotonic, align 8
  %2205 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2173, i64 -7
  %2206 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2174, i64 -7
  %2207 = bitcast %"class.cppgc::internal::BasicMember.70"* %2206 to i64*
  %2208 = load i64, i64* %2207, align 8
  %2209 = bitcast %"class.cppgc::internal::BasicMember.70"* %2205 to i64*
  store i64 %2208, i64* %2209, align 8
  store atomic i64 0, i64* %2207 monotonic, align 8
  %2210 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2173, i64 -8
  %2211 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2174, i64 -8
  %2212 = bitcast %"class.cppgc::internal::BasicMember.70"* %2211 to i64*
  %2213 = load i64, i64* %2212, align 8
  %2214 = bitcast %"class.cppgc::internal::BasicMember.70"* %2210 to i64*
  store i64 %2213, i64* %2214, align 8
  store atomic i64 0, i64* %2212 monotonic, align 8
  %2215 = icmp eq %"class.cppgc::internal::BasicMember.70"* %2211, %2144
  br i1 %2215, label %2216, label %2172

2216:                                             ; preds = %2172, %2167
  %2217 = phi %"class.cppgc::internal::BasicMember.70"* [ %2168, %2167 ], [ %2210, %2172 ]
  %2218 = load i64, i64* %38, align 8
  br label %2219

2219:                                             ; preds = %2135, %2216
  %2220 = phi %"class.cppgc::internal::BasicMember.70"* [ %2217, %2216 ], [ %2138, %2135 ]
  %2221 = phi i64 [ %2218, %2216 ], [ %2145, %2135 ]
  %2222 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %2220 to i64
  store i64 %2222, i64* %38, align 8
  store i64 %2143, i64* %36, align 8
  store i64 %2140, i64* %1689, align 8
  %2223 = icmp eq i64 %2221, 0
  br i1 %2223, label %2356, label %2224

2224:                                             ; preds = %2219
  %2225 = inttoptr i64 %2221 to i8*
  call void @_ZdlPv(i8* %2225) #10
  br label %2356

2226:                                             ; preds = %2095
  %2227 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %1703, i64 0, i32 13
  %2228 = load i32, i32* %2227, align 4
  %2229 = icmp eq i32 %2228, %47
  br i1 %2229, label %2230, label %2356

2230:                                             ; preds = %2226
  %2231 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %35, align 8
  %2232 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %1688, align 8
  %2233 = icmp ult %"class.cppgc::internal::BasicMember.70"* %2231, %2232
  %2234 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %2232 to i64
  br i1 %2233, label %2235, label %2239

2235:                                             ; preds = %2230
  %2236 = bitcast %"class.cppgc::internal::BasicMember.70"* %2231 to i64*
  store i64 %1702, i64* %2236, align 8
  %2237 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2231, i64 1
  %2238 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %2237 to i64
  store i64 %2238, i64* %36, align 8
  br label %2356

2239:                                             ; preds = %2230
  %2240 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %2231 to i64
  %2241 = load i64, i64* %38, align 8
  %2242 = sub i64 %2240, %2241
  %2243 = ashr exact i64 %2242, 3
  %2244 = add nsw i64 %2243, 1
  %2245 = icmp ugt i64 %2244, 2305843009213693951
  br i1 %2245, label %2246, label %2248

2246:                                             ; preds = %2239
  %2247 = bitcast %"class.std::__1::vector.90"* %34 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %2247) #12
  unreachable

2248:                                             ; preds = %2239
  %2249 = sub i64 %2234, %2241
  %2250 = ashr exact i64 %2249, 3
  %2251 = icmp ult i64 %2250, 1152921504606846975
  br i1 %2251, label %2252, label %2260

2252:                                             ; preds = %2248
  %2253 = ashr exact i64 %2249, 2
  %2254 = icmp ult i64 %2253, %2244
  %2255 = select i1 %2254, i64 %2244, i64 %2253
  %2256 = icmp eq i64 %2255, 0
  br i1 %2256, label %2265, label %2257

2257:                                             ; preds = %2252
  %2258 = icmp ugt i64 %2255, 2305843009213693951
  br i1 %2258, label %2259, label %2260

2259:                                             ; preds = %2257
  call void @abort() #12
  unreachable

2260:                                             ; preds = %2257, %2248
  %2261 = phi i64 [ %2255, %2257 ], [ 2305843009213693951, %2248 ]
  %2262 = shl i64 %2261, 3
  %2263 = call i8* @_Znwm(i64 %2262) #10
  %2264 = bitcast i8* %2263 to %"class.cppgc::internal::BasicMember.70"*
  br label %2265

2265:                                             ; preds = %2260, %2252
  %2266 = phi i64 [ %2261, %2260 ], [ 0, %2252 ]
  %2267 = phi %"class.cppgc::internal::BasicMember.70"* [ %2264, %2260 ], [ null, %2252 ]
  %2268 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2267, i64 %2243
  %2269 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2267, i64 %2266
  %2270 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %2269 to i64
  %2271 = bitcast %"class.cppgc::internal::BasicMember.70"* %2268 to i64*
  store i64 %1702, i64* %2271, align 8
  %2272 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2268, i64 1
  %2273 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %2272 to i64
  %2274 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %1690, align 8
  %2275 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %2274 to i64
  %2276 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %35, align 8
  %2277 = icmp eq %"class.cppgc::internal::BasicMember.70"* %2276, %2274
  br i1 %2277, label %2349, label %2278

2278:                                             ; preds = %2265
  %2279 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2276, i64 -1
  %2280 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %2279 to i64
  %2281 = sub i64 %2280, %2275
  %2282 = lshr i64 %2281, 3
  %2283 = add nuw nsw i64 %2282, 1
  %2284 = and i64 %2283, 7
  %2285 = icmp eq i64 %2284, 0
  br i1 %2285, label %2297, label %2286

2286:                                             ; preds = %2278, %2286
  %2287 = phi %"class.cppgc::internal::BasicMember.70"* [ %2290, %2286 ], [ %2268, %2278 ]
  %2288 = phi %"class.cppgc::internal::BasicMember.70"* [ %2291, %2286 ], [ %2276, %2278 ]
  %2289 = phi i64 [ %2295, %2286 ], [ %2284, %2278 ]
  %2290 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2287, i64 -1
  %2291 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2288, i64 -1
  %2292 = bitcast %"class.cppgc::internal::BasicMember.70"* %2291 to i64*
  %2293 = load i64, i64* %2292, align 8
  %2294 = bitcast %"class.cppgc::internal::BasicMember.70"* %2290 to i64*
  store i64 %2293, i64* %2294, align 8
  store atomic i64 0, i64* %2292 monotonic, align 8
  %2295 = add i64 %2289, -1
  %2296 = icmp eq i64 %2295, 0
  br i1 %2296, label %2297, label %2286, !llvm.loop !96

2297:                                             ; preds = %2286, %2278
  %2298 = phi %"class.cppgc::internal::BasicMember.70"* [ undef, %2278 ], [ %2290, %2286 ]
  %2299 = phi %"class.cppgc::internal::BasicMember.70"* [ %2268, %2278 ], [ %2290, %2286 ]
  %2300 = phi %"class.cppgc::internal::BasicMember.70"* [ %2276, %2278 ], [ %2291, %2286 ]
  %2301 = icmp ult i64 %2281, 56
  br i1 %2301, label %2346, label %2302

2302:                                             ; preds = %2297, %2302
  %2303 = phi %"class.cppgc::internal::BasicMember.70"* [ %2340, %2302 ], [ %2299, %2297 ]
  %2304 = phi %"class.cppgc::internal::BasicMember.70"* [ %2341, %2302 ], [ %2300, %2297 ]
  %2305 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2303, i64 -1
  %2306 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2304, i64 -1
  %2307 = bitcast %"class.cppgc::internal::BasicMember.70"* %2306 to i64*
  %2308 = load i64, i64* %2307, align 8
  %2309 = bitcast %"class.cppgc::internal::BasicMember.70"* %2305 to i64*
  store i64 %2308, i64* %2309, align 8
  store atomic i64 0, i64* %2307 monotonic, align 8
  %2310 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2303, i64 -2
  %2311 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2304, i64 -2
  %2312 = bitcast %"class.cppgc::internal::BasicMember.70"* %2311 to i64*
  %2313 = load i64, i64* %2312, align 8
  %2314 = bitcast %"class.cppgc::internal::BasicMember.70"* %2310 to i64*
  store i64 %2313, i64* %2314, align 8
  store atomic i64 0, i64* %2312 monotonic, align 8
  %2315 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2303, i64 -3
  %2316 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2304, i64 -3
  %2317 = bitcast %"class.cppgc::internal::BasicMember.70"* %2316 to i64*
  %2318 = load i64, i64* %2317, align 8
  %2319 = bitcast %"class.cppgc::internal::BasicMember.70"* %2315 to i64*
  store i64 %2318, i64* %2319, align 8
  store atomic i64 0, i64* %2317 monotonic, align 8
  %2320 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2303, i64 -4
  %2321 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2304, i64 -4
  %2322 = bitcast %"class.cppgc::internal::BasicMember.70"* %2321 to i64*
  %2323 = load i64, i64* %2322, align 8
  %2324 = bitcast %"class.cppgc::internal::BasicMember.70"* %2320 to i64*
  store i64 %2323, i64* %2324, align 8
  store atomic i64 0, i64* %2322 monotonic, align 8
  %2325 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2303, i64 -5
  %2326 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2304, i64 -5
  %2327 = bitcast %"class.cppgc::internal::BasicMember.70"* %2326 to i64*
  %2328 = load i64, i64* %2327, align 8
  %2329 = bitcast %"class.cppgc::internal::BasicMember.70"* %2325 to i64*
  store i64 %2328, i64* %2329, align 8
  store atomic i64 0, i64* %2327 monotonic, align 8
  %2330 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2303, i64 -6
  %2331 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2304, i64 -6
  %2332 = bitcast %"class.cppgc::internal::BasicMember.70"* %2331 to i64*
  %2333 = load i64, i64* %2332, align 8
  %2334 = bitcast %"class.cppgc::internal::BasicMember.70"* %2330 to i64*
  store i64 %2333, i64* %2334, align 8
  store atomic i64 0, i64* %2332 monotonic, align 8
  %2335 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2303, i64 -7
  %2336 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2304, i64 -7
  %2337 = bitcast %"class.cppgc::internal::BasicMember.70"* %2336 to i64*
  %2338 = load i64, i64* %2337, align 8
  %2339 = bitcast %"class.cppgc::internal::BasicMember.70"* %2335 to i64*
  store i64 %2338, i64* %2339, align 8
  store atomic i64 0, i64* %2337 monotonic, align 8
  %2340 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2303, i64 -8
  %2341 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2304, i64 -8
  %2342 = bitcast %"class.cppgc::internal::BasicMember.70"* %2341 to i64*
  %2343 = load i64, i64* %2342, align 8
  %2344 = bitcast %"class.cppgc::internal::BasicMember.70"* %2340 to i64*
  store i64 %2343, i64* %2344, align 8
  store atomic i64 0, i64* %2342 monotonic, align 8
  %2345 = icmp eq %"class.cppgc::internal::BasicMember.70"* %2341, %2274
  br i1 %2345, label %2346, label %2302

2346:                                             ; preds = %2302, %2297
  %2347 = phi %"class.cppgc::internal::BasicMember.70"* [ %2298, %2297 ], [ %2340, %2302 ]
  %2348 = load i64, i64* %38, align 8
  br label %2349

2349:                                             ; preds = %2265, %2346
  %2350 = phi %"class.cppgc::internal::BasicMember.70"* [ %2347, %2346 ], [ %2268, %2265 ]
  %2351 = phi i64 [ %2348, %2346 ], [ %2275, %2265 ]
  %2352 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %2350 to i64
  store i64 %2352, i64* %38, align 8
  store i64 %2273, i64* %36, align 8
  store i64 %2270, i64* %1689, align 8
  %2353 = icmp eq i64 %2351, 0
  br i1 %2353, label %2356, label %2354

2354:                                             ; preds = %2349
  %2355 = inttoptr i64 %2351 to i8*
  call void @_ZdlPv(i8* %2355) #10
  br label %2356

2356:                                             ; preds = %2354, %2349, %2235, %2224, %2219, %2105, %2226, %2096
  %2357 = inttoptr i64 %1702 to %class.CXFA_Object*
  %2358 = getelementptr inbounds %class.CXFA_Object, %class.CXFA_Object* %2357, i64 0, i32 2
  %2359 = load i16, i16* %2358, align 4
  %2360 = call zeroext i1 @_ZNK9CXFA_Node11HasPropertyE11XFA_Element(%class.CXFA_Node* nonnull %1534, i16 signext %2359) #11
  br i1 %2360, label %2361, label %2368

2361:                                             ; preds = %2356
  %2362 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %1703, i64 0, i32 0, i32 2
  %2363 = load i16, i16* %2362, align 4
  %2364 = icmp eq i16 %2363, 285
  br i1 %2364, label %2370, label %2365

2365:                                             ; preds = %2361
  %2366 = load i16, i16* %2358, align 4
  %2367 = icmp eq i16 %2366, 158
  br i1 %2367, label %2370, label %2089

2368:                                             ; preds = %2356
  %2369 = call zeroext i1 @_ZNK9CXFA_Node13IsTransparentEv(%class.CXFA_Node* %1703) #11
  br i1 %2369, label %2370, label %2089

2370:                                             ; preds = %2365, %2361, %2368
  store %class.CXFA_Object* %2357, %class.CXFA_Object** %56, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1691) #11
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %1692, align 8
  call void @_ZN5fxcrt10WideStringC1EOS0_(%"class.fxcrt::WideString"* nonnull %17, %"class.fxcrt::WideString"* dereferenceable(8) %58) #11
  %2371 = load i16, i16* %61, align 8
  %2372 = or i16 %2371, 256
  store i16 %2372, i16* %61, align 8
  %2373 = call zeroext i1 @_ZN23CFXJSE_ResolveProcessor13ResolveNormalEPN2v87IsolateER22CFXJSE_ResolveNodeData(%class.CFXJSE_ResolveProcessor* %0, %"class.v8::Isolate"* %1, %class.CFXJSE_ResolveNodeData* nonnull dereferenceable(96) %4)
  store i16 %2371, i16* %61, align 8
  %2374 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* %58, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %17) #11
  %2375 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %35, align 8
  %2376 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %1694, align 8
  %2377 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %1695, align 8
  %2378 = call %"class.cppgc::internal::BasicMember.70"* @_ZNSt3__16vectorIN5cppgc8internal11BasicMemberI11CXFA_ObjectNS2_15StrongMemberTagENS2_26DijkstraWriteBarrierPolicyENS2_22DisabledCheckingPolicyEEENS_9allocatorIS8_EEE6insertINS_11__wrap_iterIPS8_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS8_NS_15iterator_traitsISH_E9referenceEEE5valueESF_E4typeENSD_IPKS8_EESH_SH_(%"class.std::__1::vector.90"* %34, %"class.cppgc::internal::BasicMember.70"* %2375, %"class.cppgc::internal::BasicMember.70"* %2376, %"class.cppgc::internal::BasicMember.70"* %2377)
  %2379 = load i64, i64* %1696, align 8
  store i64 %2379, i64* %1697, align 8
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1691) #11
  br label %2089

2380:                                             ; preds = %2089, %1678
  %2381 = load i64, i64* %36, align 8
  %2382 = load i64, i64* %38, align 8
  %2383 = sub i64 %2381, %2382
  %2384 = ashr exact i64 %2383, 3
  %2385 = icmp ugt i64 %2384, %41
  br i1 %2385, label %2386, label %2663

2386:                                             ; preds = %2380
  %2387 = call zeroext i1 @_ZNK9CXFA_Node13IsTransparentEv(%class.CXFA_Node* nonnull %1534) #11
  br i1 %2387, label %2388, label %2658

2388:                                             ; preds = %2386
  %2389 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %34, i64 0, i32 0, i32 0
  %2390 = bitcast %"class.std::__1::vector.90"* %34 to %class.CXFA_Object***
  %2391 = load %class.CXFA_Object**, %class.CXFA_Object*** %2390, align 8
  %2392 = load %class.CXFA_Object*, %class.CXFA_Object** %2391, align 8
  %2393 = call %class.CXFA_Node* @_Z6ToNodeP11CXFA_Object(%class.CXFA_Object* %2392) #11
  %2394 = icmp eq %class.CXFA_Node* %2393, null
  br i1 %2394, label %2402, label %2395

2395:                                             ; preds = %2388
  %2396 = bitcast %"class.std::__1::vector.130"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2396) #11
  call void @_ZN9CXFA_Node11GetSiblingsEb(%"class.std::__1::vector.130"* nonnull sret %18, %class.CXFA_Node* nonnull %2393, i1 zeroext %1683) #11
  %2397 = bitcast %"class.std::__1::vector.130"* %18 to i64*
  %2398 = load i64, i64* %2397, align 8
  %2399 = getelementptr inbounds %"class.std::__1::vector.130", %"class.std::__1::vector.130"* %18, i64 0, i32 0, i32 1
  %2400 = bitcast %class.CXFA_Node*** %2399 to i64*
  %2401 = load i64, i64* %2400, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2396) #11
  br label %2402

2402:                                             ; preds = %2388, %2395
  %2403 = phi i64 [ 0, %2388 ], [ %2398, %2395 ]
  %2404 = phi i64 [ 0, %2388 ], [ %2401, %2395 ]
  %2405 = sub i64 %2404, %2403
  %2406 = ashr exact i64 %2405, 3
  %2407 = load i64, i64* %36, align 8
  %2408 = load i64, i64* %38, align 8
  %2409 = sub i64 %2407, %2408
  %2410 = ashr exact i64 %2409, 3
  %2411 = icmp ugt i64 %2406, %2410
  %2412 = inttoptr i64 %2408 to %"class.cppgc::internal::BasicMember.70"*
  br i1 %2411, label %2413, label %2654

2413:                                             ; preds = %2402
  %2414 = inttoptr i64 %2408 to %class.CXFA_Object**
  %2415 = load %class.CXFA_Object*, %class.CXFA_Object** %2414, align 8
  %2416 = bitcast %"class.std::__1::vector.90"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2416) #11
  %2417 = inttoptr i64 %2403 to %class.CXFA_Node**
  %2418 = inttoptr i64 %2403 to i8*
  %2419 = inttoptr i64 %2404 to %class.CXFA_Node**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2416, i8 0, i64 24, i1 false) #11
  %2420 = icmp eq i64 %2405, 0
  br i1 %2420, label %2620, label %2421

2421:                                             ; preds = %2413
  %2422 = icmp ugt i64 %2406, 2305843009213693951
  br i1 %2422, label %2423, label %2425

2423:                                             ; preds = %2421
  %2424 = bitcast %"class.std::__1::vector.90"* %19 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %2424) #12
  unreachable

2425:                                             ; preds = %2421
  %2426 = call i8* @_Znwm(i64 %2405) #10
  %2427 = bitcast i8* %2426 to %"class.cppgc::internal::BasicMember.70"*
  %2428 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %19, i64 0, i32 0, i32 1
  %2429 = bitcast %"class.cppgc::internal::BasicMember.70"** %2428 to i8**
  store i8* %2426, i8** %2429, align 8
  %2430 = bitcast %"class.std::__1::vector.90"* %19 to i8**
  store i8* %2426, i8** %2430, align 8
  %2431 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2427, i64 %2406
  %2432 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %19, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.cppgc::internal::BasicMember.70"* %2431, %"class.cppgc::internal::BasicMember.70"** %2432, align 8
  %2433 = bitcast %"class.cppgc::internal::BasicMember.70"** %2428 to i64*
  %2434 = ptrtoint i8* %2426 to i64
  %2435 = icmp eq %class.CXFA_Node** %2417, %2419
  br i1 %2435, label %2617, label %2436

2436:                                             ; preds = %2425
  %2437 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %2419, i64 -1
  %2438 = bitcast %class.CXFA_Node** %2437 to i8*
  %2439 = sub i64 0, %2403
  %2440 = getelementptr i8, i8* %2438, i64 %2439
  %2441 = ptrtoint i8* %2440 to i64
  %2442 = lshr i64 %2441, 3
  %2443 = add nuw nsw i64 %2442, 1
  %2444 = icmp ult i64 %2443, 4
  br i1 %2444, label %2542, label %2445

2445:                                             ; preds = %2436
  %2446 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %2419, i64 -1
  %2447 = bitcast %class.CXFA_Node** %2446 to i8*
  %2448 = sub i64 0, %2403
  %2449 = getelementptr i8, i8* %2447, i64 %2448
  %2450 = ptrtoint i8* %2449 to i64
  %2451 = lshr i64 %2450, 3
  %2452 = add i64 %2450, 8
  %2453 = and i64 %2452, -8
  %2454 = getelementptr i8, i8* %2426, i64 %2453
  %2455 = add nuw nsw i64 %2451, 1
  %2456 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %2417, i64 %2455
  %2457 = bitcast %class.CXFA_Node** %2456 to i8*
  %2458 = icmp ult i8* %2426, %2457
  %2459 = icmp ugt i8* %2454, %2418
  %2460 = and i1 %2458, %2459
  br i1 %2460, label %2542, label %2461

2461:                                             ; preds = %2445
  %2462 = and i64 %2443, 4611686018427387900
  %2463 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2427, i64 %2462
  %2464 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %2417, i64 %2462
  %2465 = add nsw i64 %2462, -4
  %2466 = lshr exact i64 %2465, 2
  %2467 = add nuw nsw i64 %2466, 1
  %2468 = and i64 %2467, 3
  %2469 = icmp ult i64 %2465, 12
  br i1 %2469, label %2521, label %2470

2470:                                             ; preds = %2461
  %2471 = sub nsw i64 %2467, %2468
  br label %2472

2472:                                             ; preds = %2472, %2470
  %2473 = phi i64 [ 0, %2470 ], [ %2518, %2472 ]
  %2474 = phi i64 [ %2471, %2470 ], [ %2519, %2472 ]
  %2475 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2427, i64 %2473
  %2476 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %2417, i64 %2473
  %2477 = bitcast %class.CXFA_Node** %2476 to <2 x i64>*
  %2478 = load <2 x i64>, <2 x i64>* %2477, align 8, !alias.scope !97
  %2479 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %2476, i64 2
  %2480 = bitcast %class.CXFA_Node** %2479 to <2 x i64>*
  %2481 = load <2 x i64>, <2 x i64>* %2480, align 8, !alias.scope !97
  %2482 = bitcast %"class.cppgc::internal::BasicMember.70"* %2475 to <2 x i64>*
  store <2 x i64> %2478, <2 x i64>* %2482, align 8, !alias.scope !100, !noalias !97
  %2483 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2475, i64 2
  %2484 = bitcast %"class.cppgc::internal::BasicMember.70"* %2483 to <2 x i64>*
  store <2 x i64> %2481, <2 x i64>* %2484, align 8, !alias.scope !100, !noalias !97
  %2485 = or i64 %2473, 4
  %2486 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2427, i64 %2485
  %2487 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %2417, i64 %2485
  %2488 = bitcast %class.CXFA_Node** %2487 to <2 x i64>*
  %2489 = load <2 x i64>, <2 x i64>* %2488, align 8, !alias.scope !97
  %2490 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %2487, i64 2
  %2491 = bitcast %class.CXFA_Node** %2490 to <2 x i64>*
  %2492 = load <2 x i64>, <2 x i64>* %2491, align 8, !alias.scope !97
  %2493 = bitcast %"class.cppgc::internal::BasicMember.70"* %2486 to <2 x i64>*
  store <2 x i64> %2489, <2 x i64>* %2493, align 8, !alias.scope !100, !noalias !97
  %2494 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2486, i64 2
  %2495 = bitcast %"class.cppgc::internal::BasicMember.70"* %2494 to <2 x i64>*
  store <2 x i64> %2492, <2 x i64>* %2495, align 8, !alias.scope !100, !noalias !97
  %2496 = or i64 %2473, 8
  %2497 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2427, i64 %2496
  %2498 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %2417, i64 %2496
  %2499 = bitcast %class.CXFA_Node** %2498 to <2 x i64>*
  %2500 = load <2 x i64>, <2 x i64>* %2499, align 8, !alias.scope !97
  %2501 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %2498, i64 2
  %2502 = bitcast %class.CXFA_Node** %2501 to <2 x i64>*
  %2503 = load <2 x i64>, <2 x i64>* %2502, align 8, !alias.scope !97
  %2504 = bitcast %"class.cppgc::internal::BasicMember.70"* %2497 to <2 x i64>*
  store <2 x i64> %2500, <2 x i64>* %2504, align 8, !alias.scope !100, !noalias !97
  %2505 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2497, i64 2
  %2506 = bitcast %"class.cppgc::internal::BasicMember.70"* %2505 to <2 x i64>*
  store <2 x i64> %2503, <2 x i64>* %2506, align 8, !alias.scope !100, !noalias !97
  %2507 = or i64 %2473, 12
  %2508 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2427, i64 %2507
  %2509 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %2417, i64 %2507
  %2510 = bitcast %class.CXFA_Node** %2509 to <2 x i64>*
  %2511 = load <2 x i64>, <2 x i64>* %2510, align 8, !alias.scope !97
  %2512 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %2509, i64 2
  %2513 = bitcast %class.CXFA_Node** %2512 to <2 x i64>*
  %2514 = load <2 x i64>, <2 x i64>* %2513, align 8, !alias.scope !97
  %2515 = bitcast %"class.cppgc::internal::BasicMember.70"* %2508 to <2 x i64>*
  store <2 x i64> %2511, <2 x i64>* %2515, align 8, !alias.scope !100, !noalias !97
  %2516 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2508, i64 2
  %2517 = bitcast %"class.cppgc::internal::BasicMember.70"* %2516 to <2 x i64>*
  store <2 x i64> %2514, <2 x i64>* %2517, align 8, !alias.scope !100, !noalias !97
  %2518 = add i64 %2473, 16
  %2519 = add i64 %2474, -4
  %2520 = icmp eq i64 %2519, 0
  br i1 %2520, label %2521, label %2472, !llvm.loop !102

2521:                                             ; preds = %2472, %2461
  %2522 = phi i64 [ 0, %2461 ], [ %2518, %2472 ]
  %2523 = icmp eq i64 %2468, 0
  br i1 %2523, label %2540, label %2524

2524:                                             ; preds = %2521, %2524
  %2525 = phi i64 [ %2537, %2524 ], [ %2522, %2521 ]
  %2526 = phi i64 [ %2538, %2524 ], [ %2468, %2521 ]
  %2527 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2427, i64 %2525
  %2528 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %2417, i64 %2525
  %2529 = bitcast %class.CXFA_Node** %2528 to <2 x i64>*
  %2530 = load <2 x i64>, <2 x i64>* %2529, align 8, !alias.scope !97
  %2531 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %2528, i64 2
  %2532 = bitcast %class.CXFA_Node** %2531 to <2 x i64>*
  %2533 = load <2 x i64>, <2 x i64>* %2532, align 8, !alias.scope !97
  %2534 = bitcast %"class.cppgc::internal::BasicMember.70"* %2527 to <2 x i64>*
  store <2 x i64> %2530, <2 x i64>* %2534, align 8, !alias.scope !100, !noalias !97
  %2535 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2527, i64 2
  %2536 = bitcast %"class.cppgc::internal::BasicMember.70"* %2535 to <2 x i64>*
  store <2 x i64> %2533, <2 x i64>* %2536, align 8, !alias.scope !100, !noalias !97
  %2537 = add i64 %2525, 4
  %2538 = add i64 %2526, -1
  %2539 = icmp eq i64 %2538, 0
  br i1 %2539, label %2540, label %2524, !llvm.loop !103

2540:                                             ; preds = %2524, %2521
  %2541 = icmp eq i64 %2443, %2462
  br i1 %2541, label %2613, label %2542

2542:                                             ; preds = %2540, %2445, %2436
  %2543 = phi %"class.cppgc::internal::BasicMember.70"* [ %2427, %2445 ], [ %2427, %2436 ], [ %2463, %2540 ]
  %2544 = phi %class.CXFA_Node** [ %2417, %2445 ], [ %2417, %2436 ], [ %2464, %2540 ]
  %2545 = ptrtoint %class.CXFA_Node** %2544 to i64
  %2546 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %2419, i64 -1
  %2547 = ptrtoint %class.CXFA_Node** %2546 to i64
  %2548 = sub i64 %2547, %2545
  %2549 = lshr i64 %2548, 3
  %2550 = add nuw nsw i64 %2549, 1
  %2551 = and i64 %2550, 7
  %2552 = icmp eq i64 %2551, 0
  br i1 %2552, label %2564, label %2553

2553:                                             ; preds = %2542, %2553
  %2554 = phi %"class.cppgc::internal::BasicMember.70"* [ %2561, %2553 ], [ %2543, %2542 ]
  %2555 = phi %class.CXFA_Node** [ %2560, %2553 ], [ %2544, %2542 ]
  %2556 = phi i64 [ %2562, %2553 ], [ %2551, %2542 ]
  %2557 = bitcast %"class.cppgc::internal::BasicMember.70"* %2554 to i64*
  %2558 = bitcast %class.CXFA_Node** %2555 to i64*
  %2559 = load i64, i64* %2558, align 8
  store i64 %2559, i64* %2557, align 8
  %2560 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %2555, i64 1
  %2561 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2554, i64 1
  %2562 = add i64 %2556, -1
  %2563 = icmp eq i64 %2562, 0
  br i1 %2563, label %2564, label %2553, !llvm.loop !104

2564:                                             ; preds = %2553, %2542
  %2565 = phi %"class.cppgc::internal::BasicMember.70"* [ undef, %2542 ], [ %2561, %2553 ]
  %2566 = phi %"class.cppgc::internal::BasicMember.70"* [ %2543, %2542 ], [ %2561, %2553 ]
  %2567 = phi %class.CXFA_Node** [ %2544, %2542 ], [ %2560, %2553 ]
  %2568 = icmp ult i64 %2548, 56
  br i1 %2568, label %2613, label %2569

2569:                                             ; preds = %2564, %2569
  %2570 = phi %"class.cppgc::internal::BasicMember.70"* [ %2611, %2569 ], [ %2566, %2564 ]
  %2571 = phi %class.CXFA_Node** [ %2610, %2569 ], [ %2567, %2564 ]
  %2572 = bitcast %"class.cppgc::internal::BasicMember.70"* %2570 to i64*
  %2573 = bitcast %class.CXFA_Node** %2571 to i64*
  %2574 = load i64, i64* %2573, align 8
  store i64 %2574, i64* %2572, align 8
  %2575 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %2571, i64 1
  %2576 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2570, i64 1
  %2577 = bitcast %"class.cppgc::internal::BasicMember.70"* %2576 to i64*
  %2578 = bitcast %class.CXFA_Node** %2575 to i64*
  %2579 = load i64, i64* %2578, align 8
  store i64 %2579, i64* %2577, align 8
  %2580 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %2571, i64 2
  %2581 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2570, i64 2
  %2582 = bitcast %"class.cppgc::internal::BasicMember.70"* %2581 to i64*
  %2583 = bitcast %class.CXFA_Node** %2580 to i64*
  %2584 = load i64, i64* %2583, align 8
  store i64 %2584, i64* %2582, align 8
  %2585 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %2571, i64 3
  %2586 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2570, i64 3
  %2587 = bitcast %"class.cppgc::internal::BasicMember.70"* %2586 to i64*
  %2588 = bitcast %class.CXFA_Node** %2585 to i64*
  %2589 = load i64, i64* %2588, align 8
  store i64 %2589, i64* %2587, align 8
  %2590 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %2571, i64 4
  %2591 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2570, i64 4
  %2592 = bitcast %"class.cppgc::internal::BasicMember.70"* %2591 to i64*
  %2593 = bitcast %class.CXFA_Node** %2590 to i64*
  %2594 = load i64, i64* %2593, align 8
  store i64 %2594, i64* %2592, align 8
  %2595 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %2571, i64 5
  %2596 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2570, i64 5
  %2597 = bitcast %"class.cppgc::internal::BasicMember.70"* %2596 to i64*
  %2598 = bitcast %class.CXFA_Node** %2595 to i64*
  %2599 = load i64, i64* %2598, align 8
  store i64 %2599, i64* %2597, align 8
  %2600 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %2571, i64 6
  %2601 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2570, i64 6
  %2602 = bitcast %"class.cppgc::internal::BasicMember.70"* %2601 to i64*
  %2603 = bitcast %class.CXFA_Node** %2600 to i64*
  %2604 = load i64, i64* %2603, align 8
  store i64 %2604, i64* %2602, align 8
  %2605 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %2571, i64 7
  %2606 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2570, i64 7
  %2607 = bitcast %"class.cppgc::internal::BasicMember.70"* %2606 to i64*
  %2608 = bitcast %class.CXFA_Node** %2605 to i64*
  %2609 = load i64, i64* %2608, align 8
  store i64 %2609, i64* %2607, align 8
  %2610 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %2571, i64 8
  %2611 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2570, i64 8
  %2612 = icmp eq %class.CXFA_Node** %2610, %2419
  br i1 %2612, label %2613, label %2569, !llvm.loop !105

2613:                                             ; preds = %2564, %2569, %2540
  %2614 = phi %"class.cppgc::internal::BasicMember.70"* [ %2463, %2540 ], [ %2565, %2564 ], [ %2611, %2569 ]
  %2615 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %2614 to i64
  %2616 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %2389, align 8
  br label %2617

2617:                                             ; preds = %2613, %2425
  %2618 = phi %"class.cppgc::internal::BasicMember.70"* [ %2412, %2425 ], [ %2616, %2613 ]
  %2619 = phi i64 [ %2434, %2425 ], [ %2615, %2613 ]
  store i64 %2619, i64* %2433, align 8
  br label %2620

2620:                                             ; preds = %2413, %2617
  %2621 = phi i64 [ 0, %2413 ], [ %2619, %2617 ]
  %2622 = phi i64 [ 0, %2413 ], [ %2434, %2617 ]
  %2623 = phi %"class.cppgc::internal::BasicMember.70"* [ %2412, %2413 ], [ %2618, %2617 ]
  %2624 = icmp eq %"class.cppgc::internal::BasicMember.70"* %2623, null
  br i1 %2624, label %2634, label %2625

2625:                                             ; preds = %2620
  %2626 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %2623 to i64
  store i64 %2626, i64* %36, align 8
  %2627 = bitcast %"class.cppgc::internal::BasicMember.70"* %2623 to i8*
  call void @_ZdlPv(i8* %2627) #10
  %2628 = bitcast %"class.std::__1::vector.90"* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2628, i8 0, i64 24, i1 false) #11
  %2629 = bitcast %"class.std::__1::vector.90"* %19 to i64*
  %2630 = load i64, i64* %2629, align 8
  %2631 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %19, i64 0, i32 0, i32 1
  %2632 = bitcast %"class.cppgc::internal::BasicMember.70"** %2631 to i64*
  %2633 = load i64, i64* %2632, align 8
  br label %2634

2634:                                             ; preds = %2625, %2620
  %2635 = phi i64 [ %2633, %2625 ], [ %2621, %2620 ]
  %2636 = phi i64 [ %2630, %2625 ], [ %2622, %2620 ]
  store i64 %2636, i64* %38, align 8
  store i64 %2635, i64* %36, align 8
  %2637 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %19, i64 0, i32 0, i32 2, i32 0, i32 0
  %2638 = bitcast %"class.cppgc::internal::BasicMember.70"** %2637 to i64*
  %2639 = load i64, i64* %2638, align 8
  %2640 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 7, i32 2, i32 0, i32 2, i32 0, i32 0
  %2641 = bitcast %"class.cppgc::internal::BasicMember.70"** %2640 to i64*
  store i64 %2639, i64* %2641, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2416) #11
  %2642 = ptrtoint %class.CXFA_Object* %2415 to i64
  %2643 = inttoptr i64 %2636 to i64*
  store atomic i64 %2642, i64* %2643 monotonic, align 8
  %2644 = bitcast %class.CXFA_Object* %2415 to i8*
  %2645 = and i64 %2642, -4294967296
  %2646 = sub i64 %2636, %2645
  %2647 = icmp ult i64 %2646, 4294967297
  br i1 %2647, label %2648, label %2654

2648:                                             ; preds = %2634
  %2649 = inttoptr i64 %2645 to %"struct.cppgc::internal::CagedHeapLocalData"*
  %2650 = getelementptr inbounds %"struct.cppgc::internal::CagedHeapLocalData", %"struct.cppgc::internal::CagedHeapLocalData"* %2649, i64 0, i32 0
  %2651 = load i8, i8* %2650, align 536870912, !range !13
  %2652 = icmp eq i8 %2651, 1
  br i1 %2652, label %2653, label %2654, !prof !57

2653:                                             ; preds = %2648
  call void @_ZN5cppgc8internal12WriteBarrier26DijkstraMarkingBarrierSlowEPKv(i8* %2644) #11
  br label %2654

2654:                                             ; preds = %2653, %2648, %2634, %2402
  %2655 = icmp eq i64 %2403, 0
  br i1 %2655, label %2658, label %2656

2656:                                             ; preds = %2654
  %2657 = inttoptr i64 %2403 to i8*
  call void @_ZdlPv(i8* %2657) #10
  br label %2658

2658:                                             ; preds = %2656, %2654, %2386
  call void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"* nonnull %20, %"class.fxcrt::WideString"* dereferenceable(8) %48) #11
  call void @_ZN23CFXJSE_ResolveProcessor15FilterConditionEPN2v87IsolateEN5fxcrt10WideStringEP22CFXJSE_ResolveNodeData(%class.CFXJSE_ResolveProcessor* %0, %"class.v8::Isolate"* %1, %"class.fxcrt::WideString"* nonnull %20, %class.CFXJSE_ResolveNodeData* %2)
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %20) #11
  %2659 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %34, i64 0, i32 0, i32 0
  %2660 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %2659, align 8
  %2661 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %35, align 8
  %2662 = icmp ne %"class.cppgc::internal::BasicMember.70"* %2660, %2661
  br label %2748

2663:                                             ; preds = %2380, %1675
  %2664 = and i32 %44, 64
  %2665 = icmp eq i32 %2664, 0
  br i1 %2665, label %2747, label %2666

2666:                                             ; preds = %2663
  %2667 = and i16 %43, 258
  %2668 = or i16 %2667, 104
  store i16 %2668, i16* %61, align 8
  %2669 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %1534, i64 0, i32 0
  store %class.CXFA_Object* %2669, %class.CXFA_Object** %56, align 8
  %2670 = load %class.CFXJSE_Engine*, %class.CFXJSE_Engine** %52, align 8
  %2671 = getelementptr inbounds %class.CFXJSE_Engine, %class.CFXJSE_Engine* %2670, i64 0, i32 10
  %2672 = bitcast %"class.cppgc::internal::BasicPersistent"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2672) #11
  %2673 = bitcast %"class.cppgc::internal::BasicPersistent"* %21 to %class.CXFA_Node**
  store %class.CXFA_Node* %1534, %class.CXFA_Node** %2673, align 8
  %2674 = getelementptr inbounds %"class.cppgc::internal::BasicPersistent", %"class.cppgc::internal::BasicPersistent"* %21, i64 0, i32 0, i32 1
  store %"class.cppgc::internal::PersistentNode"* null, %"class.cppgc::internal::PersistentNode"** %2674, align 8
  %2675 = icmp ult %class.CXFA_Node* %1534, inttoptr (i64 2 to %class.CXFA_Node*)
  br i1 %2675, label %2694, label %2676

2676:                                             ; preds = %2666
  %2677 = bitcast %class.CXFA_Node* %1534 to i8*
  %2678 = call dereferenceable(40) %"class.cppgc::internal::PersistentRegion"* @_ZN5cppgc8internal22StrongPersistentPolicy19GetPersistentRegionEPKv(i8* nonnull %2677) #11
  %2679 = getelementptr inbounds %"class.cppgc::internal::PersistentRegion", %"class.cppgc::internal::PersistentRegion"* %2678, i64 0, i32 1
  %2680 = load %"class.cppgc::internal::PersistentNode"*, %"class.cppgc::internal::PersistentNode"** %2679, align 8
  %2681 = icmp eq %"class.cppgc::internal::PersistentNode"* %2680, null
  br i1 %2681, label %2682, label %2684

2682:                                             ; preds = %2676
  call void @_ZN5cppgc8internal16PersistentRegion15EnsureNodeSlotsEv(%"class.cppgc::internal::PersistentRegion"* %2678) #11
  %2683 = load %"class.cppgc::internal::PersistentNode"*, %"class.cppgc::internal::PersistentNode"** %2679, align 8
  br label %2684

2684:                                             ; preds = %2682, %2676
  %2685 = phi %"class.cppgc::internal::PersistentNode"* [ %2680, %2676 ], [ %2683, %2682 ]
  %2686 = bitcast %"class.cppgc::internal::PersistentNode"* %2685 to i64*
  %2687 = load i64, i64* %2686, align 8
  %2688 = bitcast %"class.cppgc::internal::PersistentNode"** %2679 to i64*
  store i64 %2687, i64* %2688, align 8
  %2689 = bitcast %"class.cppgc::internal::PersistentNode"* %2685 to %"class.cppgc::internal::BasicPersistent"**
  store %"class.cppgc::internal::BasicPersistent"* %21, %"class.cppgc::internal::BasicPersistent"** %2689, align 8
  %2690 = getelementptr inbounds %"class.cppgc::internal::PersistentNode", %"class.cppgc::internal::PersistentNode"* %2685, i64 0, i32 1
  store void (%"class.cppgc::Visitor"*, i8*)* @_ZN5cppgc8internal15BasicPersistentI9CXFA_NodeNS0_22StrongPersistentPolicyENS0_20IgnoreLocationPolicyENS0_22DisabledCheckingPolicyEE5TraceEPNS_7VisitorEPKv, void (%"class.cppgc::Visitor"*, i8*)** %2690, align 8
  %2691 = getelementptr inbounds %"class.cppgc::internal::PersistentRegion", %"class.cppgc::internal::PersistentRegion"* %2678, i64 0, i32 2
  %2692 = load i64, i64* %2691, align 8
  %2693 = add i64 %2692, 1
  store i64 %2693, i64* %2691, align 8
  store %"class.cppgc::internal::PersistentNode"* %2685, %"class.cppgc::internal::PersistentNode"** %2674, align 8
  br label %2694

2694:                                             ; preds = %2666, %2684
  %2695 = getelementptr inbounds %class.CFXJSE_Engine, %class.CFXJSE_Engine* %2670, i64 0, i32 10, i32 0, i32 1
  %2696 = load %"class.cppgc::internal::BasicPersistent"*, %"class.cppgc::internal::BasicPersistent"** %2695, align 8
  %2697 = getelementptr inbounds %class.CFXJSE_Engine, %class.CFXJSE_Engine* %2670, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  %2698 = load %"class.cppgc::internal::BasicPersistent"*, %"class.cppgc::internal::BasicPersistent"** %2697, align 8
  %2699 = icmp ult %"class.cppgc::internal::BasicPersistent"* %2696, %2698
  br i1 %2699, label %2700, label %2713

2700:                                             ; preds = %2694
  %2701 = bitcast %"class.cppgc::internal::BasicPersistent"* %2696 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2701, i8* nonnull align 8 %2672, i64 16, i1 false) #11
  %2702 = bitcast %"class.cppgc::internal::BasicPersistent"* %2696 to i64*
  %2703 = load i64, i64* %2702, align 8
  %2704 = icmp ult i64 %2703, 2
  br i1 %2704, label %2709, label %2705

2705:                                             ; preds = %2700
  %2706 = getelementptr inbounds %"class.cppgc::internal::BasicPersistent", %"class.cppgc::internal::BasicPersistent"* %2696, i64 0, i32 0, i32 1
  %2707 = bitcast %"class.cppgc::internal::PersistentNode"** %2706 to %"class.cppgc::internal::BasicPersistent"***
  %2708 = load %"class.cppgc::internal::BasicPersistent"**, %"class.cppgc::internal::BasicPersistent"*** %2707, align 8
  store %"class.cppgc::internal::BasicPersistent"* %2696, %"class.cppgc::internal::BasicPersistent"** %2708, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2672, i8 0, i64 16, i1 false) #11
  br label %2709

2709:                                             ; preds = %2705, %2700
  %2710 = getelementptr inbounds %"class.cppgc::internal::BasicPersistent", %"class.cppgc::internal::BasicPersistent"* %2696, i64 1
  %2711 = ptrtoint %"class.cppgc::internal::BasicPersistent"* %2710 to i64
  %2712 = bitcast %"class.cppgc::internal::BasicPersistent"** %2695 to i64*
  store i64 %2711, i64* %2712, align 8
  br label %2714

2713:                                             ; preds = %2694
  call void @_ZNSt3__16vectorIN5cppgc8internal15BasicPersistentI9CXFA_NodeNS2_22StrongPersistentPolicyENS2_20IgnoreLocationPolicyENS2_22DisabledCheckingPolicyEEENS_9allocatorIS8_EEE21__push_back_slow_pathIS8_EEvOT_(%"class.std::__1::vector.47"* %2671, %"class.cppgc::internal::BasicPersistent"* nonnull dereferenceable(16) %21) #11
  br label %2714

2714:                                             ; preds = %2709, %2713
  %2715 = bitcast %"class.cppgc::internal::BasicPersistent"* %21 to i64*
  %2716 = load i64, i64* %2715, align 8
  %2717 = icmp ult i64 %2716, 2
  br i1 %2717, label %2730, label %2718

2718:                                             ; preds = %2714
  %2719 = inttoptr i64 %2716 to i8*
  %2720 = call dereferenceable(40) %"class.cppgc::internal::PersistentRegion"* @_ZN5cppgc8internal22StrongPersistentPolicy19GetPersistentRegionEPKv(i8* %2719) #11
  %2721 = load %"class.cppgc::internal::PersistentNode"*, %"class.cppgc::internal::PersistentNode"** %2674, align 8
  %2722 = getelementptr inbounds %"class.cppgc::internal::PersistentRegion", %"class.cppgc::internal::PersistentRegion"* %2720, i64 0, i32 1
  %2723 = bitcast %"class.cppgc::internal::PersistentNode"** %2722 to i64*
  %2724 = load i64, i64* %2723, align 8
  %2725 = bitcast %"class.cppgc::internal::PersistentNode"* %2721 to i64*
  store i64 %2724, i64* %2725, align 8
  %2726 = getelementptr inbounds %"class.cppgc::internal::PersistentNode", %"class.cppgc::internal::PersistentNode"* %2721, i64 0, i32 1
  store void (%"class.cppgc::Visitor"*, i8*)* null, void (%"class.cppgc::Visitor"*, i8*)** %2726, align 8
  store %"class.cppgc::internal::PersistentNode"* %2721, %"class.cppgc::internal::PersistentNode"** %2722, align 8
  %2727 = getelementptr inbounds %"class.cppgc::internal::PersistentRegion", %"class.cppgc::internal::PersistentRegion"* %2720, i64 0, i32 2
  %2728 = load i64, i64* %2727, align 8
  %2729 = add i64 %2728, -1
  store i64 %2729, i64* %2727, align 8
  store %"class.cppgc::internal::PersistentNode"* null, %"class.cppgc::internal::PersistentNode"** %2674, align 8
  br label %2730

2730:                                             ; preds = %2714, %2718
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2672) #11
  %2731 = call zeroext i1 @_ZN23CFXJSE_ResolveProcessor13ResolveNormalEPN2v87IsolateER22CFXJSE_ResolveNodeData(%class.CFXJSE_ResolveProcessor* %0, %"class.v8::Isolate"* %1, %class.CFXJSE_ResolveNodeData* nonnull dereferenceable(96) %4)
  %2732 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %35, align 8
  %2733 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %4, i64 0, i32 7, i32 2
  %2734 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %2733, i64 0, i32 0, i32 0
  %2735 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %2734, align 8
  %2736 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %4, i64 0, i32 7, i32 2, i32 0, i32 1
  %2737 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %2736, align 8
  %2738 = call %"class.cppgc::internal::BasicMember.70"* @_ZNSt3__16vectorIN5cppgc8internal11BasicMemberI11CXFA_ObjectNS2_15StrongMemberTagENS2_26DijkstraWriteBarrierPolicyENS2_22DisabledCheckingPolicyEEENS_9allocatorIS8_EEE6insertINS_11__wrap_iterIPS8_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS8_NS_15iterator_traitsISH_E9referenceEEE5valueESF_E4typeENSD_IPKS8_EESH_SH_(%"class.std::__1::vector.90"* %34, %"class.cppgc::internal::BasicMember.70"* %2732, %"class.cppgc::internal::BasicMember.70"* %2735, %"class.cppgc::internal::BasicMember.70"* %2737)
  %2739 = bitcast %"class.std::__1::vector.90"* %2733 to i64*
  %2740 = load i64, i64* %2739, align 8
  %2741 = bitcast %"class.cppgc::internal::BasicMember.70"** %2736 to i64*
  store i64 %2740, i64* %2741, align 8
  %2742 = load i64, i64* %36, align 8
  %2743 = load i64, i64* %38, align 8
  %2744 = sub i64 %2742, %2743
  %2745 = ashr exact i64 %2744, 3
  %2746 = icmp ugt i64 %2745, %41
  br i1 %2746, label %2748, label %2747

2747:                                             ; preds = %2730, %2663
  br label %2748

2748:                                             ; preds = %2730, %2087, %2082, %1977, %2658, %1526, %1037, %1674, %2747, %1669, %1056, %1347, %376
  %2749 = phi i1 [ %380, %376 ], [ %1351, %1347 ], [ %1530, %1526 ], [ %1041, %1037 ], [ true, %1056 ], [ false, %2747 ], [ true, %2730 ], [ false, %1674 ], [ true, %1669 ], [ true, %2087 ], [ true, %2082 ], [ true, %1977 ], [ %2662, %2658 ]
  %2750 = load %class.CXFA_Node**, %class.CXFA_Node*** %72, align 8
  %2751 = icmp eq %class.CXFA_Node** %2750, null
  br i1 %2751, label %2756, label %2752

2752:                                             ; preds = %2748
  %2753 = ptrtoint %class.CXFA_Node** %2750 to i64
  %2754 = bitcast %class.CXFA_Node*** %73 to i64*
  store i64 %2753, i64* %2754, align 8
  %2755 = bitcast %class.CXFA_Node** %2750 to i8*
  call void @_ZdlPv(i8* %2755) #10
  br label %2756

2756:                                             ; preds = %2748, %2752
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #11
  %2757 = load %class.CXFA_Node**, %class.CXFA_Node*** %68, align 8
  %2758 = icmp eq %class.CXFA_Node** %2757, null
  br i1 %2758, label %2763, label %2759

2759:                                             ; preds = %2756
  %2760 = ptrtoint %class.CXFA_Node** %2757 to i64
  %2761 = bitcast %class.CXFA_Node*** %69 to i64*
  store i64 %2760, i64* %2761, align 8
  %2762 = bitcast %class.CXFA_Node** %2757 to i8*
  call void @_ZdlPv(i8* %2762) #10
  br label %2763

2763:                                             ; preds = %2756, %2759
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #11
  call void @_ZN13CFXJSE_Engine13ResolveResultD1Ev(%"class.CFXJSE_Engine::ResolveResult"* %62) #11
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* %58) #11
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* %57) #11
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %49) #11
  br label %2764

2764:                                             ; preds = %25, %3, %2763
  %2765 = phi i1 [ %2749, %2763 ], [ false, %3 ], [ false, %25 ]
  ret i1 %2765
}

declare %class.CXFA_Node* @_Z6ToNodeP11CXFA_Object(%class.CXFA_Object*) local_unnamed_addr #2

declare %class.CXFA_Node* @_ZN9CXFA_Node18GetOneChildOfClassEN5fxcrt18StringViewTemplateIwEE(%class.CXFA_Node*, %"class.fxcrt::StringViewTemplate.97"*) local_unnamed_addr #2

declare %class.CXFA_Node* @_ZN9CXFA_Node16GetOneChildNamedEN5fxcrt18StringViewTemplateIwEE(%class.CXFA_Node*, %"class.fxcrt::StringViewTemplate.97"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare %class.CXFA_Node* @_ZN11CXFA_Object6AsNodeEv(%class.CXFA_Object*) local_unnamed_addr #2

declare void @_ZN9CXFA_Node11GetSiblingsEb(%"class.std::__1::vector.130"* sret, %class.CXFA_Node*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.CXFA_Node** @_ZNSt3__16vectorIP9CXFA_NodeNS_9allocatorIS2_EEE6insertINS_11__wrap_iterIPS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISB_E9referenceEEE5valueES9_E4typeENS7_IPKS2_EESB_SB_(%"class.std::__1::vector.130"*, %class.CXFA_Node**, %class.CXFA_Node**, %class.CXFA_Node**) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast %class.CXFA_Node** %2 to i8*
  %6 = bitcast %class.CXFA_Node** %1 to i8*
  %7 = ptrtoint %class.CXFA_Node** %1 to i64
  %8 = ptrtoint %class.CXFA_Node** %2 to i64
  %9 = getelementptr inbounds %"class.std::__1::vector.130", %"class.std::__1::vector.130"* %0, i64 0, i32 0, i32 0
  %10 = ptrtoint %class.CXFA_Node** %3 to i64
  %11 = sub i64 %10, %8
  %12 = ashr exact i64 %11, 3
  %13 = icmp sgt i64 %11, 0
  br i1 %13, label %14, label %772

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.std::__1::vector.130", %"class.std::__1::vector.130"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %class.CXFA_Node*** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::vector.130", %"class.std::__1::vector.130"* %0, i64 0, i32 0, i32 1
  %19 = load %class.CXFA_Node**, %class.CXFA_Node*** %18, align 8
  %20 = ptrtoint %class.CXFA_Node** %19 to i64
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 3
  %23 = icmp sgt i64 %12, %22
  %24 = bitcast %class.CXFA_Node*** %18 to i64*
  br i1 %23, label %359, label %25

25:                                               ; preds = %14
  %26 = sub i64 %20, %7
  %27 = ashr exact i64 %26, 3
  %28 = icmp sgt i64 %12, %27
  br i1 %28, label %29, label %214

29:                                               ; preds = %25
  %30 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %2, i64 %27
  %31 = icmp eq %class.CXFA_Node** %30, %3
  br i1 %31, label %209, label %32

32:                                               ; preds = %29
  %33 = xor i64 %27, -1
  %34 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %3, i64 %33
  %35 = ptrtoint %class.CXFA_Node** %34 to i64
  %36 = sub i64 %35, %8
  %37 = lshr i64 %36, 3
  %38 = add nuw nsw i64 %37, 1
  %39 = icmp ult i64 %38, 4
  br i1 %39, label %135, label %40

40:                                               ; preds = %32
  %41 = xor i64 %27, -1
  %42 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %3, i64 %41
  %43 = ptrtoint %class.CXFA_Node** %42 to i64
  %44 = sub i64 %43, %8
  %45 = lshr i64 %44, 3
  %46 = add nuw nsw i64 %45, 1
  %47 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %19, i64 %46
  %48 = add nsw i64 %27, %45
  %49 = add nsw i64 %48, 1
  %50 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %2, i64 %49
  %51 = icmp ult %class.CXFA_Node** %19, %50
  %52 = icmp ult %class.CXFA_Node** %30, %47
  %53 = and i1 %51, %52
  br i1 %53, label %135, label %54

54:                                               ; preds = %40
  %55 = and i64 %38, 4611686018427387900
  %56 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %19, i64 %55
  %57 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %30, i64 %55
  %58 = add nsw i64 %55, -4
  %59 = lshr exact i64 %58, 2
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 12
  br i1 %62, label %114, label %63

63:                                               ; preds = %54
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %19, i64 %66
  %69 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %30, i64 %66
  %70 = bitcast %class.CXFA_Node** %69 to <2 x i64>*
  %71 = load <2 x i64>, <2 x i64>* %70, align 8, !alias.scope !106
  %72 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %69, i64 2
  %73 = bitcast %class.CXFA_Node** %72 to <2 x i64>*
  %74 = load <2 x i64>, <2 x i64>* %73, align 8, !alias.scope !106
  %75 = bitcast %class.CXFA_Node** %68 to <2 x i64>*
  store <2 x i64> %71, <2 x i64>* %75, align 8, !alias.scope !109, !noalias !106
  %76 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %68, i64 2
  %77 = bitcast %class.CXFA_Node** %76 to <2 x i64>*
  store <2 x i64> %74, <2 x i64>* %77, align 8, !alias.scope !109, !noalias !106
  %78 = or i64 %66, 4
  %79 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %19, i64 %78
  %80 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %30, i64 %78
  %81 = bitcast %class.CXFA_Node** %80 to <2 x i64>*
  %82 = load <2 x i64>, <2 x i64>* %81, align 8, !alias.scope !106
  %83 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %80, i64 2
  %84 = bitcast %class.CXFA_Node** %83 to <2 x i64>*
  %85 = load <2 x i64>, <2 x i64>* %84, align 8, !alias.scope !106
  %86 = bitcast %class.CXFA_Node** %79 to <2 x i64>*
  store <2 x i64> %82, <2 x i64>* %86, align 8, !alias.scope !109, !noalias !106
  %87 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %79, i64 2
  %88 = bitcast %class.CXFA_Node** %87 to <2 x i64>*
  store <2 x i64> %85, <2 x i64>* %88, align 8, !alias.scope !109, !noalias !106
  %89 = or i64 %66, 8
  %90 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %19, i64 %89
  %91 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %30, i64 %89
  %92 = bitcast %class.CXFA_Node** %91 to <2 x i64>*
  %93 = load <2 x i64>, <2 x i64>* %92, align 8, !alias.scope !106
  %94 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %91, i64 2
  %95 = bitcast %class.CXFA_Node** %94 to <2 x i64>*
  %96 = load <2 x i64>, <2 x i64>* %95, align 8, !alias.scope !106
  %97 = bitcast %class.CXFA_Node** %90 to <2 x i64>*
  store <2 x i64> %93, <2 x i64>* %97, align 8, !alias.scope !109, !noalias !106
  %98 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %90, i64 2
  %99 = bitcast %class.CXFA_Node** %98 to <2 x i64>*
  store <2 x i64> %96, <2 x i64>* %99, align 8, !alias.scope !109, !noalias !106
  %100 = or i64 %66, 12
  %101 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %19, i64 %100
  %102 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %30, i64 %100
  %103 = bitcast %class.CXFA_Node** %102 to <2 x i64>*
  %104 = load <2 x i64>, <2 x i64>* %103, align 8, !alias.scope !106
  %105 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %102, i64 2
  %106 = bitcast %class.CXFA_Node** %105 to <2 x i64>*
  %107 = load <2 x i64>, <2 x i64>* %106, align 8, !alias.scope !106
  %108 = bitcast %class.CXFA_Node** %101 to <2 x i64>*
  store <2 x i64> %104, <2 x i64>* %108, align 8, !alias.scope !109, !noalias !106
  %109 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %101, i64 2
  %110 = bitcast %class.CXFA_Node** %109 to <2 x i64>*
  store <2 x i64> %107, <2 x i64>* %110, align 8, !alias.scope !109, !noalias !106
  %111 = add i64 %66, 16
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !111

114:                                              ; preds = %65, %54
  %115 = phi i64 [ 0, %54 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %19, i64 %118
  %121 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %30, i64 %118
  %122 = bitcast %class.CXFA_Node** %121 to <2 x i64>*
  %123 = load <2 x i64>, <2 x i64>* %122, align 8, !alias.scope !106
  %124 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %121, i64 2
  %125 = bitcast %class.CXFA_Node** %124 to <2 x i64>*
  %126 = load <2 x i64>, <2 x i64>* %125, align 8, !alias.scope !106
  %127 = bitcast %class.CXFA_Node** %120 to <2 x i64>*
  store <2 x i64> %123, <2 x i64>* %127, align 8, !alias.scope !109, !noalias !106
  %128 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %120, i64 2
  %129 = bitcast %class.CXFA_Node** %128 to <2 x i64>*
  store <2 x i64> %126, <2 x i64>* %129, align 8, !alias.scope !109, !noalias !106
  %130 = add i64 %118, 4
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !112

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %38, %55
  br i1 %134, label %206, label %135

135:                                              ; preds = %133, %40, %32
  %136 = phi %class.CXFA_Node** [ %19, %40 ], [ %19, %32 ], [ %56, %133 ]
  %137 = phi %class.CXFA_Node** [ %30, %40 ], [ %30, %32 ], [ %57, %133 ]
  %138 = ptrtoint %class.CXFA_Node** %137 to i64
  %139 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %3, i64 -1
  %140 = ptrtoint %class.CXFA_Node** %139 to i64
  %141 = sub i64 %140, %138
  %142 = lshr i64 %141, 3
  %143 = add nuw nsw i64 %142, 1
  %144 = and i64 %143, 7
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %157, label %146

146:                                              ; preds = %135, %146
  %147 = phi %class.CXFA_Node** [ %154, %146 ], [ %136, %135 ]
  %148 = phi %class.CXFA_Node** [ %153, %146 ], [ %137, %135 ]
  %149 = phi i64 [ %155, %146 ], [ %144, %135 ]
  %150 = bitcast %class.CXFA_Node** %147 to i64*
  %151 = bitcast %class.CXFA_Node** %148 to i64*
  %152 = load i64, i64* %151, align 8
  store i64 %152, i64* %150, align 8
  %153 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %148, i64 1
  %154 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %147, i64 1
  %155 = add i64 %149, -1
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %157, label %146, !llvm.loop !113

157:                                              ; preds = %146, %135
  %158 = phi %class.CXFA_Node** [ undef, %135 ], [ %154, %146 ]
  %159 = phi %class.CXFA_Node** [ %136, %135 ], [ %154, %146 ]
  %160 = phi %class.CXFA_Node** [ %137, %135 ], [ %153, %146 ]
  %161 = icmp ult i64 %141, 56
  br i1 %161, label %206, label %162

162:                                              ; preds = %157, %162
  %163 = phi %class.CXFA_Node** [ %204, %162 ], [ %159, %157 ]
  %164 = phi %class.CXFA_Node** [ %203, %162 ], [ %160, %157 ]
  %165 = bitcast %class.CXFA_Node** %163 to i64*
  %166 = bitcast %class.CXFA_Node** %164 to i64*
  %167 = load i64, i64* %166, align 8
  store i64 %167, i64* %165, align 8
  %168 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %164, i64 1
  %169 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %163, i64 1
  %170 = bitcast %class.CXFA_Node** %169 to i64*
  %171 = bitcast %class.CXFA_Node** %168 to i64*
  %172 = load i64, i64* %171, align 8
  store i64 %172, i64* %170, align 8
  %173 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %164, i64 2
  %174 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %163, i64 2
  %175 = bitcast %class.CXFA_Node** %174 to i64*
  %176 = bitcast %class.CXFA_Node** %173 to i64*
  %177 = load i64, i64* %176, align 8
  store i64 %177, i64* %175, align 8
  %178 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %164, i64 3
  %179 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %163, i64 3
  %180 = bitcast %class.CXFA_Node** %179 to i64*
  %181 = bitcast %class.CXFA_Node** %178 to i64*
  %182 = load i64, i64* %181, align 8
  store i64 %182, i64* %180, align 8
  %183 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %164, i64 4
  %184 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %163, i64 4
  %185 = bitcast %class.CXFA_Node** %184 to i64*
  %186 = bitcast %class.CXFA_Node** %183 to i64*
  %187 = load i64, i64* %186, align 8
  store i64 %187, i64* %185, align 8
  %188 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %164, i64 5
  %189 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %163, i64 5
  %190 = bitcast %class.CXFA_Node** %189 to i64*
  %191 = bitcast %class.CXFA_Node** %188 to i64*
  %192 = load i64, i64* %191, align 8
  store i64 %192, i64* %190, align 8
  %193 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %164, i64 6
  %194 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %163, i64 6
  %195 = bitcast %class.CXFA_Node** %194 to i64*
  %196 = bitcast %class.CXFA_Node** %193 to i64*
  %197 = load i64, i64* %196, align 8
  store i64 %197, i64* %195, align 8
  %198 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %164, i64 7
  %199 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %163, i64 7
  %200 = bitcast %class.CXFA_Node** %199 to i64*
  %201 = bitcast %class.CXFA_Node** %198 to i64*
  %202 = load i64, i64* %201, align 8
  store i64 %202, i64* %200, align 8
  %203 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %164, i64 8
  %204 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %163, i64 8
  %205 = icmp eq %class.CXFA_Node** %203, %3
  br i1 %205, label %206, label %162, !llvm.loop !114

206:                                              ; preds = %157, %162, %133
  %207 = phi %class.CXFA_Node** [ %56, %133 ], [ %158, %157 ], [ %204, %162 ]
  %208 = ptrtoint %class.CXFA_Node** %207 to i64
  br label %209

209:                                              ; preds = %206, %29
  %210 = phi i64 [ %20, %29 ], [ %208, %206 ]
  store i64 %210, i64* %24, align 8
  %211 = icmp sgt i64 %26, 0
  br i1 %211, label %212, label %772

212:                                              ; preds = %209
  %213 = inttoptr i64 %210 to %class.CXFA_Node**
  br label %214

214:                                              ; preds = %212, %25
  %215 = phi i64 [ %210, %212 ], [ %20, %25 ]
  %216 = phi %class.CXFA_Node** [ %213, %212 ], [ %19, %25 ]
  %217 = phi %class.CXFA_Node** [ %30, %212 ], [ %3, %25 ]
  %218 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %1, i64 %12
  %219 = ptrtoint %class.CXFA_Node** %218 to i64
  %220 = sub i64 %215, %219
  %221 = ashr exact i64 %220, 3
  %222 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %1, i64 %221
  %223 = icmp ult %class.CXFA_Node** %222, %19
  br i1 %223, label %224, label %337

224:                                              ; preds = %214
  %225 = sub nsw i64 0, %221
  %226 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %19, i64 %225
  %227 = bitcast %class.CXFA_Node** %226 to i8*
  %228 = xor i64 %7, -1
  %229 = getelementptr i8, i8* %227, i64 %228
  %230 = ptrtoint i8* %229 to i64
  %231 = lshr i64 %230, 3
  %232 = add nuw nsw i64 %231, 1
  %233 = icmp ult i64 %232, 4
  br i1 %233, label %234, label %237

234:                                              ; preds = %332, %237, %224
  %235 = phi %class.CXFA_Node** [ %216, %237 ], [ %216, %224 ], [ %255, %332 ]
  %236 = phi %class.CXFA_Node** [ %222, %237 ], [ %222, %224 ], [ %256, %332 ]
  br label %345

237:                                              ; preds = %224
  %238 = sub nsw i64 0, %221
  %239 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %19, i64 %238
  %240 = bitcast %class.CXFA_Node** %239 to i8*
  %241 = xor i64 %7, -1
  %242 = getelementptr i8, i8* %240, i64 %241
  %243 = ptrtoint i8* %242 to i64
  %244 = lshr i64 %243, 3
  %245 = add nuw nsw i64 %244, 1
  %246 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %216, i64 %245
  %247 = add nsw i64 %221, %244
  %248 = add nsw i64 %247, 1
  %249 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %1, i64 %248
  %250 = icmp ult %class.CXFA_Node** %216, %249
  %251 = icmp ult %class.CXFA_Node** %222, %246
  %252 = and i1 %250, %251
  br i1 %252, label %234, label %253

253:                                              ; preds = %237
  %254 = and i64 %232, 4611686018427387900
  %255 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %216, i64 %254
  %256 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %222, i64 %254
  %257 = add nsw i64 %254, -4
  %258 = lshr exact i64 %257, 2
  %259 = add nuw nsw i64 %258, 1
  %260 = and i64 %259, 3
  %261 = icmp ult i64 %257, 12
  br i1 %261, label %313, label %262

262:                                              ; preds = %253
  %263 = sub nsw i64 %259, %260
  br label %264

264:                                              ; preds = %264, %262
  %265 = phi i64 [ 0, %262 ], [ %310, %264 ]
  %266 = phi i64 [ %263, %262 ], [ %311, %264 ]
  %267 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %216, i64 %265
  %268 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %222, i64 %265
  %269 = bitcast %class.CXFA_Node** %268 to <2 x i64>*
  %270 = load <2 x i64>, <2 x i64>* %269, align 8, !alias.scope !115
  %271 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %268, i64 2
  %272 = bitcast %class.CXFA_Node** %271 to <2 x i64>*
  %273 = load <2 x i64>, <2 x i64>* %272, align 8, !alias.scope !115
  %274 = bitcast %class.CXFA_Node** %267 to <2 x i64>*
  store <2 x i64> %270, <2 x i64>* %274, align 8, !alias.scope !118, !noalias !115
  %275 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %267, i64 2
  %276 = bitcast %class.CXFA_Node** %275 to <2 x i64>*
  store <2 x i64> %273, <2 x i64>* %276, align 8, !alias.scope !118, !noalias !115
  %277 = or i64 %265, 4
  %278 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %216, i64 %277
  %279 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %222, i64 %277
  %280 = bitcast %class.CXFA_Node** %279 to <2 x i64>*
  %281 = load <2 x i64>, <2 x i64>* %280, align 8, !alias.scope !115
  %282 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %279, i64 2
  %283 = bitcast %class.CXFA_Node** %282 to <2 x i64>*
  %284 = load <2 x i64>, <2 x i64>* %283, align 8, !alias.scope !115
  %285 = bitcast %class.CXFA_Node** %278 to <2 x i64>*
  store <2 x i64> %281, <2 x i64>* %285, align 8, !alias.scope !118, !noalias !115
  %286 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %278, i64 2
  %287 = bitcast %class.CXFA_Node** %286 to <2 x i64>*
  store <2 x i64> %284, <2 x i64>* %287, align 8, !alias.scope !118, !noalias !115
  %288 = or i64 %265, 8
  %289 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %216, i64 %288
  %290 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %222, i64 %288
  %291 = bitcast %class.CXFA_Node** %290 to <2 x i64>*
  %292 = load <2 x i64>, <2 x i64>* %291, align 8, !alias.scope !115
  %293 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %290, i64 2
  %294 = bitcast %class.CXFA_Node** %293 to <2 x i64>*
  %295 = load <2 x i64>, <2 x i64>* %294, align 8, !alias.scope !115
  %296 = bitcast %class.CXFA_Node** %289 to <2 x i64>*
  store <2 x i64> %292, <2 x i64>* %296, align 8, !alias.scope !118, !noalias !115
  %297 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %289, i64 2
  %298 = bitcast %class.CXFA_Node** %297 to <2 x i64>*
  store <2 x i64> %295, <2 x i64>* %298, align 8, !alias.scope !118, !noalias !115
  %299 = or i64 %265, 12
  %300 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %216, i64 %299
  %301 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %222, i64 %299
  %302 = bitcast %class.CXFA_Node** %301 to <2 x i64>*
  %303 = load <2 x i64>, <2 x i64>* %302, align 8, !alias.scope !115
  %304 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %301, i64 2
  %305 = bitcast %class.CXFA_Node** %304 to <2 x i64>*
  %306 = load <2 x i64>, <2 x i64>* %305, align 8, !alias.scope !115
  %307 = bitcast %class.CXFA_Node** %300 to <2 x i64>*
  store <2 x i64> %303, <2 x i64>* %307, align 8, !alias.scope !118, !noalias !115
  %308 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %300, i64 2
  %309 = bitcast %class.CXFA_Node** %308 to <2 x i64>*
  store <2 x i64> %306, <2 x i64>* %309, align 8, !alias.scope !118, !noalias !115
  %310 = add i64 %265, 16
  %311 = add i64 %266, -4
  %312 = icmp eq i64 %311, 0
  br i1 %312, label %313, label %264, !llvm.loop !120

313:                                              ; preds = %264, %253
  %314 = phi i64 [ 0, %253 ], [ %310, %264 ]
  %315 = icmp eq i64 %260, 0
  br i1 %315, label %332, label %316

316:                                              ; preds = %313, %316
  %317 = phi i64 [ %329, %316 ], [ %314, %313 ]
  %318 = phi i64 [ %330, %316 ], [ %260, %313 ]
  %319 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %216, i64 %317
  %320 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %222, i64 %317
  %321 = bitcast %class.CXFA_Node** %320 to <2 x i64>*
  %322 = load <2 x i64>, <2 x i64>* %321, align 8, !alias.scope !115
  %323 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %320, i64 2
  %324 = bitcast %class.CXFA_Node** %323 to <2 x i64>*
  %325 = load <2 x i64>, <2 x i64>* %324, align 8, !alias.scope !115
  %326 = bitcast %class.CXFA_Node** %319 to <2 x i64>*
  store <2 x i64> %322, <2 x i64>* %326, align 8, !alias.scope !118, !noalias !115
  %327 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %319, i64 2
  %328 = bitcast %class.CXFA_Node** %327 to <2 x i64>*
  store <2 x i64> %325, <2 x i64>* %328, align 8, !alias.scope !118, !noalias !115
  %329 = add i64 %317, 4
  %330 = add i64 %318, -1
  %331 = icmp eq i64 %330, 0
  br i1 %331, label %332, label %316, !llvm.loop !121

332:                                              ; preds = %316, %313
  %333 = icmp eq i64 %232, %254
  br i1 %333, label %334, label %234

334:                                              ; preds = %345, %332
  %335 = phi %class.CXFA_Node** [ %255, %332 ], [ %352, %345 ]
  %336 = ptrtoint %class.CXFA_Node** %335 to i64
  br label %337

337:                                              ; preds = %334, %214
  %338 = phi i64 [ %336, %334 ], [ %215, %214 ]
  store i64 %338, i64* %24, align 8
  %339 = icmp eq i64 %220, 0
  br i1 %339, label %354, label %340

340:                                              ; preds = %337
  %341 = sub nsw i64 0, %221
  %342 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %216, i64 %341
  %343 = bitcast %class.CXFA_Node** %342 to i8*
  %344 = bitcast %class.CXFA_Node** %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %343, i8* align 8 %344, i64 %220, i1 false) #11
  br label %354

345:                                              ; preds = %234, %345
  %346 = phi %class.CXFA_Node** [ %352, %345 ], [ %235, %234 ]
  %347 = phi %class.CXFA_Node** [ %351, %345 ], [ %236, %234 ]
  %348 = bitcast %class.CXFA_Node** %347 to i64*
  %349 = load i64, i64* %348, align 8
  %350 = bitcast %class.CXFA_Node** %346 to i64*
  store i64 %349, i64* %350, align 8
  %351 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %347, i64 1
  %352 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %346, i64 1
  %353 = icmp ult %class.CXFA_Node** %351, %19
  br i1 %353, label %345, label %334, !llvm.loop !122

354:                                              ; preds = %337, %340
  %355 = ptrtoint %class.CXFA_Node** %217 to i64
  %356 = sub i64 %355, %8
  %357 = icmp eq i64 %356, 0
  br i1 %357, label %772, label %358

358:                                              ; preds = %354
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %5, i64 %356, i1 false) #11
  br label %772

359:                                              ; preds = %14
  %360 = bitcast %"class.std::__1::vector.130"* %0 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = sub i64 %20, %361
  %363 = ashr exact i64 %362, 3
  %364 = add nsw i64 %363, %12
  %365 = icmp ugt i64 %364, 2305843009213693951
  br i1 %365, label %366, label %368

366:                                              ; preds = %359
  %367 = bitcast %"class.std::__1::vector.130"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %367) #12
  unreachable

368:                                              ; preds = %359
  %369 = sub i64 %17, %361
  %370 = ashr exact i64 %369, 3
  %371 = icmp ult i64 %370, 1152921504606846975
  br i1 %371, label %375, label %372

372:                                              ; preds = %368
  %373 = sub i64 %7, %361
  %374 = ashr exact i64 %373, 3
  br label %385

375:                                              ; preds = %368
  %376 = ashr exact i64 %369, 2
  %377 = icmp ult i64 %376, %364
  %378 = select i1 %377, i64 %364, i64 %376
  %379 = sub i64 %7, %361
  %380 = ashr exact i64 %379, 3
  %381 = icmp eq i64 %378, 0
  br i1 %381, label %391, label %382

382:                                              ; preds = %375
  %383 = icmp ugt i64 %378, 2305843009213693951
  br i1 %383, label %384, label %385

384:                                              ; preds = %382
  tail call void @abort() #12
  unreachable

385:                                              ; preds = %372, %382
  %386 = phi i64 [ 2305843009213693951, %372 ], [ %378, %382 ]
  %387 = phi i64 [ %374, %372 ], [ %380, %382 ]
  %388 = shl i64 %386, 3
  %389 = tail call i8* @_Znwm(i64 %388) #10
  %390 = bitcast i8* %389 to %class.CXFA_Node**
  br label %391

391:                                              ; preds = %385, %375
  %392 = phi i64 [ %387, %385 ], [ %380, %375 ]
  %393 = phi i64 [ %386, %385 ], [ 0, %375 ]
  %394 = phi %class.CXFA_Node** [ %390, %385 ], [ null, %375 ]
  %395 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %394, i64 %392
  %396 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %394, i64 %393
  %397 = ptrtoint %class.CXFA_Node** %396 to i64
  %398 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %395, i64 %12
  %399 = add i64 %11, -8
  %400 = lshr i64 %399, 3
  %401 = add nuw nsw i64 %400, 1
  %402 = icmp ult i64 %401, 4
  br i1 %402, label %496, label %403

403:                                              ; preds = %391
  %404 = add i64 %11, -8
  %405 = lshr i64 %404, 3
  %406 = add nsw i64 %392, %405
  %407 = add nsw i64 %406, 1
  %408 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %394, i64 %407
  %409 = add nuw nsw i64 %405, 1
  %410 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %2, i64 %409
  %411 = icmp ult %class.CXFA_Node** %395, %410
  %412 = icmp ugt %class.CXFA_Node** %408, %2
  %413 = and i1 %411, %412
  br i1 %413, label %496, label %414

414:                                              ; preds = %403
  %415 = and i64 %401, 4611686018427387900
  %416 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %395, i64 %415
  %417 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %395, i64 %415
  %418 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %2, i64 %415
  %419 = add nsw i64 %415, -4
  %420 = lshr exact i64 %419, 2
  %421 = add nuw nsw i64 %420, 1
  %422 = and i64 %421, 3
  %423 = icmp ult i64 %419, 12
  br i1 %423, label %475, label %424

424:                                              ; preds = %414
  %425 = sub nsw i64 %421, %422
  br label %426

426:                                              ; preds = %426, %424
  %427 = phi i64 [ 0, %424 ], [ %472, %426 ]
  %428 = phi i64 [ %425, %424 ], [ %473, %426 ]
  %429 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %395, i64 %427
  %430 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %2, i64 %427
  %431 = bitcast %class.CXFA_Node** %430 to <2 x i64>*
  %432 = load <2 x i64>, <2 x i64>* %431, align 8, !alias.scope !123
  %433 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %430, i64 2
  %434 = bitcast %class.CXFA_Node** %433 to <2 x i64>*
  %435 = load <2 x i64>, <2 x i64>* %434, align 8, !alias.scope !123
  %436 = bitcast %class.CXFA_Node** %429 to <2 x i64>*
  store <2 x i64> %432, <2 x i64>* %436, align 8, !alias.scope !126, !noalias !123
  %437 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %429, i64 2
  %438 = bitcast %class.CXFA_Node** %437 to <2 x i64>*
  store <2 x i64> %435, <2 x i64>* %438, align 8, !alias.scope !126, !noalias !123
  %439 = or i64 %427, 4
  %440 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %395, i64 %439
  %441 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %2, i64 %439
  %442 = bitcast %class.CXFA_Node** %441 to <2 x i64>*
  %443 = load <2 x i64>, <2 x i64>* %442, align 8, !alias.scope !123
  %444 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %441, i64 2
  %445 = bitcast %class.CXFA_Node** %444 to <2 x i64>*
  %446 = load <2 x i64>, <2 x i64>* %445, align 8, !alias.scope !123
  %447 = bitcast %class.CXFA_Node** %440 to <2 x i64>*
  store <2 x i64> %443, <2 x i64>* %447, align 8, !alias.scope !126, !noalias !123
  %448 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %440, i64 2
  %449 = bitcast %class.CXFA_Node** %448 to <2 x i64>*
  store <2 x i64> %446, <2 x i64>* %449, align 8, !alias.scope !126, !noalias !123
  %450 = or i64 %427, 8
  %451 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %395, i64 %450
  %452 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %2, i64 %450
  %453 = bitcast %class.CXFA_Node** %452 to <2 x i64>*
  %454 = load <2 x i64>, <2 x i64>* %453, align 8, !alias.scope !123
  %455 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %452, i64 2
  %456 = bitcast %class.CXFA_Node** %455 to <2 x i64>*
  %457 = load <2 x i64>, <2 x i64>* %456, align 8, !alias.scope !123
  %458 = bitcast %class.CXFA_Node** %451 to <2 x i64>*
  store <2 x i64> %454, <2 x i64>* %458, align 8, !alias.scope !126, !noalias !123
  %459 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %451, i64 2
  %460 = bitcast %class.CXFA_Node** %459 to <2 x i64>*
  store <2 x i64> %457, <2 x i64>* %460, align 8, !alias.scope !126, !noalias !123
  %461 = or i64 %427, 12
  %462 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %395, i64 %461
  %463 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %2, i64 %461
  %464 = bitcast %class.CXFA_Node** %463 to <2 x i64>*
  %465 = load <2 x i64>, <2 x i64>* %464, align 8, !alias.scope !123
  %466 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %463, i64 2
  %467 = bitcast %class.CXFA_Node** %466 to <2 x i64>*
  %468 = load <2 x i64>, <2 x i64>* %467, align 8, !alias.scope !123
  %469 = bitcast %class.CXFA_Node** %462 to <2 x i64>*
  store <2 x i64> %465, <2 x i64>* %469, align 8, !alias.scope !126, !noalias !123
  %470 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %462, i64 2
  %471 = bitcast %class.CXFA_Node** %470 to <2 x i64>*
  store <2 x i64> %468, <2 x i64>* %471, align 8, !alias.scope !126, !noalias !123
  %472 = add i64 %427, 16
  %473 = add i64 %428, -4
  %474 = icmp eq i64 %473, 0
  br i1 %474, label %475, label %426, !llvm.loop !128

475:                                              ; preds = %426, %414
  %476 = phi i64 [ 0, %414 ], [ %472, %426 ]
  %477 = icmp eq i64 %422, 0
  br i1 %477, label %494, label %478

478:                                              ; preds = %475, %478
  %479 = phi i64 [ %491, %478 ], [ %476, %475 ]
  %480 = phi i64 [ %492, %478 ], [ %422, %475 ]
  %481 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %395, i64 %479
  %482 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %2, i64 %479
  %483 = bitcast %class.CXFA_Node** %482 to <2 x i64>*
  %484 = load <2 x i64>, <2 x i64>* %483, align 8, !alias.scope !123
  %485 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %482, i64 2
  %486 = bitcast %class.CXFA_Node** %485 to <2 x i64>*
  %487 = load <2 x i64>, <2 x i64>* %486, align 8, !alias.scope !123
  %488 = bitcast %class.CXFA_Node** %481 to <2 x i64>*
  store <2 x i64> %484, <2 x i64>* %488, align 8, !alias.scope !126, !noalias !123
  %489 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %481, i64 2
  %490 = bitcast %class.CXFA_Node** %489 to <2 x i64>*
  store <2 x i64> %487, <2 x i64>* %490, align 8, !alias.scope !126, !noalias !123
  %491 = add i64 %479, 4
  %492 = add i64 %480, -1
  %493 = icmp eq i64 %492, 0
  br i1 %493, label %494, label %478, !llvm.loop !129

494:                                              ; preds = %478, %475
  %495 = icmp eq i64 %401, %415
  br i1 %495, label %572, label %496

496:                                              ; preds = %494, %403, %391
  %497 = phi %class.CXFA_Node** [ %395, %403 ], [ %395, %391 ], [ %416, %494 ]
  %498 = phi %class.CXFA_Node** [ %395, %403 ], [ %395, %391 ], [ %417, %494 ]
  %499 = phi %class.CXFA_Node** [ %2, %403 ], [ %2, %391 ], [ %418, %494 ]
  %500 = ptrtoint %class.CXFA_Node** %497 to i64
  %501 = add nsw i64 %392, %12
  %502 = add nsw i64 %501, -1
  %503 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %394, i64 %502
  %504 = ptrtoint %class.CXFA_Node** %503 to i64
  %505 = sub i64 %504, %500
  %506 = lshr i64 %505, 3
  %507 = add nuw nsw i64 %506, 1
  %508 = and i64 %507, 7
  %509 = icmp eq i64 %508, 0
  br i1 %509, label %522, label %510

510:                                              ; preds = %496, %510
  %511 = phi %class.CXFA_Node** [ %518, %510 ], [ %497, %496 ]
  %512 = phi %class.CXFA_Node** [ %518, %510 ], [ %498, %496 ]
  %513 = phi %class.CXFA_Node** [ %519, %510 ], [ %499, %496 ]
  %514 = phi i64 [ %520, %510 ], [ %508, %496 ]
  %515 = bitcast %class.CXFA_Node** %513 to i64*
  %516 = load i64, i64* %515, align 8
  %517 = bitcast %class.CXFA_Node** %512 to i64*
  store i64 %516, i64* %517, align 8
  %518 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %511, i64 1
  %519 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %513, i64 1
  %520 = add i64 %514, -1
  %521 = icmp eq i64 %520, 0
  br i1 %521, label %522, label %510, !llvm.loop !130

522:                                              ; preds = %510, %496
  %523 = phi %class.CXFA_Node** [ %497, %496 ], [ %518, %510 ]
  %524 = phi %class.CXFA_Node** [ %498, %496 ], [ %518, %510 ]
  %525 = phi %class.CXFA_Node** [ %499, %496 ], [ %519, %510 ]
  %526 = icmp ult i64 %505, 56
  br i1 %526, label %572, label %527

527:                                              ; preds = %522, %527
  %528 = phi %class.CXFA_Node** [ %569, %527 ], [ %523, %522 ]
  %529 = phi %class.CXFA_Node** [ %569, %527 ], [ %524, %522 ]
  %530 = phi %class.CXFA_Node** [ %570, %527 ], [ %525, %522 ]
  %531 = bitcast %class.CXFA_Node** %530 to i64*
  %532 = load i64, i64* %531, align 8
  %533 = bitcast %class.CXFA_Node** %529 to i64*
  store i64 %532, i64* %533, align 8
  %534 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %528, i64 1
  %535 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %530, i64 1
  %536 = bitcast %class.CXFA_Node** %535 to i64*
  %537 = load i64, i64* %536, align 8
  %538 = bitcast %class.CXFA_Node** %534 to i64*
  store i64 %537, i64* %538, align 8
  %539 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %528, i64 2
  %540 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %530, i64 2
  %541 = bitcast %class.CXFA_Node** %540 to i64*
  %542 = load i64, i64* %541, align 8
  %543 = bitcast %class.CXFA_Node** %539 to i64*
  store i64 %542, i64* %543, align 8
  %544 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %528, i64 3
  %545 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %530, i64 3
  %546 = bitcast %class.CXFA_Node** %545 to i64*
  %547 = load i64, i64* %546, align 8
  %548 = bitcast %class.CXFA_Node** %544 to i64*
  store i64 %547, i64* %548, align 8
  %549 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %528, i64 4
  %550 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %530, i64 4
  %551 = bitcast %class.CXFA_Node** %550 to i64*
  %552 = load i64, i64* %551, align 8
  %553 = bitcast %class.CXFA_Node** %549 to i64*
  store i64 %552, i64* %553, align 8
  %554 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %528, i64 5
  %555 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %530, i64 5
  %556 = bitcast %class.CXFA_Node** %555 to i64*
  %557 = load i64, i64* %556, align 8
  %558 = bitcast %class.CXFA_Node** %554 to i64*
  store i64 %557, i64* %558, align 8
  %559 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %528, i64 6
  %560 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %530, i64 6
  %561 = bitcast %class.CXFA_Node** %560 to i64*
  %562 = load i64, i64* %561, align 8
  %563 = bitcast %class.CXFA_Node** %559 to i64*
  store i64 %562, i64* %563, align 8
  %564 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %528, i64 7
  %565 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %530, i64 7
  %566 = bitcast %class.CXFA_Node** %565 to i64*
  %567 = load i64, i64* %566, align 8
  %568 = bitcast %class.CXFA_Node** %564 to i64*
  store i64 %567, i64* %568, align 8
  %569 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %528, i64 8
  %570 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %530, i64 8
  %571 = icmp eq %class.CXFA_Node** %398, %569
  br i1 %571, label %572, label %527, !llvm.loop !131

572:                                              ; preds = %522, %527, %494
  %573 = load %class.CXFA_Node**, %class.CXFA_Node*** %9, align 8
  %574 = ptrtoint %class.CXFA_Node** %573 to i64
  %575 = sub i64 %7, %574
  %576 = ashr exact i64 %575, 3
  %577 = sub nsw i64 0, %576
  %578 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %395, i64 %577
  %579 = ptrtoint %class.CXFA_Node** %578 to i64
  %580 = icmp sgt i64 %575, 0
  br i1 %580, label %581, label %584

581:                                              ; preds = %572
  %582 = bitcast %class.CXFA_Node** %578 to i8*
  %583 = bitcast %class.CXFA_Node** %573 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %582, i8* align 8 %583, i64 %575, i1 false) #11
  br label %584

584:                                              ; preds = %581, %572
  %585 = load %class.CXFA_Node**, %class.CXFA_Node*** %18, align 8
  %586 = icmp eq %class.CXFA_Node** %585, %1
  br i1 %586, label %765, label %587

587:                                              ; preds = %584
  %588 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %585, i64 -1
  %589 = ptrtoint %class.CXFA_Node** %588 to i64
  %590 = sub i64 %589, %7
  %591 = lshr i64 %590, 3
  %592 = add nuw nsw i64 %591, 1
  %593 = icmp ult i64 %592, 4
  br i1 %593, label %690, label %594

594:                                              ; preds = %587
  %595 = add nsw i64 %392, %12
  %596 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %585, i64 -1
  %597 = ptrtoint %class.CXFA_Node** %596 to i64
  %598 = sub i64 %597, %7
  %599 = lshr i64 %598, 3
  %600 = add nsw i64 %595, %599
  %601 = add nsw i64 %600, 1
  %602 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %394, i64 %601
  %603 = add nuw nsw i64 %599, 1
  %604 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %1, i64 %603
  %605 = icmp ult %class.CXFA_Node** %398, %604
  %606 = icmp ugt %class.CXFA_Node** %602, %1
  %607 = and i1 %605, %606
  br i1 %607, label %690, label %608

608:                                              ; preds = %594
  %609 = and i64 %592, 4611686018427387900
  %610 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %398, i64 %609
  %611 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %398, i64 %609
  %612 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %1, i64 %609
  %613 = add nsw i64 %609, -4
  %614 = lshr exact i64 %613, 2
  %615 = add nuw nsw i64 %614, 1
  %616 = and i64 %615, 3
  %617 = icmp ult i64 %613, 12
  br i1 %617, label %669, label %618

618:                                              ; preds = %608
  %619 = sub nsw i64 %615, %616
  br label %620

620:                                              ; preds = %620, %618
  %621 = phi i64 [ 0, %618 ], [ %666, %620 ]
  %622 = phi i64 [ %619, %618 ], [ %667, %620 ]
  %623 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %398, i64 %621
  %624 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %1, i64 %621
  %625 = bitcast %class.CXFA_Node** %624 to <2 x i64>*
  %626 = load <2 x i64>, <2 x i64>* %625, align 8, !alias.scope !132
  %627 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %624, i64 2
  %628 = bitcast %class.CXFA_Node** %627 to <2 x i64>*
  %629 = load <2 x i64>, <2 x i64>* %628, align 8, !alias.scope !132
  %630 = bitcast %class.CXFA_Node** %623 to <2 x i64>*
  store <2 x i64> %626, <2 x i64>* %630, align 8, !alias.scope !135, !noalias !132
  %631 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %623, i64 2
  %632 = bitcast %class.CXFA_Node** %631 to <2 x i64>*
  store <2 x i64> %629, <2 x i64>* %632, align 8, !alias.scope !135, !noalias !132
  %633 = or i64 %621, 4
  %634 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %398, i64 %633
  %635 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %1, i64 %633
  %636 = bitcast %class.CXFA_Node** %635 to <2 x i64>*
  %637 = load <2 x i64>, <2 x i64>* %636, align 8, !alias.scope !132
  %638 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %635, i64 2
  %639 = bitcast %class.CXFA_Node** %638 to <2 x i64>*
  %640 = load <2 x i64>, <2 x i64>* %639, align 8, !alias.scope !132
  %641 = bitcast %class.CXFA_Node** %634 to <2 x i64>*
  store <2 x i64> %637, <2 x i64>* %641, align 8, !alias.scope !135, !noalias !132
  %642 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %634, i64 2
  %643 = bitcast %class.CXFA_Node** %642 to <2 x i64>*
  store <2 x i64> %640, <2 x i64>* %643, align 8, !alias.scope !135, !noalias !132
  %644 = or i64 %621, 8
  %645 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %398, i64 %644
  %646 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %1, i64 %644
  %647 = bitcast %class.CXFA_Node** %646 to <2 x i64>*
  %648 = load <2 x i64>, <2 x i64>* %647, align 8, !alias.scope !132
  %649 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %646, i64 2
  %650 = bitcast %class.CXFA_Node** %649 to <2 x i64>*
  %651 = load <2 x i64>, <2 x i64>* %650, align 8, !alias.scope !132
  %652 = bitcast %class.CXFA_Node** %645 to <2 x i64>*
  store <2 x i64> %648, <2 x i64>* %652, align 8, !alias.scope !135, !noalias !132
  %653 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %645, i64 2
  %654 = bitcast %class.CXFA_Node** %653 to <2 x i64>*
  store <2 x i64> %651, <2 x i64>* %654, align 8, !alias.scope !135, !noalias !132
  %655 = or i64 %621, 12
  %656 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %398, i64 %655
  %657 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %1, i64 %655
  %658 = bitcast %class.CXFA_Node** %657 to <2 x i64>*
  %659 = load <2 x i64>, <2 x i64>* %658, align 8, !alias.scope !132
  %660 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %657, i64 2
  %661 = bitcast %class.CXFA_Node** %660 to <2 x i64>*
  %662 = load <2 x i64>, <2 x i64>* %661, align 8, !alias.scope !132
  %663 = bitcast %class.CXFA_Node** %656 to <2 x i64>*
  store <2 x i64> %659, <2 x i64>* %663, align 8, !alias.scope !135, !noalias !132
  %664 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %656, i64 2
  %665 = bitcast %class.CXFA_Node** %664 to <2 x i64>*
  store <2 x i64> %662, <2 x i64>* %665, align 8, !alias.scope !135, !noalias !132
  %666 = add i64 %621, 16
  %667 = add i64 %622, -4
  %668 = icmp eq i64 %667, 0
  br i1 %668, label %669, label %620, !llvm.loop !137

669:                                              ; preds = %620, %608
  %670 = phi i64 [ 0, %608 ], [ %666, %620 ]
  %671 = icmp eq i64 %616, 0
  br i1 %671, label %688, label %672

672:                                              ; preds = %669, %672
  %673 = phi i64 [ %685, %672 ], [ %670, %669 ]
  %674 = phi i64 [ %686, %672 ], [ %616, %669 ]
  %675 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %398, i64 %673
  %676 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %1, i64 %673
  %677 = bitcast %class.CXFA_Node** %676 to <2 x i64>*
  %678 = load <2 x i64>, <2 x i64>* %677, align 8, !alias.scope !132
  %679 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %676, i64 2
  %680 = bitcast %class.CXFA_Node** %679 to <2 x i64>*
  %681 = load <2 x i64>, <2 x i64>* %680, align 8, !alias.scope !132
  %682 = bitcast %class.CXFA_Node** %675 to <2 x i64>*
  store <2 x i64> %678, <2 x i64>* %682, align 8, !alias.scope !135, !noalias !132
  %683 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %675, i64 2
  %684 = bitcast %class.CXFA_Node** %683 to <2 x i64>*
  store <2 x i64> %681, <2 x i64>* %684, align 8, !alias.scope !135, !noalias !132
  %685 = add i64 %673, 4
  %686 = add i64 %674, -1
  %687 = icmp eq i64 %686, 0
  br i1 %687, label %688, label %672, !llvm.loop !138

688:                                              ; preds = %672, %669
  %689 = icmp eq i64 %592, %609
  br i1 %689, label %765, label %690

690:                                              ; preds = %688, %594, %587
  %691 = phi %class.CXFA_Node** [ %398, %594 ], [ %398, %587 ], [ %610, %688 ]
  %692 = phi %class.CXFA_Node** [ %398, %594 ], [ %398, %587 ], [ %611, %688 ]
  %693 = phi %class.CXFA_Node** [ %1, %594 ], [ %1, %587 ], [ %612, %688 ]
  %694 = ptrtoint %class.CXFA_Node** %693 to i64
  %695 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %585, i64 -1
  %696 = ptrtoint %class.CXFA_Node** %695 to i64
  %697 = sub i64 %696, %694
  %698 = lshr i64 %697, 3
  %699 = add nuw nsw i64 %698, 1
  %700 = and i64 %699, 7
  %701 = icmp eq i64 %700, 0
  br i1 %701, label %714, label %702

702:                                              ; preds = %690, %702
  %703 = phi %class.CXFA_Node** [ %711, %702 ], [ %691, %690 ]
  %704 = phi %class.CXFA_Node** [ %711, %702 ], [ %692, %690 ]
  %705 = phi %class.CXFA_Node** [ %710, %702 ], [ %693, %690 ]
  %706 = phi i64 [ %712, %702 ], [ %700, %690 ]
  %707 = bitcast %class.CXFA_Node** %704 to i64*
  %708 = bitcast %class.CXFA_Node** %705 to i64*
  %709 = load i64, i64* %708, align 8
  store i64 %709, i64* %707, align 8
  %710 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %705, i64 1
  %711 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %703, i64 1
  %712 = add i64 %706, -1
  %713 = icmp eq i64 %712, 0
  br i1 %713, label %714, label %702, !llvm.loop !139

714:                                              ; preds = %702, %690
  %715 = phi %class.CXFA_Node** [ undef, %690 ], [ %711, %702 ]
  %716 = phi %class.CXFA_Node** [ %691, %690 ], [ %711, %702 ]
  %717 = phi %class.CXFA_Node** [ %692, %690 ], [ %711, %702 ]
  %718 = phi %class.CXFA_Node** [ %693, %690 ], [ %710, %702 ]
  %719 = icmp ult i64 %697, 56
  br i1 %719, label %765, label %720

720:                                              ; preds = %714, %720
  %721 = phi %class.CXFA_Node** [ %763, %720 ], [ %716, %714 ]
  %722 = phi %class.CXFA_Node** [ %763, %720 ], [ %717, %714 ]
  %723 = phi %class.CXFA_Node** [ %762, %720 ], [ %718, %714 ]
  %724 = bitcast %class.CXFA_Node** %722 to i64*
  %725 = bitcast %class.CXFA_Node** %723 to i64*
  %726 = load i64, i64* %725, align 8
  store i64 %726, i64* %724, align 8
  %727 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %723, i64 1
  %728 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %721, i64 1
  %729 = bitcast %class.CXFA_Node** %728 to i64*
  %730 = bitcast %class.CXFA_Node** %727 to i64*
  %731 = load i64, i64* %730, align 8
  store i64 %731, i64* %729, align 8
  %732 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %723, i64 2
  %733 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %721, i64 2
  %734 = bitcast %class.CXFA_Node** %733 to i64*
  %735 = bitcast %class.CXFA_Node** %732 to i64*
  %736 = load i64, i64* %735, align 8
  store i64 %736, i64* %734, align 8
  %737 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %723, i64 3
  %738 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %721, i64 3
  %739 = bitcast %class.CXFA_Node** %738 to i64*
  %740 = bitcast %class.CXFA_Node** %737 to i64*
  %741 = load i64, i64* %740, align 8
  store i64 %741, i64* %739, align 8
  %742 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %723, i64 4
  %743 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %721, i64 4
  %744 = bitcast %class.CXFA_Node** %743 to i64*
  %745 = bitcast %class.CXFA_Node** %742 to i64*
  %746 = load i64, i64* %745, align 8
  store i64 %746, i64* %744, align 8
  %747 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %723, i64 5
  %748 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %721, i64 5
  %749 = bitcast %class.CXFA_Node** %748 to i64*
  %750 = bitcast %class.CXFA_Node** %747 to i64*
  %751 = load i64, i64* %750, align 8
  store i64 %751, i64* %749, align 8
  %752 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %723, i64 6
  %753 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %721, i64 6
  %754 = bitcast %class.CXFA_Node** %753 to i64*
  %755 = bitcast %class.CXFA_Node** %752 to i64*
  %756 = load i64, i64* %755, align 8
  store i64 %756, i64* %754, align 8
  %757 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %723, i64 7
  %758 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %721, i64 7
  %759 = bitcast %class.CXFA_Node** %758 to i64*
  %760 = bitcast %class.CXFA_Node** %757 to i64*
  %761 = load i64, i64* %760, align 8
  store i64 %761, i64* %759, align 8
  %762 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %723, i64 8
  %763 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %721, i64 8
  %764 = icmp eq %class.CXFA_Node** %762, %585
  br i1 %764, label %765, label %720, !llvm.loop !140

765:                                              ; preds = %714, %720, %688, %584
  %766 = phi %class.CXFA_Node** [ %398, %584 ], [ %610, %688 ], [ %715, %714 ], [ %763, %720 ]
  %767 = ptrtoint %class.CXFA_Node** %766 to i64
  %768 = load %class.CXFA_Node**, %class.CXFA_Node*** %9, align 8
  store i64 %579, i64* %360, align 8
  store i64 %767, i64* %24, align 8
  store i64 %397, i64* %16, align 8
  %769 = icmp eq %class.CXFA_Node** %768, null
  br i1 %769, label %772, label %770

770:                                              ; preds = %765
  %771 = bitcast %class.CXFA_Node** %768 to i8*
  tail call void @_ZdlPv(i8* %771) #10
  br label %772

772:                                              ; preds = %770, %765, %209, %354, %358, %4
  %773 = phi %class.CXFA_Node** [ %1, %4 ], [ %1, %358 ], [ %1, %354 ], [ %1, %209 ], [ %395, %765 ], [ %395, %770 ]
  ret %class.CXFA_Node** %773
}

declare i32 @_Z16FX_HashCode_GetWN5fxcrt18StringViewTemplateIwEEb(%"class.fxcrt::StringViewTemplate.97"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZNK5fxcrt10WideString4LastEm(%"class.fxcrt::WideString"* sret, %"class.fxcrt::WideString"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"*, %"class.fxcrt::WideString"* dereferenceable(8)) local_unnamed_addr #3

declare dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSERKS0_(%"class.fxcrt::WideString"*, %"class.fxcrt::WideString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.cppgc::internal::BasicMember.70"* @_ZNSt3__16vectorIN5cppgc8internal11BasicMemberI11CXFA_ObjectNS2_15StrongMemberTagENS2_26DijkstraWriteBarrierPolicyENS2_22DisabledCheckingPolicyEEENS_9allocatorIS8_EEE6insertINS_11__wrap_iterIPS8_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS8_NS_15iterator_traitsISH_E9referenceEEE5valueESF_E4typeENSD_IPKS8_EESH_SH_(%"class.std::__1::vector.90"*, %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %1 to i64
  %6 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %2 to i64
  %7 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %0, i64 0, i32 0, i32 0
  %8 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %3 to i64
  %9 = sub i64 %8, %6
  %10 = ashr exact i64 %9, 3
  %11 = icmp sgt i64 %9, 0
  br i1 %11, label %12, label %616

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"class.cppgc::internal::BasicMember.70"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %0, i64 0, i32 0, i32 1
  %17 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %16, align 8
  %18 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %17 to i64
  %19 = sub i64 %15, %18
  %20 = ashr exact i64 %19, 3
  %21 = icmp sgt i64 %10, %20
  %22 = bitcast %"class.cppgc::internal::BasicMember.70"** %16 to i64*
  br i1 %21, label %346, label %23

23:                                               ; preds = %12
  %24 = sub i64 %18, %5
  %25 = ashr exact i64 %24, 3
  %26 = icmp sgt i64 %10, %25
  br i1 %26, label %27, label %212

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2, i64 %25
  %29 = icmp eq %"class.cppgc::internal::BasicMember.70"* %28, %3
  br i1 %29, label %207, label %30

30:                                               ; preds = %27
  %31 = xor i64 %25, -1
  %32 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %3, i64 %31, i32 0, i32 0
  %33 = ptrtoint i8** %32 to i64
  %34 = sub i64 %33, %6
  %35 = lshr i64 %34, 3
  %36 = add nuw nsw i64 %35, 1
  %37 = icmp ult i64 %36, 4
  br i1 %37, label %133, label %38

38:                                               ; preds = %30
  %39 = xor i64 %25, -1
  %40 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %3, i64 %39, i32 0, i32 0
  %41 = ptrtoint i8** %40 to i64
  %42 = sub i64 %41, %6
  %43 = lshr i64 %42, 3
  %44 = add nuw nsw i64 %43, 1
  %45 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %17, i64 %44
  %46 = add nsw i64 %25, %43
  %47 = add nsw i64 %46, 1
  %48 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %2, i64 %47
  %49 = icmp ult %"class.cppgc::internal::BasicMember.70"* %17, %48
  %50 = icmp ult %"class.cppgc::internal::BasicMember.70"* %28, %45
  %51 = and i1 %49, %50
  br i1 %51, label %133, label %52

52:                                               ; preds = %38
  %53 = and i64 %36, 4611686018427387900
  %54 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %17, i64 %53
  %55 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %28, i64 %53
  %56 = add nsw i64 %53, -4
  %57 = lshr exact i64 %56, 2
  %58 = add nuw nsw i64 %57, 1
  %59 = and i64 %58, 3
  %60 = icmp ult i64 %56, 12
  br i1 %60, label %112, label %61

61:                                               ; preds = %52
  %62 = sub nsw i64 %58, %59
  br label %63

63:                                               ; preds = %63, %61
  %64 = phi i64 [ 0, %61 ], [ %109, %63 ]
  %65 = phi i64 [ %62, %61 ], [ %110, %63 ]
  %66 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %17, i64 %64
  %67 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %28, i64 %64
  %68 = bitcast %"class.cppgc::internal::BasicMember.70"* %67 to <2 x i64>*
  %69 = load <2 x i64>, <2 x i64>* %68, align 8, !alias.scope !141
  %70 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %67, i64 2
  %71 = bitcast %"class.cppgc::internal::BasicMember.70"* %70 to <2 x i64>*
  %72 = load <2 x i64>, <2 x i64>* %71, align 8, !alias.scope !141
  %73 = bitcast %"class.cppgc::internal::BasicMember.70"* %66 to <2 x i64>*
  store <2 x i64> %69, <2 x i64>* %73, align 8, !alias.scope !144, !noalias !141
  %74 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %66, i64 2
  %75 = bitcast %"class.cppgc::internal::BasicMember.70"* %74 to <2 x i64>*
  store <2 x i64> %72, <2 x i64>* %75, align 8, !alias.scope !144, !noalias !141
  %76 = or i64 %64, 4
  %77 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %17, i64 %76
  %78 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %28, i64 %76
  %79 = bitcast %"class.cppgc::internal::BasicMember.70"* %78 to <2 x i64>*
  %80 = load <2 x i64>, <2 x i64>* %79, align 8, !alias.scope !141
  %81 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %78, i64 2
  %82 = bitcast %"class.cppgc::internal::BasicMember.70"* %81 to <2 x i64>*
  %83 = load <2 x i64>, <2 x i64>* %82, align 8, !alias.scope !141
  %84 = bitcast %"class.cppgc::internal::BasicMember.70"* %77 to <2 x i64>*
  store <2 x i64> %80, <2 x i64>* %84, align 8, !alias.scope !144, !noalias !141
  %85 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %77, i64 2
  %86 = bitcast %"class.cppgc::internal::BasicMember.70"* %85 to <2 x i64>*
  store <2 x i64> %83, <2 x i64>* %86, align 8, !alias.scope !144, !noalias !141
  %87 = or i64 %64, 8
  %88 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %17, i64 %87
  %89 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %28, i64 %87
  %90 = bitcast %"class.cppgc::internal::BasicMember.70"* %89 to <2 x i64>*
  %91 = load <2 x i64>, <2 x i64>* %90, align 8, !alias.scope !141
  %92 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %89, i64 2
  %93 = bitcast %"class.cppgc::internal::BasicMember.70"* %92 to <2 x i64>*
  %94 = load <2 x i64>, <2 x i64>* %93, align 8, !alias.scope !141
  %95 = bitcast %"class.cppgc::internal::BasicMember.70"* %88 to <2 x i64>*
  store <2 x i64> %91, <2 x i64>* %95, align 8, !alias.scope !144, !noalias !141
  %96 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %88, i64 2
  %97 = bitcast %"class.cppgc::internal::BasicMember.70"* %96 to <2 x i64>*
  store <2 x i64> %94, <2 x i64>* %97, align 8, !alias.scope !144, !noalias !141
  %98 = or i64 %64, 12
  %99 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %17, i64 %98
  %100 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %28, i64 %98
  %101 = bitcast %"class.cppgc::internal::BasicMember.70"* %100 to <2 x i64>*
  %102 = load <2 x i64>, <2 x i64>* %101, align 8, !alias.scope !141
  %103 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %100, i64 2
  %104 = bitcast %"class.cppgc::internal::BasicMember.70"* %103 to <2 x i64>*
  %105 = load <2 x i64>, <2 x i64>* %104, align 8, !alias.scope !141
  %106 = bitcast %"class.cppgc::internal::BasicMember.70"* %99 to <2 x i64>*
  store <2 x i64> %102, <2 x i64>* %106, align 8, !alias.scope !144, !noalias !141
  %107 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %99, i64 2
  %108 = bitcast %"class.cppgc::internal::BasicMember.70"* %107 to <2 x i64>*
  store <2 x i64> %105, <2 x i64>* %108, align 8, !alias.scope !144, !noalias !141
  %109 = add i64 %64, 16
  %110 = add i64 %65, -4
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %63, !llvm.loop !146

112:                                              ; preds = %63, %52
  %113 = phi i64 [ 0, %52 ], [ %109, %63 ]
  %114 = icmp eq i64 %59, 0
  br i1 %114, label %131, label %115

115:                                              ; preds = %112, %115
  %116 = phi i64 [ %128, %115 ], [ %113, %112 ]
  %117 = phi i64 [ %129, %115 ], [ %59, %112 ]
  %118 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %17, i64 %116
  %119 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %28, i64 %116
  %120 = bitcast %"class.cppgc::internal::BasicMember.70"* %119 to <2 x i64>*
  %121 = load <2 x i64>, <2 x i64>* %120, align 8, !alias.scope !141
  %122 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %119, i64 2
  %123 = bitcast %"class.cppgc::internal::BasicMember.70"* %122 to <2 x i64>*
  %124 = load <2 x i64>, <2 x i64>* %123, align 8, !alias.scope !141
  %125 = bitcast %"class.cppgc::internal::BasicMember.70"* %118 to <2 x i64>*
  store <2 x i64> %121, <2 x i64>* %125, align 8, !alias.scope !144, !noalias !141
  %126 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %118, i64 2
  %127 = bitcast %"class.cppgc::internal::BasicMember.70"* %126 to <2 x i64>*
  store <2 x i64> %124, <2 x i64>* %127, align 8, !alias.scope !144, !noalias !141
  %128 = add i64 %116, 4
  %129 = add i64 %117, -1
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %115, !llvm.loop !147

131:                                              ; preds = %115, %112
  %132 = icmp eq i64 %36, %53
  br i1 %132, label %204, label %133

133:                                              ; preds = %131, %38, %30
  %134 = phi %"class.cppgc::internal::BasicMember.70"* [ %17, %38 ], [ %17, %30 ], [ %54, %131 ]
  %135 = phi %"class.cppgc::internal::BasicMember.70"* [ %28, %38 ], [ %28, %30 ], [ %55, %131 ]
  %136 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %135 to i64
  %137 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %3, i64 -1, i32 0, i32 0
  %138 = ptrtoint i8** %137 to i64
  %139 = sub i64 %138, %136
  %140 = lshr i64 %139, 3
  %141 = add nuw nsw i64 %140, 1
  %142 = and i64 %141, 7
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %155, label %144

144:                                              ; preds = %133, %144
  %145 = phi %"class.cppgc::internal::BasicMember.70"* [ %152, %144 ], [ %134, %133 ]
  %146 = phi %"class.cppgc::internal::BasicMember.70"* [ %151, %144 ], [ %135, %133 ]
  %147 = phi i64 [ %153, %144 ], [ %142, %133 ]
  %148 = bitcast %"class.cppgc::internal::BasicMember.70"* %145 to i64*
  %149 = bitcast %"class.cppgc::internal::BasicMember.70"* %146 to i64*
  %150 = load i64, i64* %149, align 8
  store i64 %150, i64* %148, align 8
  %151 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %146, i64 1
  %152 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %145, i64 1
  %153 = add i64 %147, -1
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %144, !llvm.loop !148

155:                                              ; preds = %144, %133
  %156 = phi %"class.cppgc::internal::BasicMember.70"* [ undef, %133 ], [ %152, %144 ]
  %157 = phi %"class.cppgc::internal::BasicMember.70"* [ %134, %133 ], [ %152, %144 ]
  %158 = phi %"class.cppgc::internal::BasicMember.70"* [ %135, %133 ], [ %151, %144 ]
  %159 = icmp ult i64 %139, 56
  br i1 %159, label %204, label %160

160:                                              ; preds = %155, %160
  %161 = phi %"class.cppgc::internal::BasicMember.70"* [ %202, %160 ], [ %157, %155 ]
  %162 = phi %"class.cppgc::internal::BasicMember.70"* [ %201, %160 ], [ %158, %155 ]
  %163 = bitcast %"class.cppgc::internal::BasicMember.70"* %161 to i64*
  %164 = bitcast %"class.cppgc::internal::BasicMember.70"* %162 to i64*
  %165 = load i64, i64* %164, align 8
  store i64 %165, i64* %163, align 8
  %166 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %162, i64 1
  %167 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %161, i64 1
  %168 = bitcast %"class.cppgc::internal::BasicMember.70"* %167 to i64*
  %169 = bitcast %"class.cppgc::internal::BasicMember.70"* %166 to i64*
  %170 = load i64, i64* %169, align 8
  store i64 %170, i64* %168, align 8
  %171 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %162, i64 2
  %172 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %161, i64 2
  %173 = bitcast %"class.cppgc::internal::BasicMember.70"* %172 to i64*
  %174 = bitcast %"class.cppgc::internal::BasicMember.70"* %171 to i64*
  %175 = load i64, i64* %174, align 8
  store i64 %175, i64* %173, align 8
  %176 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %162, i64 3
  %177 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %161, i64 3
  %178 = bitcast %"class.cppgc::internal::BasicMember.70"* %177 to i64*
  %179 = bitcast %"class.cppgc::internal::BasicMember.70"* %176 to i64*
  %180 = load i64, i64* %179, align 8
  store i64 %180, i64* %178, align 8
  %181 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %162, i64 4
  %182 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %161, i64 4
  %183 = bitcast %"class.cppgc::internal::BasicMember.70"* %182 to i64*
  %184 = bitcast %"class.cppgc::internal::BasicMember.70"* %181 to i64*
  %185 = load i64, i64* %184, align 8
  store i64 %185, i64* %183, align 8
  %186 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %162, i64 5
  %187 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %161, i64 5
  %188 = bitcast %"class.cppgc::internal::BasicMember.70"* %187 to i64*
  %189 = bitcast %"class.cppgc::internal::BasicMember.70"* %186 to i64*
  %190 = load i64, i64* %189, align 8
  store i64 %190, i64* %188, align 8
  %191 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %162, i64 6
  %192 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %161, i64 6
  %193 = bitcast %"class.cppgc::internal::BasicMember.70"* %192 to i64*
  %194 = bitcast %"class.cppgc::internal::BasicMember.70"* %191 to i64*
  %195 = load i64, i64* %194, align 8
  store i64 %195, i64* %193, align 8
  %196 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %162, i64 7
  %197 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %161, i64 7
  %198 = bitcast %"class.cppgc::internal::BasicMember.70"* %197 to i64*
  %199 = bitcast %"class.cppgc::internal::BasicMember.70"* %196 to i64*
  %200 = load i64, i64* %199, align 8
  store i64 %200, i64* %198, align 8
  %201 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %162, i64 8
  %202 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %161, i64 8
  %203 = icmp eq %"class.cppgc::internal::BasicMember.70"* %201, %3
  br i1 %203, label %204, label %160, !llvm.loop !149

204:                                              ; preds = %155, %160, %131
  %205 = phi %"class.cppgc::internal::BasicMember.70"* [ %54, %131 ], [ %156, %155 ], [ %202, %160 ]
  %206 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %205 to i64
  br label %207

207:                                              ; preds = %204, %27
  %208 = phi i64 [ %18, %27 ], [ %206, %204 ]
  store i64 %208, i64* %22, align 8
  %209 = icmp sgt i64 %24, 0
  br i1 %209, label %210, label %616

210:                                              ; preds = %207
  %211 = inttoptr i64 %208 to %"class.cppgc::internal::BasicMember.70"*
  br label %212

212:                                              ; preds = %210, %23
  %213 = phi i64 [ %208, %210 ], [ %18, %23 ]
  %214 = phi %"class.cppgc::internal::BasicMember.70"* [ %211, %210 ], [ %17, %23 ]
  %215 = phi %"class.cppgc::internal::BasicMember.70"* [ %28, %210 ], [ %3, %23 ]
  %216 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1, i64 %10
  %217 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %216 to i64
  %218 = sub i64 %213, %217
  %219 = ashr exact i64 %218, 3
  %220 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1, i64 %219
  %221 = icmp ult %"class.cppgc::internal::BasicMember.70"* %220, %17
  br i1 %221, label %222, label %252

222:                                              ; preds = %212
  %223 = sub nsw i64 0, %219
  %224 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %17, i64 %223, i32 0, i32 0
  %225 = bitcast i8** %224 to i8*
  %226 = xor i64 %5, -1
  %227 = getelementptr i8, i8* %225, i64 %226
  %228 = ptrtoint i8* %227 to i64
  %229 = lshr i64 %228, 3
  %230 = add nuw nsw i64 %229, 1
  %231 = and i64 %230, 7
  %232 = icmp eq i64 %231, 0
  br i1 %232, label %244, label %233

233:                                              ; preds = %222, %233
  %234 = phi %"class.cppgc::internal::BasicMember.70"* [ %241, %233 ], [ %214, %222 ]
  %235 = phi %"class.cppgc::internal::BasicMember.70"* [ %240, %233 ], [ %220, %222 ]
  %236 = phi i64 [ %242, %233 ], [ %231, %222 ]
  %237 = bitcast %"class.cppgc::internal::BasicMember.70"* %235 to i64*
  %238 = load i64, i64* %237, align 8
  %239 = bitcast %"class.cppgc::internal::BasicMember.70"* %234 to i64*
  store i64 %238, i64* %239, align 8
  store atomic i64 0, i64* %237 monotonic, align 8
  %240 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %235, i64 1
  %241 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %234, i64 1
  %242 = add i64 %236, -1
  %243 = icmp eq i64 %242, 0
  br i1 %243, label %244, label %233, !llvm.loop !150

244:                                              ; preds = %233, %222
  %245 = phi %"class.cppgc::internal::BasicMember.70"* [ %214, %222 ], [ %241, %233 ]
  %246 = phi %"class.cppgc::internal::BasicMember.70"* [ %220, %222 ], [ %240, %233 ]
  %247 = phi %"class.cppgc::internal::BasicMember.70"* [ undef, %222 ], [ %241, %233 ]
  %248 = icmp ult i8* %227, inttoptr (i64 56 to i8*)
  br i1 %248, label %249, label %278

249:                                              ; preds = %278, %244
  %250 = phi %"class.cppgc::internal::BasicMember.70"* [ %247, %244 ], [ %320, %278 ]
  %251 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %250 to i64
  br label %252

252:                                              ; preds = %249, %212
  %253 = phi i64 [ %251, %249 ], [ %213, %212 ]
  store i64 %253, i64* %22, align 8
  %254 = icmp eq i64 %218, 0
  br i1 %254, label %322, label %255

255:                                              ; preds = %252, %275
  %256 = phi %"class.cppgc::internal::BasicMember.70"* [ %259, %275 ], [ %214, %252 ]
  %257 = phi %"class.cppgc::internal::BasicMember.70"* [ %258, %275 ], [ %220, %252 ]
  %258 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %257, i64 -1
  %259 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %256, i64 -1
  %260 = bitcast %"class.cppgc::internal::BasicMember.70"* %258 to %class.CXFA_Object**
  %261 = load %class.CXFA_Object*, %class.CXFA_Object** %260, align 8
  %262 = ptrtoint %class.CXFA_Object* %261 to i64
  %263 = bitcast %"class.cppgc::internal::BasicMember.70"* %259 to i64*
  store atomic i64 %262, i64* %263 monotonic, align 8
  %264 = bitcast %class.CXFA_Object* %261 to i8*
  %265 = and i64 %262, -4294967296
  %266 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %259 to i64
  %267 = sub i64 %266, %265
  %268 = icmp ult i64 %267, 4294967297
  br i1 %268, label %269, label %275

269:                                              ; preds = %255
  %270 = inttoptr i64 %265 to %"struct.cppgc::internal::CagedHeapLocalData"*
  %271 = getelementptr inbounds %"struct.cppgc::internal::CagedHeapLocalData", %"struct.cppgc::internal::CagedHeapLocalData"* %270, i64 0, i32 0
  %272 = load i8, i8* %271, align 536870912, !range !13
  %273 = icmp eq i8 %272, 1
  br i1 %273, label %274, label %275, !prof !57

274:                                              ; preds = %269
  tail call void @_ZN5cppgc8internal12WriteBarrier26DijkstraMarkingBarrierSlowEPKv(i8* %264) #11
  br label %275

275:                                              ; preds = %274, %269, %255
  %276 = bitcast %"class.cppgc::internal::BasicMember.70"* %258 to i64*
  store atomic i64 0, i64* %276 monotonic, align 8
  %277 = icmp eq %"class.cppgc::internal::BasicMember.70"* %258, %1
  br i1 %277, label %322, label %255

278:                                              ; preds = %244, %278
  %279 = phi %"class.cppgc::internal::BasicMember.70"* [ %320, %278 ], [ %245, %244 ]
  %280 = phi %"class.cppgc::internal::BasicMember.70"* [ %319, %278 ], [ %246, %244 ]
  %281 = bitcast %"class.cppgc::internal::BasicMember.70"* %280 to i64*
  %282 = load i64, i64* %281, align 8
  %283 = bitcast %"class.cppgc::internal::BasicMember.70"* %279 to i64*
  store i64 %282, i64* %283, align 8
  store atomic i64 0, i64* %281 monotonic, align 8
  %284 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %280, i64 1
  %285 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %279, i64 1
  %286 = bitcast %"class.cppgc::internal::BasicMember.70"* %284 to i64*
  %287 = load i64, i64* %286, align 8
  %288 = bitcast %"class.cppgc::internal::BasicMember.70"* %285 to i64*
  store i64 %287, i64* %288, align 8
  store atomic i64 0, i64* %286 monotonic, align 8
  %289 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %280, i64 2
  %290 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %279, i64 2
  %291 = bitcast %"class.cppgc::internal::BasicMember.70"* %289 to i64*
  %292 = load i64, i64* %291, align 8
  %293 = bitcast %"class.cppgc::internal::BasicMember.70"* %290 to i64*
  store i64 %292, i64* %293, align 8
  store atomic i64 0, i64* %291 monotonic, align 8
  %294 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %280, i64 3
  %295 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %279, i64 3
  %296 = bitcast %"class.cppgc::internal::BasicMember.70"* %294 to i64*
  %297 = load i64, i64* %296, align 8
  %298 = bitcast %"class.cppgc::internal::BasicMember.70"* %295 to i64*
  store i64 %297, i64* %298, align 8
  store atomic i64 0, i64* %296 monotonic, align 8
  %299 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %280, i64 4
  %300 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %279, i64 4
  %301 = bitcast %"class.cppgc::internal::BasicMember.70"* %299 to i64*
  %302 = load i64, i64* %301, align 8
  %303 = bitcast %"class.cppgc::internal::BasicMember.70"* %300 to i64*
  store i64 %302, i64* %303, align 8
  store atomic i64 0, i64* %301 monotonic, align 8
  %304 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %280, i64 5
  %305 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %279, i64 5
  %306 = bitcast %"class.cppgc::internal::BasicMember.70"* %304 to i64*
  %307 = load i64, i64* %306, align 8
  %308 = bitcast %"class.cppgc::internal::BasicMember.70"* %305 to i64*
  store i64 %307, i64* %308, align 8
  store atomic i64 0, i64* %306 monotonic, align 8
  %309 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %280, i64 6
  %310 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %279, i64 6
  %311 = bitcast %"class.cppgc::internal::BasicMember.70"* %309 to i64*
  %312 = load i64, i64* %311, align 8
  %313 = bitcast %"class.cppgc::internal::BasicMember.70"* %310 to i64*
  store i64 %312, i64* %313, align 8
  store atomic i64 0, i64* %311 monotonic, align 8
  %314 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %280, i64 7
  %315 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %279, i64 7
  %316 = bitcast %"class.cppgc::internal::BasicMember.70"* %314 to i64*
  %317 = load i64, i64* %316, align 8
  %318 = bitcast %"class.cppgc::internal::BasicMember.70"* %315 to i64*
  store i64 %317, i64* %318, align 8
  store atomic i64 0, i64* %316 monotonic, align 8
  %319 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %280, i64 8
  %320 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %279, i64 8
  %321 = icmp ult %"class.cppgc::internal::BasicMember.70"* %319, %17
  br i1 %321, label %278, label %249

322:                                              ; preds = %275, %252
  %323 = icmp eq %"class.cppgc::internal::BasicMember.70"* %215, %2
  br i1 %323, label %616, label %324

324:                                              ; preds = %322, %342
  %325 = phi %"class.cppgc::internal::BasicMember.70"* [ %344, %342 ], [ %1, %322 ]
  %326 = phi %"class.cppgc::internal::BasicMember.70"* [ %343, %342 ], [ %2, %322 ]
  %327 = bitcast %"class.cppgc::internal::BasicMember.70"* %326 to %class.CXFA_Object**
  %328 = load %class.CXFA_Object*, %class.CXFA_Object** %327, align 8
  %329 = ptrtoint %class.CXFA_Object* %328 to i64
  %330 = bitcast %"class.cppgc::internal::BasicMember.70"* %325 to i64*
  store atomic i64 %329, i64* %330 monotonic, align 8
  %331 = bitcast %class.CXFA_Object* %328 to i8*
  %332 = and i64 %329, -4294967296
  %333 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %325 to i64
  %334 = sub i64 %333, %332
  %335 = icmp ult i64 %334, 4294967297
  br i1 %335, label %336, label %342

336:                                              ; preds = %324
  %337 = inttoptr i64 %332 to %"struct.cppgc::internal::CagedHeapLocalData"*
  %338 = getelementptr inbounds %"struct.cppgc::internal::CagedHeapLocalData", %"struct.cppgc::internal::CagedHeapLocalData"* %337, i64 0, i32 0
  %339 = load i8, i8* %338, align 536870912, !range !13
  %340 = icmp eq i8 %339, 1
  br i1 %340, label %341, label %342, !prof !57

341:                                              ; preds = %336
  tail call void @_ZN5cppgc8internal12WriteBarrier26DijkstraMarkingBarrierSlowEPKv(i8* %331) #11
  br label %342

342:                                              ; preds = %341, %336, %324
  %343 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %326, i64 1
  %344 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %325, i64 1
  %345 = icmp eq %"class.cppgc::internal::BasicMember.70"* %343, %215
  br i1 %345, label %616, label %324

346:                                              ; preds = %12
  %347 = bitcast %"class.std::__1::vector.90"* %0 to i64*
  %348 = load i64, i64* %347, align 8
  %349 = sub i64 %18, %348
  %350 = ashr exact i64 %349, 3
  %351 = add nsw i64 %350, %10
  %352 = icmp ugt i64 %351, 2305843009213693951
  br i1 %352, label %353, label %355

353:                                              ; preds = %346
  %354 = bitcast %"class.std::__1::vector.90"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %354) #12
  unreachable

355:                                              ; preds = %346
  %356 = sub i64 %15, %348
  %357 = ashr exact i64 %356, 3
  %358 = icmp ult i64 %357, 1152921504606846975
  br i1 %358, label %362, label %359

359:                                              ; preds = %355
  %360 = sub i64 %5, %348
  %361 = ashr exact i64 %360, 3
  br label %372

362:                                              ; preds = %355
  %363 = ashr exact i64 %356, 2
  %364 = icmp ult i64 %363, %351
  %365 = select i1 %364, i64 %351, i64 %363
  %366 = sub i64 %5, %348
  %367 = ashr exact i64 %366, 3
  %368 = icmp eq i64 %365, 0
  br i1 %368, label %378, label %369

369:                                              ; preds = %362
  %370 = icmp ugt i64 %365, 2305843009213693951
  br i1 %370, label %371, label %372

371:                                              ; preds = %369
  tail call void @abort() #12
  unreachable

372:                                              ; preds = %359, %369
  %373 = phi i64 [ 2305843009213693951, %359 ], [ %365, %369 ]
  %374 = phi i64 [ %361, %359 ], [ %367, %369 ]
  %375 = shl i64 %373, 3
  %376 = tail call i8* @_Znwm(i64 %375) #10
  %377 = bitcast i8* %376 to %"class.cppgc::internal::BasicMember.70"*
  br label %378

378:                                              ; preds = %372, %362
  %379 = phi i64 [ %374, %372 ], [ %367, %362 ]
  %380 = phi i64 [ %373, %372 ], [ 0, %362 ]
  %381 = phi %"class.cppgc::internal::BasicMember.70"* [ %377, %372 ], [ null, %362 ]
  %382 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %381, i64 %379
  %383 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %382 to i64
  %384 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %381, i64 %380
  %385 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %384 to i64
  %386 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %382, i64 %10
  %387 = add i64 %9, -8
  %388 = lshr i64 %387, 3
  %389 = add nuw nsw i64 %388, 1
  %390 = and i64 %389, 7
  %391 = icmp eq i64 %390, 0
  br i1 %391, label %407, label %392

392:                                              ; preds = %378, %392
  %393 = phi %"class.cppgc::internal::BasicMember.70"* [ %400, %392 ], [ %382, %378 ]
  %394 = phi i64 [ %401, %392 ], [ %383, %378 ]
  %395 = phi %"class.cppgc::internal::BasicMember.70"* [ %402, %392 ], [ %2, %378 ]
  %396 = phi i64 [ %403, %392 ], [ %390, %378 ]
  %397 = bitcast %"class.cppgc::internal::BasicMember.70"* %395 to i64*
  %398 = load i64, i64* %397, align 8
  %399 = inttoptr i64 %394 to i64*
  store i64 %398, i64* %399, align 8
  %400 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %393, i64 1
  %401 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %400 to i64
  %402 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %395, i64 1
  %403 = add i64 %396, -1
  %404 = icmp eq i64 %403, 0
  br i1 %404, label %405, label %392, !llvm.loop !151

405:                                              ; preds = %392
  %406 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %400 to i64
  br label %407

407:                                              ; preds = %378, %405
  %408 = phi %"class.cppgc::internal::BasicMember.70"* [ %382, %378 ], [ %400, %405 ]
  %409 = phi i64 [ %383, %378 ], [ %406, %405 ]
  %410 = phi %"class.cppgc::internal::BasicMember.70"* [ %2, %378 ], [ %402, %405 ]
  %411 = icmp ult i64 %387, 56
  br i1 %411, label %458, label %412

412:                                              ; preds = %407, %412
  %413 = phi %"class.cppgc::internal::BasicMember.70"* [ %454, %412 ], [ %408, %407 ]
  %414 = phi i64 [ %455, %412 ], [ %409, %407 ]
  %415 = phi %"class.cppgc::internal::BasicMember.70"* [ %456, %412 ], [ %410, %407 ]
  %416 = bitcast %"class.cppgc::internal::BasicMember.70"* %415 to i64*
  %417 = load i64, i64* %416, align 8
  %418 = inttoptr i64 %414 to i64*
  store i64 %417, i64* %418, align 8
  %419 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %413, i64 1
  %420 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %415, i64 1
  %421 = bitcast %"class.cppgc::internal::BasicMember.70"* %420 to i64*
  %422 = load i64, i64* %421, align 8
  %423 = bitcast %"class.cppgc::internal::BasicMember.70"* %419 to i64*
  store i64 %422, i64* %423, align 8
  %424 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %413, i64 2
  %425 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %415, i64 2
  %426 = bitcast %"class.cppgc::internal::BasicMember.70"* %425 to i64*
  %427 = load i64, i64* %426, align 8
  %428 = bitcast %"class.cppgc::internal::BasicMember.70"* %424 to i64*
  store i64 %427, i64* %428, align 8
  %429 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %413, i64 3
  %430 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %415, i64 3
  %431 = bitcast %"class.cppgc::internal::BasicMember.70"* %430 to i64*
  %432 = load i64, i64* %431, align 8
  %433 = bitcast %"class.cppgc::internal::BasicMember.70"* %429 to i64*
  store i64 %432, i64* %433, align 8
  %434 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %413, i64 4
  %435 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %415, i64 4
  %436 = bitcast %"class.cppgc::internal::BasicMember.70"* %435 to i64*
  %437 = load i64, i64* %436, align 8
  %438 = bitcast %"class.cppgc::internal::BasicMember.70"* %434 to i64*
  store i64 %437, i64* %438, align 8
  %439 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %413, i64 5
  %440 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %415, i64 5
  %441 = bitcast %"class.cppgc::internal::BasicMember.70"* %440 to i64*
  %442 = load i64, i64* %441, align 8
  %443 = bitcast %"class.cppgc::internal::BasicMember.70"* %439 to i64*
  store i64 %442, i64* %443, align 8
  %444 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %413, i64 6
  %445 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %415, i64 6
  %446 = bitcast %"class.cppgc::internal::BasicMember.70"* %445 to i64*
  %447 = load i64, i64* %446, align 8
  %448 = bitcast %"class.cppgc::internal::BasicMember.70"* %444 to i64*
  store i64 %447, i64* %448, align 8
  %449 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %413, i64 7
  %450 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %415, i64 7
  %451 = bitcast %"class.cppgc::internal::BasicMember.70"* %450 to i64*
  %452 = load i64, i64* %451, align 8
  %453 = bitcast %"class.cppgc::internal::BasicMember.70"* %449 to i64*
  store i64 %452, i64* %453, align 8
  %454 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %413, i64 8
  %455 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %454 to i64
  %456 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %415, i64 8
  %457 = icmp eq %"class.cppgc::internal::BasicMember.70"* %386, %454
  br i1 %457, label %458, label %412

458:                                              ; preds = %412, %407
  %459 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %7, align 8
  %460 = icmp eq %"class.cppgc::internal::BasicMember.70"* %459, %1
  br i1 %460, label %533, label %461

461:                                              ; preds = %458
  %462 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %459 to i64
  %463 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1, i64 -1, i32 0, i32 0
  %464 = ptrtoint i8** %463 to i64
  %465 = sub i64 %464, %462
  %466 = lshr i64 %465, 3
  %467 = add nuw nsw i64 %466, 1
  %468 = and i64 %467, 7
  %469 = icmp eq i64 %468, 0
  br i1 %469, label %481, label %470

470:                                              ; preds = %461, %470
  %471 = phi %"class.cppgc::internal::BasicMember.70"* [ %474, %470 ], [ %382, %461 ]
  %472 = phi %"class.cppgc::internal::BasicMember.70"* [ %475, %470 ], [ %1, %461 ]
  %473 = phi i64 [ %479, %470 ], [ %468, %461 ]
  %474 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %471, i64 -1
  %475 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %472, i64 -1
  %476 = bitcast %"class.cppgc::internal::BasicMember.70"* %475 to i64*
  %477 = load i64, i64* %476, align 8
  %478 = bitcast %"class.cppgc::internal::BasicMember.70"* %474 to i64*
  store i64 %477, i64* %478, align 8
  store atomic i64 0, i64* %476 monotonic, align 8
  %479 = add i64 %473, -1
  %480 = icmp eq i64 %479, 0
  br i1 %480, label %481, label %470, !llvm.loop !152

481:                                              ; preds = %470, %461
  %482 = phi %"class.cppgc::internal::BasicMember.70"* [ undef, %461 ], [ %474, %470 ]
  %483 = phi %"class.cppgc::internal::BasicMember.70"* [ %382, %461 ], [ %474, %470 ]
  %484 = phi %"class.cppgc::internal::BasicMember.70"* [ %1, %461 ], [ %475, %470 ]
  %485 = icmp ult i64 %465, 56
  br i1 %485, label %530, label %486

486:                                              ; preds = %481, %486
  %487 = phi %"class.cppgc::internal::BasicMember.70"* [ %524, %486 ], [ %483, %481 ]
  %488 = phi %"class.cppgc::internal::BasicMember.70"* [ %525, %486 ], [ %484, %481 ]
  %489 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %487, i64 -1
  %490 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %488, i64 -1
  %491 = bitcast %"class.cppgc::internal::BasicMember.70"* %490 to i64*
  %492 = load i64, i64* %491, align 8
  %493 = bitcast %"class.cppgc::internal::BasicMember.70"* %489 to i64*
  store i64 %492, i64* %493, align 8
  store atomic i64 0, i64* %491 monotonic, align 8
  %494 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %487, i64 -2
  %495 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %488, i64 -2
  %496 = bitcast %"class.cppgc::internal::BasicMember.70"* %495 to i64*
  %497 = load i64, i64* %496, align 8
  %498 = bitcast %"class.cppgc::internal::BasicMember.70"* %494 to i64*
  store i64 %497, i64* %498, align 8
  store atomic i64 0, i64* %496 monotonic, align 8
  %499 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %487, i64 -3
  %500 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %488, i64 -3
  %501 = bitcast %"class.cppgc::internal::BasicMember.70"* %500 to i64*
  %502 = load i64, i64* %501, align 8
  %503 = bitcast %"class.cppgc::internal::BasicMember.70"* %499 to i64*
  store i64 %502, i64* %503, align 8
  store atomic i64 0, i64* %501 monotonic, align 8
  %504 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %487, i64 -4
  %505 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %488, i64 -4
  %506 = bitcast %"class.cppgc::internal::BasicMember.70"* %505 to i64*
  %507 = load i64, i64* %506, align 8
  %508 = bitcast %"class.cppgc::internal::BasicMember.70"* %504 to i64*
  store i64 %507, i64* %508, align 8
  store atomic i64 0, i64* %506 monotonic, align 8
  %509 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %487, i64 -5
  %510 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %488, i64 -5
  %511 = bitcast %"class.cppgc::internal::BasicMember.70"* %510 to i64*
  %512 = load i64, i64* %511, align 8
  %513 = bitcast %"class.cppgc::internal::BasicMember.70"* %509 to i64*
  store i64 %512, i64* %513, align 8
  store atomic i64 0, i64* %511 monotonic, align 8
  %514 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %487, i64 -6
  %515 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %488, i64 -6
  %516 = bitcast %"class.cppgc::internal::BasicMember.70"* %515 to i64*
  %517 = load i64, i64* %516, align 8
  %518 = bitcast %"class.cppgc::internal::BasicMember.70"* %514 to i64*
  store i64 %517, i64* %518, align 8
  store atomic i64 0, i64* %516 monotonic, align 8
  %519 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %487, i64 -7
  %520 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %488, i64 -7
  %521 = bitcast %"class.cppgc::internal::BasicMember.70"* %520 to i64*
  %522 = load i64, i64* %521, align 8
  %523 = bitcast %"class.cppgc::internal::BasicMember.70"* %519 to i64*
  store i64 %522, i64* %523, align 8
  store atomic i64 0, i64* %521 monotonic, align 8
  %524 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %487, i64 -8
  %525 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %488, i64 -8
  %526 = bitcast %"class.cppgc::internal::BasicMember.70"* %525 to i64*
  %527 = load i64, i64* %526, align 8
  %528 = bitcast %"class.cppgc::internal::BasicMember.70"* %524 to i64*
  store i64 %527, i64* %528, align 8
  store atomic i64 0, i64* %526 monotonic, align 8
  %529 = icmp eq %"class.cppgc::internal::BasicMember.70"* %525, %459
  br i1 %529, label %530, label %486

530:                                              ; preds = %486, %481
  %531 = phi %"class.cppgc::internal::BasicMember.70"* [ %482, %481 ], [ %524, %486 ]
  %532 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %531 to i64
  br label %533

533:                                              ; preds = %530, %458
  %534 = phi i64 [ %383, %458 ], [ %532, %530 ]
  %535 = phi %"class.cppgc::internal::BasicMember.70"* [ %382, %458 ], [ %531, %530 ]
  %536 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %16, align 8
  %537 = icmp eq %"class.cppgc::internal::BasicMember.70"* %536, %1
  br i1 %537, label %562, label %538

538:                                              ; preds = %533
  %539 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %536, i64 -1, i32 0, i32 0
  %540 = ptrtoint i8** %539 to i64
  %541 = sub i64 %540, %5
  %542 = lshr i64 %541, 3
  %543 = add nuw nsw i64 %542, 1
  %544 = and i64 %543, 7
  %545 = icmp eq i64 %544, 0
  br i1 %545, label %557, label %546

546:                                              ; preds = %538, %546
  %547 = phi %"class.cppgc::internal::BasicMember.70"* [ %554, %546 ], [ %386, %538 ]
  %548 = phi %"class.cppgc::internal::BasicMember.70"* [ %553, %546 ], [ %1, %538 ]
  %549 = phi i64 [ %555, %546 ], [ %544, %538 ]
  %550 = bitcast %"class.cppgc::internal::BasicMember.70"* %547 to i64*
  %551 = bitcast %"class.cppgc::internal::BasicMember.70"* %548 to i64*
  %552 = load i64, i64* %551, align 8
  store i64 %552, i64* %550, align 8
  store atomic i64 0, i64* %551 monotonic, align 8
  %553 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %548, i64 1
  %554 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %547, i64 1
  %555 = add i64 %549, -1
  %556 = icmp eq i64 %555, 0
  br i1 %556, label %557, label %546, !llvm.loop !153

557:                                              ; preds = %546, %538
  %558 = phi %"class.cppgc::internal::BasicMember.70"* [ undef, %538 ], [ %554, %546 ]
  %559 = phi %"class.cppgc::internal::BasicMember.70"* [ %386, %538 ], [ %554, %546 ]
  %560 = phi %"class.cppgc::internal::BasicMember.70"* [ %1, %538 ], [ %553, %546 ]
  %561 = icmp ult i64 %541, 56
  br i1 %561, label %608, label %564

562:                                              ; preds = %533
  %563 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %535 to i64
  br label %608

564:                                              ; preds = %557, %564
  %565 = phi %"class.cppgc::internal::BasicMember.70"* [ %606, %564 ], [ %559, %557 ]
  %566 = phi %"class.cppgc::internal::BasicMember.70"* [ %605, %564 ], [ %560, %557 ]
  %567 = bitcast %"class.cppgc::internal::BasicMember.70"* %565 to i64*
  %568 = bitcast %"class.cppgc::internal::BasicMember.70"* %566 to i64*
  %569 = load i64, i64* %568, align 8
  store i64 %569, i64* %567, align 8
  store atomic i64 0, i64* %568 monotonic, align 8
  %570 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %566, i64 1
  %571 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %565, i64 1
  %572 = bitcast %"class.cppgc::internal::BasicMember.70"* %571 to i64*
  %573 = bitcast %"class.cppgc::internal::BasicMember.70"* %570 to i64*
  %574 = load i64, i64* %573, align 8
  store i64 %574, i64* %572, align 8
  store atomic i64 0, i64* %573 monotonic, align 8
  %575 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %566, i64 2
  %576 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %565, i64 2
  %577 = bitcast %"class.cppgc::internal::BasicMember.70"* %576 to i64*
  %578 = bitcast %"class.cppgc::internal::BasicMember.70"* %575 to i64*
  %579 = load i64, i64* %578, align 8
  store i64 %579, i64* %577, align 8
  store atomic i64 0, i64* %578 monotonic, align 8
  %580 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %566, i64 3
  %581 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %565, i64 3
  %582 = bitcast %"class.cppgc::internal::BasicMember.70"* %581 to i64*
  %583 = bitcast %"class.cppgc::internal::BasicMember.70"* %580 to i64*
  %584 = load i64, i64* %583, align 8
  store i64 %584, i64* %582, align 8
  store atomic i64 0, i64* %583 monotonic, align 8
  %585 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %566, i64 4
  %586 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %565, i64 4
  %587 = bitcast %"class.cppgc::internal::BasicMember.70"* %586 to i64*
  %588 = bitcast %"class.cppgc::internal::BasicMember.70"* %585 to i64*
  %589 = load i64, i64* %588, align 8
  store i64 %589, i64* %587, align 8
  store atomic i64 0, i64* %588 monotonic, align 8
  %590 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %566, i64 5
  %591 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %565, i64 5
  %592 = bitcast %"class.cppgc::internal::BasicMember.70"* %591 to i64*
  %593 = bitcast %"class.cppgc::internal::BasicMember.70"* %590 to i64*
  %594 = load i64, i64* %593, align 8
  store i64 %594, i64* %592, align 8
  store atomic i64 0, i64* %593 monotonic, align 8
  %595 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %566, i64 6
  %596 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %565, i64 6
  %597 = bitcast %"class.cppgc::internal::BasicMember.70"* %596 to i64*
  %598 = bitcast %"class.cppgc::internal::BasicMember.70"* %595 to i64*
  %599 = load i64, i64* %598, align 8
  store i64 %599, i64* %597, align 8
  store atomic i64 0, i64* %598 monotonic, align 8
  %600 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %566, i64 7
  %601 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %565, i64 7
  %602 = bitcast %"class.cppgc::internal::BasicMember.70"* %601 to i64*
  %603 = bitcast %"class.cppgc::internal::BasicMember.70"* %600 to i64*
  %604 = load i64, i64* %603, align 8
  store i64 %604, i64* %602, align 8
  store atomic i64 0, i64* %603 monotonic, align 8
  %605 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %566, i64 8
  %606 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %565, i64 8
  %607 = icmp eq %"class.cppgc::internal::BasicMember.70"* %605, %536
  br i1 %607, label %608, label %564

608:                                              ; preds = %557, %564, %562
  %609 = phi %"class.cppgc::internal::BasicMember.70"* [ %386, %562 ], [ %558, %557 ], [ %606, %564 ]
  %610 = phi i64 [ %563, %562 ], [ %534, %564 ], [ %534, %557 ]
  %611 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %609 to i64
  %612 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %7, align 8
  store i64 %610, i64* %347, align 8
  store i64 %611, i64* %22, align 8
  store i64 %385, i64* %14, align 8
  %613 = icmp eq %"class.cppgc::internal::BasicMember.70"* %612, null
  br i1 %613, label %616, label %614

614:                                              ; preds = %608
  %615 = bitcast %"class.cppgc::internal::BasicMember.70"* %612 to i8*
  tail call void @_ZdlPv(i8* %615) #10
  br label %616

616:                                              ; preds = %342, %614, %608, %207, %322, %4
  %617 = phi %"class.cppgc::internal::BasicMember.70"* [ %1, %4 ], [ %1, %322 ], [ %1, %207 ], [ %382, %608 ], [ %382, %614 ], [ %1, %342 ]
  ret %"class.cppgc::internal::BasicMember.70"* %617
}

declare void @_Z28XFA_GetScriptAttributeByName11XFA_ElementN5fxcrt18StringViewTemplateIwEE(%"class.pdfium::Optional.140"* sret, i16 signext, %"class.fxcrt::StringViewTemplate.97"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK9CXFA_Node11HasPropertyE11XFA_Element(%class.CXFA_Node*, i16 signext) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN23CFXJSE_ResolveProcessor17SetStylesForChildEjR22CFXJSE_ResolveNodeData(%class.CFXJSE_ResolveProcessor* nocapture readnone, i32, %class.CFXJSE_ResolveNodeData* nocapture dereferenceable(96)) local_unnamed_addr #4 align 2 {
  %4 = and i32 %1, 2
  %5 = icmp eq i32 %4, 0
  %6 = select i1 %5, i16 257, i16 259
  %7 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %2, i64 0, i32 6
  store i16 %6, i16* %7, align 8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5fxcrt10WideStringC1EOS0_(%"class.fxcrt::WideString"*, %"class.fxcrt::WideString"* dereferenceable(8)) unnamed_addr #3

declare zeroext i1 @_ZNK9CXFA_Node13IsTransparentEv(%class.CXFA_Node*) local_unnamed_addr #2

declare %class.CXFA_Node* @_ZN9CXFA_Node23GetInstanceMgrOfSubformEv(%class.CXFA_Node*) local_unnamed_addr #2

declare signext i16 @_Z20XFA_GetElementByNameN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::StringViewTemplate.97"*) local_unnamed_addr #2

declare void @_ZN9CXFA_Node21GetNodeListWithFilterEh(%"class.std::__1::vector.130"* sret, %class.CXFA_Node*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.cppgc::internal::BasicMember.70"* @_ZNSt3__16vectorIN5cppgc8internal11BasicMemberI11CXFA_ObjectNS2_15StrongMemberTagENS2_26DijkstraWriteBarrierPolicyENS2_22DisabledCheckingPolicyEEENS_9allocatorIS8_EEE6insertINS_11__wrap_iterIPP9CXFA_NodeEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS8_NS_15iterator_traitsISJ_E9referenceEEE5valueENSD_IPS8_EEE4typeENSD_IPKS8_EESJ_SJ_(%"class.std::__1::vector.90"*, %"class.cppgc::internal::BasicMember.70"*, %class.CXFA_Node**, %class.CXFA_Node**) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %1 to i64
  %6 = ptrtoint %class.CXFA_Node** %2 to i64
  %7 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %0, i64 0, i32 0, i32 0
  %8 = ptrtoint %class.CXFA_Node** %3 to i64
  %9 = sub i64 %8, %6
  %10 = ashr exact i64 %9, 3
  %11 = icmp sgt i64 %9, 0
  br i1 %11, label %12, label %618

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"class.cppgc::internal::BasicMember.70"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %0, i64 0, i32 0, i32 1
  %17 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %16, align 8
  %18 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %17 to i64
  %19 = sub i64 %15, %18
  %20 = ashr exact i64 %19, 3
  %21 = icmp sgt i64 %10, %20
  %22 = bitcast %"class.cppgc::internal::BasicMember.70"** %16 to i64*
  br i1 %21, label %348, label %23

23:                                               ; preds = %12
  %24 = sub i64 %18, %5
  %25 = ashr exact i64 %24, 3
  %26 = icmp sgt i64 %10, %25
  br i1 %26, label %27, label %214

27:                                               ; preds = %23
  %28 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %2, i64 %25
  %29 = icmp eq %class.CXFA_Node** %28, %3
  br i1 %29, label %209, label %30

30:                                               ; preds = %27
  %31 = xor i64 %25, -1
  %32 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %3, i64 %31
  %33 = ptrtoint %class.CXFA_Node** %32 to i64
  %34 = sub i64 %33, %6
  %35 = lshr i64 %34, 3
  %36 = add nuw nsw i64 %35, 1
  %37 = icmp ult i64 %36, 4
  br i1 %37, label %135, label %38

38:                                               ; preds = %30
  %39 = xor i64 %25, -1
  %40 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %3, i64 %39
  %41 = ptrtoint %class.CXFA_Node** %40 to i64
  %42 = sub i64 %41, %6
  %43 = lshr i64 %42, 3
  %44 = add nuw nsw i64 %43, 1
  %45 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %17, i64 %44
  %46 = add nsw i64 %25, %43
  %47 = add nsw i64 %46, 1
  %48 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %2, i64 %47
  %49 = bitcast %class.CXFA_Node** %48 to %"class.cppgc::internal::BasicMember.70"*
  %50 = icmp ult %"class.cppgc::internal::BasicMember.70"* %17, %49
  %51 = bitcast %"class.cppgc::internal::BasicMember.70"* %45 to %class.CXFA_Node**
  %52 = icmp ult %class.CXFA_Node** %28, %51
  %53 = and i1 %50, %52
  br i1 %53, label %135, label %54

54:                                               ; preds = %38
  %55 = and i64 %36, 4611686018427387900
  %56 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %17, i64 %55
  %57 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %28, i64 %55
  %58 = add nsw i64 %55, -4
  %59 = lshr exact i64 %58, 2
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 12
  br i1 %62, label %114, label %63

63:                                               ; preds = %54
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %17, i64 %66
  %69 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %28, i64 %66
  %70 = bitcast %class.CXFA_Node** %69 to <2 x i64>*
  %71 = load <2 x i64>, <2 x i64>* %70, align 8, !alias.scope !154
  %72 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %69, i64 2
  %73 = bitcast %class.CXFA_Node** %72 to <2 x i64>*
  %74 = load <2 x i64>, <2 x i64>* %73, align 8, !alias.scope !154
  %75 = bitcast %"class.cppgc::internal::BasicMember.70"* %68 to <2 x i64>*
  store <2 x i64> %71, <2 x i64>* %75, align 8, !alias.scope !157, !noalias !154
  %76 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %68, i64 2
  %77 = bitcast %"class.cppgc::internal::BasicMember.70"* %76 to <2 x i64>*
  store <2 x i64> %74, <2 x i64>* %77, align 8, !alias.scope !157, !noalias !154
  %78 = or i64 %66, 4
  %79 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %17, i64 %78
  %80 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %28, i64 %78
  %81 = bitcast %class.CXFA_Node** %80 to <2 x i64>*
  %82 = load <2 x i64>, <2 x i64>* %81, align 8, !alias.scope !154
  %83 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %80, i64 2
  %84 = bitcast %class.CXFA_Node** %83 to <2 x i64>*
  %85 = load <2 x i64>, <2 x i64>* %84, align 8, !alias.scope !154
  %86 = bitcast %"class.cppgc::internal::BasicMember.70"* %79 to <2 x i64>*
  store <2 x i64> %82, <2 x i64>* %86, align 8, !alias.scope !157, !noalias !154
  %87 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %79, i64 2
  %88 = bitcast %"class.cppgc::internal::BasicMember.70"* %87 to <2 x i64>*
  store <2 x i64> %85, <2 x i64>* %88, align 8, !alias.scope !157, !noalias !154
  %89 = or i64 %66, 8
  %90 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %17, i64 %89
  %91 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %28, i64 %89
  %92 = bitcast %class.CXFA_Node** %91 to <2 x i64>*
  %93 = load <2 x i64>, <2 x i64>* %92, align 8, !alias.scope !154
  %94 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %91, i64 2
  %95 = bitcast %class.CXFA_Node** %94 to <2 x i64>*
  %96 = load <2 x i64>, <2 x i64>* %95, align 8, !alias.scope !154
  %97 = bitcast %"class.cppgc::internal::BasicMember.70"* %90 to <2 x i64>*
  store <2 x i64> %93, <2 x i64>* %97, align 8, !alias.scope !157, !noalias !154
  %98 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %90, i64 2
  %99 = bitcast %"class.cppgc::internal::BasicMember.70"* %98 to <2 x i64>*
  store <2 x i64> %96, <2 x i64>* %99, align 8, !alias.scope !157, !noalias !154
  %100 = or i64 %66, 12
  %101 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %17, i64 %100
  %102 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %28, i64 %100
  %103 = bitcast %class.CXFA_Node** %102 to <2 x i64>*
  %104 = load <2 x i64>, <2 x i64>* %103, align 8, !alias.scope !154
  %105 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %102, i64 2
  %106 = bitcast %class.CXFA_Node** %105 to <2 x i64>*
  %107 = load <2 x i64>, <2 x i64>* %106, align 8, !alias.scope !154
  %108 = bitcast %"class.cppgc::internal::BasicMember.70"* %101 to <2 x i64>*
  store <2 x i64> %104, <2 x i64>* %108, align 8, !alias.scope !157, !noalias !154
  %109 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %101, i64 2
  %110 = bitcast %"class.cppgc::internal::BasicMember.70"* %109 to <2 x i64>*
  store <2 x i64> %107, <2 x i64>* %110, align 8, !alias.scope !157, !noalias !154
  %111 = add i64 %66, 16
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !159

114:                                              ; preds = %65, %54
  %115 = phi i64 [ 0, %54 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %17, i64 %118
  %121 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %28, i64 %118
  %122 = bitcast %class.CXFA_Node** %121 to <2 x i64>*
  %123 = load <2 x i64>, <2 x i64>* %122, align 8, !alias.scope !154
  %124 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %121, i64 2
  %125 = bitcast %class.CXFA_Node** %124 to <2 x i64>*
  %126 = load <2 x i64>, <2 x i64>* %125, align 8, !alias.scope !154
  %127 = bitcast %"class.cppgc::internal::BasicMember.70"* %120 to <2 x i64>*
  store <2 x i64> %123, <2 x i64>* %127, align 8, !alias.scope !157, !noalias !154
  %128 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %120, i64 2
  %129 = bitcast %"class.cppgc::internal::BasicMember.70"* %128 to <2 x i64>*
  store <2 x i64> %126, <2 x i64>* %129, align 8, !alias.scope !157, !noalias !154
  %130 = add i64 %118, 4
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !160

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %36, %55
  br i1 %134, label %206, label %135

135:                                              ; preds = %133, %38, %30
  %136 = phi %"class.cppgc::internal::BasicMember.70"* [ %17, %38 ], [ %17, %30 ], [ %56, %133 ]
  %137 = phi %class.CXFA_Node** [ %28, %38 ], [ %28, %30 ], [ %57, %133 ]
  %138 = ptrtoint %class.CXFA_Node** %137 to i64
  %139 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %3, i64 -1
  %140 = ptrtoint %class.CXFA_Node** %139 to i64
  %141 = sub i64 %140, %138
  %142 = lshr i64 %141, 3
  %143 = add nuw nsw i64 %142, 1
  %144 = and i64 %143, 7
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %157, label %146

146:                                              ; preds = %135, %146
  %147 = phi %"class.cppgc::internal::BasicMember.70"* [ %154, %146 ], [ %136, %135 ]
  %148 = phi %class.CXFA_Node** [ %153, %146 ], [ %137, %135 ]
  %149 = phi i64 [ %155, %146 ], [ %144, %135 ]
  %150 = bitcast %"class.cppgc::internal::BasicMember.70"* %147 to i64*
  %151 = bitcast %class.CXFA_Node** %148 to i64*
  %152 = load i64, i64* %151, align 8
  store i64 %152, i64* %150, align 8
  %153 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %148, i64 1
  %154 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %147, i64 1
  %155 = add i64 %149, -1
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %157, label %146, !llvm.loop !161

157:                                              ; preds = %146, %135
  %158 = phi %"class.cppgc::internal::BasicMember.70"* [ undef, %135 ], [ %154, %146 ]
  %159 = phi %"class.cppgc::internal::BasicMember.70"* [ %136, %135 ], [ %154, %146 ]
  %160 = phi %class.CXFA_Node** [ %137, %135 ], [ %153, %146 ]
  %161 = icmp ult i64 %141, 56
  br i1 %161, label %206, label %162

162:                                              ; preds = %157, %162
  %163 = phi %"class.cppgc::internal::BasicMember.70"* [ %204, %162 ], [ %159, %157 ]
  %164 = phi %class.CXFA_Node** [ %203, %162 ], [ %160, %157 ]
  %165 = bitcast %"class.cppgc::internal::BasicMember.70"* %163 to i64*
  %166 = bitcast %class.CXFA_Node** %164 to i64*
  %167 = load i64, i64* %166, align 8
  store i64 %167, i64* %165, align 8
  %168 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %164, i64 1
  %169 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %163, i64 1
  %170 = bitcast %"class.cppgc::internal::BasicMember.70"* %169 to i64*
  %171 = bitcast %class.CXFA_Node** %168 to i64*
  %172 = load i64, i64* %171, align 8
  store i64 %172, i64* %170, align 8
  %173 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %164, i64 2
  %174 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %163, i64 2
  %175 = bitcast %"class.cppgc::internal::BasicMember.70"* %174 to i64*
  %176 = bitcast %class.CXFA_Node** %173 to i64*
  %177 = load i64, i64* %176, align 8
  store i64 %177, i64* %175, align 8
  %178 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %164, i64 3
  %179 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %163, i64 3
  %180 = bitcast %"class.cppgc::internal::BasicMember.70"* %179 to i64*
  %181 = bitcast %class.CXFA_Node** %178 to i64*
  %182 = load i64, i64* %181, align 8
  store i64 %182, i64* %180, align 8
  %183 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %164, i64 4
  %184 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %163, i64 4
  %185 = bitcast %"class.cppgc::internal::BasicMember.70"* %184 to i64*
  %186 = bitcast %class.CXFA_Node** %183 to i64*
  %187 = load i64, i64* %186, align 8
  store i64 %187, i64* %185, align 8
  %188 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %164, i64 5
  %189 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %163, i64 5
  %190 = bitcast %"class.cppgc::internal::BasicMember.70"* %189 to i64*
  %191 = bitcast %class.CXFA_Node** %188 to i64*
  %192 = load i64, i64* %191, align 8
  store i64 %192, i64* %190, align 8
  %193 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %164, i64 6
  %194 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %163, i64 6
  %195 = bitcast %"class.cppgc::internal::BasicMember.70"* %194 to i64*
  %196 = bitcast %class.CXFA_Node** %193 to i64*
  %197 = load i64, i64* %196, align 8
  store i64 %197, i64* %195, align 8
  %198 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %164, i64 7
  %199 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %163, i64 7
  %200 = bitcast %"class.cppgc::internal::BasicMember.70"* %199 to i64*
  %201 = bitcast %class.CXFA_Node** %198 to i64*
  %202 = load i64, i64* %201, align 8
  store i64 %202, i64* %200, align 8
  %203 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %164, i64 8
  %204 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %163, i64 8
  %205 = icmp eq %class.CXFA_Node** %203, %3
  br i1 %205, label %206, label %162, !llvm.loop !162

206:                                              ; preds = %157, %162, %133
  %207 = phi %"class.cppgc::internal::BasicMember.70"* [ %56, %133 ], [ %158, %157 ], [ %204, %162 ]
  %208 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %207 to i64
  br label %209

209:                                              ; preds = %206, %27
  %210 = phi i64 [ %18, %27 ], [ %208, %206 ]
  store i64 %210, i64* %22, align 8
  %211 = icmp sgt i64 %24, 0
  br i1 %211, label %212, label %618

212:                                              ; preds = %209
  %213 = inttoptr i64 %210 to %"class.cppgc::internal::BasicMember.70"*
  br label %214

214:                                              ; preds = %212, %23
  %215 = phi i64 [ %210, %212 ], [ %18, %23 ]
  %216 = phi %"class.cppgc::internal::BasicMember.70"* [ %213, %212 ], [ %17, %23 ]
  %217 = phi %class.CXFA_Node** [ %28, %212 ], [ %3, %23 ]
  %218 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1, i64 %10
  %219 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %218 to i64
  %220 = sub i64 %215, %219
  %221 = ashr exact i64 %220, 3
  %222 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1, i64 %221
  %223 = icmp ult %"class.cppgc::internal::BasicMember.70"* %222, %17
  br i1 %223, label %224, label %254

224:                                              ; preds = %214
  %225 = sub nsw i64 0, %221
  %226 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %17, i64 %225, i32 0, i32 0
  %227 = bitcast i8** %226 to i8*
  %228 = xor i64 %5, -1
  %229 = getelementptr i8, i8* %227, i64 %228
  %230 = ptrtoint i8* %229 to i64
  %231 = lshr i64 %230, 3
  %232 = add nuw nsw i64 %231, 1
  %233 = and i64 %232, 7
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %246, label %235

235:                                              ; preds = %224, %235
  %236 = phi %"class.cppgc::internal::BasicMember.70"* [ %243, %235 ], [ %216, %224 ]
  %237 = phi %"class.cppgc::internal::BasicMember.70"* [ %242, %235 ], [ %222, %224 ]
  %238 = phi i64 [ %244, %235 ], [ %233, %224 ]
  %239 = bitcast %"class.cppgc::internal::BasicMember.70"* %237 to i64*
  %240 = load i64, i64* %239, align 8
  %241 = bitcast %"class.cppgc::internal::BasicMember.70"* %236 to i64*
  store i64 %240, i64* %241, align 8
  store atomic i64 0, i64* %239 monotonic, align 8
  %242 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %237, i64 1
  %243 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %236, i64 1
  %244 = add i64 %238, -1
  %245 = icmp eq i64 %244, 0
  br i1 %245, label %246, label %235, !llvm.loop !163

246:                                              ; preds = %235, %224
  %247 = phi %"class.cppgc::internal::BasicMember.70"* [ %216, %224 ], [ %243, %235 ]
  %248 = phi %"class.cppgc::internal::BasicMember.70"* [ %222, %224 ], [ %242, %235 ]
  %249 = phi %"class.cppgc::internal::BasicMember.70"* [ undef, %224 ], [ %243, %235 ]
  %250 = icmp ult i8* %229, inttoptr (i64 56 to i8*)
  br i1 %250, label %251, label %280

251:                                              ; preds = %280, %246
  %252 = phi %"class.cppgc::internal::BasicMember.70"* [ %249, %246 ], [ %322, %280 ]
  %253 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %252 to i64
  br label %254

254:                                              ; preds = %251, %214
  %255 = phi i64 [ %253, %251 ], [ %215, %214 ]
  store i64 %255, i64* %22, align 8
  %256 = icmp eq i64 %220, 0
  br i1 %256, label %324, label %257

257:                                              ; preds = %254, %277
  %258 = phi %"class.cppgc::internal::BasicMember.70"* [ %261, %277 ], [ %216, %254 ]
  %259 = phi %"class.cppgc::internal::BasicMember.70"* [ %260, %277 ], [ %222, %254 ]
  %260 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %259, i64 -1
  %261 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %258, i64 -1
  %262 = bitcast %"class.cppgc::internal::BasicMember.70"* %260 to %class.CXFA_Object**
  %263 = load %class.CXFA_Object*, %class.CXFA_Object** %262, align 8
  %264 = ptrtoint %class.CXFA_Object* %263 to i64
  %265 = bitcast %"class.cppgc::internal::BasicMember.70"* %261 to i64*
  store atomic i64 %264, i64* %265 monotonic, align 8
  %266 = bitcast %class.CXFA_Object* %263 to i8*
  %267 = and i64 %264, -4294967296
  %268 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %261 to i64
  %269 = sub i64 %268, %267
  %270 = icmp ult i64 %269, 4294967297
  br i1 %270, label %271, label %277

271:                                              ; preds = %257
  %272 = inttoptr i64 %267 to %"struct.cppgc::internal::CagedHeapLocalData"*
  %273 = getelementptr inbounds %"struct.cppgc::internal::CagedHeapLocalData", %"struct.cppgc::internal::CagedHeapLocalData"* %272, i64 0, i32 0
  %274 = load i8, i8* %273, align 536870912, !range !13
  %275 = icmp eq i8 %274, 1
  br i1 %275, label %276, label %277, !prof !57

276:                                              ; preds = %271
  tail call void @_ZN5cppgc8internal12WriteBarrier26DijkstraMarkingBarrierSlowEPKv(i8* %266) #11
  br label %277

277:                                              ; preds = %276, %271, %257
  %278 = bitcast %"class.cppgc::internal::BasicMember.70"* %260 to i64*
  store atomic i64 0, i64* %278 monotonic, align 8
  %279 = icmp eq %"class.cppgc::internal::BasicMember.70"* %260, %1
  br i1 %279, label %324, label %257

280:                                              ; preds = %246, %280
  %281 = phi %"class.cppgc::internal::BasicMember.70"* [ %322, %280 ], [ %247, %246 ]
  %282 = phi %"class.cppgc::internal::BasicMember.70"* [ %321, %280 ], [ %248, %246 ]
  %283 = bitcast %"class.cppgc::internal::BasicMember.70"* %282 to i64*
  %284 = load i64, i64* %283, align 8
  %285 = bitcast %"class.cppgc::internal::BasicMember.70"* %281 to i64*
  store i64 %284, i64* %285, align 8
  store atomic i64 0, i64* %283 monotonic, align 8
  %286 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %282, i64 1
  %287 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %281, i64 1
  %288 = bitcast %"class.cppgc::internal::BasicMember.70"* %286 to i64*
  %289 = load i64, i64* %288, align 8
  %290 = bitcast %"class.cppgc::internal::BasicMember.70"* %287 to i64*
  store i64 %289, i64* %290, align 8
  store atomic i64 0, i64* %288 monotonic, align 8
  %291 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %282, i64 2
  %292 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %281, i64 2
  %293 = bitcast %"class.cppgc::internal::BasicMember.70"* %291 to i64*
  %294 = load i64, i64* %293, align 8
  %295 = bitcast %"class.cppgc::internal::BasicMember.70"* %292 to i64*
  store i64 %294, i64* %295, align 8
  store atomic i64 0, i64* %293 monotonic, align 8
  %296 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %282, i64 3
  %297 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %281, i64 3
  %298 = bitcast %"class.cppgc::internal::BasicMember.70"* %296 to i64*
  %299 = load i64, i64* %298, align 8
  %300 = bitcast %"class.cppgc::internal::BasicMember.70"* %297 to i64*
  store i64 %299, i64* %300, align 8
  store atomic i64 0, i64* %298 monotonic, align 8
  %301 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %282, i64 4
  %302 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %281, i64 4
  %303 = bitcast %"class.cppgc::internal::BasicMember.70"* %301 to i64*
  %304 = load i64, i64* %303, align 8
  %305 = bitcast %"class.cppgc::internal::BasicMember.70"* %302 to i64*
  store i64 %304, i64* %305, align 8
  store atomic i64 0, i64* %303 monotonic, align 8
  %306 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %282, i64 5
  %307 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %281, i64 5
  %308 = bitcast %"class.cppgc::internal::BasicMember.70"* %306 to i64*
  %309 = load i64, i64* %308, align 8
  %310 = bitcast %"class.cppgc::internal::BasicMember.70"* %307 to i64*
  store i64 %309, i64* %310, align 8
  store atomic i64 0, i64* %308 monotonic, align 8
  %311 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %282, i64 6
  %312 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %281, i64 6
  %313 = bitcast %"class.cppgc::internal::BasicMember.70"* %311 to i64*
  %314 = load i64, i64* %313, align 8
  %315 = bitcast %"class.cppgc::internal::BasicMember.70"* %312 to i64*
  store i64 %314, i64* %315, align 8
  store atomic i64 0, i64* %313 monotonic, align 8
  %316 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %282, i64 7
  %317 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %281, i64 7
  %318 = bitcast %"class.cppgc::internal::BasicMember.70"* %316 to i64*
  %319 = load i64, i64* %318, align 8
  %320 = bitcast %"class.cppgc::internal::BasicMember.70"* %317 to i64*
  store i64 %319, i64* %320, align 8
  store atomic i64 0, i64* %318 monotonic, align 8
  %321 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %282, i64 8
  %322 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %281, i64 8
  %323 = icmp ult %"class.cppgc::internal::BasicMember.70"* %321, %17
  br i1 %323, label %280, label %251

324:                                              ; preds = %277, %254
  %325 = icmp eq %class.CXFA_Node** %217, %2
  br i1 %325, label %618, label %326

326:                                              ; preds = %324, %344
  %327 = phi %"class.cppgc::internal::BasicMember.70"* [ %346, %344 ], [ %1, %324 ]
  %328 = phi %class.CXFA_Node** [ %345, %344 ], [ %2, %324 ]
  %329 = bitcast %class.CXFA_Node** %328 to %class.CXFA_Object**
  %330 = load %class.CXFA_Object*, %class.CXFA_Object** %329, align 8
  %331 = ptrtoint %class.CXFA_Object* %330 to i64
  %332 = bitcast %"class.cppgc::internal::BasicMember.70"* %327 to i64*
  store atomic i64 %331, i64* %332 monotonic, align 8
  %333 = bitcast %class.CXFA_Object* %330 to i8*
  %334 = and i64 %331, -4294967296
  %335 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %327 to i64
  %336 = sub i64 %335, %334
  %337 = icmp ult i64 %336, 4294967297
  br i1 %337, label %338, label %344

338:                                              ; preds = %326
  %339 = inttoptr i64 %334 to %"struct.cppgc::internal::CagedHeapLocalData"*
  %340 = getelementptr inbounds %"struct.cppgc::internal::CagedHeapLocalData", %"struct.cppgc::internal::CagedHeapLocalData"* %339, i64 0, i32 0
  %341 = load i8, i8* %340, align 536870912, !range !13
  %342 = icmp eq i8 %341, 1
  br i1 %342, label %343, label %344, !prof !57

343:                                              ; preds = %338
  tail call void @_ZN5cppgc8internal12WriteBarrier26DijkstraMarkingBarrierSlowEPKv(i8* %333) #11
  br label %344

344:                                              ; preds = %343, %338, %326
  %345 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %328, i64 1
  %346 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %327, i64 1
  %347 = icmp eq %class.CXFA_Node** %345, %217
  br i1 %347, label %618, label %326

348:                                              ; preds = %12
  %349 = bitcast %"class.std::__1::vector.90"* %0 to i64*
  %350 = load i64, i64* %349, align 8
  %351 = sub i64 %18, %350
  %352 = ashr exact i64 %351, 3
  %353 = add nsw i64 %352, %10
  %354 = icmp ugt i64 %353, 2305843009213693951
  br i1 %354, label %355, label %357

355:                                              ; preds = %348
  %356 = bitcast %"class.std::__1::vector.90"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %356) #12
  unreachable

357:                                              ; preds = %348
  %358 = sub i64 %15, %350
  %359 = ashr exact i64 %358, 3
  %360 = icmp ult i64 %359, 1152921504606846975
  br i1 %360, label %364, label %361

361:                                              ; preds = %357
  %362 = sub i64 %5, %350
  %363 = ashr exact i64 %362, 3
  br label %374

364:                                              ; preds = %357
  %365 = ashr exact i64 %358, 2
  %366 = icmp ult i64 %365, %353
  %367 = select i1 %366, i64 %353, i64 %365
  %368 = sub i64 %5, %350
  %369 = ashr exact i64 %368, 3
  %370 = icmp eq i64 %367, 0
  br i1 %370, label %380, label %371

371:                                              ; preds = %364
  %372 = icmp ugt i64 %367, 2305843009213693951
  br i1 %372, label %373, label %374

373:                                              ; preds = %371
  tail call void @abort() #12
  unreachable

374:                                              ; preds = %361, %371
  %375 = phi i64 [ 2305843009213693951, %361 ], [ %367, %371 ]
  %376 = phi i64 [ %363, %361 ], [ %369, %371 ]
  %377 = shl i64 %375, 3
  %378 = tail call i8* @_Znwm(i64 %377) #10
  %379 = bitcast i8* %378 to %"class.cppgc::internal::BasicMember.70"*
  br label %380

380:                                              ; preds = %374, %364
  %381 = phi i64 [ %376, %374 ], [ %369, %364 ]
  %382 = phi i64 [ %375, %374 ], [ 0, %364 ]
  %383 = phi %"class.cppgc::internal::BasicMember.70"* [ %379, %374 ], [ null, %364 ]
  %384 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %383, i64 %381
  %385 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %384 to i64
  %386 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %383, i64 %382
  %387 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %386 to i64
  %388 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %384, i64 %10
  %389 = add i64 %9, -8
  %390 = lshr i64 %389, 3
  %391 = add nuw nsw i64 %390, 1
  %392 = and i64 %391, 7
  %393 = icmp eq i64 %392, 0
  br i1 %393, label %409, label %394

394:                                              ; preds = %380, %394
  %395 = phi %"class.cppgc::internal::BasicMember.70"* [ %402, %394 ], [ %384, %380 ]
  %396 = phi i64 [ %403, %394 ], [ %385, %380 ]
  %397 = phi %class.CXFA_Node** [ %404, %394 ], [ %2, %380 ]
  %398 = phi i64 [ %405, %394 ], [ %392, %380 ]
  %399 = bitcast %class.CXFA_Node** %397 to i64*
  %400 = load i64, i64* %399, align 8
  %401 = inttoptr i64 %396 to i64*
  store i64 %400, i64* %401, align 8
  %402 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %395, i64 1
  %403 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %402 to i64
  %404 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %397, i64 1
  %405 = add i64 %398, -1
  %406 = icmp eq i64 %405, 0
  br i1 %406, label %407, label %394, !llvm.loop !164

407:                                              ; preds = %394
  %408 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %402 to i64
  br label %409

409:                                              ; preds = %380, %407
  %410 = phi %"class.cppgc::internal::BasicMember.70"* [ %384, %380 ], [ %402, %407 ]
  %411 = phi i64 [ %385, %380 ], [ %408, %407 ]
  %412 = phi %class.CXFA_Node** [ %2, %380 ], [ %404, %407 ]
  %413 = icmp ult i64 %389, 56
  br i1 %413, label %460, label %414

414:                                              ; preds = %409, %414
  %415 = phi %"class.cppgc::internal::BasicMember.70"* [ %456, %414 ], [ %410, %409 ]
  %416 = phi i64 [ %457, %414 ], [ %411, %409 ]
  %417 = phi %class.CXFA_Node** [ %458, %414 ], [ %412, %409 ]
  %418 = bitcast %class.CXFA_Node** %417 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = inttoptr i64 %416 to i64*
  store i64 %419, i64* %420, align 8
  %421 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %415, i64 1
  %422 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %417, i64 1
  %423 = bitcast %class.CXFA_Node** %422 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast %"class.cppgc::internal::BasicMember.70"* %421 to i64*
  store i64 %424, i64* %425, align 8
  %426 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %415, i64 2
  %427 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %417, i64 2
  %428 = bitcast %class.CXFA_Node** %427 to i64*
  %429 = load i64, i64* %428, align 8
  %430 = bitcast %"class.cppgc::internal::BasicMember.70"* %426 to i64*
  store i64 %429, i64* %430, align 8
  %431 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %415, i64 3
  %432 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %417, i64 3
  %433 = bitcast %class.CXFA_Node** %432 to i64*
  %434 = load i64, i64* %433, align 8
  %435 = bitcast %"class.cppgc::internal::BasicMember.70"* %431 to i64*
  store i64 %434, i64* %435, align 8
  %436 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %415, i64 4
  %437 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %417, i64 4
  %438 = bitcast %class.CXFA_Node** %437 to i64*
  %439 = load i64, i64* %438, align 8
  %440 = bitcast %"class.cppgc::internal::BasicMember.70"* %436 to i64*
  store i64 %439, i64* %440, align 8
  %441 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %415, i64 5
  %442 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %417, i64 5
  %443 = bitcast %class.CXFA_Node** %442 to i64*
  %444 = load i64, i64* %443, align 8
  %445 = bitcast %"class.cppgc::internal::BasicMember.70"* %441 to i64*
  store i64 %444, i64* %445, align 8
  %446 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %415, i64 6
  %447 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %417, i64 6
  %448 = bitcast %class.CXFA_Node** %447 to i64*
  %449 = load i64, i64* %448, align 8
  %450 = bitcast %"class.cppgc::internal::BasicMember.70"* %446 to i64*
  store i64 %449, i64* %450, align 8
  %451 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %415, i64 7
  %452 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %417, i64 7
  %453 = bitcast %class.CXFA_Node** %452 to i64*
  %454 = load i64, i64* %453, align 8
  %455 = bitcast %"class.cppgc::internal::BasicMember.70"* %451 to i64*
  store i64 %454, i64* %455, align 8
  %456 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %415, i64 8
  %457 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %456 to i64
  %458 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %417, i64 8
  %459 = icmp eq %"class.cppgc::internal::BasicMember.70"* %388, %456
  br i1 %459, label %460, label %414

460:                                              ; preds = %414, %409
  %461 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %7, align 8
  %462 = icmp eq %"class.cppgc::internal::BasicMember.70"* %461, %1
  br i1 %462, label %535, label %463

463:                                              ; preds = %460
  %464 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %461 to i64
  %465 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %1, i64 -1, i32 0, i32 0
  %466 = ptrtoint i8** %465 to i64
  %467 = sub i64 %466, %464
  %468 = lshr i64 %467, 3
  %469 = add nuw nsw i64 %468, 1
  %470 = and i64 %469, 7
  %471 = icmp eq i64 %470, 0
  br i1 %471, label %483, label %472

472:                                              ; preds = %463, %472
  %473 = phi %"class.cppgc::internal::BasicMember.70"* [ %476, %472 ], [ %384, %463 ]
  %474 = phi %"class.cppgc::internal::BasicMember.70"* [ %477, %472 ], [ %1, %463 ]
  %475 = phi i64 [ %481, %472 ], [ %470, %463 ]
  %476 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %473, i64 -1
  %477 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %474, i64 -1
  %478 = bitcast %"class.cppgc::internal::BasicMember.70"* %477 to i64*
  %479 = load i64, i64* %478, align 8
  %480 = bitcast %"class.cppgc::internal::BasicMember.70"* %476 to i64*
  store i64 %479, i64* %480, align 8
  store atomic i64 0, i64* %478 monotonic, align 8
  %481 = add i64 %475, -1
  %482 = icmp eq i64 %481, 0
  br i1 %482, label %483, label %472, !llvm.loop !165

483:                                              ; preds = %472, %463
  %484 = phi %"class.cppgc::internal::BasicMember.70"* [ undef, %463 ], [ %476, %472 ]
  %485 = phi %"class.cppgc::internal::BasicMember.70"* [ %384, %463 ], [ %476, %472 ]
  %486 = phi %"class.cppgc::internal::BasicMember.70"* [ %1, %463 ], [ %477, %472 ]
  %487 = icmp ult i64 %467, 56
  br i1 %487, label %532, label %488

488:                                              ; preds = %483, %488
  %489 = phi %"class.cppgc::internal::BasicMember.70"* [ %526, %488 ], [ %485, %483 ]
  %490 = phi %"class.cppgc::internal::BasicMember.70"* [ %527, %488 ], [ %486, %483 ]
  %491 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %489, i64 -1
  %492 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %490, i64 -1
  %493 = bitcast %"class.cppgc::internal::BasicMember.70"* %492 to i64*
  %494 = load i64, i64* %493, align 8
  %495 = bitcast %"class.cppgc::internal::BasicMember.70"* %491 to i64*
  store i64 %494, i64* %495, align 8
  store atomic i64 0, i64* %493 monotonic, align 8
  %496 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %489, i64 -2
  %497 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %490, i64 -2
  %498 = bitcast %"class.cppgc::internal::BasicMember.70"* %497 to i64*
  %499 = load i64, i64* %498, align 8
  %500 = bitcast %"class.cppgc::internal::BasicMember.70"* %496 to i64*
  store i64 %499, i64* %500, align 8
  store atomic i64 0, i64* %498 monotonic, align 8
  %501 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %489, i64 -3
  %502 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %490, i64 -3
  %503 = bitcast %"class.cppgc::internal::BasicMember.70"* %502 to i64*
  %504 = load i64, i64* %503, align 8
  %505 = bitcast %"class.cppgc::internal::BasicMember.70"* %501 to i64*
  store i64 %504, i64* %505, align 8
  store atomic i64 0, i64* %503 monotonic, align 8
  %506 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %489, i64 -4
  %507 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %490, i64 -4
  %508 = bitcast %"class.cppgc::internal::BasicMember.70"* %507 to i64*
  %509 = load i64, i64* %508, align 8
  %510 = bitcast %"class.cppgc::internal::BasicMember.70"* %506 to i64*
  store i64 %509, i64* %510, align 8
  store atomic i64 0, i64* %508 monotonic, align 8
  %511 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %489, i64 -5
  %512 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %490, i64 -5
  %513 = bitcast %"class.cppgc::internal::BasicMember.70"* %512 to i64*
  %514 = load i64, i64* %513, align 8
  %515 = bitcast %"class.cppgc::internal::BasicMember.70"* %511 to i64*
  store i64 %514, i64* %515, align 8
  store atomic i64 0, i64* %513 monotonic, align 8
  %516 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %489, i64 -6
  %517 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %490, i64 -6
  %518 = bitcast %"class.cppgc::internal::BasicMember.70"* %517 to i64*
  %519 = load i64, i64* %518, align 8
  %520 = bitcast %"class.cppgc::internal::BasicMember.70"* %516 to i64*
  store i64 %519, i64* %520, align 8
  store atomic i64 0, i64* %518 monotonic, align 8
  %521 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %489, i64 -7
  %522 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %490, i64 -7
  %523 = bitcast %"class.cppgc::internal::BasicMember.70"* %522 to i64*
  %524 = load i64, i64* %523, align 8
  %525 = bitcast %"class.cppgc::internal::BasicMember.70"* %521 to i64*
  store i64 %524, i64* %525, align 8
  store atomic i64 0, i64* %523 monotonic, align 8
  %526 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %489, i64 -8
  %527 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %490, i64 -8
  %528 = bitcast %"class.cppgc::internal::BasicMember.70"* %527 to i64*
  %529 = load i64, i64* %528, align 8
  %530 = bitcast %"class.cppgc::internal::BasicMember.70"* %526 to i64*
  store i64 %529, i64* %530, align 8
  store atomic i64 0, i64* %528 monotonic, align 8
  %531 = icmp eq %"class.cppgc::internal::BasicMember.70"* %527, %461
  br i1 %531, label %532, label %488

532:                                              ; preds = %488, %483
  %533 = phi %"class.cppgc::internal::BasicMember.70"* [ %484, %483 ], [ %526, %488 ]
  %534 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %533 to i64
  br label %535

535:                                              ; preds = %532, %460
  %536 = phi i64 [ %385, %460 ], [ %534, %532 ]
  %537 = phi %"class.cppgc::internal::BasicMember.70"* [ %384, %460 ], [ %533, %532 ]
  %538 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %16, align 8
  %539 = icmp eq %"class.cppgc::internal::BasicMember.70"* %538, %1
  br i1 %539, label %564, label %540

540:                                              ; preds = %535
  %541 = getelementptr %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %538, i64 -1, i32 0, i32 0
  %542 = ptrtoint i8** %541 to i64
  %543 = sub i64 %542, %5
  %544 = lshr i64 %543, 3
  %545 = add nuw nsw i64 %544, 1
  %546 = and i64 %545, 7
  %547 = icmp eq i64 %546, 0
  br i1 %547, label %559, label %548

548:                                              ; preds = %540, %548
  %549 = phi %"class.cppgc::internal::BasicMember.70"* [ %556, %548 ], [ %388, %540 ]
  %550 = phi %"class.cppgc::internal::BasicMember.70"* [ %555, %548 ], [ %1, %540 ]
  %551 = phi i64 [ %557, %548 ], [ %546, %540 ]
  %552 = bitcast %"class.cppgc::internal::BasicMember.70"* %549 to i64*
  %553 = bitcast %"class.cppgc::internal::BasicMember.70"* %550 to i64*
  %554 = load i64, i64* %553, align 8
  store i64 %554, i64* %552, align 8
  store atomic i64 0, i64* %553 monotonic, align 8
  %555 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %550, i64 1
  %556 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %549, i64 1
  %557 = add i64 %551, -1
  %558 = icmp eq i64 %557, 0
  br i1 %558, label %559, label %548, !llvm.loop !166

559:                                              ; preds = %548, %540
  %560 = phi %"class.cppgc::internal::BasicMember.70"* [ undef, %540 ], [ %556, %548 ]
  %561 = phi %"class.cppgc::internal::BasicMember.70"* [ %388, %540 ], [ %556, %548 ]
  %562 = phi %"class.cppgc::internal::BasicMember.70"* [ %1, %540 ], [ %555, %548 ]
  %563 = icmp ult i64 %543, 56
  br i1 %563, label %610, label %566

564:                                              ; preds = %535
  %565 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %537 to i64
  br label %610

566:                                              ; preds = %559, %566
  %567 = phi %"class.cppgc::internal::BasicMember.70"* [ %608, %566 ], [ %561, %559 ]
  %568 = phi %"class.cppgc::internal::BasicMember.70"* [ %607, %566 ], [ %562, %559 ]
  %569 = bitcast %"class.cppgc::internal::BasicMember.70"* %567 to i64*
  %570 = bitcast %"class.cppgc::internal::BasicMember.70"* %568 to i64*
  %571 = load i64, i64* %570, align 8
  store i64 %571, i64* %569, align 8
  store atomic i64 0, i64* %570 monotonic, align 8
  %572 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %568, i64 1
  %573 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %567, i64 1
  %574 = bitcast %"class.cppgc::internal::BasicMember.70"* %573 to i64*
  %575 = bitcast %"class.cppgc::internal::BasicMember.70"* %572 to i64*
  %576 = load i64, i64* %575, align 8
  store i64 %576, i64* %574, align 8
  store atomic i64 0, i64* %575 monotonic, align 8
  %577 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %568, i64 2
  %578 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %567, i64 2
  %579 = bitcast %"class.cppgc::internal::BasicMember.70"* %578 to i64*
  %580 = bitcast %"class.cppgc::internal::BasicMember.70"* %577 to i64*
  %581 = load i64, i64* %580, align 8
  store i64 %581, i64* %579, align 8
  store atomic i64 0, i64* %580 monotonic, align 8
  %582 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %568, i64 3
  %583 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %567, i64 3
  %584 = bitcast %"class.cppgc::internal::BasicMember.70"* %583 to i64*
  %585 = bitcast %"class.cppgc::internal::BasicMember.70"* %582 to i64*
  %586 = load i64, i64* %585, align 8
  store i64 %586, i64* %584, align 8
  store atomic i64 0, i64* %585 monotonic, align 8
  %587 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %568, i64 4
  %588 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %567, i64 4
  %589 = bitcast %"class.cppgc::internal::BasicMember.70"* %588 to i64*
  %590 = bitcast %"class.cppgc::internal::BasicMember.70"* %587 to i64*
  %591 = load i64, i64* %590, align 8
  store i64 %591, i64* %589, align 8
  store atomic i64 0, i64* %590 monotonic, align 8
  %592 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %568, i64 5
  %593 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %567, i64 5
  %594 = bitcast %"class.cppgc::internal::BasicMember.70"* %593 to i64*
  %595 = bitcast %"class.cppgc::internal::BasicMember.70"* %592 to i64*
  %596 = load i64, i64* %595, align 8
  store i64 %596, i64* %594, align 8
  store atomic i64 0, i64* %595 monotonic, align 8
  %597 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %568, i64 6
  %598 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %567, i64 6
  %599 = bitcast %"class.cppgc::internal::BasicMember.70"* %598 to i64*
  %600 = bitcast %"class.cppgc::internal::BasicMember.70"* %597 to i64*
  %601 = load i64, i64* %600, align 8
  store i64 %601, i64* %599, align 8
  store atomic i64 0, i64* %600 monotonic, align 8
  %602 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %568, i64 7
  %603 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %567, i64 7
  %604 = bitcast %"class.cppgc::internal::BasicMember.70"* %603 to i64*
  %605 = bitcast %"class.cppgc::internal::BasicMember.70"* %602 to i64*
  %606 = load i64, i64* %605, align 8
  store i64 %606, i64* %604, align 8
  store atomic i64 0, i64* %605 monotonic, align 8
  %607 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %568, i64 8
  %608 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %567, i64 8
  %609 = icmp eq %"class.cppgc::internal::BasicMember.70"* %607, %538
  br i1 %609, label %610, label %566

610:                                              ; preds = %559, %566, %564
  %611 = phi %"class.cppgc::internal::BasicMember.70"* [ %388, %564 ], [ %560, %559 ], [ %608, %566 ]
  %612 = phi i64 [ %565, %564 ], [ %536, %566 ], [ %536, %559 ]
  %613 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %611 to i64
  %614 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %7, align 8
  store i64 %612, i64* %349, align 8
  store i64 %613, i64* %22, align 8
  store i64 %387, i64* %14, align 8
  %615 = icmp eq %"class.cppgc::internal::BasicMember.70"* %614, null
  br i1 %615, label %618, label %616

616:                                              ; preds = %610
  %617 = bitcast %"class.cppgc::internal::BasicMember.70"* %614 to i8*
  tail call void @_ZdlPv(i8* %617) #10
  br label %618

618:                                              ; preds = %344, %616, %610, %209, %324, %4
  %619 = phi %"class.cppgc::internal::BasicMember.70"* [ %1, %4 ], [ %1, %324 ], [ %1, %209 ], [ %384, %610 ], [ %384, %616 ], [ %1, %344 ]
  ret %"class.cppgc::internal::BasicMember.70"* %619
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN23CFXJSE_ResolveProcessor9GetFilterEN5fxcrt18StringViewTemplateIwEEiR22CFXJSE_ResolveNodeData(%class.CFXJSE_ResolveProcessor* nocapture readnone, %"class.fxcrt::StringViewTemplate.97"* nocapture readonly, i32, %class.CFXJSE_ResolveNodeData* dereferenceable(96)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.pdfium::span.145", align 8
  %6 = alloca %"class.pdfium::span.145", align 8
  %7 = alloca %"class.std::__1::vector.149", align 8
  %8 = alloca %"class.fxcrt::StringViewTemplate.97", align 8
  %9 = getelementptr inbounds %"class.fxcrt::StringViewTemplate.97", %"class.fxcrt::StringViewTemplate.97"* %1, i64 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i32
  %12 = icmp sgt i32 %11, %2
  br i1 %12, label %13, label %348

13:                                               ; preds = %4
  %14 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %3, i64 0, i32 2
  %15 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %3, i64 0, i32 3
  %16 = bitcast %"class.pdfium::span.145"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.pdfium::span.145", %"class.pdfium::span.145"* %5, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.pdfium::span.145", %"class.pdfium::span.145"* %5, i64 0, i32 1
  %19 = sub nsw i32 %11, %2
  %20 = sext i32 %19 to i64
  %21 = bitcast %"class.pdfium::span.145"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 16, i1 false)
  call void @_ZN5fxcrt10WideString9GetBufferEm(%"class.pdfium::span.145"* nonnull sret %5, %"class.fxcrt::WideString"* %14, i64 %20) #11
  %22 = bitcast %"class.pdfium::span.145"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #11
  %23 = getelementptr inbounds %"class.pdfium::span.145", %"class.pdfium::span.145"* %6, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.pdfium::span.145", %"class.pdfium::span.145"* %6, i64 0, i32 1
  %25 = bitcast %"class.pdfium::span.145"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 16, i1 false)
  call void @_ZN5fxcrt10WideString9GetBufferEm(%"class.pdfium::span.145"* nonnull sret %6, %"class.fxcrt::WideString"* %15, i64 %20) #11
  %26 = getelementptr inbounds %"class.fxcrt::StringViewTemplate.97", %"class.fxcrt::StringViewTemplate.97"* %1, i64 0, i32 0, i32 0, i32 0
  %27 = load i32*, i32** %26, align 8, !noalias !167
  %28 = load i64, i64* %9, align 8, !noalias !167
  %29 = bitcast %"class.std::__1::vector.149"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #11
  %30 = getelementptr inbounds %"class.std::__1::vector.149", %"class.std::__1::vector.149"* %7, i64 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.std::__1::vector.149", %"class.std::__1::vector.149"* %7, i64 0, i32 0, i32 1
  %32 = getelementptr inbounds %"class.std::__1::vector.149", %"class.std::__1::vector.149"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 24, i1 false) #11
  %33 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %3, i64 0, i32 6
  %34 = bitcast i32** %31 to i64*
  %35 = bitcast %"class.std::__1::vector.149"* %7 to i64*
  %36 = bitcast i32** %32 to i64*
  %37 = shl i64 %10, 32
  %38 = ashr exact i64 %37, 32
  br label %39

39:                                               ; preds = %13, %308
  %40 = phi i8 [ 0, %13 ], [ %129, %308 ]
  %41 = phi i32 [ 0, %13 ], [ %309, %308 ]
  %42 = phi i32 [ 0, %13 ], [ %131, %308 ]
  %43 = phi i32 [ 0, %13 ], [ %130, %308 ]
  %44 = phi i32 [ %2, %13 ], [ %128, %308 ]
  %45 = phi i32 [ -1, %13 ], [ %310, %308 ]
  br label %46

46:                                               ; preds = %39, %64
  %47 = phi i32 [ %43, %39 ], [ 0, %64 ]
  %48 = phi i32 [ %44, %39 ], [ %65, %64 ]
  %49 = icmp eq i32 %47, 0
  %50 = add nsw i32 %47, -1
  %51 = sext i32 %50 to i64
  %52 = sext i32 %48 to i64
  br label %53

53:                                               ; preds = %46, %75
  %54 = phi i64 [ %52, %46 ], [ %56, %75 ]
  %55 = phi i32 [ %41, %46 ], [ 46, %75 ]
  %56 = add nsw i64 %54, 1
  %57 = icmp ugt i64 %28, %54
  br i1 %57, label %59, label %58, !prof !60

58:                                               ; preds = %53
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #11, !srcloc !170
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #11, !srcloc !171
  unreachable

59:                                               ; preds = %53
  %60 = getelementptr inbounds i32, i32* %27, i64 %54
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, 46
  br i1 %62, label %63, label %94

63:                                               ; preds = %59
  br i1 %49, label %64, label %69

64:                                               ; preds = %63
  %65 = trunc i64 %56 to i32
  %66 = load i16, i16* %33, align 8
  %67 = or i16 %66, 128
  store i16 %67, i16* %33, align 8
  %68 = icmp slt i32 %65, %11
  br i1 %68, label %46, label %314

69:                                               ; preds = %63
  %70 = icmp eq i32 %55, 92
  br i1 %70, label %71, label %79

71:                                               ; preds = %69
  %72 = load i64, i64* %18, align 8
  %73 = icmp ugt i64 %72, %51
  br i1 %73, label %75, label %74, !prof !60

74:                                               ; preds = %71
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #11, !srcloc !170
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #11, !srcloc !171
  unreachable

75:                                               ; preds = %71
  %76 = load i32*, i32** %17, align 8
  %77 = getelementptr inbounds i32, i32* %76, i64 %51
  store i32 46, i32* %77, align 4
  %78 = icmp slt i64 %56, %38
  br i1 %78, label %53, label %312

79:                                               ; preds = %69
  %80 = trunc i64 %56 to i32
  %81 = icmp slt i32 %80, %11
  br i1 %81, label %82, label %90

82:                                               ; preds = %79
  %83 = shl i64 %56, 32
  %84 = ashr exact i64 %83, 32
  %85 = icmp ugt i64 %28, %84
  br i1 %85, label %87, label %86, !prof !60

86:                                               ; preds = %82
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #11, !srcloc !170
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #11, !srcloc !171
  unreachable

87:                                               ; preds = %82
  %88 = getelementptr inbounds i32, i32* %27, i64 %84
  %89 = load i32, i32* %88, align 4
  br label %90

90:                                               ; preds = %79, %87
  %91 = phi i32 [ %89, %87 ], [ 0, %79 ]
  %92 = icmp slt i32 %45, 0
  br i1 %92, label %93, label %96

93:                                               ; preds = %90
  switch i32 %91, label %316 [
    i32 91, label %96
    i32 40, label %96
  ]

94:                                               ; preds = %59
  %95 = trunc i64 %56 to i32
  switch i32 %61, label %105 [
    i32 91, label %109
    i32 40, label %109
  ]

96:                                               ; preds = %93, %93, %90
  br i1 %81, label %97, label %105

97:                                               ; preds = %96
  %98 = shl i64 %56, 32
  %99 = ashr exact i64 %98, 32
  %100 = icmp ugt i64 %28, %99
  br i1 %100, label %102, label %101, !prof !60

101:                                              ; preds = %97
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #11, !srcloc !170
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #11, !srcloc !171
  unreachable

102:                                              ; preds = %97
  %103 = getelementptr inbounds i32, i32* %27, i64 %99
  %104 = load i32, i32* %103, align 4
  switch i32 %104, label %105 [
    i32 91, label %109
    i32 40, label %109
  ]

105:                                              ; preds = %102, %94, %96
  %106 = phi i32 [ %80, %102 ], [ %95, %94 ], [ %80, %96 ]
  %107 = and i8 %40, 1
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %118, label %109

109:                                              ; preds = %102, %102, %94, %94, %105
  %110 = phi i32 [ %106, %105 ], [ %95, %94 ], [ %95, %94 ], [ %80, %102 ], [ %80, %102 ]
  %111 = phi i8 [ %40, %105 ], [ 1, %94 ], [ 1, %94 ], [ 1, %102 ], [ 1, %102 ]
  %112 = sext i32 %42 to i64
  %113 = load i64, i64* %24, align 8
  %114 = icmp ugt i64 %113, %112
  br i1 %114, label %116, label %115, !prof !60

115:                                              ; preds = %109
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #11, !srcloc !170
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #11, !srcloc !171
  unreachable

116:                                              ; preds = %109
  %117 = add nsw i32 %42, 1
  br label %125

118:                                              ; preds = %105
  %119 = sext i32 %47 to i64
  %120 = load i64, i64* %18, align 8
  %121 = icmp ugt i64 %120, %119
  br i1 %121, label %123, label %122, !prof !60

122:                                              ; preds = %118
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #11, !srcloc !170
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #11, !srcloc !171
  unreachable

123:                                              ; preds = %118
  %124 = add nsw i32 %47, 1
  br label %125

125:                                              ; preds = %123, %116
  %126 = phi i32** [ %17, %123 ], [ %23, %116 ]
  %127 = phi i64 [ %119, %123 ], [ %112, %116 ]
  %128 = phi i32 [ %106, %123 ], [ %110, %116 ]
  %129 = phi i8 [ %40, %123 ], [ %111, %116 ]
  %130 = phi i32 [ %124, %123 ], [ %47, %116 ]
  %131 = phi i32 [ %42, %123 ], [ %117, %116 ]
  %132 = load i32*, i32** %126, align 8
  %133 = getelementptr inbounds i32, i32* %132, i64 %127
  store i32 %61, i32* %133, align 4
  %134 = icmp eq i32 %45, 0
  %135 = icmp eq i32 %61, 93
  %136 = and i1 %134, %135
  br i1 %136, label %145, label %137

137:                                              ; preds = %125
  %138 = icmp eq i32 %45, 1
  %139 = icmp eq i32 %61, 41
  %140 = and i1 %138, %139
  br i1 %140, label %145, label %141

141:                                              ; preds = %137
  %142 = icmp eq i32 %45, 2
  %143 = icmp eq i32 %61, 34
  %144 = and i1 %142, %143
  br i1 %144, label %145, label %153

145:                                              ; preds = %141, %137, %125
  %146 = phi i32 [ 34, %141 ], [ 41, %137 ], [ 93, %125 ]
  %147 = load i32*, i32** %30, align 8
  %148 = load i32*, i32** %31, align 8
  %149 = icmp eq i32* %147, %148
  br i1 %149, label %308, label %150

150:                                              ; preds = %145
  %151 = getelementptr inbounds i32, i32* %148, i64 -1
  %152 = load i32, i32* %151, align 4
  store i32* %151, i32** %31, align 8
  br label %308

153:                                              ; preds = %141
  switch i32 %61, label %256 [
    i32 91, label %154
    i32 40, label %205
  ]

154:                                              ; preds = %153
  %155 = load i32*, i32** %31, align 8
  %156 = load i32*, i32** %32, align 8
  %157 = icmp eq i32* %155, %156
  %158 = ptrtoint i32* %156 to i64
  br i1 %157, label %162, label %159

159:                                              ; preds = %154
  store i32 %45, i32* %155, align 4
  %160 = getelementptr inbounds i32, i32* %155, i64 1
  %161 = ptrtoint i32* %160 to i64
  store i64 %161, i64* %34, align 8
  br label %308

162:                                              ; preds = %154
  %163 = ptrtoint i32* %155 to i64
  %164 = load i64, i64* %35, align 8
  %165 = sub i64 %163, %164
  %166 = ashr exact i64 %165, 2
  %167 = add nsw i64 %166, 1
  %168 = icmp ugt i64 %167, 4611686018427387903
  br i1 %168, label %169, label %171

169:                                              ; preds = %162
  %170 = bitcast %"class.std::__1::vector.149"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %170) #12
  unreachable

171:                                              ; preds = %162
  %172 = sub i64 %158, %164
  %173 = ashr exact i64 %172, 2
  %174 = icmp ult i64 %173, 2305843009213693951
  br i1 %174, label %175, label %183

175:                                              ; preds = %171
  %176 = ashr exact i64 %172, 1
  %177 = icmp ult i64 %176, %167
  %178 = select i1 %177, i64 %167, i64 %176
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %188, label %180

180:                                              ; preds = %175
  %181 = icmp ugt i64 %178, 4611686018427387903
  br i1 %181, label %182, label %183

182:                                              ; preds = %180
  call void @abort() #12
  unreachable

183:                                              ; preds = %180, %171
  %184 = phi i64 [ %178, %180 ], [ 4611686018427387903, %171 ]
  %185 = shl i64 %184, 2
  %186 = call i8* @_Znwm(i64 %185) #10
  %187 = bitcast i8* %186 to i32*
  br label %188

188:                                              ; preds = %183, %175
  %189 = phi i64 [ %184, %183 ], [ 0, %175 ]
  %190 = phi i8* [ %186, %183 ], [ null, %175 ]
  %191 = phi i32* [ %187, %183 ], [ null, %175 ]
  %192 = getelementptr inbounds i32, i32* %191, i64 %166
  %193 = getelementptr inbounds i32, i32* %191, i64 %189
  %194 = ptrtoint i32* %193 to i64
  store i32 %45, i32* %192, align 4
  %195 = getelementptr inbounds i32, i32* %192, i64 1
  %196 = ptrtoint i32* %195 to i64
  %197 = ptrtoint i32* %191 to i64
  %198 = icmp sgt i64 %165, 0
  br i1 %198, label %199, label %201

199:                                              ; preds = %188
  %200 = inttoptr i64 %164 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %190, i8* align 4 %200, i64 %165, i1 false) #11
  br label %201

201:                                              ; preds = %199, %188
  store i64 %197, i64* %35, align 8
  store i64 %196, i64* %34, align 8
  store i64 %194, i64* %36, align 8
  %202 = icmp eq i64 %164, 0
  br i1 %202, label %308, label %203

203:                                              ; preds = %201
  %204 = inttoptr i64 %164 to i8*
  call void @_ZdlPv(i8* %204) #10
  br label %308

205:                                              ; preds = %153
  %206 = load i32*, i32** %31, align 8
  %207 = load i32*, i32** %32, align 8
  %208 = icmp eq i32* %206, %207
  %209 = ptrtoint i32* %207 to i64
  br i1 %208, label %213, label %210

210:                                              ; preds = %205
  store i32 %45, i32* %206, align 4
  %211 = getelementptr inbounds i32, i32* %206, i64 1
  %212 = ptrtoint i32* %211 to i64
  store i64 %212, i64* %34, align 8
  br label %308

213:                                              ; preds = %205
  %214 = ptrtoint i32* %206 to i64
  %215 = load i64, i64* %35, align 8
  %216 = sub i64 %214, %215
  %217 = ashr exact i64 %216, 2
  %218 = add nsw i64 %217, 1
  %219 = icmp ugt i64 %218, 4611686018427387903
  br i1 %219, label %220, label %222

220:                                              ; preds = %213
  %221 = bitcast %"class.std::__1::vector.149"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %221) #12
  unreachable

222:                                              ; preds = %213
  %223 = sub i64 %209, %215
  %224 = ashr exact i64 %223, 2
  %225 = icmp ult i64 %224, 2305843009213693951
  br i1 %225, label %226, label %234

226:                                              ; preds = %222
  %227 = ashr exact i64 %223, 1
  %228 = icmp ult i64 %227, %218
  %229 = select i1 %228, i64 %218, i64 %227
  %230 = icmp eq i64 %229, 0
  br i1 %230, label %239, label %231

231:                                              ; preds = %226
  %232 = icmp ugt i64 %229, 4611686018427387903
  br i1 %232, label %233, label %234

233:                                              ; preds = %231
  call void @abort() #12
  unreachable

234:                                              ; preds = %231, %222
  %235 = phi i64 [ %229, %231 ], [ 4611686018427387903, %222 ]
  %236 = shl i64 %235, 2
  %237 = call i8* @_Znwm(i64 %236) #10
  %238 = bitcast i8* %237 to i32*
  br label %239

239:                                              ; preds = %234, %226
  %240 = phi i64 [ %235, %234 ], [ 0, %226 ]
  %241 = phi i8* [ %237, %234 ], [ null, %226 ]
  %242 = phi i32* [ %238, %234 ], [ null, %226 ]
  %243 = getelementptr inbounds i32, i32* %242, i64 %217
  %244 = getelementptr inbounds i32, i32* %242, i64 %240
  %245 = ptrtoint i32* %244 to i64
  store i32 %45, i32* %243, align 4
  %246 = getelementptr inbounds i32, i32* %243, i64 1
  %247 = ptrtoint i32* %246 to i64
  %248 = ptrtoint i32* %242 to i64
  %249 = icmp sgt i64 %216, 0
  br i1 %249, label %250, label %252

250:                                              ; preds = %239
  %251 = inttoptr i64 %215 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %241, i8* align 4 %251, i64 %216, i1 false) #11
  br label %252

252:                                              ; preds = %250, %239
  store i64 %248, i64* %35, align 8
  store i64 %247, i64* %34, align 8
  store i64 %245, i64* %36, align 8
  %253 = icmp eq i64 %215, 0
  br i1 %253, label %308, label %254

254:                                              ; preds = %252
  %255 = inttoptr i64 %215 to i8*
  call void @_ZdlPv(i8* %255) #10
  br label %308

256:                                              ; preds = %153
  br i1 %143, label %257, label %308

257:                                              ; preds = %256
  %258 = load i32*, i32** %31, align 8
  %259 = load i32*, i32** %32, align 8
  %260 = icmp eq i32* %258, %259
  %261 = ptrtoint i32* %259 to i64
  br i1 %260, label %265, label %262

262:                                              ; preds = %257
  store i32 %45, i32* %258, align 4
  %263 = getelementptr inbounds i32, i32* %258, i64 1
  %264 = ptrtoint i32* %263 to i64
  store i64 %264, i64* %34, align 8
  br label %308

265:                                              ; preds = %257
  %266 = ptrtoint i32* %258 to i64
  %267 = load i64, i64* %35, align 8
  %268 = sub i64 %266, %267
  %269 = ashr exact i64 %268, 2
  %270 = add nsw i64 %269, 1
  %271 = icmp ugt i64 %270, 4611686018427387903
  br i1 %271, label %272, label %274

272:                                              ; preds = %265
  %273 = bitcast %"class.std::__1::vector.149"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %273) #12
  unreachable

274:                                              ; preds = %265
  %275 = sub i64 %261, %267
  %276 = ashr exact i64 %275, 2
  %277 = icmp ult i64 %276, 2305843009213693951
  br i1 %277, label %278, label %286

278:                                              ; preds = %274
  %279 = ashr exact i64 %275, 1
  %280 = icmp ult i64 %279, %270
  %281 = select i1 %280, i64 %270, i64 %279
  %282 = icmp eq i64 %281, 0
  br i1 %282, label %291, label %283

283:                                              ; preds = %278
  %284 = icmp ugt i64 %281, 4611686018427387903
  br i1 %284, label %285, label %286

285:                                              ; preds = %283
  call void @abort() #12
  unreachable

286:                                              ; preds = %283, %274
  %287 = phi i64 [ %281, %283 ], [ 4611686018427387903, %274 ]
  %288 = shl i64 %287, 2
  %289 = call i8* @_Znwm(i64 %288) #10
  %290 = bitcast i8* %289 to i32*
  br label %291

291:                                              ; preds = %286, %278
  %292 = phi i64 [ %287, %286 ], [ 0, %278 ]
  %293 = phi i8* [ %289, %286 ], [ null, %278 ]
  %294 = phi i32* [ %290, %286 ], [ null, %278 ]
  %295 = getelementptr inbounds i32, i32* %294, i64 %269
  %296 = getelementptr inbounds i32, i32* %294, i64 %292
  %297 = ptrtoint i32* %296 to i64
  store i32 %45, i32* %295, align 4
  %298 = getelementptr inbounds i32, i32* %295, i64 1
  %299 = ptrtoint i32* %298 to i64
  %300 = ptrtoint i32* %294 to i64
  %301 = icmp sgt i64 %268, 0
  br i1 %301, label %302, label %304

302:                                              ; preds = %291
  %303 = inttoptr i64 %267 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %293, i8* align 4 %303, i64 %268, i1 false) #11
  br label %304

304:                                              ; preds = %302, %291
  store i64 %300, i64* %35, align 8
  store i64 %299, i64* %34, align 8
  store i64 %297, i64* %36, align 8
  %305 = icmp eq i64 %267, 0
  br i1 %305, label %308, label %306

306:                                              ; preds = %304
  %307 = inttoptr i64 %267 to i8*
  call void @_ZdlPv(i8* %307) #10
  br label %308

308:                                              ; preds = %145, %306, %304, %262, %254, %252, %210, %203, %201, %159, %256, %150
  %309 = phi i32 [ %146, %150 ], [ %61, %256 ], [ 91, %159 ], [ 91, %201 ], [ 91, %203 ], [ 40, %210 ], [ 40, %252 ], [ 40, %254 ], [ 34, %262 ], [ 34, %304 ], [ 34, %306 ], [ %146, %145 ]
  %310 = phi i32 [ %152, %150 ], [ %45, %256 ], [ 0, %159 ], [ 0, %201 ], [ 0, %203 ], [ 1, %210 ], [ 1, %252 ], [ 1, %254 ], [ 2, %262 ], [ 2, %304 ], [ 2, %306 ], [ -1, %145 ]
  %311 = icmp slt i32 %128, %11
  br i1 %311, label %39, label %318

312:                                              ; preds = %75
  %313 = trunc i64 %56 to i32
  br label %318

314:                                              ; preds = %64
  %315 = trunc i64 %56 to i32
  br label %318

316:                                              ; preds = %93
  %317 = trunc i64 %56 to i32
  br label %318

318:                                              ; preds = %308, %316, %314, %312
  %319 = phi i32 [ %313, %312 ], [ %315, %314 ], [ %317, %316 ], [ %128, %308 ]
  %320 = phi i32 [ %42, %312 ], [ %42, %314 ], [ %42, %316 ], [ %131, %308 ]
  %321 = phi i32 [ %47, %312 ], [ 0, %314 ], [ %47, %316 ], [ %130, %308 ]
  %322 = load i32*, i32** %30, align 8
  %323 = load i32*, i32** %31, align 8
  %324 = icmp eq i32* %322, %323
  %325 = icmp eq i32* %322, null
  br i1 %325, label %329, label %326

326:                                              ; preds = %318
  %327 = ptrtoint i32* %322 to i64
  store i64 %327, i64* %34, align 8
  %328 = bitcast i32* %322 to i8*
  call void @_ZdlPv(i8* %328) #10
  br label %329

329:                                              ; preds = %318, %326
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #11
  br i1 %324, label %330, label %348

330:                                              ; preds = %329
  %331 = sext i32 %321 to i64
  call void @_ZN5fxcrt10WideString13ReleaseBufferEm(%"class.fxcrt::WideString"* %14, i64 %331) #11
  %332 = sext i32 %320 to i64
  call void @_ZN5fxcrt10WideString13ReleaseBufferEm(%"class.fxcrt::WideString"* %15, i64 %332) #11
  call void @_ZN5fxcrt10WideString4TrimEv(%"class.fxcrt::WideString"* %14) #11
  call void @_ZN5fxcrt10WideString4TrimEv(%"class.fxcrt::WideString"* %15) #11
  %333 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %334 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %333, align 8, !noalias !172
  %335 = icmp eq %"class.fxcrt::StringDataTemplate"* %334, null
  %336 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %334, i64 0, i32 3
  %337 = select i1 %335, [1 x i32]* @.str.2, [1 x i32]* %336
  %338 = getelementptr inbounds [1 x i32], [1 x i32]* %337, i64 0, i64 0
  br i1 %335, label %342, label %339

339:                                              ; preds = %330
  %340 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %334, i64 0, i32 1
  %341 = load i64, i64* %340, align 8, !noalias !172
  br label %342

342:                                              ; preds = %330, %339
  %343 = phi i64 [ %341, %339 ], [ 0, %330 ]
  %344 = getelementptr inbounds %"class.fxcrt::StringViewTemplate.97", %"class.fxcrt::StringViewTemplate.97"* %8, i64 0, i32 0, i32 0, i32 0
  store i32* %338, i32** %344, align 8, !alias.scope !172
  %345 = getelementptr inbounds %"class.fxcrt::StringViewTemplate.97", %"class.fxcrt::StringViewTemplate.97"* %8, i64 0, i32 0, i32 1
  store i64 %343, i64* %345, align 8, !alias.scope !172
  %346 = call i32 @_Z16FX_HashCode_GetWN5fxcrt18StringViewTemplateIwEEb(%"class.fxcrt::StringViewTemplate.97"* nonnull %8, i1 zeroext false) #11
  %347 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %3, i64 0, i32 4
  store i32 %346, i32* %347, align 8
  br label %348

348:                                              ; preds = %342, %329, %4
  %349 = phi i32 [ 0, %4 ], [ %319, %342 ], [ -1, %329 ]
  ret i32 %349
}

declare void @_ZN5fxcrt10WideString9GetBufferEm(%"class.pdfium::span.145"* sret, %"class.fxcrt::WideString"*, i64) local_unnamed_addr #2

declare void @_ZN5fxcrt10WideString13ReleaseBufferEm(%"class.fxcrt::WideString"*, i64) local_unnamed_addr #2

declare void @_ZN5fxcrt10WideString4TrimEv(%"class.fxcrt::WideString"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23CFXJSE_ResolveProcessor14ConditionArrayEmN5fxcrt10WideStringEmP22CFXJSE_ResolveNodeData(%class.CFXJSE_ResolveProcessor* nocapture readonly, i64, %"class.fxcrt::WideString"*, i64, %class.CFXJSE_ResolveNodeData* nocapture) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.fxcrt::WideString", align 8
  %7 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %7, align 8
  %9 = icmp eq %"class.fxcrt::StringDataTemplate"* %8, null
  br i1 %9, label %185, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %8, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %14, label %185

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %8, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  br label %17

17:                                               ; preds = %24, %14
  %18 = phi i64 [ %25, %24 ], [ 1, %14 ]
  %19 = icmp ugt i64 %16, %18
  br i1 %19, label %21, label %20, !prof !60

20:                                               ; preds = %17
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #11, !srcloc !58
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #11, !srcloc !59
  unreachable

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %8, i64 0, i32 3, i64 %18
  %23 = load i32, i32* %22, align 4
  switch i32 %23, label %183 [
    i32 32, label %24
    i32 45, label %185
    i32 43, label %185
    i32 42, label %27
  ]

24:                                               ; preds = %21
  %25 = add nuw i64 %18, 1
  %26 = icmp eq i64 %25, %12
  br i1 %26, label %183, label %17

27:                                               ; preds = %21
  %28 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %4, i64 0, i32 6
  %29 = load i16, i16* %28, align 8
  %30 = zext i16 %29 to i32
  %31 = and i32 %30, 1024
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %171, label %33

33:                                               ; preds = %27
  %34 = and i32 %30, 2048
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %115, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %4, i64 0, i32 1, i32 0
  %38 = load %class.CXFA_Object*, %class.CXFA_Object** %37, align 8
  %39 = tail call %class.CXFA_Node* @_Z6ToNodeP11CXFA_Object(%class.CXFA_Object* %38) #11
  %40 = getelementptr inbounds %class.CFXJSE_ResolveProcessor, %class.CFXJSE_ResolveProcessor* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %41 = load %class.CFXJSE_NodeHelper*, %class.CFXJSE_NodeHelper** %40, align 8
  %42 = getelementptr inbounds %class.CFXJSE_NodeHelper, %class.CFXJSE_NodeHelper* %41, i64 0, i32 4
  %43 = bitcast %"class.cppgc::internal::BasicPersistent"* %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = icmp ult i64 %44, 2
  %46 = inttoptr i64 %44 to i8*
  br i1 %45, label %63, label %47

47:                                               ; preds = %36
  %48 = icmp ult %class.CXFA_Node* %39, inttoptr (i64 2 to %class.CXFA_Node*)
  br i1 %48, label %51, label %49

49:                                               ; preds = %47
  %50 = bitcast %"class.cppgc::internal::BasicPersistent"* %42 to %class.CXFA_Node**
  store %class.CXFA_Node* %39, %class.CXFA_Node** %50, align 8
  br label %85

51:                                               ; preds = %47
  %52 = tail call dereferenceable(40) %"class.cppgc::internal::PersistentRegion"* @_ZN5cppgc8internal22StrongPersistentPolicy19GetPersistentRegionEPKv(i8* %46) #11
  %53 = getelementptr inbounds %class.CFXJSE_NodeHelper, %class.CFXJSE_NodeHelper* %41, i64 0, i32 4, i32 0, i32 1
  %54 = load %"class.cppgc::internal::PersistentNode"*, %"class.cppgc::internal::PersistentNode"** %53, align 8
  %55 = getelementptr inbounds %"class.cppgc::internal::PersistentRegion", %"class.cppgc::internal::PersistentRegion"* %52, i64 0, i32 1
  %56 = bitcast %"class.cppgc::internal::PersistentNode"** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"class.cppgc::internal::PersistentNode"* %54 to i64*
  store i64 %57, i64* %58, align 8
  %59 = getelementptr inbounds %"class.cppgc::internal::PersistentNode", %"class.cppgc::internal::PersistentNode"* %54, i64 0, i32 1
  store void (%"class.cppgc::Visitor"*, i8*)* null, void (%"class.cppgc::Visitor"*, i8*)** %59, align 8
  store %"class.cppgc::internal::PersistentNode"* %54, %"class.cppgc::internal::PersistentNode"** %55, align 8
  %60 = getelementptr inbounds %"class.cppgc::internal::PersistentRegion", %"class.cppgc::internal::PersistentRegion"* %52, i64 0, i32 2
  %61 = load i64, i64* %60, align 8
  %62 = add i64 %61, -1
  store i64 %62, i64* %60, align 8
  store %"class.cppgc::internal::PersistentNode"* null, %"class.cppgc::internal::PersistentNode"** %53, align 8
  br label %63

63:                                               ; preds = %51, %36
  %64 = bitcast %"class.cppgc::internal::BasicPersistent"* %42 to %class.CXFA_Node**
  store %class.CXFA_Node* %39, %class.CXFA_Node** %64, align 8
  %65 = icmp ult %class.CXFA_Node* %39, inttoptr (i64 2 to %class.CXFA_Node*)
  br i1 %65, label %85, label %66

66:                                               ; preds = %63
  %67 = bitcast %class.CXFA_Node* %39 to i8*
  %68 = tail call dereferenceable(40) %"class.cppgc::internal::PersistentRegion"* @_ZN5cppgc8internal22StrongPersistentPolicy19GetPersistentRegionEPKv(i8* %67) #11
  %69 = getelementptr inbounds %"class.cppgc::internal::PersistentRegion", %"class.cppgc::internal::PersistentRegion"* %68, i64 0, i32 1
  %70 = load %"class.cppgc::internal::PersistentNode"*, %"class.cppgc::internal::PersistentNode"** %69, align 8
  %71 = icmp eq %"class.cppgc::internal::PersistentNode"* %70, null
  br i1 %71, label %72, label %74

72:                                               ; preds = %66
  tail call void @_ZN5cppgc8internal16PersistentRegion15EnsureNodeSlotsEv(%"class.cppgc::internal::PersistentRegion"* %68) #11
  %73 = load %"class.cppgc::internal::PersistentNode"*, %"class.cppgc::internal::PersistentNode"** %69, align 8
  br label %74

74:                                               ; preds = %72, %66
  %75 = phi %"class.cppgc::internal::PersistentNode"* [ %70, %66 ], [ %73, %72 ]
  %76 = bitcast %"class.cppgc::internal::PersistentNode"* %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = bitcast %"class.cppgc::internal::PersistentNode"** %69 to i64*
  store i64 %77, i64* %78, align 8
  %79 = bitcast %"class.cppgc::internal::PersistentNode"* %75 to %"class.cppgc::internal::BasicPersistent"**
  store %"class.cppgc::internal::BasicPersistent"* %42, %"class.cppgc::internal::BasicPersistent"** %79, align 8
  %80 = getelementptr inbounds %"class.cppgc::internal::PersistentNode", %"class.cppgc::internal::PersistentNode"* %75, i64 0, i32 1
  store void (%"class.cppgc::Visitor"*, i8*)* @_ZN5cppgc8internal15BasicPersistentI9CXFA_NodeNS0_22StrongPersistentPolicyENS0_20IgnoreLocationPolicyENS0_22DisabledCheckingPolicyEE5TraceEPNS_7VisitorEPKv, void (%"class.cppgc::Visitor"*, i8*)** %80, align 8
  %81 = getelementptr inbounds %"class.cppgc::internal::PersistentRegion", %"class.cppgc::internal::PersistentRegion"* %68, i64 0, i32 2
  %82 = load i64, i64* %81, align 8
  %83 = add i64 %82, 1
  store i64 %83, i64* %81, align 8
  %84 = getelementptr inbounds %class.CFXJSE_NodeHelper, %class.CFXJSE_NodeHelper* %41, i64 0, i32 4, i32 0, i32 1
  store %"class.cppgc::internal::PersistentNode"* %75, %"class.cppgc::internal::PersistentNode"** %84, align 8
  br label %85

85:                                               ; preds = %49, %63, %74
  %86 = load %class.CFXJSE_NodeHelper*, %class.CFXJSE_NodeHelper** %40, align 8
  %87 = getelementptr inbounds %class.CFXJSE_NodeHelper, %class.CFXJSE_NodeHelper* %86, i64 0, i32 2
  store i64 1, i64* %87, align 8
  %88 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %4, i64 0, i32 7, i32 2
  %89 = bitcast %"class.std::__1::vector.90"* %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %4, i64 0, i32 7, i32 2, i32 0, i32 1
  %92 = bitcast %"class.cppgc::internal::BasicMember.70"** %91 to i64*
  store i64 %90, i64* %92, align 8
  %93 = load %class.CFXJSE_NodeHelper*, %class.CFXJSE_NodeHelper** %40, align 8
  %94 = getelementptr inbounds %class.CFXJSE_NodeHelper, %class.CFXJSE_NodeHelper* %93, i64 0, i32 3
  store i32 -1, i32* %94, align 8
  %95 = load %class.CFXJSE_NodeHelper*, %class.CFXJSE_NodeHelper** %40, align 8
  %96 = getelementptr inbounds %class.CFXJSE_NodeHelper, %class.CFXJSE_NodeHelper* %95, i64 0, i32 5
  %97 = bitcast %"class.cppgc::internal::BasicPersistent"* %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = icmp ult i64 %98, 2
  br i1 %99, label %113, label %100

100:                                              ; preds = %85
  %101 = inttoptr i64 %98 to i8*
  %102 = tail call dereferenceable(40) %"class.cppgc::internal::PersistentRegion"* @_ZN5cppgc8internal22StrongPersistentPolicy19GetPersistentRegionEPKv(i8* %101) #11
  %103 = getelementptr inbounds %class.CFXJSE_NodeHelper, %class.CFXJSE_NodeHelper* %95, i64 0, i32 5, i32 0, i32 1
  %104 = load %"class.cppgc::internal::PersistentNode"*, %"class.cppgc::internal::PersistentNode"** %103, align 8
  %105 = getelementptr inbounds %"class.cppgc::internal::PersistentRegion", %"class.cppgc::internal::PersistentRegion"* %102, i64 0, i32 1
  %106 = bitcast %"class.cppgc::internal::PersistentNode"** %105 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.cppgc::internal::PersistentNode"* %104 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.cppgc::internal::PersistentNode", %"class.cppgc::internal::PersistentNode"* %104, i64 0, i32 1
  store void (%"class.cppgc::Visitor"*, i8*)* null, void (%"class.cppgc::Visitor"*, i8*)** %109, align 8
  store %"class.cppgc::internal::PersistentNode"* %104, %"class.cppgc::internal::PersistentNode"** %105, align 8
  %110 = getelementptr inbounds %"class.cppgc::internal::PersistentRegion", %"class.cppgc::internal::PersistentRegion"* %102, i64 0, i32 2
  %111 = load i64, i64* %110, align 8
  %112 = add i64 %111, -1
  store i64 %112, i64* %110, align 8
  store %"class.cppgc::internal::PersistentNode"* null, %"class.cppgc::internal::PersistentNode"** %103, align 8
  br label %113

113:                                              ; preds = %85, %100
  %114 = getelementptr inbounds %"class.cppgc::internal::BasicPersistent", %"class.cppgc::internal::BasicPersistent"* %96, i64 0, i32 0, i32 0
  store i8* null, i8** %114, align 8
  br label %296

115:                                              ; preds = %33
  %116 = getelementptr inbounds %class.CFXJSE_ResolveProcessor, %class.CFXJSE_ResolveProcessor* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %117 = load %class.CFXJSE_NodeHelper*, %class.CFXJSE_NodeHelper** %116, align 8
  %118 = getelementptr inbounds %class.CFXJSE_NodeHelper, %class.CFXJSE_NodeHelper* %117, i64 0, i32 3
  %119 = load i32, i32* %118, align 8
  %120 = icmp eq i32 %119, -1
  br i1 %120, label %121, label %296

121:                                              ; preds = %115
  %122 = getelementptr inbounds %class.CFXJSE_ResolveProcessor, %class.CFXJSE_ResolveProcessor* %0, i64 0, i32 0
  %123 = load i32, i32* %122, align 8
  store i32 %123, i32* %118, align 8
  %124 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %4, i64 0, i32 1, i32 0
  %125 = load %class.CXFA_Object*, %class.CXFA_Object** %124, align 8
  %126 = tail call %class.CXFA_Node* @_Z6ToNodeP11CXFA_Object(%class.CXFA_Object* %125) #11
  %127 = load %class.CFXJSE_NodeHelper*, %class.CFXJSE_NodeHelper** %116, align 8
  %128 = getelementptr inbounds %class.CFXJSE_NodeHelper, %class.CFXJSE_NodeHelper* %127, i64 0, i32 5
  %129 = bitcast %"class.cppgc::internal::BasicPersistent"* %128 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = icmp ult i64 %130, 2
  %132 = inttoptr i64 %130 to i8*
  br i1 %131, label %149, label %133

133:                                              ; preds = %121
  %134 = icmp ult %class.CXFA_Node* %126, inttoptr (i64 2 to %class.CXFA_Node*)
  br i1 %134, label %137, label %135

135:                                              ; preds = %133
  %136 = bitcast %"class.cppgc::internal::BasicPersistent"* %128 to %class.CXFA_Node**
  store %class.CXFA_Node* %126, %class.CXFA_Node** %136, align 8
  br label %296

137:                                              ; preds = %133
  %138 = tail call dereferenceable(40) %"class.cppgc::internal::PersistentRegion"* @_ZN5cppgc8internal22StrongPersistentPolicy19GetPersistentRegionEPKv(i8* %132) #11
  %139 = getelementptr inbounds %class.CFXJSE_NodeHelper, %class.CFXJSE_NodeHelper* %127, i64 0, i32 5, i32 0, i32 1
  %140 = load %"class.cppgc::internal::PersistentNode"*, %"class.cppgc::internal::PersistentNode"** %139, align 8
  %141 = getelementptr inbounds %"class.cppgc::internal::PersistentRegion", %"class.cppgc::internal::PersistentRegion"* %138, i64 0, i32 1
  %142 = bitcast %"class.cppgc::internal::PersistentNode"** %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = bitcast %"class.cppgc::internal::PersistentNode"* %140 to i64*
  store i64 %143, i64* %144, align 8
  %145 = getelementptr inbounds %"class.cppgc::internal::PersistentNode", %"class.cppgc::internal::PersistentNode"* %140, i64 0, i32 1
  store void (%"class.cppgc::Visitor"*, i8*)* null, void (%"class.cppgc::Visitor"*, i8*)** %145, align 8
  store %"class.cppgc::internal::PersistentNode"* %140, %"class.cppgc::internal::PersistentNode"** %141, align 8
  %146 = getelementptr inbounds %"class.cppgc::internal::PersistentRegion", %"class.cppgc::internal::PersistentRegion"* %138, i64 0, i32 2
  %147 = load i64, i64* %146, align 8
  %148 = add i64 %147, -1
  store i64 %148, i64* %146, align 8
  store %"class.cppgc::internal::PersistentNode"* null, %"class.cppgc::internal::PersistentNode"** %139, align 8
  br label %149

149:                                              ; preds = %137, %121
  %150 = bitcast %"class.cppgc::internal::BasicPersistent"* %128 to %class.CXFA_Node**
  store %class.CXFA_Node* %126, %class.CXFA_Node** %150, align 8
  %151 = icmp ult %class.CXFA_Node* %126, inttoptr (i64 2 to %class.CXFA_Node*)
  br i1 %151, label %296, label %152

152:                                              ; preds = %149
  %153 = bitcast %class.CXFA_Node* %126 to i8*
  %154 = tail call dereferenceable(40) %"class.cppgc::internal::PersistentRegion"* @_ZN5cppgc8internal22StrongPersistentPolicy19GetPersistentRegionEPKv(i8* %153) #11
  %155 = getelementptr inbounds %"class.cppgc::internal::PersistentRegion", %"class.cppgc::internal::PersistentRegion"* %154, i64 0, i32 1
  %156 = load %"class.cppgc::internal::PersistentNode"*, %"class.cppgc::internal::PersistentNode"** %155, align 8
  %157 = icmp eq %"class.cppgc::internal::PersistentNode"* %156, null
  br i1 %157, label %158, label %160

158:                                              ; preds = %152
  tail call void @_ZN5cppgc8internal16PersistentRegion15EnsureNodeSlotsEv(%"class.cppgc::internal::PersistentRegion"* %154) #11
  %159 = load %"class.cppgc::internal::PersistentNode"*, %"class.cppgc::internal::PersistentNode"** %155, align 8
  br label %160

160:                                              ; preds = %158, %152
  %161 = phi %"class.cppgc::internal::PersistentNode"* [ %156, %152 ], [ %159, %158 ]
  %162 = bitcast %"class.cppgc::internal::PersistentNode"* %161 to i64*
  %163 = load i64, i64* %162, align 8
  %164 = bitcast %"class.cppgc::internal::PersistentNode"** %155 to i64*
  store i64 %163, i64* %164, align 8
  %165 = bitcast %"class.cppgc::internal::PersistentNode"* %161 to %"class.cppgc::internal::BasicPersistent"**
  store %"class.cppgc::internal::BasicPersistent"* %128, %"class.cppgc::internal::BasicPersistent"** %165, align 8
  %166 = getelementptr inbounds %"class.cppgc::internal::PersistentNode", %"class.cppgc::internal::PersistentNode"* %161, i64 0, i32 1
  store void (%"class.cppgc::Visitor"*, i8*)* @_ZN5cppgc8internal15BasicPersistentI9CXFA_NodeNS0_22StrongPersistentPolicyENS0_20IgnoreLocationPolicyENS0_22DisabledCheckingPolicyEE5TraceEPNS_7VisitorEPKv, void (%"class.cppgc::Visitor"*, i8*)** %166, align 8
  %167 = getelementptr inbounds %"class.cppgc::internal::PersistentRegion", %"class.cppgc::internal::PersistentRegion"* %154, i64 0, i32 2
  %168 = load i64, i64* %167, align 8
  %169 = add i64 %168, 1
  store i64 %169, i64* %167, align 8
  %170 = getelementptr inbounds %class.CFXJSE_NodeHelper, %class.CFXJSE_NodeHelper* %127, i64 0, i32 5, i32 0, i32 1
  store %"class.cppgc::internal::PersistentNode"* %161, %"class.cppgc::internal::PersistentNode"** %170, align 8
  br label %296

171:                                              ; preds = %27
  %172 = and i32 %30, 4096
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %296, label %174

174:                                              ; preds = %171
  %175 = getelementptr inbounds %class.CFXJSE_ResolveProcessor, %class.CFXJSE_ResolveProcessor* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %176 = load %class.CFXJSE_NodeHelper*, %class.CFXJSE_NodeHelper** %175, align 8
  %177 = getelementptr inbounds %class.CFXJSE_NodeHelper, %class.CFXJSE_NodeHelper* %176, i64 0, i32 3
  %178 = load i32, i32* %177, align 8
  %179 = icmp eq i32 %178, -1
  br i1 %179, label %180, label %296

180:                                              ; preds = %174
  %181 = getelementptr inbounds %class.CFXJSE_ResolveProcessor, %class.CFXJSE_ResolveProcessor* %0, i64 0, i32 0
  %182 = load i32, i32* %181, align 8
  store i32 %182, i32* %177, align 8
  br label %296

183:                                              ; preds = %21, %24
  %184 = phi i64 [ %12, %24 ], [ %18, %21 ]
  br label %185

185:                                              ; preds = %21, %21, %183, %5, %10
  %186 = phi i64 [ %12, %10 ], [ 0, %5 ], [ %12, %183 ], [ %12, %21 ], [ %12, %21 ]
  %187 = phi i64 [ 1, %10 ], [ 1, %5 ], [ %184, %183 ], [ %18, %21 ], [ %18, %21 ]
  %188 = phi i8 [ 0, %10 ], [ 0, %5 ], [ 0, %183 ], [ 1, %21 ], [ 1, %21 ]
  %189 = icmp ne i64 %3, 1
  %190 = icmp ne i64 %186, 0
  %191 = or i1 %189, %190
  br i1 %191, label %192, label %296

192:                                              ; preds = %185
  %193 = bitcast %"class.fxcrt::WideString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %193) #11
  %194 = xor i64 %187, -1
  %195 = add i64 %186, %194
  call void @_ZNK5fxcrt10WideString6SubstrEmm(%"class.fxcrt::WideString"* nonnull sret %6, %"class.fxcrt::WideString"* %2, i64 %187, i64 %195) #11
  %196 = call i32 @_ZNK5fxcrt10WideString10GetIntegerEv(%"class.fxcrt::WideString"* nonnull %6) #11
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %193) #11
  %197 = icmp eq i8 %188, 0
  %198 = trunc i64 %1 to i32
  %199 = select i1 %197, i32 0, i32 %198
  %200 = add i32 %196, %199
  %201 = icmp slt i32 %200, 0
  br i1 %201, label %205, label %202

202:                                              ; preds = %192
  %203 = sext i32 %200 to i64
  %204 = icmp ult i64 %203, %3
  br i1 %204, label %271, label %205

205:                                              ; preds = %202, %192
  %206 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %4, i64 0, i32 6
  %207 = load i16, i16* %206, align 8
  %208 = and i16 %207, 1024
  %209 = icmp eq i16 %208, 0
  br i1 %209, label %265, label %210

210:                                              ; preds = %205
  %211 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %4, i64 0, i32 1, i32 0
  %212 = load %class.CXFA_Object*, %class.CXFA_Object** %211, align 8
  %213 = call %class.CXFA_Node* @_Z6ToNodeP11CXFA_Object(%class.CXFA_Object* %212) #11
  %214 = getelementptr inbounds %class.CFXJSE_ResolveProcessor, %class.CFXJSE_ResolveProcessor* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %215 = load %class.CFXJSE_NodeHelper*, %class.CFXJSE_NodeHelper** %214, align 8
  %216 = getelementptr inbounds %class.CFXJSE_NodeHelper, %class.CFXJSE_NodeHelper* %215, i64 0, i32 4
  %217 = bitcast %"class.cppgc::internal::BasicPersistent"* %216 to i64*
  %218 = load i64, i64* %217, align 8
  %219 = icmp ult i64 %218, 2
  %220 = inttoptr i64 %218 to i8*
  br i1 %219, label %237, label %221

221:                                              ; preds = %210
  %222 = icmp ult %class.CXFA_Node* %213, inttoptr (i64 2 to %class.CXFA_Node*)
  br i1 %222, label %225, label %223

223:                                              ; preds = %221
  %224 = bitcast %"class.cppgc::internal::BasicPersistent"* %216 to %class.CXFA_Node**
  store %class.CXFA_Node* %213, %class.CXFA_Node** %224, align 8
  br label %259

225:                                              ; preds = %221
  %226 = call dereferenceable(40) %"class.cppgc::internal::PersistentRegion"* @_ZN5cppgc8internal22StrongPersistentPolicy19GetPersistentRegionEPKv(i8* %220) #11
  %227 = getelementptr inbounds %class.CFXJSE_NodeHelper, %class.CFXJSE_NodeHelper* %215, i64 0, i32 4, i32 0, i32 1
  %228 = load %"class.cppgc::internal::PersistentNode"*, %"class.cppgc::internal::PersistentNode"** %227, align 8
  %229 = getelementptr inbounds %"class.cppgc::internal::PersistentRegion", %"class.cppgc::internal::PersistentRegion"* %226, i64 0, i32 1
  %230 = bitcast %"class.cppgc::internal::PersistentNode"** %229 to i64*
  %231 = load i64, i64* %230, align 8
  %232 = bitcast %"class.cppgc::internal::PersistentNode"* %228 to i64*
  store i64 %231, i64* %232, align 8
  %233 = getelementptr inbounds %"class.cppgc::internal::PersistentNode", %"class.cppgc::internal::PersistentNode"* %228, i64 0, i32 1
  store void (%"class.cppgc::Visitor"*, i8*)* null, void (%"class.cppgc::Visitor"*, i8*)** %233, align 8
  store %"class.cppgc::internal::PersistentNode"* %228, %"class.cppgc::internal::PersistentNode"** %229, align 8
  %234 = getelementptr inbounds %"class.cppgc::internal::PersistentRegion", %"class.cppgc::internal::PersistentRegion"* %226, i64 0, i32 2
  %235 = load i64, i64* %234, align 8
  %236 = add i64 %235, -1
  store i64 %236, i64* %234, align 8
  store %"class.cppgc::internal::PersistentNode"* null, %"class.cppgc::internal::PersistentNode"** %227, align 8
  br label %237

237:                                              ; preds = %225, %210
  %238 = bitcast %"class.cppgc::internal::BasicPersistent"* %216 to %class.CXFA_Node**
  store %class.CXFA_Node* %213, %class.CXFA_Node** %238, align 8
  %239 = icmp ult %class.CXFA_Node* %213, inttoptr (i64 2 to %class.CXFA_Node*)
  br i1 %239, label %259, label %240

240:                                              ; preds = %237
  %241 = bitcast %class.CXFA_Node* %213 to i8*
  %242 = call dereferenceable(40) %"class.cppgc::internal::PersistentRegion"* @_ZN5cppgc8internal22StrongPersistentPolicy19GetPersistentRegionEPKv(i8* %241) #11
  %243 = getelementptr inbounds %"class.cppgc::internal::PersistentRegion", %"class.cppgc::internal::PersistentRegion"* %242, i64 0, i32 1
  %244 = load %"class.cppgc::internal::PersistentNode"*, %"class.cppgc::internal::PersistentNode"** %243, align 8
  %245 = icmp eq %"class.cppgc::internal::PersistentNode"* %244, null
  br i1 %245, label %246, label %248

246:                                              ; preds = %240
  call void @_ZN5cppgc8internal16PersistentRegion15EnsureNodeSlotsEv(%"class.cppgc::internal::PersistentRegion"* %242) #11
  %247 = load %"class.cppgc::internal::PersistentNode"*, %"class.cppgc::internal::PersistentNode"** %243, align 8
  br label %248

248:                                              ; preds = %246, %240
  %249 = phi %"class.cppgc::internal::PersistentNode"* [ %244, %240 ], [ %247, %246 ]
  %250 = bitcast %"class.cppgc::internal::PersistentNode"* %249 to i64*
  %251 = load i64, i64* %250, align 8
  %252 = bitcast %"class.cppgc::internal::PersistentNode"** %243 to i64*
  store i64 %251, i64* %252, align 8
  %253 = bitcast %"class.cppgc::internal::PersistentNode"* %249 to %"class.cppgc::internal::BasicPersistent"**
  store %"class.cppgc::internal::BasicPersistent"* %216, %"class.cppgc::internal::BasicPersistent"** %253, align 8
  %254 = getelementptr inbounds %"class.cppgc::internal::PersistentNode", %"class.cppgc::internal::PersistentNode"* %249, i64 0, i32 1
  store void (%"class.cppgc::Visitor"*, i8*)* @_ZN5cppgc8internal15BasicPersistentI9CXFA_NodeNS0_22StrongPersistentPolicyENS0_20IgnoreLocationPolicyENS0_22DisabledCheckingPolicyEE5TraceEPNS_7VisitorEPKv, void (%"class.cppgc::Visitor"*, i8*)** %254, align 8
  %255 = getelementptr inbounds %"class.cppgc::internal::PersistentRegion", %"class.cppgc::internal::PersistentRegion"* %242, i64 0, i32 2
  %256 = load i64, i64* %255, align 8
  %257 = add i64 %256, 1
  store i64 %257, i64* %255, align 8
  %258 = getelementptr inbounds %class.CFXJSE_NodeHelper, %class.CFXJSE_NodeHelper* %215, i64 0, i32 4, i32 0, i32 1
  store %"class.cppgc::internal::PersistentNode"* %249, %"class.cppgc::internal::PersistentNode"** %258, align 8
  br label %259

259:                                              ; preds = %223, %237, %248
  %260 = sext i32 %200 to i64
  %261 = sub i64 1, %3
  %262 = add i64 %261, %260
  %263 = load %class.CFXJSE_NodeHelper*, %class.CFXJSE_NodeHelper** %214, align 8
  %264 = getelementptr inbounds %class.CFXJSE_NodeHelper, %class.CFXJSE_NodeHelper* %263, i64 0, i32 2
  store i64 %262, i64* %264, align 8
  br label %265

265:                                              ; preds = %205, %259
  %266 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %4, i64 0, i32 7, i32 2
  %267 = bitcast %"class.std::__1::vector.90"* %266 to i64*
  %268 = load i64, i64* %267, align 8
  %269 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %4, i64 0, i32 7, i32 2, i32 0, i32 1
  %270 = bitcast %"class.cppgc::internal::BasicMember.70"** %269 to i64*
  store i64 %268, i64* %270, align 8
  br label %296

271:                                              ; preds = %202
  %272 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %4, i64 0, i32 7, i32 2
  %273 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %272, i64 0, i32 0, i32 0
  %274 = load %"class.cppgc::internal::BasicMember.70"*, %"class.cppgc::internal::BasicMember.70"** %273, align 8
  %275 = getelementptr inbounds %"class.cppgc::internal::BasicMember.70", %"class.cppgc::internal::BasicMember.70"* %274, i64 %203
  %276 = call i8* @_Znwm(i64 8) #10
  %277 = getelementptr inbounds i8, i8* %276, i64 8
  %278 = bitcast %"class.cppgc::internal::BasicMember.70"* %275 to i64*
  %279 = load i64, i64* %278, align 8
  %280 = bitcast i8* %276 to i64*
  store i64 %279, i64* %280, align 8
  %281 = ptrtoint i8* %276 to i64
  %282 = ptrtoint i8* %277 to i64
  %283 = icmp eq %"class.cppgc::internal::BasicMember.70"* %274, null
  br i1 %283, label %290, label %284

284:                                              ; preds = %271
  %285 = ptrtoint %"class.cppgc::internal::BasicMember.70"* %274 to i64
  %286 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %4, i64 0, i32 7, i32 2, i32 0, i32 1
  %287 = bitcast %"class.cppgc::internal::BasicMember.70"** %286 to i64*
  store i64 %285, i64* %287, align 8
  %288 = bitcast %"class.cppgc::internal::BasicMember.70"* %274 to i8*
  call void @_ZdlPv(i8* %288) #10
  %289 = bitcast %"class.std::__1::vector.90"* %272 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %289, i8 0, i64 24, i1 false) #11
  br label %290

290:                                              ; preds = %271, %284
  %291 = bitcast %"class.std::__1::vector.90"* %272 to i64*
  store i64 %281, i64* %291, align 8
  %292 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %4, i64 0, i32 7, i32 2, i32 0, i32 1
  %293 = bitcast %"class.cppgc::internal::BasicMember.70"** %292 to i64*
  store i64 %282, i64* %293, align 8
  %294 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %4, i64 0, i32 7, i32 2, i32 0, i32 2, i32 0, i32 0
  %295 = bitcast %"class.cppgc::internal::BasicMember.70"** %294 to i64*
  store i64 %282, i64* %295, align 8
  br label %296

296:                                              ; preds = %160, %149, %135, %265, %290, %185, %115, %113, %174, %180, %171
  ret void
}

declare void @_ZNK5fxcrt10WideString6SubstrEmm(%"class.fxcrt::WideString"* sret, %"class.fxcrt::WideString"*, i64, i64) local_unnamed_addr #2

declare i32 @_ZNK5fxcrt10WideString10GetIntegerEv(%"class.fxcrt::WideString"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK9CXFA_Node10IsPropertyEv(%class.CXFA_Node*) local_unnamed_addr #2

declare i64 @_ZN9CXFA_Node8GetIndexEbb(%class.CXFA_Node*, i1 zeroext, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN23CFXJSE_ResolveProcessor16IndexForDataBindERN5fxcrt10WideStringEi(%class.CFXJSE_ResolveProcessor* nocapture readonly, %"class.fxcrt::WideString"* dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.CFXJSE_ResolveProcessor, %class.CFXJSE_ResolveProcessor* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %class.CFXJSE_NodeHelper*, %class.CFXJSE_NodeHelper** %4, align 8
  %6 = tail call zeroext i1 @_ZN17CFXJSE_NodeHelper22CreateNodeForConditionERKN5fxcrt10WideStringE(%class.CFXJSE_NodeHelper* %5, %"class.fxcrt::WideString"* dereferenceable(8) %1) #11
  br i1 %6, label %7, label %12

7:                                                ; preds = %3
  %8 = load %class.CFXJSE_NodeHelper*, %class.CFXJSE_NodeHelper** %4, align 8
  %9 = getelementptr inbounds %class.CFXJSE_NodeHelper, %class.CFXJSE_NodeHelper* %8, i64 0, i32 0
  %10 = load i16, i16* %9, align 8
  %11 = icmp eq i16 %10, 237
  br i1 %11, label %14, label %12

12:                                               ; preds = %7, %3
  %13 = add nsw i32 %2, -1
  br label %14

14:                                               ; preds = %7, %12
  %15 = phi i32 [ %13, %12 ], [ 0, %7 ]
  ret i32 %15
}

declare zeroext i1 @_ZN17CFXJSE_NodeHelper22CreateNodeForConditionERKN5fxcrt10WideStringE(%class.CFXJSE_NodeHelper*, %"class.fxcrt::WideString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22CFXJSE_ResolveNodeDataC2EP13CFXJSE_Engine(%class.CFXJSE_ResolveNodeData*, %class.CFXJSE_Engine*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %0, i64 0, i32 0, i32 0
  store %class.CFXJSE_Engine* %1, %class.CFXJSE_Engine** %3, align 8
  %4 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %0, i64 0, i32 1, i32 0
  store %class.CXFA_Object* null, %class.CXFA_Object** %4, align 8
  %5 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %0, i64 0, i32 2
  tail call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* %5) #11
  %6 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %0, i64 0, i32 3
  tail call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* %6) #11
  %7 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %0, i64 0, i32 4
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %0, i64 0, i32 5
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %0, i64 0, i32 6
  store i16 1, i16* %9, align 8
  %10 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %0, i64 0, i32 7
  tail call void @_ZN13CFXJSE_Engine13ResolveResultC1Ev(%"class.CFXJSE_Engine::ResolveResult"* %10) #11
  ret void
}

declare void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"*) unnamed_addr #2

declare void @_ZN13CFXJSE_Engine13ResolveResultC1Ev(%"class.CFXJSE_Engine::ResolveResult"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22CFXJSE_ResolveNodeDataD2Ev(%class.CFXJSE_ResolveNodeData*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %0, i64 0, i32 7
  tail call void @_ZN13CFXJSE_Engine13ResolveResultD1Ev(%"class.CFXJSE_Engine::ResolveResult"* %2) #11
  %3 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %0, i64 0, i32 3
  tail call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* %3) #11
  %4 = getelementptr inbounds %class.CFXJSE_ResolveNodeData, %class.CFXJSE_ResolveNodeData* %0, i64 0, i32 2
  tail call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* %4) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN13CFXJSE_Engine13ResolveResultD1Ev(%"class.CFXJSE_Engine::ResolveResult"*) unnamed_addr #3

declare void @_ZNK5fxcrt10WideString5FirstEm(%"class.fxcrt::WideString"* sret, %"class.fxcrt::WideString"*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN13CFXJSE_Engine9RunScriptEN11CXFA_Script4TypeEN5fxcrt18StringViewTemplateIwEEP12CFXJSE_ValueP11CXFA_Object(%class.CFXJSE_Engine*, i32, %"class.fxcrt::StringViewTemplate.97"*, %class.CFXJSE_Value*, %class.CXFA_Object*) local_unnamed_addr #2

declare zeroext i1 @_ZNK12CFXJSE_Value9ToBooleanEPN2v87IsolateE(%class.CFXJSE_Value*, %"class.v8::Isolate"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN12CFXJSE_ValueC1Ev(%class.CFXJSE_Value*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN12CFXJSE_ValueD1Ev(%class.CFXJSE_Value*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_ZN17CFXJSE_NodeHelperC1Ev(%class.CFXJSE_NodeHelper*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN17CFXJSE_NodeHelperD1Ev(%class.CFXJSE_NodeHelper*) unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN5cppgc8internal12WriteBarrier26DijkstraMarkingBarrierSlowEPKv(i8*) local_unnamed_addr #2

declare %class.CXFA_Node* @_ZN10CJX_Object27GetOrCreatePropertyInternalEi11XFA_Element(%class.CJX_Object*, i32, i16 signext) local_unnamed_addr #2

declare { %class.CXFA_Node*, i32 } @_ZNK10CJX_Object19GetPropertyInternalEi11XFA_Element(%class.CJX_Object*, i32, i16 signext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN5cppgc8internal15BasicPersistentI9CXFA_NodeNS2_22StrongPersistentPolicyENS2_20IgnoreLocationPolicyENS2_22DisabledCheckingPolicyEEENS_9allocatorIS8_EEE21__push_back_slow_pathIS8_EEvOT_(%"class.std::__1::vector.47"*, %"class.cppgc::internal::BasicPersistent"* dereferenceable(16)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.47", %"class.std::__1::vector.47"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.cppgc::internal::BasicPersistent"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.47"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 4
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 1152921504606846975
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.47"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.47", %"class.std::__1::vector.47"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.cppgc::internal::BasicPersistent"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 4
  %20 = icmp ult i64 %19, 576460752303423487
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 3
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 1152921504606846975
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #12
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 1152921504606846975, %14 ]
  %31 = shl i64 %30, 4
  %32 = tail call i8* @_Znwm(i64 %31) #10
  %33 = bitcast i8* %32 to %"class.cppgc::internal::BasicPersistent"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.cppgc::internal::BasicPersistent"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.cppgc::internal::BasicPersistent", %"class.cppgc::internal::BasicPersistent"* %36, i64 %9
  %38 = getelementptr inbounds %"class.cppgc::internal::BasicPersistent", %"class.cppgc::internal::BasicPersistent"* %36, i64 %35
  %39 = ptrtoint %"class.cppgc::internal::BasicPersistent"* %38 to i64
  %40 = bitcast %"class.cppgc::internal::BasicPersistent"* %37 to i8*
  %41 = bitcast %"class.cppgc::internal::BasicPersistent"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 16, i1 false) #11
  %42 = bitcast %"class.cppgc::internal::BasicPersistent"* %37 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = icmp ult i64 %43, 2
  br i1 %44, label %49, label %45

45:                                               ; preds = %34
  %46 = getelementptr inbounds %"class.cppgc::internal::BasicPersistent", %"class.cppgc::internal::BasicPersistent"* %36, i64 %9, i32 0, i32 1
  %47 = bitcast %"class.cppgc::internal::PersistentNode"** %46 to %"class.cppgc::internal::BasicPersistent"***
  %48 = load %"class.cppgc::internal::BasicPersistent"**, %"class.cppgc::internal::BasicPersistent"*** %47, align 8
  store %"class.cppgc::internal::BasicPersistent"* %37, %"class.cppgc::internal::BasicPersistent"** %48, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 16, i1 false) #11
  br label %49

49:                                               ; preds = %34, %45
  %50 = getelementptr inbounds %"class.cppgc::internal::BasicPersistent", %"class.cppgc::internal::BasicPersistent"* %37, i64 1
  %51 = ptrtoint %"class.cppgc::internal::BasicPersistent"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector.47", %"class.std::__1::vector.47"* %0, i64 0, i32 0, i32 0
  %53 = load %"class.cppgc::internal::BasicPersistent"*, %"class.cppgc::internal::BasicPersistent"** %52, align 8
  %54 = ptrtoint %"class.cppgc::internal::BasicPersistent"* %53 to i64
  %55 = load %"class.cppgc::internal::BasicPersistent"*, %"class.cppgc::internal::BasicPersistent"** %3, align 8
  %56 = icmp eq %"class.cppgc::internal::BasicPersistent"* %55, %53
  br i1 %56, label %106, label %57

57:                                               ; preds = %49
  %58 = getelementptr %"class.cppgc::internal::BasicPersistent", %"class.cppgc::internal::BasicPersistent"* %55, i64 -1, i32 0, i32 0
  %59 = ptrtoint i8** %58 to i64
  %60 = sub i64 %59, %54
  %61 = and i64 %60, 16
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %63, label %75

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.cppgc::internal::BasicPersistent", %"class.cppgc::internal::BasicPersistent"* %37, i64 -1
  %65 = getelementptr inbounds %"class.cppgc::internal::BasicPersistent", %"class.cppgc::internal::BasicPersistent"* %55, i64 -1
  %66 = bitcast %"class.cppgc::internal::BasicPersistent"* %64 to i8*
  %67 = bitcast %"class.cppgc::internal::BasicPersistent"* %65 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* align 8 %67, i64 16, i1 false) #11
  %68 = bitcast %"class.cppgc::internal::BasicPersistent"* %64 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = icmp ult i64 %69, 2
  br i1 %70, label %75, label %71

71:                                               ; preds = %63
  %72 = getelementptr inbounds %"class.cppgc::internal::BasicPersistent", %"class.cppgc::internal::BasicPersistent"* %37, i64 -1, i32 0, i32 1
  %73 = bitcast %"class.cppgc::internal::PersistentNode"** %72 to %"class.cppgc::internal::BasicPersistent"***
  %74 = load %"class.cppgc::internal::BasicPersistent"**, %"class.cppgc::internal::BasicPersistent"*** %73, align 8
  store %"class.cppgc::internal::BasicPersistent"* %64, %"class.cppgc::internal::BasicPersistent"** %74, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 16, i1 false) #11
  br label %75

75:                                               ; preds = %63, %71, %57
  %76 = phi %"class.cppgc::internal::BasicPersistent"* [ undef, %57 ], [ %64, %71 ], [ %64, %63 ]
  %77 = phi %"class.cppgc::internal::BasicPersistent"* [ %37, %57 ], [ %64, %71 ], [ %64, %63 ]
  %78 = phi %"class.cppgc::internal::BasicPersistent"* [ %55, %57 ], [ %65, %71 ], [ %65, %63 ]
  %79 = icmp ult i64 %60, 16
  br i1 %79, label %102, label %80

80:                                               ; preds = %75, %144
  %81 = phi %"class.cppgc::internal::BasicPersistent"* [ %95, %144 ], [ %77, %75 ]
  %82 = phi %"class.cppgc::internal::BasicPersistent"* [ %96, %144 ], [ %78, %75 ]
  %83 = getelementptr inbounds %"class.cppgc::internal::BasicPersistent", %"class.cppgc::internal::BasicPersistent"* %81, i64 -1
  %84 = getelementptr inbounds %"class.cppgc::internal::BasicPersistent", %"class.cppgc::internal::BasicPersistent"* %82, i64 -1
  %85 = bitcast %"class.cppgc::internal::BasicPersistent"* %83 to i8*
  %86 = bitcast %"class.cppgc::internal::BasicPersistent"* %84 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %86, i64 16, i1 false) #11
  %87 = bitcast %"class.cppgc::internal::BasicPersistent"* %83 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = icmp ult i64 %88, 2
  br i1 %89, label %94, label %90

90:                                               ; preds = %80
  %91 = getelementptr inbounds %"class.cppgc::internal::BasicPersistent", %"class.cppgc::internal::BasicPersistent"* %81, i64 -1, i32 0, i32 1
  %92 = bitcast %"class.cppgc::internal::PersistentNode"** %91 to %"class.cppgc::internal::BasicPersistent"***
  %93 = load %"class.cppgc::internal::BasicPersistent"**, %"class.cppgc::internal::BasicPersistent"*** %92, align 8
  store %"class.cppgc::internal::BasicPersistent"* %83, %"class.cppgc::internal::BasicPersistent"** %93, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %86, i8 0, i64 16, i1 false) #11
  br label %94

94:                                               ; preds = %90, %80
  %95 = getelementptr inbounds %"class.cppgc::internal::BasicPersistent", %"class.cppgc::internal::BasicPersistent"* %81, i64 -2
  %96 = getelementptr inbounds %"class.cppgc::internal::BasicPersistent", %"class.cppgc::internal::BasicPersistent"* %82, i64 -2
  %97 = bitcast %"class.cppgc::internal::BasicPersistent"* %95 to i8*
  %98 = bitcast %"class.cppgc::internal::BasicPersistent"* %96 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %97, i8* align 8 %98, i64 16, i1 false) #11
  %99 = bitcast %"class.cppgc::internal::BasicPersistent"* %95 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = icmp ult i64 %100, 2
  br i1 %101, label %144, label %140

102:                                              ; preds = %144, %75
  %103 = phi %"class.cppgc::internal::BasicPersistent"* [ %76, %75 ], [ %95, %144 ]
  %104 = load i64, i64* %6, align 8
  %105 = load %"class.cppgc::internal::BasicPersistent"*, %"class.cppgc::internal::BasicPersistent"** %3, align 8
  br label %106

106:                                              ; preds = %49, %102
  %107 = phi %"class.cppgc::internal::BasicPersistent"* [ %105, %102 ], [ %53, %49 ]
  %108 = phi %"class.cppgc::internal::BasicPersistent"* [ %103, %102 ], [ %37, %49 ]
  %109 = phi i64 [ %104, %102 ], [ %54, %49 ]
  %110 = ptrtoint %"class.cppgc::internal::BasicPersistent"* %108 to i64
  store i64 %110, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %111 = inttoptr i64 %109 to %"class.cppgc::internal::BasicPersistent"*
  %112 = icmp eq %"class.cppgc::internal::BasicPersistent"* %107, %111
  br i1 %112, label %135, label %113

113:                                              ; preds = %106, %132
  %114 = phi %"class.cppgc::internal::BasicPersistent"* [ %115, %132 ], [ %107, %106 ]
  %115 = getelementptr inbounds %"class.cppgc::internal::BasicPersistent", %"class.cppgc::internal::BasicPersistent"* %114, i64 -1
  %116 = bitcast %"class.cppgc::internal::BasicPersistent"* %115 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = icmp ult i64 %117, 2
  br i1 %118, label %132, label %119

119:                                              ; preds = %113
  %120 = inttoptr i64 %117 to i8*
  %121 = tail call dereferenceable(40) %"class.cppgc::internal::PersistentRegion"* @_ZN5cppgc8internal22StrongPersistentPolicy19GetPersistentRegionEPKv(i8* %120) #11
  %122 = getelementptr inbounds %"class.cppgc::internal::BasicPersistent", %"class.cppgc::internal::BasicPersistent"* %114, i64 -1, i32 0, i32 1
  %123 = load %"class.cppgc::internal::PersistentNode"*, %"class.cppgc::internal::PersistentNode"** %122, align 8
  %124 = getelementptr inbounds %"class.cppgc::internal::PersistentRegion", %"class.cppgc::internal::PersistentRegion"* %121, i64 0, i32 1
  %125 = bitcast %"class.cppgc::internal::PersistentNode"** %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast %"class.cppgc::internal::PersistentNode"* %123 to i64*
  store i64 %126, i64* %127, align 8
  %128 = getelementptr inbounds %"class.cppgc::internal::PersistentNode", %"class.cppgc::internal::PersistentNode"* %123, i64 0, i32 1
  store void (%"class.cppgc::Visitor"*, i8*)* null, void (%"class.cppgc::Visitor"*, i8*)** %128, align 8
  store %"class.cppgc::internal::PersistentNode"* %123, %"class.cppgc::internal::PersistentNode"** %124, align 8
  %129 = getelementptr inbounds %"class.cppgc::internal::PersistentRegion", %"class.cppgc::internal::PersistentRegion"* %121, i64 0, i32 2
  %130 = load i64, i64* %129, align 8
  %131 = add i64 %130, -1
  store i64 %131, i64* %129, align 8
  store %"class.cppgc::internal::PersistentNode"* null, %"class.cppgc::internal::PersistentNode"** %122, align 8
  br label %132

132:                                              ; preds = %119, %113
  %133 = getelementptr inbounds %"class.cppgc::internal::BasicPersistent", %"class.cppgc::internal::BasicPersistent"* %115, i64 0, i32 0, i32 0
  store i8* null, i8** %133, align 8
  %134 = icmp eq %"class.cppgc::internal::BasicPersistent"* %115, %111
  br i1 %134, label %135, label %113

135:                                              ; preds = %132, %106
  %136 = icmp eq i64 %109, 0
  br i1 %136, label %139, label %137

137:                                              ; preds = %135
  %138 = inttoptr i64 %109 to i8*
  tail call void @_ZdlPv(i8* %138) #10
  br label %139

139:                                              ; preds = %135, %137
  ret void

140:                                              ; preds = %94
  %141 = getelementptr inbounds %"class.cppgc::internal::BasicPersistent", %"class.cppgc::internal::BasicPersistent"* %81, i64 -2, i32 0, i32 1
  %142 = bitcast %"class.cppgc::internal::PersistentNode"** %141 to %"class.cppgc::internal::BasicPersistent"***
  %143 = load %"class.cppgc::internal::BasicPersistent"**, %"class.cppgc::internal::BasicPersistent"*** %142, align 8
  store %"class.cppgc::internal::BasicPersistent"* %95, %"class.cppgc::internal::BasicPersistent"** %143, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %98, i8 0, i64 16, i1 false) #11
  br label %144

144:                                              ; preds = %140, %94
  %145 = icmp eq %"class.cppgc::internal::BasicPersistent"* %96, %53
  br i1 %145, label %102, label %80
}

declare dereferenceable(40) %"class.cppgc::internal::PersistentRegion"* @_ZN5cppgc8internal22StrongPersistentPolicy19GetPersistentRegionEPKv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc8internal15BasicPersistentI9CXFA_NodeNS0_22StrongPersistentPolicyENS0_20IgnoreLocationPolicyENS0_22DisabledCheckingPolicyEE5TraceEPNS_7VisitorEPKv(%"class.cppgc::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.cppgc::SourceLocation", align 8
  %4 = bitcast %"class.cppgc::SourceLocation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 24, i1 false) #11, !alias.scope !175
  %5 = bitcast i8* %1 to %class.CXFA_Node**
  %6 = load %class.CXFA_Node*, %class.CXFA_Node** %5, align 8
  %7 = icmp eq %class.CXFA_Node* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %class.CXFA_Node* %6 to i8*
  %10 = bitcast %"class.cppgc::Visitor"* %0 to void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, %"class.cppgc::SourceLocation"*)***
  %11 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, %"class.cppgc::SourceLocation"*)**, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, %"class.cppgc::SourceLocation"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, %"class.cppgc::SourceLocation"*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, %"class.cppgc::SourceLocation"*)** %11, i64 6
  %13 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, %"class.cppgc::SourceLocation"*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, %"class.cppgc::SourceLocation"*)** %12, align 8
  call void %13(%"class.cppgc::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.cppgc::Visitor"*, i8*)* nonnull @_ZN5cppgc8internal14TraceTraitBaseI9CXFA_NodeE5TraceEPNS_7VisitorEPKv, %"class.cppgc::SourceLocation"* nonnull dereferenceable(24) %3) #11
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #11
  ret void
}

declare void @_ZN5cppgc8internal16PersistentRegion15EnsureNodeSlotsEv(%"class.cppgc::internal::PersistentRegion"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc8internal14TraceTraitBaseI9CXFA_NodeE5TraceEPNS_7VisitorEPKv(%"class.cppgc::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %class.CXFA_Node*
  %4 = bitcast i8* %1 to void (%class.CXFA_Node*, %"class.cppgc::Visitor"*)***
  %5 = load void (%class.CXFA_Node*, %"class.cppgc::Visitor"*)**, void (%class.CXFA_Node*, %"class.cppgc::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.CXFA_Node*, %"class.cppgc::Visitor"*)*, void (%class.CXFA_Node*, %"class.cppgc::Visitor"*)** %5, i64 2
  %7 = load void (%class.CXFA_Node*, %"class.cppgc::Visitor"*)*, void (%class.CXFA_Node*, %"class.cppgc::Visitor"*)** %6, align 8
  tail call void %7(%class.CXFA_Node* %3, %"class.cppgc::Visitor"* %0) #11
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!4 = distinct !{!4, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.unroll.disable"}
!7 = distinct !{!7, !6}
!8 = distinct !{!8, !6}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!11 = distinct !{!11, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!12 = distinct !{!12, !6}
!13 = !{i8 0, i8 2}
!14 = distinct !{!14, !6}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!17 = distinct !{!17, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNK5fxcrt18StringViewTemplateIwE4LastEm: argument 0"}
!20 = distinct !{!20, !"_ZNK5fxcrt18StringViewTemplateIwE4LastEm"}
!21 = !{!22, !19}
!22 = distinct !{!22, !23, !"_ZNK5fxcrt18StringViewTemplateIwE6SubstrEmm: argument 0"}
!23 = distinct !{!23, !"_ZNK5fxcrt18StringViewTemplateIwE6SubstrEmm"}
!24 = distinct !{!24, !6}
!25 = !{!26}
!26 = distinct !{!26, !27}
!27 = distinct !{!27, !"LVerDomain"}
!28 = !{!29}
!29 = distinct !{!29, !27}
!30 = distinct !{!30, !31}
!31 = !{!"llvm.loop.isvectorized", i32 1}
!32 = distinct !{!32, !6}
!33 = distinct !{!33, !6}
!34 = distinct !{!34, !31}
!35 = distinct !{!35, !6}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!38 = distinct !{!38, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZNK5fxcrt18StringViewTemplateIwE4LastEm: argument 0"}
!41 = distinct !{!41, !"_ZNK5fxcrt18StringViewTemplateIwE4LastEm"}
!42 = !{!43, !40}
!43 = distinct !{!43, !44, !"_ZNK5fxcrt18StringViewTemplateIwE6SubstrEmm: argument 0"}
!44 = distinct !{!44, !"_ZNK5fxcrt18StringViewTemplateIwE6SubstrEmm"}
!45 = distinct !{!45, !6}
!46 = distinct !{!46, !6}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!49 = distinct !{!49, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!52 = distinct !{!52, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!55 = distinct !{!55, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!56 = distinct !{!56, !6}
!57 = !{!"branch_weights", i32 1, i32 2000}
!58 = !{i32 -2143808214}
!59 = !{i32 -2143808193}
!60 = !{!"branch_weights", i32 2000, i32 1}
!61 = !{!62}
!62 = distinct !{!62, !63, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!63 = distinct !{!63, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!64 = !{!65}
!65 = distinct !{!65, !66, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!66 = distinct !{!66, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!67 = !{!68}
!68 = distinct !{!68, !69, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!69 = distinct !{!69, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!70 = distinct !{!70, !6}
!71 = distinct !{!71, !6}
!72 = distinct !{!72, !6}
!73 = !{!74}
!74 = distinct !{!74, !75}
!75 = distinct !{!75, !"LVerDomain"}
!76 = !{!77}
!77 = distinct !{!77, !75}
!78 = distinct !{!78, !31}
!79 = distinct !{!79, !6}
!80 = distinct !{!80, !6}
!81 = distinct !{!81, !31}
!82 = !{!83}
!83 = distinct !{!83, !84, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!84 = distinct !{!84, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!85 = distinct !{!85, !6}
!86 = distinct !{!86, !6}
!87 = !{!88}
!88 = distinct !{!88, !89, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!89 = distinct !{!89, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!90 = distinct !{!90, !6}
!91 = distinct !{!91, !6}
!92 = distinct !{!92, !6}
!93 = distinct !{!93, !6}
!94 = distinct !{!94, !6}
!95 = distinct !{!95, !6}
!96 = distinct !{!96, !6}
!97 = !{!98}
!98 = distinct !{!98, !99}
!99 = distinct !{!99, !"LVerDomain"}
!100 = !{!101}
!101 = distinct !{!101, !99}
!102 = distinct !{!102, !31}
!103 = distinct !{!103, !6}
!104 = distinct !{!104, !6}
!105 = distinct !{!105, !31}
!106 = !{!107}
!107 = distinct !{!107, !108}
!108 = distinct !{!108, !"LVerDomain"}
!109 = !{!110}
!110 = distinct !{!110, !108}
!111 = distinct !{!111, !31}
!112 = distinct !{!112, !6}
!113 = distinct !{!113, !6}
!114 = distinct !{!114, !31}
!115 = !{!116}
!116 = distinct !{!116, !117}
!117 = distinct !{!117, !"LVerDomain"}
!118 = !{!119}
!119 = distinct !{!119, !117}
!120 = distinct !{!120, !31}
!121 = distinct !{!121, !6}
!122 = distinct !{!122, !31}
!123 = !{!124}
!124 = distinct !{!124, !125}
!125 = distinct !{!125, !"LVerDomain"}
!126 = !{!127}
!127 = distinct !{!127, !125}
!128 = distinct !{!128, !31}
!129 = distinct !{!129, !6}
!130 = distinct !{!130, !6}
!131 = distinct !{!131, !31}
!132 = !{!133}
!133 = distinct !{!133, !134}
!134 = distinct !{!134, !"LVerDomain"}
!135 = !{!136}
!136 = distinct !{!136, !134}
!137 = distinct !{!137, !31}
!138 = distinct !{!138, !6}
!139 = distinct !{!139, !6}
!140 = distinct !{!140, !31}
!141 = !{!142}
!142 = distinct !{!142, !143}
!143 = distinct !{!143, !"LVerDomain"}
!144 = !{!145}
!145 = distinct !{!145, !143}
!146 = distinct !{!146, !31}
!147 = distinct !{!147, !6}
!148 = distinct !{!148, !6}
!149 = distinct !{!149, !31}
!150 = distinct !{!150, !6}
!151 = distinct !{!151, !6}
!152 = distinct !{!152, !6}
!153 = distinct !{!153, !6}
!154 = !{!155}
!155 = distinct !{!155, !156}
!156 = distinct !{!156, !"LVerDomain"}
!157 = !{!158}
!158 = distinct !{!158, !156}
!159 = distinct !{!159, !31}
!160 = distinct !{!160, !6}
!161 = distinct !{!161, !6}
!162 = distinct !{!162, !31}
!163 = distinct !{!163, !6}
!164 = distinct !{!164, !6}
!165 = distinct !{!165, !6}
!166 = distinct !{!166, !6}
!167 = !{!168}
!168 = distinct !{!168, !169, !"_ZNK5fxcrt18StringViewTemplateIwE4spanEv: argument 0"}
!169 = distinct !{!169, !"_ZNK5fxcrt18StringViewTemplateIwE4spanEv"}
!170 = !{i32 -2143821701}
!171 = !{i32 -2143821680}
!172 = !{!173}
!173 = distinct !{!173, !174, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!174 = distinct !{!174, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!175 = !{!176}
!176 = distinct !{!176, !177, !"_ZNK5cppgc8internal20IgnoreLocationPolicy8LocationEv: argument 0"}
!177 = distinct !{!177, !"_ZNK5cppgc8internal20IgnoreLocationPolicy8LocationEv"}
