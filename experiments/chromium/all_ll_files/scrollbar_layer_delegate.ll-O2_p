; ModuleID = '../../third_party/blink/renderer/core/scroll/scrollbar_layer_delegate.cc'
source_filename = "../../third_party/blink/renderer/core/scroll/scrollbar_layer_delegate.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%class.scoped_refptr.202 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.209" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted.203" }
%"class.base::RefCounted.203" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.204", i32, [4 x i8] }>
%"class.WTF::Vector.204" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.209" = type { %"class.WTF::VectorBuffer.210" }
%"class.WTF::VectorBuffer.210" = type { %"class.WTF::VectorBufferBase.211" }
%"class.WTF::VectorBufferBase.211" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.215", %"class.std::__1::unique_ptr.264", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"class.blink::Color" = type { i32 }
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.212, %class.scoped_refptr.213, %class.scoped_refptr.214 }
%class.scoped_refptr.212 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.228", i8, i8, %class.scoped_refptr.212, i32, i32 }
%"class.WTF::RefCounted.228" = type { %"class.base::RefCounted.229" }
%"class.base::RefCounted.229" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.213 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.464" }
%"class.blink::PaintPropertyNode.464" = type { %"class.WTF::RefCounted.465", i8, i8, %class.scoped_refptr.213, i32, i32 }
%"class.WTF::RefCounted.465" = type { %"class.base::RefCounted.466" }
%"class.base::RefCounted.466" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.214 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.461" }
%"class.blink::PaintPropertyNode.461" = type { %"class.WTF::RefCounted.462", i8, i8, %class.scoped_refptr.214, i32, i32 }
%"class.WTF::RefCounted.462" = type { %"class.base::RefCounted.463" }
%"class.base::RefCounted.463" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.218", %"class.WTF::Vector.223", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.218" = type { %"class.WTF::VectorBuffer.219" }
%"class.WTF::VectorBuffer.219" = type { %"class.WTF::VectorBufferBase.220" }
%"class.WTF::VectorBufferBase.220" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.223" = type { %"class.WTF::VectorBuffer.224" }
%"class.WTF::VectorBuffer.224" = type { %"class.WTF::VectorBufferBase.225" }
%"class.WTF::VectorBufferBase.225" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.243" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.236, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.237", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.230" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.236 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.446", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.446" = type { %"class.WTF::RefCounted.447", i8, i8, %class.scoped_refptr.236, i32, i32 }
%"class.WTF::RefCounted.447" = type { %"class.base::RefCounted.448" }
%"class.base::RefCounted.448" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.449" }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.449" = type { %"class.absl::optional_internal::optional_data.450" }
%"class.absl::optional_internal::optional_data.450" = type { %"class.absl::optional_internal::optional_data_base.451" }
%"class.absl::optional_internal::optional_data_base.451" = type { %"class.absl::optional_internal::optional_data_dtor_base.452" }
%"class.absl::optional_internal::optional_data_dtor_base.452" = type { i8, %union.anon.453 }
%union.anon.453 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.454", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.454" = type { %"class.std::__1::__vector_base.455" }
%"class.std::__1::__vector_base.455" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.456" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.456" = type { %"struct.std::__1::__compressed_pair_elem.457" }
%"struct.std::__1::__compressed_pair_elem.457" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.243" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.246", %"class.std::__1::unique_ptr.252", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.246" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.252" = type { %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.264" = type { %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.266" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.267", %"class.absl::optional.267" }
%"class.absl::optional.267" = type { %"class.absl::optional_internal::optional_data.268" }
%"class.absl::optional_internal::optional_data.268" = type { %"class.absl::optional_internal::optional_data_base.269" }
%"class.absl::optional_internal::optional_data_base.269" = type { %"class.absl::optional_internal::optional_data_dtor_base.270" }
%"class.absl::optional_internal::optional_data_dtor_base.270" = type { i8, [3 x i8], %union.anon.271 }
%union.anon.271 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%union.anon.281 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.284", %"class.WTF::Vector.289" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286", [128 x i8] }
%"class.WTF::VectorBufferBase.286" = type { i32*, i32, i32 }
%"class.WTF::Vector.289" = type { %"class.WTF::VectorBuffer.290" }
%"class.WTF::VectorBuffer.290" = type { %"class.WTF::VectorBufferBase.291", [128 x i8] }
%"class.WTF::VectorBufferBase.291" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.294" = type { %"class.WTF::VectorBuffer.295" }
%"class.WTF::VectorBuffer.295" = type { %"class.WTF::VectorBufferBase.296" }
%"class.WTF::VectorBufferBase.296" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.WTF::String" = type { %class.scoped_refptr.301 }
%class.scoped_refptr.301 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.302" }
%"struct.std::__1::atomic.302" = type { %"struct.std::__1::__atomic_base.303" }
%"struct.std::__1::__atomic_base.303" = type { %"struct.std::__1::__atomic_base.304" }
%"struct.std::__1::__atomic_base.304" = type { %"struct.std::__1::__cxx_atomic_impl.305" }
%"struct.std::__1::__cxx_atomic_impl.305" = type { %"struct.std::__1::__cxx_atomic_base_impl.306" }
%"struct.std::__1::__cxx_atomic_base_impl.306" = type { i32 }
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.307", %"class.WTF::Vector.312" }
%"class.WTF::HashMap.307" = type { %"class.WTF::HashTable.308" }
%"class.WTF::HashTable.308" = type <{ %"struct.WTF::KeyValuePair.311"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.311" = type opaque
%"class.WTF::Vector.312" = type { %"class.WTF::VectorBuffer.313" }
%"class.WTF::VectorBuffer.313" = type { %"class.WTF::VectorBufferBase.314" }
%"class.WTF::VectorBufferBase.314" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.202, %class.scoped_refptr.202, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.294", i32, i32, i32, [4 x i8], %"class.WTF::HashMap", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.209"*, %"class.absl::optional.277", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.277" = type { %"class.absl::optional_internal::optional_data.278" }
%"class.absl::optional_internal::optional_data.278" = type { %"class.absl::optional_internal::optional_data_base.279" }
%"class.absl::optional_internal::optional_data_base.279" = type { %"class.absl::optional_internal::optional_data_dtor_base.280" }
%"class.absl::optional_internal::optional_data_dtor_base.280" = type { i8, %union.anon.281 }
%"class.WTF::Vector.319" = type { %"class.WTF::VectorBuffer.320" }
%"class.WTF::VectorBuffer.320" = type { %"class.WTF::VectorBufferBase.321" }
%"class.WTF::VectorBufferBase.321" = type { %"class.std::__1::unique_ptr.322"*, i32, i32 }
%"class.std::__1::unique_ptr.322" = type { %"class.std::__1::__compressed_pair.323" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"class.blink::GraphicsContextState"* }
%"class.blink::GraphicsContextState" = type <{ %"class.cc::PaintFlags", %"class.cc::PaintFlags", %"class.blink::StrokeData", i32, i32, i16, i8, [5 x i8] }>
%"class.cc::PaintFlags" = type <{ %class.sk_sp, %class.sk_sp.325, %class.sk_sp.369, %class.sk_sp.370, %class.sk_sp.371, %class.sk_sp.372, i32, float, float, i32, %union.anon.379, [4 x i8] }>
%class.sk_sp = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.325 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional.326", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.333, i32, %"class.absl::optional.349", %"class.std::__1::vector.354", %"class.std::__1::vector.361", %class.sk_sp.368, %class.sk_sp.331, i32, [4 x i8] }>
%"class.absl::optional.326" = type { %"class.absl::optional_internal::optional_data.327" }
%"class.absl::optional_internal::optional_data.327" = type { %"class.absl::optional_internal::optional_data_base.328" }
%"class.absl::optional_internal::optional_data_base.328" = type { %"class.absl::optional_internal::optional_data_dtor_base.329" }
%"class.absl::optional_internal::optional_data_dtor_base.329" = type { i8, %union.anon.330 }
%union.anon.330 = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%"class.cc::PaintImage" = type { %class.sk_sp.331, %class.sk_sp.333, %"class.gfx::Rect", i32, %class.sk_sp.338, %class.sk_sp.346, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.331, %class.scoped_refptr.347 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%class.sk_sp.338 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector.339" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.332, i32, i32 }
%class.sk_sp.332 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.13" }
%"struct.std::__1::atomic.13" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__cxx_atomic_impl.16" }
%"struct.std::__1::__cxx_atomic_impl.16" = type { %"struct.std::__1::__cxx_atomic_base_impl.17" }
%"struct.std::__1::__cxx_atomic_base_impl.17" = type { i8 }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::vector.339" = type { %"class.std::__1::__vector_base.340" }
%"class.std::__1::__vector_base.340" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.341" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.342" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.346 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type { %class.SkRefCnt.base, [4 x i8] }
%class.scoped_refptr.347 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.348", [4 x i8] }>
%"class.base::RefCountedThreadSafe.348" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%class.sk_sp.333 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.334", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.334" = type { %"class.std::__1::__compressed_pair.335" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.336" = type { i8* }
%"class.absl::optional.349" = type { %"class.absl::optional_internal::optional_data.350" }
%"class.absl::optional_internal::optional_data.350" = type { %"class.absl::optional_internal::optional_data_base.351" }
%"class.absl::optional_internal::optional_data_base.351" = type { %"class.absl::optional_internal::optional_data_dtor_base.352" }
%"class.absl::optional_internal::optional_data_dtor_base.352" = type { i8, %union.anon.353 }
%union.anon.353 = type { %"class.gfx::SizeF" }
%"class.std::__1::vector.354" = type { %"class.std::__1::__vector_base.355" }
%"class.std::__1::__vector_base.355" = type { i32*, i32*, %"class.std::__1::__compressed_pair.356" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.357" }
%"struct.std::__1::__compressed_pair_elem.357" = type { i32* }
%"class.std::__1::vector.361" = type { %"class.std::__1::__vector_base.362" }
%"class.std::__1::__vector_base.362" = type { float*, float*, %"class.std::__1::__compressed_pair.363" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.364" }
%"struct.std::__1::__compressed_pair_elem.364" = type { float* }
%class.sk_sp.368 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.193", [7 x i8] }>
%"struct.std::__1::atomic.193" = type { %"struct.std::__1::__atomic_base.194" }
%"struct.std::__1::__atomic_base.194" = type { %"struct.std::__1::__cxx_atomic_impl.195" }
%"struct.std::__1::__cxx_atomic_impl.195" = type { %"struct.std::__1::__cxx_atomic_base_impl.196" }
%"struct.std::__1::__cxx_atomic_base_impl.196" = type { i8 }
%class.sk_sp.331 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.sk_sp.369 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.370 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.371 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.372 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.373, i32, %"class.absl::optional.374", i8, i32 }
%class.sk_sp.373 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%"class.absl::optional.374" = type { %"class.absl::optional_internal::optional_data.375" }
%"class.absl::optional_internal::optional_data.375" = type { %"class.absl::optional_internal::optional_data_base.376" }
%"class.absl::optional_internal::optional_data_base.376" = type { %"class.absl::optional_internal::optional_data_dtor_base.377" }
%"class.absl::optional_internal::optional_data_dtor_base.377" = type { i8, %union.anon.378 }
%union.anon.378 = type { %struct.SkRect }
%union.anon.379 = type { i32 }
%"class.blink::StrokeData" = type { i32, float, i32, i32, float, %class.sk_sp }
%"class.cc::PaintRecorder" = type { i32 (...)**, %class.scoped_refptr.385, %"class.std::__1::unique_ptr.386" }
%class.scoped_refptr.385 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.std::__1::unique_ptr.386" = type { %"class.std::__1::__compressed_pair.387" }
%"class.std::__1::__compressed_pair.387" = type { %"struct.std::__1::__compressed_pair_elem.388" }
%"struct.std::__1::__compressed_pair_elem.388" = type { %"class.cc::RecordPaintCanvas"* }
%"class.cc::RecordPaintCanvas" = type { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, %"class.absl::optional.389", %struct.SkRect }
%"class.absl::optional.389" = type { %"class.absl::optional_internal::optional_data.390" }
%"class.absl::optional_internal::optional_data.390" = type { %"class.absl::optional_internal::optional_data_base.391" }
%"class.absl::optional_internal::optional_data_base.391" = type { %"class.absl::optional_internal::optional_data_dtor_base.392" }
%"class.absl::optional_internal::optional_data_dtor_base.392" = type { i8, %union.anon.393 }
%union.anon.393 = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.394, [384 x i64], %class.sk_sp.395, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.396", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.402" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.394 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.395 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.396" = type { %"class.std::__1::__compressed_pair.397" }
%"class.std::__1::__compressed_pair.397" = type { %"struct.std::__1::__compressed_pair_elem.398" }
%"struct.std::__1::__compressed_pair_elem.398" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.402" = type { %"class.std::__1::__compressed_pair.403" }
%"class.std::__1::__compressed_pair.403" = type { %"struct.std::__1::__compressed_pair_elem.404" }
%"struct.std::__1::__compressed_pair_elem.404" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"class.std::__1::unique_ptr.411" = type { %"class.std::__1::__compressed_pair.412" }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"class.blink::DarkModeFilter"* }
%"class.blink::DarkModeFilter" = type { %"struct.blink::DarkModeFilter::ImmutableData", %"class.absl::optional.432", %"class.std::__1::unique_ptr.437" }
%"struct.blink::DarkModeFilter::ImmutableData" = type { %"struct.blink::DarkModeSettings", %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.420", %"class.std::__1::unique_ptr.426", %class.sk_sp.370 }
%"struct.blink::DarkModeSettings" = type <{ i32, i8, [3 x i8], float, float, i32, i32, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.414" = type { %"class.std::__1::__compressed_pair.415" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"class.blink::DarkModeColorClassifier"* }
%"class.blink::DarkModeColorClassifier" = type opaque
%"class.std::__1::unique_ptr.420" = type { %"class.std::__1::__compressed_pair.421" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.422" }
%"struct.std::__1::__compressed_pair_elem.422" = type { %"class.blink::DarkModeImageClassifier"* }
%"class.blink::DarkModeImageClassifier" = type opaque
%"class.std::__1::unique_ptr.426" = type { %"class.std::__1::__compressed_pair.427" }
%"class.std::__1::__compressed_pair.427" = type { %"struct.std::__1::__compressed_pair_elem.428" }
%"struct.std::__1::__compressed_pair_elem.428" = type { %"class.blink::DarkModeColorFilter"* }
%"class.blink::DarkModeColorFilter" = type opaque
%"class.absl::optional.432" = type { %"class.absl::optional_internal::optional_data.433" }
%"class.absl::optional_internal::optional_data.433" = type { %"class.absl::optional_internal::optional_data_base.434" }
%"class.absl::optional_internal::optional_data_base.434" = type { %"class.absl::optional_internal::optional_data_dtor_base.435" }
%"class.absl::optional_internal::optional_data_dtor_base.435" = type { i8, %union.anon.436 }
%union.anon.436 = type { i32 }
%"class.std::__1::unique_ptr.437" = type { %"class.std::__1::__compressed_pair.438" }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.439" }
%"struct.std::__1::__compressed_pair_elem.439" = type { %"class.blink::DarkModeInvertedColorCache"* }
%"class.blink::DarkModeInvertedColorCache" = type opaque
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.152", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.162", %"class.std::__1::unique_ptr.168", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.186", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.193", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.95", %"class.std::__1::unique_ptr.102", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.132", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.52" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.52" = type { %"struct.std::__1::__atomic_base.53" }
%"struct.std::__1::__atomic_base.53" = type { %"struct.std::__1::__atomic_base.54" }
%"struct.std::__1::__atomic_base.54" = type { %"struct.std::__1::__cxx_atomic_impl.55" }
%"struct.std::__1::__cxx_atomic_impl.55" = type { %"struct.std::__1::__cxx_atomic_base_impl.56" }
%"struct.std::__1::__cxx_atomic_base_impl.56" = type { i64 }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.blink::Worklist.63"* }
%"class.blink::Worklist.63" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.52" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::Worklist.70"* }
%"class.blink::Worklist.70" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.52" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::Worklist.77"* }
%"class.blink::Worklist.77" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.52" }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.blink::Worklist.84"* }
%"class.blink::Worklist.84" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.52" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::Worklist.91"* }
%"class.blink::Worklist.91" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.52" }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.blink::Worklist.98"* }
%"class.blink::Worklist.98" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.52" }
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"class.blink::Worklist.105"* }
%"class.blink::Worklist.105" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.52" }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.112", %"class.std::__1::__compressed_pair.119", %"class.std::__1::__compressed_pair.124", %"class.std::__1::__compressed_pair.126", [4 x i8] }>
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114", %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { i64 }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { float }
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.135", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.144" }
%"class.WTF::Vector.144" = type { %"class.WTF::VectorBuffer.145" }
%"class.WTF::VectorBuffer.145" = type { %"class.WTF::VectorBufferBase.146" }
%"class.WTF::VectorBufferBase.146" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.160" }
%"class.WTF::VectorBuffer.160" = type { %"class.WTF::VectorBufferBase.161" }
%"class.WTF::VectorBufferBase.161" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.174" }
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.63"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.70"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.77"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.84"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.91"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.197" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.192 }
%class.scoped_refptr.192 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::ScrollbarLayerDelegate" = type <{ %"class.cc::Scrollbar.base", [4 x i8], %"class.blink::Persistent", float, [4 x i8] }>
%"class.cc::Scrollbar.base" = type <{ i32 (...)**, %"class.base::RefCounted" }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::Scrollbar"*, %"class.blink::PersistentNodePtr" }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.19" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.0", %"class.blink::Member.2", %"class.blink::Member.4", %"class.blink::Member.6", %"class.WTF::Vector", i16, %class.scoped_refptr.9 }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.4" = type { %"class.blink::MemberBase.5" }
%"class.blink::MemberBase.5" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.9 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.10" }>
%"class.base::RefCountedThreadSafe.10" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.9, %"class.base::WeakPtrFactory" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.11 }
%class.scoped_refptr.11 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.12", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.12" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.13" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.18" }
%"class.blink::MemberBase.18" = type { %"class.blink::Scrollbar"* }
%"class.blink::Member.19" = type { %"class.blink::MemberBase.20" }
%"class.blink::MemberBase.20" = type { %"class.blink::Element"* }
%"class.blink::Element" = type opaque
%"class.cc::Scrollbar" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8] }>
%class.sk_sp.467 = type { %"class.cc::PaintOpBuffer"* }
%"class.blink::(anonymous namespace)::ScopedScrollbarPainter" = type { %"class.cc::PaintCanvas"*, %"class.blink::PaintRecordBuilder" }
%"class.blink::PaintRecordBuilder" = type { %"class.blink::DisplayItemClient.base", %"class.absl::optional", %"class.blink::PaintController"*, %"class.blink::GraphicsContext" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.blink::PaintController" }
%"class.blink::GraphicsContext" = type { %"class.cc::PaintCanvas"*, %"class.blink::PaintController"*, %"class.WTF::Vector.319", i32, %"class.blink::GraphicsContextState"*, %"class.cc::PaintRecorder", %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"*, float, %"class.std::__1::unique_ptr.411", i8, i8, i8, i32 }
%"class.blink::PropertyTreeState" = type { %"class.blink::PropertyTreeStateOrAlias" }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_9ScrollbarELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink10TraceTraitINS_9ScrollbarEE5TraceEPNS_7VisitorEPKv = comdat any

@_ZTVN5blink22ScrollbarLayerDelegateE = hidden unnamed_addr constant { [23 x i8*] } { [23 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.blink::ScrollbarLayerDelegate"*, %"class.cc::Scrollbar"*)* @_ZNK5blink22ScrollbarLayerDelegate6IsSameERKN2cc9ScrollbarE to i8*), i8* bitcast (i32 (%"class.blink::ScrollbarLayerDelegate"*)* @_ZNK5blink22ScrollbarLayerDelegate11OrientationEv to i8*), i8* bitcast (i1 (%"class.blink::ScrollbarLayerDelegate"*)* @_ZNK5blink22ScrollbarLayerDelegate27IsLeftSideVerticalScrollbarEv to i8*), i8* bitcast (i1 (%"class.blink::ScrollbarLayerDelegate"*)* @_ZNK5blink22ScrollbarLayerDelegate12IsSolidColorEv to i8*), i8* bitcast (i1 (%"class.blink::ScrollbarLayerDelegate"*)* @_ZNK5blink22ScrollbarLayerDelegate9IsOverlayEv to i8*), i8* bitcast (i1 (%"class.blink::ScrollbarLayerDelegate"*)* @_ZNK5blink22ScrollbarLayerDelegate8HasThumbEv to i8*), i8* bitcast (i1 (%"class.blink::ScrollbarLayerDelegate"*)* @_ZNK5blink22ScrollbarLayerDelegate20SupportsDragSnapBackEv to i8*), i8* bitcast (i1 (%"class.blink::ScrollbarLayerDelegate"*)* @_ZNK5blink22ScrollbarLayerDelegate16JumpOnTrackClickEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::ScrollbarLayerDelegate"*)* @_ZNK5blink22ScrollbarLayerDelegate9ThumbRectEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::ScrollbarLayerDelegate"*)* @_ZNK5blink22ScrollbarLayerDelegate9TrackRectEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::ScrollbarLayerDelegate"*)* @_ZNK5blink22ScrollbarLayerDelegate14BackButtonRectEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::ScrollbarLayerDelegate"*)* @_ZNK5blink22ScrollbarLayerDelegate17ForwardButtonRectEv to i8*), i8* bitcast (float (%"class.blink::ScrollbarLayerDelegate"*)* @_ZNK5blink22ScrollbarLayerDelegate7OpacityEv to i8*), i8* bitcast (i1 (%"class.blink::ScrollbarLayerDelegate"*)* @_ZNK5blink22ScrollbarLayerDelegate12HasTickmarksEv to i8*), i8* bitcast (i1 (%"class.blink::ScrollbarLayerDelegate"*, i32)* @_ZNK5blink22ScrollbarLayerDelegate16NeedsRepaintPartEN2cc13ScrollbarPartE to i8*), i8* bitcast (void (%"class.blink::ScrollbarLayerDelegate"*, %"class.cc::PaintCanvas"*, i32, %"class.gfx::Rect"*)* @_ZN5blink22ScrollbarLayerDelegate9PaintPartEPN2cc11PaintCanvasENS1_13ScrollbarPartERKN3gfx4RectE to i8*), i8* bitcast (i1 (%"class.blink::ScrollbarLayerDelegate"*)* @_ZNK5blink22ScrollbarLayerDelegate26UsesNinePatchThumbResourceEv to i8*), i8* bitcast (i64 (%"class.blink::ScrollbarLayerDelegate"*)* @_ZNK5blink22ScrollbarLayerDelegate24NinePatchThumbCanvasSizeEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::ScrollbarLayerDelegate"*)* @_ZNK5blink22ScrollbarLayerDelegate22NinePatchThumbApertureEv to i8*), i8* bitcast (void (%"class.blink::ScrollbarLayerDelegate"*)* @_ZN5blink22ScrollbarLayerDelegateD2Ev to i8*), i8* bitcast (void (%"class.blink::ScrollbarLayerDelegate"*)* @_ZN5blink22ScrollbarLayerDelegateD0Ev to i8*)] }, align 8
@__const._ZN5blink22ScrollbarLayerDelegate9PaintPartEPN2cc11PaintCanvasENS1_13ScrollbarPartERKN3gfx4RectE.painter = private unnamed_addr constant { %"class.cc::PaintCanvas"*, { %"class.blink::DisplayItemClient.base", [7 x i8], { { { { i8, [7 x i8], { { i32, [4 x i8], %class.scoped_refptr.202, %class.scoped_refptr.202, <{ %"class.WTF::Vector.209"*, { { { { i8, [7 x i8], %union.anon.281 } } } }, %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>, i8, i8, [6 x i8], %"class.WTF::Vector.294", i32, i32, i32, [4 x i8], %"class.WTF::HashMap", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 } } } } } }, %"class.blink::PaintController"*, { %"class.cc::PaintCanvas"*, %"class.blink::PaintController"*, %"class.WTF::Vector.319", i32, [4 x i8], %"class.blink::GraphicsContextState"*, %"class.cc::PaintRecorder", %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"*, float, [4 x i8], %"class.std::__1::unique_ptr.411", i8, i8, i8, [1 x i8], i32 } } } { %"class.cc::PaintCanvas"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintCanvas"*), { %"class.blink::DisplayItemClient.base", [7 x i8], { { { { i8, [7 x i8], { { i32, [4 x i8], %class.scoped_refptr.202, %class.scoped_refptr.202, <{ %"class.WTF::Vector.209"*, { { { { i8, [7 x i8], %union.anon.281 } } } }, %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>, i8, i8, [6 x i8], %"class.WTF::Vector.294", i32, i32, i32, [4 x i8], %"class.WTF::HashMap", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 } } } } } }, %"class.blink::PaintController"*, { %"class.cc::PaintCanvas"*, %"class.blink::PaintController"*, %"class.WTF::Vector.319", i32, [4 x i8], %"class.blink::GraphicsContextState"*, %"class.cc::PaintRecorder", %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"*, float, [4 x i8], %"class.std::__1::unique_ptr.411", i8, i8, i8, [1 x i8], i32 } } { %"class.blink::DisplayItemClient.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i8 -86 }>, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { { { i8, [7 x i8], { { i32, [4 x i8], %class.scoped_refptr.202, %class.scoped_refptr.202, <{ %"class.WTF::Vector.209"*, { { { { i8, [7 x i8], %union.anon.281 } } } }, %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>, i8, i8, [6 x i8], %"class.WTF::Vector.294", i32, i32, i32, [4 x i8], %"class.WTF::HashMap", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 } } } } } } { { { { i8, [7 x i8], { { i32, [4 x i8], %class.scoped_refptr.202, %class.scoped_refptr.202, <{ %"class.WTF::Vector.209"*, { { { { i8, [7 x i8], %union.anon.281 } } } }, %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>, i8, i8, [6 x i8], %"class.WTF::Vector.294", i32, i32, i32, [4 x i8], %"class.WTF::HashMap", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 } } } } } { { { i8, [7 x i8], { { i32, [4 x i8], %class.scoped_refptr.202, %class.scoped_refptr.202, <{ %"class.WTF::Vector.209"*, { { { { i8, [7 x i8], %union.anon.281 } } } }, %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>, i8, i8, [6 x i8], %"class.WTF::Vector.294", i32, i32, i32, [4 x i8], %"class.WTF::HashMap", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 } } } } { { i8, [7 x i8], { { i32, [4 x i8], %class.scoped_refptr.202, %class.scoped_refptr.202, <{ %"class.WTF::Vector.209"*, { { { { i8, [7 x i8], %union.anon.281 } } } }, %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>, i8, i8, [6 x i8], %"class.WTF::Vector.294", i32, i32, i32, [4 x i8], %"class.WTF::HashMap", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 } } } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { i32, [4 x i8], %class.scoped_refptr.202, %class.scoped_refptr.202, <{ %"class.WTF::Vector.209"*, { { { { i8, [7 x i8], %union.anon.281 } } } }, %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>, i8, i8, [6 x i8], %"class.WTF::Vector.294", i32, i32, i32, [4 x i8], %"class.WTF::HashMap", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 } } { { i32, [4 x i8], %class.scoped_refptr.202, %class.scoped_refptr.202, <{ %"class.WTF::Vector.209"*, { { { { i8, [7 x i8], %union.anon.281 } } } }, %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>, i8, i8, [6 x i8], %"class.WTF::Vector.294", i32, i32, i32, [4 x i8], %"class.WTF::HashMap", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 } { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %class.scoped_refptr.202 { %"class.blink::PaintArtifact"* inttoptr (i64 -6148914691236517206 to %"class.blink::PaintArtifact"*) }, %class.scoped_refptr.202 { %"class.blink::PaintArtifact"* inttoptr (i64 -6148914691236517206 to %"class.blink::PaintArtifact"*) }, <{ %"class.WTF::Vector.209"*, { { { { i8, [7 x i8], %union.anon.281 } } } }, %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }> <{ %"class.WTF::Vector.209"* inttoptr (i64 -6148914691236517206 to %"class.WTF::Vector.209"*), { { { { i8, [7 x i8], %union.anon.281 } } } } { { { { i8, [7 x i8], %union.anon.281 } } } { { { i8, [7 x i8], %union.anon.281 } } { { i8, [7 x i8], %union.anon.281 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.281 { %"struct.blink::DisplayItem::Id" { %"class.blink::DisplayItemClient"* inttoptr (i64 -6148914691236517206 to %"class.blink::DisplayItemClient"*), i32 -1431655766, i32 -1431655766 } } } } } }, %"class.blink::PropertyTreeStateOrAlias" { %"class.blink::TransformPaintPropertyNodeOrAlias"* inttoptr (i64 -6148914691236517206 to %"class.blink::TransformPaintPropertyNodeOrAlias"*), %"class.blink::ClipPaintPropertyNodeOrAlias"* inttoptr (i64 -6148914691236517206 to %"class.blink::ClipPaintPropertyNodeOrAlias"*), %"class.blink::EffectPaintPropertyNodeOrAlias"* inttoptr (i64 -6148914691236517206 to %"class.blink::EffectPaintPropertyNodeOrAlias"*) }, %"class.blink::Region" { %"class.blink::IntRect" { %"class.blink::IntPoint" { i32 -1431655766, i32 -1431655766 }, %"class.blink::IntSize" { i32 -1431655766, i32 -1431655766 } }, %"class.blink::Region::Shape" { %"class.WTF::Vector.284" { %"class.WTF::VectorBuffer.285" { %"class.WTF::VectorBufferBase.286" { i32* inttoptr (i64 -6148914691236517206 to i32*), i32 -1431655766, i32 -1431655766 }, [128 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" } }, %"class.WTF::Vector.289" { %"class.WTF::VectorBuffer.290" { %"class.WTF::VectorBufferBase.291" { %"struct.blink::Region::Span"* inttoptr (i64 -6148914691236517206 to %"struct.blink::Region::Span"*), i32 -1431655766, i32 -1431655766 }, [128 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" } } } }, i8 -86, i8 -86, i8 -86, i8 -86, %"class.blink::Color" { i32 -1431655766 }, float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA" }>, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::Vector.294" { %"class.WTF::VectorBuffer.295" { %"class.WTF::VectorBufferBase.296" { %"struct.blink::FrameFirstPaint"* inttoptr (i64 -6148914691236517206 to %"struct.blink::FrameFirstPaint"*), i32 -1431655766, i32 -1431655766 } } }, i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.WTF::HashMap" { %"class.WTF::HashTable" <{ %"struct.WTF::KeyValuePair"* inttoptr (i64 -6148914691236517206 to %"struct.WTF::KeyValuePair"*), i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }> }, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, %"class.WTF::String" { %class.scoped_refptr.301 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"struct.blink::PaintController::SubsequencesData" { %"class.WTF::HashMap.307" { %"class.WTF::HashTable.308" <{ %"struct.WTF::KeyValuePair.311"* inttoptr (i64 -6148914691236517206 to %"struct.WTF::KeyValuePair.311"*), i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.WTF::Vector.312" { %"class.WTF::VectorBuffer.313" { %"class.WTF::VectorBufferBase.314" { %"struct.blink::PaintController::SubsequenceMarkers"* inttoptr (i64 -6148914691236517206 to %"struct.blink::PaintController::SubsequenceMarkers"*), i32 -1431655766, i32 -1431655766 } } } }, %"struct.blink::PaintController::SubsequencesData" { %"class.WTF::HashMap.307" { %"class.WTF::HashTable.308" <{ %"struct.WTF::KeyValuePair.311"* inttoptr (i64 -6148914691236517206 to %"struct.WTF::KeyValuePair.311"*), i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.WTF::Vector.312" { %"class.WTF::VectorBuffer.313" { %"class.WTF::VectorBufferBase.314" { %"struct.blink::PaintController::SubsequenceMarkers"* inttoptr (i64 -6148914691236517206 to %"struct.blink::PaintController::SubsequenceMarkers"*), i32 -1431655766, i32 -1431655766 } } } }, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 } } } } } }, %"class.blink::PaintController"* inttoptr (i64 -6148914691236517206 to %"class.blink::PaintController"*), { %"class.cc::PaintCanvas"*, %"class.blink::PaintController"*, %"class.WTF::Vector.319", i32, [4 x i8], %"class.blink::GraphicsContextState"*, %"class.cc::PaintRecorder", %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"*, float, [4 x i8], %"class.std::__1::unique_ptr.411", i8, i8, i8, [1 x i8], i32 } { %"class.cc::PaintCanvas"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintCanvas"*), %"class.blink::PaintController"* inttoptr (i64 -6148914691236517206 to %"class.blink::PaintController"*), %"class.WTF::Vector.319" { %"class.WTF::VectorBuffer.320" { %"class.WTF::VectorBufferBase.321" { %"class.std::__1::unique_ptr.322"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.322"*), i32 -1431655766, i32 -1431655766 } } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.blink::GraphicsContextState"* inttoptr (i64 -6148914691236517206 to %"class.blink::GraphicsContextState"*), %"class.cc::PaintRecorder" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %class.scoped_refptr.385 { %"class.cc::DisplayItemList"* inttoptr (i64 -6148914691236517206 to %"class.cc::DisplayItemList"*) }, %"class.std::__1::unique_ptr.386" { %"class.std::__1::__compressed_pair.387" { %"struct.std::__1::__compressed_pair_elem.388" { %"class.cc::RecordPaintCanvas"* inttoptr (i64 -6148914691236517206 to %"class.cc::RecordPaintCanvas"*) } } } }, %"class.printing::MetafileSkia"* inttoptr (i64 -6148914691236517206 to %"class.printing::MetafileSkia"*), %"class.paint_preview::PaintPreviewTracker"* inttoptr (i64 -6148914691236517206 to %"class.paint_preview::PaintPreviewTracker"*), float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::unique_ptr.411" { %"class.std::__1::__compressed_pair.412" { %"struct.std::__1::__compressed_pair_elem.413" { %"class.blink::DarkModeFilter"* inttoptr (i64 -6148914691236517206 to %"class.blink::DarkModeFilter"*) } } }, i8 -86, i8 -86, i8 -86, [1 x i8] c"\AA", i32 -1431655766 } } }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1

@_ZN5blink22ScrollbarLayerDelegateC1ERNS_9ScrollbarEf = hidden unnamed_addr alias void (%"class.blink::ScrollbarLayerDelegate"*, %"class.blink::Scrollbar"*, float), void (%"class.blink::ScrollbarLayerDelegate"*, %"class.blink::Scrollbar"*, float)* @_ZN5blink22ScrollbarLayerDelegateC2ERNS_9ScrollbarEf
@_ZN5blink22ScrollbarLayerDelegateD1Ev = hidden unnamed_addr alias void (%"class.blink::ScrollbarLayerDelegate"*), void (%"class.blink::ScrollbarLayerDelegate"*)* @_ZN5blink22ScrollbarLayerDelegateD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22ScrollbarLayerDelegateC2ERNS_9ScrollbarEf(%"class.blink::ScrollbarLayerDelegate"*, %"class.blink::Scrollbar"* dereferenceable(224), float) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::ScrollbarLayerDelegate", %"class.blink::ScrollbarLayerDelegate"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %"class.blink::ScrollbarLayerDelegate", %"class.blink::ScrollbarLayerDelegate"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [23 x i8*] }, { [23 x i8*] }* @_ZTVN5blink22ScrollbarLayerDelegateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::ScrollbarLayerDelegate", %"class.blink::ScrollbarLayerDelegate"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %6, i64 0, i32 0
  %8 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %6, i64 0, i32 0, i32 0
  store %"class.blink::Scrollbar"* %1, %"class.blink::Scrollbar"** %8, align 8
  %9 = getelementptr inbounds %"class.blink::ScrollbarLayerDelegate", %"class.blink::ScrollbarLayerDelegate"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %9, align 8
  %10 = ptrtoint %"class.blink::Scrollbar"* %1 to i64
  switch i64 %10, label %11 [
    i64 0, label %37
    i64 -1, label %37
  ]

11:                                               ; preds = %3
  %12 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %13 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %12, i64 0, i32 1
  %14 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %13) #6
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %18, !prof !2

16:                                               ; preds = %11
  %17 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %13, i8* %17) #6
  br label %18

18:                                               ; preds = %16, %11
  %19 = phi i8* [ %17, %16 ], [ %14, %11 ]
  %20 = bitcast i8* %19 to %"class.blink::ThreadState"**
  %21 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %21, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %23, i64 0, i32 0, i32 0
  %25 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %24, align 8
  %26 = icmp eq %"class.blink::PersistentNode"* %25, null
  br i1 %26, label %27, label %30, !prof !2

27:                                               ; preds = %18
  %28 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %23, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %28) #6
  %29 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %24, align 8
  br label %30

30:                                               ; preds = %27, %18
  %31 = phi %"class.blink::PersistentNode"* [ %29, %27 ], [ %25, %18 ]
  %32 = bitcast %"class.blink::PersistentNode"* %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.blink::PersistentRegion"* %23 to i64*
  store i64 %33, i64* %34, align 8
  %35 = bitcast %"class.blink::PersistentNode"* %31 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %7, %"class.blink::PersistentBase"** %35, align 8
  %36 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %31, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_9ScrollbarELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %36, align 8
  store %"class.blink::PersistentNode"* %31, %"class.blink::PersistentNode"** %9, align 8
  br label %37

37:                                               ; preds = %3, %3, %30
  %38 = getelementptr inbounds %"class.blink::ScrollbarLayerDelegate", %"class.blink::ScrollbarLayerDelegate"* %0, i64 0, i32 3
  store float %2, float* %38, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22ScrollbarLayerDelegateD2Ev(%"class.blink::ScrollbarLayerDelegate"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScrollbarLayerDelegate", %"class.blink::ScrollbarLayerDelegate"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [23 x i8*] }, { [23 x i8*] }* @_ZTVN5blink22ScrollbarLayerDelegateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::ScrollbarLayerDelegate", %"class.blink::ScrollbarLayerDelegate"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  %4 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %5 = icmp eq %"class.blink::PersistentNode"* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %1
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #6
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #6
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %18 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %17, align 8
  %19 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %20 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %18, i64 0, i32 0, i32 0
  %21 = bitcast %"class.blink::PersistentRegion"* %18 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.blink::PersistentNode"* %19 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %19, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %24, align 8
  store %"class.blink::PersistentNode"* %19, %"class.blink::PersistentNode"** %20, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %3, align 8
  br label %25

25:                                               ; preds = %1, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22ScrollbarLayerDelegateD0Ev(%"class.blink::ScrollbarLayerDelegate"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScrollbarLayerDelegate", %"class.blink::ScrollbarLayerDelegate"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [23 x i8*] }, { [23 x i8*] }* @_ZTVN5blink22ScrollbarLayerDelegateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::ScrollbarLayerDelegate", %"class.blink::ScrollbarLayerDelegate"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  %4 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %5 = icmp eq %"class.blink::PersistentNode"* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %1
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #6
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #6
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %18 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %17, align 8
  %19 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %20 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %18, i64 0, i32 0, i32 0
  %21 = bitcast %"class.blink::PersistentRegion"* %18 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.blink::PersistentNode"* %19 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %19, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %24, align 8
  store %"class.blink::PersistentNode"* %19, %"class.blink::PersistentNode"** %20, align 8
  br label %25

25:                                               ; preds = %1, %13
  %26 = bitcast %"class.blink::ScrollbarLayerDelegate"* %0 to i8*
  tail call void @_ZdlPv(i8* %26) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink22ScrollbarLayerDelegate6IsSameERKN2cc9ScrollbarE(%"class.blink::ScrollbarLayerDelegate"* nocapture readonly, %"class.cc::Scrollbar"* nocapture readonly dereferenceable(16)) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::ScrollbarLayerDelegate", %"class.blink::ScrollbarLayerDelegate"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %3, align 8
  %5 = getelementptr inbounds %"class.cc::Scrollbar", %"class.cc::Scrollbar"* %1, i64 1
  %6 = bitcast %"class.cc::Scrollbar"* %5 to %"class.blink::Scrollbar"**
  %7 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %6, align 8
  %8 = icmp eq %"class.blink::Scrollbar"* %4, %7
  ret i1 %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink22ScrollbarLayerDelegate11OrientationEv(%"class.blink::ScrollbarLayerDelegate"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScrollbarLayerDelegate", %"class.blink::ScrollbarLayerDelegate"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Scrollbar", %"class.blink::Scrollbar"* %3, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = icmp ne i32 %5, 0
  %7 = zext i1 %6 to i32
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink22ScrollbarLayerDelegate27IsLeftSideVerticalScrollbarEv(%"class.blink::ScrollbarLayerDelegate"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScrollbarLayerDelegate", %"class.blink::ScrollbarLayerDelegate"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %2, align 8
  %4 = tail call zeroext i1 @_ZNK5blink9Scrollbar27IsLeftSideVerticalScrollbarEv(%"class.blink::Scrollbar"* %3) #6
  ret i1 %4
}

declare zeroext i1 @_ZNK5blink9Scrollbar27IsLeftSideVerticalScrollbarEv(%"class.blink::Scrollbar"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink22ScrollbarLayerDelegate8HasThumbEv(%"class.blink::ScrollbarLayerDelegate"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScrollbarLayerDelegate", %"class.blink::ScrollbarLayerDelegate"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Scrollbar", %"class.blink::Scrollbar"* %3, i64 0, i32 3
  %5 = load %"class.blink::ScrollbarTheme"*, %"class.blink::ScrollbarTheme"** %4, align 8
  %6 = bitcast %"class.blink::ScrollbarTheme"* %5 to i1 (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)***
  %7 = load i1 (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)**, i1 (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)*, i1 (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)** %7, i64 29
  %9 = load i1 (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)*, i1 (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::ScrollbarTheme"* %5, %"class.blink::Scrollbar"* dereferenceable(224) %3) #6
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink22ScrollbarLayerDelegate12IsSolidColorEv(%"class.blink::ScrollbarLayerDelegate"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScrollbarLayerDelegate", %"class.blink::ScrollbarLayerDelegate"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Scrollbar", %"class.blink::Scrollbar"* %3, i64 0, i32 3
  %5 = load %"class.blink::ScrollbarTheme"*, %"class.blink::ScrollbarTheme"** %4, align 8
  %6 = bitcast %"class.blink::ScrollbarTheme"* %5 to i1 (%"class.blink::ScrollbarTheme"*)***
  %7 = load i1 (%"class.blink::ScrollbarTheme"*)**, i1 (%"class.blink::ScrollbarTheme"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::ScrollbarTheme"*)*, i1 (%"class.blink::ScrollbarTheme"*)** %7, i64 6
  %9 = load i1 (%"class.blink::ScrollbarTheme"*)*, i1 (%"class.blink::ScrollbarTheme"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::ScrollbarTheme"* %5) #6
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink22ScrollbarLayerDelegate9IsOverlayEv(%"class.blink::ScrollbarLayerDelegate"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScrollbarLayerDelegate", %"class.blink::ScrollbarLayerDelegate"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %2, align 8
  %4 = bitcast %"class.blink::Scrollbar"* %3 to i1 (%"class.blink::Scrollbar"*)***
  %5 = load i1 (%"class.blink::Scrollbar"*)**, i1 (%"class.blink::Scrollbar"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::Scrollbar"*)*, i1 (%"class.blink::Scrollbar"*)** %5, i64 13
  %7 = load i1 (%"class.blink::Scrollbar"*)*, i1 (%"class.blink::Scrollbar"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::Scrollbar"* %3) #6
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink22ScrollbarLayerDelegate9ThumbRectEv(%"class.blink::ScrollbarLayerDelegate"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScrollbarLayerDelegate", %"class.blink::ScrollbarLayerDelegate"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Scrollbar", %"class.blink::Scrollbar"* %3, i64 0, i32 3
  %5 = load %"class.blink::ScrollbarTheme"*, %"class.blink::ScrollbarTheme"** %4, align 8
  %6 = bitcast %"class.blink::ScrollbarTheme"* %5 to { i64, i64 } (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)***
  %7 = load { i64, i64 } (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)**, { i64, i64 } (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)*** %6, align 8
  %8 = getelementptr inbounds { i64, i64 } (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)*, { i64, i64 } (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)** %7, i64 33
  %9 = load { i64, i64 } (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)*, { i64, i64 } (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)** %8, align 8
  %10 = tail call { i64, i64 } %9(%"class.blink::ScrollbarTheme"* %5, %"class.blink::Scrollbar"* dereferenceable(224) %3) #6
  %11 = extractvalue { i64, i64 } %10, 0
  %12 = trunc i64 %11 to i32
  %13 = lshr i64 %11, 32
  %14 = trunc i64 %13 to i32
  %15 = extractvalue { i64, i64 } %10, 1
  %16 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %2, align 8
  %17 = getelementptr inbounds %"class.blink::Scrollbar", %"class.blink::Scrollbar"* %16, i64 0, i32 21
  %18 = bitcast %"class.blink::IntRect"* %17 to i64*
  %19 = load i64, i64* %18, align 4
  %20 = lshr i64 %19, 32
  %21 = trunc i64 %20 to i32
  %22 = trunc i64 %19 to i32
  %23 = sub i32 %12, %22
  %24 = sub i32 %14, %21
  %25 = trunc i64 %15 to i32
  %26 = lshr i64 %15, 32
  %27 = trunc i64 %26 to i32
  %28 = icmp sgt i32 %23, 0
  %29 = icmp sgt i32 %25, 0
  %30 = and i1 %29, %28
  %31 = sub nuw nsw i32 2147483647, %23
  %32 = icmp ult i32 %31, %25
  %33 = and i1 %32, %30
  %34 = select i1 %33, i32 %31, i32 %25
  %35 = icmp sgt i32 %24, 0
  %36 = icmp sgt i32 %27, 0
  %37 = and i1 %36, %35
  %38 = sub nuw nsw i32 2147483647, %24
  %39 = icmp ult i32 %38, %27
  %40 = and i1 %39, %37
  %41 = select i1 %40, i32 %38, i32 %27
  %42 = icmp sgt i32 %34, 0
  %43 = select i1 %42, i32 %34, i32 0
  %44 = icmp sgt i32 %41, 0
  %45 = select i1 %44, i32 %41, i32 0
  %46 = zext i32 %24 to i64
  %47 = shl nuw i64 %46, 32
  %48 = zext i32 %23 to i64
  %49 = or i64 %47, %48
  %50 = insertvalue { i64, i64 } undef, i64 %49, 0
  %51 = zext i32 %45 to i64
  %52 = shl nuw nsw i64 %51, 32
  %53 = zext i32 %43 to i64
  %54 = or i64 %52, %53
  %55 = insertvalue { i64, i64 } %50, i64 %54, 1
  ret { i64, i64 } %55
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink22ScrollbarLayerDelegate9TrackRectEv(%"class.blink::ScrollbarLayerDelegate"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScrollbarLayerDelegate", %"class.blink::ScrollbarLayerDelegate"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Scrollbar", %"class.blink::Scrollbar"* %3, i64 0, i32 3
  %5 = load %"class.blink::ScrollbarTheme"*, %"class.blink::ScrollbarTheme"** %4, align 8
  %6 = bitcast %"class.blink::ScrollbarTheme"* %5 to { i64, i64 } (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)***
  %7 = load { i64, i64 } (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)**, { i64, i64 } (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)*** %6, align 8
  %8 = getelementptr inbounds { i64, i64 } (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)*, { i64, i64 } (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)** %7, i64 32
  %9 = load { i64, i64 } (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)*, { i64, i64 } (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)** %8, align 8
  %10 = tail call { i64, i64 } %9(%"class.blink::ScrollbarTheme"* %5, %"class.blink::Scrollbar"* dereferenceable(224) %3) #6
  %11 = extractvalue { i64, i64 } %10, 0
  %12 = trunc i64 %11 to i32
  %13 = lshr i64 %11, 32
  %14 = trunc i64 %13 to i32
  %15 = extractvalue { i64, i64 } %10, 1
  %16 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %2, align 8
  %17 = getelementptr inbounds %"class.blink::Scrollbar", %"class.blink::Scrollbar"* %16, i64 0, i32 21
  %18 = bitcast %"class.blink::IntRect"* %17 to i64*
  %19 = load i64, i64* %18, align 4
  %20 = lshr i64 %19, 32
  %21 = trunc i64 %20 to i32
  %22 = trunc i64 %19 to i32
  %23 = sub i32 %12, %22
  %24 = sub i32 %14, %21
  %25 = trunc i64 %15 to i32
  %26 = lshr i64 %15, 32
  %27 = trunc i64 %26 to i32
  %28 = icmp sgt i32 %23, 0
  %29 = icmp sgt i32 %25, 0
  %30 = and i1 %29, %28
  %31 = sub nuw nsw i32 2147483647, %23
  %32 = icmp ult i32 %31, %25
  %33 = and i1 %32, %30
  %34 = select i1 %33, i32 %31, i32 %25
  %35 = icmp sgt i32 %24, 0
  %36 = icmp sgt i32 %27, 0
  %37 = and i1 %36, %35
  %38 = sub nuw nsw i32 2147483647, %24
  %39 = icmp ult i32 %38, %27
  %40 = and i1 %39, %37
  %41 = select i1 %40, i32 %38, i32 %27
  %42 = icmp sgt i32 %34, 0
  %43 = select i1 %42, i32 %34, i32 0
  %44 = icmp sgt i32 %41, 0
  %45 = select i1 %44, i32 %41, i32 0
  %46 = zext i32 %24 to i64
  %47 = shl nuw i64 %46, 32
  %48 = zext i32 %23 to i64
  %49 = or i64 %47, %48
  %50 = insertvalue { i64, i64 } undef, i64 %49, 0
  %51 = zext i32 %45 to i64
  %52 = shl nuw nsw i64 %51, 32
  %53 = zext i32 %43 to i64
  %54 = or i64 %52, %53
  %55 = insertvalue { i64, i64 } %50, i64 %54, 1
  ret { i64, i64 } %55
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink22ScrollbarLayerDelegate20SupportsDragSnapBackEv(%"class.blink::ScrollbarLayerDelegate"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScrollbarLayerDelegate", %"class.blink::ScrollbarLayerDelegate"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Scrollbar", %"class.blink::Scrollbar"* %3, i64 0, i32 3
  %5 = load %"class.blink::ScrollbarTheme"*, %"class.blink::ScrollbarTheme"** %4, align 8
  %6 = bitcast %"class.blink::ScrollbarTheme"* %5 to i1 (%"class.blink::ScrollbarTheme"*)***
  %7 = load i1 (%"class.blink::ScrollbarTheme"*)**, i1 (%"class.blink::ScrollbarTheme"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::ScrollbarTheme"*)*, i1 (%"class.blink::ScrollbarTheme"*)** %7, i64 18
  %9 = load i1 (%"class.blink::ScrollbarTheme"*)*, i1 (%"class.blink::ScrollbarTheme"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::ScrollbarTheme"* %5) #6
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink22ScrollbarLayerDelegate16JumpOnTrackClickEv(%"class.blink::ScrollbarLayerDelegate"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScrollbarLayerDelegate", %"class.blink::ScrollbarLayerDelegate"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Scrollbar", %"class.blink::Scrollbar"* %3, i64 0, i32 3
  %5 = load %"class.blink::ScrollbarTheme"*, %"class.blink::ScrollbarTheme"** %4, align 8
  %6 = bitcast %"class.blink::ScrollbarTheme"* %5 to i1 (%"class.blink::ScrollbarTheme"*)***
  %7 = load i1 (%"class.blink::ScrollbarTheme"*)**, i1 (%"class.blink::ScrollbarTheme"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::ScrollbarTheme"*)*, i1 (%"class.blink::ScrollbarTheme"*)** %7, i64 19
  %9 = load i1 (%"class.blink::ScrollbarTheme"*)*, i1 (%"class.blink::ScrollbarTheme"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::ScrollbarTheme"* %5) #6
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink22ScrollbarLayerDelegate14BackButtonRectEv(%"class.blink::ScrollbarLayerDelegate"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScrollbarLayerDelegate", %"class.blink::ScrollbarLayerDelegate"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Scrollbar", %"class.blink::Scrollbar"* %3, i64 0, i32 3
  %5 = load %"class.blink::ScrollbarTheme"*, %"class.blink::ScrollbarTheme"** %4, align 8
  %6 = bitcast %"class.blink::ScrollbarTheme"* %5 to { i64, i64 } (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)***
  %7 = load { i64, i64 } (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)**, { i64, i64 } (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)*** %6, align 8
  %8 = getelementptr inbounds { i64, i64 } (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)*, { i64, i64 } (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)** %7, i64 30
  %9 = load { i64, i64 } (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)*, { i64, i64 } (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)** %8, align 8
  %10 = tail call { i64, i64 } %9(%"class.blink::ScrollbarTheme"* %5, %"class.blink::Scrollbar"* dereferenceable(224) %3) #6
  %11 = extractvalue { i64, i64 } %10, 0
  %12 = trunc i64 %11 to i32
  %13 = lshr i64 %11, 32
  %14 = trunc i64 %13 to i32
  %15 = extractvalue { i64, i64 } %10, 1
  %16 = trunc i64 %15 to i32
  %17 = icmp slt i32 %16, 1
  %18 = lshr i64 %15, 32
  %19 = trunc i64 %18 to i32
  %20 = icmp slt i32 %19, 1
  %21 = or i1 %17, %20
  br i1 %21, label %32, label %22

22:                                               ; preds = %1
  %23 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %2, align 8
  %24 = getelementptr inbounds %"class.blink::Scrollbar", %"class.blink::Scrollbar"* %23, i64 0, i32 21
  %25 = bitcast %"class.blink::IntRect"* %24 to i64*
  %26 = load i64, i64* %25, align 4
  %27 = lshr i64 %26, 32
  %28 = trunc i64 %27 to i32
  %29 = trunc i64 %26 to i32
  %30 = sub i32 %12, %29
  %31 = sub i32 %14, %28
  br label %32

32:                                               ; preds = %1, %22
  %33 = phi i32 [ %30, %22 ], [ %12, %1 ]
  %34 = phi i32 [ %31, %22 ], [ %14, %1 ]
  %35 = icmp sgt i32 %33, 0
  %36 = icmp sgt i32 %16, 0
  %37 = and i1 %36, %35
  %38 = sub nuw nsw i32 2147483647, %33
  %39 = icmp ult i32 %38, %16
  %40 = and i1 %39, %37
  %41 = select i1 %40, i32 %38, i32 %16
  %42 = icmp sgt i32 %34, 0
  %43 = icmp sgt i32 %19, 0
  %44 = and i1 %43, %42
  %45 = sub nuw nsw i32 2147483647, %34
  %46 = icmp ult i32 %45, %19
  %47 = and i1 %46, %44
  %48 = select i1 %47, i32 %45, i32 %19
  %49 = icmp sgt i32 %41, 0
  %50 = select i1 %49, i32 %41, i32 0
  %51 = icmp sgt i32 %48, 0
  %52 = select i1 %51, i32 %48, i32 0
  %53 = zext i32 %34 to i64
  %54 = shl nuw i64 %53, 32
  %55 = zext i32 %33 to i64
  %56 = or i64 %54, %55
  %57 = insertvalue { i64, i64 } undef, i64 %56, 0
  %58 = zext i32 %52 to i64
  %59 = shl nuw nsw i64 %58, 32
  %60 = zext i32 %50 to i64
  %61 = or i64 %59, %60
  %62 = insertvalue { i64, i64 } %57, i64 %61, 1
  ret { i64, i64 } %62
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink22ScrollbarLayerDelegate17ForwardButtonRectEv(%"class.blink::ScrollbarLayerDelegate"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScrollbarLayerDelegate", %"class.blink::ScrollbarLayerDelegate"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Scrollbar", %"class.blink::Scrollbar"* %3, i64 0, i32 3
  %5 = load %"class.blink::ScrollbarTheme"*, %"class.blink::ScrollbarTheme"** %4, align 8
  %6 = bitcast %"class.blink::ScrollbarTheme"* %5 to { i64, i64 } (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)***
  %7 = load { i64, i64 } (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)**, { i64, i64 } (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)*** %6, align 8
  %8 = getelementptr inbounds { i64, i64 } (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)*, { i64, i64 } (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)** %7, i64 31
  %9 = load { i64, i64 } (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)*, { i64, i64 } (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)** %8, align 8
  %10 = tail call { i64, i64 } %9(%"class.blink::ScrollbarTheme"* %5, %"class.blink::Scrollbar"* dereferenceable(224) %3) #6
  %11 = extractvalue { i64, i64 } %10, 0
  %12 = trunc i64 %11 to i32
  %13 = lshr i64 %11, 32
  %14 = trunc i64 %13 to i32
  %15 = extractvalue { i64, i64 } %10, 1
  %16 = trunc i64 %15 to i32
  %17 = icmp slt i32 %16, 1
  %18 = lshr i64 %15, 32
  %19 = trunc i64 %18 to i32
  %20 = icmp slt i32 %19, 1
  %21 = or i1 %17, %20
  br i1 %21, label %32, label %22

22:                                               ; preds = %1
  %23 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %2, align 8
  %24 = getelementptr inbounds %"class.blink::Scrollbar", %"class.blink::Scrollbar"* %23, i64 0, i32 21
  %25 = bitcast %"class.blink::IntRect"* %24 to i64*
  %26 = load i64, i64* %25, align 4
  %27 = lshr i64 %26, 32
  %28 = trunc i64 %27 to i32
  %29 = trunc i64 %26 to i32
  %30 = sub i32 %12, %29
  %31 = sub i32 %14, %28
  br label %32

32:                                               ; preds = %1, %22
  %33 = phi i32 [ %30, %22 ], [ %12, %1 ]
  %34 = phi i32 [ %31, %22 ], [ %14, %1 ]
  %35 = icmp sgt i32 %33, 0
  %36 = icmp sgt i32 %16, 0
  %37 = and i1 %36, %35
  %38 = sub nuw nsw i32 2147483647, %33
  %39 = icmp ult i32 %38, %16
  %40 = and i1 %39, %37
  %41 = select i1 %40, i32 %38, i32 %16
  %42 = icmp sgt i32 %34, 0
  %43 = icmp sgt i32 %19, 0
  %44 = and i1 %43, %42
  %45 = sub nuw nsw i32 2147483647, %34
  %46 = icmp ult i32 %45, %19
  %47 = and i1 %46, %44
  %48 = select i1 %47, i32 %45, i32 %19
  %49 = icmp sgt i32 %41, 0
  %50 = select i1 %49, i32 %41, i32 0
  %51 = icmp sgt i32 %48, 0
  %52 = select i1 %51, i32 %48, i32 0
  %53 = zext i32 %34 to i64
  %54 = shl nuw i64 %53, 32
  %55 = zext i32 %33 to i64
  %56 = or i64 %54, %55
  %57 = insertvalue { i64, i64 } undef, i64 %56, 0
  %58 = zext i32 %52 to i64
  %59 = shl nuw nsw i64 %58, 32
  %60 = zext i32 %50 to i64
  %61 = or i64 %59, %60
  %62 = insertvalue { i64, i64 } %57, i64 %61, 1
  ret { i64, i64 } %62
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK5blink22ScrollbarLayerDelegate7OpacityEv(%"class.blink::ScrollbarLayerDelegate"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScrollbarLayerDelegate", %"class.blink::ScrollbarLayerDelegate"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Scrollbar", %"class.blink::Scrollbar"* %3, i64 0, i32 3
  %5 = load %"class.blink::ScrollbarTheme"*, %"class.blink::ScrollbarTheme"** %4, align 8
  %6 = bitcast %"class.blink::ScrollbarTheme"* %5 to float (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)***
  %7 = load float (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)**, float (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)*** %6, align 8
  %8 = getelementptr inbounds float (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)*, float (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)** %7, i64 26
  %9 = load float (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)*, float (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)** %8, align 8
  %10 = tail call float %9(%"class.blink::ScrollbarTheme"* %5, %"class.blink::Scrollbar"* dereferenceable(224) %3) #6
  ret float %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink22ScrollbarLayerDelegate16NeedsRepaintPartEN2cc13ScrollbarPartE(%"class.blink::ScrollbarLayerDelegate"* nocapture readonly, i32) unnamed_addr #2 align 2 {
  %3 = icmp eq i32 %1, 0
  %4 = getelementptr inbounds %"class.blink::ScrollbarLayerDelegate", %"class.blink::ScrollbarLayerDelegate"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::Scrollbar", %"class.blink::Scrollbar"* %5, i64 0, i32 18
  %7 = getelementptr inbounds %"class.blink::Scrollbar", %"class.blink::Scrollbar"* %5, i64 0, i32 17
  %8 = select i1 %3, i8* %6, i8* %7
  %9 = load i8, i8* %8, align 1, !range !3
  %10 = icmp ne i8 %9, 0
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink22ScrollbarLayerDelegate26UsesNinePatchThumbResourceEv(%"class.blink::ScrollbarLayerDelegate"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScrollbarLayerDelegate", %"class.blink::ScrollbarLayerDelegate"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Scrollbar", %"class.blink::Scrollbar"* %3, i64 0, i32 3
  %5 = load %"class.blink::ScrollbarTheme"*, %"class.blink::ScrollbarTheme"** %4, align 8
  %6 = bitcast %"class.blink::ScrollbarTheme"* %5 to i1 (%"class.blink::ScrollbarTheme"*)***
  %7 = load i1 (%"class.blink::ScrollbarTheme"*)**, i1 (%"class.blink::ScrollbarTheme"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::ScrollbarTheme"*)*, i1 (%"class.blink::ScrollbarTheme"*)** %7, i64 43
  %9 = load i1 (%"class.blink::ScrollbarTheme"*)*, i1 (%"class.blink::ScrollbarTheme"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::ScrollbarTheme"* %5) #6
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink22ScrollbarLayerDelegate24NinePatchThumbCanvasSizeEv(%"class.blink::ScrollbarLayerDelegate"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScrollbarLayerDelegate", %"class.blink::ScrollbarLayerDelegate"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Scrollbar", %"class.blink::Scrollbar"* %3, i64 0, i32 3
  %5 = load %"class.blink::ScrollbarTheme"*, %"class.blink::ScrollbarTheme"** %4, align 8
  %6 = bitcast %"class.blink::ScrollbarTheme"* %5 to i64 (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)***
  %7 = load i64 (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)**, i64 (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)*** %6, align 8
  %8 = getelementptr inbounds i64 (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)*, i64 (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)** %7, i64 44
  %9 = load i64 (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)*, i64 (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)** %8, align 8
  %10 = tail call i64 %9(%"class.blink::ScrollbarTheme"* %5, %"class.blink::Scrollbar"* dereferenceable(224) %3) #6
  %11 = trunc i64 %10 to i32
  %12 = lshr i64 %10, 32
  %13 = trunc i64 %12 to i32
  %14 = icmp sgt i32 %11, 0
  %15 = icmp sgt i32 %13, 0
  %16 = and i64 %10, -4294967296
  %17 = select i1 %15, i64 %16, i64 0
  %18 = and i64 %10, 4294967295
  %19 = select i1 %14, i64 %18, i64 0
  %20 = or i64 %17, %19
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink22ScrollbarLayerDelegate22NinePatchThumbApertureEv(%"class.blink::ScrollbarLayerDelegate"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScrollbarLayerDelegate", %"class.blink::ScrollbarLayerDelegate"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Scrollbar", %"class.blink::Scrollbar"* %3, i64 0, i32 3
  %5 = load %"class.blink::ScrollbarTheme"*, %"class.blink::ScrollbarTheme"** %4, align 8
  %6 = bitcast %"class.blink::ScrollbarTheme"* %5 to { i64, i64 } (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)***
  %7 = load { i64, i64 } (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)**, { i64, i64 } (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)*** %6, align 8
  %8 = getelementptr inbounds { i64, i64 } (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)*, { i64, i64 } (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)** %7, i64 45
  %9 = load { i64, i64 } (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)*, { i64, i64 } (%"class.blink::ScrollbarTheme"*, %"class.blink::Scrollbar"*)** %8, align 8
  %10 = tail call { i64, i64 } %9(%"class.blink::ScrollbarTheme"* %5, %"class.blink::Scrollbar"* dereferenceable(224) %3) #6
  %11 = extractvalue { i64, i64 } %10, 0
  %12 = trunc i64 %11 to i32
  %13 = lshr i64 %11, 32
  %14 = trunc i64 %13 to i32
  %15 = extractvalue { i64, i64 } %10, 1
  %16 = trunc i64 %15 to i32
  %17 = lshr i64 %15, 32
  %18 = trunc i64 %17 to i32
  %19 = icmp sgt i32 %12, 0
  %20 = icmp sgt i32 %16, 0
  %21 = and i1 %19, %20
  %22 = sub nuw nsw i32 2147483647, %12
  %23 = icmp ult i32 %22, %16
  %24 = and i1 %23, %21
  %25 = select i1 %24, i32 %22, i32 %16
  %26 = icmp sgt i32 %14, 0
  %27 = icmp sgt i32 %18, 0
  %28 = and i1 %26, %27
  %29 = sub nuw nsw i32 2147483647, %14
  %30 = icmp ult i32 %29, %18
  %31 = and i1 %30, %28
  %32 = select i1 %31, i32 %29, i32 %18
  %33 = icmp sgt i32 %25, 0
  %34 = select i1 %33, i32 %25, i32 0
  %35 = icmp sgt i32 %32, 0
  %36 = select i1 %35, i32 %32, i32 0
  %37 = zext i32 %36 to i64
  %38 = shl nuw nsw i64 %37, 32
  %39 = zext i32 %34 to i64
  %40 = or i64 %38, %39
  %41 = insertvalue { i64, i64 } %10, i64 %40, 1
  ret { i64, i64 } %41
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink22ScrollbarLayerDelegate11ShouldPaintEv(%"class.blink::ScrollbarLayerDelegate"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScrollbarLayerDelegate", %"class.blink::ScrollbarLayerDelegate"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Scrollbar", %"class.blink::Scrollbar"* %3, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::ScrollableArea"*, %"class.blink::ScrollableArea"** %4, align 8
  %6 = icmp eq %"class.blink::ScrollableArea"* %5, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::ScrollableArea"* %5 to i1 (%"class.blink::ScrollableArea"*)***
  %9 = load i1 (%"class.blink::ScrollableArea"*)**, i1 (%"class.blink::ScrollableArea"*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.blink::ScrollableArea"*)*, i1 (%"class.blink::ScrollableArea"*)** %9, i64 26
  %11 = load i1 (%"class.blink::ScrollableArea"*)*, i1 (%"class.blink::ScrollableArea"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.blink::ScrollableArea"* nonnull %5) #6
  %13 = xor i1 %12, true
  br label %14

14:                                               ; preds = %7, %1
  %15 = phi i1 [ false, %1 ], [ %13, %7 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink22ScrollbarLayerDelegate12HasTickmarksEv(%"class.blink::ScrollbarLayerDelegate"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScrollbarLayerDelegate", %"class.blink::ScrollbarLayerDelegate"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Scrollbar", %"class.blink::Scrollbar"* %3, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::ScrollableArea"*, %"class.blink::ScrollableArea"** %4, align 8
  %6 = icmp eq %"class.blink::ScrollableArea"* %5, null
  br i1 %6, label %16, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::ScrollableArea"* %5 to i1 (%"class.blink::ScrollableArea"*)***
  %9 = load i1 (%"class.blink::ScrollableArea"*)**, i1 (%"class.blink::ScrollableArea"*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.blink::ScrollableArea"*)*, i1 (%"class.blink::ScrollableArea"*)** %9, i64 26
  %11 = load i1 (%"class.blink::ScrollableArea"*)*, i1 (%"class.blink::ScrollableArea"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.blink::ScrollableArea"* nonnull %5) #6
  br i1 %12, label %16, label %13

13:                                               ; preds = %7
  %14 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %2, align 8
  %15 = tail call zeroext i1 @_ZNK5blink9Scrollbar12HasTickmarksEv(%"class.blink::Scrollbar"* %14) #6
  br label %16

16:                                               ; preds = %7, %1, %13
  %17 = phi i1 [ false, %7 ], [ %15, %13 ], [ false, %1 ]
  ret i1 %17
}

declare zeroext i1 @_ZNK5blink9Scrollbar12HasTickmarksEv(%"class.blink::Scrollbar"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22ScrollbarLayerDelegate9PaintPartEPN2cc11PaintCanvasENS1_13ScrollbarPartERKN3gfx4RectE(%"class.blink::ScrollbarLayerDelegate"* nocapture readonly, %"class.cc::PaintCanvas"*, i32, %"class.gfx::Rect"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = alloca %class.sk_sp.467, align 8
  %6 = alloca %class.sk_sp.333, align 8
  %7 = alloca %"class.blink::(anonymous namespace)::ScopedScrollbarPainter", align 8
  %8 = alloca <4 x i32>, align 16
  %9 = bitcast <4 x i32>* %8 to %"class.blink::IntRect"*
  %10 = alloca %"class.blink::IntPoint", align 4
  %11 = getelementptr inbounds %"class.blink::ScrollbarLayerDelegate", %"class.blink::ScrollbarLayerDelegate"* %0, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::Scrollbar", %"class.blink::Scrollbar"* %12, i64 0, i32 1, i32 0, i32 0
  %14 = load %"class.blink::ScrollableArea"*, %"class.blink::ScrollableArea"** %13, align 8
  %15 = icmp eq %"class.blink::ScrollableArea"* %14, null
  br i1 %15, label %106, label %16

16:                                               ; preds = %4
  %17 = bitcast %"class.blink::ScrollableArea"* %14 to i1 (%"class.blink::ScrollableArea"*)***
  %18 = load i1 (%"class.blink::ScrollableArea"*)**, i1 (%"class.blink::ScrollableArea"*)*** %17, align 8
  %19 = getelementptr inbounds i1 (%"class.blink::ScrollableArea"*)*, i1 (%"class.blink::ScrollableArea"*)** %18, i64 26
  %20 = load i1 (%"class.blink::ScrollableArea"*)*, i1 (%"class.blink::ScrollableArea"*)** %19, align 8
  %21 = tail call zeroext i1 %20(%"class.blink::ScrollableArea"* nonnull %14) #6
  br i1 %21, label %106, label %22

22:                                               ; preds = %16
  %23 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %11, align 8
  %24 = getelementptr inbounds %"class.blink::Scrollbar", %"class.blink::Scrollbar"* %23, i64 0, i32 3
  %25 = load %"class.blink::ScrollbarTheme"*, %"class.blink::ScrollbarTheme"** %24, align 8
  %26 = bitcast %"class.blink::(anonymous namespace)::ScopedScrollbarPainter"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 736, i8* nonnull %26) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %26, i8* align 8 bitcast ({ %"class.cc::PaintCanvas"*, { %"class.blink::DisplayItemClient.base", [7 x i8], { { { { i8, [7 x i8], { { i32, [4 x i8], %class.scoped_refptr.202, %class.scoped_refptr.202, <{ %"class.WTF::Vector.209"*, { { { { i8, [7 x i8], %union.anon.281 } } } }, %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>, i8, i8, [6 x i8], %"class.WTF::Vector.294", i32, i32, i32, [4 x i8], %"class.WTF::HashMap", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 } } } } } }, %"class.blink::PaintController"*, { %"class.cc::PaintCanvas"*, %"class.blink::PaintController"*, %"class.WTF::Vector.319", i32, [4 x i8], %"class.blink::GraphicsContextState"*, %"class.cc::PaintRecorder", %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"*, float, [4 x i8], %"class.std::__1::unique_ptr.411", i8, i8, i8, [1 x i8], i32 } } }* @__const._ZN5blink22ScrollbarLayerDelegate9PaintPartEPN2cc11PaintCanvasENS1_13ScrollbarPartERKN3gfx4RectE.painter to i8*), i64 736, i1 false)
  %27 = getelementptr inbounds %"class.blink::ScrollbarLayerDelegate", %"class.blink::ScrollbarLayerDelegate"* %0, i64 0, i32 3
  %28 = bitcast float* %27 to i32*
  %29 = load i32, i32* %28, align 8
  %30 = getelementptr inbounds %"class.blink::(anonymous namespace)::ScopedScrollbarPainter", %"class.blink::(anonymous namespace)::ScopedScrollbarPainter"* %7, i64 0, i32 0
  store %"class.cc::PaintCanvas"* %1, %"class.cc::PaintCanvas"** %30, align 8
  %31 = getelementptr inbounds %"class.blink::(anonymous namespace)::ScopedScrollbarPainter", %"class.blink::(anonymous namespace)::ScopedScrollbarPainter"* %7, i64 0, i32 1
  call void @_ZN5blink18PaintRecordBuilderC1Ev(%"class.blink::PaintRecordBuilder"* %31) #6
  %32 = getelementptr inbounds %"class.blink::(anonymous namespace)::ScopedScrollbarPainter", %"class.blink::(anonymous namespace)::ScopedScrollbarPainter"* %7, i64 0, i32 1, i32 3, i32 8
  %33 = bitcast float* %32 to i32*
  store i32 %29, i32* %33, align 8
  switch i32 %2, label %66 [
    i32 0, label %34
    i32 1, label %46
  ]

34:                                               ; preds = %22
  %35 = getelementptr inbounds %"class.blink::(anonymous namespace)::ScopedScrollbarPainter", %"class.blink::(anonymous namespace)::ScopedScrollbarPainter"* %7, i64 0, i32 1, i32 3
  %36 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %11, align 8
  %37 = bitcast <4 x i32>* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #6
  %38 = bitcast %"class.gfx::Rect"* %3 to <4 x i32>*
  %39 = load <4 x i32>, <4 x i32>* %38, align 4
  store <4 x i32> %39, <4 x i32>* %8, align 16
  %40 = bitcast %"class.blink::ScrollbarTheme"* %25 to void (%"class.blink::ScrollbarTheme"*, %"class.blink::GraphicsContext"*, %"class.blink::Scrollbar"*, %"class.blink::IntRect"*)***
  %41 = load void (%"class.blink::ScrollbarTheme"*, %"class.blink::GraphicsContext"*, %"class.blink::Scrollbar"*, %"class.blink::IntRect"*)**, void (%"class.blink::ScrollbarTheme"*, %"class.blink::GraphicsContext"*, %"class.blink::Scrollbar"*, %"class.blink::IntRect"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.blink::ScrollbarTheme"*, %"class.blink::GraphicsContext"*, %"class.blink::Scrollbar"*, %"class.blink::IntRect"*)*, void (%"class.blink::ScrollbarTheme"*, %"class.blink::GraphicsContext"*, %"class.blink::Scrollbar"*, %"class.blink::IntRect"*)** %41, i64 36
  %43 = load void (%"class.blink::ScrollbarTheme"*, %"class.blink::GraphicsContext"*, %"class.blink::Scrollbar"*, %"class.blink::IntRect"*)*, void (%"class.blink::ScrollbarTheme"*, %"class.blink::GraphicsContext"*, %"class.blink::Scrollbar"*, %"class.blink::IntRect"*)** %42, align 8
  call void %43(%"class.blink::ScrollbarTheme"* %25, %"class.blink::GraphicsContext"* dereferenceable(112) %35, %"class.blink::Scrollbar"* dereferenceable(224) %36, %"class.blink::IntRect"* nonnull dereferenceable(16) %9) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #6
  %44 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %11, align 8
  %45 = getelementptr inbounds %"class.blink::Scrollbar", %"class.blink::Scrollbar"* %44, i64 0, i32 18
  store i8 0, i8* %45, align 1
  br label %66

46:                                               ; preds = %22
  %47 = bitcast %"class.blink::IntPoint"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #6
  %48 = getelementptr inbounds %"class.blink::IntPoint", %"class.blink::IntPoint"* %10, i64 0, i32 0
  %49 = getelementptr inbounds %"class.blink::IntPoint", %"class.blink::IntPoint"* %10, i64 0, i32 1
  %50 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 0, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 0, i32 1
  %53 = load i32, i32* %52, align 4
  %54 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %11, align 8
  %55 = getelementptr inbounds %"class.blink::Scrollbar", %"class.blink::Scrollbar"* %54, i64 0, i32 21
  %56 = bitcast %"class.blink::IntRect"* %55 to i64*
  %57 = load i64, i64* %56, align 4
  %58 = trunc i64 %57 to i32
  %59 = lshr i64 %57, 32
  %60 = trunc i64 %59 to i32
  %61 = sub nsw i32 %51, %58
  %62 = sub nsw i32 %53, %60
  store i32 %61, i32* %48, align 4
  store i32 %62, i32* %49, align 4
  %63 = getelementptr inbounds %"class.blink::(anonymous namespace)::ScopedScrollbarPainter", %"class.blink::(anonymous namespace)::ScopedScrollbarPainter"* %7, i64 0, i32 1, i32 3
  call void @_ZN5blink14ScrollbarTheme26PaintTrackButtonsTickmarksERNS_15GraphicsContextERKNS_9ScrollbarERKNS_8IntPointE(%"class.blink::ScrollbarTheme"* %25, %"class.blink::GraphicsContext"* dereferenceable(112) %63, %"class.blink::Scrollbar"* dereferenceable(224) %54, %"class.blink::IntPoint"* nonnull dereferenceable(8) %10) #6
  %64 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %11, align 8
  %65 = getelementptr inbounds %"class.blink::Scrollbar", %"class.blink::Scrollbar"* %64, i64 0, i32 17
  store i8 0, i8* %65, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #6
  br label %66

66:                                               ; preds = %22, %46, %34
  %67 = bitcast %class.sk_sp.467* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67)
  %68 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %30, align 8
  %69 = bitcast %class.sk_sp.333* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #6
  %70 = call dereferenceable(24) %"class.blink::PropertyTreeState"* @_ZN5blink17PropertyTreeState4RootEv() #6
  call void @_ZN5blink18PaintRecordBuilder12EndRecordingERKNS_17PropertyTreeStateE(%class.sk_sp.333* nonnull sret %6, %"class.blink::PaintRecordBuilder"* %31, %"class.blink::PropertyTreeState"* dereferenceable(24) %70) #6
  %71 = getelementptr inbounds %class.sk_sp.333, %class.sk_sp.333* %6, i64 0, i32 0
  %72 = bitcast %class.sk_sp.333* %6 to i64*
  %73 = load i64, i64* %72, align 8
  store %"class.cc::PaintOpBuffer"* null, %"class.cc::PaintOpBuffer"** %71, align 8
  %74 = bitcast %class.sk_sp.467* %5 to i64*
  store i64 %73, i64* %74, align 8
  %75 = bitcast %"class.cc::PaintCanvas"* %68 to void (%"class.cc::PaintCanvas"*, %class.sk_sp.467*)***
  %76 = load void (%"class.cc::PaintCanvas"*, %class.sk_sp.467*)**, void (%"class.cc::PaintCanvas"*, %class.sk_sp.467*)*** %75, align 8
  %77 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, %class.sk_sp.467*)*, void (%"class.cc::PaintCanvas"*, %class.sk_sp.467*)** %76, i64 40
  %78 = load void (%"class.cc::PaintCanvas"*, %class.sk_sp.467*)*, void (%"class.cc::PaintCanvas"*, %class.sk_sp.467*)** %77, align 8
  call void %78(%"class.cc::PaintCanvas"* %68, %class.sk_sp.467* nonnull %5) #6
  %79 = getelementptr inbounds %class.sk_sp.467, %class.sk_sp.467* %5, i64 0, i32 0
  %80 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %79, align 8
  %81 = icmp eq %"class.cc::PaintOpBuffer"* %80, null
  br i1 %81, label %92, label %82

82:                                               ; preds = %66
  %83 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %80, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = atomicrmw add i32* %83, i32 -1 acq_rel
  %85 = icmp eq i32 %84, 1
  br i1 %85, label %86, label %92

86:                                               ; preds = %82
  %87 = bitcast %"class.cc::PaintOpBuffer"* %80 to %class.SkRefCntBase*
  %88 = bitcast %"class.cc::PaintOpBuffer"* %80 to void (%class.SkRefCntBase*)***
  %89 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %88, align 8
  %90 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %89, i64 2
  %91 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %90, align 8
  call void %91(%class.SkRefCntBase* nonnull %87) #6
  br label %92

92:                                               ; preds = %86, %82, %66
  %93 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %71, align 8
  %94 = icmp eq %"class.cc::PaintOpBuffer"* %93, null
  br i1 %94, label %105, label %95

95:                                               ; preds = %92
  %96 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %93, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = atomicrmw add i32* %96, i32 -1 acq_rel
  %98 = icmp eq i32 %97, 1
  br i1 %98, label %99, label %105

99:                                               ; preds = %95
  %100 = bitcast %"class.cc::PaintOpBuffer"* %93 to %class.SkRefCntBase*
  %101 = bitcast %"class.cc::PaintOpBuffer"* %93 to void (%class.SkRefCntBase*)***
  %102 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %101, align 8
  %103 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %102, i64 2
  %104 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %103, align 8
  call void %104(%class.SkRefCntBase* nonnull %100) #6
  br label %105

105:                                              ; preds = %92, %95, %99
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #6
  call void @_ZN5blink18PaintRecordBuilderD1Ev(%"class.blink::PaintRecordBuilder"* %31) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67)
  call void @llvm.lifetime.end.p0i8(i64 736, i8* nonnull %26) #6
  br label %106

106:                                              ; preds = %16, %4, %105
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZN5blink14ScrollbarTheme26PaintTrackButtonsTickmarksERNS_15GraphicsContextERKNS_9ScrollbarERKNS_8IntPointE(%"class.blink::ScrollbarTheme"*, %"class.blink::GraphicsContext"* dereferenceable(112), %"class.blink::Scrollbar"* dereferenceable(224), %"class.blink::IntPoint"* dereferenceable(8)) local_unnamed_addr #3

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #3

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #3

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #3

declare void @_ZN5blink18PaintRecordBuilderC1Ev(%"class.blink::PaintRecordBuilder"*) unnamed_addr #3

declare void @_ZN5blink18PaintRecordBuilder12EndRecordingERKNS_17PropertyTreeStateE(%class.sk_sp.333* sret, %"class.blink::PaintRecordBuilder"*, %"class.blink::PropertyTreeState"* dereferenceable(24)) local_unnamed_addr #3

declare dereferenceable(24) %"class.blink::PropertyTreeState"* @_ZN5blink17PropertyTreeState4RootEv() local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink18PaintRecordBuilderD1Ev(%"class.blink::PaintRecordBuilder"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_9ScrollbarELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::Scrollbar"**
  %5 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #6
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #6
  %7 = icmp eq %"class.blink::Scrollbar"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::Scrollbar"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_9ScrollbarEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #6
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #6
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_9ScrollbarEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Scrollbar"*
  %4 = bitcast i8* %1 to void (%"class.blink::Scrollbar"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Scrollbar"*, %"class.blink::Visitor"*)**, void (%"class.blink::Scrollbar"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Scrollbar"*, %"class.blink::Visitor"*)*, void (%"class.blink::Scrollbar"*, %"class.blink::Visitor"*)** %5, i64 14
  %7 = load void (%"class.blink::Scrollbar"*, %"class.blink::Visitor"*)*, void (%"class.blink::Scrollbar"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Scrollbar"* %3, %"class.blink::Visitor"* %0) #6
  ret void
}

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
