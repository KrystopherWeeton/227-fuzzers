; ModuleID = '../../third_party/zlib/deflate.c'
source_filename = "../../third_party/zlib/deflate.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.config_s = type { i16, i16, i16, i16, i32 (%struct.internal_state*, i32)* }
%struct.internal_state = type { %struct.z_stream_s*, i32, i8*, i64, i8*, i64, i32, %struct.Cr_z_gz_header_s*, i64, i8, i32, [20 x i32], i32, i32, i32, i8*, i64, i16*, i16*, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [573 x %struct.ct_data_s], [61 x %struct.ct_data_s], [39 x %struct.ct_data_s], %struct.tree_desc_s, %struct.tree_desc_s, %struct.tree_desc_s, [16 x i16], [573 x i32], i32, i32, [573 x i8], i8*, i32, i32, i32, i64, i64, i32, i32, i16, i32, i64 }
%struct.z_stream_s = type { i8*, i32, i64, i8*, i32, i64, i8*, %struct.internal_state*, i8* (i8*, i32, i32)*, void (i8*, i8*)*, i8*, i32, i64, i64 }
%struct.Cr_z_gz_header_s = type { i32, i64, i32, i32, i8*, i32, i32, i8*, i32, i8*, i32, i32, i32 }
%struct.ct_data_s = type { %union.anon, %union.anon.0 }
%union.anon = type { i16 }
%union.anon.0 = type { i16 }
%struct.tree_desc_s = type { %struct.ct_data_s*, i32, %struct.static_tree_desc_s* }
%struct.static_tree_desc_s = type opaque

@Cr_z_deflate_copyright = hidden local_unnamed_addr constant [69 x i8] c" deflate 1.2.11 Copyright 1995-2017 Jean-loup Gailly and Mark Adler \00", align 16
@Cr_z_x86_cpu_enable_simd = external local_unnamed_addr global i32, align 4
@Cr_z_arm_cpu_enable_crc32 = external local_unnamed_addr global i32, align 4
@Cr_z_z_errmsg = external local_unnamed_addr constant [10 x i8*], align 16
@configuration_table = internal unnamed_addr constant [10 x %struct.config_s] [%struct.config_s { i16 0, i16 0, i16 0, i16 0, i32 (%struct.internal_state*, i32)* @deflate_stored }, %struct.config_s { i16 4, i16 4, i16 8, i16 4, i32 (%struct.internal_state*, i32)* @deflate_fast }, %struct.config_s { i16 4, i16 5, i16 16, i16 8, i32 (%struct.internal_state*, i32)* @deflate_fast }, %struct.config_s { i16 4, i16 6, i16 32, i16 32, i32 (%struct.internal_state*, i32)* @deflate_fast }, %struct.config_s { i16 4, i16 4, i16 16, i16 16, i32 (%struct.internal_state*, i32)* @deflate_slow }, %struct.config_s { i16 8, i16 16, i16 32, i16 32, i32 (%struct.internal_state*, i32)* @deflate_slow }, %struct.config_s { i16 8, i16 16, i16 128, i16 128, i32 (%struct.internal_state*, i32)* @deflate_slow }, %struct.config_s { i16 8, i16 32, i16 128, i16 256, i32 (%struct.internal_state*, i32)* @deflate_slow }, %struct.config_s { i16 32, i16 128, i16 258, i16 1024, i32 (%struct.internal_state*, i32)* @deflate_slow }, %struct.config_s { i16 32, i16 258, i16 258, i16 4096, i32 (%struct.internal_state*, i32)* @deflate_slow }], align 16
@Cr_z__length_code = external local_unnamed_addr constant [0 x i8], align 1
@Cr_z__dist_code = external local_unnamed_addr constant [0 x i8], align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @Cr_z_deflateInit_(%struct.z_stream_s*, i32, i8* readonly, i32) local_unnamed_addr #0 {
  %5 = tail call i32 @Cr_z_deflateInit2_(%struct.z_stream_s* %0, i32 %1, i32 8, i32 15, i32 8, i32 0, i8* %2, i32 %3)
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @Cr_z_deflateInit2_(%struct.z_stream_s*, i32, i32, i32, i32, i32, i8* readonly, i32) local_unnamed_addr #0 {
  tail call void @Cr_z_cpu_check_features() #8
  %9 = icmp eq i8* %6, null
  br i1 %9, label %224, label %10

10:                                               ; preds = %8
  %11 = load i8, i8* %6, align 1
  %12 = icmp eq i8 %11, 49
  %13 = icmp eq i32 %7, 112
  %14 = and i1 %13, %12
  br i1 %14, label %15, label %224

15:                                               ; preds = %10
  %16 = icmp eq %struct.z_stream_s* %0, null
  br i1 %16, label %224, label %17

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 6
  store i8* null, i8** %18, align 8
  %19 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 8
  %20 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %19, align 8
  %21 = icmp eq i8* (i8*, i32, i32)* %20, null
  br i1 %21, label %22, label %24

22:                                               ; preds = %17
  store i8* (i8*, i32, i32)* @Cr_z_zcalloc, i8* (i8*, i32, i32)** %19, align 8
  %23 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 10
  store i8* null, i8** %23, align 8
  br label %24

24:                                               ; preds = %22, %17
  %25 = phi i8* (i8*, i32, i32)* [ @Cr_z_zcalloc, %22 ], [ %20, %17 ]
  %26 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 9
  %27 = load void (i8*, i8*)*, void (i8*, i8*)** %26, align 8
  %28 = icmp eq void (i8*, i8*)* %27, null
  br i1 %28, label %29, label %30

29:                                               ; preds = %24
  store void (i8*, i8*)* @Cr_z_zcfree, void (i8*, i8*)** %26, align 8
  br label %30

30:                                               ; preds = %29, %24
  %31 = icmp eq i32 %1, -1
  %32 = select i1 %31, i32 6, i32 %1
  %33 = icmp slt i32 %3, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %30
  %35 = sub nsw i32 0, %3
  br label %41

36:                                               ; preds = %30
  %37 = icmp sgt i32 %3, 15
  %38 = add nsw i32 %3, -16
  %39 = select i1 %37, i32 %38, i32 %3
  %40 = select i1 %37, i32 2, i32 1
  br label %41

41:                                               ; preds = %36, %34
  %42 = phi i32 [ %35, %34 ], [ %39, %36 ]
  %43 = phi i32 [ 0, %34 ], [ %40, %36 ]
  %44 = add i32 %4, -1
  %45 = icmp ugt i32 %44, 8
  %46 = icmp ne i32 %2, 8
  %47 = or i1 %46, %45
  %48 = and i32 %42, -8
  %49 = icmp ne i32 %48, 8
  %50 = or i1 %47, %49
  %51 = icmp ugt i32 %32, 9
  %52 = or i1 %51, %50
  %53 = icmp ugt i32 %5, 4
  %54 = or i1 %53, %52
  br i1 %54, label %224, label %55

55:                                               ; preds = %41
  %56 = icmp eq i32 %42, 8
  %57 = icmp ne i32 %43, 1
  %58 = and i1 %56, %57
  br i1 %58, label %224, label %59

59:                                               ; preds = %55
  %60 = select i1 %56, i32 9, i32 %42
  %61 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 10
  %62 = load i8*, i8** %61, align 8
  %63 = tail call i8* %25(i8* %62, i32 1, i32 6032) #8
  %64 = icmp eq i8* %63, null
  br i1 %64, label %224, label %65

65:                                               ; preds = %59
  %66 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 7
  %67 = bitcast %struct.internal_state** %66 to i8**
  store i8* %63, i8** %67, align 8
  %68 = bitcast i8* %63 to %struct.z_stream_s**
  store %struct.z_stream_s* %0, %struct.z_stream_s** %68, align 8
  %69 = getelementptr inbounds i8, i8* %63, i64 8
  %70 = bitcast i8* %69 to i32*
  store i32 42, i32* %70, align 8
  %71 = getelementptr inbounds i8, i8* %63, i64 48
  %72 = bitcast i8* %71 to i32*
  store i32 %43, i32* %72, align 8
  %73 = getelementptr inbounds i8, i8* %63, i64 56
  %74 = bitcast i8* %73 to %struct.Cr_z_gz_header_s**
  store %struct.Cr_z_gz_header_s* null, %struct.Cr_z_gz_header_s** %74, align 8
  %75 = getelementptr inbounds i8, i8* %63, i64 164
  %76 = bitcast i8* %75 to i32*
  store i32 %60, i32* %76, align 4
  %77 = shl i32 1, %60
  %78 = getelementptr inbounds i8, i8* %63, i64 160
  %79 = bitcast i8* %78 to i32*
  store i32 %77, i32* %79, align 8
  %80 = add i32 %77, -1
  %81 = getelementptr inbounds i8, i8* %63, i64 168
  %82 = bitcast i8* %81 to i32*
  store i32 %80, i32* %82, align 8
  %83 = add nuw nsw i32 %4, 7
  %84 = getelementptr inbounds i8, i8* %63, i64 216
  %85 = bitcast i8* %84 to i32*
  %86 = load i32, i32* @Cr_z_x86_cpu_enable_simd, align 4
  %87 = load i32, i32* @Cr_z_arm_cpu_enable_crc32, align 4
  %88 = or i32 %87, %86
  %89 = icmp ne i32 %88, 0
  %90 = icmp ult i32 %83, 15
  %91 = and i1 %90, %89
  %92 = select i1 %91, i32 15, i32 %83
  store i32 %92, i32* %85, align 8
  %93 = shl i32 1, %92
  %94 = getelementptr inbounds i8, i8* %63, i64 212
  %95 = bitcast i8* %94 to i32*
  store i32 %93, i32* %95, align 4
  %96 = add nsw i32 %93, -1
  %97 = getelementptr inbounds i8, i8* %63, i64 220
  %98 = bitcast i8* %97 to i32*
  store i32 %96, i32* %98, align 4
  %99 = trunc i32 %92 to i8
  %100 = add nuw nsw i8 %99, 2
  %101 = udiv i8 %100, 3
  %102 = zext i8 %101 to i32
  %103 = getelementptr inbounds i8, i8* %63, i64 224
  %104 = bitcast i8* %103 to i32*
  store i32 %102, i32* %104, align 8
  %105 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %19, align 8
  %106 = load i8*, i8** %61, align 8
  %107 = add i32 %77, 8
  %108 = tail call i8* %105(i8* %106, i32 %107, i32 2) #8
  %109 = getelementptr inbounds i8, i8* %63, i64 176
  %110 = bitcast i8* %109 to i8**
  store i8* %108, i8** %110, align 8
  %111 = load i32, i32* %79, align 8
  %112 = add i32 %111, 8
  %113 = zext i32 %112 to i64
  %114 = shl nuw nsw i64 %113, 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %108, i8 0, i64 %114, i1 false)
  %115 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %19, align 8
  %116 = load i8*, i8** %61, align 8
  %117 = load i32, i32* %79, align 8
  %118 = tail call i8* %115(i8* %116, i32 %117, i32 2) #8
  %119 = getelementptr inbounds i8, i8* %63, i64 192
  %120 = bitcast i8* %119 to i8**
  store i8* %118, i8** %120, align 8
  %121 = load i32, i32* %79, align 8
  %122 = zext i32 %121 to i64
  %123 = shl nuw nsw i64 %122, 1
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %118, i8 0, i64 %123, i1 false)
  %124 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %19, align 8
  %125 = load i8*, i8** %61, align 8
  %126 = load i32, i32* %95, align 4
  %127 = tail call i8* %124(i8* %125, i32 %126, i32 2) #8
  %128 = getelementptr inbounds i8, i8* %63, i64 200
  %129 = bitcast i8* %128 to i16**
  %130 = bitcast i8* %128 to i8**
  store i8* %127, i8** %130, align 8
  %131 = getelementptr inbounds i8, i8* %63, i64 6024
  %132 = bitcast i8* %131 to i64*
  store i64 0, i64* %132, align 8
  %133 = add nuw nsw i32 %4, 6
  %134 = shl i32 1, %133
  %135 = getelementptr inbounds i8, i8* %63, i64 5976
  %136 = bitcast i8* %135 to i32*
  store i32 %134, i32* %136, align 8
  %137 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %19, align 8
  %138 = load i8*, i8** %61, align 8
  %139 = tail call i8* %137(i8* %138, i32 %134, i32 4) #8
  %140 = getelementptr inbounds i8, i8* %63, i64 16
  %141 = bitcast i8* %140 to i8**
  store i8* %139, i8** %141, align 8
  %142 = load i32, i32* %136, align 8
  %143 = zext i32 %142 to i64
  %144 = shl nuw nsw i64 %143, 2
  %145 = getelementptr inbounds i8, i8* %63, i64 24
  %146 = bitcast i8* %145 to i64*
  store i64 %144, i64* %146, align 8
  %147 = load i8*, i8** %110, align 8
  %148 = icmp eq i8* %147, null
  br i1 %148, label %158, label %149

149:                                              ; preds = %65
  %150 = bitcast i8* %119 to i16**
  %151 = load i16*, i16** %150, align 8
  %152 = icmp eq i16* %151, null
  br i1 %152, label %158, label %153

153:                                              ; preds = %149
  %154 = load i16*, i16** %129, align 8
  %155 = icmp eq i16* %154, null
  %156 = icmp eq i8* %139, null
  %157 = or i1 %156, %155
  br i1 %157, label %158, label %162

158:                                              ; preds = %153, %149, %65
  store i32 666, i32* %70, align 8
  %159 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @Cr_z_z_errmsg, i64 0, i64 6) to i64*), align 16
  %160 = bitcast i8** %18 to i64*
  store i64 %159, i64* %160, align 8
  %161 = tail call i32 @Cr_z_deflateEnd(%struct.z_stream_s* nonnull %0)
  br label %224

162:                                              ; preds = %153
  %163 = getelementptr inbounds i8, i8* %139, i64 %143
  %164 = getelementptr inbounds i8, i8* %63, i64 5968
  %165 = bitcast i8* %164 to i8**
  store i8* %163, i8** %165, align 8
  %166 = mul i32 %142, 3
  %167 = add i32 %166, -3
  %168 = getelementptr inbounds i8, i8* %63, i64 5984
  %169 = bitcast i8* %168 to i32*
  store i32 %167, i32* %169, align 8
  %170 = getelementptr inbounds i8, i8* %63, i64 276
  %171 = bitcast i8* %170 to i32*
  store i32 %32, i32* %171, align 4
  %172 = getelementptr inbounds i8, i8* %63, i64 280
  %173 = bitcast i8* %172 to i32*
  store i32 %5, i32* %173, align 8
  %174 = getelementptr inbounds i8, i8* %63, i64 72
  store i8 8, i8* %174, align 8
  %175 = tail call i32 @Cr_z_deflateResetKeep(%struct.z_stream_s* nonnull %0) #8
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %224

177:                                              ; preds = %162
  %178 = load %struct.internal_state*, %struct.internal_state** %66, align 8
  %179 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %178, i64 0, i32 12
  %180 = load i32, i32* %179, align 8
  %181 = zext i32 %180 to i64
  %182 = shl nuw nsw i64 %181, 1
  %183 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %178, i64 0, i32 16
  store i64 %182, i64* %183, align 8
  %184 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %178, i64 0, i32 18
  %185 = load i16*, i16** %184, align 8
  %186 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %178, i64 0, i32 20
  %187 = load i32, i32* %186, align 4
  %188 = add i32 %187, -1
  %189 = zext i32 %188 to i64
  %190 = getelementptr inbounds i16, i16* %185, i64 %189
  store i16 0, i16* %190, align 2
  %191 = bitcast i16** %184 to i8**
  %192 = load i8*, i8** %191, align 8
  %193 = load i32, i32* %186, align 4
  %194 = add i32 %193, -1
  %195 = zext i32 %194 to i64
  %196 = shl nuw nsw i64 %195, 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %192, i8 0, i64 %196, i1 false) #8
  %197 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %178, i64 0, i32 34
  %198 = load i32, i32* %197, align 4
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds [10 x %struct.config_s], [10 x %struct.config_s]* @configuration_table, i64 0, i64 %199, i32 1
  %201 = load i16, i16* %200, align 2
  %202 = zext i16 %201 to i32
  %203 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %178, i64 0, i32 33
  store i32 %202, i32* %203, align 8
  %204 = getelementptr inbounds [10 x %struct.config_s], [10 x %struct.config_s]* @configuration_table, i64 0, i64 %199, i32 0
  %205 = load i16, i16* %204, align 16
  %206 = zext i16 %205 to i32
  %207 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %178, i64 0, i32 36
  store i32 %206, i32* %207, align 4
  %208 = getelementptr inbounds [10 x %struct.config_s], [10 x %struct.config_s]* @configuration_table, i64 0, i64 %199, i32 2
  %209 = load i16, i16* %208, align 4
  %210 = zext i16 %209 to i32
  %211 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %178, i64 0, i32 37
  store i32 %210, i32* %211, align 8
  %212 = getelementptr inbounds [10 x %struct.config_s], [10 x %struct.config_s]* @configuration_table, i64 0, i64 %199, i32 3
  %213 = load i16, i16* %212, align 2
  %214 = zext i16 %213 to i32
  %215 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %178, i64 0, i32 32
  store i32 %214, i32* %215, align 4
  %216 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %178, i64 0, i32 28
  store i32 0, i32* %216, align 4
  %217 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %178, i64 0, i32 24
  store i64 0, i64* %217, align 8
  %218 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %178, i64 0, i32 30
  store i32 0, i32* %218, align 4
  %219 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %178, i64 0, i32 56
  store i32 0, i32* %219, align 4
  %220 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %178, i64 0, i32 31
  store i32 2, i32* %220, align 8
  %221 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %178, i64 0, i32 25
  store i32 2, i32* %221, align 8
  %222 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %178, i64 0, i32 27
  store i32 0, i32* %222, align 8
  %223 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %178, i64 0, i32 19
  store i32 0, i32* %223, align 8
  br label %224

224:                                              ; preds = %177, %162, %59, %41, %55, %15, %8, %10, %158
  %225 = phi i32 [ -4, %158 ], [ -6, %10 ], [ -6, %8 ], [ -2, %15 ], [ -2, %55 ], [ -2, %41 ], [ -4, %59 ], [ %175, %162 ], [ 0, %177 ]
  ret i32 %225
}

declare void @Cr_z_cpu_check_features() local_unnamed_addr #1

declare i8* @Cr_z_zcalloc(i8*, i32, i32) #1

declare void @Cr_z_zcfree(i8*, i8*) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @Cr_z_deflateEnd(%struct.z_stream_s*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.z_stream_s* %0, null
  br i1 %2, label %72, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 8
  %5 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %4, align 8
  %6 = icmp eq i8* (i8*, i32, i32)* %5, null
  br i1 %6, label %72, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 9
  %9 = load void (i8*, i8*)*, void (i8*, i8*)** %8, align 8
  %10 = icmp eq void (i8*, i8*)* %9, null
  br i1 %10, label %72, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 7
  %13 = load %struct.internal_state*, %struct.internal_state** %12, align 8
  %14 = icmp eq %struct.internal_state* %13, null
  br i1 %14, label %72, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %13, i64 0, i32 0
  %17 = load %struct.z_stream_s*, %struct.z_stream_s** %16, align 8
  %18 = icmp eq %struct.z_stream_s* %17, %0
  br i1 %18, label %19, label %72

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %13, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  switch i32 %21, label %72 [
    i32 42, label %22
    i32 57, label %22
    i32 69, label %22
    i32 73, label %22
    i32 91, label %22
    i32 103, label %22
    i32 113, label %22
    i32 666, label %22
  ]

22:                                               ; preds = %19, %19, %19, %19, %19, %19, %19, %19
  %23 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %13, i64 0, i32 2
  %24 = load i8*, i8** %23, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %30, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 10
  %28 = load i8*, i8** %27, align 8
  tail call void %9(i8* %28, i8* nonnull %24) #8
  %29 = load %struct.internal_state*, %struct.internal_state** %12, align 8
  br label %30

30:                                               ; preds = %22, %26
  %31 = phi %struct.internal_state* [ %13, %22 ], [ %29, %26 ]
  %32 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %31, i64 0, i32 18
  %33 = load i16*, i16** %32, align 8
  %34 = icmp eq i16* %33, null
  br i1 %34, label %41, label %35

35:                                               ; preds = %30
  %36 = load void (i8*, i8*)*, void (i8*, i8*)** %8, align 8
  %37 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 10
  %38 = load i8*, i8** %37, align 8
  %39 = bitcast i16* %33 to i8*
  tail call void %36(i8* %38, i8* nonnull %39) #8
  %40 = load %struct.internal_state*, %struct.internal_state** %12, align 8
  br label %41

41:                                               ; preds = %30, %35
  %42 = phi %struct.internal_state* [ %31, %30 ], [ %40, %35 ]
  %43 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %42, i64 0, i32 17
  %44 = load i16*, i16** %43, align 8
  %45 = icmp eq i16* %44, null
  br i1 %45, label %52, label %46

46:                                               ; preds = %41
  %47 = load void (i8*, i8*)*, void (i8*, i8*)** %8, align 8
  %48 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 10
  %49 = load i8*, i8** %48, align 8
  %50 = bitcast i16* %44 to i8*
  tail call void %47(i8* %49, i8* nonnull %50) #8
  %51 = load %struct.internal_state*, %struct.internal_state** %12, align 8
  br label %52

52:                                               ; preds = %41, %46
  %53 = phi %struct.internal_state* [ %42, %41 ], [ %51, %46 ]
  %54 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %53, i64 0, i32 15
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, null
  br i1 %56, label %57, label %59

57:                                               ; preds = %52
  %58 = bitcast %struct.internal_state* %53 to i8*
  br label %65

59:                                               ; preds = %52
  %60 = load void (i8*, i8*)*, void (i8*, i8*)** %8, align 8
  %61 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 10
  %62 = load i8*, i8** %61, align 8
  tail call void %60(i8* %62, i8* nonnull %55) #8
  %63 = bitcast %struct.internal_state** %12 to i8**
  %64 = load i8*, i8** %63, align 8
  br label %65

65:                                               ; preds = %57, %59
  %66 = phi i8* [ %58, %57 ], [ %64, %59 ]
  %67 = load void (i8*, i8*)*, void (i8*, i8*)** %8, align 8
  %68 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 10
  %69 = load i8*, i8** %68, align 8
  tail call void %67(i8* %69, i8* %66) #8
  store %struct.internal_state* null, %struct.internal_state** %12, align 8
  %70 = icmp eq i32 %21, 113
  %71 = select i1 %70, i32 -3, i32 0
  br label %72

72:                                               ; preds = %11, %15, %19, %1, %3, %7, %65
  %73 = phi i32 [ %71, %65 ], [ -2, %7 ], [ -2, %3 ], [ -2, %1 ], [ -2, %19 ], [ -2, %15 ], [ -2, %11 ]
  ret i32 %73
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @Cr_z_deflateReset(%struct.z_stream_s*) local_unnamed_addr #0 {
  %2 = tail call i32 @Cr_z_deflateResetKeep(%struct.z_stream_s* %0)
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %4, label %52

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 7
  %6 = load %struct.internal_state*, %struct.internal_state** %5, align 8
  %7 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %6, i64 0, i32 12
  %8 = load i32, i32* %7, align 8
  %9 = zext i32 %8 to i64
  %10 = shl nuw nsw i64 %9, 1
  %11 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %6, i64 0, i32 16
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %6, i64 0, i32 18
  %13 = load i16*, i16** %12, align 8
  %14 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %6, i64 0, i32 20
  %15 = load i32, i32* %14, align 4
  %16 = add i32 %15, -1
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds i16, i16* %13, i64 %17
  store i16 0, i16* %18, align 2
  %19 = bitcast i16** %12 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = load i32, i32* %14, align 4
  %22 = add i32 %21, -1
  %23 = zext i32 %22 to i64
  %24 = shl nuw nsw i64 %23, 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %20, i8 0, i64 %24, i1 false) #8
  %25 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %6, i64 0, i32 34
  %26 = load i32, i32* %25, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [10 x %struct.config_s], [10 x %struct.config_s]* @configuration_table, i64 0, i64 %27, i32 1
  %29 = load i16, i16* %28, align 2
  %30 = zext i16 %29 to i32
  %31 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %6, i64 0, i32 33
  store i32 %30, i32* %31, align 8
  %32 = getelementptr inbounds [10 x %struct.config_s], [10 x %struct.config_s]* @configuration_table, i64 0, i64 %27, i32 0
  %33 = load i16, i16* %32, align 16
  %34 = zext i16 %33 to i32
  %35 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %6, i64 0, i32 36
  store i32 %34, i32* %35, align 4
  %36 = getelementptr inbounds [10 x %struct.config_s], [10 x %struct.config_s]* @configuration_table, i64 0, i64 %27, i32 2
  %37 = load i16, i16* %36, align 4
  %38 = zext i16 %37 to i32
  %39 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %6, i64 0, i32 37
  store i32 %38, i32* %39, align 8
  %40 = getelementptr inbounds [10 x %struct.config_s], [10 x %struct.config_s]* @configuration_table, i64 0, i64 %27, i32 3
  %41 = load i16, i16* %40, align 2
  %42 = zext i16 %41 to i32
  %43 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %6, i64 0, i32 32
  store i32 %42, i32* %43, align 4
  %44 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %6, i64 0, i32 28
  store i32 0, i32* %44, align 4
  %45 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %6, i64 0, i32 24
  store i64 0, i64* %45, align 8
  %46 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %6, i64 0, i32 30
  store i32 0, i32* %46, align 4
  %47 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %6, i64 0, i32 56
  store i32 0, i32* %47, align 4
  %48 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %6, i64 0, i32 31
  store i32 2, i32* %48, align 8
  %49 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %6, i64 0, i32 25
  store i32 2, i32* %49, align 8
  %50 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %6, i64 0, i32 27
  store i32 0, i32* %50, align 8
  %51 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %6, i64 0, i32 19
  store i32 0, i32* %51, align 8
  br label %52

52:                                               ; preds = %4, %1
  ret i32 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @Cr_z_deflateSetDictionary(%struct.z_stream_s*, i8*, i32) local_unnamed_addr #0 {
  %4 = icmp eq %struct.z_stream_s* %0, null
  br i1 %4, label %150, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 8
  %7 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %6, align 8
  %8 = icmp eq i8* (i8*, i32, i32)* %7, null
  br i1 %8, label %150, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 9
  %11 = load void (i8*, i8*)*, void (i8*, i8*)** %10, align 8
  %12 = icmp eq void (i8*, i8*)* %11, null
  br i1 %12, label %150, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 7
  %15 = load %struct.internal_state*, %struct.internal_state** %14, align 8
  %16 = icmp eq %struct.internal_state* %15, null
  br i1 %16, label %150, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 0
  %19 = load %struct.z_stream_s*, %struct.z_stream_s** %18, align 8
  %20 = icmp eq %struct.z_stream_s* %19, %0
  br i1 %20, label %21, label %150

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 1
  %23 = load i32, i32* %22, align 8
  switch i32 %23, label %150 [
    i32 42, label %24
    i32 57, label %24
    i32 69, label %24
    i32 73, label %24
    i32 91, label %24
    i32 103, label %24
    i32 113, label %24
    i32 666, label %24
  ]

24:                                               ; preds = %21, %21, %21, %21, %21, %21, %21, %21
  %25 = icmp eq i8* %1, null
  br i1 %25, label %150, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 6
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 2
  br i1 %29, label %150, label %30

30:                                               ; preds = %26
  %31 = icmp eq i32 %28, 1
  %32 = xor i1 %31, true
  %33 = icmp eq i32 %23, 42
  %34 = or i1 %33, %32
  br i1 %34, label %35, label %150

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 30
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %150

39:                                               ; preds = %35
  br i1 %31, label %40, label %44

40:                                               ; preds = %39
  %41 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 12
  %42 = load i64, i64* %41, align 8
  %43 = tail call i64 @Cr_z_adler32(i64 %42, i8* nonnull %1, i32 %2) #8
  store i64 %43, i64* %41, align 8
  br label %44

44:                                               ; preds = %40, %39
  store i32 0, i32* %27, align 8
  %45 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 12
  %46 = load i32, i32* %45, align 8
  %47 = icmp ugt i32 %46, %2
  br i1 %47, label %73, label %48

48:                                               ; preds = %44
  %49 = icmp eq i32 %28, 0
  br i1 %49, label %50, label %68

50:                                               ; preds = %48
  %51 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 18
  %52 = load i16*, i16** %51, align 8
  %53 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 20
  %54 = load i32, i32* %53, align 4
  %55 = add i32 %54, -1
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds i16, i16* %52, i64 %56
  store i16 0, i16* %57, align 2
  %58 = bitcast i16** %51 to i8**
  %59 = load i8*, i8** %58, align 8
  %60 = load i32, i32* %53, align 4
  %61 = add i32 %60, -1
  %62 = zext i32 %61 to i64
  %63 = shl nuw nsw i64 %62, 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %59, i8 0, i64 %63, i1 false)
  %64 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 28
  store i32 0, i32* %64, align 4
  %65 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 24
  store i64 0, i64* %65, align 8
  %66 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 56
  store i32 0, i32* %66, align 4
  %67 = load i32, i32* %45, align 8
  br label %68

68:                                               ; preds = %50, %48
  %69 = phi i32 [ %67, %50 ], [ %46, %48 ]
  %70 = sub i32 %2, %69
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds i8, i8* %1, i64 %71
  br label %73

73:                                               ; preds = %44, %68
  %74 = phi i8* [ %72, %68 ], [ %1, %44 ]
  %75 = phi i32 [ %69, %68 ], [ %2, %44 ]
  %76 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 1
  %77 = load i32, i32* %76, align 8
  %78 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 0
  %79 = bitcast %struct.z_stream_s* %0 to i64*
  %80 = load i64, i64* %79, align 8
  store i32 %75, i32* %76, align 8
  store i8* %74, i8** %78, align 8
  tail call fastcc void @fill_window(%struct.internal_state* nonnull %15)
  %81 = load i32, i32* %36, align 4
  %82 = icmp ugt i32 %81, 2
  %83 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 28
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %140

85:                                               ; preds = %73
  %86 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 19
  %87 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 23
  %88 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 15
  %89 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 22
  %90 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 18
  %91 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 17
  %92 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 14
  br label %93

93:                                               ; preds = %85, %136
  %94 = phi i32 [ %84, %85 ], [ %139, %136 ]
  %95 = phi i32 [ %81, %85 ], [ %137, %136 ]
  %96 = add i32 %95, -2
  br label %97

97:                                               ; preds = %132, %93
  %98 = phi i32 [ %94, %93 ], [ %133, %132 ]
  %99 = phi i32 [ %96, %93 ], [ %134, %132 ]
  %100 = trunc i32 %98 to i16
  %101 = load i32, i32* @Cr_z_x86_cpu_enable_simd, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %105, label %103

103:                                              ; preds = %97
  %104 = tail call fastcc zeroext i16 @insert_string_simd(%struct.internal_state* %15, i16 zeroext %100) #8
  br label %132

105:                                              ; preds = %97
  %106 = load i32, i32* %86, align 8
  %107 = load i32, i32* %87, align 8
  %108 = shl i32 %106, %107
  %109 = load i8*, i8** %88, align 8
  %110 = and i32 %98, 65535
  %111 = add nuw nsw i32 %110, 2
  %112 = zext i32 %111 to i64
  %113 = getelementptr inbounds i8, i8* %109, i64 %112
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i32
  %116 = xor i32 %108, %115
  %117 = load i32, i32* %89, align 4
  %118 = and i32 %116, %117
  store i32 %118, i32* %86, align 8
  %119 = load i16*, i16** %90, align 8
  %120 = zext i32 %118 to i64
  %121 = getelementptr inbounds i16, i16* %119, i64 %120
  %122 = load i16, i16* %121, align 2
  %123 = load i16*, i16** %91, align 8
  %124 = load i32, i32* %92, align 8
  %125 = and i32 %124, %110
  %126 = zext i32 %125 to i64
  %127 = getelementptr inbounds i16, i16* %123, i64 %126
  store i16 %122, i16* %127, align 2
  %128 = load i16*, i16** %90, align 8
  %129 = load i32, i32* %86, align 8
  %130 = zext i32 %129 to i64
  %131 = getelementptr inbounds i16, i16* %128, i64 %130
  store i16 %100, i16* %131, align 2
  br label %132

132:                                              ; preds = %103, %105
  %133 = add i32 %98, 1
  %134 = add i32 %99, -1
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %97

136:                                              ; preds = %132
  store i32 %133, i32* %83, align 4
  store i32 2, i32* %36, align 4
  tail call fastcc void @fill_window(%struct.internal_state* %15)
  %137 = load i32, i32* %36, align 4
  %138 = icmp ugt i32 %137, 2
  %139 = load i32, i32* %83, align 4
  br i1 %138, label %93, label %140

140:                                              ; preds = %136, %73
  %141 = phi i32 [ %81, %73 ], [ %137, %136 ]
  %142 = phi i32 [ %84, %73 ], [ %139, %136 ]
  %143 = add i32 %142, %141
  store i32 %143, i32* %83, align 4
  %144 = zext i32 %143 to i64
  %145 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 24
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 56
  store i32 %141, i32* %146, align 4
  store i32 0, i32* %36, align 4
  %147 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 31
  store i32 2, i32* %147, align 8
  %148 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 25
  store i32 2, i32* %148, align 8
  %149 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 27
  store i32 0, i32* %149, align 8
  store i64 %80, i64* %79, align 8
  store i32 %77, i32* %76, align 8
  store i32 %28, i32* %27, align 8
  br label %150

150:                                              ; preds = %30, %13, %17, %21, %3, %5, %9, %26, %35, %24, %140
  %151 = phi i32 [ 0, %140 ], [ -2, %24 ], [ -2, %35 ], [ -2, %26 ], [ -2, %9 ], [ -2, %5 ], [ -2, %3 ], [ -2, %21 ], [ -2, %17 ], [ -2, %13 ], [ -2, %30 ]
  ret i32 %151
}

declare i64 @Cr_z_adler32(i64, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @fill_window(%struct.internal_state*) unnamed_addr #0 {
  %2 = load i32, i32* @Cr_z_x86_cpu_enable_simd, align 4
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %5, label %4

4:                                                ; preds = %1
  tail call void @Cr_z_fill_window_sse(%struct.internal_state* %0) #8
  br label %373

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 12
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 16
  %9 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 30
  %10 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 28
  %11 = add i32 %7, -262
  %12 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 15
  %13 = zext i32 %7 to i64
  %14 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 29
  %15 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 24
  %16 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 20
  %17 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 18
  %18 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 17
  %19 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 0
  %20 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 56
  %21 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 19
  %22 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 23
  %23 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 22
  %24 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 14
  %25 = load i32, i32* %9, align 4
  br label %26

26:                                               ; preds = %339, %5
  %27 = phi i32 [ %340, %339 ], [ %7, %5 ]
  %28 = phi i32 [ %332, %339 ], [ %25, %5 ]
  %29 = load i64, i64* %8, align 8
  %30 = load i32, i32* %10, align 4
  %31 = trunc i64 %29 to i32
  %32 = sub i32 %31, %28
  %33 = sub i32 %32, %30
  %34 = add i32 %11, %27
  %35 = icmp ult i32 %30, %34
  br i1 %35, label %218, label %36

36:                                               ; preds = %26
  %37 = load i8*, i8** %12, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %13
  %39 = sub i32 %7, %33
  %40 = zext i32 %39 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %37, i8* align 1 %38, i64 %40, i1 false) #8
  %41 = load i32, i32* %14, align 8
  %42 = sub i32 %41, %7
  store i32 %42, i32* %14, align 8
  %43 = load i32, i32* %10, align 4
  %44 = sub i32 %43, %7
  store i32 %44, i32* %10, align 4
  %45 = load i64, i64* %15, align 8
  %46 = sub nsw i64 %45, %13
  store i64 %46, i64* %15, align 8
  %47 = load i32, i32* %6, align 8
  %48 = load i32, i32* %16, align 4
  %49 = load i16*, i16** %17, align 8
  %50 = zext i32 %48 to i64
  %51 = getelementptr inbounds i16, i16* %49, i64 %50
  %52 = add i32 %48, -1
  %53 = zext i32 %52 to i64
  %54 = add nuw nsw i64 %53, 1
  %55 = icmp ult i64 %54, 8
  br i1 %55, label %119, label %56

56:                                               ; preds = %36
  %57 = and i64 %54, 8589934584
  %58 = trunc i64 %57 to i32
  %59 = sub i32 %48, %58
  %60 = sub nsw i64 0, %57
  %61 = getelementptr i16, i16* %51, i64 %60
  %62 = insertelement <8 x i32> undef, i32 %47, i32 0
  %63 = shufflevector <8 x i32> %62, <8 x i32> undef, <8 x i32> zeroinitializer
  %64 = add nsw i64 %57, -8
  %65 = lshr exact i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 1
  %68 = icmp eq i64 %64, 0
  br i1 %68, label %101, label %69

69:                                               ; preds = %56
  %70 = sub nuw nsw i64 %66, %67
  %71 = getelementptr i16, i16* %51, i64 -1
  %72 = getelementptr inbounds i16, i16* %71, i64 -7
  %73 = getelementptr i16, i16* %51, i64 -1
  %74 = getelementptr inbounds i16, i16* %73, i64 -7
  br label %75

75:                                               ; preds = %75, %69
  %76 = phi i64 [ 0, %69 ], [ %98, %75 ]
  %77 = phi i64 [ %70, %69 ], [ %99, %75 ]
  %78 = sub i64 0, %76
  %79 = getelementptr inbounds i16, i16* %72, i64 %78
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2
  %82 = shufflevector <8 x i16> %81, <8 x i16> undef, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %83 = zext <8 x i16> %82 to <8 x i32>
  %84 = call <8 x i32> @llvm.usub.sat.v8i32(<8 x i32> %83, <8 x i32> %63)
  %85 = trunc <8 x i32> %84 to <8 x i16>
  %86 = shufflevector <8 x i16> %85, <8 x i16> undef, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %87 = bitcast i16* %79 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %87, align 2
  %88 = sub nuw nsw i64 -8, %76
  %89 = getelementptr inbounds i16, i16* %74, i64 %88
  %90 = bitcast i16* %89 to <8 x i16>*
  %91 = load <8 x i16>, <8 x i16>* %90, align 2
  %92 = shufflevector <8 x i16> %91, <8 x i16> undef, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %93 = zext <8 x i16> %92 to <8 x i32>
  %94 = call <8 x i32> @llvm.usub.sat.v8i32(<8 x i32> %93, <8 x i32> %63)
  %95 = trunc <8 x i32> %94 to <8 x i16>
  %96 = shufflevector <8 x i16> %95, <8 x i16> undef, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %97 = bitcast i16* %89 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %97, align 2
  %98 = add i64 %76, 16
  %99 = add i64 %77, -2
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %75, !llvm.loop !2

101:                                              ; preds = %75, %56
  %102 = phi i64 [ 0, %56 ], [ %98, %75 ]
  %103 = icmp eq i64 %67, 0
  br i1 %103, label %117, label %104

104:                                              ; preds = %101
  %105 = sub i64 0, %102
  %106 = getelementptr i16, i16* %51, i64 -1
  %107 = getelementptr inbounds i16, i16* %106, i64 -7
  %108 = getelementptr inbounds i16, i16* %107, i64 %105
  %109 = bitcast i16* %108 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2
  %111 = shufflevector <8 x i16> %110, <8 x i16> undef, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %112 = zext <8 x i16> %111 to <8 x i32>
  %113 = call <8 x i32> @llvm.usub.sat.v8i32(<8 x i32> %112, <8 x i32> %63)
  %114 = trunc <8 x i32> %113 to <8 x i16>
  %115 = shufflevector <8 x i16> %114, <8 x i16> undef, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %116 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %115, <8 x i16>* %116, align 2
  br label %117

117:                                              ; preds = %101, %104
  %118 = icmp eq i64 %54, %57
  br i1 %118, label %132, label %119

119:                                              ; preds = %117, %36
  %120 = phi i32 [ %48, %36 ], [ %59, %117 ]
  %121 = phi i16* [ %51, %36 ], [ %61, %117 ]
  br label %122

122:                                              ; preds = %119, %122
  %123 = phi i32 [ %130, %122 ], [ %120, %119 ]
  %124 = phi i16* [ %125, %122 ], [ %121, %119 ]
  %125 = getelementptr inbounds i16, i16* %124, i64 -1
  %126 = load i16, i16* %125, align 2
  %127 = zext i16 %126 to i32
  %128 = tail call i32 @llvm.usub.sat.i32(i32 %127, i32 %47) #8
  %129 = trunc i32 %128 to i16
  store i16 %129, i16* %125, align 2
  %130 = add i32 %123, -1
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %122, !llvm.loop !4

132:                                              ; preds = %122, %117
  %133 = load i16*, i16** %18, align 8
  %134 = zext i32 %47 to i64
  %135 = getelementptr inbounds i16, i16* %133, i64 %134
  %136 = add i32 %47, -1
  %137 = zext i32 %136 to i64
  %138 = add nuw nsw i64 %137, 1
  %139 = icmp ult i64 %138, 8
  br i1 %139, label %203, label %140

140:                                              ; preds = %132
  %141 = and i64 %138, 8589934584
  %142 = trunc i64 %141 to i32
  %143 = sub i32 %47, %142
  %144 = sub nsw i64 0, %141
  %145 = getelementptr i16, i16* %135, i64 %144
  %146 = insertelement <8 x i32> undef, i32 %47, i32 0
  %147 = shufflevector <8 x i32> %146, <8 x i32> undef, <8 x i32> zeroinitializer
  %148 = add nsw i64 %141, -8
  %149 = lshr exact i64 %148, 3
  %150 = add nuw nsw i64 %149, 1
  %151 = and i64 %150, 1
  %152 = icmp eq i64 %148, 0
  br i1 %152, label %185, label %153

153:                                              ; preds = %140
  %154 = sub nuw nsw i64 %150, %151
  %155 = getelementptr i16, i16* %135, i64 -1
  %156 = getelementptr inbounds i16, i16* %155, i64 -7
  %157 = getelementptr i16, i16* %135, i64 -1
  %158 = getelementptr inbounds i16, i16* %157, i64 -7
  br label %159

159:                                              ; preds = %159, %153
  %160 = phi i64 [ 0, %153 ], [ %182, %159 ]
  %161 = phi i64 [ %154, %153 ], [ %183, %159 ]
  %162 = sub i64 0, %160
  %163 = getelementptr inbounds i16, i16* %156, i64 %162
  %164 = bitcast i16* %163 to <8 x i16>*
  %165 = load <8 x i16>, <8 x i16>* %164, align 2
  %166 = shufflevector <8 x i16> %165, <8 x i16> undef, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %167 = zext <8 x i16> %166 to <8 x i32>
  %168 = call <8 x i32> @llvm.usub.sat.v8i32(<8 x i32> %167, <8 x i32> %147)
  %169 = trunc <8 x i32> %168 to <8 x i16>
  %170 = shufflevector <8 x i16> %169, <8 x i16> undef, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %171 = bitcast i16* %163 to <8 x i16>*
  store <8 x i16> %170, <8 x i16>* %171, align 2
  %172 = sub nuw nsw i64 -8, %160
  %173 = getelementptr inbounds i16, i16* %158, i64 %172
  %174 = bitcast i16* %173 to <8 x i16>*
  %175 = load <8 x i16>, <8 x i16>* %174, align 2
  %176 = shufflevector <8 x i16> %175, <8 x i16> undef, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %177 = zext <8 x i16> %176 to <8 x i32>
  %178 = call <8 x i32> @llvm.usub.sat.v8i32(<8 x i32> %177, <8 x i32> %147)
  %179 = trunc <8 x i32> %178 to <8 x i16>
  %180 = shufflevector <8 x i16> %179, <8 x i16> undef, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %181 = bitcast i16* %173 to <8 x i16>*
  store <8 x i16> %180, <8 x i16>* %181, align 2
  %182 = add i64 %160, 16
  %183 = add i64 %161, -2
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %185, label %159, !llvm.loop !6

185:                                              ; preds = %159, %140
  %186 = phi i64 [ 0, %140 ], [ %182, %159 ]
  %187 = icmp eq i64 %151, 0
  br i1 %187, label %201, label %188

188:                                              ; preds = %185
  %189 = sub i64 0, %186
  %190 = getelementptr i16, i16* %135, i64 -1
  %191 = getelementptr inbounds i16, i16* %190, i64 -7
  %192 = getelementptr inbounds i16, i16* %191, i64 %189
  %193 = bitcast i16* %192 to <8 x i16>*
  %194 = load <8 x i16>, <8 x i16>* %193, align 2
  %195 = shufflevector <8 x i16> %194, <8 x i16> undef, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %196 = zext <8 x i16> %195 to <8 x i32>
  %197 = call <8 x i32> @llvm.usub.sat.v8i32(<8 x i32> %196, <8 x i32> %147)
  %198 = trunc <8 x i32> %197 to <8 x i16>
  %199 = shufflevector <8 x i16> %198, <8 x i16> undef, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %200 = bitcast i16* %192 to <8 x i16>*
  store <8 x i16> %199, <8 x i16>* %200, align 2
  br label %201

201:                                              ; preds = %185, %188
  %202 = icmp eq i64 %138, %141
  br i1 %202, label %216, label %203

203:                                              ; preds = %201, %132
  %204 = phi i32 [ %47, %132 ], [ %143, %201 ]
  %205 = phi i16* [ %135, %132 ], [ %145, %201 ]
  br label %206

206:                                              ; preds = %203, %206
  %207 = phi i32 [ %214, %206 ], [ %204, %203 ]
  %208 = phi i16* [ %209, %206 ], [ %205, %203 ]
  %209 = getelementptr inbounds i16, i16* %208, i64 -1
  %210 = load i16, i16* %209, align 2
  %211 = zext i16 %210 to i32
  %212 = tail call i32 @llvm.usub.sat.i32(i32 %211, i32 %47) #8
  %213 = trunc i32 %212 to i16
  store i16 %213, i16* %209, align 2
  %214 = add i32 %207, -1
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %216, label %206, !llvm.loop !7

216:                                              ; preds = %206, %201
  %217 = add i32 %33, %7
  br label %218

218:                                              ; preds = %216, %26
  %219 = phi i32 [ %217, %216 ], [ %33, %26 ]
  %220 = load %struct.z_stream_s*, %struct.z_stream_s** %19, align 8
  %221 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %220, i64 0, i32 1
  %222 = load i32, i32* %221, align 8
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %341, label %224

224:                                              ; preds = %218
  %225 = load i8*, i8** %12, align 8
  %226 = load i32, i32* %10, align 4
  %227 = zext i32 %226 to i64
  %228 = getelementptr inbounds i8, i8* %225, i64 %227
  %229 = load i32, i32* %9, align 4
  %230 = zext i32 %229 to i64
  %231 = getelementptr inbounds i8, i8* %228, i64 %230
  %232 = icmp ugt i32 %222, %219
  %233 = select i1 %232, i32 %219, i32 %222
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %265, label %235

235:                                              ; preds = %224
  %236 = sub i32 %222, %233
  store i32 %236, i32* %221, align 8
  %237 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %220, i64 0, i32 7
  %238 = load %struct.internal_state*, %struct.internal_state** %237, align 8
  %239 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %238, i64 0, i32 6
  %240 = load i32, i32* %239, align 8
  %241 = icmp eq i32 %240, 2
  br i1 %241, label %242, label %244

242:                                              ; preds = %235
  %243 = zext i32 %233 to i64
  tail call void @Cr_z_copy_with_crc(%struct.z_stream_s* %220, i8* %231, i64 %243) #8
  br label %256

244:                                              ; preds = %235
  %245 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %220, i64 0, i32 0
  %246 = load i8*, i8** %245, align 8
  %247 = zext i32 %233 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %231, i8* align 1 %246, i64 %247, i1 false) #8
  %248 = load %struct.internal_state*, %struct.internal_state** %237, align 8
  %249 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %248, i64 0, i32 6
  %250 = load i32, i32* %249, align 8
  %251 = icmp eq i32 %250, 1
  br i1 %251, label %252, label %256

252:                                              ; preds = %244
  %253 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %220, i64 0, i32 12
  %254 = load i64, i64* %253, align 8
  %255 = tail call i64 @Cr_z_adler32(i64 %254, i8* %231, i32 %233) #8
  store i64 %255, i64* %253, align 8
  br label %256

256:                                              ; preds = %252, %244, %242
  %257 = phi i64 [ %247, %244 ], [ %247, %252 ], [ %243, %242 ]
  %258 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %220, i64 0, i32 0
  %259 = load i8*, i8** %258, align 8
  %260 = getelementptr inbounds i8, i8* %259, i64 %257
  store i8* %260, i8** %258, align 8
  %261 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %220, i64 0, i32 2
  %262 = load i64, i64* %261, align 8
  %263 = add i64 %262, %257
  store i64 %263, i64* %261, align 8
  %264 = load i32, i32* %9, align 4
  br label %265

265:                                              ; preds = %256, %224
  %266 = phi i32 [ %229, %224 ], [ %264, %256 ]
  %267 = add i32 %266, %233
  store i32 %267, i32* %9, align 4
  %268 = load i32, i32* %20, align 4
  %269 = add i32 %268, %267
  %270 = icmp ugt i32 %269, 2
  br i1 %270, label %271, label %331

271:                                              ; preds = %265
  %272 = load i32, i32* %10, align 4
  %273 = sub i32 %272, %268
  %274 = load i8*, i8** %12, align 8
  %275 = zext i32 %273 to i64
  %276 = getelementptr inbounds i8, i8* %274, i64 %275
  %277 = load i8, i8* %276, align 1
  %278 = zext i8 %277 to i32
  store i32 %278, i32* %21, align 8
  %279 = load i32, i32* %22, align 8
  %280 = shl i32 %278, %279
  %281 = add i32 %273, 1
  %282 = zext i32 %281 to i64
  %283 = getelementptr inbounds i8, i8* %274, i64 %282
  %284 = load i8, i8* %283, align 1
  %285 = zext i8 %284 to i32
  %286 = xor i32 %280, %285
  %287 = load i32, i32* %23, align 4
  %288 = and i32 %286, %287
  store i32 %288, i32* %21, align 8
  %289 = icmp eq i32 %268, 0
  br i1 %289, label %331, label %296

290:                                              ; preds = %296
  %291 = add i32 %301, 1
  %292 = load i32, i32* %21, align 8
  %293 = load i32, i32* %22, align 8
  %294 = load i8*, i8** %12, align 8
  %295 = load i32, i32* %23, align 4
  br label %296

296:                                              ; preds = %271, %290
  %297 = phi i32 [ %295, %290 ], [ %287, %271 ]
  %298 = phi i8* [ %294, %290 ], [ %274, %271 ]
  %299 = phi i32 [ %293, %290 ], [ %279, %271 ]
  %300 = phi i32 [ %292, %290 ], [ %288, %271 ]
  %301 = phi i32 [ %291, %290 ], [ %273, %271 ]
  %302 = shl i32 %300, %299
  %303 = add i32 %301, 2
  %304 = zext i32 %303 to i64
  %305 = getelementptr inbounds i8, i8* %298, i64 %304
  %306 = load i8, i8* %305, align 1
  %307 = zext i8 %306 to i32
  %308 = xor i32 %302, %307
  %309 = and i32 %308, %297
  store i32 %309, i32* %21, align 8
  %310 = load i16*, i16** %17, align 8
  %311 = zext i32 %309 to i64
  %312 = getelementptr inbounds i16, i16* %310, i64 %311
  %313 = load i16, i16* %312, align 2
  %314 = load i16*, i16** %18, align 8
  %315 = load i32, i32* %24, align 8
  %316 = and i32 %315, %301
  %317 = zext i32 %316 to i64
  %318 = getelementptr inbounds i16, i16* %314, i64 %317
  store i16 %313, i16* %318, align 2
  %319 = trunc i32 %301 to i16
  %320 = load i16*, i16** %17, align 8
  %321 = load i32, i32* %21, align 8
  %322 = zext i32 %321 to i64
  %323 = getelementptr inbounds i16, i16* %320, i64 %322
  store i16 %319, i16* %323, align 2
  %324 = load i32, i32* %20, align 4
  %325 = add i32 %324, -1
  store i32 %325, i32* %20, align 4
  %326 = load i32, i32* %9, align 4
  %327 = add i32 %326, %325
  %328 = icmp ult i32 %327, 3
  %329 = icmp eq i32 %325, 0
  %330 = or i1 %328, %329
  br i1 %330, label %331, label %290

331:                                              ; preds = %296, %271, %265
  %332 = phi i32 [ %267, %265 ], [ %267, %271 ], [ %326, %296 ]
  %333 = icmp ult i32 %332, 262
  br i1 %333, label %334, label %341

334:                                              ; preds = %331
  %335 = load %struct.z_stream_s*, %struct.z_stream_s** %19, align 8
  %336 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %335, i64 0, i32 1
  %337 = load i32, i32* %336, align 8
  %338 = icmp eq i32 %337, 0
  br i1 %338, label %341, label %339

339:                                              ; preds = %334
  %340 = load i32, i32* %6, align 8
  br label %26

341:                                              ; preds = %334, %331, %218
  %342 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 59
  %343 = load i64, i64* %342, align 8
  %344 = load i64, i64* %8, align 8
  %345 = icmp ugt i64 %344, %343
  br i1 %345, label %346, label %373

346:                                              ; preds = %341
  %347 = load i32, i32* %10, align 4
  %348 = zext i32 %347 to i64
  %349 = load i32, i32* %9, align 4
  %350 = zext i32 %349 to i64
  %351 = add nuw nsw i64 %350, %348
  %352 = icmp ult i64 %343, %351
  br i1 %352, label %353, label %360

353:                                              ; preds = %346
  %354 = sub i64 %344, %351
  %355 = icmp ult i64 %354, 258
  %356 = select i1 %355, i64 %354, i64 258
  %357 = load i8*, i8** %12, align 8
  %358 = getelementptr inbounds i8, i8* %357, i64 %351
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %358, i8 0, i64 %356, i1 false) #8
  %359 = add nuw nsw i64 %356, %351
  store i64 %359, i64* %342, align 8
  br label %373

360:                                              ; preds = %346
  %361 = add nuw nsw i64 %351, 258
  %362 = icmp ugt i64 %361, %343
  br i1 %362, label %363, label %373

363:                                              ; preds = %360
  %364 = sub i64 %361, %343
  %365 = sub i64 %344, %343
  %366 = icmp ugt i64 %364, %365
  %367 = select i1 %366, i64 %365, i64 %364
  %368 = load i8*, i8** %12, align 8
  %369 = getelementptr inbounds i8, i8* %368, i64 %343
  %370 = and i64 %367, 4294967295
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %369, i8 0, i64 %370, i1 false) #8
  %371 = load i64, i64* %342, align 8
  %372 = add i64 %371, %367
  store i64 %372, i64* %342, align 8
  br label %373

373:                                              ; preds = %363, %360, %353, %341, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @Cr_z_deflateGetDictionary(%struct.z_stream_s* readonly, i8*, i32*) local_unnamed_addr #0 {
  %4 = icmp eq %struct.z_stream_s* %0, null
  br i1 %4, label %50, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 8
  %7 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %6, align 8
  %8 = icmp eq i8* (i8*, i32, i32)* %7, null
  br i1 %8, label %50, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 9
  %11 = load void (i8*, i8*)*, void (i8*, i8*)** %10, align 8
  %12 = icmp eq void (i8*, i8*)* %11, null
  br i1 %12, label %50, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 7
  %15 = load %struct.internal_state*, %struct.internal_state** %14, align 8
  %16 = icmp eq %struct.internal_state* %15, null
  br i1 %16, label %50, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 0
  %19 = load %struct.z_stream_s*, %struct.z_stream_s** %18, align 8
  %20 = icmp eq %struct.z_stream_s* %19, %0
  br i1 %20, label %21, label %50

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 1
  %23 = load i32, i32* %22, align 8
  switch i32 %23, label %50 [
    i32 42, label %24
    i32 57, label %24
    i32 69, label %24
    i32 73, label %24
    i32 91, label %24
    i32 103, label %24
    i32 113, label %24
    i32 666, label %24
  ]

24:                                               ; preds = %21, %21, %21, %21, %21, %21, %21, %21
  %25 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 28
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 30
  %28 = load i32, i32* %27, align 4
  %29 = add i32 %28, %26
  %30 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 12
  %31 = load i32, i32* %30, align 8
  %32 = icmp ugt i32 %29, %31
  %33 = select i1 %32, i32 %31, i32 %29
  %34 = icmp ne i8* %1, null
  %35 = icmp ne i32 %33, 0
  %36 = and i1 %34, %35
  br i1 %36, label %37, label %47

37:                                               ; preds = %24
  %38 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 15
  %39 = load i8*, i8** %38, align 8
  %40 = zext i32 %26 to i64
  %41 = getelementptr inbounds i8, i8* %39, i64 %40
  %42 = zext i32 %28 to i64
  %43 = getelementptr inbounds i8, i8* %41, i64 %42
  %44 = zext i32 %33 to i64
  %45 = sub nsw i64 0, %44
  %46 = getelementptr inbounds i8, i8* %43, i64 %45
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1, i8* align 1 %46, i64 %44, i1 false)
  br label %47

47:                                               ; preds = %37, %24
  %48 = icmp eq i32* %2, null
  br i1 %48, label %50, label %49

49:                                               ; preds = %47
  store i32 %33, i32* %2, align 4
  br label %50

50:                                               ; preds = %13, %17, %21, %3, %5, %9, %49, %47
  %51 = phi i32 [ 0, %47 ], [ 0, %49 ], [ -2, %9 ], [ -2, %5 ], [ -2, %3 ], [ -2, %21 ], [ -2, %17 ], [ -2, %13 ]
  ret i32 %51
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @Cr_z_deflateResetKeep(%struct.z_stream_s*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.z_stream_s* %0, null
  br i1 %2, label %52, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 8
  %5 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %4, align 8
  %6 = icmp eq i8* (i8*, i32, i32)* %5, null
  br i1 %6, label %52, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 9
  %9 = load void (i8*, i8*)*, void (i8*, i8*)** %8, align 8
  %10 = icmp eq void (i8*, i8*)* %9, null
  br i1 %10, label %52, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 7
  %13 = load %struct.internal_state*, %struct.internal_state** %12, align 8
  %14 = icmp eq %struct.internal_state* %13, null
  br i1 %14, label %52, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %13, i64 0, i32 0
  %17 = load %struct.z_stream_s*, %struct.z_stream_s** %16, align 8
  %18 = icmp eq %struct.z_stream_s* %17, %0
  br i1 %18, label %19, label %52

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %13, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  switch i32 %21, label %52 [
    i32 42, label %22
    i32 57, label %22
    i32 69, label %22
    i32 73, label %22
    i32 91, label %22
    i32 103, label %22
    i32 113, label %22
    i32 666, label %22
  ]

22:                                               ; preds = %19, %19, %19, %19, %19, %19, %19, %19
  %23 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 5
  %24 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 2
  store i64 0, i64* %24, align 8
  %25 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 11
  %26 = bitcast i64* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false)
  store i32 2, i32* %25, align 8
  %27 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %13, i64 0, i32 5
  store i64 0, i64* %27, align 8
  %28 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %13, i64 0, i32 2
  %29 = bitcast i8** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %13, i64 0, i32 4
  %32 = bitcast i8** %31 to i64*
  store i64 %30, i64* %32, align 8
  %33 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %13, i64 0, i32 6
  %34 = load i32, i32* %33, align 8
  %35 = icmp slt i32 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %22
  %37 = sub nsw i32 0, %34
  store i32 %37, i32* %33, align 8
  br label %38

38:                                               ; preds = %36, %22
  %39 = phi i32 [ %37, %36 ], [ %34, %22 ]
  %40 = icmp eq i32 %39, 2
  %41 = icmp eq i32 %39, 0
  %42 = select i1 %41, i32 113, i32 42
  %43 = select i1 %40, i32 57, i32 %42
  store i32 %43, i32* %20, align 8
  br i1 %40, label %44, label %46

44:                                               ; preds = %38
  %45 = tail call i64 @Cr_z_crc32(i64 0, i8* null, i32 0) #8
  br label %48

46:                                               ; preds = %38
  %47 = tail call i64 @Cr_z_adler32(i64 0, i8* null, i32 0) #8
  br label %48

48:                                               ; preds = %46, %44
  %49 = phi i64 [ %45, %44 ], [ %47, %46 ]
  %50 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 12
  store i64 %49, i64* %50, align 8
  %51 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %13, i64 0, i32 10
  store i32 0, i32* %51, align 4
  tail call void @Cr_z__tr_init(%struct.internal_state* nonnull %13) #8
  br label %52

52:                                               ; preds = %11, %15, %19, %1, %3, %7, %48
  %53 = phi i32 [ 0, %48 ], [ -2, %7 ], [ -2, %3 ], [ -2, %1 ], [ -2, %19 ], [ -2, %15 ], [ -2, %11 ]
  ret i32 %53
}

declare i64 @Cr_z_crc32(i64, i8*, i32) local_unnamed_addr #1

declare void @Cr_z__tr_init(%struct.internal_state*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @Cr_z_deflateSetHeader(%struct.z_stream_s* readonly, %struct.Cr_z_gz_header_s*) local_unnamed_addr #3 {
  %3 = icmp eq %struct.z_stream_s* %0, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 8
  %6 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %5, align 8
  %7 = icmp eq i8* (i8*, i32, i32)* %6, null
  br i1 %7, label %29, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 9
  %10 = load void (i8*, i8*)*, void (i8*, i8*)** %9, align 8
  %11 = icmp eq void (i8*, i8*)* %10, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 7
  %14 = load %struct.internal_state*, %struct.internal_state** %13, align 8
  %15 = icmp eq %struct.internal_state* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 0
  %18 = load %struct.z_stream_s*, %struct.z_stream_s** %17, align 8
  %19 = icmp eq %struct.z_stream_s* %18, %0
  br i1 %19, label %20, label %29

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  switch i32 %22, label %29 [
    i32 42, label %23
    i32 57, label %23
    i32 69, label %23
    i32 73, label %23
    i32 91, label %23
    i32 103, label %23
    i32 113, label %23
    i32 666, label %23
  ]

23:                                               ; preds = %20, %20, %20, %20, %20, %20, %20, %20
  %24 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 6
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 2
  br i1 %26, label %27, label %29

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 7
  store %struct.Cr_z_gz_header_s* %1, %struct.Cr_z_gz_header_s** %28, align 8
  br label %29

29:                                               ; preds = %12, %16, %20, %2, %4, %8, %23, %27
  %30 = phi i32 [ 0, %27 ], [ -2, %23 ], [ -2, %8 ], [ -2, %4 ], [ -2, %2 ], [ -2, %20 ], [ -2, %16 ], [ -2, %12 ]
  ret i32 %30
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @Cr_z_deflatePending(%struct.z_stream_s* readonly, i32*, i32*) local_unnamed_addr #3 {
  %4 = icmp eq %struct.z_stream_s* %0, null
  br i1 %4, label %36, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 8
  %7 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %6, align 8
  %8 = icmp eq i8* (i8*, i32, i32)* %7, null
  br i1 %8, label %36, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 9
  %11 = load void (i8*, i8*)*, void (i8*, i8*)** %10, align 8
  %12 = icmp eq void (i8*, i8*)* %11, null
  br i1 %12, label %36, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 7
  %15 = load %struct.internal_state*, %struct.internal_state** %14, align 8
  %16 = icmp eq %struct.internal_state* %15, null
  br i1 %16, label %36, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 0
  %19 = load %struct.z_stream_s*, %struct.z_stream_s** %18, align 8
  %20 = icmp eq %struct.z_stream_s* %19, %0
  br i1 %20, label %21, label %36

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 1
  %23 = load i32, i32* %22, align 8
  switch i32 %23, label %36 [
    i32 42, label %24
    i32 57, label %24
    i32 69, label %24
    i32 73, label %24
    i32 91, label %24
    i32 103, label %24
    i32 113, label %24
    i32 666, label %24
  ]

24:                                               ; preds = %21, %21, %21, %21, %21, %21, %21, %21
  %25 = icmp eq i32* %1, null
  br i1 %25, label %30, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 5
  %28 = load i64, i64* %27, align 8
  %29 = trunc i64 %28 to i32
  store i32 %29, i32* %1, align 4
  br label %30

30:                                               ; preds = %24, %26
  %31 = icmp eq i32* %2, null
  br i1 %31, label %36, label %32

32:                                               ; preds = %30
  %33 = load %struct.internal_state*, %struct.internal_state** %14, align 8
  %34 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %33, i64 0, i32 58
  %35 = load i32, i32* %34, align 4
  store i32 %35, i32* %2, align 4
  br label %36

36:                                               ; preds = %13, %17, %21, %3, %5, %9, %32, %30
  %37 = phi i32 [ 0, %30 ], [ 0, %32 ], [ -2, %9 ], [ -2, %5 ], [ -2, %3 ], [ -2, %21 ], [ -2, %17 ], [ -2, %13 ]
  ret i32 %37
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @Cr_z_deflatePrime(%struct.z_stream_s* readonly, i32, i32) local_unnamed_addr #0 {
  %4 = icmp eq %struct.z_stream_s* %0, null
  br i1 %4, label %52, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 8
  %7 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %6, align 8
  %8 = icmp eq i8* (i8*, i32, i32)* %7, null
  br i1 %8, label %52, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 9
  %11 = load void (i8*, i8*)*, void (i8*, i8*)** %10, align 8
  %12 = icmp eq void (i8*, i8*)* %11, null
  br i1 %12, label %52, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 7
  %15 = load %struct.internal_state*, %struct.internal_state** %14, align 8
  %16 = icmp eq %struct.internal_state* %15, null
  br i1 %16, label %52, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 0
  %19 = load %struct.z_stream_s*, %struct.z_stream_s** %18, align 8
  %20 = icmp eq %struct.z_stream_s* %19, %0
  br i1 %20, label %21, label %52

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 1
  %23 = load i32, i32* %22, align 8
  switch i32 %23, label %52 [
    i32 42, label %24
    i32 57, label %24
    i32 69, label %24
    i32 73, label %24
    i32 91, label %24
    i32 103, label %24
    i32 113, label %24
    i32 666, label %24
  ]

24:                                               ; preds = %21, %21, %21, %21, %21, %21, %21, %21
  %25 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 49
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 4
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds i8, i8* %28, i64 2
  %30 = icmp ult i8* %26, %29
  br i1 %30, label %52, label %31

31:                                               ; preds = %24
  %32 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 58
  %33 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 57
  br label %34

34:                                               ; preds = %31, %34
  %35 = phi i32 [ %50, %34 ], [ %1, %31 ]
  %36 = phi i32 [ %49, %34 ], [ %2, %31 ]
  %37 = load i32, i32* %32, align 4
  %38 = sub nsw i32 16, %37
  %39 = icmp sgt i32 %38, %35
  %40 = select i1 %39, i32 %35, i32 %38
  %41 = shl nsw i32 -1, %40
  %42 = xor i32 %41, -1
  %43 = and i32 %36, %42
  %44 = shl i32 %43, %37
  %45 = load i16, i16* %33, align 8
  %46 = trunc i32 %44 to i16
  %47 = or i16 %45, %46
  store i16 %47, i16* %33, align 8
  %48 = add nsw i32 %40, %37
  store i32 %48, i32* %32, align 4
  tail call void @Cr_z__tr_flush_bits(%struct.internal_state* nonnull %15) #8
  %49 = ashr i32 %36, %40
  %50 = sub nsw i32 %35, %40
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %34

52:                                               ; preds = %34, %13, %17, %21, %3, %5, %9, %24
  %53 = phi i32 [ -5, %24 ], [ -2, %9 ], [ -2, %5 ], [ -2, %3 ], [ -2, %21 ], [ -2, %17 ], [ -2, %13 ], [ 0, %34 ]
  ret i32 %53
}

declare void @Cr_z__tr_flush_bits(%struct.internal_state*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @Cr_z_deflateParams(%struct.z_stream_s*, i32, i32) local_unnamed_addr #0 {
  %4 = icmp eq %struct.z_stream_s* %0, null
  br i1 %4, label %275, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 8
  %7 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %6, align 8
  %8 = icmp eq i8* (i8*, i32, i32)* %7, null
  br i1 %8, label %275, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 9
  %11 = load void (i8*, i8*)*, void (i8*, i8*)** %10, align 8
  %12 = icmp eq void (i8*, i8*)* %11, null
  br i1 %12, label %275, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 7
  %15 = load %struct.internal_state*, %struct.internal_state** %14, align 8
  %16 = icmp eq %struct.internal_state* %15, null
  br i1 %16, label %275, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 0
  %19 = load %struct.z_stream_s*, %struct.z_stream_s** %18, align 8
  %20 = icmp eq %struct.z_stream_s* %19, %0
  br i1 %20, label %21, label %275

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 1
  %23 = load i32, i32* %22, align 8
  switch i32 %23, label %275 [
    i32 42, label %24
    i32 57, label %24
    i32 69, label %24
    i32 73, label %24
    i32 91, label %24
    i32 103, label %24
    i32 113, label %24
    i32 666, label %24
  ]

24:                                               ; preds = %21, %21, %21, %21, %21, %21, %21, %21
  %25 = icmp eq i32 %1, -1
  %26 = select i1 %25, i32 6, i32 %1
  %27 = icmp ugt i32 %26, 9
  %28 = icmp ugt i32 %2, 4
  %29 = or i1 %28, %27
  br i1 %29, label %275, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 34
  %32 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 35
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, %2
  br i1 %34, label %35, label %44

35:                                               ; preds = %30
  %36 = load i32, i32* %31, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds [10 x %struct.config_s], [10 x %struct.config_s]* @configuration_table, i64 0, i64 %37, i32 4
  %39 = load i32 (%struct.internal_state*, i32)*, i32 (%struct.internal_state*, i32)** %38, align 8
  %40 = sext i32 %26 to i64
  %41 = getelementptr inbounds [10 x %struct.config_s], [10 x %struct.config_s]* @configuration_table, i64 0, i64 %40, i32 4
  %42 = load i32 (%struct.internal_state*, i32)*, i32 (%struct.internal_state*, i32)** %41, align 8
  %43 = icmp eq i32 (%struct.internal_state*, i32)* %39, %42
  br i1 %43, label %55, label %44

44:                                               ; preds = %35, %30
  %45 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 59
  %46 = load i64, i64* %45, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %55, label %48

48:                                               ; preds = %44
  %49 = tail call i32 @Cr_z_deflate(%struct.z_stream_s* nonnull %0, i32 5)
  %50 = icmp eq i32 %49, -2
  br i1 %50, label %275, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 4
  %53 = load i32, i32* %52, align 8
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %275, label %55

55:                                               ; preds = %51, %44, %35
  %56 = load i32, i32* %31, align 4
  %57 = icmp eq i32 %56, %26
  br i1 %57, label %274, label %58

58:                                               ; preds = %55
  %59 = icmp eq i32 %56, 0
  br i1 %59, label %60, label %256

60:                                               ; preds = %58
  %61 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 55
  %62 = load i32, i32* %61, align 8
  switch i32 %62, label %239 [
    i32 0, label %256
    i32 1, label %63
  ]

63:                                               ; preds = %60
  %64 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 12
  %65 = load i32, i32* %64, align 8
  %66 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 20
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 18
  %69 = load i16*, i16** %68, align 8
  %70 = zext i32 %67 to i64
  %71 = getelementptr inbounds i16, i16* %69, i64 %70
  %72 = add i32 %67, -1
  %73 = zext i32 %72 to i64
  %74 = add nuw nsw i64 %73, 1
  %75 = icmp ult i64 %74, 8
  br i1 %75, label %140, label %76

76:                                               ; preds = %63
  %77 = and i64 %74, 8589934584
  %78 = trunc i64 %77 to i32
  %79 = sub i32 %67, %78
  %80 = sub nsw i64 0, %77
  %81 = getelementptr i16, i16* %71, i64 %80
  %82 = insertelement <8 x i32> undef, i32 %65, i32 0
  %83 = shufflevector <8 x i32> %82, <8 x i32> undef, <8 x i32> zeroinitializer
  %84 = add nsw i64 %77, -8
  %85 = lshr exact i64 %84, 3
  %86 = add nuw nsw i64 %85, 1
  %87 = and i64 %86, 1
  %88 = icmp eq i64 %84, 0
  br i1 %88, label %123, label %89

89:                                               ; preds = %76
  %90 = sub nuw nsw i64 %86, %87
  %91 = getelementptr i16, i16* %71, i64 -1
  %92 = getelementptr inbounds i16, i16* %91, i64 -7
  %93 = getelementptr i16, i16* %71, i64 -1
  %94 = getelementptr inbounds i16, i16* %93, i64 -7
  br label %95

95:                                               ; preds = %95, %89
  %96 = phi i64 [ 0, %89 ], [ %118, %95 ]
  %97 = phi i64 [ %90, %89 ], [ %119, %95 ]
  %98 = sub i64 0, %96
  %99 = getelementptr inbounds i16, i16* %92, i64 %98
  %100 = bitcast i16* %99 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2
  %102 = shufflevector <8 x i16> %101, <8 x i16> undef, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %103 = zext <8 x i16> %102 to <8 x i32>
  %104 = call <8 x i32> @llvm.usub.sat.v8i32(<8 x i32> %103, <8 x i32> %83)
  %105 = trunc <8 x i32> %104 to <8 x i16>
  %106 = shufflevector <8 x i16> %105, <8 x i16> undef, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %107 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %106, <8 x i16>* %107, align 2
  %108 = sub nuw nsw i64 -8, %96
  %109 = getelementptr inbounds i16, i16* %94, i64 %108
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2
  %112 = shufflevector <8 x i16> %111, <8 x i16> undef, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %113 = zext <8 x i16> %112 to <8 x i32>
  %114 = call <8 x i32> @llvm.usub.sat.v8i32(<8 x i32> %113, <8 x i32> %83)
  %115 = trunc <8 x i32> %114 to <8 x i16>
  %116 = shufflevector <8 x i16> %115, <8 x i16> undef, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %117 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %116, <8 x i16>* %117, align 2
  %118 = add i64 %96, 16
  %119 = add i64 %97, -2
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %95, !llvm.loop !8

121:                                              ; preds = %95
  %122 = sub nuw nsw i64 -16, %96
  br label %123

123:                                              ; preds = %121, %76
  %124 = phi i64 [ 0, %76 ], [ %122, %121 ]
  %125 = icmp eq i64 %87, 0
  br i1 %125, label %138, label %126

126:                                              ; preds = %123
  %127 = getelementptr i16, i16* %71, i64 -1
  %128 = getelementptr inbounds i16, i16* %127, i64 -7
  %129 = getelementptr inbounds i16, i16* %128, i64 %124
  %130 = bitcast i16* %129 to <8 x i16>*
  %131 = load <8 x i16>, <8 x i16>* %130, align 2
  %132 = shufflevector <8 x i16> %131, <8 x i16> undef, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %133 = zext <8 x i16> %132 to <8 x i32>
  %134 = call <8 x i32> @llvm.usub.sat.v8i32(<8 x i32> %133, <8 x i32> %83)
  %135 = trunc <8 x i32> %134 to <8 x i16>
  %136 = shufflevector <8 x i16> %135, <8 x i16> undef, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %137 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %136, <8 x i16>* %137, align 2
  br label %138

138:                                              ; preds = %123, %126
  %139 = icmp eq i64 %74, %77
  br i1 %139, label %153, label %140

140:                                              ; preds = %138, %63
  %141 = phi i32 [ %67, %63 ], [ %79, %138 ]
  %142 = phi i16* [ %71, %63 ], [ %81, %138 ]
  br label %143

143:                                              ; preds = %140, %143
  %144 = phi i32 [ %151, %143 ], [ %141, %140 ]
  %145 = phi i16* [ %146, %143 ], [ %142, %140 ]
  %146 = getelementptr inbounds i16, i16* %145, i64 -1
  %147 = load i16, i16* %146, align 2
  %148 = zext i16 %147 to i32
  %149 = tail call i32 @llvm.usub.sat.i32(i32 %148, i32 %65) #8
  %150 = trunc i32 %149 to i16
  store i16 %150, i16* %146, align 2
  %151 = add i32 %144, -1
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %143, !llvm.loop !9

153:                                              ; preds = %143, %138
  %154 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 17
  %155 = load i16*, i16** %154, align 8
  %156 = zext i32 %65 to i64
  %157 = getelementptr inbounds i16, i16* %155, i64 %156
  %158 = add i32 %65, -1
  %159 = zext i32 %158 to i64
  %160 = add nuw nsw i64 %159, 1
  %161 = icmp ult i64 %160, 8
  br i1 %161, label %226, label %162

162:                                              ; preds = %153
  %163 = and i64 %160, 8589934584
  %164 = trunc i64 %163 to i32
  %165 = sub i32 %65, %164
  %166 = sub nsw i64 0, %163
  %167 = getelementptr i16, i16* %157, i64 %166
  %168 = insertelement <8 x i32> undef, i32 %65, i32 0
  %169 = shufflevector <8 x i32> %168, <8 x i32> undef, <8 x i32> zeroinitializer
  %170 = add nsw i64 %163, -8
  %171 = lshr exact i64 %170, 3
  %172 = add nuw nsw i64 %171, 1
  %173 = and i64 %172, 1
  %174 = icmp eq i64 %170, 0
  br i1 %174, label %209, label %175

175:                                              ; preds = %162
  %176 = sub nuw nsw i64 %172, %173
  %177 = getelementptr i16, i16* %157, i64 -1
  %178 = getelementptr inbounds i16, i16* %177, i64 -7
  %179 = getelementptr i16, i16* %157, i64 -1
  %180 = getelementptr inbounds i16, i16* %179, i64 -7
  br label %181

181:                                              ; preds = %181, %175
  %182 = phi i64 [ 0, %175 ], [ %204, %181 ]
  %183 = phi i64 [ %176, %175 ], [ %205, %181 ]
  %184 = sub i64 0, %182
  %185 = getelementptr inbounds i16, i16* %178, i64 %184
  %186 = bitcast i16* %185 to <8 x i16>*
  %187 = load <8 x i16>, <8 x i16>* %186, align 2
  %188 = shufflevector <8 x i16> %187, <8 x i16> undef, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %189 = zext <8 x i16> %188 to <8 x i32>
  %190 = call <8 x i32> @llvm.usub.sat.v8i32(<8 x i32> %189, <8 x i32> %169)
  %191 = trunc <8 x i32> %190 to <8 x i16>
  %192 = shufflevector <8 x i16> %191, <8 x i16> undef, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %193 = bitcast i16* %185 to <8 x i16>*
  store <8 x i16> %192, <8 x i16>* %193, align 2
  %194 = sub nuw nsw i64 -8, %182
  %195 = getelementptr inbounds i16, i16* %180, i64 %194
  %196 = bitcast i16* %195 to <8 x i16>*
  %197 = load <8 x i16>, <8 x i16>* %196, align 2
  %198 = shufflevector <8 x i16> %197, <8 x i16> undef, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %199 = zext <8 x i16> %198 to <8 x i32>
  %200 = call <8 x i32> @llvm.usub.sat.v8i32(<8 x i32> %199, <8 x i32> %169)
  %201 = trunc <8 x i32> %200 to <8 x i16>
  %202 = shufflevector <8 x i16> %201, <8 x i16> undef, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %203 = bitcast i16* %195 to <8 x i16>*
  store <8 x i16> %202, <8 x i16>* %203, align 2
  %204 = add i64 %182, 16
  %205 = add i64 %183, -2
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %207, label %181, !llvm.loop !10

207:                                              ; preds = %181
  %208 = sub nuw nsw i64 -16, %182
  br label %209

209:                                              ; preds = %207, %162
  %210 = phi i64 [ 0, %162 ], [ %208, %207 ]
  %211 = icmp eq i64 %173, 0
  br i1 %211, label %224, label %212

212:                                              ; preds = %209
  %213 = getelementptr i16, i16* %157, i64 -1
  %214 = getelementptr inbounds i16, i16* %213, i64 -7
  %215 = getelementptr inbounds i16, i16* %214, i64 %210
  %216 = bitcast i16* %215 to <8 x i16>*
  %217 = load <8 x i16>, <8 x i16>* %216, align 2
  %218 = shufflevector <8 x i16> %217, <8 x i16> undef, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %219 = zext <8 x i16> %218 to <8 x i32>
  %220 = call <8 x i32> @llvm.usub.sat.v8i32(<8 x i32> %219, <8 x i32> %169)
  %221 = trunc <8 x i32> %220 to <8 x i16>
  %222 = shufflevector <8 x i16> %221, <8 x i16> undef, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %223 = bitcast i16* %215 to <8 x i16>*
  store <8 x i16> %222, <8 x i16>* %223, align 2
  br label %224

224:                                              ; preds = %209, %212
  %225 = icmp eq i64 %160, %163
  br i1 %225, label %247, label %226

226:                                              ; preds = %224, %153
  %227 = phi i32 [ %65, %153 ], [ %165, %224 ]
  %228 = phi i16* [ %157, %153 ], [ %167, %224 ]
  br label %229

229:                                              ; preds = %226, %229
  %230 = phi i32 [ %237, %229 ], [ %227, %226 ]
  %231 = phi i16* [ %232, %229 ], [ %228, %226 ]
  %232 = getelementptr inbounds i16, i16* %231, i64 -1
  %233 = load i16, i16* %232, align 2
  %234 = zext i16 %233 to i32
  %235 = tail call i32 @llvm.usub.sat.i32(i32 %234, i32 %65) #8
  %236 = trunc i32 %235 to i16
  store i16 %236, i16* %232, align 2
  %237 = add i32 %230, -1
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %247, label %229, !llvm.loop !11

239:                                              ; preds = %60
  %240 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 18
  %241 = load i16*, i16** %240, align 8
  %242 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 20
  %243 = load i32, i32* %242, align 4
  %244 = add i32 %243, -1
  %245 = zext i32 %244 to i64
  %246 = getelementptr inbounds i16, i16* %241, i64 %245
  store i16 0, i16* %246, align 2
  br label %247

247:                                              ; preds = %229, %224, %239
  %248 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 18
  %249 = bitcast i16** %248 to i8**
  %250 = load i8*, i8** %249, align 8
  %251 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 20
  %252 = load i32, i32* %251, align 4
  %253 = add i32 %252, -1
  %254 = zext i32 %253 to i64
  %255 = shl nuw nsw i64 %254, 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %250, i8 0, i64 %255, i1 false)
  store i32 0, i32* %61, align 8
  br label %256

256:                                              ; preds = %60, %247, %58
  store i32 %26, i32* %31, align 4
  %257 = sext i32 %26 to i64
  %258 = getelementptr inbounds [10 x %struct.config_s], [10 x %struct.config_s]* @configuration_table, i64 0, i64 %257, i32 1
  %259 = load i16, i16* %258, align 2
  %260 = zext i16 %259 to i32
  %261 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 33
  store i32 %260, i32* %261, align 8
  %262 = getelementptr inbounds [10 x %struct.config_s], [10 x %struct.config_s]* @configuration_table, i64 0, i64 %257, i32 0
  %263 = load i16, i16* %262, align 16
  %264 = zext i16 %263 to i32
  %265 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 36
  store i32 %264, i32* %265, align 4
  %266 = getelementptr inbounds [10 x %struct.config_s], [10 x %struct.config_s]* @configuration_table, i64 0, i64 %257, i32 2
  %267 = load i16, i16* %266, align 4
  %268 = zext i16 %267 to i32
  %269 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 37
  store i32 %268, i32* %269, align 8
  %270 = getelementptr inbounds [10 x %struct.config_s], [10 x %struct.config_s]* @configuration_table, i64 0, i64 %257, i32 3
  %271 = load i16, i16* %270, align 2
  %272 = zext i16 %271 to i32
  %273 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %15, i64 0, i32 32
  store i32 %272, i32* %273, align 4
  br label %274

274:                                              ; preds = %55, %256
  store i32 %2, i32* %32, align 8
  br label %275

275:                                              ; preds = %51, %48, %13, %17, %21, %3, %5, %9, %24, %274
  %276 = phi i32 [ 0, %274 ], [ -5, %51 ], [ -2, %24 ], [ -2, %9 ], [ -2, %5 ], [ -2, %3 ], [ -2, %21 ], [ -2, %17 ], [ -2, %13 ], [ -2, %48 ]
  ret i32 %276
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @Cr_z_deflate(%struct.z_stream_s*, i32) local_unnamed_addr #0 {
  %3 = icmp eq %struct.z_stream_s* %0, null
  br i1 %3, label %1682, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 8
  %6 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %5, align 8
  %7 = icmp eq i8* (i8*, i32, i32)* %6, null
  br i1 %7, label %1682, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 9
  %10 = load void (i8*, i8*)*, void (i8*, i8*)** %9, align 8
  %11 = icmp eq void (i8*, i8*)* %10, null
  br i1 %11, label %1682, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 7
  %14 = load %struct.internal_state*, %struct.internal_state** %13, align 8
  %15 = icmp eq %struct.internal_state* %14, null
  br i1 %15, label %1682, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 0
  %18 = load %struct.z_stream_s*, %struct.z_stream_s** %17, align 8
  %19 = icmp eq %struct.z_stream_s* %18, %0
  br i1 %19, label %20, label %1682

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  switch i32 %22, label %1682 [
    i32 42, label %23
    i32 57, label %23
    i32 69, label %23
    i32 73, label %23
    i32 91, label %23
    i32 103, label %23
    i32 113, label %23
    i32 666, label %23
  ]

23:                                               ; preds = %20, %20, %20, %20, %20, %20, %20, %20
  %24 = icmp ugt i32 %1, 5
  br i1 %24, label %1682, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 3
  %27 = load i8*, i8** %26, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %41, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = icmp eq i8* %35, null
  br i1 %36, label %41, label %37

37:                                               ; preds = %29, %33
  %38 = icmp eq i32 %22, 666
  %39 = icmp ne i32 %1, 4
  %40 = and i1 %39, %38
  br i1 %40, label %41, label %45

41:                                               ; preds = %37, %33, %25
  %42 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @Cr_z_z_errmsg, i64 0, i64 4) to i64*), align 16
  %43 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 6
  %44 = bitcast i8** %43 to i64*
  store i64 %42, i64* %44, align 8
  br label %1682

45:                                               ; preds = %37
  %46 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 4
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %53

49:                                               ; preds = %45
  %50 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @Cr_z_z_errmsg, i64 0, i64 7) to i64*), align 8
  %51 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 6
  %52 = bitcast i8** %51 to i64*
  store i64 %50, i64* %52, align 8
  br label %1682

53:                                               ; preds = %45
  %54 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 10
  %55 = load i32, i32* %54, align 4
  store i32 %1, i32* %54, align 4
  %56 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 5
  %57 = load i64, i64* %56, align 8
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %98, label %59

59:                                               ; preds = %53
  %60 = load %struct.internal_state*, %struct.internal_state** %13, align 8
  tail call void @Cr_z__tr_flush_bits(%struct.internal_state* %60) #8
  %61 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %60, i64 0, i32 5
  %62 = load i64, i64* %61, align 8
  %63 = trunc i64 %62 to i32
  %64 = load i32, i32* %46, align 8
  %65 = icmp ult i32 %64, %63
  %66 = select i1 %65, i32 %64, i32 %63
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %92, label %68

68:                                               ; preds = %59
  %69 = load i8*, i8** %26, align 8
  %70 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %60, i64 0, i32 4
  %71 = load i8*, i8** %70, align 8
  %72 = zext i32 %66 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %69, i8* align 1 %71, i64 %72, i1 false) #8
  %73 = load i8*, i8** %26, align 8
  %74 = getelementptr inbounds i8, i8* %73, i64 %72
  store i8* %74, i8** %26, align 8
  %75 = load i8*, i8** %70, align 8
  %76 = getelementptr inbounds i8, i8* %75, i64 %72
  store i8* %76, i8** %70, align 8
  %77 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 5
  %78 = load i64, i64* %77, align 8
  %79 = add i64 %78, %72
  store i64 %79, i64* %77, align 8
  %80 = load i32, i32* %46, align 8
  %81 = sub i32 %80, %66
  store i32 %81, i32* %46, align 8
  %82 = load i64, i64* %61, align 8
  %83 = sub i64 %82, %72
  store i64 %83, i64* %61, align 8
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %85, label %90

85:                                               ; preds = %68
  %86 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %60, i64 0, i32 2
  %87 = bitcast i8** %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = bitcast i8** %70 to i64*
  store i64 %88, i64* %89, align 8
  br label %90

90:                                               ; preds = %85, %68
  %91 = load i32, i32* %46, align 8
  br label %92

92:                                               ; preds = %90, %59
  %93 = phi i32 [ %91, %90 ], [ %64, %59 ]
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %97, label %95

95:                                               ; preds = %92
  %96 = load i32, i32* %21, align 8
  br label %116

97:                                               ; preds = %92
  store i32 -1, i32* %54, align 4
  br label %1682

98:                                               ; preds = %53
  %99 = load i32, i32* %30, align 8
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %116

101:                                              ; preds = %98
  %102 = shl nsw i32 %1, 1
  %103 = icmp sgt i32 %1, 4
  %104 = select i1 %103, i32 9, i32 0
  %105 = sub nsw i32 %102, %104
  %106 = shl nsw i32 %55, 1
  %107 = icmp sgt i32 %55, 4
  %108 = select i1 %107, i32 9, i32 0
  %109 = sub nsw i32 %106, %108
  %110 = icmp sle i32 %105, %109
  %111 = and i1 %39, %110
  br i1 %111, label %112, label %116

112:                                              ; preds = %101
  %113 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @Cr_z_z_errmsg, i64 0, i64 7) to i64*), align 8
  %114 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 6
  %115 = bitcast i8** %114 to i64*
  store i64 %113, i64* %115, align 8
  br label %1682

116:                                              ; preds = %95, %98, %101
  %117 = phi i32 [ %96, %95 ], [ %22, %98 ], [ %22, %101 ]
  switch i32 %117, label %234 [
    i32 666, label %118
    i32 42, label %125
  ]

118:                                              ; preds = %116
  %119 = load i32, i32* %30, align 8
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %885, label %121

121:                                              ; preds = %118
  %122 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @Cr_z_z_errmsg, i64 0, i64 7) to i64*), align 8
  %123 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 6
  %124 = bitcast i8** %123 to i64*
  store i64 %122, i64* %124, align 8
  br label %1682

125:                                              ; preds = %116
  %126 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 13
  %127 = load i32, i32* %126, align 4
  %128 = shl i32 %127, 12
  %129 = add i32 %128, -30720
  %130 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 35
  %131 = load i32, i32* %130, align 8
  %132 = icmp sgt i32 %131, 1
  br i1 %132, label %142, label %133

133:                                              ; preds = %125
  %134 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 34
  %135 = load i32, i32* %134, align 4
  %136 = icmp slt i32 %135, 2
  br i1 %136, label %142, label %137

137:                                              ; preds = %133
  %138 = icmp slt i32 %135, 6
  br i1 %138, label %142, label %139

139:                                              ; preds = %137
  %140 = icmp eq i32 %135, 6
  %141 = select i1 %140, i32 128, i32 192
  br label %142

142:                                              ; preds = %139, %137, %125, %133
  %143 = phi i32 [ 0, %133 ], [ 0, %125 ], [ 64, %137 ], [ %141, %139 ]
  %144 = or i32 %143, %129
  %145 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 28
  %146 = load i32, i32* %145, align 4
  %147 = icmp eq i32 %146, 0
  %148 = or i32 %144, 32
  %149 = select i1 %147, i32 %144, i32 %148
  %150 = urem i32 %149, 31
  %151 = or i32 %150, %149
  %152 = lshr i32 %149, 8
  %153 = trunc i32 %152 to i8
  %154 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 2
  %155 = load i8*, i8** %154, align 8
  %156 = load i64, i64* %56, align 8
  %157 = add i64 %156, 1
  store i64 %157, i64* %56, align 8
  %158 = getelementptr inbounds i8, i8* %155, i64 %156
  store i8 %153, i8* %158, align 1
  %159 = trunc i32 %151 to i8
  %160 = xor i8 %159, 31
  %161 = load i8*, i8** %154, align 8
  %162 = load i64, i64* %56, align 8
  %163 = add i64 %162, 1
  store i64 %163, i64* %56, align 8
  %164 = getelementptr inbounds i8, i8* %161, i64 %162
  store i8 %160, i8* %164, align 1
  %165 = load i32, i32* %145, align 4
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %195, label %167

167:                                              ; preds = %142
  %168 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 12
  %169 = load i64, i64* %168, align 8
  %170 = lshr i64 %169, 16
  %171 = lshr i64 %169, 24
  %172 = trunc i64 %171 to i8
  %173 = load i8*, i8** %154, align 8
  %174 = load i64, i64* %56, align 8
  %175 = add i64 %174, 1
  store i64 %175, i64* %56, align 8
  %176 = getelementptr inbounds i8, i8* %173, i64 %174
  store i8 %172, i8* %176, align 1
  %177 = trunc i64 %170 to i8
  %178 = load i8*, i8** %154, align 8
  %179 = load i64, i64* %56, align 8
  %180 = add i64 %179, 1
  store i64 %180, i64* %56, align 8
  %181 = getelementptr inbounds i8, i8* %178, i64 %179
  store i8 %177, i8* %181, align 1
  %182 = load i64, i64* %168, align 8
  %183 = trunc i64 %182 to i32
  %184 = lshr i32 %183, 8
  %185 = trunc i32 %184 to i8
  %186 = load i8*, i8** %154, align 8
  %187 = load i64, i64* %56, align 8
  %188 = add i64 %187, 1
  store i64 %188, i64* %56, align 8
  %189 = getelementptr inbounds i8, i8* %186, i64 %187
  store i8 %185, i8* %189, align 1
  %190 = trunc i64 %182 to i8
  %191 = load i8*, i8** %154, align 8
  %192 = load i64, i64* %56, align 8
  %193 = add i64 %192, 1
  store i64 %193, i64* %56, align 8
  %194 = getelementptr inbounds i8, i8* %191, i64 %192
  store i8 %190, i8* %194, align 1
  br label %195

195:                                              ; preds = %142, %167
  %196 = tail call i64 @Cr_z_adler32(i64 0, i8* null, i32 0) #8
  %197 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 12
  store i64 %196, i64* %197, align 8
  store i32 113, i32* %21, align 8
  %198 = load %struct.internal_state*, %struct.internal_state** %13, align 8
  tail call void @Cr_z__tr_flush_bits(%struct.internal_state* %198) #8
  %199 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %198, i64 0, i32 5
  %200 = load i64, i64* %199, align 8
  %201 = trunc i64 %200 to i32
  %202 = load i32, i32* %46, align 8
  %203 = icmp ult i32 %202, %201
  %204 = select i1 %203, i32 %202, i32 %201
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %228, label %206

206:                                              ; preds = %195
  %207 = load i8*, i8** %26, align 8
  %208 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %198, i64 0, i32 4
  %209 = load i8*, i8** %208, align 8
  %210 = zext i32 %204 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %207, i8* align 1 %209, i64 %210, i1 false) #8
  %211 = load i8*, i8** %26, align 8
  %212 = getelementptr inbounds i8, i8* %211, i64 %210
  store i8* %212, i8** %26, align 8
  %213 = load i8*, i8** %208, align 8
  %214 = getelementptr inbounds i8, i8* %213, i64 %210
  store i8* %214, i8** %208, align 8
  %215 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 5
  %216 = load i64, i64* %215, align 8
  %217 = add i64 %216, %210
  store i64 %217, i64* %215, align 8
  %218 = load i32, i32* %46, align 8
  %219 = sub i32 %218, %204
  store i32 %219, i32* %46, align 8
  %220 = load i64, i64* %199, align 8
  %221 = sub i64 %220, %210
  store i64 %221, i64* %199, align 8
  %222 = icmp eq i64 %221, 0
  br i1 %222, label %223, label %228

223:                                              ; preds = %206
  %224 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %198, i64 0, i32 2
  %225 = bitcast i8** %224 to i64*
  %226 = load i64, i64* %225, align 8
  %227 = bitcast i8** %208 to i64*
  store i64 %226, i64* %227, align 8
  br label %228

228:                                              ; preds = %195, %206, %223
  %229 = load i64, i64* %56, align 8
  %230 = icmp eq i64 %229, 0
  br i1 %230, label %231, label %233

231:                                              ; preds = %228
  %232 = load i32, i32* %21, align 8
  br label %234

233:                                              ; preds = %228
  store i32 -1, i32* %54, align 4
  br label %1682

234:                                              ; preds = %231, %116
  %235 = phi i32 [ %117, %116 ], [ %232, %231 ]
  %236 = icmp eq i32 %235, 57
  br i1 %236, label %237, label %455

237:                                              ; preds = %234
  tail call void @Cr_z_crc_reset(%struct.internal_state* nonnull %14) #8
  %238 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 2
  %239 = load i8*, i8** %238, align 8
  %240 = load i64, i64* %56, align 8
  %241 = add i64 %240, 1
  store i64 %241, i64* %56, align 8
  %242 = getelementptr inbounds i8, i8* %239, i64 %240
  store i8 31, i8* %242, align 1
  %243 = load i8*, i8** %238, align 8
  %244 = load i64, i64* %56, align 8
  %245 = add i64 %244, 1
  store i64 %245, i64* %56, align 8
  %246 = getelementptr inbounds i8, i8* %243, i64 %244
  store i8 -117, i8* %246, align 1
  %247 = load i8*, i8** %238, align 8
  %248 = load i64, i64* %56, align 8
  %249 = add i64 %248, 1
  store i64 %249, i64* %56, align 8
  %250 = getelementptr inbounds i8, i8* %247, i64 %248
  store i8 8, i8* %250, align 1
  %251 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 7
  %252 = load %struct.Cr_z_gz_header_s*, %struct.Cr_z_gz_header_s** %251, align 8
  %253 = icmp eq %struct.Cr_z_gz_header_s* %252, null
  br i1 %253, label %254, label %331

254:                                              ; preds = %237
  %255 = load i8*, i8** %238, align 8
  %256 = load i64, i64* %56, align 8
  %257 = add i64 %256, 1
  store i64 %257, i64* %56, align 8
  %258 = getelementptr inbounds i8, i8* %255, i64 %256
  store i8 0, i8* %258, align 1
  %259 = load i8*, i8** %238, align 8
  %260 = load i64, i64* %56, align 8
  %261 = add i64 %260, 1
  store i64 %261, i64* %56, align 8
  %262 = getelementptr inbounds i8, i8* %259, i64 %260
  store i8 0, i8* %262, align 1
  %263 = load i8*, i8** %238, align 8
  %264 = load i64, i64* %56, align 8
  %265 = add i64 %264, 1
  store i64 %265, i64* %56, align 8
  %266 = getelementptr inbounds i8, i8* %263, i64 %264
  store i8 0, i8* %266, align 1
  %267 = load i8*, i8** %238, align 8
  %268 = load i64, i64* %56, align 8
  %269 = add i64 %268, 1
  store i64 %269, i64* %56, align 8
  %270 = getelementptr inbounds i8, i8* %267, i64 %268
  store i8 0, i8* %270, align 1
  %271 = load i8*, i8** %238, align 8
  %272 = load i64, i64* %56, align 8
  %273 = add i64 %272, 1
  store i64 %273, i64* %56, align 8
  %274 = getelementptr inbounds i8, i8* %271, i64 %272
  store i8 0, i8* %274, align 1
  %275 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 34
  %276 = load i32, i32* %275, align 4
  %277 = icmp eq i32 %276, 9
  br i1 %277, label %285, label %278

278:                                              ; preds = %254
  %279 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 35
  %280 = load i32, i32* %279, align 8
  %281 = icmp sgt i32 %280, 1
  %282 = icmp slt i32 %276, 2
  %283 = or i1 %282, %281
  %284 = select i1 %283, i8 4, i8 0
  br label %285

285:                                              ; preds = %254, %278
  %286 = phi i8 [ %284, %278 ], [ 2, %254 ]
  %287 = load i8*, i8** %238, align 8
  %288 = load i64, i64* %56, align 8
  %289 = add i64 %288, 1
  store i64 %289, i64* %56, align 8
  %290 = getelementptr inbounds i8, i8* %287, i64 %288
  store i8 %286, i8* %290, align 1
  %291 = load i8*, i8** %238, align 8
  %292 = load i64, i64* %56, align 8
  %293 = add i64 %292, 1
  store i64 %293, i64* %56, align 8
  %294 = getelementptr inbounds i8, i8* %291, i64 %292
  store i8 3, i8* %294, align 1
  store i32 113, i32* %21, align 8
  %295 = load %struct.internal_state*, %struct.internal_state** %13, align 8
  tail call void @Cr_z__tr_flush_bits(%struct.internal_state* %295) #8
  %296 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %295, i64 0, i32 5
  %297 = load i64, i64* %296, align 8
  %298 = trunc i64 %297 to i32
  %299 = load i32, i32* %46, align 8
  %300 = icmp ult i32 %299, %298
  %301 = select i1 %300, i32 %299, i32 %298
  %302 = icmp eq i32 %301, 0
  br i1 %302, label %325, label %303

303:                                              ; preds = %285
  %304 = load i8*, i8** %26, align 8
  %305 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %295, i64 0, i32 4
  %306 = load i8*, i8** %305, align 8
  %307 = zext i32 %301 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %304, i8* align 1 %306, i64 %307, i1 false) #8
  %308 = load i8*, i8** %26, align 8
  %309 = getelementptr inbounds i8, i8* %308, i64 %307
  store i8* %309, i8** %26, align 8
  %310 = load i8*, i8** %305, align 8
  %311 = getelementptr inbounds i8, i8* %310, i64 %307
  store i8* %311, i8** %305, align 8
  %312 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 5
  %313 = load i64, i64* %312, align 8
  %314 = add i64 %313, %307
  store i64 %314, i64* %312, align 8
  %315 = load i32, i32* %46, align 8
  %316 = sub i32 %315, %301
  store i32 %316, i32* %46, align 8
  %317 = load i64, i64* %296, align 8
  %318 = sub i64 %317, %307
  store i64 %318, i64* %296, align 8
  %319 = icmp eq i64 %318, 0
  br i1 %319, label %320, label %325

320:                                              ; preds = %303
  %321 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %295, i64 0, i32 2
  %322 = bitcast i8** %321 to i64*
  %323 = load i64, i64* %322, align 8
  %324 = bitcast i8** %305 to i64*
  store i64 %323, i64* %324, align 8
  br label %325

325:                                              ; preds = %285, %303, %320
  %326 = load i64, i64* %56, align 8
  %327 = icmp eq i64 %326, 0
  br i1 %327, label %328, label %330

328:                                              ; preds = %325
  %329 = load i32, i32* %21, align 8
  br label %455

330:                                              ; preds = %325
  store i32 -1, i32* %54, align 4
  br label %1682

331:                                              ; preds = %237
  %332 = getelementptr inbounds %struct.Cr_z_gz_header_s, %struct.Cr_z_gz_header_s* %252, i64 0, i32 0
  %333 = load i32, i32* %332, align 8
  %334 = icmp ne i32 %333, 0
  %335 = zext i1 %334 to i8
  %336 = getelementptr inbounds %struct.Cr_z_gz_header_s, %struct.Cr_z_gz_header_s* %252, i64 0, i32 11
  %337 = load i32, i32* %336, align 4
  %338 = icmp eq i32 %337, 0
  %339 = select i1 %338, i8 0, i8 2
  %340 = or i8 %339, %335
  %341 = getelementptr inbounds %struct.Cr_z_gz_header_s, %struct.Cr_z_gz_header_s* %252, i64 0, i32 4
  %342 = load i8*, i8** %341, align 8
  %343 = icmp eq i8* %342, null
  %344 = select i1 %343, i8 0, i8 4
  %345 = or i8 %340, %344
  %346 = getelementptr inbounds %struct.Cr_z_gz_header_s, %struct.Cr_z_gz_header_s* %252, i64 0, i32 7
  %347 = load i8*, i8** %346, align 8
  %348 = icmp eq i8* %347, null
  %349 = select i1 %348, i8 0, i8 8
  %350 = or i8 %345, %349
  %351 = getelementptr inbounds %struct.Cr_z_gz_header_s, %struct.Cr_z_gz_header_s* %252, i64 0, i32 9
  %352 = load i8*, i8** %351, align 8
  %353 = icmp eq i8* %352, null
  %354 = select i1 %353, i8 0, i8 16
  %355 = or i8 %350, %354
  %356 = load i8*, i8** %238, align 8
  %357 = load i64, i64* %56, align 8
  %358 = add i64 %357, 1
  store i64 %358, i64* %56, align 8
  %359 = getelementptr inbounds i8, i8* %356, i64 %357
  store i8 %355, i8* %359, align 1
  %360 = load %struct.Cr_z_gz_header_s*, %struct.Cr_z_gz_header_s** %251, align 8
  %361 = getelementptr inbounds %struct.Cr_z_gz_header_s, %struct.Cr_z_gz_header_s* %360, i64 0, i32 1
  %362 = load i64, i64* %361, align 8
  %363 = trunc i64 %362 to i8
  %364 = load i8*, i8** %238, align 8
  %365 = load i64, i64* %56, align 8
  %366 = add i64 %365, 1
  store i64 %366, i64* %56, align 8
  %367 = getelementptr inbounds i8, i8* %364, i64 %365
  store i8 %363, i8* %367, align 1
  %368 = load %struct.Cr_z_gz_header_s*, %struct.Cr_z_gz_header_s** %251, align 8
  %369 = getelementptr inbounds %struct.Cr_z_gz_header_s, %struct.Cr_z_gz_header_s* %368, i64 0, i32 1
  %370 = load i64, i64* %369, align 8
  %371 = lshr i64 %370, 8
  %372 = trunc i64 %371 to i8
  %373 = load i8*, i8** %238, align 8
  %374 = load i64, i64* %56, align 8
  %375 = add i64 %374, 1
  store i64 %375, i64* %56, align 8
  %376 = getelementptr inbounds i8, i8* %373, i64 %374
  store i8 %372, i8* %376, align 1
  %377 = load %struct.Cr_z_gz_header_s*, %struct.Cr_z_gz_header_s** %251, align 8
  %378 = getelementptr inbounds %struct.Cr_z_gz_header_s, %struct.Cr_z_gz_header_s* %377, i64 0, i32 1
  %379 = load i64, i64* %378, align 8
  %380 = lshr i64 %379, 16
  %381 = trunc i64 %380 to i8
  %382 = load i8*, i8** %238, align 8
  %383 = load i64, i64* %56, align 8
  %384 = add i64 %383, 1
  store i64 %384, i64* %56, align 8
  %385 = getelementptr inbounds i8, i8* %382, i64 %383
  store i8 %381, i8* %385, align 1
  %386 = load %struct.Cr_z_gz_header_s*, %struct.Cr_z_gz_header_s** %251, align 8
  %387 = getelementptr inbounds %struct.Cr_z_gz_header_s, %struct.Cr_z_gz_header_s* %386, i64 0, i32 1
  %388 = load i64, i64* %387, align 8
  %389 = lshr i64 %388, 24
  %390 = trunc i64 %389 to i8
  %391 = load i8*, i8** %238, align 8
  %392 = load i64, i64* %56, align 8
  %393 = add i64 %392, 1
  store i64 %393, i64* %56, align 8
  %394 = getelementptr inbounds i8, i8* %391, i64 %392
  store i8 %390, i8* %394, align 1
  %395 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 34
  %396 = load i32, i32* %395, align 4
  %397 = icmp eq i32 %396, 9
  br i1 %397, label %405, label %398

398:                                              ; preds = %331
  %399 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 35
  %400 = load i32, i32* %399, align 8
  %401 = icmp sgt i32 %400, 1
  %402 = icmp slt i32 %396, 2
  %403 = or i1 %402, %401
  %404 = select i1 %403, i8 4, i8 0
  br label %405

405:                                              ; preds = %331, %398
  %406 = phi i8 [ %404, %398 ], [ 2, %331 ]
  %407 = load i8*, i8** %238, align 8
  %408 = load i64, i64* %56, align 8
  %409 = add i64 %408, 1
  store i64 %409, i64* %56, align 8
  %410 = getelementptr inbounds i8, i8* %407, i64 %408
  store i8 %406, i8* %410, align 1
  %411 = load %struct.Cr_z_gz_header_s*, %struct.Cr_z_gz_header_s** %251, align 8
  %412 = getelementptr inbounds %struct.Cr_z_gz_header_s, %struct.Cr_z_gz_header_s* %411, i64 0, i32 3
  %413 = load i32, i32* %412, align 4
  %414 = trunc i32 %413 to i8
  %415 = load i8*, i8** %238, align 8
  %416 = load i64, i64* %56, align 8
  %417 = add i64 %416, 1
  store i64 %417, i64* %56, align 8
  %418 = getelementptr inbounds i8, i8* %415, i64 %416
  store i8 %414, i8* %418, align 1
  %419 = load %struct.Cr_z_gz_header_s*, %struct.Cr_z_gz_header_s** %251, align 8
  %420 = getelementptr inbounds %struct.Cr_z_gz_header_s, %struct.Cr_z_gz_header_s* %419, i64 0, i32 4
  %421 = load i8*, i8** %420, align 8
  %422 = icmp eq i8* %421, null
  br i1 %422, label %441, label %423

423:                                              ; preds = %405
  %424 = getelementptr inbounds %struct.Cr_z_gz_header_s, %struct.Cr_z_gz_header_s* %419, i64 0, i32 5
  %425 = load i32, i32* %424, align 8
  %426 = trunc i32 %425 to i8
  %427 = load i8*, i8** %238, align 8
  %428 = load i64, i64* %56, align 8
  %429 = add i64 %428, 1
  store i64 %429, i64* %56, align 8
  %430 = getelementptr inbounds i8, i8* %427, i64 %428
  store i8 %426, i8* %430, align 1
  %431 = load %struct.Cr_z_gz_header_s*, %struct.Cr_z_gz_header_s** %251, align 8
  %432 = getelementptr inbounds %struct.Cr_z_gz_header_s, %struct.Cr_z_gz_header_s* %431, i64 0, i32 5
  %433 = load i32, i32* %432, align 8
  %434 = lshr i32 %433, 8
  %435 = trunc i32 %434 to i8
  %436 = load i8*, i8** %238, align 8
  %437 = load i64, i64* %56, align 8
  %438 = add i64 %437, 1
  store i64 %438, i64* %56, align 8
  %439 = getelementptr inbounds i8, i8* %436, i64 %437
  store i8 %435, i8* %439, align 1
  %440 = load %struct.Cr_z_gz_header_s*, %struct.Cr_z_gz_header_s** %251, align 8
  br label %441

441:                                              ; preds = %405, %423
  %442 = phi %struct.Cr_z_gz_header_s* [ %419, %405 ], [ %440, %423 ]
  %443 = getelementptr inbounds %struct.Cr_z_gz_header_s, %struct.Cr_z_gz_header_s* %442, i64 0, i32 11
  %444 = load i32, i32* %443, align 4
  %445 = icmp eq i32 %444, 0
  br i1 %445, label %453, label %446

446:                                              ; preds = %441
  %447 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 12
  %448 = load i64, i64* %447, align 8
  %449 = load i8*, i8** %238, align 8
  %450 = load i64, i64* %56, align 8
  %451 = trunc i64 %450 to i32
  %452 = tail call i64 @Cr_z_crc32(i64 %448, i8* %449, i32 %451) #8
  store i64 %452, i64* %447, align 8
  br label %453

453:                                              ; preds = %446, %441
  %454 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 8
  store i64 0, i64* %454, align 8
  store i32 69, i32* %21, align 8
  br label %457

455:                                              ; preds = %328, %234
  %456 = phi i32 [ %329, %328 ], [ %235, %234 ]
  switch i32 %456, label %882 [
    i32 69, label %457
    i32 73, label %586
    i32 91, label %685
    i32 103, label %783
  ]

457:                                              ; preds = %455, %453
  %458 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 7
  %459 = load %struct.Cr_z_gz_header_s*, %struct.Cr_z_gz_header_s** %458, align 8
  %460 = getelementptr inbounds %struct.Cr_z_gz_header_s, %struct.Cr_z_gz_header_s* %459, i64 0, i32 4
  %461 = load i8*, i8** %460, align 8
  %462 = icmp eq i8* %461, null
  br i1 %462, label %585, label %463

463:                                              ; preds = %457
  %464 = load i64, i64* %56, align 8
  %465 = getelementptr inbounds %struct.Cr_z_gz_header_s, %struct.Cr_z_gz_header_s* %459, i64 0, i32 5
  %466 = load i32, i32* %465, align 8
  %467 = and i32 %466, 65535
  %468 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 8
  %469 = load i64, i64* %468, align 8
  %470 = trunc i64 %469 to i32
  %471 = sub i32 %467, %470
  %472 = zext i32 %471 to i64
  %473 = add i64 %464, %472
  %474 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 3
  %475 = load i64, i64* %474, align 8
  %476 = icmp ugt i64 %473, %475
  br i1 %476, label %477, label %558

477:                                              ; preds = %463
  %478 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 2
  %479 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 12
  %480 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 5
  br label %490

481:                                              ; preds = %548
  %482 = zext i32 %551 to i64
  %483 = load i64, i64* %474, align 8
  %484 = icmp ult i64 %483, %482
  br i1 %484, label %485, label %552

485:                                              ; preds = %481
  %486 = load %struct.Cr_z_gz_header_s*, %struct.Cr_z_gz_header_s** %458, align 8
  %487 = getelementptr inbounds %struct.Cr_z_gz_header_s, %struct.Cr_z_gz_header_s* %486, i64 0, i32 4
  %488 = load i8*, i8** %487, align 8
  %489 = load i64, i64* %468, align 8
  br label %490

490:                                              ; preds = %485, %477
  %491 = phi i64 [ %469, %477 ], [ %489, %485 ]
  %492 = phi i8* [ %461, %477 ], [ %488, %485 ]
  %493 = phi i64 [ %475, %477 ], [ %483, %485 ]
  %494 = phi i64 [ %464, %477 ], [ 0, %485 ]
  %495 = phi i32 [ %471, %477 ], [ %551, %485 ]
  %496 = sub i64 %493, %494
  %497 = trunc i64 %496 to i32
  %498 = load i8*, i8** %478, align 8
  %499 = getelementptr inbounds i8, i8* %498, i64 %494
  %500 = getelementptr inbounds i8, i8* %492, i64 %491
  %501 = and i64 %496, 4294967295
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %499, i8* align 1 %500, i64 %501, i1 false)
  %502 = load i64, i64* %474, align 8
  store i64 %502, i64* %56, align 8
  %503 = load %struct.Cr_z_gz_header_s*, %struct.Cr_z_gz_header_s** %458, align 8
  %504 = getelementptr inbounds %struct.Cr_z_gz_header_s, %struct.Cr_z_gz_header_s* %503, i64 0, i32 11
  %505 = load i32, i32* %504, align 4
  %506 = icmp ne i32 %505, 0
  %507 = icmp ugt i64 %502, %494
  %508 = and i1 %507, %506
  br i1 %508, label %509, label %516

509:                                              ; preds = %490
  %510 = load i64, i64* %479, align 8
  %511 = load i8*, i8** %478, align 8
  %512 = getelementptr inbounds i8, i8* %511, i64 %494
  %513 = sub i64 %502, %494
  %514 = trunc i64 %513 to i32
  %515 = tail call i64 @Cr_z_crc32(i64 %510, i8* %512, i32 %514) #8
  store i64 %515, i64* %479, align 8
  br label %516

516:                                              ; preds = %490, %509
  %517 = load i64, i64* %468, align 8
  %518 = add i64 %517, %501
  store i64 %518, i64* %468, align 8
  %519 = load %struct.internal_state*, %struct.internal_state** %13, align 8
  tail call void @Cr_z__tr_flush_bits(%struct.internal_state* %519) #8
  %520 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %519, i64 0, i32 5
  %521 = load i64, i64* %520, align 8
  %522 = trunc i64 %521 to i32
  %523 = load i32, i32* %46, align 8
  %524 = icmp ult i32 %523, %522
  %525 = select i1 %524, i32 %523, i32 %522
  %526 = icmp eq i32 %525, 0
  br i1 %526, label %548, label %527

527:                                              ; preds = %516
  %528 = load i8*, i8** %26, align 8
  %529 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %519, i64 0, i32 4
  %530 = load i8*, i8** %529, align 8
  %531 = zext i32 %525 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %528, i8* align 1 %530, i64 %531, i1 false) #8
  %532 = load i8*, i8** %26, align 8
  %533 = getelementptr inbounds i8, i8* %532, i64 %531
  store i8* %533, i8** %26, align 8
  %534 = load i8*, i8** %529, align 8
  %535 = getelementptr inbounds i8, i8* %534, i64 %531
  store i8* %535, i8** %529, align 8
  %536 = load i64, i64* %480, align 8
  %537 = add i64 %536, %531
  store i64 %537, i64* %480, align 8
  %538 = load i32, i32* %46, align 8
  %539 = sub i32 %538, %525
  store i32 %539, i32* %46, align 8
  %540 = load i64, i64* %520, align 8
  %541 = sub i64 %540, %531
  store i64 %541, i64* %520, align 8
  %542 = icmp eq i64 %541, 0
  br i1 %542, label %543, label %548

543:                                              ; preds = %527
  %544 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %519, i64 0, i32 2
  %545 = bitcast i8** %544 to i64*
  %546 = load i64, i64* %545, align 8
  %547 = bitcast i8** %529 to i64*
  store i64 %546, i64* %547, align 8
  br label %548

548:                                              ; preds = %516, %527, %543
  %549 = load i64, i64* %56, align 8
  %550 = icmp eq i64 %549, 0
  %551 = sub i32 %495, %497
  br i1 %550, label %481, label %584

552:                                              ; preds = %481
  %553 = zext i32 %551 to i64
  %554 = load %struct.Cr_z_gz_header_s*, %struct.Cr_z_gz_header_s** %458, align 8
  %555 = getelementptr inbounds %struct.Cr_z_gz_header_s, %struct.Cr_z_gz_header_s* %554, i64 0, i32 4
  %556 = load i8*, i8** %555, align 8
  %557 = load i64, i64* %468, align 8
  br label %558

558:                                              ; preds = %552, %463
  %559 = phi i64 [ %557, %552 ], [ %469, %463 ]
  %560 = phi i8* [ %556, %552 ], [ %461, %463 ]
  %561 = phi i64 [ 0, %552 ], [ %464, %463 ]
  %562 = phi i64 [ %553, %552 ], [ %472, %463 ]
  %563 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 2
  %564 = load i8*, i8** %563, align 8
  %565 = getelementptr inbounds i8, i8* %564, i64 %561
  %566 = getelementptr inbounds i8, i8* %560, i64 %559
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %565, i8* align 1 %566, i64 %562, i1 false)
  %567 = load i64, i64* %56, align 8
  %568 = add i64 %567, %562
  store i64 %568, i64* %56, align 8
  %569 = load %struct.Cr_z_gz_header_s*, %struct.Cr_z_gz_header_s** %458, align 8
  %570 = getelementptr inbounds %struct.Cr_z_gz_header_s, %struct.Cr_z_gz_header_s* %569, i64 0, i32 11
  %571 = load i32, i32* %570, align 4
  %572 = icmp ne i32 %571, 0
  %573 = icmp ugt i64 %568, %561
  %574 = and i1 %573, %572
  br i1 %574, label %575, label %583

575:                                              ; preds = %558
  %576 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 12
  %577 = load i64, i64* %576, align 8
  %578 = load i8*, i8** %563, align 8
  %579 = getelementptr inbounds i8, i8* %578, i64 %561
  %580 = sub i64 %568, %561
  %581 = trunc i64 %580 to i32
  %582 = tail call i64 @Cr_z_crc32(i64 %577, i8* %579, i32 %581) #8
  store i64 %582, i64* %576, align 8
  br label %583

583:                                              ; preds = %575, %558
  store i64 0, i64* %468, align 8
  br label %585

584:                                              ; preds = %548
  store i32 -1, i32* %54, align 4
  br label %1682

585:                                              ; preds = %457, %583
  store i32 73, i32* %21, align 8
  br label %586

586:                                              ; preds = %455, %585
  %587 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 7
  %588 = load %struct.Cr_z_gz_header_s*, %struct.Cr_z_gz_header_s** %587, align 8
  %589 = getelementptr inbounds %struct.Cr_z_gz_header_s, %struct.Cr_z_gz_header_s* %588, i64 0, i32 7
  %590 = load i8*, i8** %589, align 8
  %591 = icmp eq i8* %590, null
  br i1 %591, label %684, label %592

592:                                              ; preds = %586
  %593 = load i64, i64* %56, align 8
  %594 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 3
  %595 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 12
  %596 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 2
  %597 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 5
  %598 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 8
  br label %599

599:                                              ; preds = %666, %592
  %600 = phi i64 [ %593, %592 ], [ %667, %666 ]
  %601 = phi i64 [ %593, %592 ], [ %654, %666 ]
  %602 = load i64, i64* %594, align 8
  %603 = icmp eq i64 %600, %602
  br i1 %603, label %604, label %652

604:                                              ; preds = %599
  %605 = load %struct.Cr_z_gz_header_s*, %struct.Cr_z_gz_header_s** %587, align 8
  %606 = getelementptr inbounds %struct.Cr_z_gz_header_s, %struct.Cr_z_gz_header_s* %605, i64 0, i32 11
  %607 = load i32, i32* %606, align 4
  %608 = icmp ne i32 %607, 0
  %609 = icmp ugt i64 %600, %601
  %610 = and i1 %609, %608
  br i1 %610, label %611, label %618

611:                                              ; preds = %604
  %612 = load i64, i64* %595, align 8
  %613 = load i8*, i8** %596, align 8
  %614 = getelementptr inbounds i8, i8* %613, i64 %601
  %615 = sub i64 %600, %601
  %616 = trunc i64 %615 to i32
  %617 = tail call i64 @Cr_z_crc32(i64 %612, i8* %614, i32 %616) #8
  store i64 %617, i64* %595, align 8
  br label %618

618:                                              ; preds = %604, %611
  %619 = load %struct.internal_state*, %struct.internal_state** %13, align 8
  tail call void @Cr_z__tr_flush_bits(%struct.internal_state* %619) #8
  %620 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %619, i64 0, i32 5
  %621 = load i64, i64* %620, align 8
  %622 = trunc i64 %621 to i32
  %623 = load i32, i32* %46, align 8
  %624 = icmp ult i32 %623, %622
  %625 = select i1 %624, i32 %623, i32 %622
  %626 = icmp eq i32 %625, 0
  br i1 %626, label %648, label %627

627:                                              ; preds = %618
  %628 = load i8*, i8** %26, align 8
  %629 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %619, i64 0, i32 4
  %630 = load i8*, i8** %629, align 8
  %631 = zext i32 %625 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %628, i8* align 1 %630, i64 %631, i1 false) #8
  %632 = load i8*, i8** %26, align 8
  %633 = getelementptr inbounds i8, i8* %632, i64 %631
  store i8* %633, i8** %26, align 8
  %634 = load i8*, i8** %629, align 8
  %635 = getelementptr inbounds i8, i8* %634, i64 %631
  store i8* %635, i8** %629, align 8
  %636 = load i64, i64* %597, align 8
  %637 = add i64 %636, %631
  store i64 %637, i64* %597, align 8
  %638 = load i32, i32* %46, align 8
  %639 = sub i32 %638, %625
  store i32 %639, i32* %46, align 8
  %640 = load i64, i64* %620, align 8
  %641 = sub i64 %640, %631
  store i64 %641, i64* %620, align 8
  %642 = icmp eq i64 %641, 0
  br i1 %642, label %643, label %648

643:                                              ; preds = %627
  %644 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %619, i64 0, i32 2
  %645 = bitcast i8** %644 to i64*
  %646 = load i64, i64* %645, align 8
  %647 = bitcast i8** %629 to i64*
  store i64 %646, i64* %647, align 8
  br label %648

648:                                              ; preds = %618, %627, %643
  %649 = load i64, i64* %56, align 8
  %650 = icmp eq i64 %649, 0
  br i1 %650, label %652, label %651

651:                                              ; preds = %648
  store i32 -1, i32* %54, align 4
  br label %1682

652:                                              ; preds = %648, %599
  %653 = phi i64 [ %600, %599 ], [ 0, %648 ]
  %654 = phi i64 [ %601, %599 ], [ 0, %648 ]
  %655 = load %struct.Cr_z_gz_header_s*, %struct.Cr_z_gz_header_s** %587, align 8
  %656 = getelementptr inbounds %struct.Cr_z_gz_header_s, %struct.Cr_z_gz_header_s* %655, i64 0, i32 7
  %657 = load i8*, i8** %656, align 8
  %658 = load i64, i64* %598, align 8
  %659 = add i64 %658, 1
  store i64 %659, i64* %598, align 8
  %660 = getelementptr inbounds i8, i8* %657, i64 %658
  %661 = load i8, i8* %660, align 1
  %662 = load i8*, i8** %596, align 8
  %663 = add i64 %653, 1
  store i64 %663, i64* %56, align 8
  %664 = getelementptr inbounds i8, i8* %662, i64 %653
  store i8 %661, i8* %664, align 1
  %665 = icmp eq i8 %661, 0
  br i1 %665, label %668, label %666

666:                                              ; preds = %652
  %667 = load i64, i64* %56, align 8
  br label %599

668:                                              ; preds = %652
  %669 = load %struct.Cr_z_gz_header_s*, %struct.Cr_z_gz_header_s** %587, align 8
  %670 = getelementptr inbounds %struct.Cr_z_gz_header_s, %struct.Cr_z_gz_header_s* %669, i64 0, i32 11
  %671 = load i32, i32* %670, align 4
  %672 = icmp eq i32 %671, 0
  br i1 %672, label %683, label %673

673:                                              ; preds = %668
  %674 = load i64, i64* %56, align 8
  %675 = icmp ugt i64 %674, %654
  br i1 %675, label %676, label %683

676:                                              ; preds = %673
  %677 = load i64, i64* %595, align 8
  %678 = load i8*, i8** %596, align 8
  %679 = getelementptr inbounds i8, i8* %678, i64 %654
  %680 = sub i64 %674, %654
  %681 = trunc i64 %680 to i32
  %682 = tail call i64 @Cr_z_crc32(i64 %677, i8* %679, i32 %681) #8
  store i64 %682, i64* %595, align 8
  br label %683

683:                                              ; preds = %668, %676, %673
  store i64 0, i64* %598, align 8
  br label %684

684:                                              ; preds = %586, %683
  store i32 91, i32* %21, align 8
  br label %685

685:                                              ; preds = %455, %684
  %686 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 7
  %687 = load %struct.Cr_z_gz_header_s*, %struct.Cr_z_gz_header_s** %686, align 8
  %688 = getelementptr inbounds %struct.Cr_z_gz_header_s, %struct.Cr_z_gz_header_s* %687, i64 0, i32 9
  %689 = load i8*, i8** %688, align 8
  %690 = icmp eq i8* %689, null
  br i1 %690, label %782, label %691

691:                                              ; preds = %685
  %692 = load i64, i64* %56, align 8
  %693 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 3
  %694 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 12
  %695 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 2
  %696 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 5
  %697 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 8
  br label %698

698:                                              ; preds = %765, %691
  %699 = phi i64 [ %692, %691 ], [ %766, %765 ]
  %700 = phi i64 [ %692, %691 ], [ %753, %765 ]
  %701 = load i64, i64* %693, align 8
  %702 = icmp eq i64 %699, %701
  br i1 %702, label %703, label %751

703:                                              ; preds = %698
  %704 = load %struct.Cr_z_gz_header_s*, %struct.Cr_z_gz_header_s** %686, align 8
  %705 = getelementptr inbounds %struct.Cr_z_gz_header_s, %struct.Cr_z_gz_header_s* %704, i64 0, i32 11
  %706 = load i32, i32* %705, align 4
  %707 = icmp ne i32 %706, 0
  %708 = icmp ugt i64 %699, %700
  %709 = and i1 %708, %707
  br i1 %709, label %710, label %717

710:                                              ; preds = %703
  %711 = load i64, i64* %694, align 8
  %712 = load i8*, i8** %695, align 8
  %713 = getelementptr inbounds i8, i8* %712, i64 %700
  %714 = sub i64 %699, %700
  %715 = trunc i64 %714 to i32
  %716 = tail call i64 @Cr_z_crc32(i64 %711, i8* %713, i32 %715) #8
  store i64 %716, i64* %694, align 8
  br label %717

717:                                              ; preds = %703, %710
  %718 = load %struct.internal_state*, %struct.internal_state** %13, align 8
  tail call void @Cr_z__tr_flush_bits(%struct.internal_state* %718) #8
  %719 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %718, i64 0, i32 5
  %720 = load i64, i64* %719, align 8
  %721 = trunc i64 %720 to i32
  %722 = load i32, i32* %46, align 8
  %723 = icmp ult i32 %722, %721
  %724 = select i1 %723, i32 %722, i32 %721
  %725 = icmp eq i32 %724, 0
  br i1 %725, label %747, label %726

726:                                              ; preds = %717
  %727 = load i8*, i8** %26, align 8
  %728 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %718, i64 0, i32 4
  %729 = load i8*, i8** %728, align 8
  %730 = zext i32 %724 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %727, i8* align 1 %729, i64 %730, i1 false) #8
  %731 = load i8*, i8** %26, align 8
  %732 = getelementptr inbounds i8, i8* %731, i64 %730
  store i8* %732, i8** %26, align 8
  %733 = load i8*, i8** %728, align 8
  %734 = getelementptr inbounds i8, i8* %733, i64 %730
  store i8* %734, i8** %728, align 8
  %735 = load i64, i64* %696, align 8
  %736 = add i64 %735, %730
  store i64 %736, i64* %696, align 8
  %737 = load i32, i32* %46, align 8
  %738 = sub i32 %737, %724
  store i32 %738, i32* %46, align 8
  %739 = load i64, i64* %719, align 8
  %740 = sub i64 %739, %730
  store i64 %740, i64* %719, align 8
  %741 = icmp eq i64 %740, 0
  br i1 %741, label %742, label %747

742:                                              ; preds = %726
  %743 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %718, i64 0, i32 2
  %744 = bitcast i8** %743 to i64*
  %745 = load i64, i64* %744, align 8
  %746 = bitcast i8** %728 to i64*
  store i64 %745, i64* %746, align 8
  br label %747

747:                                              ; preds = %717, %726, %742
  %748 = load i64, i64* %56, align 8
  %749 = icmp eq i64 %748, 0
  br i1 %749, label %751, label %750

750:                                              ; preds = %747
  store i32 -1, i32* %54, align 4
  br label %1682

751:                                              ; preds = %747, %698
  %752 = phi i64 [ %699, %698 ], [ 0, %747 ]
  %753 = phi i64 [ %700, %698 ], [ 0, %747 ]
  %754 = load %struct.Cr_z_gz_header_s*, %struct.Cr_z_gz_header_s** %686, align 8
  %755 = getelementptr inbounds %struct.Cr_z_gz_header_s, %struct.Cr_z_gz_header_s* %754, i64 0, i32 9
  %756 = load i8*, i8** %755, align 8
  %757 = load i64, i64* %697, align 8
  %758 = add i64 %757, 1
  store i64 %758, i64* %697, align 8
  %759 = getelementptr inbounds i8, i8* %756, i64 %757
  %760 = load i8, i8* %759, align 1
  %761 = load i8*, i8** %695, align 8
  %762 = add i64 %752, 1
  store i64 %762, i64* %56, align 8
  %763 = getelementptr inbounds i8, i8* %761, i64 %752
  store i8 %760, i8* %763, align 1
  %764 = icmp eq i8 %760, 0
  br i1 %764, label %767, label %765

765:                                              ; preds = %751
  %766 = load i64, i64* %56, align 8
  br label %698

767:                                              ; preds = %751
  %768 = load %struct.Cr_z_gz_header_s*, %struct.Cr_z_gz_header_s** %686, align 8
  %769 = getelementptr inbounds %struct.Cr_z_gz_header_s, %struct.Cr_z_gz_header_s* %768, i64 0, i32 11
  %770 = load i32, i32* %769, align 4
  %771 = icmp eq i32 %770, 0
  br i1 %771, label %782, label %772

772:                                              ; preds = %767
  %773 = load i64, i64* %56, align 8
  %774 = icmp ugt i64 %773, %753
  br i1 %774, label %775, label %782

775:                                              ; preds = %772
  %776 = load i64, i64* %694, align 8
  %777 = load i8*, i8** %695, align 8
  %778 = getelementptr inbounds i8, i8* %777, i64 %753
  %779 = sub i64 %773, %753
  %780 = trunc i64 %779 to i32
  %781 = tail call i64 @Cr_z_crc32(i64 %776, i8* %778, i32 %780) #8
  store i64 %781, i64* %694, align 8
  br label %782

782:                                              ; preds = %685, %772, %775, %767
  store i32 103, i32* %21, align 8
  br label %783

783:                                              ; preds = %455, %782
  %784 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 7
  %785 = load %struct.Cr_z_gz_header_s*, %struct.Cr_z_gz_header_s** %784, align 8
  %786 = getelementptr inbounds %struct.Cr_z_gz_header_s, %struct.Cr_z_gz_header_s* %785, i64 0, i32 11
  %787 = load i32, i32* %786, align 4
  %788 = icmp eq i32 %787, 0
  br i1 %788, label %847, label %789

789:                                              ; preds = %783
  %790 = load i64, i64* %56, align 8
  %791 = add i64 %790, 2
  %792 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 3
  %793 = load i64, i64* %792, align 8
  %794 = icmp ugt i64 %791, %793
  br i1 %794, label %795, label %830

795:                                              ; preds = %789
  %796 = load %struct.internal_state*, %struct.internal_state** %13, align 8
  tail call void @Cr_z__tr_flush_bits(%struct.internal_state* %796) #8
  %797 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %796, i64 0, i32 5
  %798 = load i64, i64* %797, align 8
  %799 = trunc i64 %798 to i32
  %800 = load i32, i32* %46, align 8
  %801 = icmp ult i32 %800, %799
  %802 = select i1 %801, i32 %800, i32 %799
  %803 = icmp eq i32 %802, 0
  br i1 %803, label %826, label %804

804:                                              ; preds = %795
  %805 = load i8*, i8** %26, align 8
  %806 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %796, i64 0, i32 4
  %807 = load i8*, i8** %806, align 8
  %808 = zext i32 %802 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %805, i8* align 1 %807, i64 %808, i1 false) #8
  %809 = load i8*, i8** %26, align 8
  %810 = getelementptr inbounds i8, i8* %809, i64 %808
  store i8* %810, i8** %26, align 8
  %811 = load i8*, i8** %806, align 8
  %812 = getelementptr inbounds i8, i8* %811, i64 %808
  store i8* %812, i8** %806, align 8
  %813 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 5
  %814 = load i64, i64* %813, align 8
  %815 = add i64 %814, %808
  store i64 %815, i64* %813, align 8
  %816 = load i32, i32* %46, align 8
  %817 = sub i32 %816, %802
  store i32 %817, i32* %46, align 8
  %818 = load i64, i64* %797, align 8
  %819 = sub i64 %818, %808
  store i64 %819, i64* %797, align 8
  %820 = icmp eq i64 %819, 0
  br i1 %820, label %821, label %826

821:                                              ; preds = %804
  %822 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %796, i64 0, i32 2
  %823 = bitcast i8** %822 to i64*
  %824 = load i64, i64* %823, align 8
  %825 = bitcast i8** %806 to i64*
  store i64 %824, i64* %825, align 8
  br label %826

826:                                              ; preds = %795, %804, %821
  %827 = load i64, i64* %56, align 8
  %828 = icmp eq i64 %827, 0
  br i1 %828, label %830, label %829

829:                                              ; preds = %826
  store i32 -1, i32* %54, align 4
  br label %1682

830:                                              ; preds = %826, %789
  %831 = phi i64 [ 0, %826 ], [ %790, %789 ]
  %832 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 12
  %833 = load i64, i64* %832, align 8
  %834 = trunc i64 %833 to i8
  %835 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 2
  %836 = load i8*, i8** %835, align 8
  %837 = add i64 %831, 1
  store i64 %837, i64* %56, align 8
  %838 = getelementptr inbounds i8, i8* %836, i64 %831
  store i8 %834, i8* %838, align 1
  %839 = load i64, i64* %832, align 8
  %840 = lshr i64 %839, 8
  %841 = trunc i64 %840 to i8
  %842 = load i8*, i8** %835, align 8
  %843 = load i64, i64* %56, align 8
  %844 = add i64 %843, 1
  store i64 %844, i64* %56, align 8
  %845 = getelementptr inbounds i8, i8* %842, i64 %843
  store i8 %841, i8* %845, align 1
  %846 = tail call i64 @Cr_z_crc32(i64 0, i8* null, i32 0) #8
  store i64 %846, i64* %832, align 8
  br label %847

847:                                              ; preds = %783, %830
  store i32 113, i32* %21, align 8
  %848 = load %struct.internal_state*, %struct.internal_state** %13, align 8
  tail call void @Cr_z__tr_flush_bits(%struct.internal_state* %848) #8
  %849 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %848, i64 0, i32 5
  %850 = load i64, i64* %849, align 8
  %851 = trunc i64 %850 to i32
  %852 = load i32, i32* %46, align 8
  %853 = icmp ult i32 %852, %851
  %854 = select i1 %853, i32 %852, i32 %851
  %855 = icmp eq i32 %854, 0
  br i1 %855, label %878, label %856

856:                                              ; preds = %847
  %857 = load i8*, i8** %26, align 8
  %858 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %848, i64 0, i32 4
  %859 = load i8*, i8** %858, align 8
  %860 = zext i32 %854 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %857, i8* align 1 %859, i64 %860, i1 false) #8
  %861 = load i8*, i8** %26, align 8
  %862 = getelementptr inbounds i8, i8* %861, i64 %860
  store i8* %862, i8** %26, align 8
  %863 = load i8*, i8** %858, align 8
  %864 = getelementptr inbounds i8, i8* %863, i64 %860
  store i8* %864, i8** %858, align 8
  %865 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 5
  %866 = load i64, i64* %865, align 8
  %867 = add i64 %866, %860
  store i64 %867, i64* %865, align 8
  %868 = load i32, i32* %46, align 8
  %869 = sub i32 %868, %854
  store i32 %869, i32* %46, align 8
  %870 = load i64, i64* %849, align 8
  %871 = sub i64 %870, %860
  store i64 %871, i64* %849, align 8
  %872 = icmp eq i64 %871, 0
  br i1 %872, label %873, label %878

873:                                              ; preds = %856
  %874 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %848, i64 0, i32 2
  %875 = bitcast i8** %874 to i64*
  %876 = load i64, i64* %875, align 8
  %877 = bitcast i8** %858 to i64*
  store i64 %876, i64* %877, align 8
  br label %878

878:                                              ; preds = %847, %856, %873
  %879 = load i64, i64* %56, align 8
  %880 = icmp eq i64 %879, 0
  br i1 %880, label %882, label %881

881:                                              ; preds = %878
  store i32 -1, i32* %54, align 4
  br label %1682

882:                                              ; preds = %455, %878
  %883 = load i32, i32* %30, align 8
  %884 = icmp eq i32 %883, 0
  br i1 %884, label %885, label %894

885:                                              ; preds = %118, %882
  %886 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 30
  %887 = load i32, i32* %886, align 4
  %888 = icmp eq i32 %887, 0
  br i1 %888, label %889, label %894

889:                                              ; preds = %885
  %890 = icmp eq i32 %1, 0
  br i1 %890, label %1547, label %891

891:                                              ; preds = %889
  %892 = load i32, i32* %21, align 8
  %893 = icmp eq i32 %892, 666
  br i1 %893, label %1547, label %894

894:                                              ; preds = %891, %885, %882
  %895 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 34
  %896 = load i32, i32* %895, align 4
  %897 = icmp eq i32 %896, 0
  br i1 %897, label %898, label %900

898:                                              ; preds = %894
  %899 = tail call i32 @deflate_stored(%struct.internal_state* %14, i32 %1)
  br label %1471

900:                                              ; preds = %894
  %901 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 35
  %902 = load i32, i32* %901, align 8
  switch i32 %902, label %1466 [
    i32 2, label %903
    i32 3, label %1118
  ]

903:                                              ; preds = %900
  %904 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 30
  %905 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 25
  %906 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 15
  %907 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 28
  %908 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 49
  %909 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 51
  %910 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 52
  %911 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 24
  br label %912

912:                                              ; preds = %1004, %903
  %913 = load i32, i32* %904, align 4
  %914 = icmp eq i32 %913, 0
  br i1 %914, label %915, label %920

915:                                              ; preds = %912
  tail call fastcc void @fill_window(%struct.internal_state* %14) #8
  %916 = load i32, i32* %904, align 4
  %917 = icmp eq i32 %916, 0
  br i1 %917, label %918, label %920

918:                                              ; preds = %915
  %919 = icmp eq i32 %1, 0
  br i1 %919, label %1479, label %1005

920:                                              ; preds = %915, %912
  store i32 0, i32* %905, align 8
  %921 = load i8*, i8** %906, align 8
  %922 = load i32, i32* %907, align 4
  %923 = zext i32 %922 to i64
  %924 = getelementptr inbounds i8, i8* %921, i64 %923
  %925 = load i8, i8* %924, align 1
  %926 = load i8*, i8** %908, align 8
  %927 = load i32, i32* %909, align 4
  %928 = add i32 %927, 1
  store i32 %928, i32* %909, align 4
  %929 = zext i32 %927 to i64
  %930 = getelementptr inbounds i8, i8* %926, i64 %929
  store i8 0, i8* %930, align 1
  %931 = load i8*, i8** %908, align 8
  %932 = load i32, i32* %909, align 4
  %933 = add i32 %932, 1
  store i32 %933, i32* %909, align 4
  %934 = zext i32 %932 to i64
  %935 = getelementptr inbounds i8, i8* %931, i64 %934
  store i8 0, i8* %935, align 1
  %936 = load i8*, i8** %908, align 8
  %937 = load i32, i32* %909, align 4
  %938 = add i32 %937, 1
  store i32 %938, i32* %909, align 4
  %939 = zext i32 %937 to i64
  %940 = getelementptr inbounds i8, i8* %936, i64 %939
  store i8 %925, i8* %940, align 1
  %941 = zext i8 %925 to i64
  %942 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 38, i64 %941, i32 0, i32 0
  %943 = load i16, i16* %942, align 4
  %944 = add i16 %943, 1
  store i16 %944, i16* %942, align 4
  %945 = load i32, i32* %909, align 4
  %946 = load i32, i32* %910, align 8
  %947 = icmp eq i32 %945, %946
  %948 = load i32, i32* %904, align 4
  %949 = add i32 %948, -1
  store i32 %949, i32* %904, align 4
  %950 = load i32, i32* %907, align 4
  %951 = add i32 %950, 1
  store i32 %951, i32* %907, align 4
  br i1 %947, label %952, label %1004

952:                                              ; preds = %920
  %953 = load i64, i64* %911, align 8
  %954 = icmp sgt i64 %953, -1
  br i1 %954, label %955, label %959

955:                                              ; preds = %952
  %956 = load i8*, i8** %906, align 8
  %957 = and i64 %953, 4294967295
  %958 = getelementptr inbounds i8, i8* %956, i64 %957
  br label %959

959:                                              ; preds = %955, %952
  %960 = phi i8* [ %958, %955 ], [ null, %952 ]
  %961 = zext i32 %951 to i64
  %962 = sub nsw i64 %961, %953
  tail call void @Cr_z__tr_flush_block(%struct.internal_state* %14, i8* %960, i64 %962, i32 0) #8
  %963 = load i32, i32* %907, align 4
  %964 = zext i32 %963 to i64
  store i64 %964, i64* %911, align 8
  %965 = load %struct.z_stream_s*, %struct.z_stream_s** %17, align 8
  %966 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %965, i64 0, i32 7
  %967 = load %struct.internal_state*, %struct.internal_state** %966, align 8
  tail call void @Cr_z__tr_flush_bits(%struct.internal_state* %967) #8
  %968 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %967, i64 0, i32 5
  %969 = load i64, i64* %968, align 8
  %970 = trunc i64 %969 to i32
  %971 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %965, i64 0, i32 4
  %972 = load i32, i32* %971, align 8
  %973 = icmp ult i32 %972, %970
  %974 = select i1 %973, i32 %972, i32 %970
  %975 = icmp eq i32 %974, 0
  br i1 %975, label %999, label %976

976:                                              ; preds = %959
  %977 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %965, i64 0, i32 3
  %978 = load i8*, i8** %977, align 8
  %979 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %967, i64 0, i32 4
  %980 = load i8*, i8** %979, align 8
  %981 = zext i32 %974 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %978, i8* align 1 %980, i64 %981, i1 false) #8
  %982 = load i8*, i8** %977, align 8
  %983 = getelementptr inbounds i8, i8* %982, i64 %981
  store i8* %983, i8** %977, align 8
  %984 = load i8*, i8** %979, align 8
  %985 = getelementptr inbounds i8, i8* %984, i64 %981
  store i8* %985, i8** %979, align 8
  %986 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %965, i64 0, i32 5
  %987 = load i64, i64* %986, align 8
  %988 = add i64 %987, %981
  store i64 %988, i64* %986, align 8
  %989 = load i32, i32* %971, align 8
  %990 = sub i32 %989, %974
  store i32 %990, i32* %971, align 8
  %991 = load i64, i64* %968, align 8
  %992 = sub i64 %991, %981
  store i64 %992, i64* %968, align 8
  %993 = icmp eq i64 %992, 0
  br i1 %993, label %994, label %999

994:                                              ; preds = %976
  %995 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %967, i64 0, i32 2
  %996 = bitcast i8** %995 to i64*
  %997 = load i64, i64* %996, align 8
  %998 = bitcast i8** %979 to i64*
  store i64 %997, i64* %998, align 8
  br label %999

999:                                              ; preds = %994, %976, %959
  %1000 = load %struct.z_stream_s*, %struct.z_stream_s** %17, align 8
  %1001 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %1000, i64 0, i32 4
  %1002 = load i32, i32* %1001, align 8
  %1003 = icmp eq i32 %1002, 0
  br i1 %1003, label %1479, label %1004

1004:                                             ; preds = %999, %920
  br label %912

1005:                                             ; preds = %918
  %1006 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 56
  store i32 0, i32* %1006, align 4
  %1007 = icmp eq i32 %1, 4
  br i1 %1007, label %1008, label %1062

1008:                                             ; preds = %1005
  %1009 = load i64, i64* %911, align 8
  %1010 = icmp sgt i64 %1009, -1
  br i1 %1010, label %1011, label %1015

1011:                                             ; preds = %1008
  %1012 = load i8*, i8** %906, align 8
  %1013 = and i64 %1009, 4294967295
  %1014 = getelementptr inbounds i8, i8* %1012, i64 %1013
  br label %1015

1015:                                             ; preds = %1011, %1008
  %1016 = phi i8* [ %1014, %1011 ], [ null, %1008 ]
  %1017 = load i32, i32* %907, align 4
  %1018 = zext i32 %1017 to i64
  %1019 = sub nsw i64 %1018, %1009
  tail call void @Cr_z__tr_flush_block(%struct.internal_state* %14, i8* %1016, i64 %1019, i32 1) #8
  %1020 = load i32, i32* %907, align 4
  %1021 = zext i32 %1020 to i64
  store i64 %1021, i64* %911, align 8
  %1022 = load %struct.z_stream_s*, %struct.z_stream_s** %17, align 8
  %1023 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %1022, i64 0, i32 7
  %1024 = load %struct.internal_state*, %struct.internal_state** %1023, align 8
  tail call void @Cr_z__tr_flush_bits(%struct.internal_state* %1024) #8
  %1025 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %1024, i64 0, i32 5
  %1026 = load i64, i64* %1025, align 8
  %1027 = trunc i64 %1026 to i32
  %1028 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %1022, i64 0, i32 4
  %1029 = load i32, i32* %1028, align 8
  %1030 = icmp ult i32 %1029, %1027
  %1031 = select i1 %1030, i32 %1029, i32 %1027
  %1032 = icmp eq i32 %1031, 0
  br i1 %1032, label %1056, label %1033

1033:                                             ; preds = %1015
  %1034 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %1022, i64 0, i32 3
  %1035 = load i8*, i8** %1034, align 8
  %1036 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %1024, i64 0, i32 4
  %1037 = load i8*, i8** %1036, align 8
  %1038 = zext i32 %1031 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1035, i8* align 1 %1037, i64 %1038, i1 false) #8
  %1039 = load i8*, i8** %1034, align 8
  %1040 = getelementptr inbounds i8, i8* %1039, i64 %1038
  store i8* %1040, i8** %1034, align 8
  %1041 = load i8*, i8** %1036, align 8
  %1042 = getelementptr inbounds i8, i8* %1041, i64 %1038
  store i8* %1042, i8** %1036, align 8
  %1043 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %1022, i64 0, i32 5
  %1044 = load i64, i64* %1043, align 8
  %1045 = add i64 %1044, %1038
  store i64 %1045, i64* %1043, align 8
  %1046 = load i32, i32* %1028, align 8
  %1047 = sub i32 %1046, %1031
  store i32 %1047, i32* %1028, align 8
  %1048 = load i64, i64* %1025, align 8
  %1049 = sub i64 %1048, %1038
  store i64 %1049, i64* %1025, align 8
  %1050 = icmp eq i64 %1049, 0
  br i1 %1050, label %1051, label %1056

1051:                                             ; preds = %1033
  %1052 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %1024, i64 0, i32 2
  %1053 = bitcast i8** %1052 to i64*
  %1054 = load i64, i64* %1053, align 8
  %1055 = bitcast i8** %1036 to i64*
  store i64 %1054, i64* %1055, align 8
  br label %1056

1056:                                             ; preds = %1051, %1033, %1015
  %1057 = load %struct.z_stream_s*, %struct.z_stream_s** %17, align 8
  %1058 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %1057, i64 0, i32 4
  %1059 = load i32, i32* %1058, align 8
  %1060 = icmp eq i32 %1059, 0
  %1061 = select i1 %1060, i32 2, i32 3
  br label %1471

1062:                                             ; preds = %1005
  %1063 = load i32, i32* %909, align 4
  %1064 = icmp eq i32 %1063, 0
  br i1 %1064, label %1485, label %1065

1065:                                             ; preds = %1062
  %1066 = load i64, i64* %911, align 8
  %1067 = icmp sgt i64 %1066, -1
  br i1 %1067, label %1068, label %1072

1068:                                             ; preds = %1065
  %1069 = load i8*, i8** %906, align 8
  %1070 = and i64 %1066, 4294967295
  %1071 = getelementptr inbounds i8, i8* %1069, i64 %1070
  br label %1072

1072:                                             ; preds = %1068, %1065
  %1073 = phi i8* [ %1071, %1068 ], [ null, %1065 ]
  %1074 = load i32, i32* %907, align 4
  %1075 = zext i32 %1074 to i64
  %1076 = sub nsw i64 %1075, %1066
  tail call void @Cr_z__tr_flush_block(%struct.internal_state* %14, i8* %1073, i64 %1076, i32 0) #8
  %1077 = load i32, i32* %907, align 4
  %1078 = zext i32 %1077 to i64
  store i64 %1078, i64* %911, align 8
  %1079 = load %struct.z_stream_s*, %struct.z_stream_s** %17, align 8
  %1080 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %1079, i64 0, i32 7
  %1081 = load %struct.internal_state*, %struct.internal_state** %1080, align 8
  tail call void @Cr_z__tr_flush_bits(%struct.internal_state* %1081) #8
  %1082 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %1081, i64 0, i32 5
  %1083 = load i64, i64* %1082, align 8
  %1084 = trunc i64 %1083 to i32
  %1085 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %1079, i64 0, i32 4
  %1086 = load i32, i32* %1085, align 8
  %1087 = icmp ult i32 %1086, %1084
  %1088 = select i1 %1087, i32 %1086, i32 %1084
  %1089 = icmp eq i32 %1088, 0
  br i1 %1089, label %1113, label %1090

1090:                                             ; preds = %1072
  %1091 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %1079, i64 0, i32 3
  %1092 = load i8*, i8** %1091, align 8
  %1093 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %1081, i64 0, i32 4
  %1094 = load i8*, i8** %1093, align 8
  %1095 = zext i32 %1088 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1092, i8* align 1 %1094, i64 %1095, i1 false) #8
  %1096 = load i8*, i8** %1091, align 8
  %1097 = getelementptr inbounds i8, i8* %1096, i64 %1095
  store i8* %1097, i8** %1091, align 8
  %1098 = load i8*, i8** %1093, align 8
  %1099 = getelementptr inbounds i8, i8* %1098, i64 %1095
  store i8* %1099, i8** %1093, align 8
  %1100 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %1079, i64 0, i32 5
  %1101 = load i64, i64* %1100, align 8
  %1102 = add i64 %1101, %1095
  store i64 %1102, i64* %1100, align 8
  %1103 = load i32, i32* %1085, align 8
  %1104 = sub i32 %1103, %1088
  store i32 %1104, i32* %1085, align 8
  %1105 = load i64, i64* %1082, align 8
  %1106 = sub i64 %1105, %1095
  store i64 %1106, i64* %1082, align 8
  %1107 = icmp eq i64 %1106, 0
  br i1 %1107, label %1108, label %1113

1108:                                             ; preds = %1090
  %1109 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %1081, i64 0, i32 2
  %1110 = bitcast i8** %1109 to i64*
  %1111 = load i64, i64* %1110, align 8
  %1112 = bitcast i8** %1093 to i64*
  store i64 %1111, i64* %1112, align 8
  br label %1113

1113:                                             ; preds = %1108, %1090, %1072
  %1114 = load %struct.z_stream_s*, %struct.z_stream_s** %17, align 8
  %1115 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %1114, i64 0, i32 4
  %1116 = load i32, i32* %1115, align 8
  %1117 = icmp eq i32 %1116, 0
  br i1 %1117, label %1479, label %1485

1118:                                             ; preds = %900
  %1119 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 30
  %1120 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 25
  %1121 = icmp eq i32 %1, 0
  %1122 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 28
  %1123 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 15
  %1124 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 49
  %1125 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 51
  %1126 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 52
  %1127 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 24
  br label %1128

1128:                                             ; preds = %1352, %1118
  %1129 = load i32, i32* %1119, align 4
  %1130 = icmp ult i32 %1129, 259
  br i1 %1130, label %1132, label %1131

1131:                                             ; preds = %1128
  store i32 0, i32* %1120, align 8
  br label %1142

1132:                                             ; preds = %1128
  tail call fastcc void @fill_window(%struct.internal_state* %14) #8
  %1133 = load i32, i32* %1119, align 4
  %1134 = icmp ult i32 %1133, 259
  %1135 = and i1 %1121, %1134
  br i1 %1135, label %1479, label %1136

1136:                                             ; preds = %1132
  %1137 = icmp eq i32 %1133, 0
  br i1 %1137, label %1353, label %1138

1138:                                             ; preds = %1136
  store i32 0, i32* %1120, align 8
  %1139 = icmp ugt i32 %1133, 2
  br i1 %1139, label %1142, label %1140

1140:                                             ; preds = %1138
  %1141 = load i32, i32* %1122, align 4
  br label %1267

1142:                                             ; preds = %1138, %1131
  %1143 = phi i32 [ %1129, %1131 ], [ %1133, %1138 ]
  %1144 = load i32, i32* %1122, align 4
  %1145 = icmp eq i32 %1144, 0
  br i1 %1145, label %1267, label %1146

1146:                                             ; preds = %1142
  %1147 = load i8*, i8** %1123, align 8
  %1148 = zext i32 %1144 to i64
  %1149 = getelementptr inbounds i8, i8* %1147, i64 %1148
  %1150 = getelementptr inbounds i8, i8* %1149, i64 -1
  %1151 = load i8, i8* %1150, align 1
  %1152 = load i8, i8* %1149, align 1
  %1153 = icmp eq i8 %1151, %1152
  br i1 %1153, label %1154, label %1267

1154:                                             ; preds = %1146
  %1155 = getelementptr inbounds i8, i8* %1149, i64 1
  %1156 = load i8, i8* %1155, align 1
  %1157 = icmp eq i8 %1151, %1156
  br i1 %1157, label %1158, label %1267

1158:                                             ; preds = %1154
  %1159 = getelementptr inbounds i8, i8* %1149, i64 2
  %1160 = load i8, i8* %1159, align 1
  %1161 = icmp eq i8 %1151, %1160
  br i1 %1161, label %1162, label %1267

1162:                                             ; preds = %1158
  %1163 = getelementptr inbounds i8, i8* %1149, i64 258
  br label %1164

1164:                                             ; preds = %1194, %1162
  %1165 = phi i64 [ 2, %1162 ], [ %1195, %1194 ]
  %1166 = getelementptr inbounds i8, i8* %1149, i64 %1165
  %1167 = getelementptr inbounds i8, i8* %1166, i64 1
  %1168 = load i8, i8* %1167, align 1
  %1169 = icmp eq i8 %1151, %1168
  br i1 %1169, label %1170, label %1201

1170:                                             ; preds = %1164
  %1171 = getelementptr inbounds i8, i8* %1166, i64 2
  %1172 = load i8, i8* %1171, align 1
  %1173 = icmp eq i8 %1151, %1172
  br i1 %1173, label %1174, label %1203

1174:                                             ; preds = %1170
  %1175 = getelementptr inbounds i8, i8* %1166, i64 3
  %1176 = load i8, i8* %1175, align 1
  %1177 = icmp eq i8 %1151, %1176
  br i1 %1177, label %1178, label %1205

1178:                                             ; preds = %1174
  %1179 = getelementptr inbounds i8, i8* %1166, i64 4
  %1180 = load i8, i8* %1179, align 1
  %1181 = icmp eq i8 %1151, %1180
  br i1 %1181, label %1182, label %1207

1182:                                             ; preds = %1178
  %1183 = getelementptr inbounds i8, i8* %1166, i64 5
  %1184 = load i8, i8* %1183, align 1
  %1185 = icmp eq i8 %1151, %1184
  br i1 %1185, label %1186, label %1209

1186:                                             ; preds = %1182
  %1187 = getelementptr inbounds i8, i8* %1166, i64 6
  %1188 = load i8, i8* %1187, align 1
  %1189 = icmp eq i8 %1151, %1188
  br i1 %1189, label %1190, label %1211

1190:                                             ; preds = %1186
  %1191 = getelementptr inbounds i8, i8* %1166, i64 7
  %1192 = load i8, i8* %1191, align 1
  %1193 = icmp eq i8 %1151, %1192
  br i1 %1193, label %1194, label %1213

1194:                                             ; preds = %1190
  %1195 = add nuw nsw i64 %1165, 8
  %1196 = getelementptr inbounds i8, i8* %1149, i64 %1195
  %1197 = load i8, i8* %1196, align 1
  %1198 = icmp eq i8 %1151, %1197
  %1199 = icmp ult i64 %1195, 258
  %1200 = and i1 %1199, %1198
  br i1 %1200, label %1164, label %1215

1201:                                             ; preds = %1164
  %1202 = getelementptr inbounds i8, i8* %1166, i64 1
  br label %1217

1203:                                             ; preds = %1170
  %1204 = getelementptr inbounds i8, i8* %1166, i64 2
  br label %1217

1205:                                             ; preds = %1174
  %1206 = getelementptr inbounds i8, i8* %1166, i64 3
  br label %1217

1207:                                             ; preds = %1178
  %1208 = getelementptr inbounds i8, i8* %1166, i64 4
  br label %1217

1209:                                             ; preds = %1182
  %1210 = getelementptr inbounds i8, i8* %1166, i64 5
  br label %1217

1211:                                             ; preds = %1186
  %1212 = getelementptr inbounds i8, i8* %1166, i64 6
  br label %1217

1213:                                             ; preds = %1190
  %1214 = getelementptr inbounds i8, i8* %1166, i64 7
  br label %1217

1215:                                             ; preds = %1194
  %1216 = getelementptr inbounds i8, i8* %1149, i64 %1195
  br label %1217

1217:                                             ; preds = %1215, %1213, %1211, %1209, %1207, %1205, %1203, %1201
  %1218 = phi i8* [ %1202, %1201 ], [ %1204, %1203 ], [ %1206, %1205 ], [ %1208, %1207 ], [ %1210, %1209 ], [ %1212, %1211 ], [ %1214, %1213 ], [ %1216, %1215 ]
  %1219 = ptrtoint i8* %1163 to i64
  %1220 = ptrtoint i8* %1218 to i64
  %1221 = sub i64 %1219, %1220
  %1222 = trunc i64 %1221 to i32
  %1223 = sub i32 258, %1222
  %1224 = icmp ugt i32 %1223, %1143
  %1225 = select i1 %1224, i32 %1143, i32 %1223
  store i32 %1225, i32* %1120, align 8
  %1226 = icmp ugt i32 %1225, 2
  br i1 %1226, label %1227, label %1267

1227:                                             ; preds = %1217
  %1228 = trunc i32 %1225 to i8
  %1229 = add i8 %1228, -3
  %1230 = load i8*, i8** %1124, align 8
  %1231 = load i32, i32* %1125, align 4
  %1232 = add i32 %1231, 1
  store i32 %1232, i32* %1125, align 4
  %1233 = zext i32 %1231 to i64
  %1234 = getelementptr inbounds i8, i8* %1230, i64 %1233
  store i8 1, i8* %1234, align 1
  %1235 = load i8*, i8** %1124, align 8
  %1236 = load i32, i32* %1125, align 4
  %1237 = add i32 %1236, 1
  store i32 %1237, i32* %1125, align 4
  %1238 = zext i32 %1236 to i64
  %1239 = getelementptr inbounds i8, i8* %1235, i64 %1238
  store i8 0, i8* %1239, align 1
  %1240 = load i8*, i8** %1124, align 8
  %1241 = load i32, i32* %1125, align 4
  %1242 = add i32 %1241, 1
  store i32 %1242, i32* %1125, align 4
  %1243 = zext i32 %1241 to i64
  %1244 = getelementptr inbounds i8, i8* %1240, i64 %1243
  store i8 %1229, i8* %1244, align 1
  %1245 = zext i8 %1229 to i64
  %1246 = getelementptr inbounds [0 x i8], [0 x i8]* @Cr_z__length_code, i64 0, i64 %1245
  %1247 = load i8, i8* %1246, align 1
  %1248 = zext i8 %1247 to i64
  %1249 = or i64 %1248, 256
  %1250 = add nuw nsw i64 %1249, 1
  %1251 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 38, i64 %1250, i32 0, i32 0
  %1252 = load i16, i16* %1251, align 4
  %1253 = add i16 %1252, 1
  store i16 %1253, i16* %1251, align 4
  %1254 = load i8, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @Cr_z__dist_code, i64 0, i64 0), align 1
  %1255 = zext i8 %1254 to i64
  %1256 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 39, i64 %1255, i32 0, i32 0
  %1257 = load i16, i16* %1256, align 4
  %1258 = add i16 %1257, 1
  store i16 %1258, i16* %1256, align 4
  %1259 = load i32, i32* %1125, align 4
  %1260 = load i32, i32* %1126, align 8
  %1261 = icmp eq i32 %1259, %1260
  %1262 = load i32, i32* %1120, align 8
  %1263 = load i32, i32* %1119, align 4
  %1264 = sub i32 %1263, %1262
  store i32 %1264, i32* %1119, align 4
  %1265 = load i32, i32* %1122, align 4
  %1266 = add i32 %1265, %1262
  store i32 %1266, i32* %1122, align 4
  store i32 0, i32* %1120, align 8
  br i1 %1261, label %1299, label %1352

1267:                                             ; preds = %1217, %1158, %1154, %1146, %1142, %1140
  %1268 = phi i32 [ %1141, %1140 ], [ %1144, %1217 ], [ %1144, %1158 ], [ %1144, %1154 ], [ %1144, %1146 ], [ 0, %1142 ]
  %1269 = load i8*, i8** %1123, align 8
  %1270 = zext i32 %1268 to i64
  %1271 = getelementptr inbounds i8, i8* %1269, i64 %1270
  %1272 = load i8, i8* %1271, align 1
  %1273 = load i8*, i8** %1124, align 8
  %1274 = load i32, i32* %1125, align 4
  %1275 = add i32 %1274, 1
  store i32 %1275, i32* %1125, align 4
  %1276 = zext i32 %1274 to i64
  %1277 = getelementptr inbounds i8, i8* %1273, i64 %1276
  store i8 0, i8* %1277, align 1
  %1278 = load i8*, i8** %1124, align 8
  %1279 = load i32, i32* %1125, align 4
  %1280 = add i32 %1279, 1
  store i32 %1280, i32* %1125, align 4
  %1281 = zext i32 %1279 to i64
  %1282 = getelementptr inbounds i8, i8* %1278, i64 %1281
  store i8 0, i8* %1282, align 1
  %1283 = load i8*, i8** %1124, align 8
  %1284 = load i32, i32* %1125, align 4
  %1285 = add i32 %1284, 1
  store i32 %1285, i32* %1125, align 4
  %1286 = zext i32 %1284 to i64
  %1287 = getelementptr inbounds i8, i8* %1283, i64 %1286
  store i8 %1272, i8* %1287, align 1
  %1288 = zext i8 %1272 to i64
  %1289 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 38, i64 %1288, i32 0, i32 0
  %1290 = load i16, i16* %1289, align 4
  %1291 = add i16 %1290, 1
  store i16 %1291, i16* %1289, align 4
  %1292 = load i32, i32* %1125, align 4
  %1293 = load i32, i32* %1126, align 8
  %1294 = icmp eq i32 %1292, %1293
  %1295 = load i32, i32* %1119, align 4
  %1296 = add i32 %1295, -1
  store i32 %1296, i32* %1119, align 4
  %1297 = load i32, i32* %1122, align 4
  %1298 = add i32 %1297, 1
  store i32 %1298, i32* %1122, align 4
  br i1 %1294, label %1299, label %1352

1299:                                             ; preds = %1267, %1227
  %1300 = phi i32 [ %1266, %1227 ], [ %1298, %1267 ]
  %1301 = load i64, i64* %1127, align 8
  %1302 = icmp sgt i64 %1301, -1
  br i1 %1302, label %1303, label %1307

1303:                                             ; preds = %1299
  %1304 = load i8*, i8** %1123, align 8
  %1305 = and i64 %1301, 4294967295
  %1306 = getelementptr inbounds i8, i8* %1304, i64 %1305
  br label %1307

1307:                                             ; preds = %1303, %1299
  %1308 = phi i8* [ %1306, %1303 ], [ null, %1299 ]
  %1309 = zext i32 %1300 to i64
  %1310 = sub nsw i64 %1309, %1301
  tail call void @Cr_z__tr_flush_block(%struct.internal_state* %14, i8* %1308, i64 %1310, i32 0) #8
  %1311 = load i32, i32* %1122, align 4
  %1312 = zext i32 %1311 to i64
  store i64 %1312, i64* %1127, align 8
  %1313 = load %struct.z_stream_s*, %struct.z_stream_s** %17, align 8
  %1314 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %1313, i64 0, i32 7
  %1315 = load %struct.internal_state*, %struct.internal_state** %1314, align 8
  tail call void @Cr_z__tr_flush_bits(%struct.internal_state* %1315) #8
  %1316 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %1315, i64 0, i32 5
  %1317 = load i64, i64* %1316, align 8
  %1318 = trunc i64 %1317 to i32
  %1319 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %1313, i64 0, i32 4
  %1320 = load i32, i32* %1319, align 8
  %1321 = icmp ult i32 %1320, %1318
  %1322 = select i1 %1321, i32 %1320, i32 %1318
  %1323 = icmp eq i32 %1322, 0
  br i1 %1323, label %1347, label %1324

1324:                                             ; preds = %1307
  %1325 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %1313, i64 0, i32 3
  %1326 = load i8*, i8** %1325, align 8
  %1327 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %1315, i64 0, i32 4
  %1328 = load i8*, i8** %1327, align 8
  %1329 = zext i32 %1322 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1326, i8* align 1 %1328, i64 %1329, i1 false) #8
  %1330 = load i8*, i8** %1325, align 8
  %1331 = getelementptr inbounds i8, i8* %1330, i64 %1329
  store i8* %1331, i8** %1325, align 8
  %1332 = load i8*, i8** %1327, align 8
  %1333 = getelementptr inbounds i8, i8* %1332, i64 %1329
  store i8* %1333, i8** %1327, align 8
  %1334 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %1313, i64 0, i32 5
  %1335 = load i64, i64* %1334, align 8
  %1336 = add i64 %1335, %1329
  store i64 %1336, i64* %1334, align 8
  %1337 = load i32, i32* %1319, align 8
  %1338 = sub i32 %1337, %1322
  store i32 %1338, i32* %1319, align 8
  %1339 = load i64, i64* %1316, align 8
  %1340 = sub i64 %1339, %1329
  store i64 %1340, i64* %1316, align 8
  %1341 = icmp eq i64 %1340, 0
  br i1 %1341, label %1342, label %1347

1342:                                             ; preds = %1324
  %1343 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %1315, i64 0, i32 2
  %1344 = bitcast i8** %1343 to i64*
  %1345 = load i64, i64* %1344, align 8
  %1346 = bitcast i8** %1327 to i64*
  store i64 %1345, i64* %1346, align 8
  br label %1347

1347:                                             ; preds = %1342, %1324, %1307
  %1348 = load %struct.z_stream_s*, %struct.z_stream_s** %17, align 8
  %1349 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %1348, i64 0, i32 4
  %1350 = load i32, i32* %1349, align 8
  %1351 = icmp eq i32 %1350, 0
  br i1 %1351, label %1479, label %1352

1352:                                             ; preds = %1347, %1267, %1227
  br label %1128

1353:                                             ; preds = %1136
  %1354 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 56
  store i32 0, i32* %1354, align 4
  %1355 = icmp eq i32 %1, 4
  br i1 %1355, label %1356, label %1410

1356:                                             ; preds = %1353
  %1357 = load i64, i64* %1127, align 8
  %1358 = icmp sgt i64 %1357, -1
  br i1 %1358, label %1359, label %1363

1359:                                             ; preds = %1356
  %1360 = load i8*, i8** %1123, align 8
  %1361 = and i64 %1357, 4294967295
  %1362 = getelementptr inbounds i8, i8* %1360, i64 %1361
  br label %1363

1363:                                             ; preds = %1359, %1356
  %1364 = phi i8* [ %1362, %1359 ], [ null, %1356 ]
  %1365 = load i32, i32* %1122, align 4
  %1366 = zext i32 %1365 to i64
  %1367 = sub nsw i64 %1366, %1357
  tail call void @Cr_z__tr_flush_block(%struct.internal_state* %14, i8* %1364, i64 %1367, i32 1) #8
  %1368 = load i32, i32* %1122, align 4
  %1369 = zext i32 %1368 to i64
  store i64 %1369, i64* %1127, align 8
  %1370 = load %struct.z_stream_s*, %struct.z_stream_s** %17, align 8
  %1371 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %1370, i64 0, i32 7
  %1372 = load %struct.internal_state*, %struct.internal_state** %1371, align 8
  tail call void @Cr_z__tr_flush_bits(%struct.internal_state* %1372) #8
  %1373 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %1372, i64 0, i32 5
  %1374 = load i64, i64* %1373, align 8
  %1375 = trunc i64 %1374 to i32
  %1376 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %1370, i64 0, i32 4
  %1377 = load i32, i32* %1376, align 8
  %1378 = icmp ult i32 %1377, %1375
  %1379 = select i1 %1378, i32 %1377, i32 %1375
  %1380 = icmp eq i32 %1379, 0
  br i1 %1380, label %1404, label %1381

1381:                                             ; preds = %1363
  %1382 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %1370, i64 0, i32 3
  %1383 = load i8*, i8** %1382, align 8
  %1384 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %1372, i64 0, i32 4
  %1385 = load i8*, i8** %1384, align 8
  %1386 = zext i32 %1379 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1383, i8* align 1 %1385, i64 %1386, i1 false) #8
  %1387 = load i8*, i8** %1382, align 8
  %1388 = getelementptr inbounds i8, i8* %1387, i64 %1386
  store i8* %1388, i8** %1382, align 8
  %1389 = load i8*, i8** %1384, align 8
  %1390 = getelementptr inbounds i8, i8* %1389, i64 %1386
  store i8* %1390, i8** %1384, align 8
  %1391 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %1370, i64 0, i32 5
  %1392 = load i64, i64* %1391, align 8
  %1393 = add i64 %1392, %1386
  store i64 %1393, i64* %1391, align 8
  %1394 = load i32, i32* %1376, align 8
  %1395 = sub i32 %1394, %1379
  store i32 %1395, i32* %1376, align 8
  %1396 = load i64, i64* %1373, align 8
  %1397 = sub i64 %1396, %1386
  store i64 %1397, i64* %1373, align 8
  %1398 = icmp eq i64 %1397, 0
  br i1 %1398, label %1399, label %1404

1399:                                             ; preds = %1381
  %1400 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %1372, i64 0, i32 2
  %1401 = bitcast i8** %1400 to i64*
  %1402 = load i64, i64* %1401, align 8
  %1403 = bitcast i8** %1384 to i64*
  store i64 %1402, i64* %1403, align 8
  br label %1404

1404:                                             ; preds = %1399, %1381, %1363
  %1405 = load %struct.z_stream_s*, %struct.z_stream_s** %17, align 8
  %1406 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %1405, i64 0, i32 4
  %1407 = load i32, i32* %1406, align 8
  %1408 = icmp eq i32 %1407, 0
  %1409 = select i1 %1408, i32 2, i32 3
  br label %1471

1410:                                             ; preds = %1353
  %1411 = load i32, i32* %1125, align 4
  %1412 = icmp eq i32 %1411, 0
  br i1 %1412, label %1485, label %1413

1413:                                             ; preds = %1410
  %1414 = load i64, i64* %1127, align 8
  %1415 = icmp sgt i64 %1414, -1
  br i1 %1415, label %1416, label %1420

1416:                                             ; preds = %1413
  %1417 = load i8*, i8** %1123, align 8
  %1418 = and i64 %1414, 4294967295
  %1419 = getelementptr inbounds i8, i8* %1417, i64 %1418
  br label %1420

1420:                                             ; preds = %1416, %1413
  %1421 = phi i8* [ %1419, %1416 ], [ null, %1413 ]
  %1422 = load i32, i32* %1122, align 4
  %1423 = zext i32 %1422 to i64
  %1424 = sub nsw i64 %1423, %1414
  tail call void @Cr_z__tr_flush_block(%struct.internal_state* %14, i8* %1421, i64 %1424, i32 0) #8
  %1425 = load i32, i32* %1122, align 4
  %1426 = zext i32 %1425 to i64
  store i64 %1426, i64* %1127, align 8
  %1427 = load %struct.z_stream_s*, %struct.z_stream_s** %17, align 8
  %1428 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %1427, i64 0, i32 7
  %1429 = load %struct.internal_state*, %struct.internal_state** %1428, align 8
  tail call void @Cr_z__tr_flush_bits(%struct.internal_state* %1429) #8
  %1430 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %1429, i64 0, i32 5
  %1431 = load i64, i64* %1430, align 8
  %1432 = trunc i64 %1431 to i32
  %1433 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %1427, i64 0, i32 4
  %1434 = load i32, i32* %1433, align 8
  %1435 = icmp ult i32 %1434, %1432
  %1436 = select i1 %1435, i32 %1434, i32 %1432
  %1437 = icmp eq i32 %1436, 0
  br i1 %1437, label %1461, label %1438

1438:                                             ; preds = %1420
  %1439 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %1427, i64 0, i32 3
  %1440 = load i8*, i8** %1439, align 8
  %1441 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %1429, i64 0, i32 4
  %1442 = load i8*, i8** %1441, align 8
  %1443 = zext i32 %1436 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1440, i8* align 1 %1442, i64 %1443, i1 false) #8
  %1444 = load i8*, i8** %1439, align 8
  %1445 = getelementptr inbounds i8, i8* %1444, i64 %1443
  store i8* %1445, i8** %1439, align 8
  %1446 = load i8*, i8** %1441, align 8
  %1447 = getelementptr inbounds i8, i8* %1446, i64 %1443
  store i8* %1447, i8** %1441, align 8
  %1448 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %1427, i64 0, i32 5
  %1449 = load i64, i64* %1448, align 8
  %1450 = add i64 %1449, %1443
  store i64 %1450, i64* %1448, align 8
  %1451 = load i32, i32* %1433, align 8
  %1452 = sub i32 %1451, %1436
  store i32 %1452, i32* %1433, align 8
  %1453 = load i64, i64* %1430, align 8
  %1454 = sub i64 %1453, %1443
  store i64 %1454, i64* %1430, align 8
  %1455 = icmp eq i64 %1454, 0
  br i1 %1455, label %1456, label %1461

1456:                                             ; preds = %1438
  %1457 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %1429, i64 0, i32 2
  %1458 = bitcast i8** %1457 to i64*
  %1459 = load i64, i64* %1458, align 8
  %1460 = bitcast i8** %1441 to i64*
  store i64 %1459, i64* %1460, align 8
  br label %1461

1461:                                             ; preds = %1456, %1438, %1420
  %1462 = load %struct.z_stream_s*, %struct.z_stream_s** %17, align 8
  %1463 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %1462, i64 0, i32 4
  %1464 = load i32, i32* %1463, align 8
  %1465 = icmp eq i32 %1464, 0
  br i1 %1465, label %1479, label %1485

1466:                                             ; preds = %900
  %1467 = sext i32 %896 to i64
  %1468 = getelementptr inbounds [10 x %struct.config_s], [10 x %struct.config_s]* @configuration_table, i64 0, i64 %1467, i32 4
  %1469 = load i32 (%struct.internal_state*, i32)*, i32 (%struct.internal_state*, i32)** %1468, align 8
  %1470 = tail call i32 %1469(%struct.internal_state* %14, i32 %1) #8
  br label %1471

1471:                                             ; preds = %1404, %1056, %1466, %898
  %1472 = phi i32 [ %899, %898 ], [ %1470, %1466 ], [ %1061, %1056 ], [ %1409, %1404 ]
  %1473 = or i32 %1472, 1
  %1474 = icmp eq i32 %1473, 3
  br i1 %1474, label %1475, label %1476

1475:                                             ; preds = %1471
  store i32 666, i32* %21, align 8
  br label %1476

1476:                                             ; preds = %1471, %1475
  %1477 = and i32 %1472, -3
  %1478 = icmp eq i32 %1477, 0
  br i1 %1478, label %1479, label %1483

1479:                                             ; preds = %1132, %1347, %999, %918, %1113, %1461, %1476
  %1480 = load i32, i32* %46, align 8
  %1481 = icmp eq i32 %1480, 0
  br i1 %1481, label %1482, label %1682

1482:                                             ; preds = %1479
  store i32 -1, i32* %54, align 4
  br label %1682

1483:                                             ; preds = %1476
  %1484 = icmp eq i32 %1472, 1
  br i1 %1484, label %1485, label %1547

1485:                                             ; preds = %1113, %1062, %1461, %1410, %1483
  switch i32 %1, label %1487 [
    i32 1, label %1486
    i32 5, label %1510
  ]

1486:                                             ; preds = %1485
  tail call void @Cr_z__tr_align(%struct.internal_state* %14) #8
  br label %1510

1487:                                             ; preds = %1485
  tail call void @Cr_z__tr_stored_block(%struct.internal_state* %14, i8* null, i64 0, i32 0) #8
  %1488 = icmp eq i32 %1, 3
  br i1 %1488, label %1489, label %1510

1489:                                             ; preds = %1487
  %1490 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 18
  %1491 = load i16*, i16** %1490, align 8
  %1492 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 20
  %1493 = load i32, i32* %1492, align 4
  %1494 = add i32 %1493, -1
  %1495 = zext i32 %1494 to i64
  %1496 = getelementptr inbounds i16, i16* %1491, i64 %1495
  store i16 0, i16* %1496, align 2
  %1497 = bitcast i16** %1490 to i8**
  %1498 = load i8*, i8** %1497, align 8
  %1499 = load i32, i32* %1492, align 4
  %1500 = add i32 %1499, -1
  %1501 = zext i32 %1500 to i64
  %1502 = shl nuw nsw i64 %1501, 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %1498, i8 0, i64 %1502, i1 false)
  %1503 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 30
  %1504 = load i32, i32* %1503, align 4
  %1505 = icmp eq i32 %1504, 0
  br i1 %1505, label %1506, label %1510

1506:                                             ; preds = %1489
  %1507 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 28
  store i32 0, i32* %1507, align 4
  %1508 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 24
  store i64 0, i64* %1508, align 8
  %1509 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 56
  store i32 0, i32* %1509, align 4
  br label %1510

1510:                                             ; preds = %1485, %1489, %1506, %1487, %1486
  %1511 = load %struct.internal_state*, %struct.internal_state** %13, align 8
  tail call void @Cr_z__tr_flush_bits(%struct.internal_state* %1511) #8
  %1512 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %1511, i64 0, i32 5
  %1513 = load i64, i64* %1512, align 8
  %1514 = trunc i64 %1513 to i32
  %1515 = load i32, i32* %46, align 8
  %1516 = icmp ult i32 %1515, %1514
  %1517 = select i1 %1516, i32 %1515, i32 %1514
  %1518 = icmp eq i32 %1517, 0
  br i1 %1518, label %1543, label %1519

1519:                                             ; preds = %1510
  %1520 = load i8*, i8** %26, align 8
  %1521 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %1511, i64 0, i32 4
  %1522 = load i8*, i8** %1521, align 8
  %1523 = zext i32 %1517 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1520, i8* align 1 %1522, i64 %1523, i1 false) #8
  %1524 = load i8*, i8** %26, align 8
  %1525 = getelementptr inbounds i8, i8* %1524, i64 %1523
  store i8* %1525, i8** %26, align 8
  %1526 = load i8*, i8** %1521, align 8
  %1527 = getelementptr inbounds i8, i8* %1526, i64 %1523
  store i8* %1527, i8** %1521, align 8
  %1528 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 5
  %1529 = load i64, i64* %1528, align 8
  %1530 = add i64 %1529, %1523
  store i64 %1530, i64* %1528, align 8
  %1531 = load i32, i32* %46, align 8
  %1532 = sub i32 %1531, %1517
  store i32 %1532, i32* %46, align 8
  %1533 = load i64, i64* %1512, align 8
  %1534 = sub i64 %1533, %1523
  store i64 %1534, i64* %1512, align 8
  %1535 = icmp eq i64 %1534, 0
  br i1 %1535, label %1536, label %1541

1536:                                             ; preds = %1519
  %1537 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %1511, i64 0, i32 2
  %1538 = bitcast i8** %1537 to i64*
  %1539 = load i64, i64* %1538, align 8
  %1540 = bitcast i8** %1521 to i64*
  store i64 %1539, i64* %1540, align 8
  br label %1541

1541:                                             ; preds = %1536, %1519
  %1542 = load i32, i32* %46, align 8
  br label %1543

1543:                                             ; preds = %1541, %1510
  %1544 = phi i32 [ %1542, %1541 ], [ %1515, %1510 ]
  %1545 = icmp eq i32 %1544, 0
  br i1 %1545, label %1546, label %1547

1546:                                             ; preds = %1543
  store i32 -1, i32* %54, align 4
  br label %1682

1547:                                             ; preds = %1543, %1483, %891, %889
  br i1 %39, label %1682, label %1548

1548:                                             ; preds = %1547
  %1549 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 6
  %1550 = load i32, i32* %1549, align 8
  %1551 = icmp slt i32 %1550, 1
  br i1 %1551, label %1682, label %1552

1552:                                             ; preds = %1548
  %1553 = icmp eq i32 %1550, 2
  br i1 %1553, label %1554, label %1611

1554:                                             ; preds = %1552
  tail call void @Cr_z_crc_finalize(%struct.internal_state* %14) #8
  %1555 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 12
  %1556 = load i64, i64* %1555, align 8
  %1557 = trunc i64 %1556 to i8
  %1558 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 2
  %1559 = load i8*, i8** %1558, align 8
  %1560 = load i64, i64* %56, align 8
  %1561 = add i64 %1560, 1
  store i64 %1561, i64* %56, align 8
  %1562 = getelementptr inbounds i8, i8* %1559, i64 %1560
  store i8 %1557, i8* %1562, align 1
  %1563 = load i64, i64* %1555, align 8
  %1564 = lshr i64 %1563, 8
  %1565 = trunc i64 %1564 to i8
  %1566 = load i8*, i8** %1558, align 8
  %1567 = load i64, i64* %56, align 8
  %1568 = add i64 %1567, 1
  store i64 %1568, i64* %56, align 8
  %1569 = getelementptr inbounds i8, i8* %1566, i64 %1567
  store i8 %1565, i8* %1569, align 1
  %1570 = load i64, i64* %1555, align 8
  %1571 = lshr i64 %1570, 16
  %1572 = trunc i64 %1571 to i8
  %1573 = load i8*, i8** %1558, align 8
  %1574 = load i64, i64* %56, align 8
  %1575 = add i64 %1574, 1
  store i64 %1575, i64* %56, align 8
  %1576 = getelementptr inbounds i8, i8* %1573, i64 %1574
  store i8 %1572, i8* %1576, align 1
  %1577 = load i64, i64* %1555, align 8
  %1578 = lshr i64 %1577, 24
  %1579 = trunc i64 %1578 to i8
  %1580 = load i8*, i8** %1558, align 8
  %1581 = load i64, i64* %56, align 8
  %1582 = add i64 %1581, 1
  store i64 %1582, i64* %56, align 8
  %1583 = getelementptr inbounds i8, i8* %1580, i64 %1581
  store i8 %1579, i8* %1583, align 1
  %1584 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 2
  %1585 = load i64, i64* %1584, align 8
  %1586 = trunc i64 %1585 to i8
  %1587 = load i8*, i8** %1558, align 8
  %1588 = load i64, i64* %56, align 8
  %1589 = add i64 %1588, 1
  store i64 %1589, i64* %56, align 8
  %1590 = getelementptr inbounds i8, i8* %1587, i64 %1588
  store i8 %1586, i8* %1590, align 1
  %1591 = load i64, i64* %1584, align 8
  %1592 = lshr i64 %1591, 8
  %1593 = trunc i64 %1592 to i8
  %1594 = load i8*, i8** %1558, align 8
  %1595 = load i64, i64* %56, align 8
  %1596 = add i64 %1595, 1
  store i64 %1596, i64* %56, align 8
  %1597 = getelementptr inbounds i8, i8* %1594, i64 %1595
  store i8 %1593, i8* %1597, align 1
  %1598 = load i64, i64* %1584, align 8
  %1599 = lshr i64 %1598, 16
  %1600 = trunc i64 %1599 to i8
  %1601 = load i8*, i8** %1558, align 8
  %1602 = load i64, i64* %56, align 8
  %1603 = add i64 %1602, 1
  store i64 %1603, i64* %56, align 8
  %1604 = getelementptr inbounds i8, i8* %1601, i64 %1602
  store i8 %1600, i8* %1604, align 1
  %1605 = load i64, i64* %1584, align 8
  %1606 = lshr i64 %1605, 24
  %1607 = load i8*, i8** %1558, align 8
  %1608 = load i64, i64* %56, align 8
  %1609 = add i64 %1608, 1
  store i64 %1609, i64* %56, align 8
  %1610 = getelementptr inbounds i8, i8* %1607, i64 %1608
  br label %1639

1611:                                             ; preds = %1552
  %1612 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 12
  %1613 = load i64, i64* %1612, align 8
  %1614 = lshr i64 %1613, 16
  %1615 = lshr i64 %1613, 24
  %1616 = trunc i64 %1615 to i8
  %1617 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 2
  %1618 = load i8*, i8** %1617, align 8
  %1619 = load i64, i64* %56, align 8
  %1620 = add i64 %1619, 1
  store i64 %1620, i64* %56, align 8
  %1621 = getelementptr inbounds i8, i8* %1618, i64 %1619
  store i8 %1616, i8* %1621, align 1
  %1622 = trunc i64 %1614 to i8
  %1623 = load i8*, i8** %1617, align 8
  %1624 = load i64, i64* %56, align 8
  %1625 = add i64 %1624, 1
  store i64 %1625, i64* %56, align 8
  %1626 = getelementptr inbounds i8, i8* %1623, i64 %1624
  store i8 %1622, i8* %1626, align 1
  %1627 = load i64, i64* %1612, align 8
  %1628 = trunc i64 %1627 to i32
  %1629 = lshr i32 %1628, 8
  %1630 = trunc i32 %1629 to i8
  %1631 = load i8*, i8** %1617, align 8
  %1632 = load i64, i64* %56, align 8
  %1633 = add i64 %1632, 1
  store i64 %1633, i64* %56, align 8
  %1634 = getelementptr inbounds i8, i8* %1631, i64 %1632
  store i8 %1630, i8* %1634, align 1
  %1635 = load i8*, i8** %1617, align 8
  %1636 = load i64, i64* %56, align 8
  %1637 = add i64 %1636, 1
  store i64 %1637, i64* %56, align 8
  %1638 = getelementptr inbounds i8, i8* %1635, i64 %1636
  br label %1639

1639:                                             ; preds = %1611, %1554
  %1640 = phi i8* [ %1638, %1611 ], [ %1610, %1554 ]
  %1641 = phi i64 [ %1627, %1611 ], [ %1606, %1554 ]
  %1642 = trunc i64 %1641 to i8
  store i8 %1642, i8* %1640, align 1
  %1643 = load %struct.internal_state*, %struct.internal_state** %13, align 8
  tail call void @Cr_z__tr_flush_bits(%struct.internal_state* %1643) #8
  %1644 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %1643, i64 0, i32 5
  %1645 = load i64, i64* %1644, align 8
  %1646 = trunc i64 %1645 to i32
  %1647 = load i32, i32* %46, align 8
  %1648 = icmp ult i32 %1647, %1646
  %1649 = select i1 %1648, i32 %1647, i32 %1646
  %1650 = icmp eq i32 %1649, 0
  br i1 %1650, label %1673, label %1651

1651:                                             ; preds = %1639
  %1652 = load i8*, i8** %26, align 8
  %1653 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %1643, i64 0, i32 4
  %1654 = load i8*, i8** %1653, align 8
  %1655 = zext i32 %1649 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1652, i8* align 1 %1654, i64 %1655, i1 false) #8
  %1656 = load i8*, i8** %26, align 8
  %1657 = getelementptr inbounds i8, i8* %1656, i64 %1655
  store i8* %1657, i8** %26, align 8
  %1658 = load i8*, i8** %1653, align 8
  %1659 = getelementptr inbounds i8, i8* %1658, i64 %1655
  store i8* %1659, i8** %1653, align 8
  %1660 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 5
  %1661 = load i64, i64* %1660, align 8
  %1662 = add i64 %1661, %1655
  store i64 %1662, i64* %1660, align 8
  %1663 = load i32, i32* %46, align 8
  %1664 = sub i32 %1663, %1649
  store i32 %1664, i32* %46, align 8
  %1665 = load i64, i64* %1644, align 8
  %1666 = sub i64 %1665, %1655
  store i64 %1666, i64* %1644, align 8
  %1667 = icmp eq i64 %1666, 0
  br i1 %1667, label %1668, label %1673

1668:                                             ; preds = %1651
  %1669 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %1643, i64 0, i32 2
  %1670 = bitcast i8** %1669 to i64*
  %1671 = load i64, i64* %1670, align 8
  %1672 = bitcast i8** %1653 to i64*
  store i64 %1671, i64* %1672, align 8
  br label %1673

1673:                                             ; preds = %1639, %1651, %1668
  %1674 = load i32, i32* %1549, align 8
  %1675 = icmp sgt i32 %1674, 0
  br i1 %1675, label %1676, label %1678

1676:                                             ; preds = %1673
  %1677 = sub nsw i32 0, %1674
  store i32 %1677, i32* %1549, align 8
  br label %1678

1678:                                             ; preds = %1676, %1673
  %1679 = load i64, i64* %56, align 8
  %1680 = icmp eq i64 %1679, 0
  %1681 = zext i1 %1680 to i32
  br label %1682

1682:                                             ; preds = %12, %16, %20, %2, %4, %8, %584, %1479, %1548, %1547, %1482, %1546, %750, %651, %233, %23, %1678, %881, %829, %330, %121, %112, %97, %49, %41
  %1683 = phi i32 [ -2, %41 ], [ -5, %49 ], [ 0, %97 ], [ -5, %121 ], [ 0, %330 ], [ 0, %829 ], [ 0, %881 ], [ %1681, %1678 ], [ 0, %584 ], [ -5, %112 ], [ -2, %23 ], [ 0, %233 ], [ 0, %651 ], [ 0, %750 ], [ 0, %1546 ], [ 0, %1482 ], [ 0, %1547 ], [ 1, %1548 ], [ 0, %1479 ], [ -2, %8 ], [ -2, %4 ], [ -2, %2 ], [ -2, %20 ], [ -2, %16 ], [ -2, %12 ]
  ret i32 %1683
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @Cr_z_deflateTune(%struct.z_stream_s* readonly, i32, i32, i32, i32) local_unnamed_addr #3 {
  %6 = icmp eq %struct.z_stream_s* %0, null
  br i1 %6, label %31, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 8
  %9 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %8, align 8
  %10 = icmp eq i8* (i8*, i32, i32)* %9, null
  br i1 %10, label %31, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 9
  %13 = load void (i8*, i8*)*, void (i8*, i8*)** %12, align 8
  %14 = icmp eq void (i8*, i8*)* %13, null
  br i1 %14, label %31, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 7
  %17 = load %struct.internal_state*, %struct.internal_state** %16, align 8
  %18 = icmp eq %struct.internal_state* %17, null
  br i1 %18, label %31, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %17, i64 0, i32 0
  %21 = load %struct.z_stream_s*, %struct.z_stream_s** %20, align 8
  %22 = icmp eq %struct.z_stream_s* %21, %0
  br i1 %22, label %23, label %31

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %17, i64 0, i32 1
  %25 = load i32, i32* %24, align 8
  switch i32 %25, label %31 [
    i32 42, label %26
    i32 57, label %26
    i32 69, label %26
    i32 73, label %26
    i32 91, label %26
    i32 103, label %26
    i32 113, label %26
    i32 666, label %26
  ]

26:                                               ; preds = %23, %23, %23, %23, %23, %23, %23, %23
  %27 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %17, i64 0, i32 36
  store i32 %1, i32* %27, align 4
  %28 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %17, i64 0, i32 33
  store i32 %2, i32* %28, align 8
  %29 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %17, i64 0, i32 37
  store i32 %3, i32* %29, align 8
  %30 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %17, i64 0, i32 32
  store i32 %4, i32* %30, align 4
  br label %31

31:                                               ; preds = %15, %19, %23, %5, %7, %11, %26
  %32 = phi i32 [ 0, %26 ], [ -2, %11 ], [ -2, %7 ], [ -2, %5 ], [ -2, %23 ], [ -2, %19 ], [ -2, %15 ]
  ret i32 %32
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @Cr_z_deflateBound(%struct.z_stream_s* readonly, i64) local_unnamed_addr #4 {
  %3 = add i64 %1, 7
  %4 = lshr i64 %3, 3
  %5 = add i64 %4, %1
  %6 = add i64 %1, 63
  %7 = lshr i64 %6, 6
  %8 = add i64 %5, %7
  %9 = add i64 %8, 5
  %10 = icmp eq %struct.z_stream_s* %0, null
  br i1 %10, label %30, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 8
  %13 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %12, align 8
  %14 = icmp eq i8* (i8*, i32, i32)* %13, null
  br i1 %14, label %30, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 9
  %17 = load void (i8*, i8*)*, void (i8*, i8*)** %16, align 8
  %18 = icmp eq void (i8*, i8*)* %17, null
  br i1 %18, label %30, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 7
  %21 = load %struct.internal_state*, %struct.internal_state** %20, align 8
  %22 = icmp eq %struct.internal_state* %21, null
  br i1 %22, label %30, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %21, i64 0, i32 0
  %25 = load %struct.z_stream_s*, %struct.z_stream_s** %24, align 8
  %26 = icmp eq %struct.z_stream_s* %25, %0
  br i1 %26, label %27, label %30

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %21, i64 0, i32 1
  %29 = load i32, i32* %28, align 8
  switch i32 %29, label %30 [
    i32 42, label %32
    i32 57, label %32
    i32 69, label %32
    i32 73, label %32
    i32 91, label %32
    i32 103, label %32
    i32 113, label %32
    i32 666, label %32
  ]

30:                                               ; preds = %15, %11, %2, %27, %23, %19
  %31 = add i64 %8, 11
  br label %105

32:                                               ; preds = %27, %27, %27, %27, %27, %27, %27, %27
  %33 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %21, i64 0, i32 6
  %34 = load i32, i32* %33, align 8
  switch i32 %34, label %85 [
    i32 0, label %86
    i32 1, label %35
    i32 2, label %40
  ]

35:                                               ; preds = %32
  %36 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %21, i64 0, i32 28
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  %39 = select i1 %38, i64 6, i64 10
  br label %86

40:                                               ; preds = %32
  %41 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %21, i64 0, i32 7
  %42 = load %struct.Cr_z_gz_header_s*, %struct.Cr_z_gz_header_s** %41, align 8
  %43 = icmp eq %struct.Cr_z_gz_header_s* %42, null
  br i1 %43, label %86, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %struct.Cr_z_gz_header_s, %struct.Cr_z_gz_header_s* %42, i64 0, i32 4
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, null
  br i1 %47, label %54, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %struct.Cr_z_gz_header_s, %struct.Cr_z_gz_header_s* %42, i64 0, i32 5
  %50 = load i32, i32* %49, align 8
  %51 = add i32 %50, 2
  %52 = zext i32 %51 to i64
  %53 = add nuw nsw i64 %52, 18
  br label %54

54:                                               ; preds = %44, %48
  %55 = phi i64 [ %53, %48 ], [ 18, %44 ]
  %56 = getelementptr inbounds %struct.Cr_z_gz_header_s, %struct.Cr_z_gz_header_s* %42, i64 0, i32 7
  %57 = load i8*, i8** %56, align 8
  %58 = icmp eq i8* %57, null
  br i1 %58, label %66, label %59

59:                                               ; preds = %54, %59
  %60 = phi i64 [ %62, %59 ], [ %55, %54 ]
  %61 = phi i8* [ %63, %59 ], [ %57, %54 ]
  %62 = add i64 %60, 1
  %63 = getelementptr inbounds i8, i8* %61, i64 1
  %64 = load i8, i8* %61, align 1
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %66, label %59

66:                                               ; preds = %59, %54
  %67 = phi i64 [ %55, %54 ], [ %62, %59 ]
  %68 = getelementptr inbounds %struct.Cr_z_gz_header_s, %struct.Cr_z_gz_header_s* %42, i64 0, i32 9
  %69 = load i8*, i8** %68, align 8
  %70 = icmp eq i8* %69, null
  br i1 %70, label %78, label %71

71:                                               ; preds = %66, %71
  %72 = phi i64 [ %74, %71 ], [ %67, %66 ]
  %73 = phi i8* [ %75, %71 ], [ %69, %66 ]
  %74 = add i64 %72, 1
  %75 = getelementptr inbounds i8, i8* %73, i64 1
  %76 = load i8, i8* %73, align 1
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %78, label %71

78:                                               ; preds = %71, %66
  %79 = phi i64 [ %67, %66 ], [ %74, %71 ]
  %80 = getelementptr inbounds %struct.Cr_z_gz_header_s, %struct.Cr_z_gz_header_s* %42, i64 0, i32 11
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %81, 0
  %83 = add i64 %79, 2
  %84 = select i1 %82, i64 %79, i64 %83
  br label %86

85:                                               ; preds = %32
  br label %86

86:                                               ; preds = %32, %40, %78, %85, %35
  %87 = phi i64 [ 6, %85 ], [ %84, %78 ], [ 18, %40 ], [ %39, %35 ], [ 0, %32 ]
  %88 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %21, i64 0, i32 13
  %89 = load i32, i32* %88, align 4
  %90 = icmp eq i32 %89, 15
  br i1 %90, label %91, label %95

91:                                               ; preds = %86
  %92 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %21, i64 0, i32 21
  %93 = load i32, i32* %92, align 8
  %94 = icmp eq i32 %93, 15
  br i1 %94, label %97, label %95

95:                                               ; preds = %91, %86
  %96 = add i64 %9, %87
  br label %105

97:                                               ; preds = %91
  %98 = lshr i64 %1, 12
  %99 = lshr i64 %1, 14
  %100 = lshr i64 %1, 25
  %101 = add i64 %3, %98
  %102 = add i64 %101, %99
  %103 = add i64 %102, %100
  %104 = add i64 %103, %87
  br label %105

105:                                              ; preds = %97, %95, %30
  %106 = phi i64 [ %31, %30 ], [ %96, %95 ], [ %104, %97 ]
  ret i64 %106
}

declare void @Cr_z_crc_reset(%struct.internal_state*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal i32 @deflate_stored(%struct.internal_state*, i32) #0 {
  %3 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, -5
  %6 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 12
  %7 = load i32, i32* %6, align 8
  %8 = zext i32 %7 to i64
  %9 = icmp ugt i64 %5, %8
  %10 = select i1 %9, i64 %8, i64 %5
  %11 = trunc i64 %10 to i32
  %12 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 0
  %13 = load %struct.z_stream_s*, %struct.z_stream_s** %12, align 8
  %14 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %13, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 58
  %17 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 28
  %18 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 24
  %19 = icmp ne i32 %1, 4
  %20 = icmp eq i32 %1, 0
  %21 = icmp eq i32 %1, 4
  %22 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 2
  %23 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 5
  %24 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 15
  br label %25

25:                                               ; preds = %203, %2
  %26 = phi %struct.z_stream_s* [ %13, %2 ], [ %204, %203 ]
  %27 = load i32, i32* %16, align 4
  %28 = add nsw i32 %27, 42
  %29 = ashr i32 %28, 3
  %30 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %26, i64 0, i32 4
  %31 = load i32, i32* %30, align 8
  %32 = icmp ult i32 %31, %29
  br i1 %32, label %205, label %33

33:                                               ; preds = %25
  %34 = sub i32 %31, %29
  %35 = load i32, i32* %17, align 4
  %36 = load i64, i64* %18, align 8
  %37 = trunc i64 %36 to i32
  %38 = sub i32 %35, %37
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %26, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = zext i32 %41 to i64
  %43 = add nuw nsw i64 %39, %42
  %44 = icmp ult i64 %43, 65535
  %45 = add i32 %38, %41
  %46 = select i1 %44, i32 %45, i32 65535
  %47 = icmp ugt i32 %46, %34
  %48 = select i1 %47, i32 %34, i32 %46
  %49 = icmp ult i32 %48, %11
  br i1 %49, label %50, label %57

50:                                               ; preds = %33
  %51 = icmp eq i32 %48, 0
  %52 = and i1 %19, %51
  %53 = or i1 %20, %52
  %54 = xor i1 %53, true
  %55 = icmp eq i32 %48, %45
  %56 = and i1 %55, %54
  br i1 %56, label %57, label %205

57:                                               ; preds = %50, %33
  %58 = icmp eq i32 %48, %45
  %59 = and i1 %21, %58
  %60 = zext i1 %59 to i32
  tail call void @Cr_z__tr_stored_block(%struct.internal_state* %0, i8* null, i64 0, i32 %60) #8
  %61 = trunc i32 %48 to i8
  %62 = load i8*, i8** %22, align 8
  %63 = load i64, i64* %23, align 8
  %64 = add i64 %63, -4
  %65 = getelementptr inbounds i8, i8* %62, i64 %64
  store i8 %61, i8* %65, align 1
  %66 = lshr i32 %48, 8
  %67 = trunc i32 %66 to i8
  %68 = load i8*, i8** %22, align 8
  %69 = load i64, i64* %23, align 8
  %70 = add i64 %69, -3
  %71 = getelementptr inbounds i8, i8* %68, i64 %70
  store i8 %67, i8* %71, align 1
  %72 = xor i32 %48, -1
  %73 = trunc i32 %72 to i8
  %74 = load i8*, i8** %22, align 8
  %75 = load i64, i64* %23, align 8
  %76 = add i64 %75, -2
  %77 = getelementptr inbounds i8, i8* %74, i64 %76
  store i8 %73, i8* %77, align 1
  %78 = lshr i32 %72, 8
  %79 = trunc i32 %78 to i8
  %80 = load i8*, i8** %22, align 8
  %81 = load i64, i64* %23, align 8
  %82 = add i64 %81, -1
  %83 = getelementptr inbounds i8, i8* %80, i64 %82
  store i8 %79, i8* %83, align 1
  %84 = load %struct.z_stream_s*, %struct.z_stream_s** %12, align 8
  %85 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %84, i64 0, i32 7
  %86 = load %struct.internal_state*, %struct.internal_state** %85, align 8
  tail call void @Cr_z__tr_flush_bits(%struct.internal_state* %86) #8
  %87 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %86, i64 0, i32 5
  %88 = load i64, i64* %87, align 8
  %89 = trunc i64 %88 to i32
  %90 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %84, i64 0, i32 4
  %91 = load i32, i32* %90, align 8
  %92 = icmp ult i32 %91, %89
  %93 = select i1 %92, i32 %91, i32 %89
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %118, label %95

95:                                               ; preds = %57
  %96 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %84, i64 0, i32 3
  %97 = load i8*, i8** %96, align 8
  %98 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %86, i64 0, i32 4
  %99 = load i8*, i8** %98, align 8
  %100 = zext i32 %93 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %97, i8* align 1 %99, i64 %100, i1 false) #8
  %101 = load i8*, i8** %96, align 8
  %102 = getelementptr inbounds i8, i8* %101, i64 %100
  store i8* %102, i8** %96, align 8
  %103 = load i8*, i8** %98, align 8
  %104 = getelementptr inbounds i8, i8* %103, i64 %100
  store i8* %104, i8** %98, align 8
  %105 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %84, i64 0, i32 5
  %106 = load i64, i64* %105, align 8
  %107 = add i64 %106, %100
  store i64 %107, i64* %105, align 8
  %108 = load i32, i32* %90, align 8
  %109 = sub i32 %108, %93
  store i32 %109, i32* %90, align 8
  %110 = load i64, i64* %87, align 8
  %111 = sub i64 %110, %100
  store i64 %111, i64* %87, align 8
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %118

113:                                              ; preds = %95
  %114 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %86, i64 0, i32 2
  %115 = bitcast i8** %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = bitcast i8** %98 to i64*
  store i64 %116, i64* %117, align 8
  br label %118

118:                                              ; preds = %57, %95, %113
  %119 = icmp eq i32 %38, 0
  br i1 %119, label %145, label %120

120:                                              ; preds = %118
  %121 = icmp ugt i32 %38, %48
  %122 = select i1 %121, i32 %48, i32 %38
  %123 = load %struct.z_stream_s*, %struct.z_stream_s** %12, align 8
  %124 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %123, i64 0, i32 3
  %125 = load i8*, i8** %124, align 8
  %126 = load i8*, i8** %24, align 8
  %127 = load i64, i64* %18, align 8
  %128 = getelementptr inbounds i8, i8* %126, i64 %127
  %129 = zext i32 %122 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %125, i8* align 1 %128, i64 %129, i1 false)
  %130 = load %struct.z_stream_s*, %struct.z_stream_s** %12, align 8
  %131 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %130, i64 0, i32 3
  %132 = load i8*, i8** %131, align 8
  %133 = getelementptr inbounds i8, i8* %132, i64 %129
  store i8* %133, i8** %131, align 8
  %134 = load %struct.z_stream_s*, %struct.z_stream_s** %12, align 8
  %135 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %134, i64 0, i32 4
  %136 = load i32, i32* %135, align 8
  %137 = sub i32 %136, %122
  store i32 %137, i32* %135, align 8
  %138 = load %struct.z_stream_s*, %struct.z_stream_s** %12, align 8
  %139 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %138, i64 0, i32 5
  %140 = load i64, i64* %139, align 8
  %141 = add i64 %140, %129
  store i64 %141, i64* %139, align 8
  %142 = load i64, i64* %18, align 8
  %143 = add nsw i64 %142, %129
  store i64 %143, i64* %18, align 8
  %144 = sub i32 %48, %122
  br label %145

145:                                              ; preds = %118, %120
  %146 = phi i32 [ %144, %120 ], [ %48, %118 ]
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %203, label %148

148:                                              ; preds = %145
  %149 = load %struct.z_stream_s*, %struct.z_stream_s** %12, align 8
  %150 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %149, i64 0, i32 3
  %151 = load i8*, i8** %150, align 8
  %152 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %149, i64 0, i32 1
  %153 = load i32, i32* %152, align 8
  %154 = icmp ugt i32 %153, %146
  %155 = select i1 %154, i32 %146, i32 %153
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %189, label %157

157:                                              ; preds = %148
  %158 = sub i32 %153, %155
  store i32 %158, i32* %152, align 8
  %159 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %149, i64 0, i32 7
  %160 = load %struct.internal_state*, %struct.internal_state** %159, align 8
  %161 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %160, i64 0, i32 6
  %162 = load i32, i32* %161, align 8
  %163 = icmp eq i32 %162, 2
  br i1 %163, label %164, label %166

164:                                              ; preds = %157
  %165 = zext i32 %155 to i64
  tail call void @Cr_z_copy_with_crc(%struct.z_stream_s* %149, i8* %151, i64 %165) #8
  br label %178

166:                                              ; preds = %157
  %167 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %149, i64 0, i32 0
  %168 = load i8*, i8** %167, align 8
  %169 = zext i32 %155 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %151, i8* align 1 %168, i64 %169, i1 false) #8
  %170 = load %struct.internal_state*, %struct.internal_state** %159, align 8
  %171 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %170, i64 0, i32 6
  %172 = load i32, i32* %171, align 8
  %173 = icmp eq i32 %172, 1
  br i1 %173, label %174, label %178

174:                                              ; preds = %166
  %175 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %149, i64 0, i32 12
  %176 = load i64, i64* %175, align 8
  %177 = tail call i64 @Cr_z_adler32(i64 %176, i8* %151, i32 %155) #8
  store i64 %177, i64* %175, align 8
  br label %178

178:                                              ; preds = %174, %166, %164
  %179 = phi i64 [ %169, %166 ], [ %169, %174 ], [ %165, %164 ]
  %180 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %149, i64 0, i32 0
  %181 = load i8*, i8** %180, align 8
  %182 = getelementptr inbounds i8, i8* %181, i64 %179
  store i8* %182, i8** %180, align 8
  %183 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %149, i64 0, i32 2
  %184 = load i64, i64* %183, align 8
  %185 = add i64 %184, %179
  store i64 %185, i64* %183, align 8
  %186 = load %struct.z_stream_s*, %struct.z_stream_s** %12, align 8
  %187 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %186, i64 0, i32 3
  %188 = load i8*, i8** %187, align 8
  br label %189

189:                                              ; preds = %148, %178
  %190 = phi i8* [ %151, %148 ], [ %188, %178 ]
  %191 = phi %struct.z_stream_s* [ %149, %148 ], [ %186, %178 ]
  %192 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %191, i64 0, i32 3
  %193 = zext i32 %146 to i64
  %194 = getelementptr inbounds i8, i8* %190, i64 %193
  store i8* %194, i8** %192, align 8
  %195 = load %struct.z_stream_s*, %struct.z_stream_s** %12, align 8
  %196 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %195, i64 0, i32 4
  %197 = load i32, i32* %196, align 8
  %198 = sub i32 %197, %146
  store i32 %198, i32* %196, align 8
  %199 = load %struct.z_stream_s*, %struct.z_stream_s** %12, align 8
  %200 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %199, i64 0, i32 5
  %201 = load i64, i64* %200, align 8
  %202 = add i64 %201, %193
  store i64 %202, i64* %200, align 8
  br label %203

203:                                              ; preds = %145, %189
  %204 = load %struct.z_stream_s*, %struct.z_stream_s** %12, align 8
  br i1 %59, label %205, label %25

205:                                              ; preds = %50, %25, %203
  %206 = phi %struct.z_stream_s* [ %204, %203 ], [ %26, %25 ], [ %26, %50 ]
  %207 = phi i32 [ 1, %203 ], [ 0, %25 ], [ 0, %50 ]
  %208 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %206, i64 0, i32 1
  %209 = load i32, i32* %208, align 8
  %210 = sub i32 %15, %209
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %212, label %215

212:                                              ; preds = %205
  %213 = load i32, i32* %17, align 4
  %214 = zext i32 %213 to i64
  br label %269

215:                                              ; preds = %205
  %216 = load i32, i32* %6, align 8
  %217 = icmp ult i32 %210, %216
  br i1 %217, label %227, label %218

218:                                              ; preds = %215
  %219 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 55
  store i32 2, i32* %219, align 8
  %220 = load i8*, i8** %24, align 8
  %221 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %206, i64 0, i32 0
  %222 = load i8*, i8** %221, align 8
  %223 = zext i32 %216 to i64
  %224 = sub nsw i64 0, %223
  %225 = getelementptr inbounds i8, i8* %222, i64 %224
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %220, i8* align 1 %225, i64 %223, i1 false)
  %226 = load i32, i32* %6, align 8
  store i32 %226, i32* %17, align 4
  br label %259

227:                                              ; preds = %215
  %228 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 16
  %229 = load i64, i64* %228, align 8
  %230 = load i32, i32* %17, align 4
  %231 = zext i32 %230 to i64
  %232 = sub i64 %229, %231
  %233 = zext i32 %210 to i64
  %234 = icmp ugt i64 %232, %233
  br i1 %234, label %246, label %235

235:                                              ; preds = %227
  %236 = sub i32 %230, %216
  store i32 %236, i32* %17, align 4
  %237 = load i8*, i8** %24, align 8
  %238 = zext i32 %216 to i64
  %239 = getelementptr inbounds i8, i8* %237, i64 %238
  %240 = zext i32 %236 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %237, i8* align 1 %239, i64 %240, i1 false)
  %241 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 55
  %242 = load i32, i32* %241, align 8
  %243 = icmp ult i32 %242, 2
  br i1 %243, label %244, label %246

244:                                              ; preds = %235
  %245 = add nuw nsw i32 %242, 1
  store i32 %245, i32* %241, align 8
  br label %246

246:                                              ; preds = %227, %235, %244
  %247 = load i8*, i8** %24, align 8
  %248 = load i32, i32* %17, align 4
  %249 = zext i32 %248 to i64
  %250 = getelementptr inbounds i8, i8* %247, i64 %249
  %251 = load %struct.z_stream_s*, %struct.z_stream_s** %12, align 8
  %252 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %251, i64 0, i32 0
  %253 = load i8*, i8** %252, align 8
  %254 = sub nsw i64 0, %233
  %255 = getelementptr inbounds i8, i8* %253, i64 %254
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %250, i8* align 1 %255, i64 %233, i1 false)
  %256 = load i32, i32* %17, align 4
  %257 = add i32 %256, %210
  store i32 %257, i32* %17, align 4
  %258 = load i32, i32* %6, align 8
  br label %259

259:                                              ; preds = %246, %218
  %260 = phi i32 [ %258, %246 ], [ %226, %218 ]
  %261 = phi i32 [ %257, %246 ], [ %226, %218 ]
  %262 = zext i32 %261 to i64
  store i64 %262, i64* %18, align 8
  %263 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 56
  %264 = load i32, i32* %263, align 4
  %265 = sub i32 %260, %264
  %266 = icmp ugt i32 %210, %265
  %267 = select i1 %266, i32 %265, i32 %210
  %268 = add i32 %267, %264
  store i32 %268, i32* %263, align 4
  br label %269

269:                                              ; preds = %212, %259
  %270 = phi i64 [ %214, %212 ], [ %262, %259 ]
  %271 = phi i32 [ %213, %212 ], [ %261, %259 ]
  %272 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 59
  %273 = load i64, i64* %272, align 8
  %274 = icmp ult i64 %273, %270
  br i1 %274, label %275, label %276

275:                                              ; preds = %269
  store i64 %270, i64* %272, align 8
  br label %276

276:                                              ; preds = %275, %269
  %277 = icmp eq i32 %207, 0
  br i1 %277, label %278, label %458

278:                                              ; preds = %276
  %279 = icmp ne i32 %1, 0
  %280 = and i32 %1, -5
  %281 = icmp ne i32 %280, 0
  %282 = load %struct.z_stream_s*, %struct.z_stream_s** %12, align 8
  %283 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %282, i64 0, i32 1
  %284 = load i32, i32* %283, align 8
  %285 = icmp eq i32 %284, 0
  %286 = and i1 %281, %285
  br i1 %286, label %287, label %296

287:                                              ; preds = %278
  %288 = load i64, i64* %18, align 8
  %289 = icmp eq i64 %288, %270
  br i1 %289, label %458, label %290

290:                                              ; preds = %287
  %291 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 16
  %292 = load i64, i64* %291, align 8
  %293 = xor i32 %271, -1
  %294 = trunc i64 %292 to i32
  %295 = add i32 %294, %293
  br label %325

296:                                              ; preds = %278
  %297 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 16
  %298 = load i64, i64* %297, align 8
  %299 = xor i32 %271, -1
  %300 = trunc i64 %298 to i32
  %301 = add i32 %300, %299
  %302 = icmp ugt i32 %284, %301
  br i1 %302, label %303, label %325

303:                                              ; preds = %296
  %304 = load i64, i64* %18, align 8
  %305 = load i32, i32* %6, align 8
  %306 = zext i32 %305 to i64
  %307 = icmp slt i64 %304, %306
  br i1 %307, label %325, label %308

308:                                              ; preds = %303
  %309 = sub nsw i64 %304, %306
  store i64 %309, i64* %18, align 8
  %310 = sub i32 %271, %305
  store i32 %310, i32* %17, align 4
  %311 = load i8*, i8** %24, align 8
  %312 = getelementptr inbounds i8, i8* %311, i64 %306
  %313 = zext i32 %310 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %311, i8* align 1 %312, i64 %313, i1 false)
  %314 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 55
  %315 = load i32, i32* %314, align 8
  %316 = icmp ult i32 %315, 2
  br i1 %316, label %317, label %319

317:                                              ; preds = %308
  %318 = add nuw nsw i32 %315, 1
  store i32 %318, i32* %314, align 8
  br label %319

319:                                              ; preds = %317, %308
  %320 = load i32, i32* %6, align 8
  %321 = add i32 %320, %301
  %322 = load %struct.z_stream_s*, %struct.z_stream_s** %12, align 8
  %323 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %322, i64 0, i32 1
  %324 = load i32, i32* %323, align 8
  br label %325

325:                                              ; preds = %290, %303, %319, %296
  %326 = phi i32 [ %324, %319 ], [ %284, %303 ], [ %284, %296 ], [ 0, %290 ]
  %327 = phi %struct.z_stream_s* [ %322, %319 ], [ %282, %303 ], [ %282, %296 ], [ %282, %290 ]
  %328 = phi i32 [ %321, %319 ], [ %301, %303 ], [ %301, %296 ], [ %295, %290 ]
  %329 = icmp ugt i32 %328, %326
  %330 = select i1 %329, i32 %326, i32 %328
  %331 = icmp eq i32 %330, 0
  br i1 %331, label %332, label %334

332:                                              ; preds = %325
  %333 = load i32, i32* %17, align 4
  br label %370

334:                                              ; preds = %325
  %335 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %327, i64 0, i32 1
  %336 = load i8*, i8** %24, align 8
  %337 = load i32, i32* %17, align 4
  %338 = zext i32 %337 to i64
  %339 = getelementptr inbounds i8, i8* %336, i64 %338
  %340 = sub i32 %326, %330
  store i32 %340, i32* %335, align 8
  %341 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %327, i64 0, i32 7
  %342 = load %struct.internal_state*, %struct.internal_state** %341, align 8
  %343 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %342, i64 0, i32 6
  %344 = load i32, i32* %343, align 8
  %345 = icmp eq i32 %344, 2
  br i1 %345, label %346, label %348

346:                                              ; preds = %334
  %347 = zext i32 %330 to i64
  tail call void @Cr_z_copy_with_crc(%struct.z_stream_s* %327, i8* %339, i64 %347) #8
  br label %360

348:                                              ; preds = %334
  %349 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %327, i64 0, i32 0
  %350 = load i8*, i8** %349, align 8
  %351 = zext i32 %330 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %339, i8* align 1 %350, i64 %351, i1 false) #8
  %352 = load %struct.internal_state*, %struct.internal_state** %341, align 8
  %353 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %352, i64 0, i32 6
  %354 = load i32, i32* %353, align 8
  %355 = icmp eq i32 %354, 1
  br i1 %355, label %356, label %360

356:                                              ; preds = %348
  %357 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %327, i64 0, i32 12
  %358 = load i64, i64* %357, align 8
  %359 = tail call i64 @Cr_z_adler32(i64 %358, i8* %339, i32 %330) #8
  store i64 %359, i64* %357, align 8
  br label %360

360:                                              ; preds = %356, %348, %346
  %361 = phi i64 [ %351, %348 ], [ %351, %356 ], [ %347, %346 ]
  %362 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %327, i64 0, i32 0
  %363 = load i8*, i8** %362, align 8
  %364 = getelementptr inbounds i8, i8* %363, i64 %361
  store i8* %364, i8** %362, align 8
  %365 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %327, i64 0, i32 2
  %366 = load i64, i64* %365, align 8
  %367 = add i64 %366, %361
  store i64 %367, i64* %365, align 8
  %368 = load i32, i32* %17, align 4
  %369 = add i32 %368, %330
  store i32 %369, i32* %17, align 4
  br label %370

370:                                              ; preds = %332, %360
  %371 = phi i32 [ %333, %332 ], [ %369, %360 ]
  %372 = load i64, i64* %272, align 8
  %373 = zext i32 %371 to i64
  %374 = icmp ult i64 %372, %373
  br i1 %374, label %375, label %376

375:                                              ; preds = %370
  store i64 %373, i64* %272, align 8
  br label %376

376:                                              ; preds = %375, %370
  %377 = load i32, i32* %16, align 4
  %378 = add nsw i32 %377, 42
  %379 = ashr i32 %378, 3
  %380 = load i64, i64* %3, align 8
  %381 = zext i32 %379 to i64
  %382 = sub i64 %380, %381
  %383 = icmp ult i64 %382, 65535
  %384 = select i1 %383, i64 %382, i64 65535
  %385 = trunc i64 %384 to i32
  %386 = load i32, i32* %6, align 8
  %387 = icmp ult i32 %386, %385
  %388 = select i1 %387, i32 %386, i32 %385
  %389 = load i64, i64* %18, align 8
  %390 = trunc i64 %389 to i32
  %391 = sub i32 %371, %390
  %392 = icmp ult i32 %391, %388
  br i1 %392, label %393, label %404

393:                                              ; preds = %376
  %394 = icmp ne i32 %391, 0
  %395 = or i1 %21, %394
  %396 = and i1 %279, %395
  br i1 %396, label %397, label %458

397:                                              ; preds = %393
  %398 = load %struct.z_stream_s*, %struct.z_stream_s** %12, align 8
  %399 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %398, i64 0, i32 1
  %400 = load i32, i32* %399, align 8
  %401 = icmp ne i32 %400, 0
  %402 = icmp ugt i32 %391, %385
  %403 = or i1 %402, %401
  br i1 %403, label %458, label %404

404:                                              ; preds = %397, %376
  %405 = icmp ugt i32 %391, %385
  %406 = select i1 %405, i32 %385, i32 %391
  br i1 %21, label %407, label %414

407:                                              ; preds = %404
  %408 = load %struct.z_stream_s*, %struct.z_stream_s** %12, align 8
  %409 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %408, i64 0, i32 1
  %410 = load i32, i32* %409, align 8
  %411 = icmp eq i32 %410, 0
  %412 = icmp ule i32 %391, %385
  %413 = and i1 %412, %411
  br label %414

414:                                              ; preds = %407, %404
  %415 = phi i1 [ false, %404 ], [ %413, %407 ]
  %416 = zext i1 %415 to i32
  %417 = load i8*, i8** %24, align 8
  %418 = getelementptr inbounds i8, i8* %417, i64 %389
  %419 = zext i32 %406 to i64
  tail call void @Cr_z__tr_stored_block(%struct.internal_state* %0, i8* %418, i64 %419, i32 %416) #8
  %420 = load i64, i64* %18, align 8
  %421 = add nsw i64 %420, %419
  store i64 %421, i64* %18, align 8
  %422 = load %struct.z_stream_s*, %struct.z_stream_s** %12, align 8
  %423 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %422, i64 0, i32 7
  %424 = load %struct.internal_state*, %struct.internal_state** %423, align 8
  tail call void @Cr_z__tr_flush_bits(%struct.internal_state* %424) #8
  %425 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %424, i64 0, i32 5
  %426 = load i64, i64* %425, align 8
  %427 = trunc i64 %426 to i32
  %428 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %422, i64 0, i32 4
  %429 = load i32, i32* %428, align 8
  %430 = icmp ult i32 %429, %427
  %431 = select i1 %430, i32 %429, i32 %427
  %432 = icmp eq i32 %431, 0
  br i1 %432, label %456, label %433

433:                                              ; preds = %414
  %434 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %422, i64 0, i32 3
  %435 = load i8*, i8** %434, align 8
  %436 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %424, i64 0, i32 4
  %437 = load i8*, i8** %436, align 8
  %438 = zext i32 %431 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %435, i8* align 1 %437, i64 %438, i1 false) #8
  %439 = load i8*, i8** %434, align 8
  %440 = getelementptr inbounds i8, i8* %439, i64 %438
  store i8* %440, i8** %434, align 8
  %441 = load i8*, i8** %436, align 8
  %442 = getelementptr inbounds i8, i8* %441, i64 %438
  store i8* %442, i8** %436, align 8
  %443 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %422, i64 0, i32 5
  %444 = load i64, i64* %443, align 8
  %445 = add i64 %444, %438
  store i64 %445, i64* %443, align 8
  %446 = load i32, i32* %428, align 8
  %447 = sub i32 %446, %431
  store i32 %447, i32* %428, align 8
  %448 = load i64, i64* %425, align 8
  %449 = sub i64 %448, %438
  store i64 %449, i64* %425, align 8
  %450 = icmp eq i64 %449, 0
  br i1 %450, label %451, label %456

451:                                              ; preds = %433
  %452 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %424, i64 0, i32 2
  %453 = bitcast i8** %452 to i64*
  %454 = load i64, i64* %453, align 8
  %455 = bitcast i8** %436 to i64*
  store i64 %454, i64* %455, align 8
  br i1 %415, label %457, label %458

456:                                              ; preds = %433, %414
  br i1 %415, label %457, label %458

457:                                              ; preds = %451, %456
  br label %458

458:                                              ; preds = %393, %397, %457, %456, %451, %287, %276
  %459 = phi i32 [ 3, %276 ], [ 1, %287 ], [ 2, %457 ], [ 0, %456 ], [ 0, %451 ], [ 0, %397 ], [ 0, %393 ]
  ret i32 %459
}

declare void @Cr_z__tr_align(%struct.internal_state*) local_unnamed_addr #1

declare void @Cr_z__tr_stored_block(%struct.internal_state*, i8*, i64, i32) local_unnamed_addr #1

declare void @Cr_z_crc_finalize(%struct.internal_state*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @Cr_z_deflateCopy(%struct.z_stream_s*, %struct.z_stream_s* readonly) local_unnamed_addr #0 {
  %3 = icmp eq %struct.z_stream_s* %1, null
  br i1 %3, label %134, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %1, i64 0, i32 8
  %6 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %5, align 8
  %7 = icmp eq i8* (i8*, i32, i32)* %6, null
  br i1 %7, label %134, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %1, i64 0, i32 9
  %10 = load void (i8*, i8*)*, void (i8*, i8*)** %9, align 8
  %11 = icmp eq void (i8*, i8*)* %10, null
  br i1 %11, label %134, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %1, i64 0, i32 7
  %14 = load %struct.internal_state*, %struct.internal_state** %13, align 8
  %15 = icmp eq %struct.internal_state* %14, null
  br i1 %15, label %134, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 0
  %18 = load %struct.z_stream_s*, %struct.z_stream_s** %17, align 8
  %19 = icmp eq %struct.z_stream_s* %18, %1
  br i1 %19, label %20, label %134

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  switch i32 %22, label %134 [
    i32 42, label %23
    i32 57, label %23
    i32 69, label %23
    i32 73, label %23
    i32 91, label %23
    i32 103, label %23
    i32 113, label %23
    i32 666, label %23
  ]

23:                                               ; preds = %20, %20, %20, %20, %20, %20, %20, %20
  %24 = icmp eq %struct.z_stream_s* %0, null
  br i1 %24, label %134, label %25

25:                                               ; preds = %23
  %26 = bitcast %struct.z_stream_s* %0 to i8*
  %27 = bitcast %struct.z_stream_s* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %26, i8* nonnull align 1 %27, i64 112, i1 false)
  %28 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 8
  %29 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %28, align 8
  %30 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 10
  %31 = load i8*, i8** %30, align 8
  %32 = tail call i8* %29(i8* %31, i32 1, i32 6032) #8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %134, label %34

34:                                               ; preds = %25
  %35 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 7
  %36 = bitcast %struct.internal_state** %35 to i8**
  store i8* %32, i8** %36, align 8
  %37 = bitcast %struct.internal_state* %14 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %32, i8* nonnull align 1 %37, i64 6032, i1 false)
  %38 = bitcast i8* %32 to %struct.z_stream_s**
  store %struct.z_stream_s* %0, %struct.z_stream_s** %38, align 8
  %39 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %28, align 8
  %40 = load i8*, i8** %30, align 8
  %41 = getelementptr inbounds i8, i8* %32, i64 160
  %42 = bitcast i8* %41 to i32*
  %43 = load i32, i32* %42, align 8
  %44 = tail call i8* %39(i8* %40, i32 %43, i32 2) #8
  %45 = getelementptr inbounds i8, i8* %32, i64 176
  %46 = bitcast i8* %45 to i8**
  store i8* %44, i8** %46, align 8
  %47 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %28, align 8
  %48 = load i8*, i8** %30, align 8
  %49 = load i32, i32* %42, align 8
  %50 = tail call i8* %47(i8* %48, i32 %49, i32 2) #8
  %51 = getelementptr inbounds i8, i8* %32, i64 192
  %52 = bitcast i8* %51 to i8**
  store i8* %50, i8** %52, align 8
  %53 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %28, align 8
  %54 = load i8*, i8** %30, align 8
  %55 = getelementptr inbounds i8, i8* %32, i64 212
  %56 = bitcast i8* %55 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = tail call i8* %53(i8* %54, i32 %57, i32 2) #8
  %59 = getelementptr inbounds i8, i8* %32, i64 200
  %60 = bitcast i8* %59 to i16**
  %61 = bitcast i8* %59 to i8**
  store i8* %58, i8** %61, align 8
  %62 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %28, align 8
  %63 = load i8*, i8** %30, align 8
  %64 = getelementptr inbounds i8, i8* %32, i64 5976
  %65 = bitcast i8* %64 to i32*
  %66 = load i32, i32* %65, align 8
  %67 = tail call i8* %62(i8* %63, i32 %66, i32 4) #8
  %68 = getelementptr inbounds i8, i8* %32, i64 16
  %69 = bitcast i8* %68 to i8**
  store i8* %67, i8** %69, align 8
  %70 = load i8*, i8** %46, align 8
  %71 = icmp eq i8* %70, null
  br i1 %71, label %81, label %72

72:                                               ; preds = %34
  %73 = bitcast i8* %51 to i16**
  %74 = load i16*, i16** %73, align 8
  %75 = icmp eq i16* %74, null
  br i1 %75, label %81, label %76

76:                                               ; preds = %72
  %77 = load i16*, i16** %60, align 8
  %78 = icmp eq i16* %77, null
  %79 = icmp eq i8* %67, null
  %80 = or i1 %79, %78
  br i1 %80, label %81, label %83

81:                                               ; preds = %76, %72, %34
  %82 = tail call i32 @Cr_z_deflateEnd(%struct.z_stream_s* nonnull %0)
  br label %134

83:                                               ; preds = %76
  %84 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 15
  %85 = load i8*, i8** %84, align 8
  %86 = load i32, i32* %42, align 8
  %87 = shl i32 %86, 1
  %88 = zext i32 %87 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %70, i8* align 1 %85, i64 %88, i1 false)
  %89 = load i8*, i8** %52, align 8
  %90 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 17
  %91 = bitcast i16** %90 to i8**
  %92 = load i8*, i8** %91, align 8
  %93 = load i32, i32* %42, align 8
  %94 = zext i32 %93 to i64
  %95 = shl nuw nsw i64 %94, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %89, i8* align 1 %92, i64 %95, i1 false)
  %96 = load i8*, i8** %61, align 8
  %97 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 18
  %98 = bitcast i16** %97 to i8**
  %99 = load i8*, i8** %98, align 8
  %100 = load i32, i32* %56, align 4
  %101 = zext i32 %100 to i64
  %102 = shl nuw nsw i64 %101, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %96, i8* align 1 %99, i64 %102, i1 false)
  %103 = load i8*, i8** %69, align 8
  %104 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 2
  %105 = load i8*, i8** %104, align 8
  %106 = getelementptr inbounds i8, i8* %32, i64 24
  %107 = bitcast i8* %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = and i64 %108, 4294967295
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %103, i8* align 1 %105, i64 %109, i1 false)
  %110 = load i8*, i8** %69, align 8
  %111 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %14, i64 0, i32 4
  %112 = bitcast i8** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast i8** %104 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = sub i64 %113, %115
  %117 = getelementptr inbounds i8, i8* %110, i64 %116
  %118 = getelementptr inbounds i8, i8* %32, i64 32
  %119 = bitcast i8* %118 to i8**
  store i8* %117, i8** %119, align 8
  %120 = load i32, i32* %65, align 8
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds i8, i8* %110, i64 %121
  %123 = getelementptr inbounds i8, i8* %32, i64 5968
  %124 = bitcast i8* %123 to i8**
  store i8* %122, i8** %124, align 8
  %125 = getelementptr inbounds i8, i8* %32, i64 292
  %126 = getelementptr inbounds i8, i8* %32, i64 2984
  %127 = bitcast i8* %126 to i8**
  store i8* %125, i8** %127, align 8
  %128 = getelementptr inbounds i8, i8* %32, i64 2584
  %129 = getelementptr inbounds i8, i8* %32, i64 3008
  %130 = bitcast i8* %129 to i8**
  store i8* %128, i8** %130, align 8
  %131 = getelementptr inbounds i8, i8* %32, i64 2828
  %132 = getelementptr inbounds i8, i8* %32, i64 3032
  %133 = bitcast i8* %132 to i8**
  store i8* %131, i8** %133, align 8
  br label %134

134:                                              ; preds = %12, %16, %20, %2, %4, %8, %25, %23, %83, %81
  %135 = phi i32 [ -4, %81 ], [ 0, %83 ], [ -2, %23 ], [ -4, %25 ], [ -2, %8 ], [ -2, %4 ], [ -2, %2 ], [ -2, %20 ], [ -2, %16 ], [ -2, %12 ]
  ret i32 %135
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @Cr_z_deflate_read_buf(%struct.z_stream_s*, i8*, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ugt i32 %5, %2
  %7 = select i1 %6, i32 %2, i32 %5
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %38, label %9

9:                                                ; preds = %3
  %10 = sub i32 %5, %7
  store i32 %10, i32* %4, align 8
  %11 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 7
  %12 = load %struct.internal_state*, %struct.internal_state** %11, align 8
  %13 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %12, i64 0, i32 6
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 2
  br i1 %15, label %16, label %18

16:                                               ; preds = %9
  %17 = zext i32 %7 to i64
  tail call void @Cr_z_copy_with_crc(%struct.z_stream_s* %0, i8* %1, i64 %17) #8
  br label %30

18:                                               ; preds = %9
  %19 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = zext i32 %7 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %20, i64 %21, i1 false)
  %22 = load %struct.internal_state*, %struct.internal_state** %11, align 8
  %23 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %22, i64 0, i32 6
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %30

26:                                               ; preds = %18
  %27 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 12
  %28 = load i64, i64* %27, align 8
  %29 = tail call i64 @Cr_z_adler32(i64 %28, i8* %1, i32 %7) #8
  store i64 %29, i64* %27, align 8
  br label %30

30:                                               ; preds = %18, %26, %16
  %31 = phi i64 [ %21, %18 ], [ %21, %26 ], [ %17, %16 ]
  %32 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds i8, i8* %33, i64 %31
  store i8* %34, i8** %32, align 8
  %35 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %0, i64 0, i32 2
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %36, %31
  store i64 %37, i64* %35, align 8
  br label %38

38:                                               ; preds = %3, %30
  ret i32 %7
}

declare void @Cr_z_copy_with_crc(%struct.z_stream_s*, i8*, i64) local_unnamed_addr #1

; Function Attrs: inlinehint nofree nounwind ssp uwtable
define internal fastcc zeroext i16 @insert_string_simd(%struct.internal_state* nocapture readonly, i16 zeroext) unnamed_addr #5 {
  %3 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 15
  %4 = load i8*, i8** %3, align 8
  %5 = zext i16 %1 to i64
  %6 = getelementptr inbounds i8, i8* %4, i64 %5
  %7 = bitcast i8* %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 34
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, 5
  %12 = and i32 %8, 16777215
  %13 = select i1 %11, i32 %12, i32 %8
  %14 = tail call i32 @llvm.x86.sse42.crc32.32.32(i32 0, i32 %13) #8
  %15 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 18
  %16 = load i16*, i16** %15, align 8
  %17 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 22
  %18 = load i32, i32* %17, align 4
  %19 = and i32 %18, %14
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds i16, i16* %16, i64 %20
  %22 = load i16, i16* %21, align 2
  store i16 %1, i16* %21, align 2
  %23 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 17
  %24 = load i16*, i16** %23, align 8
  %25 = zext i16 %1 to i32
  %26 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 14
  %27 = load i32, i32* %26, align 8
  %28 = and i32 %27, %25
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds i16, i16* %24, i64 %29
  store i16 %22, i16* %30, align 2
  ret i16 %22
}

; Function Attrs: nounwind readnone
declare i32 @llvm.x86.sse42.crc32.32.32(i32, i32) #6

; Function Attrs: nounwind ssp uwtable
define internal i32 @deflate_fast(%struct.internal_state*, i32) #0 {
  %3 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 30
  %4 = icmp eq i32 %1, 0
  %5 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 28
  %6 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 19
  %7 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 23
  %8 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 15
  %9 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 22
  %10 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 18
  %11 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 17
  %12 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 14
  %13 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 12
  %14 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 25
  %15 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 49
  %16 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 51
  %17 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 52
  %18 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 29
  %19 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 33
  %20 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 24
  %21 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 0
  br label %22

22:                                               ; preds = %240, %2
  %23 = load i32, i32* %3, align 4
  %24 = icmp ult i32 %23, 262
  br i1 %24, label %25, label %33

25:                                               ; preds = %22
  tail call fastcc void @fill_window(%struct.internal_state* %0)
  %26 = load i32, i32* %3, align 4
  %27 = icmp ult i32 %26, 262
  %28 = and i1 %4, %27
  br i1 %28, label %408, label %29

29:                                               ; preds = %25
  %30 = icmp eq i32 %26, 0
  br i1 %30, label %293, label %31

31:                                               ; preds = %29
  %32 = icmp ugt i32 %26, 2
  br i1 %32, label %33, label %79

33:                                               ; preds = %22, %31
  %34 = load i32, i32* %5, align 4
  %35 = trunc i32 %34 to i16
  %36 = load i32, i32* @Cr_z_x86_cpu_enable_simd, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %40, label %38

38:                                               ; preds = %33
  %39 = tail call fastcc zeroext i16 @insert_string_simd(%struct.internal_state* %0, i16 zeroext %35) #8
  br label %67

40:                                               ; preds = %33
  %41 = load i32, i32* %6, align 8
  %42 = load i32, i32* %7, align 8
  %43 = shl i32 %41, %42
  %44 = load i8*, i8** %8, align 8
  %45 = and i32 %34, 65535
  %46 = add nuw nsw i32 %45, 2
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds i8, i8* %44, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i32
  %51 = xor i32 %43, %50
  %52 = load i32, i32* %9, align 4
  %53 = and i32 %51, %52
  store i32 %53, i32* %6, align 8
  %54 = load i16*, i16** %10, align 8
  %55 = zext i32 %53 to i64
  %56 = getelementptr inbounds i16, i16* %54, i64 %55
  %57 = load i16, i16* %56, align 2
  %58 = load i16*, i16** %11, align 8
  %59 = load i32, i32* %12, align 8
  %60 = and i32 %59, %45
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds i16, i16* %58, i64 %61
  store i16 %57, i16* %62, align 2
  %63 = load i16*, i16** %10, align 8
  %64 = load i32, i32* %6, align 8
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds i16, i16* %63, i64 %65
  store i16 %35, i16* %66, align 2
  br label %67

67:                                               ; preds = %40, %38
  %68 = phi i16 [ %39, %38 ], [ %57, %40 ]
  %69 = zext i16 %68 to i32
  %70 = icmp eq i16 %68, 0
  br i1 %70, label %79, label %71

71:                                               ; preds = %67
  %72 = load i32, i32* %5, align 4
  %73 = sub i32 %72, %69
  %74 = load i32, i32* %13, align 8
  %75 = add i32 %74, -262
  %76 = icmp ugt i32 %73, %75
  br i1 %76, label %79, label %77

77:                                               ; preds = %71
  %78 = tail call fastcc i32 @longest_match(%struct.internal_state* %0, i32 %69)
  store i32 %78, i32* %14, align 8
  br label %81

79:                                               ; preds = %67, %71, %31
  %80 = load i32, i32* %14, align 8
  br label %81

81:                                               ; preds = %79, %77
  %82 = phi i32 [ %80, %79 ], [ %78, %77 ]
  %83 = icmp ugt i32 %82, 2
  br i1 %83, label %84, label %203

84:                                               ; preds = %81
  %85 = trunc i32 %82 to i8
  %86 = add i8 %85, -3
  %87 = load i32, i32* %5, align 4
  %88 = load i32, i32* %18, align 8
  %89 = sub i32 %87, %88
  %90 = trunc i32 %89 to i16
  %91 = trunc i32 %89 to i8
  %92 = load i8*, i8** %15, align 8
  %93 = load i32, i32* %16, align 4
  %94 = add i32 %93, 1
  store i32 %94, i32* %16, align 4
  %95 = zext i32 %93 to i64
  %96 = getelementptr inbounds i8, i8* %92, i64 %95
  store i8 %91, i8* %96, align 1
  %97 = lshr i32 %89, 8
  %98 = trunc i32 %97 to i8
  %99 = load i8*, i8** %15, align 8
  %100 = load i32, i32* %16, align 4
  %101 = add i32 %100, 1
  store i32 %101, i32* %16, align 4
  %102 = zext i32 %100 to i64
  %103 = getelementptr inbounds i8, i8* %99, i64 %102
  store i8 %98, i8* %103, align 1
  %104 = load i8*, i8** %15, align 8
  %105 = load i32, i32* %16, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %16, align 4
  %107 = zext i32 %105 to i64
  %108 = getelementptr inbounds i8, i8* %104, i64 %107
  store i8 %86, i8* %108, align 1
  %109 = add i16 %90, -1
  %110 = zext i8 %86 to i64
  %111 = getelementptr inbounds [0 x i8], [0 x i8]* @Cr_z__length_code, i64 0, i64 %110
  %112 = load i8, i8* %111, align 1
  %113 = zext i8 %112 to i64
  %114 = or i64 %113, 256
  %115 = add nuw nsw i64 %114, 1
  %116 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 %115, i32 0, i32 0
  %117 = load i16, i16* %116, align 4
  %118 = add i16 %117, 1
  store i16 %118, i16* %116, align 4
  %119 = icmp ult i16 %109, 256
  %120 = lshr i16 %109, 7
  %121 = add nuw nsw i16 %120, 256
  %122 = select i1 %119, i16 %109, i16 %121
  %123 = zext i16 %122 to i64
  %124 = getelementptr inbounds [0 x i8], [0 x i8]* @Cr_z__dist_code, i64 0, i64 %123
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i64
  %127 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 %126, i32 0, i32 0
  %128 = load i16, i16* %127, align 4
  %129 = add i16 %128, 1
  store i16 %129, i16* %127, align 4
  %130 = load i32, i32* %16, align 4
  %131 = load i32, i32* %17, align 8
  %132 = icmp eq i32 %130, %131
  %133 = zext i1 %132 to i32
  %134 = load i32, i32* %14, align 8
  %135 = load i32, i32* %3, align 4
  %136 = sub i32 %135, %134
  store i32 %136, i32* %3, align 4
  %137 = load i32, i32* %19, align 8
  %138 = icmp ule i32 %134, %137
  %139 = icmp ugt i32 %136, 2
  %140 = and i1 %139, %138
  br i1 %140, label %141, label %185

141:                                              ; preds = %84
  %142 = add i32 %134, -1
  store i32 %142, i32* %14, align 8
  br label %143

143:                                              ; preds = %178, %141
  %144 = load i32, i32* %5, align 4
  %145 = add i32 %144, 1
  store i32 %145, i32* %5, align 4
  %146 = trunc i32 %145 to i16
  %147 = load i32, i32* @Cr_z_x86_cpu_enable_simd, align 4
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %151, label %149

149:                                              ; preds = %143
  %150 = tail call fastcc zeroext i16 @insert_string_simd(%struct.internal_state* %0, i16 zeroext %146) #8
  br label %178

151:                                              ; preds = %143
  %152 = load i32, i32* %6, align 8
  %153 = load i32, i32* %7, align 8
  %154 = shl i32 %152, %153
  %155 = load i8*, i8** %8, align 8
  %156 = and i32 %145, 65535
  %157 = add nuw nsw i32 %156, 2
  %158 = zext i32 %157 to i64
  %159 = getelementptr inbounds i8, i8* %155, i64 %158
  %160 = load i8, i8* %159, align 1
  %161 = zext i8 %160 to i32
  %162 = xor i32 %154, %161
  %163 = load i32, i32* %9, align 4
  %164 = and i32 %162, %163
  store i32 %164, i32* %6, align 8
  %165 = load i16*, i16** %10, align 8
  %166 = zext i32 %164 to i64
  %167 = getelementptr inbounds i16, i16* %165, i64 %166
  %168 = load i16, i16* %167, align 2
  %169 = load i16*, i16** %11, align 8
  %170 = load i32, i32* %12, align 8
  %171 = and i32 %170, %156
  %172 = zext i32 %171 to i64
  %173 = getelementptr inbounds i16, i16* %169, i64 %172
  store i16 %168, i16* %173, align 2
  %174 = load i16*, i16** %10, align 8
  %175 = load i32, i32* %6, align 8
  %176 = zext i32 %175 to i64
  %177 = getelementptr inbounds i16, i16* %174, i64 %176
  store i16 %146, i16* %177, align 2
  br label %178

178:                                              ; preds = %149, %151
  %179 = load i32, i32* %14, align 8
  %180 = add i32 %179, -1
  store i32 %180, i32* %14, align 8
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %143

182:                                              ; preds = %178
  %183 = load i32, i32* %5, align 4
  %184 = add i32 %183, 1
  store i32 %184, i32* %5, align 4
  br label %236

185:                                              ; preds = %84
  %186 = load i32, i32* %5, align 4
  %187 = add i32 %186, %134
  store i32 %187, i32* %5, align 4
  store i32 0, i32* %14, align 8
  %188 = load i8*, i8** %8, align 8
  %189 = zext i32 %187 to i64
  %190 = getelementptr inbounds i8, i8* %188, i64 %189
  %191 = load i8, i8* %190, align 1
  %192 = zext i8 %191 to i32
  store i32 %192, i32* %6, align 8
  %193 = load i32, i32* %7, align 8
  %194 = shl i32 %192, %193
  %195 = add i32 %187, 1
  %196 = zext i32 %195 to i64
  %197 = getelementptr inbounds i8, i8* %188, i64 %196
  %198 = load i8, i8* %197, align 1
  %199 = zext i8 %198 to i32
  %200 = xor i32 %194, %199
  %201 = load i32, i32* %9, align 4
  %202 = and i32 %200, %201
  store i32 %202, i32* %6, align 8
  br label %236

203:                                              ; preds = %81
  %204 = load i8*, i8** %8, align 8
  %205 = load i32, i32* %5, align 4
  %206 = zext i32 %205 to i64
  %207 = getelementptr inbounds i8, i8* %204, i64 %206
  %208 = load i8, i8* %207, align 1
  %209 = load i8*, i8** %15, align 8
  %210 = load i32, i32* %16, align 4
  %211 = add i32 %210, 1
  store i32 %211, i32* %16, align 4
  %212 = zext i32 %210 to i64
  %213 = getelementptr inbounds i8, i8* %209, i64 %212
  store i8 0, i8* %213, align 1
  %214 = load i8*, i8** %15, align 8
  %215 = load i32, i32* %16, align 4
  %216 = add i32 %215, 1
  store i32 %216, i32* %16, align 4
  %217 = zext i32 %215 to i64
  %218 = getelementptr inbounds i8, i8* %214, i64 %217
  store i8 0, i8* %218, align 1
  %219 = load i8*, i8** %15, align 8
  %220 = load i32, i32* %16, align 4
  %221 = add i32 %220, 1
  store i32 %221, i32* %16, align 4
  %222 = zext i32 %220 to i64
  %223 = getelementptr inbounds i8, i8* %219, i64 %222
  store i8 %208, i8* %223, align 1
  %224 = zext i8 %208 to i64
  %225 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 %224, i32 0, i32 0
  %226 = load i16, i16* %225, align 4
  %227 = add i16 %226, 1
  store i16 %227, i16* %225, align 4
  %228 = load i32, i32* %16, align 4
  %229 = load i32, i32* %17, align 8
  %230 = icmp eq i32 %228, %229
  %231 = zext i1 %230 to i32
  %232 = load i32, i32* %3, align 4
  %233 = add i32 %232, -1
  store i32 %233, i32* %3, align 4
  %234 = load i32, i32* %5, align 4
  %235 = add i32 %234, 1
  store i32 %235, i32* %5, align 4
  br label %236

236:                                              ; preds = %182, %185, %203
  %237 = phi i32 [ %184, %182 ], [ %187, %185 ], [ %235, %203 ]
  %238 = phi i32 [ %133, %182 ], [ %133, %185 ], [ %231, %203 ]
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %241

240:                                              ; preds = %236, %288
  br label %22

241:                                              ; preds = %236
  %242 = load i64, i64* %20, align 8
  %243 = icmp sgt i64 %242, -1
  br i1 %243, label %244, label %248

244:                                              ; preds = %241
  %245 = load i8*, i8** %8, align 8
  %246 = and i64 %242, 4294967295
  %247 = getelementptr inbounds i8, i8* %245, i64 %246
  br label %248

248:                                              ; preds = %241, %244
  %249 = phi i8* [ %247, %244 ], [ null, %241 ]
  %250 = zext i32 %237 to i64
  %251 = sub nsw i64 %250, %242
  tail call void @Cr_z__tr_flush_block(%struct.internal_state* %0, i8* %249, i64 %251, i32 0) #8
  %252 = load i32, i32* %5, align 4
  %253 = zext i32 %252 to i64
  store i64 %253, i64* %20, align 8
  %254 = load %struct.z_stream_s*, %struct.z_stream_s** %21, align 8
  %255 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %254, i64 0, i32 7
  %256 = load %struct.internal_state*, %struct.internal_state** %255, align 8
  tail call void @Cr_z__tr_flush_bits(%struct.internal_state* %256) #8
  %257 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %256, i64 0, i32 5
  %258 = load i64, i64* %257, align 8
  %259 = trunc i64 %258 to i32
  %260 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %254, i64 0, i32 4
  %261 = load i32, i32* %260, align 8
  %262 = icmp ult i32 %261, %259
  %263 = select i1 %262, i32 %261, i32 %259
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %288, label %265

265:                                              ; preds = %248
  %266 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %254, i64 0, i32 3
  %267 = load i8*, i8** %266, align 8
  %268 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %256, i64 0, i32 4
  %269 = load i8*, i8** %268, align 8
  %270 = zext i32 %263 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %267, i8* align 1 %269, i64 %270, i1 false) #8
  %271 = load i8*, i8** %266, align 8
  %272 = getelementptr inbounds i8, i8* %271, i64 %270
  store i8* %272, i8** %266, align 8
  %273 = load i8*, i8** %268, align 8
  %274 = getelementptr inbounds i8, i8* %273, i64 %270
  store i8* %274, i8** %268, align 8
  %275 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %254, i64 0, i32 5
  %276 = load i64, i64* %275, align 8
  %277 = add i64 %276, %270
  store i64 %277, i64* %275, align 8
  %278 = load i32, i32* %260, align 8
  %279 = sub i32 %278, %263
  store i32 %279, i32* %260, align 8
  %280 = load i64, i64* %257, align 8
  %281 = sub i64 %280, %270
  store i64 %281, i64* %257, align 8
  %282 = icmp eq i64 %281, 0
  br i1 %282, label %283, label %288

283:                                              ; preds = %265
  %284 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %256, i64 0, i32 2
  %285 = bitcast i8** %284 to i64*
  %286 = load i64, i64* %285, align 8
  %287 = bitcast i8** %268 to i64*
  store i64 %286, i64* %287, align 8
  br label %288

288:                                              ; preds = %248, %265, %283
  %289 = load %struct.z_stream_s*, %struct.z_stream_s** %21, align 8
  %290 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %289, i64 0, i32 4
  %291 = load i32, i32* %290, align 8
  %292 = icmp eq i32 %291, 0
  br i1 %292, label %408, label %240

293:                                              ; preds = %29
  %294 = load i32, i32* %5, align 4
  %295 = icmp ult i32 %294, 2
  %296 = select i1 %295, i32 %294, i32 2
  %297 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 56
  store i32 %296, i32* %297, align 4
  %298 = icmp eq i32 %1, 4
  br i1 %298, label %299, label %352

299:                                              ; preds = %293
  %300 = load i64, i64* %20, align 8
  %301 = icmp sgt i64 %300, -1
  br i1 %301, label %302, label %306

302:                                              ; preds = %299
  %303 = load i8*, i8** %8, align 8
  %304 = and i64 %300, 4294967295
  %305 = getelementptr inbounds i8, i8* %303, i64 %304
  br label %306

306:                                              ; preds = %299, %302
  %307 = phi i8* [ %305, %302 ], [ null, %299 ]
  %308 = zext i32 %294 to i64
  %309 = sub nsw i64 %308, %300
  tail call void @Cr_z__tr_flush_block(%struct.internal_state* %0, i8* %307, i64 %309, i32 1) #8
  %310 = load i32, i32* %5, align 4
  %311 = zext i32 %310 to i64
  store i64 %311, i64* %20, align 8
  %312 = load %struct.z_stream_s*, %struct.z_stream_s** %21, align 8
  %313 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %312, i64 0, i32 7
  %314 = load %struct.internal_state*, %struct.internal_state** %313, align 8
  tail call void @Cr_z__tr_flush_bits(%struct.internal_state* %314) #8
  %315 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %314, i64 0, i32 5
  %316 = load i64, i64* %315, align 8
  %317 = trunc i64 %316 to i32
  %318 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %312, i64 0, i32 4
  %319 = load i32, i32* %318, align 8
  %320 = icmp ult i32 %319, %317
  %321 = select i1 %320, i32 %319, i32 %317
  %322 = icmp eq i32 %321, 0
  br i1 %322, label %346, label %323

323:                                              ; preds = %306
  %324 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %312, i64 0, i32 3
  %325 = load i8*, i8** %324, align 8
  %326 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %314, i64 0, i32 4
  %327 = load i8*, i8** %326, align 8
  %328 = zext i32 %321 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %325, i8* align 1 %327, i64 %328, i1 false) #8
  %329 = load i8*, i8** %324, align 8
  %330 = getelementptr inbounds i8, i8* %329, i64 %328
  store i8* %330, i8** %324, align 8
  %331 = load i8*, i8** %326, align 8
  %332 = getelementptr inbounds i8, i8* %331, i64 %328
  store i8* %332, i8** %326, align 8
  %333 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %312, i64 0, i32 5
  %334 = load i64, i64* %333, align 8
  %335 = add i64 %334, %328
  store i64 %335, i64* %333, align 8
  %336 = load i32, i32* %318, align 8
  %337 = sub i32 %336, %321
  store i32 %337, i32* %318, align 8
  %338 = load i64, i64* %315, align 8
  %339 = sub i64 %338, %328
  store i64 %339, i64* %315, align 8
  %340 = icmp eq i64 %339, 0
  br i1 %340, label %341, label %346

341:                                              ; preds = %323
  %342 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %314, i64 0, i32 2
  %343 = bitcast i8** %342 to i64*
  %344 = load i64, i64* %343, align 8
  %345 = bitcast i8** %326 to i64*
  store i64 %344, i64* %345, align 8
  br label %346

346:                                              ; preds = %306, %323, %341
  %347 = load %struct.z_stream_s*, %struct.z_stream_s** %21, align 8
  %348 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %347, i64 0, i32 4
  %349 = load i32, i32* %348, align 8
  %350 = icmp eq i32 %349, 0
  %351 = select i1 %350, i32 2, i32 3
  br label %408

352:                                              ; preds = %293
  %353 = load i32, i32* %16, align 4
  %354 = icmp eq i32 %353, 0
  br i1 %354, label %407, label %355

355:                                              ; preds = %352
  %356 = load i64, i64* %20, align 8
  %357 = icmp sgt i64 %356, -1
  br i1 %357, label %358, label %362

358:                                              ; preds = %355
  %359 = load i8*, i8** %8, align 8
  %360 = and i64 %356, 4294967295
  %361 = getelementptr inbounds i8, i8* %359, i64 %360
  br label %362

362:                                              ; preds = %355, %358
  %363 = phi i8* [ %361, %358 ], [ null, %355 ]
  %364 = zext i32 %294 to i64
  %365 = sub nsw i64 %364, %356
  tail call void @Cr_z__tr_flush_block(%struct.internal_state* %0, i8* %363, i64 %365, i32 0) #8
  %366 = load i32, i32* %5, align 4
  %367 = zext i32 %366 to i64
  store i64 %367, i64* %20, align 8
  %368 = load %struct.z_stream_s*, %struct.z_stream_s** %21, align 8
  %369 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %368, i64 0, i32 7
  %370 = load %struct.internal_state*, %struct.internal_state** %369, align 8
  tail call void @Cr_z__tr_flush_bits(%struct.internal_state* %370) #8
  %371 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %370, i64 0, i32 5
  %372 = load i64, i64* %371, align 8
  %373 = trunc i64 %372 to i32
  %374 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %368, i64 0, i32 4
  %375 = load i32, i32* %374, align 8
  %376 = icmp ult i32 %375, %373
  %377 = select i1 %376, i32 %375, i32 %373
  %378 = icmp eq i32 %377, 0
  br i1 %378, label %402, label %379

379:                                              ; preds = %362
  %380 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %368, i64 0, i32 3
  %381 = load i8*, i8** %380, align 8
  %382 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %370, i64 0, i32 4
  %383 = load i8*, i8** %382, align 8
  %384 = zext i32 %377 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %381, i8* align 1 %383, i64 %384, i1 false) #8
  %385 = load i8*, i8** %380, align 8
  %386 = getelementptr inbounds i8, i8* %385, i64 %384
  store i8* %386, i8** %380, align 8
  %387 = load i8*, i8** %382, align 8
  %388 = getelementptr inbounds i8, i8* %387, i64 %384
  store i8* %388, i8** %382, align 8
  %389 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %368, i64 0, i32 5
  %390 = load i64, i64* %389, align 8
  %391 = add i64 %390, %384
  store i64 %391, i64* %389, align 8
  %392 = load i32, i32* %374, align 8
  %393 = sub i32 %392, %377
  store i32 %393, i32* %374, align 8
  %394 = load i64, i64* %371, align 8
  %395 = sub i64 %394, %384
  store i64 %395, i64* %371, align 8
  %396 = icmp eq i64 %395, 0
  br i1 %396, label %397, label %402

397:                                              ; preds = %379
  %398 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %370, i64 0, i32 2
  %399 = bitcast i8** %398 to i64*
  %400 = load i64, i64* %399, align 8
  %401 = bitcast i8** %382 to i64*
  store i64 %400, i64* %401, align 8
  br label %402

402:                                              ; preds = %362, %379, %397
  %403 = load %struct.z_stream_s*, %struct.z_stream_s** %21, align 8
  %404 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %403, i64 0, i32 4
  %405 = load i32, i32* %404, align 8
  %406 = icmp eq i32 %405, 0
  br i1 %406, label %408, label %407

407:                                              ; preds = %352, %402
  br label %408

408:                                              ; preds = %288, %25, %402, %346, %407
  %409 = phi i32 [ 1, %407 ], [ %351, %346 ], [ 0, %402 ], [ 0, %25 ], [ 0, %288 ]
  ret i32 %409
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @deflate_slow(%struct.internal_state*, i32) #0 {
  %3 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 30
  %4 = icmp eq i32 %1, 0
  %5 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 28
  %6 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 19
  %7 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 23
  %8 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 15
  %9 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 22
  %10 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 18
  %11 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 17
  %12 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 14
  %13 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 25
  %14 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 31
  %15 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 29
  %16 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 26
  %17 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 33
  %18 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 12
  %19 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 35
  %20 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 49
  %21 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 51
  %22 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 52
  %23 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 27
  %24 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 24
  %25 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 0
  br label %26

26:                                               ; preds = %214, %2
  %27 = load i32, i32* %3, align 4
  %28 = icmp ult i32 %27, 262
  br i1 %28, label %29, label %40

29:                                               ; preds = %26
  tail call fastcc void @fill_window(%struct.internal_state* %0)
  %30 = load i32, i32* %3, align 4
  %31 = icmp ult i32 %30, 262
  %32 = and i1 %4, %31
  br i1 %32, label %505, label %33

33:                                               ; preds = %29
  %34 = icmp eq i32 %30, 0
  br i1 %34, label %361, label %35

35:                                               ; preds = %33
  %36 = icmp ugt i32 %30, 2
  br i1 %36, label %40, label %37

37:                                               ; preds = %35
  %38 = load i32, i32* %13, align 8
  store i32 %38, i32* %14, align 8
  %39 = load i32, i32* %15, align 8
  store i32 %39, i32* %16, align 4
  store i32 2, i32* %13, align 8
  br label %106

40:                                               ; preds = %26, %35
  %41 = load i32, i32* %5, align 4
  %42 = trunc i32 %41 to i16
  %43 = load i32, i32* @Cr_z_x86_cpu_enable_simd, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %47, label %45

45:                                               ; preds = %40
  %46 = tail call fastcc zeroext i16 @insert_string_simd(%struct.internal_state* %0, i16 zeroext %42) #8
  br label %74

47:                                               ; preds = %40
  %48 = load i32, i32* %6, align 8
  %49 = load i32, i32* %7, align 8
  %50 = shl i32 %48, %49
  %51 = load i8*, i8** %8, align 8
  %52 = and i32 %41, 65535
  %53 = add nuw nsw i32 %52, 2
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds i8, i8* %51, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i32
  %58 = xor i32 %50, %57
  %59 = load i32, i32* %9, align 4
  %60 = and i32 %58, %59
  store i32 %60, i32* %6, align 8
  %61 = load i16*, i16** %10, align 8
  %62 = zext i32 %60 to i64
  %63 = getelementptr inbounds i16, i16* %61, i64 %62
  %64 = load i16, i16* %63, align 2
  %65 = load i16*, i16** %11, align 8
  %66 = load i32, i32* %12, align 8
  %67 = and i32 %66, %52
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds i16, i16* %65, i64 %68
  store i16 %64, i16* %69, align 2
  %70 = load i16*, i16** %10, align 8
  %71 = load i32, i32* %6, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds i16, i16* %70, i64 %72
  store i16 %42, i16* %73, align 2
  br label %74

74:                                               ; preds = %47, %45
  %75 = phi i16 [ %46, %45 ], [ %64, %47 ]
  %76 = zext i16 %75 to i32
  %77 = load i32, i32* %13, align 8
  store i32 %77, i32* %14, align 8
  %78 = load i32, i32* %15, align 8
  store i32 %78, i32* %16, align 4
  store i32 2, i32* %13, align 8
  %79 = icmp eq i16 %75, 0
  br i1 %79, label %106, label %80

80:                                               ; preds = %74
  %81 = load i32, i32* %17, align 8
  %82 = icmp ult i32 %77, %81
  br i1 %82, label %83, label %103

83:                                               ; preds = %80
  %84 = load i32, i32* %5, align 4
  %85 = sub i32 %84, %76
  %86 = load i32, i32* %18, align 8
  %87 = add i32 %86, -262
  %88 = icmp ugt i32 %85, %87
  br i1 %88, label %103, label %89

89:                                               ; preds = %83
  %90 = tail call fastcc i32 @longest_match(%struct.internal_state* %0, i32 %76)
  store i32 %90, i32* %13, align 8
  %91 = icmp ult i32 %90, 6
  br i1 %91, label %92, label %103

92:                                               ; preds = %89
  %93 = load i32, i32* %19, align 8
  %94 = icmp eq i32 %93, 1
  br i1 %94, label %102, label %95

95:                                               ; preds = %92
  %96 = icmp eq i32 %90, 3
  br i1 %96, label %97, label %103

97:                                               ; preds = %95
  %98 = load i32, i32* %5, align 4
  %99 = load i32, i32* %15, align 8
  %100 = sub i32 %98, %99
  %101 = icmp ugt i32 %100, 4096
  br i1 %101, label %102, label %103

102:                                              ; preds = %97, %92
  store i32 2, i32* %13, align 8
  br label %103

103:                                              ; preds = %80, %102, %97, %95, %89, %83
  %104 = phi i32 [ 2, %80 ], [ 2, %102 ], [ 3, %97 ], [ %90, %95 ], [ %90, %89 ], [ 2, %83 ]
  %105 = load i32, i32* %14, align 8
  br label %106

106:                                              ; preds = %103, %37, %74
  %107 = phi i32 [ %105, %103 ], [ %38, %37 ], [ %77, %74 ]
  %108 = phi i32 [ %104, %103 ], [ 2, %37 ], [ 2, %74 ]
  %109 = icmp ult i32 %107, 3
  %110 = icmp ugt i32 %108, %107
  %111 = or i1 %109, %110
  br i1 %111, label %267, label %112

112:                                              ; preds = %106
  %113 = load i32, i32* %5, align 4
  %114 = load i32, i32* %3, align 4
  %115 = add i32 %113, -3
  %116 = add i32 %115, %114
  %117 = trunc i32 %107 to i8
  %118 = add i8 %117, -3
  %119 = load i32, i32* %16, align 4
  %120 = xor i32 %119, 65535
  %121 = add i32 %120, %113
  %122 = trunc i32 %121 to i16
  %123 = trunc i32 %121 to i8
  %124 = load i8*, i8** %20, align 8
  %125 = load i32, i32* %21, align 4
  %126 = add i32 %125, 1
  store i32 %126, i32* %21, align 4
  %127 = zext i32 %125 to i64
  %128 = getelementptr inbounds i8, i8* %124, i64 %127
  store i8 %123, i8* %128, align 1
  %129 = lshr i32 %121, 8
  %130 = trunc i32 %129 to i8
  %131 = load i8*, i8** %20, align 8
  %132 = load i32, i32* %21, align 4
  %133 = add i32 %132, 1
  store i32 %133, i32* %21, align 4
  %134 = zext i32 %132 to i64
  %135 = getelementptr inbounds i8, i8* %131, i64 %134
  store i8 %130, i8* %135, align 1
  %136 = load i8*, i8** %20, align 8
  %137 = load i32, i32* %21, align 4
  %138 = add i32 %137, 1
  store i32 %138, i32* %21, align 4
  %139 = zext i32 %137 to i64
  %140 = getelementptr inbounds i8, i8* %136, i64 %139
  store i8 %118, i8* %140, align 1
  %141 = add i16 %122, -1
  %142 = zext i8 %118 to i64
  %143 = getelementptr inbounds [0 x i8], [0 x i8]* @Cr_z__length_code, i64 0, i64 %142
  %144 = load i8, i8* %143, align 1
  %145 = zext i8 %144 to i64
  %146 = or i64 %145, 256
  %147 = add nuw nsw i64 %146, 1
  %148 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 %147, i32 0, i32 0
  %149 = load i16, i16* %148, align 4
  %150 = add i16 %149, 1
  store i16 %150, i16* %148, align 4
  %151 = icmp ult i16 %141, 256
  %152 = lshr i16 %141, 7
  %153 = add nuw nsw i16 %152, 256
  %154 = select i1 %151, i16 %141, i16 %153
  %155 = zext i16 %154 to i64
  %156 = getelementptr inbounds [0 x i8], [0 x i8]* @Cr_z__dist_code, i64 0, i64 %155
  %157 = load i8, i8* %156, align 1
  %158 = zext i8 %157 to i64
  %159 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 39, i64 %158, i32 0, i32 0
  %160 = load i16, i16* %159, align 4
  %161 = add i16 %160, 1
  store i16 %161, i16* %159, align 4
  %162 = load i32, i32* %21, align 4
  %163 = load i32, i32* %22, align 8
  %164 = load i32, i32* %14, align 8
  %165 = load i32, i32* %3, align 4
  %166 = sub i32 1, %164
  %167 = add i32 %166, %165
  store i32 %167, i32* %3, align 4
  %168 = add i32 %164, -2
  store i32 %168, i32* %14, align 8
  br label %169

169:                                              ; preds = %206, %112
  %170 = load i32, i32* %5, align 4
  %171 = add i32 %170, 1
  store i32 %171, i32* %5, align 4
  %172 = icmp ugt i32 %171, %116
  br i1 %172, label %206, label %173

173:                                              ; preds = %169
  %174 = trunc i32 %171 to i16
  %175 = load i32, i32* @Cr_z_x86_cpu_enable_simd, align 4
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %179, label %177

177:                                              ; preds = %173
  %178 = tail call fastcc zeroext i16 @insert_string_simd(%struct.internal_state* %0, i16 zeroext %174) #8
  br label %206

179:                                              ; preds = %173
  %180 = load i32, i32* %6, align 8
  %181 = load i32, i32* %7, align 8
  %182 = shl i32 %180, %181
  %183 = load i8*, i8** %8, align 8
  %184 = and i32 %171, 65535
  %185 = add nuw nsw i32 %184, 2
  %186 = zext i32 %185 to i64
  %187 = getelementptr inbounds i8, i8* %183, i64 %186
  %188 = load i8, i8* %187, align 1
  %189 = zext i8 %188 to i32
  %190 = xor i32 %182, %189
  %191 = load i32, i32* %9, align 4
  %192 = and i32 %190, %191
  store i32 %192, i32* %6, align 8
  %193 = load i16*, i16** %10, align 8
  %194 = zext i32 %192 to i64
  %195 = getelementptr inbounds i16, i16* %193, i64 %194
  %196 = load i16, i16* %195, align 2
  %197 = load i16*, i16** %11, align 8
  %198 = load i32, i32* %12, align 8
  %199 = and i32 %198, %184
  %200 = zext i32 %199 to i64
  %201 = getelementptr inbounds i16, i16* %197, i64 %200
  store i16 %196, i16* %201, align 2
  %202 = load i16*, i16** %10, align 8
  %203 = load i32, i32* %6, align 8
  %204 = zext i32 %203 to i64
  %205 = getelementptr inbounds i16, i16* %202, i64 %204
  store i16 %174, i16* %205, align 2
  br label %206

206:                                              ; preds = %179, %177, %169
  %207 = load i32, i32* %14, align 8
  %208 = add i32 %207, -1
  store i32 %208, i32* %14, align 8
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %210, label %169

210:                                              ; preds = %206
  %211 = icmp eq i32 %162, %163
  store i32 0, i32* %23, align 8
  store i32 2, i32* %13, align 8
  %212 = load i32, i32* %5, align 4
  %213 = add i32 %212, 1
  store i32 %213, i32* %5, align 4
  br i1 %211, label %215, label %214

214:                                              ; preds = %210, %262, %356, %347
  br label %26

215:                                              ; preds = %210
  %216 = load i64, i64* %24, align 8
  %217 = icmp sgt i64 %216, -1
  br i1 %217, label %218, label %222

218:                                              ; preds = %215
  %219 = load i8*, i8** %8, align 8
  %220 = and i64 %216, 4294967295
  %221 = getelementptr inbounds i8, i8* %219, i64 %220
  br label %222

222:                                              ; preds = %215, %218
  %223 = phi i8* [ %221, %218 ], [ null, %215 ]
  %224 = zext i32 %213 to i64
  %225 = sub nsw i64 %224, %216
  tail call void @Cr_z__tr_flush_block(%struct.internal_state* %0, i8* %223, i64 %225, i32 0) #8
  %226 = load i32, i32* %5, align 4
  %227 = zext i32 %226 to i64
  store i64 %227, i64* %24, align 8
  %228 = load %struct.z_stream_s*, %struct.z_stream_s** %25, align 8
  %229 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %228, i64 0, i32 7
  %230 = load %struct.internal_state*, %struct.internal_state** %229, align 8
  tail call void @Cr_z__tr_flush_bits(%struct.internal_state* %230) #8
  %231 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %230, i64 0, i32 5
  %232 = load i64, i64* %231, align 8
  %233 = trunc i64 %232 to i32
  %234 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %228, i64 0, i32 4
  %235 = load i32, i32* %234, align 8
  %236 = icmp ult i32 %235, %233
  %237 = select i1 %236, i32 %235, i32 %233
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %262, label %239

239:                                              ; preds = %222
  %240 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %228, i64 0, i32 3
  %241 = load i8*, i8** %240, align 8
  %242 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %230, i64 0, i32 4
  %243 = load i8*, i8** %242, align 8
  %244 = zext i32 %237 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %241, i8* align 1 %243, i64 %244, i1 false) #8
  %245 = load i8*, i8** %240, align 8
  %246 = getelementptr inbounds i8, i8* %245, i64 %244
  store i8* %246, i8** %240, align 8
  %247 = load i8*, i8** %242, align 8
  %248 = getelementptr inbounds i8, i8* %247, i64 %244
  store i8* %248, i8** %242, align 8
  %249 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %228, i64 0, i32 5
  %250 = load i64, i64* %249, align 8
  %251 = add i64 %250, %244
  store i64 %251, i64* %249, align 8
  %252 = load i32, i32* %234, align 8
  %253 = sub i32 %252, %237
  store i32 %253, i32* %234, align 8
  %254 = load i64, i64* %231, align 8
  %255 = sub i64 %254, %244
  store i64 %255, i64* %231, align 8
  %256 = icmp eq i64 %255, 0
  br i1 %256, label %257, label %262

257:                                              ; preds = %239
  %258 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %230, i64 0, i32 2
  %259 = bitcast i8** %258 to i64*
  %260 = load i64, i64* %259, align 8
  %261 = bitcast i8** %242 to i64*
  store i64 %260, i64* %261, align 8
  br label %262

262:                                              ; preds = %222, %239, %257
  %263 = load %struct.z_stream_s*, %struct.z_stream_s** %25, align 8
  %264 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %263, i64 0, i32 4
  %265 = load i32, i32* %264, align 8
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %505, label %214

267:                                              ; preds = %106
  %268 = load i32, i32* %23, align 8
  %269 = icmp eq i32 %268, 0
  br i1 %269, label %356, label %270

270:                                              ; preds = %267
  %271 = load i8*, i8** %8, align 8
  %272 = load i32, i32* %5, align 4
  %273 = add i32 %272, -1
  %274 = zext i32 %273 to i64
  %275 = getelementptr inbounds i8, i8* %271, i64 %274
  %276 = load i8, i8* %275, align 1
  %277 = load i8*, i8** %20, align 8
  %278 = load i32, i32* %21, align 4
  %279 = add i32 %278, 1
  store i32 %279, i32* %21, align 4
  %280 = zext i32 %278 to i64
  %281 = getelementptr inbounds i8, i8* %277, i64 %280
  store i8 0, i8* %281, align 1
  %282 = load i8*, i8** %20, align 8
  %283 = load i32, i32* %21, align 4
  %284 = add i32 %283, 1
  store i32 %284, i32* %21, align 4
  %285 = zext i32 %283 to i64
  %286 = getelementptr inbounds i8, i8* %282, i64 %285
  store i8 0, i8* %286, align 1
  %287 = load i8*, i8** %20, align 8
  %288 = load i32, i32* %21, align 4
  %289 = add i32 %288, 1
  store i32 %289, i32* %21, align 4
  %290 = zext i32 %288 to i64
  %291 = getelementptr inbounds i8, i8* %287, i64 %290
  store i8 %276, i8* %291, align 1
  %292 = zext i8 %276 to i64
  %293 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 %292, i32 0, i32 0
  %294 = load i16, i16* %293, align 4
  %295 = add i16 %294, 1
  store i16 %295, i16* %293, align 4
  %296 = load i32, i32* %21, align 4
  %297 = load i32, i32* %22, align 8
  %298 = icmp eq i32 %296, %297
  br i1 %298, label %299, label %347

299:                                              ; preds = %270
  %300 = load i64, i64* %24, align 8
  %301 = icmp sgt i64 %300, -1
  br i1 %301, label %302, label %306

302:                                              ; preds = %299
  %303 = load i8*, i8** %8, align 8
  %304 = and i64 %300, 4294967295
  %305 = getelementptr inbounds i8, i8* %303, i64 %304
  br label %306

306:                                              ; preds = %299, %302
  %307 = phi i8* [ %305, %302 ], [ null, %299 ]
  %308 = load i32, i32* %5, align 4
  %309 = zext i32 %308 to i64
  %310 = sub nsw i64 %309, %300
  tail call void @Cr_z__tr_flush_block(%struct.internal_state* %0, i8* %307, i64 %310, i32 0) #8
  %311 = load i32, i32* %5, align 4
  %312 = zext i32 %311 to i64
  store i64 %312, i64* %24, align 8
  %313 = load %struct.z_stream_s*, %struct.z_stream_s** %25, align 8
  %314 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %313, i64 0, i32 7
  %315 = load %struct.internal_state*, %struct.internal_state** %314, align 8
  tail call void @Cr_z__tr_flush_bits(%struct.internal_state* %315) #8
  %316 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %315, i64 0, i32 5
  %317 = load i64, i64* %316, align 8
  %318 = trunc i64 %317 to i32
  %319 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %313, i64 0, i32 4
  %320 = load i32, i32* %319, align 8
  %321 = icmp ult i32 %320, %318
  %322 = select i1 %321, i32 %320, i32 %318
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %347, label %324

324:                                              ; preds = %306
  %325 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %313, i64 0, i32 3
  %326 = load i8*, i8** %325, align 8
  %327 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %315, i64 0, i32 4
  %328 = load i8*, i8** %327, align 8
  %329 = zext i32 %322 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %326, i8* align 1 %328, i64 %329, i1 false) #8
  %330 = load i8*, i8** %325, align 8
  %331 = getelementptr inbounds i8, i8* %330, i64 %329
  store i8* %331, i8** %325, align 8
  %332 = load i8*, i8** %327, align 8
  %333 = getelementptr inbounds i8, i8* %332, i64 %329
  store i8* %333, i8** %327, align 8
  %334 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %313, i64 0, i32 5
  %335 = load i64, i64* %334, align 8
  %336 = add i64 %335, %329
  store i64 %336, i64* %334, align 8
  %337 = load i32, i32* %319, align 8
  %338 = sub i32 %337, %322
  store i32 %338, i32* %319, align 8
  %339 = load i64, i64* %316, align 8
  %340 = sub i64 %339, %329
  store i64 %340, i64* %316, align 8
  %341 = icmp eq i64 %340, 0
  br i1 %341, label %342, label %347

342:                                              ; preds = %324
  %343 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %315, i64 0, i32 2
  %344 = bitcast i8** %343 to i64*
  %345 = load i64, i64* %344, align 8
  %346 = bitcast i8** %327 to i64*
  store i64 %345, i64* %346, align 8
  br label %347

347:                                              ; preds = %342, %324, %306, %270
  %348 = load i32, i32* %5, align 4
  %349 = add i32 %348, 1
  store i32 %349, i32* %5, align 4
  %350 = load i32, i32* %3, align 4
  %351 = add i32 %350, -1
  store i32 %351, i32* %3, align 4
  %352 = load %struct.z_stream_s*, %struct.z_stream_s** %25, align 8
  %353 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %352, i64 0, i32 4
  %354 = load i32, i32* %353, align 8
  %355 = icmp eq i32 %354, 0
  br i1 %355, label %505, label %214

356:                                              ; preds = %267
  store i32 1, i32* %23, align 8
  %357 = load i32, i32* %5, align 4
  %358 = add i32 %357, 1
  store i32 %358, i32* %5, align 4
  %359 = load i32, i32* %3, align 4
  %360 = add i32 %359, -1
  store i32 %360, i32* %3, align 4
  br label %214

361:                                              ; preds = %33
  %362 = load i32, i32* %23, align 8
  %363 = icmp eq i32 %362, 0
  br i1 %363, label %390, label %364

364:                                              ; preds = %361
  %365 = load i8*, i8** %8, align 8
  %366 = load i32, i32* %5, align 4
  %367 = add i32 %366, -1
  %368 = zext i32 %367 to i64
  %369 = getelementptr inbounds i8, i8* %365, i64 %368
  %370 = load i8, i8* %369, align 1
  %371 = load i8*, i8** %20, align 8
  %372 = load i32, i32* %21, align 4
  %373 = add i32 %372, 1
  store i32 %373, i32* %21, align 4
  %374 = zext i32 %372 to i64
  %375 = getelementptr inbounds i8, i8* %371, i64 %374
  store i8 0, i8* %375, align 1
  %376 = load i8*, i8** %20, align 8
  %377 = load i32, i32* %21, align 4
  %378 = add i32 %377, 1
  store i32 %378, i32* %21, align 4
  %379 = zext i32 %377 to i64
  %380 = getelementptr inbounds i8, i8* %376, i64 %379
  store i8 0, i8* %380, align 1
  %381 = load i8*, i8** %20, align 8
  %382 = load i32, i32* %21, align 4
  %383 = add i32 %382, 1
  store i32 %383, i32* %21, align 4
  %384 = zext i32 %382 to i64
  %385 = getelementptr inbounds i8, i8* %381, i64 %384
  store i8 %370, i8* %385, align 1
  %386 = zext i8 %370 to i64
  %387 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 38, i64 %386, i32 0, i32 0
  %388 = load i16, i16* %387, align 4
  %389 = add i16 %388, 1
  store i16 %389, i16* %387, align 4
  store i32 0, i32* %23, align 8
  br label %390

390:                                              ; preds = %361, %364
  %391 = load i32, i32* %5, align 4
  %392 = icmp ult i32 %391, 2
  %393 = select i1 %392, i32 %391, i32 2
  %394 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 56
  store i32 %393, i32* %394, align 4
  %395 = icmp eq i32 %1, 4
  br i1 %395, label %396, label %449

396:                                              ; preds = %390
  %397 = load i64, i64* %24, align 8
  %398 = icmp sgt i64 %397, -1
  br i1 %398, label %399, label %403

399:                                              ; preds = %396
  %400 = load i8*, i8** %8, align 8
  %401 = and i64 %397, 4294967295
  %402 = getelementptr inbounds i8, i8* %400, i64 %401
  br label %403

403:                                              ; preds = %396, %399
  %404 = phi i8* [ %402, %399 ], [ null, %396 ]
  %405 = zext i32 %391 to i64
  %406 = sub nsw i64 %405, %397
  tail call void @Cr_z__tr_flush_block(%struct.internal_state* %0, i8* %404, i64 %406, i32 1) #8
  %407 = load i32, i32* %5, align 4
  %408 = zext i32 %407 to i64
  store i64 %408, i64* %24, align 8
  %409 = load %struct.z_stream_s*, %struct.z_stream_s** %25, align 8
  %410 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %409, i64 0, i32 7
  %411 = load %struct.internal_state*, %struct.internal_state** %410, align 8
  tail call void @Cr_z__tr_flush_bits(%struct.internal_state* %411) #8
  %412 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %411, i64 0, i32 5
  %413 = load i64, i64* %412, align 8
  %414 = trunc i64 %413 to i32
  %415 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %409, i64 0, i32 4
  %416 = load i32, i32* %415, align 8
  %417 = icmp ult i32 %416, %414
  %418 = select i1 %417, i32 %416, i32 %414
  %419 = icmp eq i32 %418, 0
  br i1 %419, label %443, label %420

420:                                              ; preds = %403
  %421 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %409, i64 0, i32 3
  %422 = load i8*, i8** %421, align 8
  %423 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %411, i64 0, i32 4
  %424 = load i8*, i8** %423, align 8
  %425 = zext i32 %418 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %422, i8* align 1 %424, i64 %425, i1 false) #8
  %426 = load i8*, i8** %421, align 8
  %427 = getelementptr inbounds i8, i8* %426, i64 %425
  store i8* %427, i8** %421, align 8
  %428 = load i8*, i8** %423, align 8
  %429 = getelementptr inbounds i8, i8* %428, i64 %425
  store i8* %429, i8** %423, align 8
  %430 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %409, i64 0, i32 5
  %431 = load i64, i64* %430, align 8
  %432 = add i64 %431, %425
  store i64 %432, i64* %430, align 8
  %433 = load i32, i32* %415, align 8
  %434 = sub i32 %433, %418
  store i32 %434, i32* %415, align 8
  %435 = load i64, i64* %412, align 8
  %436 = sub i64 %435, %425
  store i64 %436, i64* %412, align 8
  %437 = icmp eq i64 %436, 0
  br i1 %437, label %438, label %443

438:                                              ; preds = %420
  %439 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %411, i64 0, i32 2
  %440 = bitcast i8** %439 to i64*
  %441 = load i64, i64* %440, align 8
  %442 = bitcast i8** %423 to i64*
  store i64 %441, i64* %442, align 8
  br label %443

443:                                              ; preds = %403, %420, %438
  %444 = load %struct.z_stream_s*, %struct.z_stream_s** %25, align 8
  %445 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %444, i64 0, i32 4
  %446 = load i32, i32* %445, align 8
  %447 = icmp eq i32 %446, 0
  %448 = select i1 %447, i32 2, i32 3
  br label %505

449:                                              ; preds = %390
  %450 = load i32, i32* %21, align 4
  %451 = icmp eq i32 %450, 0
  br i1 %451, label %504, label %452

452:                                              ; preds = %449
  %453 = load i64, i64* %24, align 8
  %454 = icmp sgt i64 %453, -1
  br i1 %454, label %455, label %459

455:                                              ; preds = %452
  %456 = load i8*, i8** %8, align 8
  %457 = and i64 %453, 4294967295
  %458 = getelementptr inbounds i8, i8* %456, i64 %457
  br label %459

459:                                              ; preds = %452, %455
  %460 = phi i8* [ %458, %455 ], [ null, %452 ]
  %461 = zext i32 %391 to i64
  %462 = sub nsw i64 %461, %453
  tail call void @Cr_z__tr_flush_block(%struct.internal_state* %0, i8* %460, i64 %462, i32 0) #8
  %463 = load i32, i32* %5, align 4
  %464 = zext i32 %463 to i64
  store i64 %464, i64* %24, align 8
  %465 = load %struct.z_stream_s*, %struct.z_stream_s** %25, align 8
  %466 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %465, i64 0, i32 7
  %467 = load %struct.internal_state*, %struct.internal_state** %466, align 8
  tail call void @Cr_z__tr_flush_bits(%struct.internal_state* %467) #8
  %468 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %467, i64 0, i32 5
  %469 = load i64, i64* %468, align 8
  %470 = trunc i64 %469 to i32
  %471 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %465, i64 0, i32 4
  %472 = load i32, i32* %471, align 8
  %473 = icmp ult i32 %472, %470
  %474 = select i1 %473, i32 %472, i32 %470
  %475 = icmp eq i32 %474, 0
  br i1 %475, label %499, label %476

476:                                              ; preds = %459
  %477 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %465, i64 0, i32 3
  %478 = load i8*, i8** %477, align 8
  %479 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %467, i64 0, i32 4
  %480 = load i8*, i8** %479, align 8
  %481 = zext i32 %474 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %478, i8* align 1 %480, i64 %481, i1 false) #8
  %482 = load i8*, i8** %477, align 8
  %483 = getelementptr inbounds i8, i8* %482, i64 %481
  store i8* %483, i8** %477, align 8
  %484 = load i8*, i8** %479, align 8
  %485 = getelementptr inbounds i8, i8* %484, i64 %481
  store i8* %485, i8** %479, align 8
  %486 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %465, i64 0, i32 5
  %487 = load i64, i64* %486, align 8
  %488 = add i64 %487, %481
  store i64 %488, i64* %486, align 8
  %489 = load i32, i32* %471, align 8
  %490 = sub i32 %489, %474
  store i32 %490, i32* %471, align 8
  %491 = load i64, i64* %468, align 8
  %492 = sub i64 %491, %481
  store i64 %492, i64* %468, align 8
  %493 = icmp eq i64 %492, 0
  br i1 %493, label %494, label %499

494:                                              ; preds = %476
  %495 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %467, i64 0, i32 2
  %496 = bitcast i8** %495 to i64*
  %497 = load i64, i64* %496, align 8
  %498 = bitcast i8** %479 to i64*
  store i64 %497, i64* %498, align 8
  br label %499

499:                                              ; preds = %459, %476, %494
  %500 = load %struct.z_stream_s*, %struct.z_stream_s** %25, align 8
  %501 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %500, i64 0, i32 4
  %502 = load i32, i32* %501, align 8
  %503 = icmp eq i32 %502, 0
  br i1 %503, label %505, label %504

504:                                              ; preds = %449, %499
  br label %505

505:                                              ; preds = %347, %262, %29, %499, %443, %504
  %506 = phi i32 [ 1, %504 ], [ %448, %443 ], [ 0, %499 ], [ 0, %29 ], [ 0, %262 ], [ 0, %347 ]
  ret i32 %506
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc i32 @longest_match(%struct.internal_state* nocapture, i32) unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 32
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 15
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 28
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds i8, i8* %6, i64 %9
  %11 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 31
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 37
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 12
  %16 = load i32, i32* %15, align 8
  %17 = add i32 %16, -262
  %18 = tail call i32 @llvm.usub.sat.i32(i32 %8, i32 %17)
  %19 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 17
  %20 = load i16*, i16** %19, align 8
  %21 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 14
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds i8, i8* %10, i64 258
  %24 = add nsw i32 %12, -1
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %10, i64 %25
  %27 = load i8, i8* %26, align 1
  %28 = sext i32 %12 to i64
  %29 = getelementptr inbounds i8, i8* %10, i64 %28
  %30 = load i8, i8* %29, align 1
  %31 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 36
  %32 = load i32, i32* %31, align 4
  %33 = icmp ult i32 %12, %32
  %34 = lshr i32 %4, 2
  %35 = select i1 %33, i32 %4, i32 %34
  %36 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 30
  %37 = load i32, i32* %36, align 4
  %38 = icmp ugt i32 %14, %37
  %39 = select i1 %38, i32 %37, i32 %14
  %40 = getelementptr inbounds %struct.internal_state, %struct.internal_state* %0, i64 0, i32 29
  %41 = getelementptr inbounds i8, i8* %10, i64 1
  %42 = ptrtoint i8* %23 to i64
  br label %43

43:                                               ; preds = %170, %2
  %44 = phi i32 [ %1, %2 ], [ %168, %170 ]
  %45 = phi i32 [ %35, %2 ], [ %171, %170 ]
  %46 = phi i32 [ %12, %2 ], [ %161, %170 ]
  %47 = phi i8 [ %27, %2 ], [ %162, %170 ]
  %48 = phi i8 [ %30, %2 ], [ %163, %170 ]
  %49 = zext i32 %44 to i64
  %50 = getelementptr inbounds i8, i8* %6, i64 %49
  %51 = sext i32 %46 to i64
  %52 = getelementptr inbounds i8, i8* %50, i64 %51
  %53 = load i8, i8* %52, align 1
  %54 = icmp eq i8 %53, %48
  br i1 %54, label %55, label %160

55:                                               ; preds = %43
  %56 = add nsw i32 %46, -1
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i8, i8* %50, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = icmp eq i8 %59, %47
  br i1 %60, label %61, label %160

61:                                               ; preds = %55
  %62 = load i8, i8* %50, align 1
  %63 = load i8, i8* %10, align 1
  %64 = icmp eq i8 %62, %63
  br i1 %64, label %65, label %160

65:                                               ; preds = %61
  %66 = getelementptr inbounds i8, i8* %50, i64 1
  %67 = load i8, i8* %66, align 1
  %68 = load i8, i8* %41, align 1
  %69 = icmp eq i8 %67, %68
  br i1 %69, label %70, label %160

70:                                               ; preds = %65
  %71 = getelementptr inbounds i8, i8* %66, i64 1
  br label %72

72:                                               ; preds = %117, %70
  %73 = phi i64 [ 2, %70 ], [ %118, %117 ]
  %74 = phi i8* [ %71, %70 ], [ %121, %117 ]
  %75 = getelementptr inbounds i8, i8* %10, i64 %73
  %76 = getelementptr inbounds i8, i8* %75, i64 1
  %77 = load i8, i8* %76, align 1
  %78 = getelementptr inbounds i8, i8* %74, i64 1
  %79 = load i8, i8* %78, align 1
  %80 = icmp eq i8 %77, %79
  br i1 %80, label %81, label %140

81:                                               ; preds = %72
  %82 = getelementptr inbounds i8, i8* %75, i64 2
  %83 = load i8, i8* %82, align 1
  %84 = getelementptr inbounds i8, i8* %74, i64 2
  %85 = load i8, i8* %84, align 1
  %86 = icmp eq i8 %83, %85
  br i1 %86, label %87, label %138

87:                                               ; preds = %81
  %88 = getelementptr inbounds i8, i8* %75, i64 3
  %89 = load i8, i8* %88, align 1
  %90 = getelementptr inbounds i8, i8* %74, i64 3
  %91 = load i8, i8* %90, align 1
  %92 = icmp eq i8 %89, %91
  br i1 %92, label %93, label %136

93:                                               ; preds = %87
  %94 = getelementptr inbounds i8, i8* %75, i64 4
  %95 = load i8, i8* %94, align 1
  %96 = getelementptr inbounds i8, i8* %74, i64 4
  %97 = load i8, i8* %96, align 1
  %98 = icmp eq i8 %95, %97
  br i1 %98, label %99, label %134

99:                                               ; preds = %93
  %100 = getelementptr inbounds i8, i8* %75, i64 5
  %101 = load i8, i8* %100, align 1
  %102 = getelementptr inbounds i8, i8* %74, i64 5
  %103 = load i8, i8* %102, align 1
  %104 = icmp eq i8 %101, %103
  br i1 %104, label %105, label %132

105:                                              ; preds = %99
  %106 = getelementptr inbounds i8, i8* %75, i64 6
  %107 = load i8, i8* %106, align 1
  %108 = getelementptr inbounds i8, i8* %74, i64 6
  %109 = load i8, i8* %108, align 1
  %110 = icmp eq i8 %107, %109
  br i1 %110, label %111, label %130

111:                                              ; preds = %105
  %112 = getelementptr inbounds i8, i8* %75, i64 7
  %113 = load i8, i8* %112, align 1
  %114 = getelementptr inbounds i8, i8* %74, i64 7
  %115 = load i8, i8* %114, align 1
  %116 = icmp eq i8 %113, %115
  br i1 %116, label %117, label %128

117:                                              ; preds = %111
  %118 = add nuw nsw i64 %73, 8
  %119 = getelementptr inbounds i8, i8* %10, i64 %118
  %120 = load i8, i8* %119, align 1
  %121 = getelementptr inbounds i8, i8* %74, i64 8
  %122 = load i8, i8* %121, align 1
  %123 = icmp eq i8 %120, %122
  %124 = icmp ult i64 %118, 258
  %125 = and i1 %124, %123
  br i1 %125, label %72, label %126

126:                                              ; preds = %117
  %127 = getelementptr inbounds i8, i8* %10, i64 %118
  br label %142

128:                                              ; preds = %111
  %129 = getelementptr inbounds i8, i8* %75, i64 7
  br label %142

130:                                              ; preds = %105
  %131 = getelementptr inbounds i8, i8* %75, i64 6
  br label %142

132:                                              ; preds = %99
  %133 = getelementptr inbounds i8, i8* %75, i64 5
  br label %142

134:                                              ; preds = %93
  %135 = getelementptr inbounds i8, i8* %75, i64 4
  br label %142

136:                                              ; preds = %87
  %137 = getelementptr inbounds i8, i8* %75, i64 3
  br label %142

138:                                              ; preds = %81
  %139 = getelementptr inbounds i8, i8* %75, i64 2
  br label %142

140:                                              ; preds = %72
  %141 = getelementptr inbounds i8, i8* %75, i64 1
  br label %142

142:                                              ; preds = %140, %138, %136, %134, %132, %130, %128, %126
  %143 = phi i8* [ %127, %126 ], [ %129, %128 ], [ %131, %130 ], [ %133, %132 ], [ %135, %134 ], [ %137, %136 ], [ %139, %138 ], [ %141, %140 ]
  %144 = ptrtoint i8* %143 to i64
  %145 = sub i64 %42, %144
  %146 = trunc i64 %145 to i32
  %147 = sub nsw i32 258, %146
  %148 = icmp sgt i32 %147, %46
  br i1 %148, label %149, label %160

149:                                              ; preds = %142
  store i32 %44, i32* %40, align 8
  %150 = icmp slt i32 %147, %39
  br i1 %150, label %151, label %173

151:                                              ; preds = %149
  %152 = shl i64 %145, 32
  %153 = sub i64 1103806595072, %152
  %154 = ashr exact i64 %153, 32
  %155 = getelementptr inbounds i8, i8* %10, i64 %154
  %156 = load i8, i8* %155, align 1
  %157 = sext i32 %147 to i64
  %158 = getelementptr inbounds i8, i8* %10, i64 %157
  %159 = load i8, i8* %158, align 1
  br label %160

160:                                              ; preds = %65, %61, %55, %43, %142, %151
  %161 = phi i32 [ %46, %43 ], [ %46, %55 ], [ %46, %61 ], [ %46, %65 ], [ %147, %151 ], [ %46, %142 ]
  %162 = phi i8 [ %47, %43 ], [ %47, %55 ], [ %47, %61 ], [ %47, %65 ], [ %156, %151 ], [ %47, %142 ]
  %163 = phi i8 [ %48, %43 ], [ %48, %55 ], [ %48, %61 ], [ %48, %65 ], [ %159, %151 ], [ %48, %142 ]
  %164 = and i32 %44, %22
  %165 = zext i32 %164 to i64
  %166 = getelementptr inbounds i16, i16* %20, i64 %165
  %167 = load i16, i16* %166, align 2
  %168 = zext i16 %167 to i32
  %169 = icmp ult i32 %18, %168
  br i1 %169, label %170, label %173

170:                                              ; preds = %160
  %171 = add i32 %45, -1
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %43

173:                                              ; preds = %149, %170, %160
  %174 = phi i32 [ %161, %170 ], [ %161, %160 ], [ %147, %149 ]
  %175 = icmp ugt i32 %174, %37
  %176 = select i1 %175, i32 %37, i32 %174
  ret i32 %176
}

declare void @Cr_z__tr_flush_block(%struct.internal_state*, i8*, i64, i32) local_unnamed_addr #1

declare void @Cr_z_fill_window_sse(%struct.internal_state*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.usub.sat.i32(i32, i32) #7

; Function Attrs: nounwind readnone speculatable
declare <8 x i32> @llvm.usub.sat.v8i32(<8 x i32>, <8 x i32>) #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !5, !3}
!5 = !{!"llvm.loop.unroll.runtime.disable"}
!6 = distinct !{!6, !3}
!7 = distinct !{!7, !5, !3}
!8 = distinct !{!8, !3}
!9 = distinct !{!9, !5, !3}
!10 = distinct !{!10, !3}
!11 = distinct !{!11, !5, !3}
