; ModuleID = '../../ui/events/blink/blink_event_util.cc'
source_filename = "../../ui/events/blink/blink_event_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gfx::Vector2dF" = type { float, float }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.gfx::PointF" = type { float, float }
%"class.blink::WebTouchEvent" = type { %"class.blink::WebInputEvent", i32, [16 x %"class.blink::WebTouchPoint"], i32, i8, i8, i8, i32 }
%"class.blink::WebInputEvent" = type { i32 (...)**, float, %"class.gfx::Vector2dF", %"class.base::TimeTicks", i32, i32 }
%"class.blink::WebTouchPoint" = type { %"class.blink::WebPointerProperties", i32, float, float, float }
%"class.blink::WebPointerProperties" = type { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, %"class.gfx::PointF", %"class.gfx::PointF" }
%"class.ui::MotionEvent" = type { i32 (...)** }
%"class.blink::WebGestureEvent" = type <{ %"class.blink::WebInputEvent", i8, [3 x i8], i32, i32, [4 x i8], %union.anon, %"class.gfx::PointF", %"class.gfx::PointF", i32, [4 x i8] }>
%union.anon = type { %struct.anon.9 }
%struct.anon.9 = type { i64, float, float, i32, i8, i32, i8, i8, i8, i8 }
%"struct.ui::GestureEventDetails" = type { i32, %"union.ui::GestureEventDetails::Details", i32, i8, i32, i32, %"class.gfx::RectF" }
%"union.ui::GestureEventDetails::Details" = type { %struct.anon }
%struct.anon = type { float, float, i8 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%struct.anon.6 = type { float, float }
%struct.anon.4 = type { i32, float, float, i8 }
%struct.anon.7 = type { float, float }
%struct.anon.8 = type { float, float }
%struct.anon.10 = type { float, float, float, float, i32, i8 }
%struct.anon.11 = type { i8, i32, i8, i8 }
%struct.anon.12 = type { float, float, i8 }
%struct.anon.14 = type { i8, i8, float }
%struct.anon.5 = type { float, float }
%"struct.ui::GestureEventData" = type { %"struct.ui::GestureEventDetails", i32, i32, %"class.base::TimeTicks", float, float, float, float, i32, i32 }
%"class.blink::WebMouseWheelEvent" = type <{ %"class.blink::WebMouseEvent.base", float, float, float, float, float, float, i32, i32, i32, i32, i32, i8, i8, [6 x i8] }>
%"class.blink::WebMouseEvent.base" = type <{ %"class.blink::WebInputEvent", %"class.blink::WebPointerProperties", i32, i32 }>
%"class.blink::WebMouseEvent" = type <{ %"class.blink::WebInputEvent", %"class.blink::WebPointerProperties", i32, i32, [4 x i8] }>

$_ZN5blink13WebTouchEventC2ENS_5mojom9EventTypeEiN4base9TimeTicksE = comdat any

$_ZN5blink13WebTouchEventC2Ev = comdat any

@__const._ZN2ui34CreateWebTouchEventFromMotionEventERKNS_11MotionEventEbb.result = private unnamed_addr constant { { i32 (...)**, float, %"class.gfx::Vector2dF", [4 x i8], %"class.base::TimeTicks", i32, i32 }, i32, [16 x { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float }], i32, i8, i8, i8, [1 x i8], i32 } { { i32 (...)**, float, %"class.gfx::Vector2dF", [4 x i8], %"class.base::TimeTicks", i32, i32 } { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), float 0xFFFFFFFFE0000000, %"class.gfx::Vector2dF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, [4 x i8] c"\AA\AA\AA\AA", %"class.base::TimeTicks" { %"class.base::time_internal::TimeBase" { i64 -6148914691236517206 } }, i32 -1431655766, i32 -1431655766 }, i32 -1431655766, [16 x { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float }] [{ { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float } { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float } { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float } { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float } { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float } { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float } { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float } { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float } { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float } { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float } { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float } { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float } { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float } { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float } { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float } { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float } { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }], i32 -1431655766, i8 -86, i8 -86, i8 -86, [1 x i8] c"\AA", i32 -1431655766 }, align 8
@__const._ZN2ui27ScrollBeginFromScrollUpdateERKN5blink15WebGestureEventE.scroll_begin = private unnamed_addr constant <{ { i32 (...)**, float, %"class.gfx::Vector2dF", [4 x i8], %"class.base::TimeTicks", i32, i32 }, i8, [3 x i8], i32, i32, [4 x i8], { { i64, float, float, i32, i8, [3 x i8], i32, i8, i8, i8, i8 } }, %"class.gfx::PointF", %"class.gfx::PointF", i32, [4 x i8] }> <{ { i32 (...)**, float, %"class.gfx::Vector2dF", [4 x i8], %"class.base::TimeTicks", i32, i32 } { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), float 0xFFFFFFFFE0000000, %"class.gfx::Vector2dF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, [4 x i8] c"\AA\AA\AA\AA", %"class.base::TimeTicks" { %"class.base::time_internal::TimeBase" { i64 -6148914691236517206 } }, i32 -1431655766, i32 -1431655766 }, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", { { i64, float, float, i32, i8, [3 x i8], i32, i8, i8, i8, i8 } } { { i64, float, float, i32, i8, [3 x i8], i32, i8, i8, i8, i8 } { i64 -6148914691236517206, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i8 -86, i8 -86, i8 -86, i8 -86 } }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@_ZTVN5blink13WebTouchEventE = external unnamed_addr constant { [8 x i8*] }, align 8
@__const._ZN2ui12_GLOBAL__N_119CreateWebTouchPointERKNS_11MotionEventEm.touch = private unnamed_addr constant { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float } { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, align 4
@_ZTVN5blink15WebGestureEventE = external unnamed_addr constant { [8 x i8*] }, align 8
@_ZTVN5blink18WebMouseWheelEventE = external unnamed_addr constant { [8 x i8*] }, align 8
@_ZTVN5blink13WebMouseEventE = external unnamed_addr constant { [8 x i8*] }, align 8
@switch.table._ZN2ui34CreateWebTouchEventFromMotionEventERKNS_11MotionEventEbb = private unnamed_addr constant [6 x i32] [i32 28, i32 30, i32 29, i32 31, i32 28, i32 30], align 4
@switch.table._ZN2ui19ToWebMouseEventTypeENS_11MotionEvent6ActionE = private unnamed_addr constant [11 x i32] [i32 0, i32 1, i32 2, i32 -1, i32 -1, i32 -1, i32 3, i32 4, i32 2, i32 0, i32 1], align 4
@switch.table._ZN2ui42SetWebPointerPropertiesFromMotionEventDataERN5blink20WebPointerPropertiesEiffffffiNS_11MotionEvent8ToolTypeE = private unnamed_addr constant [4 x i32] [i32 3, i32 2, i32 1, i32 4], align 4
@switch.table._ZN2ui31DomCodeToWebInputEventModifiersENS_7DomCodeE = private unnamed_addr constant [3 x i32] [i32 2048, i32 4096, i32 16], align 4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui34CreateWebTouchEventFromMotionEventERKNS_11MotionEventEbb(%"class.blink::WebTouchEvent"* noalias sret, %"class.ui::MotionEvent"* dereferenceable(8), i1 zeroext, i1 zeroext) local_unnamed_addr #0 {
  %5 = alloca { i32, i32, i8 }, align 8
  %6 = zext i1 %2 to i8
  %7 = zext i1 %3 to i8
  %8 = bitcast %"class.blink::WebTouchEvent"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 bitcast ({ { i32 (...)**, float, %"class.gfx::Vector2dF", [4 x i8], %"class.base::TimeTicks", i32, i32 }, i32, [16 x { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float }], i32, i8, i8, i8, [1 x i8], i32 }* @__const._ZN2ui34CreateWebTouchEventFromMotionEventERKNS_11MotionEventEbb.result to i8*), i64 1272, i1 false)
  %9 = bitcast %"class.ui::MotionEvent"* %1 to i32 (%"class.ui::MotionEvent"*)***
  %10 = load i32 (%"class.ui::MotionEvent"*)**, i32 (%"class.ui::MotionEvent"*)*** %9, align 8
  %11 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %10, i64 3
  %12 = load i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %11, align 8
  %13 = tail call i32 %12(%"class.ui::MotionEvent"* %1) #7
  %14 = add i32 %13, -1
  %15 = icmp ult i32 %14, 6
  br i1 %15, label %16, label %20

16:                                               ; preds = %4
  %17 = sext i32 %14 to i64
  %18 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table._ZN2ui34CreateWebTouchEventFromMotionEventERKNS_11MotionEventEbb, i64 0, i64 %17
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %4, %16
  %21 = phi i32 [ %19, %16 ], [ -1, %4 ]
  %22 = load i32 (%"class.ui::MotionEvent"*)**, i32 (%"class.ui::MotionEvent"*)*** %9, align 8
  %23 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %22, i64 21
  %24 = load i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %23, align 8
  %25 = tail call i32 %24(%"class.ui::MotionEvent"* %1) #7
  %26 = lshr i32 %25, 1
  %27 = and i32 %26, 15
  %28 = shl i32 %25, 10
  %29 = and i32 %28, 32768
  %30 = or i32 %27, %29
  %31 = shl i32 %25, 3
  %32 = and i32 %31, 1024
  %33 = or i32 %30, %32
  %34 = shl i32 %25, 1
  %35 = and i32 %34, 512
  %36 = or i32 %33, %35
  %37 = shl i32 %25, 9
  %38 = and i32 %37, 262144
  %39 = or i32 %36, %38
  %40 = lshr i32 %25, 4
  %41 = and i32 %40, 64
  %42 = or i32 %39, %41
  %43 = and i32 %40, 128
  %44 = or i32 %42, %43
  %45 = and i32 %40, 256
  %46 = or i32 %44, %45
  %47 = shl i32 %25, 7
  %48 = and i32 %47, 1048576
  %49 = or i32 %46, %48
  %50 = and i32 %47, 2097152
  %51 = or i32 %49, %50
  %52 = lshr i32 %25, 11
  %53 = and i32 %52, 32
  %54 = or i32 %51, %53
  %55 = lshr i32 %25, 6
  %56 = and i32 %55, 8192
  %57 = or i32 %54, %56
  %58 = bitcast %"class.ui::MotionEvent"* %1 to i64 (%"class.ui::MotionEvent"*)***
  %59 = load i64 (%"class.ui::MotionEvent"*)**, i64 (%"class.ui::MotionEvent"*)*** %58, align 8
  %60 = getelementptr inbounds i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %59, i64 22
  %61 = load i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %60, align 8
  %62 = tail call i64 %61(%"class.ui::MotionEvent"* %1) #7
  tail call void @_ZN5blink13WebTouchEventC2ENS_5mojom9EventTypeEiN4base9TimeTicksE(%"class.blink::WebTouchEvent"* %0, i32 %21, i32 %57, i64 %62)
  %63 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 0, i32 4
  %64 = load i32, i32* %63, align 8
  %65 = icmp eq i32 %64, 31
  %66 = zext i1 %65 to i32
  %67 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 3
  store i32 %66, i32* %67, align 4
  %68 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 4
  store i8 %6, i8* %68, align 8
  %69 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 5
  store i8 %7, i8* %69, align 1
  %70 = load i32 (%"class.ui::MotionEvent"*)**, i32 (%"class.ui::MotionEvent"*)*** %9, align 8
  %71 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %70, i64 2
  %72 = load i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %71, align 8
  %73 = tail call i32 %72(%"class.ui::MotionEvent"* %1) #7
  %74 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 7
  store i32 %73, i32* %74, align 4
  %75 = load i64 (%"class.ui::MotionEvent"*)**, i64 (%"class.ui::MotionEvent"*)*** %58, align 8
  %76 = getelementptr inbounds i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %75, i64 5
  %77 = load i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %76, align 8
  %78 = tail call i64 %77(%"class.ui::MotionEvent"* %1) #7
  %79 = trunc i64 %78 to i32
  %80 = icmp ult i32 %79, 16
  %81 = select i1 %80, i32 %79, i32 16
  %82 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 1
  store i32 %81, i32* %82, align 8
  %83 = icmp eq i32 %81, 0
  br i1 %83, label %229, label %84

84:                                               ; preds = %20
  %85 = bitcast { i32, i32, i8 }* %5 to i8*
  %86 = bitcast %"class.ui::MotionEvent"* %1 to i32 (%"class.ui::MotionEvent"*, i64)***
  %87 = bitcast %"class.ui::MotionEvent"* %1 to float (%"class.ui::MotionEvent"*, i64)***
  br label %88

88:                                               ; preds = %84, %200
  %89 = phi i64 [ 0, %84 ], [ %225, %200 ]
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %85)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %85, i8* align 4 bitcast (i32* getelementptr inbounds ({ { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float }, { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float }* @__const._ZN2ui12_GLOBAL__N_119CreateWebTouchPointERKNS_11MotionEventEm.touch, i64 0, i32 0, i32 8) to i8*), i64 12, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %85, i8 0, i64 9, i1 false), !alias.scope !2
  %90 = load i32 (%"class.ui::MotionEvent"*, i64)**, i32 (%"class.ui::MotionEvent"*, i64)*** %86, align 8, !noalias !2
  %91 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*, i64)*, i32 (%"class.ui::MotionEvent"*, i64)** %90, i64 6
  %92 = load i32 (%"class.ui::MotionEvent"*, i64)*, i32 (%"class.ui::MotionEvent"*, i64)** %91, align 8, !noalias !2
  %93 = tail call i32 %92(%"class.ui::MotionEvent"* %1, i64 %89) #7, !noalias !2
  %94 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %87, align 8, !noalias !2
  %95 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %94, i64 14
  %96 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %95, align 8, !noalias !2
  %97 = tail call float %96(%"class.ui::MotionEvent"* %1, i64 %89) #7, !noalias !2
  %98 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %87, align 8, !noalias !2
  %99 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %98, i64 13
  %100 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %99, align 8, !noalias !2
  %101 = tail call float %100(%"class.ui::MotionEvent"* %1, i64 %89) #7, !noalias !2
  %102 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %87, align 8, !noalias !2
  %103 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %102, i64 15
  %104 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %103, align 8, !noalias !2
  %105 = tail call float %104(%"class.ui::MotionEvent"* %1, i64 %89) #7, !noalias !2
  %106 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %87, align 8, !noalias !2
  %107 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %106, i64 16
  %108 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %107, align 8, !noalias !2
  %109 = tail call float %108(%"class.ui::MotionEvent"* %1, i64 %89) #7, !noalias !2
  %110 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %87, align 8, !noalias !2
  %111 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %110, i64 17
  %112 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %111, align 8, !noalias !2
  %113 = tail call float %112(%"class.ui::MotionEvent"* %1, i64 %89) #7, !noalias !2
  %114 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %87, align 8, !noalias !2
  %115 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %114, i64 18
  %116 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %115, align 8, !noalias !2
  %117 = tail call float %116(%"class.ui::MotionEvent"* %1, i64 %89) #7, !noalias !2
  %118 = load i32 (%"class.ui::MotionEvent"*, i64)**, i32 (%"class.ui::MotionEvent"*, i64)*** %86, align 8, !noalias !2
  %119 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*, i64)*, i32 (%"class.ui::MotionEvent"*, i64)** %118, i64 19
  %120 = load i32 (%"class.ui::MotionEvent"*, i64)*, i32 (%"class.ui::MotionEvent"*, i64)** %119, align 8, !noalias !2
  %121 = tail call i32 %120(%"class.ui::MotionEvent"* %1, i64 %89) #7, !noalias !2
  switch i32 %121, label %129 [
    i32 2, label %122
    i32 4, label %128
    i32 1, label %126
    i32 3, label %127
  ]

122:                                              ; preds = %88
  %123 = fptosi float %105 to i32
  %124 = fptosi float %109 to i32
  %125 = fptosi float %113 to i32
  br label %129

126:                                              ; preds = %88
  br label %129

127:                                              ; preds = %88
  br label %129

128:                                              ; preds = %88
  br label %129

129:                                              ; preds = %88, %128, %127, %126, %122
  %130 = phi i32 [ %123, %122 ], [ 0, %127 ], [ 0, %126 ], [ 0, %128 ], [ 0, %88 ]
  %131 = phi i32 [ %124, %122 ], [ 0, %127 ], [ 0, %126 ], [ 0, %128 ], [ 0, %88 ]
  %132 = phi float [ %117, %122 ], [ 0.000000e+00, %127 ], [ 0.000000e+00, %126 ], [ 0.000000e+00, %128 ], [ 0.000000e+00, %88 ]
  %133 = phi i32 [ %125, %122 ], [ 0, %127 ], [ 0, %126 ], [ 0, %128 ], [ 0, %88 ]
  %134 = phi i32 [ 2, %122 ], [ 1, %127 ], [ 3, %126 ], [ 4, %128 ], [ 0, %88 ]
  %135 = load i32 (%"class.ui::MotionEvent"*)**, i32 (%"class.ui::MotionEvent"*)*** %9, align 8, !noalias !2
  %136 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %135, i64 3
  %137 = load i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %136, align 8, !noalias !2
  %138 = tail call i32 %137(%"class.ui::MotionEvent"* %1) #7, !noalias !2
  switch i32 %138, label %158 [
    i32 1, label %159
    i32 3, label %139
    i32 2, label %140
    i32 4, label %141
    i32 5, label %142
    i32 6, label %150
  ]

139:                                              ; preds = %129
  br label %159

140:                                              ; preds = %129
  br label %159

141:                                              ; preds = %129
  br label %159

142:                                              ; preds = %129
  %143 = trunc i64 %89 to i32
  %144 = load i32 (%"class.ui::MotionEvent"*)**, i32 (%"class.ui::MotionEvent"*)*** %9, align 8, !noalias !2
  %145 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %144, i64 4
  %146 = load i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %145, align 8, !noalias !2
  %147 = tail call i32 %146(%"class.ui::MotionEvent"* %1) #7, !noalias !2
  %148 = icmp eq i32 %147, %143
  %149 = select i1 %148, i32 2, i32 4
  br label %159

150:                                              ; preds = %129
  %151 = trunc i64 %89 to i32
  %152 = load i32 (%"class.ui::MotionEvent"*)**, i32 (%"class.ui::MotionEvent"*)*** %9, align 8, !noalias !2
  %153 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %152, i64 4
  %154 = load i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %153, align 8, !noalias !2
  %155 = tail call i32 %154(%"class.ui::MotionEvent"* %1) #7, !noalias !2
  %156 = icmp eq i32 %155, %151
  %157 = select i1 %156, i32 1, i32 4
  br label %159

158:                                              ; preds = %129
  br label %159

159:                                              ; preds = %158, %150, %142, %141, %140, %139, %129
  %160 = phi i32 [ 0, %158 ], [ %157, %150 ], [ %149, %142 ], [ 5, %141 ], [ 1, %140 ], [ 3, %139 ], [ 2, %129 ]
  %161 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %87, align 8, !noalias !2
  %162 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %161, i64 7
  %163 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %162, align 8, !noalias !2
  %164 = tail call float %163(%"class.ui::MotionEvent"* %1, i64 %89) #7, !noalias !2
  %165 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %87, align 8, !noalias !2
  %166 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %165, i64 8
  %167 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %166, align 8, !noalias !2
  %168 = tail call float %167(%"class.ui::MotionEvent"* %1, i64 %89) #7, !noalias !2
  %169 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %87, align 8, !noalias !2
  %170 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %169, i64 9
  %171 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %170, align 8, !noalias !2
  %172 = tail call float %171(%"class.ui::MotionEvent"* %1, i64 %89) #7, !noalias !2
  %173 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %87, align 8, !noalias !2
  %174 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %173, i64 10
  %175 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %174, align 8, !noalias !2
  %176 = tail call float %175(%"class.ui::MotionEvent"* %1, i64 %89) #7, !noalias !2
  %177 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %87, align 8, !noalias !2
  %178 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %177, i64 11
  %179 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %178, align 8, !noalias !2
  %180 = tail call float %179(%"class.ui::MotionEvent"* %1, i64 %89) #7, !noalias !2
  %181 = fmul float %180, 5.000000e-01
  %182 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %87, align 8, !noalias !2
  %183 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %182, i64 12
  %184 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %183, align 8, !noalias !2
  %185 = tail call float %184(%"class.ui::MotionEvent"* %1, i64 %89) #7, !noalias !2
  %186 = fmul float %185, 5.000000e-01
  %187 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %87, align 8, !noalias !2
  %188 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %187, i64 13
  %189 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %188, align 8, !noalias !2
  %190 = tail call float %189(%"class.ui::MotionEvent"* %1, i64 %89) #7, !noalias !2
  %191 = fmul float %190, 1.800000e+02
  %192 = fdiv float %191, 0x400921FB60000000
  %193 = fcmp ult float %192, 9.000000e+01
  br i1 %193, label %196, label %194

194:                                              ; preds = %159
  %195 = fadd float %192, -1.800000e+02
  br label %200

196:                                              ; preds = %159
  %197 = fcmp olt float %192, -9.000000e+01
  br i1 %197, label %198, label %200

198:                                              ; preds = %196
  %199 = fadd float %192, 1.800000e+02
  br label %200

200:                                              ; preds = %198, %196, %194
  %201 = phi float [ %195, %194 ], [ %199, %198 ], [ %192, %196 ]
  %202 = fcmp ult float %201, 0.000000e+00
  %203 = fadd float %201, 9.000000e+01
  %204 = select i1 %202, float %181, float %186
  %205 = select i1 %202, float %186, float %181
  %206 = select i1 %202, float %203, float %201
  %207 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 %89, i32 0, i32 0
  store i32 %93, i32* %207, align 4
  %208 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 %89, i32 0, i32 1
  store float %97, float* %208, align 4
  %209 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 %89, i32 0, i32 2
  store i32 %130, i32* %209, align 4
  %210 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 %89, i32 0, i32 3
  store i32 %131, i32* %210, align 4
  %211 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 %89, i32 0, i32 4
  store float %132, float* %211, align 4
  %212 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 %89, i32 0, i32 5
  store i32 %133, i32* %212, align 4
  %213 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 %89, i32 0, i32 6
  store i32 -1, i32* %213, align 4
  %214 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 %89, i32 0, i32 7
  store i32 %134, i32* %214, align 4
  %215 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 %89, i32 0, i32 8
  %216 = bitcast i32* %215 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %216, i8* nonnull align 8 %85, i64 12, i1 false)
  %217 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 %89, i32 0, i32 11, i32 0
  store float %164, float* %217, align 4
  %218 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 %89, i32 0, i32 11, i32 1
  store float %168, float* %218, align 4
  %219 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 %89, i32 0, i32 12, i32 0
  store float %172, float* %219, align 4
  %220 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 %89, i32 0, i32 12, i32 1
  store float %176, float* %220, align 4
  %221 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 %89, i32 1
  store i32 %160, i32* %221, align 4
  %222 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 %89, i32 2
  store float %204, float* %222, align 4
  %223 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 %89, i32 3
  store float %205, float* %223, align 4
  %224 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 %89, i32 4
  store float %206, float* %224, align 4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %85)
  %225 = add nuw nsw i64 %89, 1
  %226 = load i32, i32* %82, align 8
  %227 = zext i32 %226 to i64
  %228 = icmp ult i64 %225, %227
  br i1 %228, label %88, label %229

229:                                              ; preds = %200, %20
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2ui29EventFlagsToWebEventModifiersEi(i32) local_unnamed_addr #2 {
  %2 = lshr i32 %0, 1
  %3 = and i32 %2, 15
  %4 = shl i32 %0, 10
  %5 = and i32 %4, 32768
  %6 = or i32 %3, %5
  %7 = shl i32 %0, 3
  %8 = and i32 %7, 1024
  %9 = or i32 %6, %8
  %10 = shl i32 %0, 1
  %11 = and i32 %10, 512
  %12 = or i32 %9, %11
  %13 = shl i32 %0, 9
  %14 = and i32 %13, 262144
  %15 = or i32 %12, %14
  %16 = lshr i32 %0, 4
  %17 = and i32 %16, 64
  %18 = or i32 %15, %17
  %19 = and i32 %16, 128
  %20 = or i32 %18, %19
  %21 = and i32 %16, 256
  %22 = or i32 %20, %21
  %23 = shl i32 %0, 7
  %24 = and i32 %23, 1048576
  %25 = or i32 %22, %24
  %26 = and i32 %23, 2097152
  %27 = or i32 %25, %26
  %28 = lshr i32 %0, 11
  %29 = and i32 %28, 32
  %30 = or i32 %27, %29
  %31 = lshr i32 %0, 6
  %32 = and i32 %31, 8192
  %33 = or i32 %30, %32
  ret i32 %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13WebTouchEventC2ENS_5mojom9EventTypeEiN4base9TimeTicksE(%"class.blink::WebTouchEvent"*, i32, i32, i64) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 0, i32 1
  store float 1.000000e+00, float* %6, align 8
  %7 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 0, i32 2, i32 0
  store float 0.000000e+00, float* %7, align 4
  %8 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 0, i32 2, i32 1
  store float 0.000000e+00, float* %8, align 4
  %9 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  store i64 %3, i64* %9, align 8
  %10 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 0, i32 4
  store i32 %1, i32* %10, align 8
  %11 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 0, i32 5
  store i32 %2, i32* %11, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink13WebTouchEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %12 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 0, i32 0, i32 0
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 0, i32 0, i32 1
  store float 0x7FF8000000000000, float* %14, align 4
  %15 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 0, i32 0, i32 2
  %16 = bitcast i32* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %16, i8 0, i64 16, i1 false) #7
  %17 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 0, i32 0, i32 6
  store i32 -1, i32* %17, align 4
  %18 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 0, i32 0, i32 7
  %19 = bitcast i32* %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %19, i8 0, i64 13, i1 false) #7
  %20 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 0, i32 0, i32 11
  %21 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 1, i32 0, i32 1
  %22 = bitcast %"class.gfx::PointF"* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %22, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %21, align 4
  %23 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 1, i32 0, i32 2
  %24 = bitcast i32* %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %24, i8 0, i64 16, i1 false) #7
  %25 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 1, i32 0, i32 6
  store i32 -1, i32* %25, align 4
  %26 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 1, i32 0, i32 7
  %27 = bitcast i32* %26 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %27, i8 0, i64 13, i1 false) #7
  %28 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 1, i32 0, i32 11
  %29 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 2, i32 0, i32 1
  %30 = bitcast %"class.gfx::PointF"* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %30, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %29, align 4
  %31 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 2, i32 0, i32 2
  %32 = bitcast i32* %31 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %32, i8 0, i64 16, i1 false) #7
  %33 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 2, i32 0, i32 6
  store i32 -1, i32* %33, align 4
  %34 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 2, i32 0, i32 7
  %35 = bitcast i32* %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 13, i1 false) #7
  %36 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 2, i32 0, i32 11
  %37 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 3, i32 0, i32 1
  %38 = bitcast %"class.gfx::PointF"* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %38, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %37, align 4
  %39 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 3, i32 0, i32 2
  %40 = bitcast i32* %39 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %40, i8 0, i64 16, i1 false) #7
  %41 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 3, i32 0, i32 6
  store i32 -1, i32* %41, align 4
  %42 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 3, i32 0, i32 7
  %43 = bitcast i32* %42 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %43, i8 0, i64 13, i1 false) #7
  %44 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 3, i32 0, i32 11
  %45 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 4, i32 0, i32 1
  %46 = bitcast %"class.gfx::PointF"* %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %46, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %45, align 4
  %47 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 4, i32 0, i32 2
  %48 = bitcast i32* %47 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %48, i8 0, i64 16, i1 false) #7
  %49 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 4, i32 0, i32 6
  store i32 -1, i32* %49, align 4
  %50 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 4, i32 0, i32 7
  %51 = bitcast i32* %50 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %51, i8 0, i64 13, i1 false) #7
  %52 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 4, i32 0, i32 11
  %53 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 5, i32 0, i32 1
  %54 = bitcast %"class.gfx::PointF"* %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %54, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %53, align 4
  %55 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 5, i32 0, i32 2
  %56 = bitcast i32* %55 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %56, i8 0, i64 16, i1 false) #7
  %57 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 5, i32 0, i32 6
  store i32 -1, i32* %57, align 4
  %58 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 5, i32 0, i32 7
  %59 = bitcast i32* %58 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %59, i8 0, i64 13, i1 false) #7
  %60 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 5, i32 0, i32 11
  %61 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 6, i32 0, i32 1
  %62 = bitcast %"class.gfx::PointF"* %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %62, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %61, align 4
  %63 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 6, i32 0, i32 2
  %64 = bitcast i32* %63 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %64, i8 0, i64 16, i1 false) #7
  %65 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 6, i32 0, i32 6
  store i32 -1, i32* %65, align 4
  %66 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 6, i32 0, i32 7
  %67 = bitcast i32* %66 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %67, i8 0, i64 13, i1 false) #7
  %68 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 6, i32 0, i32 11
  %69 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 7, i32 0, i32 1
  %70 = bitcast %"class.gfx::PointF"* %68 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %70, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %69, align 4
  %71 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 7, i32 0, i32 2
  %72 = bitcast i32* %71 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %72, i8 0, i64 16, i1 false) #7
  %73 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 7, i32 0, i32 6
  store i32 -1, i32* %73, align 4
  %74 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 7, i32 0, i32 7
  %75 = bitcast i32* %74 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %75, i8 0, i64 13, i1 false) #7
  %76 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 7, i32 0, i32 11
  %77 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 8, i32 0, i32 1
  %78 = bitcast %"class.gfx::PointF"* %76 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %78, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %77, align 4
  %79 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 8, i32 0, i32 2
  %80 = bitcast i32* %79 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %80, i8 0, i64 16, i1 false) #7
  %81 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 8, i32 0, i32 6
  store i32 -1, i32* %81, align 4
  %82 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 8, i32 0, i32 7
  %83 = bitcast i32* %82 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %83, i8 0, i64 13, i1 false) #7
  %84 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 8, i32 0, i32 11
  %85 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 9, i32 0, i32 1
  %86 = bitcast %"class.gfx::PointF"* %84 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %86, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %85, align 4
  %87 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 9, i32 0, i32 2
  %88 = bitcast i32* %87 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %88, i8 0, i64 16, i1 false) #7
  %89 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 9, i32 0, i32 6
  store i32 -1, i32* %89, align 4
  %90 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 9, i32 0, i32 7
  %91 = bitcast i32* %90 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %91, i8 0, i64 13, i1 false) #7
  %92 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 9, i32 0, i32 11
  %93 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 10, i32 0, i32 1
  %94 = bitcast %"class.gfx::PointF"* %92 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %94, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %93, align 4
  %95 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 10, i32 0, i32 2
  %96 = bitcast i32* %95 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %96, i8 0, i64 16, i1 false) #7
  %97 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 10, i32 0, i32 6
  store i32 -1, i32* %97, align 4
  %98 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 10, i32 0, i32 7
  %99 = bitcast i32* %98 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %99, i8 0, i64 13, i1 false) #7
  %100 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 10, i32 0, i32 11
  %101 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 11, i32 0, i32 1
  %102 = bitcast %"class.gfx::PointF"* %100 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %102, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %101, align 4
  %103 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 11, i32 0, i32 2
  %104 = bitcast i32* %103 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %104, i8 0, i64 16, i1 false) #7
  %105 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 11, i32 0, i32 6
  store i32 -1, i32* %105, align 4
  %106 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 11, i32 0, i32 7
  %107 = bitcast i32* %106 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %107, i8 0, i64 13, i1 false) #7
  %108 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 11, i32 0, i32 11
  %109 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 12, i32 0, i32 1
  %110 = bitcast %"class.gfx::PointF"* %108 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %110, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %109, align 4
  %111 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 12, i32 0, i32 2
  %112 = bitcast i32* %111 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %112, i8 0, i64 16, i1 false) #7
  %113 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 12, i32 0, i32 6
  store i32 -1, i32* %113, align 4
  %114 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 12, i32 0, i32 7
  %115 = bitcast i32* %114 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %115, i8 0, i64 13, i1 false) #7
  %116 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 12, i32 0, i32 11
  %117 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 13, i32 0, i32 1
  %118 = bitcast %"class.gfx::PointF"* %116 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %118, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %117, align 4
  %119 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 13, i32 0, i32 2
  %120 = bitcast i32* %119 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %120, i8 0, i64 16, i1 false) #7
  %121 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 13, i32 0, i32 6
  store i32 -1, i32* %121, align 4
  %122 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 13, i32 0, i32 7
  %123 = bitcast i32* %122 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %123, i8 0, i64 13, i1 false) #7
  %124 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 13, i32 0, i32 11
  %125 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 14, i32 0, i32 1
  %126 = bitcast %"class.gfx::PointF"* %124 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %126, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %125, align 4
  %127 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 14, i32 0, i32 2
  %128 = bitcast i32* %127 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %128, i8 0, i64 16, i1 false) #7
  %129 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 14, i32 0, i32 6
  store i32 -1, i32* %129, align 4
  %130 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 14, i32 0, i32 7
  %131 = bitcast i32* %130 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %131, i8 0, i64 13, i1 false) #7
  %132 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 14, i32 0, i32 11
  %133 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 15, i32 0, i32 1
  %134 = bitcast %"class.gfx::PointF"* %132 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %134, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %133, align 4
  %135 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 15, i32 0, i32 2
  %136 = bitcast i32* %135 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %136, i8 0, i64 16, i1 false) #7
  %137 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 15, i32 0, i32 6
  store i32 -1, i32* %137, align 4
  %138 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 15, i32 0, i32 7
  %139 = bitcast i32* %138 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %139, i8 0, i64 13, i1 false) #7
  %140 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 15, i32 0, i32 11
  %141 = bitcast %"class.gfx::PointF"* %140 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %141, i8 0, i64 32, i1 false) #7
  %142 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 3
  %143 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 7
  store i32 0, i32* %143, align 4
  %144 = bitcast i32* %142 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %144, i8 0, i64 7, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui21CreateWebGestureEventERKNS_19GestureEventDetailsEN4base9TimeTicksERKN3gfx6PointFES8_ij(%"class.blink::WebGestureEvent"* noalias sret, %"struct.ui::GestureEventDetails"* readonly dereferenceable(48), i64, %"class.gfx::PointF"* nocapture readonly dereferenceable(8), %"class.gfx::PointF"* nocapture readonly dereferenceable(8), i32, i32) local_unnamed_addr #3 {
  %8 = getelementptr inbounds %"struct.ui::GestureEventDetails", %"struct.ui::GestureEventDetails"* %1, i64 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 1
  %11 = zext i1 %10 to i32
  %12 = icmp eq i32 %9, 2
  %13 = select i1 %12, i32 2, i32 %11
  %14 = bitcast %"class.blink::WebGestureEvent"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 bitcast (<{ { i32 (...)**, float, %"class.gfx::Vector2dF", [4 x i8], %"class.base::TimeTicks", i32, i32 }, i8, [3 x i8], i32, i32, [4 x i8], { { i64, float, float, i32, i8, [3 x i8], i32, i8, i8, i8, i8 } }, %"class.gfx::PointF", %"class.gfx::PointF", i32, [4 x i8] }>* @__const._ZN2ui27ScrollBeginFromScrollUpdateERKN5blink15WebGestureEventE.scroll_begin to i8*), i64 112, i1 false)
  %15 = lshr i32 %5, 1
  %16 = and i32 %15, 15
  %17 = shl i32 %5, 10
  %18 = and i32 %17, 32768
  %19 = or i32 %16, %18
  %20 = shl i32 %5, 3
  %21 = and i32 %20, 1024
  %22 = or i32 %19, %21
  %23 = shl i32 %5, 1
  %24 = and i32 %23, 512
  %25 = or i32 %22, %24
  %26 = shl i32 %5, 9
  %27 = and i32 %26, 262144
  %28 = or i32 %25, %27
  %29 = lshr i32 %5, 4
  %30 = and i32 %29, 64
  %31 = or i32 %28, %30
  %32 = and i32 %29, 128
  %33 = or i32 %31, %32
  %34 = and i32 %29, 256
  %35 = or i32 %33, %34
  %36 = shl i32 %5, 7
  %37 = and i32 %36, 1048576
  %38 = or i32 %35, %37
  %39 = and i32 %36, 2097152
  %40 = or i32 %38, %39
  %41 = lshr i32 %5, 11
  %42 = and i32 %41, 32
  %43 = or i32 %40, %42
  %44 = lshr i32 %5, 6
  %45 = and i32 %44, 8192
  %46 = or i32 %43, %45
  %47 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 0, i32 1
  store float 1.000000e+00, float* %48, align 8
  %49 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 0, i32 2, i32 0
  store float 0.000000e+00, float* %49, align 4
  %50 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 0, i32 2, i32 1
  store float 0.000000e+00, float* %50, align 4
  %51 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  store i64 %2, i64* %51, align 8
  %52 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 0, i32 4
  store i32 -1, i32* %52, align 8
  %53 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 0, i32 5
  store i32 %46, i32* %53, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink15WebGestureEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %47, align 8
  %54 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 1
  %55 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 3
  store i32 0, i32* %55, align 4
  %56 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 4
  store i32 0, i32* %56, align 8
  %57 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 9
  store i32 %13, i32* %57, align 8
  %58 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6
  %59 = bitcast %union.anon* %58 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 32, i1 false) #7
  %60 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 7
  %61 = bitcast %"class.gfx::PointF"* %3 to i64*
  %62 = bitcast %"class.gfx::PointF"* %60 to i64*
  %63 = load i64, i64* %61, align 4
  store i64 %63, i64* %62, align 8
  %64 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 8
  %65 = bitcast %"class.gfx::PointF"* %4 to i64*
  %66 = bitcast %"class.gfx::PointF"* %64 to i64*
  %67 = load i64, i64* %65, align 4
  store i64 %67, i64* %66, align 8
  %68 = getelementptr inbounds %"struct.ui::GestureEventDetails", %"struct.ui::GestureEventDetails"* %1, i64 0, i32 3
  %69 = load i8, i8* %68, align 4, !range !5
  store i8 %69, i8* %54, align 8
  %70 = getelementptr inbounds %"struct.ui::GestureEventDetails", %"struct.ui::GestureEventDetails"* %1, i64 0, i32 4
  %71 = load i32, i32* %70, align 4
  %72 = add i32 %71, -1
  %73 = icmp ult i32 %72, 4
  %74 = select i1 %73, i32 %71, i32 0
  store i32 %74, i32* %55, align 4
  store i32 %6, i32* %56, align 8
  %75 = getelementptr inbounds %"struct.ui::GestureEventDetails", %"struct.ui::GestureEventDetails"* %1, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  switch i32 %76, label %256 [
    i32 33, label %77
    i32 23, label %89
    i32 19, label %109
    i32 22, label %125
    i32 30, label %141
    i32 31, label %153
    i32 26, label %165
    i32 16, label %177
    i32 18, label %195
    i32 17, label %211
    i32 35, label %214
    i32 36, label %226
    i32 27, label %227
    i32 29, label %230
    i32 28, label %239
    i32 21, label %242
    i32 20, label %243
    i32 24, label %255
    i32 25, label %255
    i32 32, label %255
  ]

77:                                               ; preds = %7
  store i32 20, i32* %52, align 8
  %78 = getelementptr inbounds %"struct.ui::GestureEventDetails", %"struct.ui::GestureEventDetails"* %1, i64 0, i32 6, i32 1, i32 0
  %79 = load float, float* %78, align 4
  %80 = fcmp uno float %79, 0.000000e+00
  %81 = select i1 %80, float 0x47EFFFFFE0000000, float %79
  %82 = bitcast %union.anon* %58 to %struct.anon.6*
  %83 = bitcast %union.anon* %58 to float*
  store float %81, float* %83, align 8
  %84 = getelementptr inbounds %"struct.ui::GestureEventDetails", %"struct.ui::GestureEventDetails"* %1, i64 0, i32 6, i32 1, i32 1
  %85 = load float, float* %84, align 4
  %86 = fcmp uno float %85, 0.000000e+00
  %87 = select i1 %86, float 0x47EFFFFFE0000000, float %85
  %88 = getelementptr inbounds %struct.anon.6, %struct.anon.6* %82, i64 0, i32 1
  store float %87, float* %88, align 4
  br label %256

89:                                               ; preds = %7
  store i32 27, i32* %52, align 8
  %90 = getelementptr inbounds %"struct.ui::GestureEventDetails", %"struct.ui::GestureEventDetails"* %1, i64 0, i32 1
  %91 = bitcast %"union.ui::GestureEventDetails::Details"* %90 to i32*
  %92 = load i32, i32* %91, align 4
  %93 = bitcast %union.anon* %58 to %struct.anon.4*
  %94 = bitcast %union.anon* %58 to i32*
  store i32 %92, i32* %94, align 8
  %95 = getelementptr inbounds %"struct.ui::GestureEventDetails", %"struct.ui::GestureEventDetails"* %1, i64 0, i32 6, i32 1, i32 0
  %96 = load float, float* %95, align 4
  %97 = fcmp uno float %96, 0.000000e+00
  %98 = select i1 %97, float 0x47EFFFFFE0000000, float %96
  %99 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %93, i64 0, i32 1
  store float %98, float* %99, align 4
  %100 = getelementptr inbounds %"struct.ui::GestureEventDetails", %"struct.ui::GestureEventDetails"* %1, i64 0, i32 6, i32 1, i32 1
  %101 = load float, float* %100, align 4
  %102 = fcmp uno float %101, 0.000000e+00
  %103 = select i1 %102, float 0x47EFFFFFE0000000, float %101
  %104 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6, i32 0, i32 1
  store float %103, float* %104, align 8
  %105 = icmp eq i32 %13, 1
  %106 = zext i1 %105 to i8
  %107 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6, i32 0, i32 2
  %108 = bitcast float* %107 to i8*
  store i8 %106, i8* %108, align 4
  br label %256

109:                                              ; preds = %7
  store i32 21, i32* %52, align 8
  %110 = getelementptr inbounds %"struct.ui::GestureEventDetails", %"struct.ui::GestureEventDetails"* %1, i64 0, i32 1
  %111 = bitcast %"union.ui::GestureEventDetails::Details"* %110 to i32*
  %112 = load i32, i32* %111, align 4
  %113 = bitcast %union.anon* %58 to %struct.anon.4*
  %114 = bitcast %union.anon* %58 to i32*
  store i32 %112, i32* %114, align 8
  %115 = getelementptr inbounds %"struct.ui::GestureEventDetails", %"struct.ui::GestureEventDetails"* %1, i64 0, i32 6, i32 1, i32 0
  %116 = load float, float* %115, align 4
  %117 = fcmp uno float %116, 0.000000e+00
  %118 = select i1 %117, float 0x47EFFFFFE0000000, float %116
  %119 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %113, i64 0, i32 1
  store float %118, float* %119, align 4
  %120 = getelementptr inbounds %"struct.ui::GestureEventDetails", %"struct.ui::GestureEventDetails"* %1, i64 0, i32 6, i32 1, i32 1
  %121 = load float, float* %120, align 4
  %122 = fcmp uno float %121, 0.000000e+00
  %123 = select i1 %122, float 0x47EFFFFFE0000000, float %121
  %124 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6, i32 0, i32 1
  store float %123, float* %124, align 8
  br label %256

125:                                              ; preds = %7
  store i32 26, i32* %52, align 8
  %126 = getelementptr inbounds %"struct.ui::GestureEventDetails", %"struct.ui::GestureEventDetails"* %1, i64 0, i32 1
  %127 = bitcast %"union.ui::GestureEventDetails::Details"* %126 to i32*
  %128 = load i32, i32* %127, align 4
  %129 = bitcast %union.anon* %58 to %struct.anon.4*
  %130 = bitcast %union.anon* %58 to i32*
  store i32 %128, i32* %130, align 8
  %131 = getelementptr inbounds %"struct.ui::GestureEventDetails", %"struct.ui::GestureEventDetails"* %1, i64 0, i32 6, i32 1, i32 0
  %132 = load float, float* %131, align 4
  %133 = fcmp uno float %132, 0.000000e+00
  %134 = select i1 %133, float 0x47EFFFFFE0000000, float %132
  %135 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %129, i64 0, i32 1
  store float %134, float* %135, align 4
  %136 = getelementptr inbounds %"struct.ui::GestureEventDetails", %"struct.ui::GestureEventDetails"* %1, i64 0, i32 6, i32 1, i32 1
  %137 = load float, float* %136, align 4
  %138 = fcmp uno float %137, 0.000000e+00
  %139 = select i1 %138, float 0x47EFFFFFE0000000, float %137
  %140 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6, i32 0, i32 1
  store float %139, float* %140, align 8
  br label %256

141:                                              ; preds = %7
  store i32 23, i32* %52, align 8
  %142 = getelementptr inbounds %"struct.ui::GestureEventDetails", %"struct.ui::GestureEventDetails"* %1, i64 0, i32 6, i32 1, i32 0
  %143 = load float, float* %142, align 4
  %144 = fcmp uno float %143, 0.000000e+00
  %145 = select i1 %144, float 0x47EFFFFFE0000000, float %143
  %146 = bitcast %union.anon* %58 to %struct.anon.7*
  %147 = bitcast %union.anon* %58 to float*
  store float %145, float* %147, align 8
  %148 = getelementptr inbounds %"struct.ui::GestureEventDetails", %"struct.ui::GestureEventDetails"* %1, i64 0, i32 6, i32 1, i32 1
  %149 = load float, float* %148, align 4
  %150 = fcmp uno float %149, 0.000000e+00
  %151 = select i1 %150, float 0x47EFFFFFE0000000, float %149
  %152 = getelementptr inbounds %struct.anon.7, %struct.anon.7* %146, i64 0, i32 1
  store float %151, float* %152, align 4
  br label %256

153:                                              ; preds = %7
  store i32 24, i32* %52, align 8
  %154 = getelementptr inbounds %"struct.ui::GestureEventDetails", %"struct.ui::GestureEventDetails"* %1, i64 0, i32 6, i32 1, i32 0
  %155 = load float, float* %154, align 4
  %156 = fcmp uno float %155, 0.000000e+00
  %157 = select i1 %156, float 0x47EFFFFFE0000000, float %155
  %158 = bitcast %union.anon* %58 to %struct.anon.7*
  %159 = bitcast %union.anon* %58 to float*
  store float %157, float* %159, align 8
  %160 = getelementptr inbounds %"struct.ui::GestureEventDetails", %"struct.ui::GestureEventDetails"* %1, i64 0, i32 6, i32 1, i32 1
  %161 = load float, float* %160, align 4
  %162 = fcmp uno float %161, 0.000000e+00
  %163 = select i1 %162, float 0x47EFFFFFE0000000, float %161
  %164 = getelementptr inbounds %struct.anon.7, %struct.anon.7* %158, i64 0, i32 1
  store float %163, float* %164, align 4
  br label %256

165:                                              ; preds = %7
  store i32 25, i32* %52, align 8
  %166 = getelementptr inbounds %"struct.ui::GestureEventDetails", %"struct.ui::GestureEventDetails"* %1, i64 0, i32 1, i32 0, i32 0
  %167 = load float, float* %166, align 4
  %168 = fcmp uno float %167, 0.000000e+00
  %169 = select i1 %168, float 0x47EFFFFFE0000000, float %167
  %170 = bitcast %union.anon* %58 to %struct.anon.8*
  %171 = bitcast %union.anon* %58 to float*
  store float %169, float* %171, align 8
  %172 = getelementptr inbounds %"struct.ui::GestureEventDetails", %"struct.ui::GestureEventDetails"* %1, i64 0, i32 1, i32 0, i32 1
  %173 = load float, float* %172, align 4
  %174 = fcmp uno float %173, 0.000000e+00
  %175 = select i1 %174, float 0x47EFFFFFE0000000, float %173
  %176 = getelementptr inbounds %struct.anon.8, %struct.anon.8* %170, i64 0, i32 1
  store float %175, float* %176, align 4
  br label %256

177:                                              ; preds = %7
  store i32 11, i32* %52, align 8
  %178 = getelementptr inbounds %"struct.ui::GestureEventDetails", %"struct.ui::GestureEventDetails"* %1, i64 0, i32 5
  %179 = load i32, i32* %178, align 4
  %180 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6, i32 0, i32 3
  store i32 %179, i32* %180, align 8
  %181 = getelementptr inbounds %"struct.ui::GestureEventDetails", %"struct.ui::GestureEventDetails"* %1, i64 0, i32 1, i32 0, i32 0
  %182 = load float, float* %181, align 4
  %183 = fcmp uno float %182, 0.000000e+00
  %184 = select i1 %183, float 0x47EFFFFFE0000000, float %182
  %185 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6, i32 0, i32 1
  store float %184, float* %185, align 8
  %186 = getelementptr inbounds %"struct.ui::GestureEventDetails", %"struct.ui::GestureEventDetails"* %1, i64 0, i32 1, i32 0, i32 1
  %187 = load float, float* %186, align 4
  %188 = fcmp uno float %187, 0.000000e+00
  %189 = select i1 %188, float 0x47EFFFFFE0000000, float %187
  %190 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6, i32 0, i32 2
  store float %189, float* %190, align 4
  %191 = getelementptr inbounds %"struct.ui::GestureEventDetails", %"struct.ui::GestureEventDetails"* %1, i64 0, i32 1, i32 0, i32 2
  %192 = load i8, i8* %191, align 4
  %193 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6, i32 0, i32 4
  store i8 %192, i8* %193, align 4
  %194 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6, i32 0, i32 5
  store i32 1, i32* %194, align 8
  br label %256

195:                                              ; preds = %7
  store i32 13, i32* %52, align 8
  %196 = getelementptr inbounds %"struct.ui::GestureEventDetails", %"struct.ui::GestureEventDetails"* %1, i64 0, i32 1, i32 0, i32 0
  %197 = load float, float* %196, align 4
  %198 = fcmp uno float %197, 0.000000e+00
  %199 = select i1 %198, float 0x47EFFFFFE0000000, float %197
  %200 = bitcast %union.anon* %58 to %struct.anon.10*
  %201 = bitcast %union.anon* %58 to float*
  store float %199, float* %201, align 8
  %202 = getelementptr inbounds %"struct.ui::GestureEventDetails", %"struct.ui::GestureEventDetails"* %1, i64 0, i32 1, i32 0, i32 1
  %203 = load float, float* %202, align 4
  %204 = fcmp uno float %203, 0.000000e+00
  %205 = select i1 %204, float 0x47EFFFFFE0000000, float %203
  %206 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %200, i64 0, i32 1
  store float %205, float* %206, align 4
  %207 = getelementptr inbounds %"struct.ui::GestureEventDetails", %"struct.ui::GestureEventDetails"* %1, i64 0, i32 1, i32 0, i32 2
  %208 = load i8, i8* %207, align 4
  %209 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6, i32 0, i32 4
  store i8 %208, i8* %209, align 4
  %210 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6, i32 0, i32 3
  store i32 1, i32* %210, align 8
  br label %256

211:                                              ; preds = %7
  store i32 12, i32* %52, align 8
  %212 = bitcast %union.anon* %58 to %struct.anon.11*
  %213 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %212, i64 0, i32 1
  store i32 1, i32* %213, align 4
  br label %256

214:                                              ; preds = %7
  store i32 14, i32* %52, align 8
  %215 = getelementptr inbounds %"struct.ui::GestureEventDetails", %"struct.ui::GestureEventDetails"* %1, i64 0, i32 1, i32 0, i32 0
  %216 = load float, float* %215, align 4
  %217 = fcmp uno float %216, 0.000000e+00
  %218 = select i1 %217, float 0x47EFFFFFE0000000, float %216
  %219 = bitcast %union.anon* %58 to %struct.anon.12*
  %220 = bitcast %union.anon* %58 to float*
  store float %218, float* %220, align 8
  %221 = getelementptr inbounds %"struct.ui::GestureEventDetails", %"struct.ui::GestureEventDetails"* %1, i64 0, i32 1, i32 0, i32 1
  %222 = load float, float* %221, align 4
  %223 = fcmp uno float %222, 0.000000e+00
  %224 = select i1 %223, float 0x47EFFFFFE0000000, float %222
  %225 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %219, i64 0, i32 1
  store float %224, float* %225, align 4
  br label %256

226:                                              ; preds = %7
  store i32 15, i32* %52, align 8
  br label %256

227:                                              ; preds = %7
  store i32 16, i32* %52, align 8
  %228 = icmp eq i32 %13, 1
  %229 = zext i1 %228 to i8
  store i8 %229, i8* %59, align 8
  br label %256

230:                                              ; preds = %7
  store i32 18, i32* %52, align 8
  %231 = getelementptr inbounds %"struct.ui::GestureEventDetails", %"struct.ui::GestureEventDetails"* %1, i64 0, i32 1, i32 0, i32 0
  %232 = bitcast float* %231 to i32*
  %233 = load i32, i32* %232, align 4
  %234 = bitcast %union.anon* %58 to %struct.anon.14*
  %235 = getelementptr inbounds %struct.anon.14, %struct.anon.14* %234, i64 0, i32 2
  %236 = bitcast float* %235 to i32*
  store i32 %233, i32* %236, align 4
  %237 = icmp eq i32 %13, 1
  %238 = zext i1 %237 to i8
  store i8 %238, i8* %59, align 8
  br label %256

239:                                              ; preds = %7
  store i32 17, i32* %52, align 8
  %240 = icmp eq i32 %13, 1
  %241 = zext i1 %240 to i8
  store i8 %241, i8* %59, align 8
  br label %256

242:                                              ; preds = %7
  store i32 22, i32* %52, align 8
  br label %256

243:                                              ; preds = %7
  store i32 19, i32* %52, align 8
  %244 = getelementptr inbounds %"struct.ui::GestureEventDetails", %"struct.ui::GestureEventDetails"* %1, i64 0, i32 6, i32 1, i32 0
  %245 = load float, float* %244, align 4
  %246 = fcmp uno float %245, 0.000000e+00
  %247 = select i1 %246, float 0x47EFFFFFE0000000, float %245
  %248 = bitcast %union.anon* %58 to %struct.anon.5*
  %249 = bitcast %union.anon* %58 to float*
  store float %247, float* %249, align 8
  %250 = getelementptr inbounds %"struct.ui::GestureEventDetails", %"struct.ui::GestureEventDetails"* %1, i64 0, i32 6, i32 1, i32 1
  %251 = load float, float* %250, align 4
  %252 = fcmp uno float %251, 0.000000e+00
  %253 = select i1 %252, float 0x47EFFFFFE0000000, float %251
  %254 = getelementptr inbounds %struct.anon.5, %struct.anon.5* %248, i64 0, i32 1
  store float %253, float* %254, align 4
  br label %256

255:                                              ; preds = %7, %7, %7
  store i32 -1, i32* %52, align 8
  br label %256

256:                                              ; preds = %239, %230, %227, %89, %77, %109, %125, %141, %153, %165, %177, %195, %211, %214, %226, %242, %243, %255, %7
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden float @_ZN2ui16IfNanUseMaxFloatEf(float) local_unnamed_addr #2 {
  %2 = fcmp uno float %0, 0.000000e+00
  %3 = select i1 %2, float 0x47EFFFFFE0000000, float %0
  ret float %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui41CreateWebGestureEventFromGestureEventDataERKNS_16GestureEventDataE(%"class.blink::WebGestureEvent"* noalias sret, %"struct.ui::GestureEventData"* readonly dereferenceable(88)) local_unnamed_addr #3 {
  %3 = alloca %"class.gfx::PointF", align 4
  %4 = alloca %"class.gfx::PointF", align 4
  %5 = getelementptr inbounds %"struct.ui::GestureEventData", %"struct.ui::GestureEventData"* %1, i64 0, i32 0
  %6 = getelementptr inbounds %"struct.ui::GestureEventData", %"struct.ui::GestureEventData"* %1, i64 0, i32 3, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.gfx::PointF"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #7
  %9 = getelementptr inbounds %"struct.ui::GestureEventData", %"struct.ui::GestureEventData"* %1, i64 0, i32 4
  %10 = bitcast float* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"struct.ui::GestureEventData", %"struct.ui::GestureEventData"* %1, i64 0, i32 5
  %13 = bitcast float* %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = bitcast %"class.gfx::PointF"* %3 to i32*
  store i32 %11, i32* %15, align 4
  %16 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %3, i64 0, i32 1
  %17 = bitcast float* %16 to i32*
  store i32 %14, i32* %17, align 4
  %18 = bitcast %"class.gfx::PointF"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #7
  %19 = getelementptr inbounds %"struct.ui::GestureEventData", %"struct.ui::GestureEventData"* %1, i64 0, i32 6
  %20 = bitcast float* %19 to i32*
  %21 = load i32, i32* %20, align 8
  %22 = getelementptr inbounds %"struct.ui::GestureEventData", %"struct.ui::GestureEventData"* %1, i64 0, i32 7
  %23 = bitcast float* %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = bitcast %"class.gfx::PointF"* %4 to i32*
  store i32 %21, i32* %25, align 4
  %26 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %4, i64 0, i32 1
  %27 = bitcast float* %26 to i32*
  store i32 %24, i32* %27, align 4
  %28 = getelementptr inbounds %"struct.ui::GestureEventData", %"struct.ui::GestureEventData"* %1, i64 0, i32 8
  %29 = load i32, i32* %28, align 8
  %30 = getelementptr inbounds %"struct.ui::GestureEventData", %"struct.ui::GestureEventData"* %1, i64 0, i32 9
  %31 = load i32, i32* %30, align 4
  call void @_ZN2ui21CreateWebGestureEventERKNS_19GestureEventDetailsEN4base9TimeTicksERKN3gfx6PointFES8_ij(%"class.blink::WebGestureEvent"* sret %0, %"struct.ui::GestureEventDetails"* dereferenceable(48) %5, i64 %7, %"class.gfx::PointF"* nonnull dereferenceable(8) %3, %"class.gfx::PointF"* nonnull dereferenceable(8) %4, i32 %29, i32 %31)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::WebInputEvent"* @_ZN2ui18ScaleWebInputEventERKN5blink13WebInputEventEf(%"class.blink::WebInputEvent"* nocapture readonly dereferenceable(40), float) local_unnamed_addr #3 {
  %3 = alloca %"class.gfx::Vector2dF", align 4
  %4 = bitcast %"class.gfx::Vector2dF"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #7
  %5 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %3, i64 0, i32 0
  store float 0.000000e+00, float* %5, align 4
  %6 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %3, i64 0, i32 1
  store float 0.000000e+00, float* %6, align 4
  %7 = call %"class.blink::WebInputEvent"* @_ZN2ui30TranslateAndScaleWebInputEventERKN5blink13WebInputEventERKN3gfx9Vector2dFEf(%"class.blink::WebInputEvent"* dereferenceable(40) %0, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %3, float %1)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #7
  ret %"class.blink::WebInputEvent"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::WebInputEvent"* @_ZN2ui30TranslateAndScaleWebInputEventERKN5blink13WebInputEventERKN3gfx9Vector2dFEf(%"class.blink::WebInputEvent"* nocapture readonly dereferenceable(40), %"class.gfx::Vector2dF"* dereferenceable(8), float) local_unnamed_addr #0 {
  %4 = alloca <2 x float>, align 8
  %5 = bitcast <2 x float>* %4 to %"class.gfx::PointF"*
  %6 = alloca <2 x float>, align 8
  %7 = bitcast <2 x float>* %6 to %"class.gfx::PointF"*
  %8 = alloca <2 x float>, align 8
  %9 = bitcast <2 x float>* %8 to %"class.gfx::PointF"*
  %10 = alloca <2 x float>, align 8
  %11 = bitcast <2 x float>* %10 to %"class.gfx::PointF"*
  %12 = fcmp oeq float %2, 1.000000e+00
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = tail call zeroext i1 @_ZNK3gfx9Vector2dF6IsZeroEv(%"class.gfx::Vector2dF"* %1) #7
  br i1 %14, label %236, label %15

15:                                               ; preds = %13, %3
  %16 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %0, i64 0, i32 4
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 6
  br i1 %18, label %19, label %56

19:                                               ; preds = %15
  %20 = tail call i8* @_Znwm(i64 160) #8
  %21 = bitcast i8* %20 to i32 (...)***
  %22 = getelementptr inbounds i8, i8* %20, i64 8
  %23 = getelementptr inbounds i8, i8* %20, i64 40
  %24 = getelementptr inbounds i8, i8* %20, i64 84
  %25 = getelementptr inbounds i8, i8* %20, i64 100
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink18WebMouseWheelEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %26 = getelementptr inbounds i8, i8* %20, i64 108
  %27 = getelementptr inbounds i8, i8* %20, i64 153
  %28 = ptrtoint i8* %20 to i64
  %29 = bitcast %"class.blink::WebInputEvent"* %0 to %"class.blink::WebMouseWheelEvent"*
  %30 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %0, i64 0, i32 1
  %31 = bitcast float* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %31, i64 32, i1 false) #7
  %32 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %0, i64 1
  %33 = bitcast %"class.blink::WebInputEvent"* %32 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %33, i64 60, i1 false) #7
  %34 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %29, i64 0, i32 0, i32 2
  %35 = bitcast i32* %34 to i64*
  %36 = bitcast i8* %25 to i64*
  %37 = load i64, i64* %35, align 4
  store i64 %37, i64* %36, align 4
  %38 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %29, i64 0, i32 1
  %39 = bitcast float* %38 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %26, i8* align 4 %39, i64 46, i1 false) #7
  %40 = bitcast <2 x float>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #7
  %41 = bitcast i8* %24 to <2 x float>*
  %42 = load <2 x float>, <2 x float>* %41, align 4
  %43 = bitcast %"class.gfx::Vector2dF"* %1 to <2 x float>*
  %44 = load <2 x float>, <2 x float>* %43, align 4
  %45 = fadd <2 x float> %44, %42
  store <2 x float> %45, <2 x float>* %4, align 8
  %46 = call <2 x float> @_ZN3gfx10ScalePointERKNS_6PointFEff(%"class.gfx::PointF"* nonnull dereferenceable(8) %5, float %2, float %2) #7
  store <2 x float> %46, <2 x float>* %41, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #7
  %47 = load i8, i8* %27, align 1
  %48 = icmp eq i8 %47, 3
  br i1 %48, label %236, label %49

49:                                               ; preds = %19
  %50 = bitcast i8* %26 to <4 x float>*
  %51 = load <4 x float>, <4 x float>* %50, align 4
  %52 = insertelement <4 x float> undef, float %2, i32 0
  %53 = shufflevector <4 x float> %52, <4 x float> undef, <4 x i32> zeroinitializer
  %54 = fmul <4 x float> %51, %53
  %55 = bitcast i8* %26 to <4 x float>*
  store <4 x float> %54, <4 x float>* %55, align 4
  br label %236

56:                                               ; preds = %15
  %57 = icmp ult i32 %17, 6
  br i1 %57, label %58, label %98

58:                                               ; preds = %56
  %59 = tail call i8* @_Znwm(i64 112) #8
  %60 = bitcast i8* %59 to i32 (...)***
  %61 = getelementptr inbounds i8, i8* %59, i64 8
  %62 = getelementptr inbounds i8, i8* %59, i64 40
  %63 = getelementptr inbounds i8, i8* %59, i64 84
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink13WebMouseEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %60, align 8
  %64 = getelementptr inbounds i8, i8* %59, i64 100
  %65 = ptrtoint i8* %59 to i64
  %66 = bitcast %"class.blink::WebInputEvent"* %0 to %"class.blink::WebMouseEvent"*
  %67 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %0, i64 0, i32 1
  %68 = bitcast float* %67 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %68, i64 32, i1 false) #7
  %69 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %0, i64 1
  %70 = bitcast %"class.blink::WebInputEvent"* %69 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* align 8 %70, i64 60, i1 false) #7
  %71 = getelementptr inbounds %"class.blink::WebMouseEvent", %"class.blink::WebMouseEvent"* %66, i64 0, i32 2
  %72 = bitcast i32* %71 to i64*
  %73 = bitcast i8* %64 to i64*
  %74 = load i64, i64* %72, align 4
  store i64 %74, i64* %73, align 4
  %75 = bitcast <2 x float>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #7
  %76 = bitcast i8* %63 to <2 x float>*
  %77 = load <2 x float>, <2 x float>* %76, align 4
  %78 = bitcast %"class.gfx::Vector2dF"* %1 to <2 x float>*
  %79 = load <2 x float>, <2 x float>* %78, align 4
  %80 = fadd <2 x float> %79, %77
  store <2 x float> %80, <2 x float>* %6, align 8
  %81 = call <2 x float> @_ZN3gfx10ScalePointERKNS_6PointFEff(%"class.gfx::PointF"* nonnull dereferenceable(8) %7, float %2, float %2) #7
  store <2 x float> %81, <2 x float>* %76, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #7
  %82 = getelementptr inbounds i8, i8* %59, i64 80
  %83 = load i8, i8* %82, align 8, !range !5
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %85, label %236

85:                                               ; preds = %58
  %86 = getelementptr inbounds i8, i8* %59, i64 72
  %87 = bitcast i8* %86 to i32*
  %88 = load i32, i32* %87, align 8
  %89 = sitofp i32 %88 to float
  %90 = fmul float %89, %2
  %91 = fptosi float %90 to i32
  store i32 %91, i32* %87, align 8
  %92 = getelementptr inbounds i8, i8* %59, i64 76
  %93 = bitcast i8* %92 to i32*
  %94 = load i32, i32* %93, align 4
  %95 = sitofp i32 %94 to float
  %96 = fmul float %95, %2
  %97 = fptosi float %96 to i32
  store i32 %97, i32* %93, align 4
  br label %236

98:                                               ; preds = %56
  %99 = add i32 %17, -28
  %100 = icmp ult i32 %99, 5
  br i1 %100, label %101, label %137

101:                                              ; preds = %98
  %102 = tail call i8* @_Znwm(i64 1272) #8
  %103 = bitcast i8* %102 to %"class.blink::WebTouchEvent"*
  tail call void @_ZN5blink13WebTouchEventC2Ev(%"class.blink::WebTouchEvent"* nonnull %103)
  %104 = ptrtoint i8* %102 to i64
  %105 = getelementptr inbounds i8, i8* %102, i64 8
  %106 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %0, i64 0, i32 1
  %107 = bitcast float* %106 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* align 8 %107, i64 32, i1 false) #7
  %108 = getelementptr inbounds i8, i8* %102, i64 40
  %109 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %0, i64 1
  %110 = bitcast %"class.blink::WebInputEvent"* %109 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %108, i8* align 8 %110, i64 1232, i1 false) #7
  %111 = bitcast i8* %108 to i32*
  %112 = load i32, i32* %111, align 8
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %236, label %114

114:                                              ; preds = %101
  %115 = getelementptr inbounds i8, i8* %102, i64 44
  %116 = bitcast i8* %115 to [16 x %"class.blink::WebTouchPoint"]*
  %117 = bitcast <2 x float>* %8 to i8*
  %118 = bitcast %"class.gfx::Vector2dF"* %1 to <2 x float>*
  br label %119

119:                                              ; preds = %114, %119
  %120 = phi i64 [ 0, %114 ], [ %133, %119 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %117) #7
  %121 = getelementptr inbounds [16 x %"class.blink::WebTouchPoint"], [16 x %"class.blink::WebTouchPoint"]* %116, i64 0, i64 %120, i32 0, i32 11
  %122 = bitcast %"class.gfx::PointF"* %121 to <2 x float>*
  %123 = load <2 x float>, <2 x float>* %122, align 4
  %124 = load <2 x float>, <2 x float>* %118, align 4
  %125 = fadd <2 x float> %124, %123
  store <2 x float> %125, <2 x float>* %8, align 8
  %126 = call <2 x float> @_ZN3gfx10ScalePointERKNS_6PointFEff(%"class.gfx::PointF"* nonnull dereferenceable(8) %9, float %2, float %2) #7
  store <2 x float> %126, <2 x float>* %122, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %117) #7
  %127 = getelementptr inbounds [16 x %"class.blink::WebTouchPoint"], [16 x %"class.blink::WebTouchPoint"]* %116, i64 0, i64 %120, i32 2
  %128 = load float, float* %127, align 4
  %129 = fmul float %128, %2
  store float %129, float* %127, align 4
  %130 = getelementptr inbounds [16 x %"class.blink::WebTouchPoint"], [16 x %"class.blink::WebTouchPoint"]* %116, i64 0, i64 %120, i32 3
  %131 = load float, float* %130, align 4
  %132 = fmul float %131, %2
  store float %132, float* %130, align 4
  %133 = add nuw nsw i64 %120, 1
  %134 = load i32, i32* %111, align 8
  %135 = zext i32 %134 to i64
  %136 = icmp ult i64 %133, %135
  br i1 %136, label %119, label %236

137:                                              ; preds = %98
  %138 = add i32 %17, -11
  %139 = icmp ult i32 %138, 17
  br i1 %139, label %140, label %236

140:                                              ; preds = %137
  %141 = tail call i8* @_Znwm(i64 112) #8
  %142 = bitcast i8* %141 to i32 (...)***
  %143 = getelementptr inbounds i8, i8* %141, i64 8
  %144 = getelementptr inbounds i8, i8* %141, i64 32
  %145 = bitcast i8* %144 to i32*
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink15WebGestureEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %142, align 8
  %146 = getelementptr inbounds i8, i8* %141, i64 40
  %147 = getelementptr inbounds i8, i8* %141, i64 56
  %148 = ptrtoint i8* %141 to i64
  %149 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %0, i64 0, i32 1
  %150 = bitcast float* %149 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %143, i8* align 8 %150, i64 32, i1 false) #7
  %151 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %0, i64 1
  %152 = bitcast %"class.blink::WebInputEvent"* %151 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %146, i8* align 8 %152, i64 68, i1 false) #7
  %153 = bitcast <2 x float>* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %153) #7
  %154 = getelementptr inbounds i8, i8* %141, i64 88
  %155 = bitcast i8* %154 to <2 x float>*
  %156 = load <2 x float>, <2 x float>* %155, align 4
  %157 = bitcast %"class.gfx::Vector2dF"* %1 to <2 x float>*
  %158 = load <2 x float>, <2 x float>* %157, align 4
  %159 = fadd <2 x float> %158, %156
  store <2 x float> %159, <2 x float>* %10, align 8
  %160 = call <2 x float> @_ZN3gfx10ScalePointERKNS_6PointFEff(%"class.gfx::PointF"* nonnull dereferenceable(8) %11, float %2, float %2) #7
  store <2 x float> %160, <2 x float>* %155, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %153) #7
  %161 = load i32, i32* %145, align 8
  switch i32 %161, label %236 [
    i32 13, label %162
    i32 11, label %174
    i32 14, label %228
    i32 27, label %187
    i32 21, label %187
    i32 26, label %187
    i32 19, label %196
    i32 20, label %204
    i32 23, label %212
    i32 24, label %212
    i32 25, label %220
  ]

162:                                              ; preds = %140
  %163 = getelementptr inbounds i8, i8* %141, i64 76
  %164 = load i8, i8* %163, align 4
  %165 = icmp ult i8 %164, 2
  br i1 %165, label %166, label %236

166:                                              ; preds = %162
  %167 = bitcast i8* %147 to float*
  %168 = load float, float* %167, align 8
  %169 = fmul float %168, %2
  store float %169, float* %167, align 8
  %170 = getelementptr inbounds i8, i8* %141, i64 60
  %171 = bitcast i8* %170 to float*
  %172 = load float, float* %171, align 4
  %173 = fmul float %172, %2
  store float %173, float* %171, align 4
  br label %236

174:                                              ; preds = %140
  %175 = getelementptr inbounds i8, i8* %141, i64 76
  %176 = load i8, i8* %175, align 4
  %177 = icmp ult i8 %176, 2
  br i1 %177, label %178, label %236

178:                                              ; preds = %174
  %179 = getelementptr inbounds i8, i8* %141, i64 64
  %180 = bitcast i8* %179 to float*
  %181 = load float, float* %180, align 8
  %182 = fmul float %181, %2
  store float %182, float* %180, align 8
  %183 = getelementptr inbounds i8, i8* %141, i64 68
  %184 = bitcast i8* %183 to float*
  %185 = load float, float* %184, align 4
  %186 = fmul float %185, %2
  store float %186, float* %184, align 4
  br label %236

187:                                              ; preds = %140, %140, %140
  %188 = getelementptr inbounds i8, i8* %141, i64 60
  %189 = bitcast i8* %188 to float*
  %190 = load float, float* %189, align 4
  %191 = fmul float %190, %2
  store float %191, float* %189, align 4
  %192 = getelementptr inbounds i8, i8* %141, i64 64
  %193 = bitcast i8* %192 to float*
  %194 = load float, float* %193, align 8
  %195 = fmul float %194, %2
  store float %195, float* %193, align 8
  br label %236

196:                                              ; preds = %140
  %197 = bitcast i8* %147 to float*
  %198 = load float, float* %197, align 8
  %199 = fmul float %198, %2
  store float %199, float* %197, align 8
  %200 = getelementptr inbounds i8, i8* %141, i64 60
  %201 = bitcast i8* %200 to float*
  %202 = load float, float* %201, align 4
  %203 = fmul float %202, %2
  store float %203, float* %201, align 4
  br label %236

204:                                              ; preds = %140
  %205 = bitcast i8* %147 to float*
  %206 = load float, float* %205, align 8
  %207 = fmul float %206, %2
  store float %207, float* %205, align 8
  %208 = getelementptr inbounds i8, i8* %141, i64 60
  %209 = bitcast i8* %208 to float*
  %210 = load float, float* %209, align 4
  %211 = fmul float %210, %2
  store float %211, float* %209, align 4
  br label %236

212:                                              ; preds = %140, %140
  %213 = bitcast i8* %147 to float*
  %214 = load float, float* %213, align 8
  %215 = fmul float %214, %2
  store float %215, float* %213, align 8
  %216 = getelementptr inbounds i8, i8* %141, i64 60
  %217 = bitcast i8* %216 to float*
  %218 = load float, float* %217, align 4
  %219 = fmul float %218, %2
  store float %219, float* %217, align 4
  br label %236

220:                                              ; preds = %140
  %221 = bitcast i8* %147 to float*
  %222 = load float, float* %221, align 8
  %223 = fmul float %222, %2
  store float %223, float* %221, align 8
  %224 = getelementptr inbounds i8, i8* %141, i64 60
  %225 = bitcast i8* %224 to float*
  %226 = load float, float* %225, align 4
  %227 = fmul float %226, %2
  store float %227, float* %225, align 4
  br label %236

228:                                              ; preds = %140
  %229 = bitcast i8* %147 to float*
  %230 = load float, float* %229, align 8
  %231 = fmul float %230, %2
  store float %231, float* %229, align 8
  %232 = getelementptr inbounds i8, i8* %141, i64 60
  %233 = bitcast i8* %232 to float*
  %234 = load float, float* %233, align 4
  %235 = fmul float %234, %2
  store float %235, float* %233, align 4
  br label %236

236:                                              ; preds = %119, %101, %174, %162, %13, %187, %196, %204, %212, %220, %228, %166, %178, %140, %85, %58, %49, %19, %137
  %237 = phi i64 [ 0, %13 ], [ %28, %19 ], [ %28, %49 ], [ %65, %85 ], [ %65, %58 ], [ %148, %140 ], [ %148, %220 ], [ %148, %212 ], [ %148, %204 ], [ %148, %196 ], [ %148, %187 ], [ %148, %228 ], [ %148, %178 ], [ %148, %174 ], [ %148, %166 ], [ %148, %162 ], [ 0, %137 ], [ %104, %101 ], [ %104, %119 ]
  %238 = inttoptr i64 %237 to %"class.blink::WebInputEvent"*
  ret %"class.blink::WebInputEvent"* %238
}

declare zeroext i1 @_ZNK3gfx9Vector2dF6IsZeroEv(%"class.gfx::Vector2dF"*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13WebTouchEventC2Ev(%"class.blink::WebTouchEvent"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 0, i32 1
  store float 1.000000e+00, float* %3, align 8
  %4 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 0, i32 2, i32 0
  store float 0.000000e+00, float* %4, align 4
  %5 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 0, i32 2, i32 1
  store float 0.000000e+00, float* %5, align 4
  %6 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 0, i32 4
  store i64 0, i64* %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink13WebTouchEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %8 = bitcast i32* %7 to <4 x i32>*
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, <4 x i32>* %8, align 8
  %9 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 0, i32 0, i32 1
  store float 0x7FF8000000000000, float* %9, align 4
  %10 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 0, i32 0, i32 2
  %11 = bitcast i32* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %11, i8 0, i64 16, i1 false) #7
  %12 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 0, i32 0, i32 6
  store i32 -1, i32* %12, align 4
  %13 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 0, i32 0, i32 7
  %14 = bitcast i32* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %14, i8 0, i64 13, i1 false) #7
  %15 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 0, i32 0, i32 11
  %16 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 1, i32 0, i32 1
  %17 = bitcast %"class.gfx::PointF"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %16, align 4
  %18 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 1, i32 0, i32 2
  %19 = bitcast i32* %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %19, i8 0, i64 16, i1 false) #7
  %20 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 1, i32 0, i32 6
  store i32 -1, i32* %20, align 4
  %21 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 1, i32 0, i32 7
  %22 = bitcast i32* %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %22, i8 0, i64 13, i1 false) #7
  %23 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 1, i32 0, i32 11
  %24 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 2, i32 0, i32 1
  %25 = bitcast %"class.gfx::PointF"* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %25, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %24, align 4
  %26 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 2, i32 0, i32 2
  %27 = bitcast i32* %26 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %27, i8 0, i64 16, i1 false) #7
  %28 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 2, i32 0, i32 6
  store i32 -1, i32* %28, align 4
  %29 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 2, i32 0, i32 7
  %30 = bitcast i32* %29 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %30, i8 0, i64 13, i1 false) #7
  %31 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 2, i32 0, i32 11
  %32 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 3, i32 0, i32 1
  %33 = bitcast %"class.gfx::PointF"* %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %33, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %32, align 4
  %34 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 3, i32 0, i32 2
  %35 = bitcast i32* %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 16, i1 false) #7
  %36 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 3, i32 0, i32 6
  store i32 -1, i32* %36, align 4
  %37 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 3, i32 0, i32 7
  %38 = bitcast i32* %37 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %38, i8 0, i64 13, i1 false) #7
  %39 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 3, i32 0, i32 11
  %40 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 4, i32 0, i32 1
  %41 = bitcast %"class.gfx::PointF"* %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %41, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %40, align 4
  %42 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 4, i32 0, i32 2
  %43 = bitcast i32* %42 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %43, i8 0, i64 16, i1 false) #7
  %44 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 4, i32 0, i32 6
  store i32 -1, i32* %44, align 4
  %45 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 4, i32 0, i32 7
  %46 = bitcast i32* %45 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %46, i8 0, i64 13, i1 false) #7
  %47 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 4, i32 0, i32 11
  %48 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 5, i32 0, i32 1
  %49 = bitcast %"class.gfx::PointF"* %47 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %49, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %48, align 4
  %50 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 5, i32 0, i32 2
  %51 = bitcast i32* %50 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %51, i8 0, i64 16, i1 false) #7
  %52 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 5, i32 0, i32 6
  store i32 -1, i32* %52, align 4
  %53 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 5, i32 0, i32 7
  %54 = bitcast i32* %53 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %54, i8 0, i64 13, i1 false) #7
  %55 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 5, i32 0, i32 11
  %56 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 6, i32 0, i32 1
  %57 = bitcast %"class.gfx::PointF"* %55 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %57, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %56, align 4
  %58 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 6, i32 0, i32 2
  %59 = bitcast i32* %58 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %59, i8 0, i64 16, i1 false) #7
  %60 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 6, i32 0, i32 6
  store i32 -1, i32* %60, align 4
  %61 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 6, i32 0, i32 7
  %62 = bitcast i32* %61 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %62, i8 0, i64 13, i1 false) #7
  %63 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 6, i32 0, i32 11
  %64 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 7, i32 0, i32 1
  %65 = bitcast %"class.gfx::PointF"* %63 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %65, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %64, align 4
  %66 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 7, i32 0, i32 2
  %67 = bitcast i32* %66 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %67, i8 0, i64 16, i1 false) #7
  %68 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 7, i32 0, i32 6
  store i32 -1, i32* %68, align 4
  %69 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 7, i32 0, i32 7
  %70 = bitcast i32* %69 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %70, i8 0, i64 13, i1 false) #7
  %71 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 7, i32 0, i32 11
  %72 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 8, i32 0, i32 1
  %73 = bitcast %"class.gfx::PointF"* %71 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %73, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %72, align 4
  %74 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 8, i32 0, i32 2
  %75 = bitcast i32* %74 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %75, i8 0, i64 16, i1 false) #7
  %76 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 8, i32 0, i32 6
  store i32 -1, i32* %76, align 4
  %77 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 8, i32 0, i32 7
  %78 = bitcast i32* %77 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %78, i8 0, i64 13, i1 false) #7
  %79 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 8, i32 0, i32 11
  %80 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 9, i32 0, i32 1
  %81 = bitcast %"class.gfx::PointF"* %79 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %81, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %80, align 4
  %82 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 9, i32 0, i32 2
  %83 = bitcast i32* %82 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %83, i8 0, i64 16, i1 false) #7
  %84 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 9, i32 0, i32 6
  store i32 -1, i32* %84, align 4
  %85 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 9, i32 0, i32 7
  %86 = bitcast i32* %85 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %86, i8 0, i64 13, i1 false) #7
  %87 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 9, i32 0, i32 11
  %88 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 10, i32 0, i32 1
  %89 = bitcast %"class.gfx::PointF"* %87 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %89, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %88, align 4
  %90 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 10, i32 0, i32 2
  %91 = bitcast i32* %90 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %91, i8 0, i64 16, i1 false) #7
  %92 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 10, i32 0, i32 6
  store i32 -1, i32* %92, align 4
  %93 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 10, i32 0, i32 7
  %94 = bitcast i32* %93 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %94, i8 0, i64 13, i1 false) #7
  %95 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 10, i32 0, i32 11
  %96 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 11, i32 0, i32 1
  %97 = bitcast %"class.gfx::PointF"* %95 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %97, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %96, align 4
  %98 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 11, i32 0, i32 2
  %99 = bitcast i32* %98 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %99, i8 0, i64 16, i1 false) #7
  %100 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 11, i32 0, i32 6
  store i32 -1, i32* %100, align 4
  %101 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 11, i32 0, i32 7
  %102 = bitcast i32* %101 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %102, i8 0, i64 13, i1 false) #7
  %103 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 11, i32 0, i32 11
  %104 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 12, i32 0, i32 1
  %105 = bitcast %"class.gfx::PointF"* %103 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %105, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %104, align 4
  %106 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 12, i32 0, i32 2
  %107 = bitcast i32* %106 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %107, i8 0, i64 16, i1 false) #7
  %108 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 12, i32 0, i32 6
  store i32 -1, i32* %108, align 4
  %109 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 12, i32 0, i32 7
  %110 = bitcast i32* %109 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %110, i8 0, i64 13, i1 false) #7
  %111 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 12, i32 0, i32 11
  %112 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 13, i32 0, i32 1
  %113 = bitcast %"class.gfx::PointF"* %111 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %113, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %112, align 4
  %114 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 13, i32 0, i32 2
  %115 = bitcast i32* %114 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %115, i8 0, i64 16, i1 false) #7
  %116 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 13, i32 0, i32 6
  store i32 -1, i32* %116, align 4
  %117 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 13, i32 0, i32 7
  %118 = bitcast i32* %117 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %118, i8 0, i64 13, i1 false) #7
  %119 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 13, i32 0, i32 11
  %120 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 14, i32 0, i32 1
  %121 = bitcast %"class.gfx::PointF"* %119 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %121, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %120, align 4
  %122 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 14, i32 0, i32 2
  %123 = bitcast i32* %122 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %123, i8 0, i64 16, i1 false) #7
  %124 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 14, i32 0, i32 6
  store i32 -1, i32* %124, align 4
  %125 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 14, i32 0, i32 7
  %126 = bitcast i32* %125 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %126, i8 0, i64 13, i1 false) #7
  %127 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 14, i32 0, i32 11
  %128 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 15, i32 0, i32 1
  %129 = bitcast %"class.gfx::PointF"* %127 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %129, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %128, align 4
  %130 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 15, i32 0, i32 2
  %131 = bitcast i32* %130 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %131, i8 0, i64 16, i1 false) #7
  %132 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 15, i32 0, i32 6
  store i32 -1, i32* %132, align 4
  %133 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 15, i32 0, i32 7
  %134 = bitcast i32* %133 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %134, i8 0, i64 13, i1 false) #7
  %135 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 15, i32 0, i32 11
  %136 = bitcast %"class.gfx::PointF"* %135 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %136, i8 0, i64 32, i1 false) #7
  %137 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 3
  %138 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 7
  store i32 0, i32* %138, align 4
  %139 = bitcast i32* %137 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %139, i8 0, i64 7, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2ui19ToWebMouseEventTypeENS_11MotionEvent6ActionE(i32) local_unnamed_addr #2 {
  %2 = add i32 %0, -1
  %3 = icmp ult i32 %2, 11
  br i1 %3, label %4, label %8

4:                                                ; preds = %1
  %5 = sext i32 %2 to i64
  %6 = getelementptr inbounds [11 x i32], [11 x i32]* @switch.table._ZN2ui19ToWebMouseEventTypeENS_11MotionEvent6ActionE, i64 0, i64 %5
  %7 = load i32, i32* %6, align 4
  ret i32 %7

8:                                                ; preds = %1
  ret i32 -1
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2ui42SetWebPointerPropertiesFromMotionEventDataERN5blink20WebPointerPropertiesEiffffffiNS_11MotionEvent8ToolTypeE(%"class.blink::WebPointerProperties"* nocapture dereferenceable(60), i32, float, float, float, float, float, float, i32, i32) local_unnamed_addr #6 {
  %11 = getelementptr inbounds %"class.blink::WebPointerProperties", %"class.blink::WebPointerProperties"* %0, i64 0, i32 0
  store i32 %1, i32* %11, align 4
  %12 = getelementptr inbounds %"class.blink::WebPointerProperties", %"class.blink::WebPointerProperties"* %0, i64 0, i32 1
  store float %2, float* %12, align 4
  %13 = icmp eq i32 %9, 2
  br i1 %13, label %14, label %18

14:                                               ; preds = %10
  %15 = fptosi float %4 to i32
  %16 = fptosi float %5 to i32
  %17 = fptosi float %6 to i32
  br label %18

18:                                               ; preds = %10, %14
  %19 = phi i32 [ %16, %14 ], [ 0, %10 ]
  %20 = phi i32 [ %15, %14 ], [ 0, %10 ]
  %21 = phi i32 [ %17, %14 ], [ 0, %10 ]
  %22 = phi float [ %7, %14 ], [ 0.000000e+00, %10 ]
  %23 = getelementptr inbounds %"class.blink::WebPointerProperties", %"class.blink::WebPointerProperties"* %0, i64 0, i32 3
  store i32 %19, i32* %23, align 4
  %24 = getelementptr inbounds %"class.blink::WebPointerProperties", %"class.blink::WebPointerProperties"* %0, i64 0, i32 2
  store i32 %20, i32* %24, align 4
  %25 = getelementptr inbounds %"class.blink::WebPointerProperties", %"class.blink::WebPointerProperties"* %0, i64 0, i32 5
  store i32 %21, i32* %25, align 4
  %26 = getelementptr inbounds %"class.blink::WebPointerProperties", %"class.blink::WebPointerProperties"* %0, i64 0, i32 4
  store float %22, float* %26, align 4
  %27 = and i32 %8, 1
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %48

29:                                               ; preds = %18
  %30 = and i32 %8, 2
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %48

32:                                               ; preds = %29
  %33 = and i32 %8, 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %48

35:                                               ; preds = %32
  %36 = and i32 %8, 8
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %48

38:                                               ; preds = %35
  %39 = and i32 %8, 16
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %48

41:                                               ; preds = %38
  %42 = and i32 %8, 32
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %48

44:                                               ; preds = %41
  %45 = and i32 %8, 64
  %46 = icmp eq i32 %45, 0
  %47 = select i1 %46, i32 -1, i32 2
  br label %48

48:                                               ; preds = %18, %29, %32, %35, %38, %41, %44
  %49 = phi i32 [ 0, %18 ], [ 2, %29 ], [ 1, %32 ], [ 3, %35 ], [ 4, %38 ], [ 0, %41 ], [ %47, %44 ]
  %50 = getelementptr inbounds %"class.blink::WebPointerProperties", %"class.blink::WebPointerProperties"* %0, i64 0, i32 6
  store i32 %49, i32* %50, align 4
  %51 = add i32 %9, -1
  %52 = icmp ult i32 %51, 4
  br i1 %52, label %53, label %57

53:                                               ; preds = %48
  %54 = sext i32 %51 to i64
  %55 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._ZN2ui42SetWebPointerPropertiesFromMotionEventDataERN5blink20WebPointerPropertiesEiffffffiNS_11MotionEvent8ToolTypeE, i64 0, i64 %54
  %56 = load i32, i32* %55, align 4
  br label %57

57:                                               ; preds = %53, %48
  %58 = phi i32 [ 0, %48 ], [ %56, %53 ]
  %59 = getelementptr inbounds %"class.blink::WebPointerProperties", %"class.blink::WebPointerProperties"* %0, i64 0, i32 7
  store i32 %58, i32* %59, align 4
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2ui29WebEventModifiersToEventFlagsEi(i32) local_unnamed_addr #2 {
  %2 = shl i32 %0, 1
  %3 = and i32 %2, 14
  %4 = lshr i32 %0, 10
  %5 = and i32 %4, 32
  %6 = or i32 %3, %5
  %7 = and i32 %2, 16
  %8 = or i32 %6, %7
  %9 = lshr i32 %0, 1
  %10 = and i32 %9, 256
  %11 = or i32 %8, %10
  %12 = lshr i32 %0, 3
  %13 = and i32 %12, 128
  %14 = or i32 %11, %13
  %15 = lshr i32 %0, 9
  %16 = and i32 %15, 512
  %17 = or i32 %14, %16
  %18 = shl i32 %0, 4
  %19 = and i32 %18, 1024
  %20 = or i32 %17, %19
  %21 = and i32 %18, 2048
  %22 = or i32 %20, %21
  %23 = and i32 %18, 4096
  %24 = or i32 %22, %23
  %25 = lshr i32 %0, 7
  %26 = and i32 %25, 8192
  %27 = or i32 %24, %26
  %28 = and i32 %25, 16384
  %29 = or i32 %27, %28
  %30 = shl i32 %0, 11
  %31 = and i32 %30, 65536
  %32 = or i32 %29, %31
  ret i32 %32
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2ui31DomCodeToWebInputEventModifiersENS_7DomCodeE(i32) local_unnamed_addr #3 {
  %2 = tail call i32 @_ZN2ui16KeycodeConverter17DomCodeToLocationENS_7DomCodeE(i32 %0) #7
  %3 = add i32 %2, -1
  %4 = icmp ult i32 %3, 3
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = sext i32 %3 to i64
  %7 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN2ui31DomCodeToWebInputEventModifiersENS_7DomCodeE, i64 0, i64 %6
  %8 = load i32, i32* %7, align 4
  ret i32 %8

9:                                                ; preds = %1
  ret i32 0
}

declare i32 @_ZN2ui16KeycodeConverter17DomCodeToLocationENS_7DomCodeE(i32) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2ui24IsContinuousGestureEventEN5blink5mojom9EventTypeE(i32) local_unnamed_addr #2 {
  switch i32 %0, label %2 [
    i32 13, label %3
    i32 18, label %3
  ]

2:                                                ; preds = %1
  br label %3

3:                                                ; preds = %1, %1, %2
  %4 = phi i1 [ false, %2 ], [ true, %1 ], [ true, %1 ]
  ret i1 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2ui32WebPointerTypeToEventPointerTypeENS_16EventPointerTypeE(i32) local_unnamed_addr #2 {
  %2 = icmp ult i32 %0, 5
  %3 = select i1 %2, i32 %0, i32 0
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui27ScrollBeginFromScrollUpdateERKN5blink15WebGestureEventE(%"class.blink::WebGestureEvent"* noalias nocapture sret, %"class.blink::WebGestureEvent"* nocapture readonly dereferenceable(112)) local_unnamed_addr #3 {
  %3 = bitcast %"class.blink::WebGestureEvent"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 bitcast (<{ { i32 (...)**, float, %"class.gfx::Vector2dF", [4 x i8], %"class.base::TimeTicks", i32, i32 }, i8, [3 x i8], i32, i32, [4 x i8], { { i64, float, float, i32, i8, [3 x i8], i32, i8, i8, i8, i8 } }, %"class.gfx::PointF", %"class.gfx::PointF", i32, [4 x i8] }>* @__const._ZN2ui27ScrollBeginFromScrollUpdateERKN5blink15WebGestureEventE.scroll_begin to i8*), i64 112, i1 false)
  %4 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %1, i64 0, i32 0, i32 1
  %7 = bitcast float* %5 to i8*
  %8 = bitcast float* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 32, i1 false) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink15WebGestureEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %9 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %1, i64 0, i32 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 68, i1 false) #7
  %11 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 0, i32 4
  store i32 11, i32* %11, align 8
  %12 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %1, i64 0, i32 6
  %13 = bitcast %union.anon* %12 to %struct.anon.10*
  %14 = bitcast %union.anon* %12 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6, i32 0, i32 1
  %17 = bitcast float* %16 to i32*
  store i32 %15, i32* %17, align 8
  %18 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %13, i64 0, i32 1
  %19 = bitcast float* %18 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6, i32 0, i32 2
  %22 = bitcast float* %21 to i32*
  store i32 %20, i32* %22, align 4
  %23 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %1, i64 0, i32 6, i32 0, i32 4
  %24 = load i8, i8* %23, align 4
  %25 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6, i32 0, i32 4
  store i8 %24, i8* %25, align 4
  %26 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6, i32 0, i32 6
  store i8 0, i8* %26, align 4
  %27 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %1, i64 0, i32 6, i32 0, i32 3
  %28 = load i32, i32* %27, align 8
  %29 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6, i32 0, i32 5
  store i32 %28, i32* %29, align 8
  %30 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6, i32 0, i32 7
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6, i32 0, i32 3
  store i32 0, i32* %31, align 8
  %32 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6, i32 0, i32 0
  store i64 0, i64* %32, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare <2 x float> @_ZN3gfx10ScalePointERKNS_6PointFEff(%"class.gfx::PointF"* dereferenceable(8), float, float) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN2ui12_GLOBAL__N_119CreateWebTouchPointERKNS_11MotionEventEm: argument 0"}
!4 = distinct !{!4, !"_ZN2ui12_GLOBAL__N_119CreateWebTouchPointERKNS_11MotionEventEm"}
!5 = !{i8 0, i8 2}
