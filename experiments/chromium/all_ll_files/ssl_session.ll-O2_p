; ModuleID = '../../third_party/boringssl/src/ssl/ssl_session.cc'
source_filename = "../../third_party/boringssl/src/ssl/ssl_session.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.CRYPTO_EX_DATA_CLASS = type { %struct.CRYPTO_STATIC_MUTEX, %struct.stack_st_CRYPTO_EX_DATA_FUNCS*, i8 }
%struct.CRYPTO_STATIC_MUTEX = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%struct.stack_st_CRYPTO_EX_DATA_FUNCS = type opaque
%struct.ssl_session_st = type { i32, i16, i16, i16, i32, [48 x i8], i32, [32 x i8], i8, [32 x i8], %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.4", %"struct.bssl::SSL_X509_METHOD"*, %struct.x509_st*, %struct.stack_st_X509*, %struct.stack_st_X509*, i64, i32, i32, i64, %struct.ssl_cipher_st*, %struct.crypto_ex_data_st, %struct.ssl_session_st*, %struct.ssl_session_st*, %"class.bssl::Array.40", %"class.std::__1::unique_ptr.15", %"class.std::__1::unique_ptr.15", [32 x i8], [64 x i8], i8, i32, i32, i32, %"class.bssl::Array.40", %"class.bssl::Array.40", %"class.bssl::Array.40", i8, %"class.bssl::Array.40" }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i8* }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %struct.stack_st_CRYPTO_BUFFER* }
%struct.stack_st_CRYPTO_BUFFER = type opaque
%struct.x509_st = type { %struct.x509_cinf_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, %struct.crypto_ex_data_st, i64, i64, i64, i64, i64, i64, %struct.asn1_string_st*, %struct.AUTHORITY_KEYID_st*, %struct.X509_POLICY_CACHE_st*, %struct.stack_st_DIST_POINT*, %struct.stack_st_GENERAL_NAME*, %struct.NAME_CONSTRAINTS_st*, [20 x i8], %struct.x509_cert_aux_st*, %struct.crypto_buffer_st*, %union.crypto_mutex_st }
%struct.x509_cinf_st = type { %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.X509_val_st*, %struct.X509_name_st*, %struct.X509_pubkey_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.X509_val_st = type opaque
%struct.X509_name_st = type { %struct.stack_st_X509_NAME_ENTRY*, i32, %struct.buf_mem_st*, i8*, i32 }
%struct.stack_st_X509_NAME_ENTRY = type opaque
%struct.buf_mem_st = type { i64, i8*, i64 }
%struct.X509_pubkey_st = type opaque
%struct.stack_st_X509_EXTENSION = type opaque
%struct.ASN1_ENCODING_st = type { i8*, i64, i32, i8 }
%struct.X509_algor_st = type { %struct.asn1_object_st*, %struct.asn1_type_st* }
%struct.asn1_object_st = type { i8*, i8*, i32, i32, i8*, i32 }
%struct.asn1_type_st = type { i32, %union.anon.14 }
%union.anon.14 = type { i8* }
%struct.asn1_string_st = type { i32, i32, i8*, i64 }
%struct.AUTHORITY_KEYID_st = type opaque
%struct.X509_POLICY_CACHE_st = type opaque
%struct.stack_st_DIST_POINT = type opaque
%struct.stack_st_GENERAL_NAME = type opaque
%struct.NAME_CONSTRAINTS_st = type opaque
%struct.x509_cert_aux_st = type opaque
%struct.crypto_buffer_st = type opaque
%union.crypto_mutex_st = type { double, [48 x i8] }
%struct.stack_st_X509 = type opaque
%struct.ssl_cipher_st = type { i8*, i8*, i32, i32, i32, i32, i32, i32 }
%struct.crypto_ex_data_st = type { %struct.stack_st_void* }
%struct.stack_st_void = type opaque
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %struct.crypto_buffer_st* }
%"class.bssl::Array.40" = type { i8*, i64 }
%"struct.bssl::SSL_X509_METHOD" = type { i1 (%struct.stack_st_CRYPTO_BUFFER*)*, void (%"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*, %"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*)*, i1 (%struct.ssl_session_st*)*, i1 (%struct.ssl_session_st*, %struct.ssl_session_st*)*, void (%struct.ssl_session_st*)*, i1 (%struct.ssl_session_st*, %"struct.bssl::SSL_HANDSHAKE"*, i8*)*, void (%"struct.bssl::SSL_HANDSHAKE"*)*, i1 (%"struct.bssl::SSL_HANDSHAKE"*)*, void (%"struct.bssl::SSL_CONFIG"*)*, void (%"struct.bssl::SSL_CONFIG"*)*, i1 (%"struct.bssl::SSL_HANDSHAKE"*)*, i1 (%struct.ssl_ctx_st*)*, void (%struct.ssl_ctx_st*)*, void (%struct.ssl_ctx_st*)* }
%"struct.bssl::CERT" = type { %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.4", %struct.stack_st_X509*, %struct.x509_st*, %struct.x509_st*, %struct.ssl_private_key_method_st*, %"struct.bssl::SSL_X509_METHOD"*, %"class.bssl::Array", i32 (%struct.ssl_st*, i8*)*, i8*, %struct.x509_store_st*, %"class.std::__1::unique_ptr.15", %"class.std::__1::unique_ptr.15", i8, [32 x i8], %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.9", %struct.ssl_private_key_method_st* }
%"class.bssl::Array" = type { i16*, i64 }
%struct.ssl_st = type <{ %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"class.std::__1::unique_ptr.70", i16, i16, [4 x i8], %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.75", i32 (%"struct.bssl::SSL_HANDSHAKE"*)*, %"struct.bssl::SSL3_STATE"*, %"struct.bssl::DTLS1_STATE"*, void (i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*)*, i8*, i32, [4 x i8], %"class.std::__1::unique_ptr", void (%struct.ssl_st*, i32, i32)*, %"class.std::__1::unique_ptr.113", %"class.std::__1::unique_ptr.113", %struct.crypto_ex_data_st, i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr.0", %struct.ssl_quic_method_st*, i32, i8, [3 x i8] }>
%"struct.bssl::SSL_PROTOCOL_METHOD" = type { i8, i1 (%struct.ssl_st*)*, void (%struct.ssl_st*)*, i1 (%struct.ssl_st*, %"struct.bssl::SSLMessage"*)*, void (%struct.ssl_st*)*, i1 (%struct.ssl_st*)*, i32 (%struct.ssl_st*, i64*, i8*, i8*, i64)*, i32 (%struct.ssl_st*, i64*, i8*, i8*, i64)*, i32 (%struct.ssl_st*, %"class.bssl::Span"*, i64*, i8*, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i8*, i32)*, i32 (%struct.ssl_st*)*, i1 (%struct.ssl_st*, %struct.cbb_st*, %struct.cbb_st*, i8)*, i1 (%struct.ssl_st*, %struct.cbb_st*, %"class.bssl::Array.40"*)*, i1 (%struct.ssl_st*, %"class.bssl::Array.40"*)*, i1 (%struct.ssl_st*)*, i32 (%struct.ssl_st*)*, void (%struct.ssl_st*)*, i1 (%struct.ssl_st*, i32, %"class.bssl::SSLAEADContext"*, i8*, i64)*, i1 (%struct.ssl_st*, i32, %"class.bssl::SSLAEADContext"*, i8*, i64)* }
%"struct.bssl::SSLMessage" = type { i8, i8, %struct.cbs_st, %struct.cbs_st }
%struct.cbs_st = type { i8*, i64 }
%"class.bssl::Span" = type { i8*, i64 }
%struct.cbb_st = type { %struct.cbb_buffer_st*, %struct.cbb_st*, i64, i8, i8, i8 }
%struct.cbb_buffer_st = type { i8*, i64, i64, i8, i8 }
%"class.bssl::SSLAEADContext" = type <{ %struct.ssl_cipher_st*, %"class.bssl::internal::StackAllocated", [12 x i8], i8, i8, i16, i8, i8, [6 x i8] }>
%"class.bssl::internal::StackAllocated" = type { %struct.evp_aead_ctx_st }
%struct.evp_aead_ctx_st = type { %struct.evp_aead_st*, %union.evp_aead_ctx_st_state, i8 }
%struct.evp_aead_st = type opaque
%union.evp_aead_ctx_st_state = type { i64, [576 x i8] }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"struct.bssl::SSL_CONFIG"* }
%"struct.bssl::SSL_CONFIG" = type <{ %struct.ssl_st*, i16, i16, [4 x i8], %struct.X509_VERIFY_PARAM_st*, %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.35", i32 (i32, %struct.x509_store_ctx_st*)*, i32 (%struct.ssl_st*, i8*)*, %"class.std::__1::unique_ptr.0", i32 (%struct.ssl_st*, i8*, i8*, i32, i8*, i32)*, i32 (%struct.ssl_st*, i8*, i8*, i32)*, %"class.std::__1::unique_ptr.4", %struct.stack_st_X509_NAME*, %"class.bssl::Array", %"class.std::__1::unique_ptr.9", %"class.bssl::Array.40", %"class.bssl::GrowableArray", %"class.bssl::Array.40", %"class.bssl::Array.40", %"class.bssl::Array", %"class.std::__1::unique_ptr.42", i8, i16, [5 x i8] }>
%struct.X509_VERIFY_PARAM_st = type { i8*, i64, i64, i64, i32, i32, i32, %struct.stack_st_ASN1_OBJECT*, %struct.X509_VERIFY_PARAM_ID_st* }
%struct.stack_st_ASN1_OBJECT = type opaque
%struct.X509_VERIFY_PARAM_ID_st = type opaque
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.bssl::SSLCipherPreferenceList"* }
%"struct.bssl::SSLCipherPreferenceList" = type { %"class.std::__1::unique_ptr.28", i8* }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %struct.stack_st_SSL_CIPHER* }
%struct.stack_st_SSL_CIPHER = type opaque
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"struct.bssl::CERT"* }
%struct.x509_store_ctx_st = type { %struct.x509_store_st*, %struct.x509_st*, %struct.stack_st_X509*, %struct.stack_st_X509_CRL*, %struct.X509_VERIFY_PARAM_st*, i8*, {}*, i32 (i32, %struct.x509_store_ctx_st*)*, i32 (%struct.x509_st**, %struct.x509_store_ctx_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.x509_st*, %struct.x509_st*)*, {}*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st**, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*, %struct.x509_st*)*, {}*, %struct.stack_st_X509* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, %struct.stack_st_X509_CRL* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, {}*, i32, i32, %struct.stack_st_X509*, %struct.X509_POLICY_TREE_st*, i32, i32, i32, %struct.x509_st*, %struct.x509_st*, %struct.X509_crl_st*, i32, i32, %struct.x509_store_ctx_st*, %struct.crypto_ex_data_st }
%struct.stack_st_X509_CRL = type opaque
%struct.X509_POLICY_TREE_st = type opaque
%struct.X509_crl_st = type { %struct.X509_crl_info_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, i32, %struct.AUTHORITY_KEYID_st*, %struct.ISSUING_DIST_POINT_st*, i32, i32, %struct.asn1_string_st*, %struct.asn1_string_st*, [20 x i8], %struct.stack_st_GENERAL_NAMES*, %struct.x509_crl_method_st*, i8* }
%struct.X509_crl_info_st = type { %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_REVOKED*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.stack_st_X509_REVOKED = type opaque
%struct.ISSUING_DIST_POINT_st = type opaque
%struct.stack_st_GENERAL_NAMES = type opaque
%struct.x509_crl_method_st = type opaque
%struct.stack_st_X509_NAME = type opaque
%"class.bssl::GrowableArray" = type { i64, %"class.bssl::Array.41" }
%"class.bssl::Array.41" = type { %"struct.bssl::ALPSConfig"*, i64 }
%"struct.bssl::ALPSConfig" = type { %"class.bssl::Array.40", %"class.bssl::Array.40" }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %struct.stack_st_SRTP_PROTECTION_PROFILE* }
%struct.stack_st_SRTP_PROTECTION_PROFILE = type opaque
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %struct.bio_st* }
%struct.bio_st = type { %struct.bio_method_st*, i32, i32, i32, i32, i32, i32, i8*, %struct.bio_st*, i64, i64 }
%struct.bio_method_st = type { i32, i8*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*)*, i32 (%struct.bio_st*, i8*, i32)*, i64 (%struct.bio_st*, i32, i64, i8*)*, i32 (%struct.bio_st*)*, i32 (%struct.bio_st*)*, i64 (%struct.bio_st*, i32, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)*)* }
%"struct.bssl::SSL_HANDSHAKE" = type <{ %struct.ssl_st*, %"struct.bssl::SSL_CONFIG"*, i32, i32, i32, i16, i16, i64, [48 x i8], [48 x i8], [48 x i8], [48 x i8], [48 x i8], [48 x i8], [48 x i8], %union.anon.80, i16, [2 x i8], %"class.std::__1::unique_ptr.81", [2 x %"class.std::__1::unique_ptr.86"], %"class.bssl::SSLTranscript", %"class.bssl::Array.40", %"class.bssl::Array.40", %"class.bssl::Array.40", %"class.bssl::Array.40", %"class.bssl::Array.40", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array.40", i16, [6 x i8], %"class.bssl::internal::StackAllocated.97", %"class.bssl::Array.40", %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.4", %struct.stack_st_X509_NAME*, %"class.bssl::Array.40", %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.60", %struct.ssl_cipher_st*, %"class.bssl::Array.40", %"class.std::__1::unique_ptr.98", i32, i16, i16, i16, i8, [32 x i8], i8, [6 x i8], [6 x i8] }>
%union.anon.80 = type { i32 }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %struct.err_save_state_st* }
%struct.err_save_state_st = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.bssl::SSLKeyShare"* }
%"class.bssl::SSLKeyShare" = type { i32 (...)** }
%"class.bssl::SSLTranscript" = type { %"class.std::__1::unique_ptr.91", %"class.bssl::internal::StackAllocated.96" }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %struct.buf_mem_st* }
%"class.bssl::internal::StackAllocated.96" = type { %struct.env_md_ctx_st }
%struct.env_md_ctx_st = type { %struct.env_md_st*, i8*, %struct.evp_pkey_ctx_st*, %struct.evp_md_pctx_ops* }
%struct.env_md_st = type opaque
%struct.evp_pkey_ctx_st = type opaque
%struct.evp_md_pctx_ops = type opaque
%"class.bssl::internal::StackAllocated.97" = type { %struct.evp_hpke_ctx_st }
%struct.evp_hpke_ctx_st = type { %struct.evp_hpke_aead_st*, %struct.evp_hpke_kdf_st*, %struct.evp_aead_ctx_st, [24 x i8], [64 x i8], i64, i32 }
%struct.evp_hpke_aead_st = type opaque
%struct.evp_hpke_kdf_st = type opaque
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %struct.ssl_ech_server_config_list_st* }
%struct.ssl_ech_server_config_list_st = type <{ %"class.bssl::GrowableArray.63", i32, [4 x i8] }>
%"class.bssl::GrowableArray.63" = type { i64, %"class.bssl::Array.64" }
%"class.bssl::Array.64" = type { %"class.std::__1::unique_ptr.65"*, i64 }
%"class.std::__1::unique_ptr.65" = type opaque
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"struct.bssl::SSL_HANDSHAKE_HINTS"* }
%"struct.bssl::SSL_HANDSHAKE_HINTS" = type <{ %"class.bssl::Array.40", i16, [6 x i8], %"class.bssl::Array.40", %"class.bssl::Array.40", i16, [6 x i8], %"class.bssl::Array.40", %"class.bssl::Array.40", %"class.bssl::Array.40", %"class.bssl::Array.40", i8, [7 x i8] }>
%"struct.bssl::SSL3_STATE" = type <{ [8 x i8], [8 x i8], [32 x i8], [32 x i8], %"class.bssl::SSLBuffer", %"class.bssl::SSLBuffer", %"class.bssl::Span", i32, i32, i32, i32, i8*, i32, i32, %"class.std::__1::unique_ptr.81", i32, i32, i32, i32, i16, i8, i8, i8, i16, i8, %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.91", i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr.47", %"class.std::__1::unique_ptr.47", %"class.std::__1::unique_ptr.103", [48 x i8], [48 x i8], [48 x i8], i8, i8, i8, [12 x i8], i8, i8, [12 x i8], [2 x i8], i8, %"class.std::__1::unique_ptr", %"class.bssl::Array.40", %"class.bssl::Array.40", %"class.std::__1::unique_ptr.0", [64 x i8], %"class.bssl::Array.40", %struct.srtp_protection_profile_st* }>
%"class.bssl::SSLBuffer" = type <{ i8*, i16, i16, i16, [5 x i8], i8, [4 x i8] }>
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.bssl::SSLAEADContext"* }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"struct.bssl::SSL_HANDSHAKE"* }
%struct.srtp_protection_profile_st = type { i8*, i64 }
%"struct.bssl::DTLS1_STATE" = type <{ i8, [256 x i8], [7 x i8], i64, i16, i16, [4 x i8], %"struct.bssl::DTLS1_BITMAP", i16, i16, [8 x i8], [4 x i8], %"class.std::__1::unique_ptr.47", [7 x %"class.std::__1::unique_ptr.108"], [7 x %"struct.bssl::DTLS_OUTGOING_MESSAGE"], i8, i8, [2 x i8], i32, i32, i32, %"struct.bssl::OPENSSL_timeval", i32, [4 x i8] }>
%"struct.bssl::DTLS1_BITMAP" = type { i64, i64 }
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"struct.bssl::hm_fragment"* }
%"struct.bssl::hm_fragment" = type { i8, i16, i32, i8*, i8* }
%"struct.bssl::DTLS_OUTGOING_MESSAGE" = type <{ i8*, i32, i16, i8, i8 }>
%"struct.bssl::OPENSSL_timeval" = type { i64, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %struct.ssl_session_st* }
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %struct.ssl_ctx_st* }
%struct.ssl_ctx_st = type <{ %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_X509_METHOD"*, %union.crypto_mutex_st, i16, i16, [4 x i8], %struct.ssl_quic_method_st*, %"class.std::__1::unique_ptr.25", %struct.x509_store_st*, %struct.lhash_st_SSL_SESSION*, i64, %struct.ssl_session_st*, %struct.ssl_session_st*, i32, i32, i32, i32, i32 (%struct.ssl_st*, %struct.ssl_session_st*)*, void (%struct.ssl_ctx_st*, %struct.ssl_session_st*)*, %struct.ssl_session_st* (%struct.ssl_st*, i8*, i32, i32*)*, i32, [4 x i8], i32 (%struct.x509_store_ctx_st*, i8*)*, i8*, i32 (%struct.ssl_st*, i8*)*, i32 (i8*, i32, i32, i8*)*, i8*, i32 (%struct.ssl_st*, %struct.x509_st**, %struct.evp_pkey_st**)*, void (%struct.ssl_st*, %struct.evp_pkey_st**)*, %struct.crypto_ex_data_st, void (%struct.ssl_st*, i32, i32)*, %"class.std::__1::unique_ptr.4", %struct.stack_st_X509_NAME*, i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr.35", void (i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*)*, i8*, i32, [4 x i8], i32 (i32, %struct.x509_store_ctx_st*)*, %struct.X509_VERIFY_PARAM_st*, i32 (%struct.ssl_early_callback_ctx*)*, i32 (%struct.ssl_early_callback_ctx*)*, i8, i8, i16, [4 x i8], i32 (%struct.ssl_st*, i32*, i8*)*, i8*, %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.53", i32 (%struct.ssl_st*, i8*, i8*, %struct.evp_cipher_ctx_st*, %struct.hmac_ctx_st*, i32)*, %"class.std::__1::unique_ptr.0", i32 (%struct.ssl_st*, i8*, i8*, i32, i8*, i32)*, i32 (%struct.ssl_st*, i8*, i8*, i32)*, i32 (%struct.ssl_st*, i8**, i32*, i8*)*, i8*, i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)*, i8*, i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)*, i8*, %"class.bssl::Array.40", %"class.std::__1::unique_ptr.42", %"class.bssl::GrowableArray.58", %"class.bssl::Array", %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.60", void (%struct.ssl_st*, i8*)*, void (%struct.ssl_st*, %struct.timeval*)*, %struct.crypto_buffer_pool_st*, %struct.ssl_ticket_aead_method_st*, i32 (%struct.ssl_st*, i8*)*, i8*, %"class.bssl::Array", i16, [6 x i8] }>
%struct.lhash_st_SSL_SESSION = type opaque
%struct.evp_pkey_st = type { i32, i32, %union.anon, %struct.evp_pkey_asn1_method_st* }
%union.anon = type { i8* }
%struct.evp_pkey_asn1_method_st = type opaque
%struct.ssl_early_callback_ctx = type { %struct.ssl_st*, i8*, i64, i16, i8*, i64, i8*, i64, i8*, i64, i8*, i64, i8*, i64 }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"struct.bssl::TicketKey"* }
%"struct.bssl::TicketKey" = type { [16 x i8], [16 x i8], [16 x i8], i64 }
%struct.evp_cipher_ctx_st = type { %struct.evp_cipher_st*, i8*, i8*, i32, i32, i32, [16 x i8], [16 x i8], [32 x i8], i32, i32, i32, [32 x i8] }
%struct.evp_cipher_st = type { i32, i32, i32, i32, i32, i32, i8*, i32 (%struct.evp_cipher_ctx_st*, i8*, i8*, i32)*, i32 (%struct.evp_cipher_ctx_st*, i8*, i8*, i64)*, void (%struct.evp_cipher_ctx_st*)*, i32 (%struct.evp_cipher_ctx_st*, i32, i32, i8*)* }
%struct.hmac_ctx_st = type { %struct.env_md_st*, %struct.env_md_ctx_st, %struct.env_md_ctx_st, %struct.env_md_ctx_st }
%"class.bssl::GrowableArray.58" = type { i64, %"class.bssl::Array.59" }
%"class.bssl::Array.59" = type { %"struct.bssl::CertCompressionAlg"*, i64 }
%"struct.bssl::CertCompressionAlg" = type <{ i32 (%struct.ssl_st*, %struct.cbb_st*, i8*, i64)*, i32 (%struct.ssl_st*, %struct.crypto_buffer_st**, i64, i8*, i64)*, i16, [6 x i8] }>
%struct.timeval = type { i64, i64 }
%struct.crypto_buffer_pool_st = type opaque
%struct.ssl_ticket_aead_method_st = type { i64 (%struct.ssl_st*)*, i32 (%struct.ssl_st*, i8*, i64*, i64, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i64*, i64, i8*, i64)* }
%struct.ssl_quic_method_st = type { i32 (%struct.ssl_st*, i32, %struct.ssl_cipher_st*, i8*, i64)*, i32 (%struct.ssl_st*, i32, %struct.ssl_cipher_st*, i8*, i64)*, i32 (%struct.ssl_st*, i32, i8*, i64)*, i32 (%struct.ssl_st*)*, i32 (%struct.ssl_st*, i32, i8)* }
%struct.x509_store_st = type { i32, %struct.stack_st_X509_OBJECT*, %union.crypto_mutex_st, %struct.stack_st_X509*, %struct.stack_st_X509_LOOKUP*, %struct.X509_VERIFY_PARAM_st*, i32 (%struct.x509_store_ctx_st*)*, i32 (i32, %struct.x509_store_ctx_st*)*, i32 (%struct.x509_st**, %struct.x509_store_ctx_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.x509_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st**, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*, %struct.x509_st*)*, %struct.stack_st_X509* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, %struct.stack_st_X509_CRL* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, i32 (%struct.x509_store_ctx_st*)*, i32 }
%struct.stack_st_X509_OBJECT = type opaque
%struct.stack_st_X509_LOOKUP = type opaque
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"struct.bssl::DC"* }
%"struct.bssl::DC" = type { %"class.std::__1::unique_ptr.15", i16, %"class.std::__1::unique_ptr.9" }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %struct.evp_pkey_st* }
%struct.ssl_private_key_method_st = type { i32 (%struct.ssl_st*, i8*, i64*, i64, i16, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i64*, i64, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i64*, i64)* }
%struct.stack_st = type { i64, i8**, i32, i64, i32 (i8**, i8**)* }
%"class.bssl::internal::StackAllocated.119" = type { %struct.evp_cipher_ctx_st }
%"class.bssl::internal::StackAllocated.120" = type { %struct.hmac_ctx_st }
%struct.engine_st = type opaque
%struct.LHASH_CMP_KEY_SSL_SESSION = type { i32 (i8*, %struct.ssl_session_st*)*, i8* }
%"class.bssl::Span.52" = type { i8*, i64 }
%struct.lhash_st = type opaque
%struct.LHASH_DOALL_SSL_SESSION = type { void (%struct.ssl_session_st*)*, void (%struct.ssl_session_st*, i8*)*, i8* }
%struct.timeout_param_st = type { %struct.ssl_ctx_st*, i64, %struct.lhash_st_SSL_SESSION* }

$sk_CRYPTO_BUFFER_call_copy_func = comdat any

$sk_CRYPTO_BUFFER_call_free_func = comdat any

$_Z27lh_SSL_SESSION_call_cmp_keyPKvS0_ = comdat any

$_Z29lh_SSL_SESSION_call_hash_funcPFjPKvES0_ = comdat any

$_Z28lh_SSL_SESSION_call_cmp_funcPFiPKvS0_ES0_S0_ = comdat any

$_Z29lh_SSL_SESSION_call_doall_argPvS_ = comdat any

$_ZZN4bssl8internal11DeleterImplI22stack_st_CRYPTO_BUFFERvE4FreeEPS2_ENUlPFvPvES5_E_8__invokeES7_S5_ = comdat any

@.str = private unnamed_addr constant [51 x i8] c"../../third_party/boringssl/src/ssl/ssl_session.cc\00", align 1
@_ZN4bsslL15g_ex_data_classE = internal global %struct.CRYPTO_EX_DATA_CLASS { %struct.CRYPTO_STATIC_MUTEX zeroinitializer, %struct.stack_st_CRYPTO_EX_DATA_FUNCS* null, i8 1 }, align 8
@_ZN4bsslL23g_pending_session_magicE = internal constant i8 0, align 1
@_ZZN4bsslL34ssl_encrypt_ticket_with_cipher_ctxEPNS_13SSL_HANDSHAKEEP6cbb_stPKhmE18kTicketPlaceholder = internal constant [17 x i8] c"TICKET TOO LARGE\00", align 16
@.str.1 = private unnamed_addr constant [47 x i8] c"../../third_party/boringssl/src/ssl/internal.h\00", align 1

@_ZN14ssl_session_stC1EPKN4bssl15SSL_X509_METHODE = hidden unnamed_addr alias void (%struct.ssl_session_st*, %"struct.bssl::SSL_X509_METHOD"*), void (%struct.ssl_session_st*, %"struct.bssl::SSL_X509_METHOD"*)* @_ZN14ssl_session_stC2EPKN4bssl15SSL_X509_METHODE
@_ZN14ssl_session_stD1Ev = hidden unnamed_addr alias void (%struct.ssl_session_st*), void (%struct.ssl_session_st*)* @_ZN14ssl_session_stD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %struct.ssl_session_st* @_ZN4bssl15ssl_session_newEPKNS_15SSL_X509_METHODE(%"struct.bssl::SSL_X509_METHOD"*) local_unnamed_addr #0 {
  %2 = tail call i8* @OPENSSL_malloc(i64 456) #13
  %3 = icmp eq i8* %2, null
  br i1 %3, label %4, label %5

4:                                                ; preds = %1
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1, i64 0, i64 0), i32 196) #13
  br label %36

5:                                                ; preds = %1
  %6 = bitcast i8* %2 to %struct.ssl_session_st*
  %7 = bitcast i8* %2 to i32*
  store i32 1, i32* %7, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 4
  %9 = bitcast i8* %8 to i16*
  store i16 0, i16* %9, align 4
  %10 = getelementptr inbounds i8, i8* %2, i64 6
  %11 = bitcast i8* %10 to i16*
  store i16 0, i16* %11, align 2
  %12 = getelementptr inbounds i8, i8* %2, i64 8
  %13 = bitcast i8* %12 to i16*
  store i16 0, i16* %13, align 8
  %14 = getelementptr inbounds i8, i8* %2, i64 12
  %15 = getelementptr inbounds i8, i8* %2, i64 136
  %16 = getelementptr inbounds i8, i8* %2, i64 152
  %17 = bitcast i8* %16 to %"struct.bssl::SSL_X509_METHOD"**
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %14, i8 0, i64 121, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #13
  store %"struct.bssl::SSL_X509_METHOD"* %0, %"struct.bssl::SSL_X509_METHOD"** %17, align 8
  %18 = getelementptr inbounds i8, i8* %2, i64 160
  %19 = getelementptr inbounds i8, i8* %2, i64 184
  %20 = bitcast i8* %19 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #13
  store i64 65, i64* %20, align 8
  %21 = getelementptr inbounds i8, i8* %2, i64 192
  %22 = bitcast i8* %21 to i32*
  store i32 7200, i32* %22, align 8
  %23 = getelementptr inbounds i8, i8* %2, i64 196
  %24 = bitcast i8* %23 to i32*
  store i32 7200, i32* %24, align 4
  %25 = getelementptr inbounds i8, i8* %2, i64 200
  %26 = bitcast i8* %25 to i64*
  %27 = getelementptr inbounds i8, i8* %2, i64 224
  %28 = getelementptr inbounds i8, i8* %2, i64 372
  %29 = getelementptr inbounds i8, i8* %2, i64 432
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 145, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %28, i8 0, i64 60, i1 false) #13
  %30 = load i8, i8* %29, align 8
  %31 = and i8 %30, -128
  store i8 %31, i8* %29, align 8
  %32 = getelementptr inbounds i8, i8* %2, i64 440
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 16, i1 false) #13
  %33 = getelementptr inbounds i8, i8* %2, i64 216
  %34 = bitcast i8* %33 to %struct.crypto_ex_data_st*
  tail call void @CRYPTO_new_ex_data(%struct.crypto_ex_data_st* %34) #13
  %35 = tail call i64 @time(i64* null) #13
  store i64 %35, i64* %26, align 8
  br label %36

36:                                               ; preds = %4, %5
  %37 = phi %struct.ssl_session_st* [ null, %4 ], [ %6, %5 ]
  ret %struct.ssl_session_st* %37
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4bssl19ssl_hash_session_idENS_4SpanIKhEE(i8*, i64) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #13
  %5 = icmp ult i64 %1, 4
  store i32 -1431655766, i32* %3, align 4
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  store i32 0, i32* %3, align 4
  %7 = icmp eq i64 %1, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %4, i8* align 1 %0, i64 %1, i1 false) #13
  br label %9

9:                                                ; preds = %8, %6, %2
  %10 = phi i8* [ %0, %2 ], [ %4, %6 ], [ %4, %8 ]
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i32
  %13 = getelementptr inbounds i8, i8* %10, i64 1
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  %16 = shl nuw nsw i32 %15, 8
  %17 = or i32 %16, %12
  %18 = getelementptr inbounds i8, i8* %10, i64 2
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = shl nuw nsw i32 %20, 16
  %22 = or i32 %17, %21
  %23 = getelementptr inbounds i8, i8* %10, i64 3
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = shl nuw i32 %25, 24
  %27 = or i32 %22, %26
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #13
  ret i32 %27
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.ssl_session_st* @_ZN4bssl15SSL_SESSION_dupEP14ssl_session_sti(%struct.ssl_session_st*, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 12
  %4 = load %"struct.bssl::SSL_X509_METHOD"*, %"struct.bssl::SSL_X509_METHOD"** %3, align 8
  %5 = tail call %struct.ssl_session_st* @_ZN4bssl15ssl_session_newEPKNS_15SSL_X509_METHODE(%"struct.bssl::SSL_X509_METHOD"* %4)
  %6 = icmp eq %struct.ssl_session_st* %5, null
  br i1 %6, label %270, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 36
  %9 = load i8, i8* %8, align 8
  %10 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %5, i64 0, i32 36
  %11 = and i8 %9, 16
  %12 = load i8, i8* %10, align 8
  %13 = and i8 %12, -17
  %14 = or i8 %13, %11
  store i8 %14, i8* %10, align 8
  %15 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 1
  %16 = load i16, i16* %15, align 4
  %17 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %5, i64 0, i32 1
  store i16 %16, i16* %17, align 4
  %18 = load i8, i8* %8, align 8
  %19 = and i8 %18, 32
  %20 = and i8 %14, -33
  %21 = or i8 %19, %20
  store i8 %21, i8* %10, align 8
  %22 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 8
  %23 = load i8, i8* %22, align 4
  %24 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %5, i64 0, i32 8
  store i8 %23, i8* %24, align 4
  %25 = load i8, i8* %22, align 4
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %7
  %28 = zext i8 %25 to i64
  %29 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 9, i64 0
  %30 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %5, i64 0, i32 9, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 1 %29, i64 %28, i1 false) #13
  br label %31

31:                                               ; preds = %7, %27
  %32 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 4
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %5, i64 0, i32 4
  store i32 %33, i32* %34, align 4
  %35 = load i32, i32* %32, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %41, label %37

37:                                               ; preds = %31
  %38 = sext i32 %35 to i64
  %39 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 5, i64 0
  %40 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %5, i64 0, i32 5, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %40, i8* align 1 %39, i64 %38, i1 false) #13
  br label %41

41:                                               ; preds = %31, %37
  %42 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 20
  %43 = bitcast %struct.ssl_cipher_st** %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %5, i64 0, i32 20
  %46 = bitcast %struct.ssl_cipher_st** %45 to i64*
  store i64 %44, i64* %46, align 8
  %47 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %60, label %50

50:                                               ; preds = %41
  %51 = tail call i8* @OPENSSL_strdup(i8* nonnull %48) #13
  %52 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %5, i64 0, i32 10, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  store i8* %51, i8** %52, align 8
  %54 = icmp eq i8* %53, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %50
  tail call void @OPENSSL_free(i8* nonnull %53) #13
  %56 = load i8*, i8** %52, align 8
  br label %57

57:                                               ; preds = %50, %55
  %58 = phi i8* [ %51, %50 ], [ %56, %55 ]
  %59 = icmp eq i8* %58, null
  br i1 %59, label %264, label %60

60:                                               ; preds = %41, %57
  %61 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %62 = load %struct.stack_st_CRYPTO_BUFFER*, %struct.stack_st_CRYPTO_BUFFER** %61, align 8
  %63 = icmp eq %struct.stack_st_CRYPTO_BUFFER* %62, null
  br i1 %63, label %78, label %64

64:                                               ; preds = %60
  %65 = bitcast %struct.stack_st_CRYPTO_BUFFER* %62 to %struct.stack_st*
  %66 = tail call %struct.stack_st* @sk_deep_copy(%struct.stack_st* nonnull %65, i8* (i8* (i8*)*, i8*)* nonnull @sk_CRYPTO_BUFFER_call_copy_func, i8* (i8*)* bitcast (%struct.crypto_buffer_st* (%struct.crypto_buffer_st*)* @"_ZZN4bssl15SSL_SESSION_dupEP14ssl_session_stiEN3$_08__invokeEP16crypto_buffer_st" to i8* (i8*)*), void (void (i8*)*, i8*)* nonnull @sk_CRYPTO_BUFFER_call_free_func, void (i8*)* bitcast (void (%struct.crypto_buffer_st*)* @CRYPTO_BUFFER_free to void (i8*)*)) #13
  %67 = bitcast %struct.stack_st* %66 to %struct.stack_st_CRYPTO_BUFFER*
  %68 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %5, i64 0, i32 11, i32 0, i32 0, i32 0
  %69 = load %struct.stack_st_CRYPTO_BUFFER*, %struct.stack_st_CRYPTO_BUFFER** %68, align 8
  %70 = bitcast %struct.stack_st_CRYPTO_BUFFER** %68 to %struct.stack_st**
  store %struct.stack_st* %66, %struct.stack_st** %70, align 8
  %71 = icmp eq %struct.stack_st_CRYPTO_BUFFER* %69, null
  br i1 %71, label %75, label %72

72:                                               ; preds = %64
  %73 = bitcast %struct.stack_st_CRYPTO_BUFFER* %69 to %struct.stack_st*
  tail call void @sk_pop_free_ex(%struct.stack_st* nonnull %73, void (void (i8*)*, i8*)* nonnull @_ZZN4bssl8internal11DeleterImplI22stack_st_CRYPTO_BUFFERvE4FreeEPS2_ENUlPFvPvES5_E_8__invokeES7_S5_, void (i8*)* null) #13
  %74 = load %struct.stack_st_CRYPTO_BUFFER*, %struct.stack_st_CRYPTO_BUFFER** %68, align 8
  br label %75

75:                                               ; preds = %64, %72
  %76 = phi %struct.stack_st_CRYPTO_BUFFER* [ %67, %64 ], [ %74, %72 ]
  %77 = icmp eq %struct.stack_st_CRYPTO_BUFFER* %76, null
  br i1 %77, label %264, label %78

78:                                               ; preds = %60, %75
  %79 = load %"struct.bssl::SSL_X509_METHOD"*, %"struct.bssl::SSL_X509_METHOD"** %3, align 8
  %80 = getelementptr inbounds %"struct.bssl::SSL_X509_METHOD", %"struct.bssl::SSL_X509_METHOD"* %79, i64 0, i32 7
  %81 = load i1 (%struct.ssl_session_st*, %struct.ssl_session_st*)*, i1 (%struct.ssl_session_st*, %struct.ssl_session_st*)** %80, align 8
  %82 = tail call zeroext i1 %81(%struct.ssl_session_st* nonnull %5, %struct.ssl_session_st* %0) #13
  br i1 %82, label %83, label %264

83:                                               ; preds = %78
  %84 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 16
  %85 = load i64, i64* %84, align 8
  %86 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %5, i64 0, i32 16
  store i64 %85, i64* %86, align 8
  %87 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 26, i32 0, i32 0, i32 0
  %88 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %87, align 8
  %89 = icmp eq %struct.crypto_buffer_st* %88, null
  br i1 %89, label %92, label %90

90:                                               ; preds = %83
  %91 = tail call i32 @CRYPTO_BUFFER_up_ref(%struct.crypto_buffer_st* nonnull %88) #13
  br label %92

92:                                               ; preds = %83, %90
  %93 = ptrtoint %struct.crypto_buffer_st* %88 to i64
  %94 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %5, i64 0, i32 26
  %95 = getelementptr inbounds %"class.std::__1::unique_ptr.15", %"class.std::__1::unique_ptr.15"* %94, i64 0, i32 0, i32 0, i32 0
  %96 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %95, align 8
  %97 = bitcast %"class.std::__1::unique_ptr.15"* %94 to i64*
  store i64 %93, i64* %97, align 8
  %98 = icmp eq %struct.crypto_buffer_st* %96, null
  br i1 %98, label %100, label %99

99:                                               ; preds = %92
  tail call void @CRYPTO_BUFFER_free(%struct.crypto_buffer_st* nonnull %96) #13
  br label %100

100:                                              ; preds = %99, %92
  %101 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 25, i32 0, i32 0, i32 0
  %102 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %101, align 8
  %103 = icmp eq %struct.crypto_buffer_st* %102, null
  br i1 %103, label %106, label %104

104:                                              ; preds = %100
  %105 = tail call i32 @CRYPTO_BUFFER_up_ref(%struct.crypto_buffer_st* nonnull %102) #13
  br label %106

106:                                              ; preds = %100, %104
  %107 = ptrtoint %struct.crypto_buffer_st* %102 to i64
  %108 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %5, i64 0, i32 25
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.15", %"class.std::__1::unique_ptr.15"* %108, i64 0, i32 0, i32 0, i32 0
  %110 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %109, align 8
  %111 = bitcast %"class.std::__1::unique_ptr.15"* %108 to i64*
  store i64 %107, i64* %111, align 8
  %112 = icmp eq %struct.crypto_buffer_st* %110, null
  br i1 %112, label %114, label %113

113:                                              ; preds = %106
  tail call void @CRYPTO_BUFFER_free(%struct.crypto_buffer_st* nonnull %110) #13
  br label %114

114:                                              ; preds = %113, %106
  %115 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %5, i64 0, i32 27, i64 0
  %116 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 27, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %115, i8* align 1 %116, i64 32, i1 false) #13
  %117 = load i8, i8* %8, align 8
  %118 = and i8 %117, 2
  %119 = load i8, i8* %10, align 8
  %120 = and i8 %119, -3
  %121 = or i8 %120, %118
  store i8 %121, i8* %10, align 8
  %122 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 3
  %123 = load i16, i16* %122, align 8
  %124 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %5, i64 0, i32 3
  store i16 %123, i16* %124, align 8
  %125 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 17
  %126 = load i32, i32* %125, align 8
  %127 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %5, i64 0, i32 17
  store i32 %126, i32* %127, align 8
  %128 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 18
  %129 = load i32, i32* %128, align 4
  %130 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %5, i64 0, i32 18
  store i32 %129, i32* %130, align 4
  %131 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 19
  %132 = load i64, i64* %131, align 8
  %133 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %5, i64 0, i32 19
  store i64 %132, i64* %133, align 8
  %134 = and i32 %1, 2
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %242, label %136

136:                                              ; preds = %114
  %137 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 6
  %138 = load i32, i32* %137, align 8
  %139 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %5, i64 0, i32 6
  store i32 %138, i32* %139, align 8
  %140 = load i32, i32* %137, align 8
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %146, label %142

142:                                              ; preds = %136
  %143 = zext i32 %140 to i64
  %144 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 7, i64 0
  %145 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %5, i64 0, i32 7, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %145, i8* align 1 %144, i64 %143, i1 false) #13
  br label %146

146:                                              ; preds = %136, %142
  %147 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 2
  %148 = load i16, i16* %147, align 2
  %149 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %5, i64 0, i32 2
  store i16 %148, i16* %149, align 2
  %150 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 29
  %151 = load i8, i8* %150, align 8
  %152 = icmp eq i8 %151, 0
  br i1 %152, label %158, label %153

153:                                              ; preds = %146
  %154 = zext i8 %151 to i64
  %155 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 28, i64 0
  %156 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %5, i64 0, i32 28, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %156, i8* align 1 %155, i64 %154, i1 false) #13
  %157 = load i8, i8* %150, align 8
  br label %158

158:                                              ; preds = %146, %153
  %159 = phi i8 [ 0, %146 ], [ %157, %153 ]
  %160 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %5, i64 0, i32 29
  store i8 %159, i8* %160, align 8
  %161 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 30
  %162 = load i32, i32* %161, align 4
  %163 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %5, i64 0, i32 30
  store i32 %162, i32* %163, align 4
  %164 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 31
  %165 = load i32, i32* %164, align 8
  %166 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %5, i64 0, i32 31
  store i32 %165, i32* %166, align 8
  %167 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 32
  %168 = load i32, i32* %167, align 4
  %169 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %5, i64 0, i32 32
  store i32 %168, i32* %169, align 4
  %170 = load i8, i8* %8, align 8
  %171 = and i8 %170, 1
  %172 = load i8, i8* %10, align 8
  %173 = and i8 %172, -2
  %174 = or i8 %173, %171
  store i8 %174, i8* %10, align 8
  %175 = load i8, i8* %8, align 8
  %176 = and i8 %175, 64
  %177 = and i8 %174, -65
  %178 = or i8 %177, %176
  store i8 %178, i8* %10, align 8
  %179 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %5, i64 0, i32 33
  %180 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 33, i32 0
  %181 = load i8*, i8** %180, align 8
  %182 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 33, i32 1
  %183 = load i64, i64* %182, align 8
  %184 = getelementptr inbounds %"class.bssl::Array.40", %"class.bssl::Array.40"* %179, i64 0, i32 0
  %185 = load i8*, i8** %184, align 8
  tail call void @OPENSSL_free(i8* %185) #13
  %186 = bitcast %"class.bssl::Array.40"* %179 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %186, i8 0, i64 16, i1 false) #13
  %187 = icmp eq i64 %183, 0
  br i1 %187, label %194, label %188

188:                                              ; preds = %158
  %189 = tail call i8* @OPENSSL_malloc(i64 %183) #13
  store i8* %189, i8** %184, align 8
  %190 = icmp eq i8* %189, null
  br i1 %190, label %193, label %191

191:                                              ; preds = %188
  %192 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %5, i64 0, i32 33, i32 1
  store i64 %183, i64* %192, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %189, i8* align 1 %181, i64 %183, i1 false) #13
  br label %194

193:                                              ; preds = %188
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1, i64 0, i64 0), i32 324) #13
  br label %264

194:                                              ; preds = %191, %158
  %195 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %5, i64 0, i32 37
  %196 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 37, i32 0
  %197 = load i8*, i8** %196, align 8
  %198 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 37, i32 1
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.bssl::Array.40", %"class.bssl::Array.40"* %195, i64 0, i32 0
  %201 = load i8*, i8** %200, align 8
  tail call void @OPENSSL_free(i8* %201) #13
  %202 = bitcast %"class.bssl::Array.40"* %195 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %202, i8 0, i64 16, i1 false) #13
  %203 = icmp eq i64 %199, 0
  br i1 %203, label %210, label %204

204:                                              ; preds = %194
  %205 = tail call i8* @OPENSSL_malloc(i64 %199) #13
  store i8* %205, i8** %200, align 8
  %206 = icmp eq i8* %205, null
  br i1 %206, label %209, label %207

207:                                              ; preds = %204
  %208 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %5, i64 0, i32 37, i32 1
  store i64 %199, i64* %208, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %205, i8* align 1 %197, i64 %199, i1 false) #13
  br label %210

209:                                              ; preds = %204
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1, i64 0, i64 0), i32 324) #13
  br label %264

210:                                              ; preds = %207, %194
  %211 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %5, i64 0, i32 34
  %212 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 34, i32 0
  %213 = load i8*, i8** %212, align 8
  %214 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 34, i32 1
  %215 = load i64, i64* %214, align 8
  %216 = getelementptr inbounds %"class.bssl::Array.40", %"class.bssl::Array.40"* %211, i64 0, i32 0
  %217 = load i8*, i8** %216, align 8
  tail call void @OPENSSL_free(i8* %217) #13
  %218 = bitcast %"class.bssl::Array.40"* %211 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %218, i8 0, i64 16, i1 false) #13
  %219 = icmp eq i64 %215, 0
  br i1 %219, label %226, label %220

220:                                              ; preds = %210
  %221 = tail call i8* @OPENSSL_malloc(i64 %215) #13
  store i8* %221, i8** %216, align 8
  %222 = icmp eq i8* %221, null
  br i1 %222, label %225, label %223

223:                                              ; preds = %220
  %224 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %5, i64 0, i32 34, i32 1
  store i64 %215, i64* %224, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %221, i8* align 1 %213, i64 %215, i1 false) #13
  br label %226

225:                                              ; preds = %220
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1, i64 0, i64 0), i32 324) #13
  br label %264

226:                                              ; preds = %223, %210
  %227 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %5, i64 0, i32 35
  %228 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 35, i32 0
  %229 = load i8*, i8** %228, align 8
  %230 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 35, i32 1
  %231 = load i64, i64* %230, align 8
  %232 = getelementptr inbounds %"class.bssl::Array.40", %"class.bssl::Array.40"* %227, i64 0, i32 0
  %233 = load i8*, i8** %232, align 8
  tail call void @OPENSSL_free(i8* %233) #13
  %234 = bitcast %"class.bssl::Array.40"* %227 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %234, i8 0, i64 16, i1 false) #13
  %235 = icmp eq i64 %231, 0
  br i1 %235, label %242, label %236

236:                                              ; preds = %226
  %237 = tail call i8* @OPENSSL_malloc(i64 %231) #13
  store i8* %237, i8** %232, align 8
  %238 = icmp eq i8* %237, null
  br i1 %238, label %241, label %239

239:                                              ; preds = %236
  %240 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %5, i64 0, i32 35, i32 1
  store i64 %231, i64* %240, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %237, i8* align 1 %229, i64 %231, i1 false) #13
  br label %242

241:                                              ; preds = %236
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1, i64 0, i64 0), i32 324) #13
  br label %264

242:                                              ; preds = %226, %239, %114
  %243 = and i32 %1, 1
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %261, label %245

245:                                              ; preds = %242
  %246 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %5, i64 0, i32 24
  %247 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 24, i32 0
  %248 = load i8*, i8** %247, align 8
  %249 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 24, i32 1
  %250 = load i64, i64* %249, align 8
  %251 = getelementptr inbounds %"class.bssl::Array.40", %"class.bssl::Array.40"* %246, i64 0, i32 0
  %252 = load i8*, i8** %251, align 8
  tail call void @OPENSSL_free(i8* %252) #13
  %253 = bitcast %"class.bssl::Array.40"* %246 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %253, i8 0, i64 16, i1 false) #13
  %254 = icmp eq i64 %250, 0
  br i1 %254, label %261, label %255

255:                                              ; preds = %245
  %256 = tail call i8* @OPENSSL_malloc(i64 %250) #13
  store i8* %256, i8** %251, align 8
  %257 = icmp eq i8* %256, null
  br i1 %257, label %260, label %258

258:                                              ; preds = %255
  %259 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %5, i64 0, i32 24, i32 1
  store i64 %250, i64* %259, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %256, i8* align 1 %248, i64 %250, i1 false) #13
  br label %261

260:                                              ; preds = %255
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1, i64 0, i64 0), i32 324) #13
  br label %264

261:                                              ; preds = %242, %258, %245
  %262 = load i8, i8* %10, align 8
  %263 = or i8 %262, 4
  store i8 %263, i8* %10, align 8
  br label %270

264:                                              ; preds = %260, %57, %75, %78, %241, %225, %209, %193
  %265 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %5, i64 0, i32 0
  %266 = tail call i32 @CRYPTO_refcount_dec_and_test_zero(i32* %265) #13
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %270, label %268

268:                                              ; preds = %264
  tail call void @_ZN14ssl_session_stD2Ev(%struct.ssl_session_st* nonnull %5) #13
  %269 = bitcast %struct.ssl_session_st* %5 to i8*
  tail call void @OPENSSL_free(i8* nonnull %269) #13
  br label %270

270:                                              ; preds = %2, %261, %264, %268
  %271 = phi %struct.ssl_session_st* [ %5, %261 ], [ null, %264 ], [ null, %268 ], [ null, %2 ]
  ret %struct.ssl_session_st* %271
}

declare i8* @OPENSSL_strdup(i8*) local_unnamed_addr #2

declare void @CRYPTO_BUFFER_free(%struct.crypto_buffer_st*) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4bssl23ssl_session_rebase_timeEP6ssl_stP14ssl_session_st(%struct.ssl_st*, %struct.ssl_session_st* nocapture) local_unnamed_addr #0 {
  %3 = alloca %"struct.bssl::OPENSSL_timeval", align 8
  %4 = bitcast %"struct.bssl::OPENSSL_timeval"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 16, i1 false)
  call void @_ZN4bssl20ssl_get_current_timeEPK6ssl_stPNS_15OPENSSL_timevalE(%struct.ssl_st* %0, %"struct.bssl::OPENSSL_timeval"* nonnull %3) #13
  %5 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %1, i64 0, i32 19
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"struct.bssl::OPENSSL_timeval", %"struct.bssl::OPENSSL_timeval"* %3, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, %6
  br i1 %9, label %10, label %13

10:                                               ; preds = %2
  store i64 %8, i64* %5, align 8
  %11 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %1, i64 0, i32 17
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %1, i64 0, i32 18
  store i32 0, i32* %12, align 4
  br label %28

13:                                               ; preds = %2
  %14 = sub i64 %8, %6
  store i64 %8, i64* %5, align 8
  %15 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %1, i64 0, i32 17
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = icmp ugt i64 %14, %17
  %19 = trunc i64 %14 to i32
  %20 = sub i32 %16, %19
  %21 = select i1 %18, i32 0, i32 %20
  store i32 %21, i32* %15, align 8
  %22 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %1, i64 0, i32 18
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i64
  %25 = icmp ugt i64 %14, %24
  %26 = sub i32 %23, %19
  %27 = select i1 %25, i32 0, i32 %26
  store i32 %27, i32* %22, align 4
  br label %28

28:                                               ; preds = %13, %10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #13
  ret void
}

declare void @_ZN4bssl20ssl_get_current_timeEPK6ssl_stPNS_15OPENSSL_timevalE(%struct.ssl_st*, %"struct.bssl::OPENSSL_timeval"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4bssl25ssl_session_renew_timeoutEP6ssl_stP14ssl_session_stj(%struct.ssl_st*, %struct.ssl_session_st* nocapture, i32) local_unnamed_addr #0 {
  %4 = alloca %"struct.bssl::OPENSSL_timeval", align 8
  %5 = bitcast %"struct.bssl::OPENSSL_timeval"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 16, i1 false) #13
  call void @_ZN4bssl20ssl_get_current_timeEPK6ssl_stPNS_15OPENSSL_timevalE(%struct.ssl_st* %0, %"struct.bssl::OPENSSL_timeval"* nonnull %4) #13
  %6 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %1, i64 0, i32 19
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"struct.bssl::OPENSSL_timeval", %"struct.bssl::OPENSSL_timeval"* %4, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp ult i64 %9, %7
  br i1 %10, label %11, label %14

11:                                               ; preds = %3
  store i64 %9, i64* %6, align 8
  %12 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %1, i64 0, i32 17
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %1, i64 0, i32 18
  store i32 0, i32* %13, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #13
  br label %30

14:                                               ; preds = %3
  %15 = sub i64 %9, %7
  store i64 %9, i64* %6, align 8
  %16 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %1, i64 0, i32 17
  %17 = load i32, i32* %16, align 8
  %18 = zext i32 %17 to i64
  %19 = icmp ugt i64 %15, %18
  %20 = trunc i64 %15 to i32
  %21 = sub i32 %17, %20
  %22 = select i1 %19, i32 0, i32 %21
  store i32 %22, i32* %16, align 8
  %23 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %1, i64 0, i32 18
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i64
  %26 = icmp ugt i64 %15, %25
  %27 = sub i32 %24, %20
  %28 = select i1 %26, i32 0, i32 %27
  store i32 %28, i32* %23, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #13
  %29 = icmp ugt i32 %22, %2
  br i1 %29, label %35, label %30

30:                                               ; preds = %11, %14
  %31 = phi i32 [ 0, %11 ], [ %28, %14 ]
  %32 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %1, i64 0, i32 17
  %33 = icmp ult i32 %31, %2
  %34 = select i1 %33, i32 %31, i32 %2
  store i32 %34, i32* %32, align 8
  ret void

35:                                               ; preds = %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i16 @_ZN4bssl28ssl_session_protocol_versionEPK14ssl_session_st(%struct.ssl_session_st* nocapture readonly) local_unnamed_addr #0 {
  %2 = alloca i16, align 2
  %3 = bitcast i16* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %3) #13
  store i16 -21846, i16* %2, align 2
  %4 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 1
  %5 = load i16, i16* %4, align 4
  %6 = call zeroext i1 @_ZN4bssl30ssl_protocol_version_from_wireEPtt(i16* nonnull %2, i16 zeroext %5) #13
  %7 = load i16, i16* %2, align 2
  %8 = select i1 %6, i16 %7, i16 0
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %3) #13
  ret i16 %8
}

declare zeroext i1 @_ZN4bssl30ssl_protocol_version_from_wireEPtt(i16*, i16 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.env_md_st* @_ZN4bssl22ssl_session_get_digestEPK14ssl_session_st(%struct.ssl_session_st* nocapture readonly) local_unnamed_addr #0 {
  %2 = alloca i16, align 2
  %3 = bitcast i16* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %3) #13
  store i16 -21846, i16* %2, align 2
  %4 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 1
  %5 = load i16, i16* %4, align 4
  %6 = call zeroext i1 @_ZN4bssl30ssl_protocol_version_from_wireEPtt(i16* nonnull %2, i16 zeroext %5) #13
  %7 = load i16, i16* %2, align 2
  %8 = select i1 %6, i16 %7, i16 0
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %3) #13
  %9 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 20
  %10 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %9, align 8
  %11 = call %struct.env_md_st* @_ZN4bssl24ssl_get_handshake_digestEtPK13ssl_cipher_st(i16 zeroext %8, %struct.ssl_cipher_st* %10) #13
  ret %struct.env_md_st* %11
}

declare %struct.env_md_st* @_ZN4bssl24ssl_get_handshake_digestEtPK13ssl_cipher_st(i16 zeroext, %struct.ssl_cipher_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl19ssl_get_new_sessionEPNS_13SSL_HANDSHAKEE(%"struct.bssl::SSL_HANDSHAKE"* nocapture) local_unnamed_addr #0 {
  %2 = alloca %"struct.bssl::OPENSSL_timeval", align 8
  %3 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %4 = load %struct.ssl_st*, %struct.ssl_st** %3, align 8
  %5 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %4, i64 0, i32 20
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 512
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  tail call void @ERR_put_error(i32 16, i32 0, i32 209, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 356) #13
  br label %113

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %4, i64 0, i32 16, i32 0, i32 0, i32 0
  %12 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %11, align 8
  %13 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %12, i64 0, i32 1
  %14 = load %"struct.bssl::SSL_X509_METHOD"*, %"struct.bssl::SSL_X509_METHOD"** %13, align 8
  %15 = tail call %struct.ssl_session_st* @_ZN4bssl15ssl_session_newEPKNS_15SSL_X509_METHODE(%"struct.bssl::SSL_X509_METHOD"* %14)
  %16 = ptrtoint %struct.ssl_session_st* %15 to i64
  %17 = icmp eq %struct.ssl_session_st* %15, null
  br i1 %17, label %113, label %18

18:                                               ; preds = %10
  %19 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %4, i64 0, i32 26
  %20 = load i8, i8* %19, align 4
  %21 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %15, i64 0, i32 36
  %22 = load i8, i8* %21, align 8
  %23 = shl i8 %20, 4
  %24 = and i8 %23, 16
  %25 = and i8 %22, -17
  %26 = or i8 %25, %24
  store i8 %26, i8* %21, align 8
  %27 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %4, i64 0, i32 2
  %28 = load i16, i16* %27, align 8
  %29 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %15, i64 0, i32 1
  store i16 %28, i16* %29, align 4
  %30 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %4, i64 0, i32 24
  %31 = load %struct.ssl_quic_method_st*, %struct.ssl_quic_method_st** %30, align 8
  %32 = icmp ne %struct.ssl_quic_method_st* %31, null
  %33 = zext i1 %32 to i8
  %34 = shl nuw nsw i8 %33, 5
  %35 = and i8 %26, -33
  %36 = or i8 %34, %35
  store i8 %36, i8* %21, align 8
  %37 = bitcast %"struct.bssl::OPENSSL_timeval"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 16, i1 false)
  call void @_ZN4bssl20ssl_get_current_timeEPK6ssl_stPNS_15OPENSSL_timevalE(%struct.ssl_st* %4, %"struct.bssl::OPENSSL_timeval"* nonnull %2) #13
  %38 = getelementptr inbounds %"struct.bssl::OPENSSL_timeval", %"struct.bssl::OPENSSL_timeval"* %2, i64 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %15, i64 0, i32 19
  store i64 %39, i64* %40, align 8
  %41 = call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %4) #13
  %42 = icmp ugt i16 %41, 771
  %43 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %4, i64 0, i32 17, i32 0, i32 0, i32 0
  %44 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %43, align 8
  br i1 %42, label %45, label %49

45:                                               ; preds = %18
  %46 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %44, i64 0, i32 16
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %15, i64 0, i32 17
  store i32 %47, i32* %48, align 8
  br label %56

49:                                               ; preds = %18
  %50 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %44, i64 0, i32 15
  %51 = load i32, i32* %50, align 8
  %52 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %15, i64 0, i32 17
  store i32 %51, i32* %52, align 8
  %53 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %43, align 8
  %54 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %53, i64 0, i32 15
  %55 = load i32, i32* %54, align 8
  br label %56

56:                                               ; preds = %49, %45
  %57 = phi i32 [ %55, %49 ], [ 604800, %45 ]
  %58 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %15, i64 0, i32 18
  store i32 %57, i32* %58, align 4
  %59 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 1
  %60 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %59, align 8
  %61 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %60, i64 0, i32 6, i32 0, i32 0, i32 0
  %62 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %61, align 8
  %63 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %62, i64 0, i32 13
  %64 = load i8, i8* %63, align 8
  %65 = icmp ugt i8 %64, 32
  br i1 %65, label %107, label %66

66:                                               ; preds = %56
  %67 = icmp eq i8 %64, 0
  br i1 %67, label %77, label %68

68:                                               ; preds = %66
  %69 = zext i8 %64 to i64
  %70 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %62, i64 0, i32 14, i64 0
  %71 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %15, i64 0, i32 9, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %71, i8* align 1 %70, i64 %69, i1 false) #13
  %72 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %59, align 8
  %73 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %72, i64 0, i32 6, i32 0, i32 0, i32 0
  %74 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %73, align 8
  %75 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %74, i64 0, i32 13
  %76 = load i8, i8* %75, align 8
  br label %77

77:                                               ; preds = %66, %68
  %78 = phi i8 [ 0, %66 ], [ %76, %68 ]
  %79 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %15, i64 0, i32 8
  store i8 %78, i8* %79, align 4
  %80 = load i8, i8* %21, align 8
  %81 = or i8 %80, 4
  store i8 %81, i8* %21, align 8
  %82 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %15, i64 0, i32 16
  store i64 65, i64* %82, align 8
  %83 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 40
  %84 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %83, i64 0, i32 0, i32 0, i32 0
  %85 = load %struct.ssl_session_st*, %struct.ssl_session_st** %84, align 8
  %86 = bitcast %"class.std::__1::unique_ptr"* %83 to i64*
  store i64 %16, i64* %86, align 8
  %87 = icmp eq %struct.ssl_session_st* %85, null
  br i1 %87, label %94, label %88

88:                                               ; preds = %77
  %89 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %85, i64 0, i32 0
  %90 = call i32 @CRYPTO_refcount_dec_and_test_zero(i32* %89) #13
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %94, label %92

92:                                               ; preds = %88
  call void @_ZN14ssl_session_stD2Ev(%struct.ssl_session_st* nonnull %85) #13
  %93 = bitcast %struct.ssl_session_st* %85 to i8*
  call void @OPENSSL_free(i8* nonnull %93) #13
  br label %94

94:                                               ; preds = %77, %88, %92
  %95 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %4, i64 0, i32 14
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %95, i64 0, i32 0, i32 0, i32 0
  %97 = load %struct.ssl_session_st*, %struct.ssl_session_st** %96, align 8
  %98 = icmp eq %struct.ssl_session_st* %97, null
  br i1 %98, label %106, label %99

99:                                               ; preds = %94
  %100 = bitcast %"class.std::__1::unique_ptr"* %95 to i64*
  store i64 0, i64* %100, align 8
  %101 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %97, i64 0, i32 0
  %102 = call i32 @CRYPTO_refcount_dec_and_test_zero(i32* %101) #13
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %106, label %104

104:                                              ; preds = %99
  call void @_ZN14ssl_session_stD2Ev(%struct.ssl_session_st* nonnull %97) #13
  %105 = bitcast %struct.ssl_session_st* %97 to i8*
  call void @OPENSSL_free(i8* nonnull %105) #13
  br label %106

106:                                              ; preds = %94, %99, %104
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #13
  br label %113

107:                                              ; preds = %56
  call void @ERR_put_error(i32 16, i32 0, i32 68, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 388) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #13
  %108 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %15, i64 0, i32 0
  %109 = call i32 @CRYPTO_refcount_dec_and_test_zero(i32* %108) #13
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %113, label %111

111:                                              ; preds = %107
  call void @_ZN14ssl_session_stD2Ev(%struct.ssl_session_st* nonnull %15) #13
  %112 = bitcast %struct.ssl_session_st* %15 to i8*
  call void @OPENSSL_free(i8* nonnull %112) #13
  br label %113

113:                                              ; preds = %10, %106, %111, %107, %9
  %114 = phi i1 [ false, %9 ], [ false, %107 ], [ false, %111 ], [ true, %106 ], [ false, %10 ]
  ret i1 %114
}

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #2

declare zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4bssl15ssl_set_sessionEP6ssl_stP14ssl_session_st(%struct.ssl_st* nocapture, %struct.ssl_session_st*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 14
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %struct.ssl_session_st*, %struct.ssl_session_st** %4, align 8
  %6 = icmp eq %struct.ssl_session_st* %5, %1
  br i1 %6, label %23, label %7

7:                                                ; preds = %2
  %8 = icmp eq %struct.ssl_session_st* %1, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %1, i64 0, i32 0
  tail call void @CRYPTO_refcount_inc(i32* %10) #13
  %11 = load %struct.ssl_session_st*, %struct.ssl_session_st** %4, align 8
  br label %12

12:                                               ; preds = %7, %9
  %13 = phi %struct.ssl_session_st* [ %5, %7 ], [ %11, %9 ]
  %14 = ptrtoint %struct.ssl_session_st* %1 to i64
  %15 = bitcast %"class.std::__1::unique_ptr"* %3 to i64*
  store i64 %14, i64* %15, align 8
  %16 = icmp eq %struct.ssl_session_st* %13, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %13, i64 0, i32 0
  %19 = tail call i32 @CRYPTO_refcount_dec_and_test_zero(i32* %18) #13
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %17
  tail call void @_ZN14ssl_session_stD2Ev(%struct.ssl_session_st* nonnull %13) #13
  %22 = bitcast %struct.ssl_session_st* %13 to i8*
  tail call void @OPENSSL_free(i8* nonnull %22) #13
  br label %23

23:                                               ; preds = %12, %17, %21, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4bssl36ssl_ctx_rotate_ticket_encryption_keyEP10ssl_ctx_st(%struct.ssl_ctx_st*) local_unnamed_addr #0 {
  %2 = alloca %"struct.bssl::OPENSSL_timeval", align 8
  %3 = bitcast %"struct.bssl::OPENSSL_timeval"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 -86, i64 16, i1 false)
  call void @_ZN4bssl24ssl_ctx_get_current_timeEPK10ssl_ctx_stPNS_15OPENSSL_timevalE(%struct.ssl_ctx_st* %0, %"struct.bssl::OPENSSL_timeval"* nonnull %2) #13
  %4 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 2
  call void @CRYPTO_MUTEX_lock_read(%union.crypto_mutex_st* %4) #13
  %5 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 52
  %6 = getelementptr inbounds %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.53"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.bssl::TicketKey"*, %"struct.bssl::TicketKey"** %6, align 8
  %8 = icmp eq %"struct.bssl::TicketKey"* %7, null
  br i1 %8, label %28, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"struct.bssl::TicketKey", %"struct.bssl::TicketKey"* %7, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %17, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"struct.bssl::OPENSSL_timeval", %"struct.bssl::OPENSSL_timeval"* %2, i64 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = icmp ugt i64 %11, %15
  br i1 %16, label %17, label %28

17:                                               ; preds = %13, %9
  %18 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 53, i32 0, i32 0, i32 0
  %19 = load %"struct.bssl::TicketKey"*, %"struct.bssl::TicketKey"** %18, align 8
  %20 = icmp eq %"struct.bssl::TicketKey"* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"struct.bssl::TicketKey", %"struct.bssl::TicketKey"* %19, i64 0, i32 3
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"struct.bssl::OPENSSL_timeval", %"struct.bssl::OPENSSL_timeval"* %2, i64 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = icmp ugt i64 %23, %25
  br i1 %26, label %27, label %28

27:                                               ; preds = %17, %21
  call void @CRYPTO_MUTEX_unlock_read(%union.crypto_mutex_st* %4) #13
  br label %91

28:                                               ; preds = %1, %13, %21
  call void @CRYPTO_MUTEX_unlock_read(%union.crypto_mutex_st* %4) #13
  call void @CRYPTO_MUTEX_lock_write(%union.crypto_mutex_st* %4) #13
  %29 = load %"struct.bssl::TicketKey"*, %"struct.bssl::TicketKey"** %6, align 8
  %30 = icmp eq %"struct.bssl::TicketKey"* %29, null
  br i1 %30, label %39, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"struct.bssl::TicketKey", %"struct.bssl::TicketKey"* %29, i64 0, i32 3
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %77, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"struct.bssl::OPENSSL_timeval", %"struct.bssl::OPENSSL_timeval"* %2, i64 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = icmp ugt i64 %33, %37
  br i1 %38, label %77, label %39

39:                                               ; preds = %28, %35
  %40 = call i8* @OPENSSL_malloc(i64 56) #13
  %41 = icmp eq i8* %40, null
  br i1 %41, label %76, label %42

42:                                               ; preds = %39
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %40, i8 0, i64 56, i1 false) #13
  %43 = ptrtoint i8* %40 to i64
  %44 = call i32 @RAND_bytes(i8* nonnull %40, i64 16) #13
  %45 = getelementptr inbounds i8, i8* %40, i64 16
  %46 = call i32 @RAND_bytes(i8* %45, i64 16) #13
  %47 = getelementptr inbounds i8, i8* %40, i64 32
  %48 = call i32 @RAND_bytes(i8* %47, i64 16) #13
  %49 = getelementptr inbounds %"struct.bssl::OPENSSL_timeval", %"struct.bssl::OPENSSL_timeval"* %2, i64 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = add i64 %50, 172800
  %52 = getelementptr inbounds i8, i8* %40, i64 48
  %53 = bitcast i8* %52 to i64*
  store i64 %51, i64* %53, align 8
  %54 = load %"struct.bssl::TicketKey"*, %"struct.bssl::TicketKey"** %6, align 8
  %55 = icmp eq %"struct.bssl::TicketKey"* %54, null
  br i1 %55, label %56, label %58

56:                                               ; preds = %42
  %57 = bitcast %"class.std::__1::unique_ptr.53"* %5 to i64*
  store i64 %43, i64* %57, align 8
  br label %77

58:                                               ; preds = %42
  %59 = getelementptr inbounds %"struct.bssl::TicketKey", %"struct.bssl::TicketKey"* %54, i64 0, i32 3
  %60 = load i64, i64* %59, align 8
  %61 = add i64 %60, 172800
  store i64 %61, i64* %59, align 8
  %62 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 53
  %63 = bitcast %"class.std::__1::unique_ptr.53"* %5 to i64*
  %64 = load i64, i64* %63, align 8
  store %"struct.bssl::TicketKey"* null, %"struct.bssl::TicketKey"** %6, align 8
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.53"* %62, i64 0, i32 0, i32 0, i32 0
  %66 = load %"struct.bssl::TicketKey"*, %"struct.bssl::TicketKey"** %65, align 8
  %67 = bitcast %"class.std::__1::unique_ptr.53"* %62 to i64*
  store i64 %64, i64* %67, align 8
  %68 = icmp eq %"struct.bssl::TicketKey"* %66, null
  br i1 %68, label %69, label %70

69:                                               ; preds = %58
  store i64 %43, i64* %63, align 8
  br label %77

70:                                               ; preds = %58
  %71 = getelementptr inbounds %"struct.bssl::TicketKey", %"struct.bssl::TicketKey"* %66, i64 0, i32 0, i64 0
  call void @OPENSSL_free(i8* %71) #13
  %72 = load %"struct.bssl::TicketKey"*, %"struct.bssl::TicketKey"** %6, align 8
  store i64 %43, i64* %63, align 8
  %73 = icmp eq %"struct.bssl::TicketKey"* %72, null
  br i1 %73, label %77, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"struct.bssl::TicketKey", %"struct.bssl::TicketKey"* %72, i64 0, i32 0, i64 0
  call void @OPENSSL_free(i8* %75) #13
  br label %77

76:                                               ; preds = %39
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1, i64 0, i64 0), i32 196) #13
  br label %89

77:                                               ; preds = %69, %56, %70, %74, %35, %31
  %78 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 53, i32 0, i32 0, i32 0
  %79 = load %"struct.bssl::TicketKey"*, %"struct.bssl::TicketKey"** %78, align 8
  %80 = icmp eq %"struct.bssl::TicketKey"* %79, null
  br i1 %80, label %89, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"struct.bssl::TicketKey", %"struct.bssl::TicketKey"* %79, i64 0, i32 3
  %83 = load i64, i64* %82, align 8
  %84 = getelementptr inbounds %"struct.bssl::OPENSSL_timeval", %"struct.bssl::OPENSSL_timeval"* %2, i64 0, i32 0
  %85 = load i64, i64* %84, align 8
  %86 = icmp ugt i64 %83, %85
  br i1 %86, label %89, label %87

87:                                               ; preds = %81
  store %"struct.bssl::TicketKey"* null, %"struct.bssl::TicketKey"** %78, align 8
  %88 = getelementptr inbounds %"struct.bssl::TicketKey", %"struct.bssl::TicketKey"* %79, i64 0, i32 0, i64 0
  call void @OPENSSL_free(i8* %88) #13
  br label %89

89:                                               ; preds = %77, %76, %87, %81
  %90 = phi i32 [ 0, %76 ], [ 1, %81 ], [ 1, %87 ], [ 1, %77 ]
  call void @CRYPTO_MUTEX_unlock_write(%union.crypto_mutex_st* %4) #13
  br label %91

91:                                               ; preds = %27, %89
  %92 = phi i32 [ %90, %89 ], [ 1, %27 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #13
  ret i32 %92
}

declare void @_ZN4bssl24ssl_ctx_get_current_timeEPK10ssl_ctx_stPNS_15OPENSSL_timevalE(%struct.ssl_ctx_st*, %"struct.bssl::OPENSSL_timeval"*) local_unnamed_addr #2

declare i32 @RAND_bytes(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4bssl18ssl_encrypt_ticketEPNS_13SSL_HANDSHAKEEP6cbb_stPK14ssl_session_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, %struct.cbb_st*, %struct.ssl_session_st*) local_unnamed_addr #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.bssl::internal::StackAllocated.119", align 8
  %7 = alloca %"class.bssl::internal::StackAllocated.120", align 8
  %8 = alloca [16 x i8], align 16
  %9 = alloca [16 x i8], align 16
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i64, align 8
  %15 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #13
  store i8* null, i8** %13, align 8
  %16 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  store i64 -6148914691236517206, i64* %14, align 8
  %17 = call i32 @SSL_SESSION_to_bytes_for_ticket(%struct.ssl_session_st* %2, i8** nonnull %13, i64* nonnull %14) #13
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %166, label %19

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %21 = load %struct.ssl_st*, %struct.ssl_st** %20, align 8
  %22 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %21, i64 0, i32 17, i32 0, i32 0, i32 0
  %23 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %22, align 8
  %24 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %23, i64 0, i32 73
  %25 = load %struct.ssl_ticket_aead_method_st*, %struct.ssl_ticket_aead_method_st** %24, align 8
  %26 = icmp eq %struct.ssl_ticket_aead_method_st* %25, null
  %27 = load i8*, i8** %13, align 8
  %28 = load i64, i64* %14, align 8
  br i1 %26, label %57, label %29

29:                                               ; preds = %19
  %30 = getelementptr inbounds %struct.ssl_ticket_aead_method_st, %struct.ssl_ticket_aead_method_st* %25, i64 0, i32 0
  %31 = load i64 (%struct.ssl_st*)*, i64 (%struct.ssl_st*)** %30, align 8
  %32 = call i64 %31(%struct.ssl_st* %21) #13
  %33 = add i64 %32, %28
  %34 = icmp ult i64 %33, %32
  br i1 %34, label %35, label %36

35:                                               ; preds = %29
  call void @ERR_put_error(i32 16, i32 0, i32 69, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 541) #13
  br label %163

36:                                               ; preds = %29
  %37 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %38 = call i32 @CBB_reserve(%struct.cbb_st* %1, i8** nonnull %4, i64 %33) #13
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %55, label %40

40:                                               ; preds = %36
  %41 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #13
  store i64 -6148914691236517206, i64* %5, align 8
  %42 = getelementptr inbounds %struct.ssl_ticket_aead_method_st, %struct.ssl_ticket_aead_method_st* %25, i64 0, i32 1
  %43 = load i32 (%struct.ssl_st*, i8*, i64*, i64, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i64*, i64, i8*, i64)** %42, align 8
  %44 = load i8*, i8** %4, align 8
  %45 = call i32 %43(%struct.ssl_st* %21, i8* %44, i64* nonnull %5, i64 %33, i8* %27, i64 %28) #13
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %40
  call void @ERR_put_error(i32 16, i32 0, i32 276, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 553) #13
  br label %53

48:                                               ; preds = %40
  %49 = load i64, i64* %5, align 8
  %50 = call i32 @CBB_did_write(%struct.cbb_st* %1, i64 %49) #13
  %51 = icmp ne i32 %50, 0
  %52 = zext i1 %51 to i32
  br label %53

53:                                               ; preds = %48, %47
  %54 = phi i32 [ 0, %47 ], [ %52, %48 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #13
  br label %55

55:                                               ; preds = %53, %36
  %56 = phi i32 [ %54, %53 ], [ 0, %36 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #13
  br label %163

57:                                               ; preds = %19
  %58 = bitcast %"class.bssl::internal::StackAllocated.119"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %58) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 -86, i64 144, i1 false) #13
  %59 = getelementptr inbounds %"class.bssl::internal::StackAllocated.119", %"class.bssl::internal::StackAllocated.119"* %6, i64 0, i32 0
  call void @EVP_CIPHER_CTX_init(%struct.evp_cipher_ctx_st* nonnull %59) #13
  %60 = bitcast %"class.bssl::internal::StackAllocated.120"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %60) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 -86, i64 104, i1 false) #13
  %61 = getelementptr inbounds %"class.bssl::internal::StackAllocated.120", %"class.bssl::internal::StackAllocated.120"* %7, i64 0, i32 0
  call void @HMAC_CTX_init(%struct.hmac_ctx_st* nonnull %61) #13
  %62 = icmp ugt i64 %28, 65407
  br i1 %62, label %63, label %65

63:                                               ; preds = %57
  %64 = call i32 @CBB_add_bytes(%struct.cbb_st* %1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @_ZZN4bsslL34ssl_encrypt_ticket_with_cipher_ctxEPNS_13SSL_HANDSHAKEEP6cbb_stPKhmE18kTicketPlaceholder, i64 0, i64 0), i64 16) #13
  br label %160

65:                                               ; preds = %57
  %66 = load %struct.ssl_st*, %struct.ssl_st** %20, align 8
  %67 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %66, i64 0, i32 17, i32 0, i32 0, i32 0
  %68 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %67, align 8
  %69 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %69) #13
  %70 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %69, i8 -86, i64 16, i1 false) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %70) #13
  %71 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %68, i64 0, i32 54
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %70, i8 -86, i64 16, i1 false) #13
  %72 = load i32 (%struct.ssl_st*, i8*, i8*, %struct.evp_cipher_ctx_st*, %struct.hmac_ctx_st*, i32)*, i32 (%struct.ssl_st*, i8*, i8*, %struct.evp_cipher_ctx_st*, %struct.hmac_ctx_st*, i32)** %71, align 8
  %73 = icmp eq i32 (%struct.ssl_st*, i8*, i8*, %struct.evp_cipher_ctx_st*, %struct.hmac_ctx_st*, i32)* %72, null
  br i1 %73, label %77, label %74

74:                                               ; preds = %65
  %75 = call i32 %72(%struct.ssl_st* %66, i8* nonnull %70, i8* nonnull %69, %struct.evp_cipher_ctx_st* nonnull %59, %struct.hmac_ctx_st* nonnull %61, i32 1) #13
  %76 = icmp slt i32 %75, 0
  br i1 %76, label %158, label %101

77:                                               ; preds = %65
  %78 = call i32 @_ZN4bssl36ssl_ctx_rotate_ticket_encryption_keyEP10ssl_ctx_st(%struct.ssl_ctx_st* %68) #13
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %158, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %68, i64 0, i32 2
  call void @CRYPTO_MUTEX_lock_read(%union.crypto_mutex_st* %81) #13
  %82 = call i32 @RAND_bytes(i8* nonnull %69, i64 16) #13
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %100, label %84

84:                                               ; preds = %80
  %85 = call %struct.evp_cipher_st* @EVP_aes_128_cbc() #13
  %86 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %68, i64 0, i32 52, i32 0, i32 0, i32 0
  %87 = load %"struct.bssl::TicketKey"*, %"struct.bssl::TicketKey"** %86, align 8
  %88 = getelementptr inbounds %"struct.bssl::TicketKey", %"struct.bssl::TicketKey"* %87, i64 0, i32 2, i64 0
  %89 = call i32 @EVP_EncryptInit_ex(%struct.evp_cipher_ctx_st* nonnull %59, %struct.evp_cipher_st* %85, %struct.engine_st* null, i8* %88, i8* nonnull %69) #13
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %100, label %91

91:                                               ; preds = %84
  %92 = load %"struct.bssl::TicketKey"*, %"struct.bssl::TicketKey"** %86, align 8
  %93 = getelementptr inbounds %"struct.bssl::TicketKey", %"struct.bssl::TicketKey"* %92, i64 0, i32 1, i64 0
  %94 = call %struct.env_md_st* @EVP_sha256() #13
  %95 = call i32 @HMAC_Init_ex(%struct.hmac_ctx_st* nonnull %61, i8* %93, i64 16, %struct.env_md_st* %94, %struct.engine_st* null) #13
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %100, label %97

97:                                               ; preds = %91
  %98 = load %"struct.bssl::TicketKey"*, %"struct.bssl::TicketKey"** %86, align 8
  %99 = getelementptr inbounds %"struct.bssl::TicketKey", %"struct.bssl::TicketKey"* %98, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %70, i8* align 1 %99, i64 16, i1 false) #13
  call void @CRYPTO_MUTEX_unlock_read(%union.crypto_mutex_st* %81) #13
  br label %101

100:                                              ; preds = %91, %84, %80
  call void @CRYPTO_MUTEX_unlock_read(%union.crypto_mutex_st* %81) #13
  br label %158

101:                                              ; preds = %97, %74
  %102 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %103 = call i32 @CBB_add_bytes(%struct.cbb_st* %1, i8* nonnull %70, i64 16) #13
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %156, label %105

105:                                              ; preds = %101
  %106 = call i32 @EVP_CIPHER_CTX_iv_length(%struct.evp_cipher_ctx_st* nonnull %59) #13
  %107 = zext i32 %106 to i64
  %108 = call i32 @CBB_add_bytes(%struct.cbb_st* %1, i8* nonnull %69, i64 %107) #13
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %156, label %110

110:                                              ; preds = %105
  %111 = add nuw nsw i64 %28, 32
  %112 = call i32 @CBB_reserve(%struct.cbb_st* %1, i8** nonnull %10, i64 %111) #13
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %156, label %114

114:                                              ; preds = %110
  %115 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %115) #13
  store i32 -1431655766, i32* %11, align 4
  %116 = load i8*, i8** %10, align 8
  %117 = trunc i64 %28 to i32
  %118 = call i32 @EVP_EncryptUpdate(%struct.evp_cipher_ctx_st* nonnull %59, i8* %116, i32* nonnull %11, i8* %27, i32 %117) #13
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %154, label %120

120:                                              ; preds = %114
  %121 = load i32, i32* %11, align 4
  %122 = sext i32 %121 to i64
  %123 = load i8*, i8** %10, align 8
  %124 = getelementptr inbounds i8, i8* %123, i64 %122
  %125 = call i32 @EVP_EncryptFinal_ex(%struct.evp_cipher_ctx_st* nonnull %59, i8* %124, i32* nonnull %11) #13
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %154, label %127

127:                                              ; preds = %120
  %128 = load i32, i32* %11, align 4
  %129 = sext i32 %128 to i64
  %130 = add nsw i64 %129, %122
  %131 = call i32 @CBB_did_write(%struct.cbb_st* %1, i64 %130) #13
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %154, label %133

133:                                              ; preds = %127
  %134 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %134) #13
  store i32 -1431655766, i32* %12, align 4
  %135 = call i8* @CBB_data(%struct.cbb_st* %1) #13
  %136 = call i64 @CBB_len(%struct.cbb_st* %1) #13
  %137 = call i32 @HMAC_Update(%struct.hmac_ctx_st* nonnull %61, i8* %135, i64 %136) #13
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %152, label %139

139:                                              ; preds = %133
  %140 = call i32 @CBB_reserve(%struct.cbb_st* %1, i8** nonnull %10, i64 64) #13
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %152, label %142

142:                                              ; preds = %139
  %143 = load i8*, i8** %10, align 8
  %144 = call i32 @HMAC_Final(%struct.hmac_ctx_st* nonnull %61, i8* %143, i32* nonnull %12) #13
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %152, label %146

146:                                              ; preds = %142
  %147 = load i32, i32* %12, align 4
  %148 = zext i32 %147 to i64
  %149 = call i32 @CBB_did_write(%struct.cbb_st* %1, i64 %148) #13
  %150 = icmp ne i32 %149, 0
  %151 = zext i1 %150 to i32
  br label %152

152:                                              ; preds = %146, %142, %139, %133
  %153 = phi i32 [ 0, %142 ], [ 0, %139 ], [ 0, %133 ], [ %151, %146 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %134) #13
  br label %154

154:                                              ; preds = %152, %127, %120, %114
  %155 = phi i32 [ %153, %152 ], [ 0, %114 ], [ 0, %120 ], [ 0, %127 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %115) #13
  br label %156

156:                                              ; preds = %154, %110, %105, %101
  %157 = phi i32 [ %155, %154 ], [ 0, %110 ], [ 0, %105 ], [ 0, %101 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #13
  br label %158

158:                                              ; preds = %156, %100, %77, %74
  %159 = phi i32 [ %157, %156 ], [ 0, %100 ], [ 0, %74 ], [ 0, %77 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %70) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %69) #13
  br label %160

160:                                              ; preds = %63, %158
  %161 = phi i32 [ %64, %63 ], [ %159, %158 ]
  call void @HMAC_CTX_cleanup(%struct.hmac_ctx_st* nonnull %61) #13
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %60) #13
  %162 = call i32 @EVP_CIPHER_CTX_cleanup(%struct.evp_cipher_ctx_st* nonnull %59) #13
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %58) #13
  br label %163

163:                                              ; preds = %55, %35, %160
  %164 = phi i32 [ %161, %160 ], [ 0, %35 ], [ %56, %55 ]
  %165 = load i8*, i8** %13, align 8
  call void @OPENSSL_free(i8* %165) #13
  br label %166

166:                                              ; preds = %3, %163
  %167 = phi i32 [ %164, %163 ], [ -1, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #13
  ret i32 %167
}

declare i32 @SSL_SESSION_to_bytes_for_ticket(%struct.ssl_session_st*, i8**, i64*) local_unnamed_addr #2

declare void @OPENSSL_free(i8*) local_unnamed_addr #2

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZN4bssl28ssl_session_is_context_validEPKNS_13SSL_HANDSHAKEEPK14ssl_session_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, %struct.ssl_session_st* readonly) local_unnamed_addr #3 {
  %3 = icmp eq %struct.ssl_session_st* %1, null
  br i1 %3, label %23, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %1, i64 0, i32 8
  %6 = load i8, i8* %5, align 4
  %7 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 1
  %8 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %7, align 8
  %9 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %8, i64 0, i32 6, i32 0, i32 0, i32 0
  %10 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %9, align 8
  %11 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %10, i64 0, i32 13
  %12 = load i8, i8* %11, align 8
  %13 = icmp eq i8 %6, %12
  br i1 %13, label %14, label %23

14:                                               ; preds = %4
  %15 = icmp eq i8 %6, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %14
  %17 = zext i8 %6 to i64
  %18 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %10, i64 0, i32 14, i64 0
  %19 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %1, i64 0, i32 9, i64 0
  %20 = tail call i32 @bcmp(i8* %19, i8* %18, i64 %17)
  %21 = icmp eq i32 %20, 0
  %22 = zext i1 %21 to i32
  br label %23

23:                                               ; preds = %16, %14, %4, %2
  %24 = phi i32 [ 0, %2 ], [ 0, %4 ], [ %22, %16 ], [ 1, %14 ]
  ret i32 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4bssl25ssl_session_is_time_validEPK6ssl_stPK14ssl_session_st(%struct.ssl_st*, %struct.ssl_session_st* readonly) local_unnamed_addr #0 {
  %3 = alloca %"struct.bssl::OPENSSL_timeval", align 8
  %4 = icmp eq %struct.ssl_session_st* %1, null
  br i1 %4, label %21, label %5

5:                                                ; preds = %2
  %6 = bitcast %"struct.bssl::OPENSSL_timeval"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZN4bssl20ssl_get_current_timeEPK6ssl_stPNS_15OPENSSL_timevalE(%struct.ssl_st* %0, %"struct.bssl::OPENSSL_timeval"* nonnull %3) #13
  %7 = getelementptr inbounds %"struct.bssl::OPENSSL_timeval", %"struct.bssl::OPENSSL_timeval"* %3, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %1, i64 0, i32 19
  %10 = load i64, i64* %9, align 8
  %11 = icmp ult i64 %8, %10
  br i1 %11, label %19, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %1, i64 0, i32 17
  %14 = load i32, i32* %13, align 8
  %15 = zext i32 %14 to i64
  %16 = sub i64 %8, %10
  %17 = icmp ult i64 %16, %15
  %18 = zext i1 %17 to i32
  br label %19

19:                                               ; preds = %5, %12
  %20 = phi i32 [ %18, %12 ], [ 0, %5 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  br label %21

21:                                               ; preds = %2, %19
  %22 = phi i32 [ %20, %19 ], [ 0, %2 ]
  ret i32 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4bssl24ssl_session_is_resumableEPKNS_13SSL_HANDSHAKEEPK14ssl_session_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, %struct.ssl_session_st* readonly) local_unnamed_addr #0 {
  %3 = alloca %"struct.bssl::OPENSSL_timeval", align 8
  %4 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %5 = load %struct.ssl_st*, %struct.ssl_st** %4, align 8
  %6 = icmp eq %struct.ssl_session_st* %1, null
  br i1 %6, label %90, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %1, i64 0, i32 8
  %9 = load i8, i8* %8, align 4
  %10 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 1
  %11 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %10, align 8
  %12 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %11, i64 0, i32 6, i32 0, i32 0, i32 0
  %13 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %12, align 8
  %14 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %13, i64 0, i32 13
  %15 = load i8, i8* %14, align 8
  %16 = icmp eq i8 %9, %15
  br i1 %16, label %17, label %90

17:                                               ; preds = %7
  %18 = icmp eq i8 %9, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %17
  %20 = zext i8 %9 to i64
  %21 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %13, i64 0, i32 14, i64 0
  %22 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %1, i64 0, i32 9, i64 0
  %23 = tail call i32 @bcmp(i8* %22, i8* %21, i64 %20) #13
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %90

25:                                               ; preds = %19, %17
  %26 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %5, i64 0, i32 26
  %27 = load i8, i8* %26, align 4
  %28 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %1, i64 0, i32 36
  %29 = load i8, i8* %28, align 8
  %30 = lshr i8 %29, 4
  %31 = xor i8 %30, %27
  %32 = and i8 %31, 1
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %90

34:                                               ; preds = %25
  %35 = bitcast %"struct.bssl::OPENSSL_timeval"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 16, i1 false) #13
  call void @_ZN4bssl20ssl_get_current_timeEPK6ssl_stPNS_15OPENSSL_timevalE(%struct.ssl_st* %5, %"struct.bssl::OPENSSL_timeval"* nonnull %3) #13
  %36 = getelementptr inbounds %"struct.bssl::OPENSSL_timeval", %"struct.bssl::OPENSSL_timeval"* %3, i64 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %1, i64 0, i32 19
  %39 = load i64, i64* %38, align 8
  %40 = icmp ult i64 %37, %39
  br i1 %40, label %41, label %42

41:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #13
  br label %90

42:                                               ; preds = %34
  %43 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %1, i64 0, i32 17
  %44 = load i32, i32* %43, align 8
  %45 = zext i32 %44 to i64
  %46 = sub i64 %37, %39
  %47 = icmp ult i64 %46, %45
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #13
  br i1 %47, label %48, label %90

48:                                               ; preds = %42
  %49 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %5, i64 0, i32 2
  %50 = load i16, i16* %49, align 8
  %51 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %1, i64 0, i32 1
  %52 = load i16, i16* %51, align 4
  %53 = icmp eq i16 %50, %52
  br i1 %53, label %54, label %90

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 43
  %56 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %55, align 8
  %57 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %1, i64 0, i32 20
  %58 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %57, align 8
  %59 = icmp eq %struct.ssl_cipher_st* %56, %58
  br i1 %59, label %60, label %90

60:                                               ; preds = %54
  %61 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %62 = bitcast %struct.stack_st_CRYPTO_BUFFER** %61 to %struct.stack_st**
  %63 = load %struct.stack_st*, %struct.stack_st** %62, align 8
  %64 = call i64 @sk_num(%struct.stack_st* %63) #13
  %65 = icmp eq i64 %64, 0
  %66 = load i8, i8* %28, align 8
  %67 = and i8 %66, 2
  %68 = icmp eq i8 %67, 0
  %69 = and i1 %65, %68
  br i1 %69, label %81, label %70

70:                                               ; preds = %60
  %71 = lshr i8 %66, 1
  %72 = and i8 %71, 1
  %73 = zext i8 %72 to i32
  %74 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %10, align 8
  %75 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %74, i64 0, i32 23
  %76 = load i16, i16* %75, align 1
  %77 = lshr i16 %76, 5
  %78 = and i16 %77, 1
  %79 = zext i16 %78 to i32
  %80 = icmp eq i32 %73, %79
  br i1 %80, label %81, label %90

81:                                               ; preds = %60, %70
  %82 = load %struct.ssl_st*, %struct.ssl_st** %4, align 8
  %83 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %82, i64 0, i32 24
  %84 = load %struct.ssl_quic_method_st*, %struct.ssl_quic_method_st** %83, align 8
  %85 = icmp eq %struct.ssl_quic_method_st* %84, null
  %86 = and i8 %66, 32
  %87 = icmp ne i8 %86, 0
  %88 = xor i1 %85, %87
  %89 = zext i1 %88 to i32
  br label %90

90:                                               ; preds = %42, %19, %7, %2, %41, %81, %70, %54, %48, %25
  %91 = phi i32 [ 0, %70 ], [ 0, %54 ], [ 0, %48 ], [ 0, %42 ], [ 0, %25 ], [ 0, %19 ], [ %89, %81 ], [ 0, %41 ], [ 0, %2 ], [ 0, %7 ]
  ret i32 %91
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4bssl20ssl_get_prev_sessionEPNS_13SSL_HANDSHAKEEPNSt3__110unique_ptrI14ssl_session_stNS_8internal7DeleterIS4_EEEEPbSA_PK22ssl_early_callback_ctx(%"struct.bssl::SSL_HANDSHAKE"*, %"class.std::__1::unique_ptr"* nocapture, i8* nocapture, i8* nocapture, %struct.ssl_early_callback_ctx*) local_unnamed_addr #0 {
  %6 = alloca %"struct.bssl::OPENSSL_timeval", align 8
  %7 = alloca %struct.LHASH_CMP_KEY_SSL_SESSION, align 8
  %8 = alloca i32, align 4
  %9 = alloca %"class.bssl::Span.52", align 8
  %10 = alloca i32, align 4
  %11 = alloca %"class.std::__1::unique_ptr", align 8
  %12 = alloca i8, align 1
  %13 = alloca %struct.cbs_st, align 8
  %14 = alloca <2 x i64>, align 16
  %15 = bitcast <2 x i64>* %14 to %"class.bssl::Span.52"*
  %16 = bitcast %"class.std::__1::unique_ptr"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %11, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.std::__1::unique_ptr"* %11 to i64*
  store i64 0, i64* %18, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #13
  store i8 0, i8* %12, align 1
  %19 = bitcast %struct.cbs_st* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #13
  %20 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %13, i64 0, i32 0
  %21 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %13, i64 0, i32 1
  %22 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %23 = bitcast %struct.cbs_st* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 16, i1 false)
  %24 = load %struct.ssl_st*, %struct.ssl_st** %22, align 8
  %25 = tail call i32 @SSL_get_options(%struct.ssl_st* %24) #13
  %26 = and i32 %25, 16384
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %41

28:                                               ; preds = %5
  %29 = call zeroext i1 @_ZN4bssl30ssl_client_hello_get_extensionEPK22ssl_early_callback_ctxP6cbs_stt(%struct.ssl_early_callback_ctx* %4, %struct.cbs_st* nonnull %13, i16 zeroext 35) #13
  br i1 %29, label %30, label %41

30:                                               ; preds = %28
  %31 = call i64 @CBS_len(%struct.cbs_st* nonnull %13) #13
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %41, label %33

33:                                               ; preds = %30
  %34 = load i8*, i8** %20, align 8
  %35 = load i64, i64* %21, align 8
  %36 = getelementptr inbounds %struct.ssl_early_callback_ctx, %struct.ssl_early_callback_ctx* %4, i64 0, i32 6
  %37 = bitcast i8** %36 to <2 x i64>*
  %38 = load <2 x i64>, <2 x i64>* %37, align 8
  store <2 x i64> %38, <2 x i64>* %14, align 16
  %39 = call i32 @_ZN4bssl18ssl_process_ticketEPNS_13SSL_HANDSHAKEEPNSt3__110unique_ptrI14ssl_session_stNS_8internal7DeleterIS4_EEEEPbNS_4SpanIKhEESD_(%"struct.bssl::SSL_HANDSHAKE"* %0, %"class.std::__1::unique_ptr"* nonnull %11, i8* nonnull %12, i8* %34, i64 %35, %"class.bssl::Span.52"* nonnull byval(%"class.bssl::Span.52") align 8 %15) #13
  switch i32 %39, label %167 [
    i32 1, label %40
    i32 3, label %182
  ]

40:                                               ; preds = %33
  br label %182

41:                                               ; preds = %28, %30, %5
  %42 = phi i8 [ 1, %30 ], [ 0, %28 ], [ 0, %5 ]
  %43 = getelementptr inbounds %struct.ssl_early_callback_ctx, %struct.ssl_early_callback_ctx* %4, i64 0, i32 6
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds %struct.ssl_early_callback_ctx, %struct.ssl_early_callback_ctx* %4, i64 0, i32 7
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.bssl::Span.52"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47)
  %48 = getelementptr inbounds %"class.bssl::Span.52", %"class.bssl::Span.52"* %9, i64 0, i32 0
  store i8* %44, i8** %48, align 8
  %49 = getelementptr inbounds %"class.bssl::Span.52", %"class.bssl::Span.52"* %9, i64 0, i32 1
  store i64 %46, i64* %49, align 8
  %50 = load %struct.ssl_st*, %struct.ssl_st** %22, align 8
  store %struct.ssl_session_st* null, %struct.ssl_session_st** %17, align 8
  %51 = add i64 %46, -1
  %52 = icmp ugt i64 %51, 31
  br i1 %52, label %165, label %53

53:                                               ; preds = %41
  %54 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %50, i64 0, i32 17, i32 0, i32 0, i32 0
  %55 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %54, align 8
  %56 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %55, i64 0, i32 14
  %57 = load i32, i32* %56, align 4
  %58 = and i32 %57, 256
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %99

60:                                               ; preds = %53
  %61 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %61) #13
  %62 = icmp ult i64 %46, 4
  store i32 -1431655766, i32* %8, align 4
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  store i32 0, i32* %8, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %61, i8* align 1 %44, i64 %46, i1 false) #13
  br label %64

64:                                               ; preds = %63, %60
  %65 = phi i8* [ %44, %60 ], [ %61, %63 ]
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i32
  %68 = getelementptr inbounds i8, i8* %65, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i32
  %71 = shl nuw nsw i32 %70, 8
  %72 = or i32 %71, %67
  %73 = getelementptr inbounds i8, i8* %65, i64 2
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i32
  %76 = shl nuw nsw i32 %75, 16
  %77 = or i32 %72, %76
  %78 = getelementptr inbounds i8, i8* %65, i64 3
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i32
  %81 = shl nuw i32 %80, 24
  %82 = or i32 %77, %81
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %61) #13
  %83 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %55, i64 0, i32 2
  call void @CRYPTO_MUTEX_lock_read(%union.crypto_mutex_st* %83) #13
  %84 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %54, align 8
  %85 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %84, i64 0, i32 9
  %86 = bitcast %struct.lhash_st_SSL_SESSION** %85 to %struct.lhash_st**
  %87 = load %struct.lhash_st*, %struct.lhash_st** %86, align 8
  %88 = bitcast %struct.LHASH_CMP_KEY_SSL_SESSION* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %88) #13
  %89 = getelementptr inbounds %struct.LHASH_CMP_KEY_SSL_SESSION, %struct.LHASH_CMP_KEY_SSL_SESSION* %7, i64 0, i32 0
  %90 = getelementptr inbounds %struct.LHASH_CMP_KEY_SSL_SESSION, %struct.LHASH_CMP_KEY_SSL_SESSION* %7, i64 0, i32 1
  store i32 (i8*, %struct.ssl_session_st*)* @"_ZZN4bsslL18ssl_lookup_sessionEPNS_13SSL_HANDSHAKEEPNSt3__110unique_ptrI14ssl_session_stNS_8internal7DeleterIS4_EEEENS_4SpanIKhEEEN3$_18__invokeEPKvPKS4_", i32 (i8*, %struct.ssl_session_st*)** %89, align 8
  %91 = bitcast i8** %90 to %"class.bssl::Span.52"**
  store %"class.bssl::Span.52"* %9, %"class.bssl::Span.52"** %91, align 8
  %92 = call i8* @lh_retrieve_key(%struct.lhash_st* %87, i8* nonnull %88, i32 %82, i32 (i8*, i8*)* nonnull @_Z27lh_SSL_SESSION_call_cmp_keyPKvS0_) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %88) #13
  %93 = icmp eq i8* %92, null
  br i1 %93, label %97, label %94

94:                                               ; preds = %64
  %95 = bitcast i8* %92 to i32*
  call void @CRYPTO_refcount_inc(i32* nonnull %95) #13
  %96 = ptrtoint i8* %92 to i64
  call void @CRYPTO_MUTEX_unlock_read(%union.crypto_mutex_st* %83) #13
  br label %128

97:                                               ; preds = %64
  call void @CRYPTO_MUTEX_unlock_read(%union.crypto_mutex_st* %83) #13
  %98 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %54, align 8
  br label %99

99:                                               ; preds = %97, %53
  %100 = phi %struct.ssl_ctx_st* [ %98, %97 ], [ %55, %53 ]
  %101 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %100, i64 0, i32 19
  %102 = load %struct.ssl_session_st* (%struct.ssl_st*, i8*, i32, i32*)*, %struct.ssl_session_st* (%struct.ssl_st*, i8*, i32, i32*)** %101, align 8
  %103 = icmp eq %struct.ssl_session_st* (%struct.ssl_st*, i8*, i32, i32*)* %102, null
  br i1 %103, label %154, label %104

104:                                              ; preds = %99
  %105 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %105) #13
  store i32 1, i32* %10, align 4
  %106 = load i8*, i8** %48, align 8
  %107 = load i64, i64* %49, align 8
  %108 = trunc i64 %107 to i32
  %109 = call %struct.ssl_session_st* %102(%struct.ssl_st* %50, i8* %106, i32 %108, i32* nonnull %10) #13
  %110 = ptrtoint %struct.ssl_session_st* %109 to i64
  %111 = icmp eq %struct.ssl_session_st* %109, null
  br i1 %111, label %164, label %112

112:                                              ; preds = %104
  %113 = icmp eq %struct.ssl_session_st* %109, bitcast (i8* @_ZN4bsslL23g_pending_session_magicE to %struct.ssl_session_st*)
  br i1 %113, label %166, label %114

114:                                              ; preds = %112
  %115 = load i32, i32* %10, align 4
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %119, label %117

117:                                              ; preds = %114
  %118 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %109, i64 0, i32 0
  call void @CRYPTO_refcount_inc(i32* %118) #13
  br label %119

119:                                              ; preds = %117, %114
  %120 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %54, align 8
  %121 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %120, i64 0, i32 14
  %122 = load i32, i32* %121, align 4
  %123 = and i32 %122, 512
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %127

125:                                              ; preds = %119
  %126 = call i32 @SSL_CTX_add_session(%struct.ssl_ctx_st* %120, %struct.ssl_session_st* nonnull %109) #13
  br label %127

127:                                              ; preds = %125, %119
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %105) #13
  br label %128

128:                                              ; preds = %127, %94
  %129 = phi i64 [ %96, %94 ], [ %110, %127 ]
  %130 = inttoptr i64 %129 to %struct.ssl_session_st*
  %131 = icmp eq i64 %129, 0
  br i1 %131, label %154, label %132

132:                                              ; preds = %128
  %133 = bitcast %"struct.bssl::OPENSSL_timeval"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %133) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %133, i8 -86, i64 16, i1 false) #13
  call void @_ZN4bssl20ssl_get_current_timeEPK6ssl_stPNS_15OPENSSL_timevalE(%struct.ssl_st* %50, %"struct.bssl::OPENSSL_timeval"* nonnull %6) #13
  %134 = getelementptr inbounds %"struct.bssl::OPENSSL_timeval", %"struct.bssl::OPENSSL_timeval"* %6, i64 0, i32 0
  %135 = load i64, i64* %134, align 8
  %136 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %130, i64 0, i32 19
  %137 = load i64, i64* %136, align 8
  %138 = icmp ult i64 %135, %137
  br i1 %138, label %139, label %140

139:                                              ; preds = %132
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %133) #13
  br label %146

140:                                              ; preds = %132
  %141 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %130, i64 0, i32 17
  %142 = load i32, i32* %141, align 8
  %143 = zext i32 %142 to i64
  %144 = sub i64 %135, %137
  %145 = icmp ult i64 %144, %143
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %133) #13
  br i1 %145, label %154, label %146

146:                                              ; preds = %140, %139
  %147 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %54, align 8
  %148 = call fastcc i32 @_ZN4bsslL19remove_session_lockEP10ssl_ctx_stP14ssl_session_sti(%struct.ssl_ctx_st* %147, %struct.ssl_session_st* nonnull %130, i32 1) #13
  %149 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %130, i64 0, i32 0
  %150 = call i32 @CRYPTO_refcount_dec_and_test_zero(i32* %149) #13
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %154, label %152

152:                                              ; preds = %146
  call void @_ZN14ssl_session_stD2Ev(%struct.ssl_session_st* nonnull %130) #13
  %153 = inttoptr i64 %129 to i8*
  call void @OPENSSL_free(i8* nonnull %153) #13
  br label %154

154:                                              ; preds = %99, %152, %146, %140, %128
  %155 = phi i64 [ %129, %140 ], [ 0, %128 ], [ 0, %146 ], [ 0, %152 ], [ 0, %99 ]
  %156 = load %struct.ssl_session_st*, %struct.ssl_session_st** %17, align 8
  store i64 %155, i64* %18, align 8
  %157 = icmp eq %struct.ssl_session_st* %156, null
  br i1 %157, label %165, label %158

158:                                              ; preds = %154
  %159 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %156, i64 0, i32 0
  %160 = call i32 @CRYPTO_refcount_dec_and_test_zero(i32* %159) #13
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %165, label %162

162:                                              ; preds = %158
  call void @_ZN14ssl_session_stD2Ev(%struct.ssl_session_st* nonnull %156) #13
  %163 = bitcast %struct.ssl_session_st* %156 to i8*
  call void @OPENSSL_free(i8* nonnull %163) #13
  br label %165

164:                                              ; preds = %104
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %105) #13
  br label %165

165:                                              ; preds = %162, %158, %154, %164, %41
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47)
  br label %167

166:                                              ; preds = %112
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %105) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47)
  br label %182

167:                                              ; preds = %165, %33
  %168 = phi i8 [ 1, %33 ], [ %42, %165 ]
  %169 = load i64, i64* %18, align 8
  store %struct.ssl_session_st* null, %struct.ssl_session_st** %17, align 8
  %170 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %171 = load %struct.ssl_session_st*, %struct.ssl_session_st** %170, align 8
  %172 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  store i64 %169, i64* %172, align 8
  %173 = icmp eq %struct.ssl_session_st* %171, null
  br i1 %173, label %180, label %174

174:                                              ; preds = %167
  %175 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %171, i64 0, i32 0
  %176 = call i32 @CRYPTO_refcount_dec_and_test_zero(i32* %175) #13
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %180, label %178

178:                                              ; preds = %174
  call void @_ZN14ssl_session_stD2Ev(%struct.ssl_session_st* nonnull %171) #13
  %179 = bitcast %struct.ssl_session_st* %171 to i8*
  call void @OPENSSL_free(i8* nonnull %179) #13
  br label %180

180:                                              ; preds = %167, %174, %178
  store i8 %168, i8* %2, align 1
  %181 = load i8, i8* %12, align 1, !range !2
  store i8 %181, i8* %3, align 1
  br label %182

182:                                              ; preds = %166, %33, %180, %40
  %183 = phi i32 [ 1, %180 ], [ 12, %40 ], [ 11, %166 ], [ 0, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #13
  %184 = load %struct.ssl_session_st*, %struct.ssl_session_st** %17, align 8
  store %struct.ssl_session_st* null, %struct.ssl_session_st** %17, align 8
  %185 = icmp eq %struct.ssl_session_st* %184, null
  br i1 %185, label %192, label %186

186:                                              ; preds = %182
  %187 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %184, i64 0, i32 0
  %188 = call i32 @CRYPTO_refcount_dec_and_test_zero(i32* %187) #13
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %192, label %190

190:                                              ; preds = %186
  call void @_ZN14ssl_session_stD2Ev(%struct.ssl_session_st* nonnull %184) #13
  %191 = bitcast %struct.ssl_session_st* %184 to i8*
  call void @OPENSSL_free(i8* nonnull %191) #13
  br label %192

192:                                              ; preds = %182, %186, %190
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  ret i32 %183
}

declare i32 @SSL_get_options(%struct.ssl_st*) local_unnamed_addr #2

declare zeroext i1 @_ZN4bssl30ssl_client_hello_get_extensionEPK22ssl_early_callback_ctxP6cbs_stt(%struct.ssl_early_callback_ctx*, %struct.cbs_st*, i16 zeroext) local_unnamed_addr #2

declare i64 @CBS_len(%struct.cbs_st*) local_unnamed_addr #2

declare i32 @_ZN4bssl18ssl_process_ticketEPNS_13SSL_HANDSHAKEEPNSt3__110unique_ptrI14ssl_session_stNS_8internal7DeleterIS4_EEEEPbNS_4SpanIKhEESD_(%"struct.bssl::SSL_HANDSHAKE"*, %"class.std::__1::unique_ptr"*, i8*, i8*, i64, %"class.bssl::Span.52"* byval(%"class.bssl::Span.52") align 8) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14ssl_session_stC2EPKN4bssl15SSL_X509_METHODE(%struct.ssl_session_st*, %"struct.bssl::SSL_X509_METHOD"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 0
  store i32 1, i32* %3, align 8
  %4 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 1
  store i16 0, i16* %4, align 4
  %5 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 2
  store i16 0, i16* %5, align 2
  %6 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 3
  store i16 0, i16* %6, align 8
  %7 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 4
  %8 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 10
  %9 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 12
  %10 = bitcast i32* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %10, i8 0, i64 121, i1 false)
  %11 = bitcast %"class.std::__1::unique_ptr.0"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false)
  store %"struct.bssl::SSL_X509_METHOD"* %1, %"struct.bssl::SSL_X509_METHOD"** %9, align 8
  %12 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 13
  %13 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 16
  %14 = bitcast %struct.x509_st** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false)
  store i64 65, i64* %13, align 8
  %15 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 17
  store i32 7200, i32* %15, align 8
  %16 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 18
  store i32 7200, i32* %16, align 4
  %17 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 19
  %18 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 22
  %19 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 30
  %20 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 36
  %21 = bitcast i64* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false)
  %22 = bitcast %struct.ssl_session_st** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 145, i1 false)
  %23 = bitcast i32* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %23, i8 0, i64 60, i1 false)
  %24 = load i8, i8* %20, align 8
  %25 = and i8 %24, -128
  store i8 %25, i8* %20, align 8
  %26 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 37
  %27 = bitcast %"class.bssl::Array.40"* %26 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false) #13
  %28 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 21
  tail call void @CRYPTO_new_ex_data(%struct.crypto_ex_data_st* %28) #13
  %29 = tail call i64 @time(i64* null) #13
  store i64 %29, i64* %17, align 8
  ret void
}

declare void @CRYPTO_new_ex_data(%struct.crypto_ex_data_st*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i64 @time(i64*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14ssl_session_stD2Ev(%struct.ssl_session_st*) unnamed_addr #0 align 2 {
  %2 = bitcast %struct.ssl_session_st* %0 to i8*
  %3 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 21
  tail call void @CRYPTO_free_ex_data(%struct.CRYPTO_EX_DATA_CLASS* nonnull @_ZN4bsslL15g_ex_data_classE, i8* %2, %struct.crypto_ex_data_st* %3) #13
  %4 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 12
  %5 = load %"struct.bssl::SSL_X509_METHOD"*, %"struct.bssl::SSL_X509_METHOD"** %4, align 8
  %6 = getelementptr inbounds %"struct.bssl::SSL_X509_METHOD", %"struct.bssl::SSL_X509_METHOD"* %5, i64 0, i32 8
  %7 = load void (%struct.ssl_session_st*)*, void (%struct.ssl_session_st*)** %6, align 8
  tail call void %7(%struct.ssl_session_st* %0) #13
  %8 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 37
  %9 = getelementptr inbounds %"class.bssl::Array.40", %"class.bssl::Array.40"* %8, i64 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @OPENSSL_free(i8* %10) #13
  %11 = bitcast %"class.bssl::Array.40"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #13
  %12 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 35
  %13 = getelementptr inbounds %"class.bssl::Array.40", %"class.bssl::Array.40"* %12, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  tail call void @OPENSSL_free(i8* %14) #13
  %15 = bitcast %"class.bssl::Array.40"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #13
  %16 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 34
  %17 = getelementptr inbounds %"class.bssl::Array.40", %"class.bssl::Array.40"* %16, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  tail call void @OPENSSL_free(i8* %18) #13
  %19 = bitcast %"class.bssl::Array.40"* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #13
  %20 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 33
  %21 = getelementptr inbounds %"class.bssl::Array.40", %"class.bssl::Array.40"* %20, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  tail call void @OPENSSL_free(i8* %22) #13
  %23 = bitcast %"class.bssl::Array.40"* %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #13
  %24 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 26, i32 0, i32 0, i32 0
  %25 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %24, align 8
  store %struct.crypto_buffer_st* null, %struct.crypto_buffer_st** %24, align 8
  %26 = icmp eq %struct.crypto_buffer_st* %25, null
  br i1 %26, label %28, label %27

27:                                               ; preds = %1
  tail call void @CRYPTO_BUFFER_free(%struct.crypto_buffer_st* nonnull %25) #13
  br label %28

28:                                               ; preds = %1, %27
  %29 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 25, i32 0, i32 0, i32 0
  %30 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %29, align 8
  store %struct.crypto_buffer_st* null, %struct.crypto_buffer_st** %29, align 8
  %31 = icmp eq %struct.crypto_buffer_st* %30, null
  br i1 %31, label %33, label %32

32:                                               ; preds = %28
  tail call void @CRYPTO_BUFFER_free(%struct.crypto_buffer_st* nonnull %30) #13
  br label %33

33:                                               ; preds = %28, %32
  %34 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 24
  %35 = getelementptr inbounds %"class.bssl::Array.40", %"class.bssl::Array.40"* %34, i64 0, i32 0
  %36 = load i8*, i8** %35, align 8
  tail call void @OPENSSL_free(i8* %36) #13
  %37 = bitcast %"class.bssl::Array.40"* %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 16, i1 false) #13
  %38 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %39 = load %struct.stack_st_CRYPTO_BUFFER*, %struct.stack_st_CRYPTO_BUFFER** %38, align 8
  store %struct.stack_st_CRYPTO_BUFFER* null, %struct.stack_st_CRYPTO_BUFFER** %38, align 8
  %40 = icmp eq %struct.stack_st_CRYPTO_BUFFER* %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %33
  %42 = bitcast %struct.stack_st_CRYPTO_BUFFER* %39 to %struct.stack_st*
  tail call void @sk_pop_free_ex(%struct.stack_st* nonnull %42, void (void (i8*)*, i8*)* nonnull @_ZZN4bssl8internal11DeleterImplI22stack_st_CRYPTO_BUFFERvE4FreeEPS2_ENUlPFvPvES5_E_8__invokeES7_S5_, void (i8*)* null) #13
  br label %43

43:                                               ; preds = %33, %41
  %44 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  store i8* null, i8** %44, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %48, label %47

47:                                               ; preds = %43
  tail call void @OPENSSL_free(i8* nonnull %45) #13
  br label %48

48:                                               ; preds = %43, %47
  ret void
}

declare void @CRYPTO_free_ex_data(%struct.CRYPTO_EX_DATA_CLASS*, i8*, %struct.crypto_ex_data_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.ssl_session_st* @SSL_SESSION_new(%struct.ssl_ctx_st* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 1
  %3 = load %"struct.bssl::SSL_X509_METHOD"*, %"struct.bssl::SSL_X509_METHOD"** %2, align 8
  %4 = tail call %struct.ssl_session_st* @_ZN4bssl15ssl_session_newEPKNS_15SSL_X509_METHODE(%"struct.bssl::SSL_X509_METHOD"* %3)
  ret %struct.ssl_session_st* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_SESSION_up_ref(%struct.ssl_session_st*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 0
  tail call void @CRYPTO_refcount_inc(i32* %2) #13
  ret i32 1
}

declare void @CRYPTO_refcount_inc(i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @SSL_SESSION_free(%struct.ssl_session_st*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.ssl_session_st* %0, null
  br i1 %2, label %9, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 0
  %5 = tail call i32 @CRYPTO_refcount_dec_and_test_zero(i32* %4) #13
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  tail call void @_ZN14ssl_session_stD2Ev(%struct.ssl_session_st* nonnull %0) #13
  %8 = bitcast %struct.ssl_session_st* %0 to i8*
  tail call void @OPENSSL_free(i8* nonnull %8) #13
  br label %9

9:                                                ; preds = %3, %1, %7
  ret void
}

declare i32 @CRYPTO_refcount_dec_and_test_zero(i32*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i8* @SSL_SESSION_get_id(%struct.ssl_session_st* readonly, i32*) local_unnamed_addr #5 {
  %3 = icmp eq i32* %1, null
  br i1 %3, label %7, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 6
  %6 = load i32, i32* %5, align 8
  store i32 %6, i32* %1, align 4
  br label %7

7:                                                ; preds = %2, %4
  %8 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 7, i64 0
  ret i8* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_SESSION_set1_id(%struct.ssl_session_st* nocapture, i8* nocapture readonly, i64) local_unnamed_addr #0 {
  %4 = icmp ugt i64 %2, 32
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  tail call void @ERR_put_error(i32 16, i32 0, i32 290, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 894) #13
  br label %13

6:                                                ; preds = %3
  %7 = icmp eq i64 %2, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 7, i64 0
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %9, i8* align 1 %1, i64 %2, i1 false) #13
  br label %10

10:                                               ; preds = %6, %8
  %11 = trunc i64 %2 to i32
  %12 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 6
  store i32 %11, i32* %12, align 8
  br label %13

13:                                               ; preds = %10, %5
  %14 = phi i32 [ 0, %5 ], [ 1, %10 ]
  ret i32 %14
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @SSL_SESSION_get_timeout(%struct.ssl_session_st* nocapture readonly) local_unnamed_addr #6 {
  %2 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 17
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @SSL_SESSION_get_time(%struct.ssl_session_st* readonly) local_unnamed_addr #6 {
  %2 = icmp eq %struct.ssl_session_st* %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 19
  %5 = load i64, i64* %4, align 8
  br label %6

6:                                                ; preds = %1, %3
  %7 = phi i64 [ %5, %3 ], [ 0, %1 ]
  ret i64 %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.x509_st* @SSL_SESSION_get0_peer(%struct.ssl_session_st* nocapture readonly) local_unnamed_addr #6 {
  %2 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 13
  %3 = load %struct.x509_st*, %struct.x509_st** %2, align 8
  ret %struct.x509_st* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.stack_st_CRYPTO_BUFFER* @SSL_SESSION_get0_peer_certificates(%struct.ssl_session_st* nocapture readonly) local_unnamed_addr #6 {
  %2 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %3 = load %struct.stack_st_CRYPTO_BUFFER*, %struct.stack_st_CRYPTO_BUFFER** %2, align 8
  ret %struct.stack_st_CRYPTO_BUFFER* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @SSL_SESSION_get0_signed_cert_timestamp_list(%struct.ssl_session_st* nocapture readonly, i8** nocapture, i64* nocapture) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 25, i32 0, i32 0, i32 0
  %5 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %4, align 8
  %6 = icmp eq %struct.crypto_buffer_st* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  %8 = tail call i8* @CRYPTO_BUFFER_data(%struct.crypto_buffer_st* nonnull %5) #13
  store i8* %8, i8** %1, align 8
  %9 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %4, align 8
  %10 = tail call i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st* %9) #13
  br label %12

11:                                               ; preds = %3
  store i8* null, i8** %1, align 8
  br label %12

12:                                               ; preds = %11, %7
  %13 = phi i64 [ 0, %11 ], [ %10, %7 ]
  store i64 %13, i64* %2, align 8
  ret void
}

declare i8* @CRYPTO_BUFFER_data(%struct.crypto_buffer_st*) local_unnamed_addr #2

declare i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @SSL_SESSION_get0_ocsp_response(%struct.ssl_session_st* nocapture readonly, i8** nocapture, i64* nocapture) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 26, i32 0, i32 0, i32 0
  %5 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %4, align 8
  %6 = icmp eq %struct.crypto_buffer_st* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  %8 = tail call i8* @CRYPTO_BUFFER_data(%struct.crypto_buffer_st* nonnull %5) #13
  store i8* %8, i8** %1, align 8
  %9 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %4, align 8
  %10 = tail call i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st* %9) #13
  br label %12

11:                                               ; preds = %3
  store i8* null, i8** %1, align 8
  br label %12

12:                                               ; preds = %11, %7
  %13 = phi i64 [ 0, %11 ], [ %10, %7 ]
  store i64 %13, i64* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @SSL_SESSION_get_master_key(%struct.ssl_session_st* nocapture readonly, i8* nocapture, i64) local_unnamed_addr #0 {
  %4 = icmp eq i64 %2, 0
  %5 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 4
  %6 = load i32, i32* %5, align 4
  %7 = sext i32 %6 to i64
  br i1 %4, label %14, label %8

8:                                                ; preds = %3
  %9 = icmp ult i64 %7, %2
  %10 = select i1 %9, i64 %7, i64 %2
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 5, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %13, i64 %10, i1 false) #13
  br label %14

14:                                               ; preds = %12, %8, %3
  %15 = phi i64 [ %7, %3 ], [ 0, %8 ], [ %10, %12 ]
  ret i64 %15
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i64 @SSL_SESSION_set_time(%struct.ssl_session_st*, i64) local_unnamed_addr #7 {
  %3 = icmp eq %struct.ssl_session_st* %0, null
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 19
  store i64 %1, i64* %5, align 8
  br label %6

6:                                                ; preds = %2, %4
  %7 = phi i64 [ %1, %4 ], [ 0, %2 ]
  ret i64 %7
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i32 @SSL_SESSION_set_timeout(%struct.ssl_session_st*, i32) local_unnamed_addr #7 {
  %3 = icmp eq %struct.ssl_session_st* %0, null
  br i1 %3, label %7, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 17
  store i32 %1, i32* %5, align 8
  %6 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 18
  store i32 %1, i32* %6, align 4
  br label %7

7:                                                ; preds = %2, %4
  %8 = phi i32 [ 1, %4 ], [ 0, %2 ]
  ret i32 %8
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i8* @SSL_SESSION_get0_id_context(%struct.ssl_session_st* readonly, i32*) local_unnamed_addr #5 {
  %3 = icmp eq i32* %1, null
  br i1 %3, label %8, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 8
  %6 = load i8, i8* %5, align 4
  %7 = zext i8 %6 to i32
  store i32 %7, i32* %1, align 4
  br label %8

8:                                                ; preds = %2, %4
  %9 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 9, i64 0
  ret i8* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_SESSION_set1_id_context(%struct.ssl_session_st* nocapture, i8* nocapture readonly, i64) local_unnamed_addr #0 {
  %4 = icmp ugt i64 %2, 32
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  tail call void @ERR_put_error(i32 16, i32 0, i32 216, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 991) #13
  br label %12

6:                                                ; preds = %3
  %7 = trunc i64 %2 to i8
  %8 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 8
  store i8 %7, i8* %8, align 4
  %9 = icmp eq i64 %2, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 9, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %11, i8* align 1 %1, i64 %2, i1 false) #13
  br label %12

12:                                               ; preds = %10, %6, %5
  %13 = phi i32 [ 0, %5 ], [ 1, %6 ], [ 1, %10 ]
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_SESSION_should_be_single_use(%struct.ssl_session_st* nocapture readonly) local_unnamed_addr #0 {
  %2 = alloca i16, align 2
  %3 = bitcast i16* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %3) #13
  store i16 -21846, i16* %2, align 2
  %4 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 1
  %5 = load i16, i16* %4, align 4
  %6 = call zeroext i1 @_ZN4bssl30ssl_protocol_version_from_wireEPtt(i16* nonnull %2, i16 zeroext %5) #13
  %7 = load i16, i16* %2, align 2
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %3) #13
  %8 = icmp ugt i16 %7, 771
  %9 = and i1 %6, %8
  %10 = zext i1 %9 to i32
  ret i32 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @SSL_SESSION_is_resumable(%struct.ssl_session_st* nocapture readonly) local_unnamed_addr #6 {
  %2 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 36
  %3 = load i8, i8* %2, align 8
  %4 = and i8 %3, 4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %15

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 6
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %15

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 24, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp ne i64 %12, 0
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %6, %1, %10
  %16 = phi i32 [ 0, %1 ], [ 1, %6 ], [ %14, %10 ]
  ret i32 %16
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @SSL_SESSION_has_ticket(%struct.ssl_session_st* nocapture readonly) local_unnamed_addr #6 {
  %2 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 24, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = icmp ne i64 %3, 0
  %5 = zext i1 %4 to i32
  ret i32 %5
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @SSL_SESSION_get0_ticket(%struct.ssl_session_st* nocapture readonly, i8**, i64* nocapture) local_unnamed_addr #5 {
  %4 = icmp eq i8** %1, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 24, i32 0
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast i8** %1 to i64*
  store i64 %8, i64* %9, align 8
  br label %10

10:                                               ; preds = %3, %5
  %11 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 24, i32 1
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_SESSION_set_ticket(%struct.ssl_session_st* nocapture, i8*, i64) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 24
  %5 = getelementptr inbounds %"class.bssl::Array.40", %"class.bssl::Array.40"* %4, i64 0, i32 0
  %6 = load i8*, i8** %5, align 8
  tail call void @OPENSSL_free(i8* %6) #13
  %7 = bitcast %"class.bssl::Array.40"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #13
  %8 = icmp eq i64 %2, 0
  br i1 %8, label %15, label %9

9:                                                ; preds = %3
  %10 = tail call i8* @OPENSSL_malloc(i64 %2) #13
  store i8* %10, i8** %5, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %9
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1, i64 0, i64 0), i32 324) #13
  br label %15

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 24, i32 1
  store i64 %2, i64* %14, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %10, i8* align 1 %1, i64 %2, i1 false) #13
  br label %15

15:                                               ; preds = %3, %12, %13
  %16 = phi i32 [ 0, %12 ], [ 1, %13 ], [ 1, %3 ]
  ret i32 %16
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @SSL_SESSION_get_ticket_lifetime_hint(%struct.ssl_session_st* nocapture readonly) local_unnamed_addr #6 {
  %2 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 30
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.ssl_cipher_st* @SSL_SESSION_get0_cipher(%struct.ssl_session_st* nocapture readonly) local_unnamed_addr #6 {
  %2 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 20
  %3 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %2, align 8
  ret %struct.ssl_cipher_st* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @SSL_SESSION_has_peer_sha256(%struct.ssl_session_st* nocapture readonly) local_unnamed_addr #6 {
  %2 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 36
  %3 = load i8, i8* %2, align 8
  %4 = lshr i8 %3, 1
  %5 = and i8 %4, 1
  %6 = zext i8 %5 to i32
  ret i32 %6
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @SSL_SESSION_get0_peer_sha256(%struct.ssl_session_st*, i8** nocapture, i64* nocapture) local_unnamed_addr #5 {
  %4 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 36
  %5 = load i8, i8* %4, align 8
  %6 = and i8 %5, 2
  %7 = icmp eq i8 %6, 0
  %8 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 27, i64 0
  %9 = select i1 %7, i8* null, i8* %8
  %10 = shl nuw nsw i8 %6, 4
  %11 = zext i8 %10 to i64
  store i8* %9, i8** %1, align 8
  store i64 %11, i64* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_SESSION_early_data_capable(%struct.ssl_session_st* nocapture readonly) local_unnamed_addr #0 {
  %2 = alloca i16, align 2
  %3 = bitcast i16* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %3) #13
  store i16 -21846, i16* %2, align 2
  %4 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 1
  %5 = load i16, i16* %4, align 4
  %6 = call zeroext i1 @_ZN4bssl30ssl_protocol_version_from_wireEPtt(i16* nonnull %2, i16 zeroext %5) #13
  %7 = load i16, i16* %2, align 2
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %3) #13
  %8 = icmp ugt i16 %7, 771
  %9 = and i1 %6, %8
  br i1 %9, label %10, label %15

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 32
  %12 = load i32, i32* %11, align 4
  %13 = icmp ne i32 %12, 0
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %10, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %10 ]
  ret i32 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.ssl_session_st* @SSL_SESSION_copy_without_early_data(%struct.ssl_session_st*) local_unnamed_addr #0 {
  %2 = alloca i16, align 2
  %3 = bitcast i16* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %3) #13
  store i16 -21846, i16* %2, align 2
  %4 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 1
  %5 = load i16, i16* %4, align 4
  %6 = call zeroext i1 @_ZN4bssl30ssl_protocol_version_from_wireEPtt(i16* nonnull %2, i16 zeroext %5) #13
  %7 = load i16, i16* %2, align 2
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %3) #13
  %8 = icmp ugt i16 %7, 771
  %9 = and i1 %6, %8
  br i1 %9, label %10, label %14

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 32
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %18

14:                                               ; preds = %1, %10
  %15 = icmp eq %struct.ssl_session_st* %0, null
  br i1 %15, label %30, label %16

16:                                               ; preds = %14
  %17 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 0
  call void @CRYPTO_refcount_inc(i32* %17) #13
  br label %30

18:                                               ; preds = %10
  %19 = call %struct.ssl_session_st* @_ZN4bssl15SSL_SESSION_dupEP14ssl_session_sti(%struct.ssl_session_st* %0, i32 3)
  %20 = icmp eq %struct.ssl_session_st* %19, null
  br i1 %20, label %30, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %19, i64 0, i32 32
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 36
  %24 = load i8, i8* %23, align 8
  %25 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %19, i64 0, i32 36
  %26 = and i8 %24, 4
  %27 = load i8, i8* %25, align 8
  %28 = and i8 %27, -5
  %29 = or i8 %28, %26
  store i8 %29, i8* %25, align 8
  br label %30

30:                                               ; preds = %18, %21, %14, %16
  %31 = phi %struct.ssl_session_st* [ %0, %16 ], [ null, %14 ], [ %19, %21 ], [ null, %18 ]
  ret %struct.ssl_session_st* %31
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.ssl_session_st* @SSL_magic_pending_session_ptr() local_unnamed_addr #8 {
  ret %struct.ssl_session_st* bitcast (i8* @_ZN4bsslL23g_pending_session_magicE to %struct.ssl_session_st*)
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.ssl_session_st* @SSL_get_session(%struct.ssl_st*) local_unnamed_addr #0 {
  %2 = tail call i32 @SSL_in_init(%struct.ssl_st* %0) #13
  %3 = icmp eq i32 %2, 0
  %4 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %5 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %4, align 8
  br i1 %3, label %6, label %9

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %5, i64 0, i32 47, i32 0, i32 0, i32 0
  %8 = load %struct.ssl_session_st*, %struct.ssl_session_st** %7, align 8
  br label %22

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %5, i64 0, i32 34, i32 0, i32 0, i32 0
  %11 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %10, align 8
  %12 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %11, i64 0, i32 41, i32 0, i32 0, i32 0
  %13 = load %struct.ssl_session_st*, %struct.ssl_session_st** %12, align 8
  %14 = icmp eq %struct.ssl_session_st* %13, null
  br i1 %14, label %15, label %22

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %11, i64 0, i32 40, i32 0, i32 0, i32 0
  %17 = load %struct.ssl_session_st*, %struct.ssl_session_st** %16, align 8
  %18 = icmp eq %struct.ssl_session_st* %17, null
  br i1 %18, label %19, label %22

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %21 = load %struct.ssl_session_st*, %struct.ssl_session_st** %20, align 8
  br label %22

22:                                               ; preds = %15, %9, %19, %6
  %23 = phi %struct.ssl_session_st* [ %8, %6 ], [ %21, %19 ], [ %13, %9 ], [ %17, %15 ]
  ret %struct.ssl_session_st* %23
}

declare i32 @SSL_in_init(%struct.ssl_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.ssl_session_st* @SSL_get1_session(%struct.ssl_st*) local_unnamed_addr #0 {
  %2 = tail call i32 @SSL_in_init(%struct.ssl_st* %0) #13
  %3 = icmp eq i32 %2, 0
  %4 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %5 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %4, align 8
  br i1 %3, label %6, label %8

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %5, i64 0, i32 47, i32 0, i32 0, i32 0
  br label %20

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %5, i64 0, i32 34, i32 0, i32 0, i32 0
  %10 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %9, align 8
  %11 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %10, i64 0, i32 41, i32 0, i32 0, i32 0
  %12 = load %struct.ssl_session_st*, %struct.ssl_session_st** %11, align 8
  %13 = icmp eq %struct.ssl_session_st* %12, null
  br i1 %13, label %14, label %24

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %10, i64 0, i32 40, i32 0, i32 0, i32 0
  %16 = load %struct.ssl_session_st*, %struct.ssl_session_st** %15, align 8
  %17 = icmp eq %struct.ssl_session_st* %16, null
  br i1 %17, label %18, label %24

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  br label %20

20:                                               ; preds = %6, %18
  %21 = phi %struct.ssl_session_st** [ %7, %6 ], [ %19, %18 ]
  %22 = load %struct.ssl_session_st*, %struct.ssl_session_st** %21, align 8
  %23 = icmp eq %struct.ssl_session_st* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %14, %8, %20
  %25 = phi %struct.ssl_session_st* [ %22, %20 ], [ %16, %14 ], [ %12, %8 ]
  %26 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %25, i64 0, i32 0
  tail call void @CRYPTO_refcount_inc(i32* %26) #13
  br label %27

27:                                               ; preds = %20, %24
  %28 = phi %struct.ssl_session_st* [ null, %20 ], [ %25, %24 ]
  ret %struct.ssl_session_st* %28
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_SESSION_get_ex_new_index(i64, i8*, i32* nocapture readnone, i32 (%struct.crypto_ex_data_st*, %struct.crypto_ex_data_st*, i8**, i32, i64, i8*)* nocapture readnone, void (i8*, i8*, %struct.crypto_ex_data_st*, i32, i64, i8*)*) local_unnamed_addr #0 {
  %6 = alloca i32, align 4
  %7 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #13
  store i32 -1431655766, i32* %6, align 4
  %8 = call i32 @CRYPTO_get_ex_new_index(%struct.CRYPTO_EX_DATA_CLASS* nonnull @_ZN4bsslL15g_ex_data_classE, i32* nonnull %6, i64 %0, i8* %1, void (i8*, i8*, %struct.crypto_ex_data_st*, i32, i64, i8*)* %4) #13
  %9 = icmp eq i32 %8, 0
  %10 = load i32, i32* %6, align 4
  %11 = select i1 %9, i32 -1, i32 %10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #13
  ret i32 %11
}

declare i32 @CRYPTO_get_ex_new_index(%struct.CRYPTO_EX_DATA_CLASS*, i32*, i64, i8*, void (i8*, i8*, %struct.crypto_ex_data_st*, i32, i64, i8*)*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_SESSION_set_ex_data(%struct.ssl_session_st*, i32, i8*) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 21
  %5 = tail call i32 @CRYPTO_set_ex_data(%struct.crypto_ex_data_st* %4, i32 %1, i8* %2) #13
  ret i32 %5
}

declare i32 @CRYPTO_set_ex_data(%struct.crypto_ex_data_st*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i8* @SSL_SESSION_get_ex_data(%struct.ssl_session_st*, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 21
  %4 = tail call i8* @CRYPTO_get_ex_data(%struct.crypto_ex_data_st* %3, i32 %1) #13
  ret i8* %4
}

declare i8* @CRYPTO_get_ex_data(%struct.crypto_ex_data_st*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_CTX_add_session(%struct.ssl_ctx_st*, %struct.ssl_session_st*) local_unnamed_addr #0 {
  %3 = alloca i8*, align 8
  %4 = icmp eq %struct.ssl_session_st* %1, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %1, i64 0, i32 0
  tail call void @CRYPTO_refcount_inc(i32* %6) #13
  br label %7

7:                                                ; preds = %2, %5
  %8 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 2
  tail call void @CRYPTO_MUTEX_lock_write(%union.crypto_mutex_st* %8) #13
  %9 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 9
  %10 = bitcast %struct.lhash_st_SSL_SESSION** %9 to %struct.lhash_st**
  %11 = load %struct.lhash_st*, %struct.lhash_st** %10, align 8
  %12 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #13
  store i8* null, i8** %3, align 8
  %13 = bitcast %struct.ssl_session_st* %1 to i8*
  %14 = call i32 @lh_insert(%struct.lhash_st* %11, i8** nonnull %3, i8* %13, i32 (i32 (i8*)*, i8*)* nonnull @_Z29lh_SSL_SESSION_call_hash_funcPFjPKvES0_, i32 (i32 (i8*, i8*)*, i8*, i8*)* nonnull @_Z28lh_SSL_SESSION_call_cmp_funcPFiPKvS0_ES0_S0_) #13
  %15 = bitcast i8** %3 to %struct.ssl_session_st**
  %16 = load %struct.ssl_session_st*, %struct.ssl_session_st** %15, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #13
  %17 = icmp eq i32 %14, 0
  br i1 %17, label %122, label %18

18:                                               ; preds = %7
  %19 = icmp eq %struct.ssl_session_st* %16, null
  br i1 %19, label %59, label %20

20:                                               ; preds = %18
  %21 = icmp eq %struct.ssl_session_st* %16, %1
  br i1 %21, label %22, label %23

22:                                               ; preds = %20
  call void @CRYPTO_MUTEX_unlock_write(%union.crypto_mutex_st* %8) #13
  br label %126

23:                                               ; preds = %20
  %24 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %16, i64 0, i32 23
  %25 = load %struct.ssl_session_st*, %struct.ssl_session_st** %24, align 8
  %26 = icmp eq %struct.ssl_session_st* %25, null
  br i1 %26, label %59, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %16, i64 0, i32 22
  %29 = load %struct.ssl_session_st*, %struct.ssl_session_st** %28, align 8
  %30 = icmp eq %struct.ssl_session_st* %29, null
  br i1 %30, label %59, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 12
  %33 = bitcast %struct.ssl_session_st** %32 to %struct.ssl_session_st*
  %34 = icmp eq %struct.ssl_session_st* %25, %33
  %35 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 11
  %36 = bitcast %struct.ssl_session_st** %35 to %struct.ssl_session_st*
  %37 = icmp eq %struct.ssl_session_st* %29, %36
  br i1 %34, label %38, label %45

38:                                               ; preds = %31
  br i1 %37, label %39, label %41

39:                                               ; preds = %38
  %40 = bitcast %struct.ssl_session_st** %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 16, i1 false) #13
  br label %57

41:                                               ; preds = %38
  store %struct.ssl_session_st* %29, %struct.ssl_session_st** %32, align 8
  %42 = load %struct.ssl_session_st*, %struct.ssl_session_st** %28, align 8
  %43 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %42, i64 0, i32 23
  %44 = bitcast %struct.ssl_session_st** %43 to %struct.ssl_session_st***
  store %struct.ssl_session_st** %32, %struct.ssl_session_st*** %44, align 8
  br label %57

45:                                               ; preds = %31
  br i1 %37, label %46, label %50

46:                                               ; preds = %45
  store %struct.ssl_session_st* %25, %struct.ssl_session_st** %35, align 8
  %47 = load %struct.ssl_session_st*, %struct.ssl_session_st** %24, align 8
  %48 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %47, i64 0, i32 22
  %49 = bitcast %struct.ssl_session_st** %48 to %struct.ssl_session_st***
  store %struct.ssl_session_st** %35, %struct.ssl_session_st*** %49, align 8
  br label %57

50:                                               ; preds = %45
  %51 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %25, i64 0, i32 22
  store %struct.ssl_session_st* %29, %struct.ssl_session_st** %51, align 8
  %52 = bitcast %struct.ssl_session_st** %24 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = load %struct.ssl_session_st*, %struct.ssl_session_st** %28, align 8
  %55 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %54, i64 0, i32 23
  %56 = bitcast %struct.ssl_session_st** %55 to i64*
  store i64 %53, i64* %56, align 8
  br label %57

57:                                               ; preds = %50, %46, %41, %39
  %58 = bitcast %struct.ssl_session_st** %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 16, i1 false) #13
  br label %59

59:                                               ; preds = %57, %27, %23, %18
  %60 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %1, i64 0, i32 23
  %61 = load %struct.ssl_session_st*, %struct.ssl_session_st** %60, align 8
  %62 = icmp eq %struct.ssl_session_st* %61, null
  br i1 %62, label %95, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %1, i64 0, i32 22
  %65 = load %struct.ssl_session_st*, %struct.ssl_session_st** %64, align 8
  %66 = icmp eq %struct.ssl_session_st* %65, null
  br i1 %66, label %95, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 12
  %69 = bitcast %struct.ssl_session_st** %68 to %struct.ssl_session_st*
  %70 = icmp eq %struct.ssl_session_st* %61, %69
  %71 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 11
  %72 = bitcast %struct.ssl_session_st** %71 to %struct.ssl_session_st*
  %73 = icmp eq %struct.ssl_session_st* %65, %72
  br i1 %70, label %74, label %81

74:                                               ; preds = %67
  br i1 %73, label %75, label %77

75:                                               ; preds = %74
  %76 = bitcast %struct.ssl_session_st** %71 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 16, i1 false) #13
  br label %93

77:                                               ; preds = %74
  store %struct.ssl_session_st* %65, %struct.ssl_session_st** %68, align 8
  %78 = load %struct.ssl_session_st*, %struct.ssl_session_st** %64, align 8
  %79 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %78, i64 0, i32 23
  %80 = bitcast %struct.ssl_session_st** %79 to %struct.ssl_session_st***
  store %struct.ssl_session_st** %68, %struct.ssl_session_st*** %80, align 8
  br label %93

81:                                               ; preds = %67
  br i1 %73, label %82, label %86

82:                                               ; preds = %81
  store %struct.ssl_session_st* %61, %struct.ssl_session_st** %71, align 8
  %83 = load %struct.ssl_session_st*, %struct.ssl_session_st** %60, align 8
  %84 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %83, i64 0, i32 22
  %85 = bitcast %struct.ssl_session_st** %84 to %struct.ssl_session_st***
  store %struct.ssl_session_st** %71, %struct.ssl_session_st*** %85, align 8
  br label %93

86:                                               ; preds = %81
  %87 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %61, i64 0, i32 22
  store %struct.ssl_session_st* %65, %struct.ssl_session_st** %87, align 8
  %88 = bitcast %struct.ssl_session_st** %60 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = load %struct.ssl_session_st*, %struct.ssl_session_st** %64, align 8
  %91 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %90, i64 0, i32 23
  %92 = bitcast %struct.ssl_session_st** %91 to i64*
  store i64 %89, i64* %92, align 8
  br label %93

93:                                               ; preds = %86, %82, %77, %75
  %94 = bitcast %struct.ssl_session_st** %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 16, i1 false) #13
  br label %95

95:                                               ; preds = %93, %63, %59
  %96 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 11
  %97 = load %struct.ssl_session_st*, %struct.ssl_session_st** %96, align 8
  %98 = icmp eq %struct.ssl_session_st* %97, null
  br i1 %98, label %99, label %104

99:                                               ; preds = %95
  store %struct.ssl_session_st* %1, %struct.ssl_session_st** %96, align 8
  %100 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 12
  store %struct.ssl_session_st* %1, %struct.ssl_session_st** %100, align 8
  %101 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %1, i64 0, i32 22
  %102 = bitcast %struct.ssl_session_st** %101 to %struct.ssl_session_st***
  store %struct.ssl_session_st** %96, %struct.ssl_session_st*** %102, align 8
  %103 = bitcast %struct.ssl_session_st** %60 to %struct.ssl_session_st***
  store %struct.ssl_session_st** %100, %struct.ssl_session_st*** %103, align 8
  br label %108

104:                                              ; preds = %95
  store %struct.ssl_session_st* %97, %struct.ssl_session_st** %60, align 8
  %105 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %97, i64 0, i32 22
  store %struct.ssl_session_st* %1, %struct.ssl_session_st** %105, align 8
  %106 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %1, i64 0, i32 22
  %107 = bitcast %struct.ssl_session_st** %106 to %struct.ssl_session_st***
  store %struct.ssl_session_st** %96, %struct.ssl_session_st*** %107, align 8
  store %struct.ssl_session_st* %1, %struct.ssl_session_st** %96, align 8
  br label %108

108:                                              ; preds = %99, %104
  %109 = call i64 @SSL_CTX_sess_get_cache_size(%struct.ssl_ctx_st* %0) #13
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %122, label %111

111:                                              ; preds = %108
  %112 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 12
  br label %113

113:                                              ; preds = %111, %118
  %114 = load %struct.lhash_st*, %struct.lhash_st** %10, align 8
  %115 = call i64 @lh_num_items(%struct.lhash_st* %114) #13
  %116 = call i64 @SSL_CTX_sess_get_cache_size(%struct.ssl_ctx_st* %0) #13
  %117 = icmp ugt i64 %115, %116
  br i1 %117, label %118, label %122

118:                                              ; preds = %113
  %119 = load %struct.ssl_session_st*, %struct.ssl_session_st** %112, align 8
  %120 = call fastcc i32 @_ZN4bsslL19remove_session_lockEP10ssl_ctx_stP14ssl_session_sti(%struct.ssl_ctx_st* %0, %struct.ssl_session_st* %119, i32 0)
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %113

122:                                              ; preds = %113, %118, %108, %7
  %123 = phi %struct.ssl_session_st* [ %1, %7 ], [ %16, %108 ], [ %16, %118 ], [ %16, %113 ]
  %124 = phi i32 [ 0, %7 ], [ 1, %108 ], [ 1, %118 ], [ 1, %113 ]
  call void @CRYPTO_MUTEX_unlock_write(%union.crypto_mutex_st* %8) #13
  %125 = icmp eq %struct.ssl_session_st* %123, null
  br i1 %125, label %134, label %126

126:                                              ; preds = %22, %122
  %127 = phi i32 [ 0, %22 ], [ %124, %122 ]
  %128 = phi %struct.ssl_session_st* [ %1, %22 ], [ %123, %122 ]
  %129 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %128, i64 0, i32 0
  %130 = call i32 @CRYPTO_refcount_dec_and_test_zero(i32* %129) #13
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %134, label %132

132:                                              ; preds = %126
  call void @_ZN14ssl_session_stD2Ev(%struct.ssl_session_st* nonnull %128) #13
  %133 = bitcast %struct.ssl_session_st* %128 to i8*
  call void @OPENSSL_free(i8* nonnull %133) #13
  br label %134

134:                                              ; preds = %122, %126, %132
  %135 = phi i32 [ %124, %122 ], [ %127, %126 ], [ %127, %132 ]
  ret i32 %135
}

declare i64 @SSL_CTX_sess_get_cache_size(%struct.ssl_ctx_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN4bsslL19remove_session_lockEP10ssl_ctx_stP14ssl_session_sti(%struct.ssl_ctx_st*, %struct.ssl_session_st*, i32) unnamed_addr #0 {
  %4 = icmp eq %struct.ssl_session_st* %1, null
  br i1 %4, label %80, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %1, i64 0, i32 6
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %80, label %9

9:                                                ; preds = %5
  %10 = icmp ne i32 %2, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %9
  %12 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 2
  tail call void @CRYPTO_MUTEX_lock_write(%union.crypto_mutex_st* %12) #13
  br label %13

13:                                               ; preds = %11, %9
  %14 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 9
  %15 = bitcast %struct.lhash_st_SSL_SESSION** %14 to %struct.lhash_st**
  %16 = load %struct.lhash_st*, %struct.lhash_st** %15, align 8
  %17 = bitcast %struct.ssl_session_st* %1 to i8*
  %18 = tail call i8* @lh_retrieve(%struct.lhash_st* %16, i8* nonnull %17, i32 (i32 (i8*)*, i8*)* nonnull @_Z29lh_SSL_SESSION_call_hash_funcPFjPKvES0_, i32 (i32 (i8*, i8*)*, i8*, i8*)* nonnull @_Z28lh_SSL_SESSION_call_cmp_funcPFiPKvS0_ES0_S0_) #13
  %19 = bitcast i8* %18 to %struct.ssl_session_st*
  %20 = icmp eq %struct.ssl_session_st* %19, %1
  br i1 %20, label %21, label %60

21:                                               ; preds = %13
  %22 = load %struct.lhash_st*, %struct.lhash_st** %15, align 8
  %23 = tail call i8* @lh_delete(%struct.lhash_st* %22, i8* nonnull %17, i32 (i32 (i8*)*, i8*)* nonnull @_Z29lh_SSL_SESSION_call_hash_funcPFjPKvES0_, i32 (i32 (i8*, i8*)*, i8*, i8*)* nonnull @_Z28lh_SSL_SESSION_call_cmp_funcPFiPKvS0_ES0_S0_) #13
  %24 = bitcast i8* %23 to %struct.ssl_session_st*
  %25 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %1, i64 0, i32 23
  %26 = load %struct.ssl_session_st*, %struct.ssl_session_st** %25, align 8
  %27 = icmp eq %struct.ssl_session_st* %26, null
  br i1 %27, label %60, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %1, i64 0, i32 22
  %30 = load %struct.ssl_session_st*, %struct.ssl_session_st** %29, align 8
  %31 = icmp eq %struct.ssl_session_st* %30, null
  br i1 %31, label %60, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 12
  %34 = bitcast %struct.ssl_session_st** %33 to %struct.ssl_session_st*
  %35 = icmp eq %struct.ssl_session_st* %26, %34
  %36 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 11
  %37 = bitcast %struct.ssl_session_st** %36 to %struct.ssl_session_st*
  %38 = icmp eq %struct.ssl_session_st* %30, %37
  br i1 %35, label %39, label %46

39:                                               ; preds = %32
  br i1 %38, label %40, label %42

40:                                               ; preds = %39
  %41 = bitcast %struct.ssl_session_st** %36 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 16, i1 false) #13
  br label %58

42:                                               ; preds = %39
  store %struct.ssl_session_st* %30, %struct.ssl_session_st** %33, align 8
  %43 = load %struct.ssl_session_st*, %struct.ssl_session_st** %29, align 8
  %44 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %43, i64 0, i32 23
  %45 = bitcast %struct.ssl_session_st** %44 to %struct.ssl_session_st***
  store %struct.ssl_session_st** %33, %struct.ssl_session_st*** %45, align 8
  br label %58

46:                                               ; preds = %32
  br i1 %38, label %47, label %51

47:                                               ; preds = %46
  store %struct.ssl_session_st* %26, %struct.ssl_session_st** %36, align 8
  %48 = load %struct.ssl_session_st*, %struct.ssl_session_st** %25, align 8
  %49 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %48, i64 0, i32 22
  %50 = bitcast %struct.ssl_session_st** %49 to %struct.ssl_session_st***
  store %struct.ssl_session_st** %36, %struct.ssl_session_st*** %50, align 8
  br label %58

51:                                               ; preds = %46
  %52 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %26, i64 0, i32 22
  store %struct.ssl_session_st* %30, %struct.ssl_session_st** %52, align 8
  %53 = bitcast %struct.ssl_session_st** %25 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = load %struct.ssl_session_st*, %struct.ssl_session_st** %29, align 8
  %56 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %55, i64 0, i32 23
  %57 = bitcast %struct.ssl_session_st** %56 to i64*
  store i64 %54, i64* %57, align 8
  br label %58

58:                                               ; preds = %51, %47, %42, %40
  %59 = bitcast %struct.ssl_session_st** %29 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 16, i1 false) #13
  br label %60

60:                                               ; preds = %58, %28, %21, %13
  %61 = phi i32 [ 0, %13 ], [ 1, %21 ], [ 1, %28 ], [ 1, %58 ]
  %62 = phi i8* [ %18, %13 ], [ %23, %21 ], [ %23, %28 ], [ %23, %58 ]
  %63 = phi %struct.ssl_session_st* [ %19, %13 ], [ %24, %21 ], [ %24, %28 ], [ %24, %58 ]
  br i1 %10, label %64, label %66

64:                                               ; preds = %60
  %65 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 2
  tail call void @CRYPTO_MUTEX_unlock_write(%union.crypto_mutex_st* %65) #13
  br label %66

66:                                               ; preds = %64, %60
  %67 = icmp eq i32 %61, 0
  br i1 %67, label %80, label %68

68:                                               ; preds = %66
  %69 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 18
  %70 = load void (%struct.ssl_ctx_st*, %struct.ssl_session_st*)*, void (%struct.ssl_ctx_st*, %struct.ssl_session_st*)** %69, align 8
  %71 = icmp eq void (%struct.ssl_ctx_st*, %struct.ssl_session_st*)* %70, null
  br i1 %71, label %73, label %72

72:                                               ; preds = %68
  tail call void %70(%struct.ssl_ctx_st* %0, %struct.ssl_session_st* %63) #13
  br label %73

73:                                               ; preds = %68, %72
  %74 = icmp eq %struct.ssl_session_st* %63, null
  br i1 %74, label %80, label %75

75:                                               ; preds = %73
  %76 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %63, i64 0, i32 0
  %77 = tail call i32 @CRYPTO_refcount_dec_and_test_zero(i32* %76) #13
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %75
  tail call void @_ZN14ssl_session_stD2Ev(%struct.ssl_session_st* nonnull %63) #13
  tail call void @OPENSSL_free(i8* nonnull %62) #13
  br label %80

80:                                               ; preds = %79, %75, %73, %66, %5, %3
  %81 = phi i32 [ 0, %5 ], [ 0, %3 ], [ 0, %66 ], [ 1, %73 ], [ 1, %75 ], [ 1, %79 ]
  ret i32 %81
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_CTX_remove_session(%struct.ssl_ctx_st*, %struct.ssl_session_st*) local_unnamed_addr #0 {
  %3 = tail call fastcc i32 @_ZN4bsslL19remove_session_lockEP10ssl_ctx_stP14ssl_session_sti(%struct.ssl_ctx_st* %0, %struct.ssl_session_st* %1, i32 1)
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_set_session(%struct.ssl_st* nocapture, %struct.ssl_session_st*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %4 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %3, align 8
  %5 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %4, i64 0, i32 23
  %6 = load i16, i16* %5, align 1
  %7 = and i16 %6, 32
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %4, i64 0, i32 34, i32 0, i32 0, i32 0
  %11 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %10, align 8
  %12 = icmp eq %"struct.bssl::SSL_HANDSHAKE"* %11, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %11, i64 0, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %13, %2, %9
  tail call void @abort() #14
  unreachable

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 14
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %struct.ssl_session_st*, %struct.ssl_session_st** %20, align 8
  %22 = icmp eq %struct.ssl_session_st* %21, %1
  br i1 %22, label %39, label %23

23:                                               ; preds = %18
  %24 = icmp eq %struct.ssl_session_st* %1, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %1, i64 0, i32 0
  tail call void @CRYPTO_refcount_inc(i32* %26) #13
  %27 = load %struct.ssl_session_st*, %struct.ssl_session_st** %20, align 8
  br label %28

28:                                               ; preds = %25, %23
  %29 = phi %struct.ssl_session_st* [ %21, %23 ], [ %27, %25 ]
  %30 = ptrtoint %struct.ssl_session_st* %1 to i64
  %31 = bitcast %"class.std::__1::unique_ptr"* %19 to i64*
  store i64 %30, i64* %31, align 8
  %32 = icmp eq %struct.ssl_session_st* %29, null
  br i1 %32, label %39, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %29, i64 0, i32 0
  %35 = tail call i32 @CRYPTO_refcount_dec_and_test_zero(i32* %34) #13
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %39, label %37

37:                                               ; preds = %33
  tail call void @_ZN14ssl_session_stD2Ev(%struct.ssl_session_st* nonnull %29) #13
  %38 = bitcast %struct.ssl_session_st* %29 to i8*
  tail call void @OPENSSL_free(i8* nonnull %38) #13
  br label %39

39:                                               ; preds = %18, %28, %33, %37
  ret i32 1
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @SSL_CTX_set_timeout(%struct.ssl_ctx_st*, i32) local_unnamed_addr #5 {
  %3 = icmp eq %struct.ssl_ctx_st* %0, null
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = icmp eq i32 %1, 0
  %6 = select i1 %5, i32 7200, i32 %1
  %7 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 15
  %8 = load i32, i32* %7, align 8
  store i32 %6, i32* %7, align 8
  br label %9

9:                                                ; preds = %2, %4
  %10 = phi i32 [ %8, %4 ], [ 0, %2 ]
  ret i32 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @SSL_CTX_get_timeout(%struct.ssl_ctx_st* readonly) local_unnamed_addr #6 {
  %2 = icmp eq %struct.ssl_ctx_st* %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 15
  %5 = load i32, i32* %4, align 8
  br label %6

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 0, %1 ]
  ret i32 %7
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @SSL_CTX_set_session_psk_dhe_timeout(%struct.ssl_ctx_st* nocapture, i32) local_unnamed_addr #7 {
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 16
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @SSL_CTX_flush_sessions(%struct.ssl_ctx_st*, i64) local_unnamed_addr #0 {
  %3 = alloca %struct.LHASH_DOALL_SSL_SESSION, align 8
  %4 = alloca %struct.timeout_param_st, align 8
  %5 = bitcast %struct.timeout_param_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #13
  %6 = getelementptr inbounds %struct.timeout_param_st, %struct.timeout_param_st* %4, i64 0, i32 0
  %7 = getelementptr inbounds %struct.timeout_param_st, %struct.timeout_param_st* %4, i64 0, i32 2
  %8 = getelementptr inbounds %struct.timeout_param_st, %struct.timeout_param_st* %4, i64 0, i32 1
  store i64 -6148914691236517206, i64* %8, align 8
  store %struct.ssl_ctx_st* %0, %struct.ssl_ctx_st** %6, align 8
  %9 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 9
  %10 = load %struct.lhash_st_SSL_SESSION*, %struct.lhash_st_SSL_SESSION** %9, align 8
  store %struct.lhash_st_SSL_SESSION* %10, %struct.lhash_st_SSL_SESSION** %7, align 8
  %11 = icmp eq %struct.lhash_st_SSL_SESSION* %10, null
  br i1 %11, label %21, label %12

12:                                               ; preds = %2
  %13 = bitcast %struct.lhash_st_SSL_SESSION* %10 to %struct.lhash_st*
  %14 = getelementptr inbounds %struct.timeout_param_st, %struct.timeout_param_st* %4, i64 0, i32 1
  store i64 %1, i64* %14, align 8
  %15 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 2
  tail call void @CRYPTO_MUTEX_lock_write(%union.crypto_mutex_st* %15) #13
  %16 = bitcast %struct.LHASH_DOALL_SSL_SESSION* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #13
  %17 = getelementptr inbounds %struct.LHASH_DOALL_SSL_SESSION, %struct.LHASH_DOALL_SSL_SESSION* %3, i64 0, i32 0
  %18 = getelementptr inbounds %struct.LHASH_DOALL_SSL_SESSION, %struct.LHASH_DOALL_SSL_SESSION* %3, i64 0, i32 1
  %19 = getelementptr inbounds %struct.LHASH_DOALL_SSL_SESSION, %struct.LHASH_DOALL_SSL_SESSION* %3, i64 0, i32 2
  store void (%struct.ssl_session_st*)* null, void (%struct.ssl_session_st*)** %17, align 8
  store void (%struct.ssl_session_st*, i8*)* @_ZL17timeout_doall_argP14ssl_session_stPv, void (%struct.ssl_session_st*, i8*)** %18, align 8
  %20 = bitcast i8** %19 to %struct.timeout_param_st**
  store %struct.timeout_param_st* %4, %struct.timeout_param_st** %20, align 8
  call void @lh_doall_arg(%struct.lhash_st* nonnull %13, void (i8*, i8*)* nonnull @_Z29lh_SSL_SESSION_call_doall_argPvS_, i8* nonnull %16) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #13
  call void @CRYPTO_MUTEX_unlock_write(%union.crypto_mutex_st* %15) #13
  br label %21

21:                                               ; preds = %2, %12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL17timeout_doall_argP14ssl_session_stPv(%struct.ssl_session_st*, i8* nocapture readonly) #0 {
  %3 = getelementptr inbounds i8, i8* %1, i64 8
  %4 = bitcast i8* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %17, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 19
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 17
  %11 = load i32, i32* %10, align 8
  %12 = zext i32 %11 to i64
  %13 = add i64 %9, %12
  %14 = icmp ult i64 %13, %9
  %15 = icmp ugt i64 %5, %13
  %16 = or i1 %14, %15
  br i1 %16, label %17, label %74

17:                                               ; preds = %7, %2
  %18 = getelementptr inbounds i8, i8* %1, i64 16
  %19 = bitcast i8* %18 to %struct.lhash_st**
  %20 = load %struct.lhash_st*, %struct.lhash_st** %19, align 8
  %21 = bitcast %struct.ssl_session_st* %0 to i8*
  %22 = tail call i8* @lh_delete(%struct.lhash_st* %20, i8* %21, i32 (i32 (i8*)*, i8*)* nonnull @_Z29lh_SSL_SESSION_call_hash_funcPFjPKvES0_, i32 (i32 (i8*, i8*)*, i8*, i8*)* nonnull @_Z28lh_SSL_SESSION_call_cmp_funcPFiPKvS0_ES0_S0_) #13
  %23 = bitcast i8* %1 to %struct.ssl_ctx_st**
  %24 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %23, align 8
  %25 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 23
  %26 = load %struct.ssl_session_st*, %struct.ssl_session_st** %25, align 8
  %27 = icmp eq %struct.ssl_session_st* %26, null
  br i1 %27, label %61, label %28

28:                                               ; preds = %17
  %29 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 22
  %30 = load %struct.ssl_session_st*, %struct.ssl_session_st** %29, align 8
  %31 = icmp eq %struct.ssl_session_st* %30, null
  br i1 %31, label %61, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %24, i64 0, i32 12
  %34 = bitcast %struct.ssl_session_st** %33 to %struct.ssl_session_st*
  %35 = icmp eq %struct.ssl_session_st* %26, %34
  %36 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %24, i64 0, i32 11
  %37 = bitcast %struct.ssl_session_st** %36 to %struct.ssl_session_st*
  %38 = icmp eq %struct.ssl_session_st* %30, %37
  br i1 %35, label %39, label %46

39:                                               ; preds = %32
  br i1 %38, label %40, label %42

40:                                               ; preds = %39
  %41 = bitcast %struct.ssl_session_st** %36 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 16, i1 false) #13
  br label %58

42:                                               ; preds = %39
  store %struct.ssl_session_st* %30, %struct.ssl_session_st** %33, align 8
  %43 = load %struct.ssl_session_st*, %struct.ssl_session_st** %29, align 8
  %44 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %43, i64 0, i32 23
  %45 = bitcast %struct.ssl_session_st** %44 to %struct.ssl_session_st***
  store %struct.ssl_session_st** %33, %struct.ssl_session_st*** %45, align 8
  br label %58

46:                                               ; preds = %32
  br i1 %38, label %47, label %51

47:                                               ; preds = %46
  store %struct.ssl_session_st* %26, %struct.ssl_session_st** %36, align 8
  %48 = load %struct.ssl_session_st*, %struct.ssl_session_st** %25, align 8
  %49 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %48, i64 0, i32 22
  %50 = bitcast %struct.ssl_session_st** %49 to %struct.ssl_session_st***
  store %struct.ssl_session_st** %36, %struct.ssl_session_st*** %50, align 8
  br label %58

51:                                               ; preds = %46
  %52 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %26, i64 0, i32 22
  store %struct.ssl_session_st* %30, %struct.ssl_session_st** %52, align 8
  %53 = bitcast %struct.ssl_session_st** %25 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = load %struct.ssl_session_st*, %struct.ssl_session_st** %29, align 8
  %56 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %55, i64 0, i32 23
  %57 = bitcast %struct.ssl_session_st** %56 to i64*
  store i64 %54, i64* %57, align 8
  br label %58

58:                                               ; preds = %51, %47, %42, %40
  %59 = bitcast %struct.ssl_session_st** %29 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 16, i1 false) #13
  %60 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %23, align 8
  br label %61

61:                                               ; preds = %17, %28, %58
  %62 = phi %struct.ssl_ctx_st* [ %24, %17 ], [ %24, %28 ], [ %60, %58 ]
  %63 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %62, i64 0, i32 18
  %64 = load void (%struct.ssl_ctx_st*, %struct.ssl_session_st*)*, void (%struct.ssl_ctx_st*, %struct.ssl_session_st*)** %63, align 8
  %65 = icmp eq void (%struct.ssl_ctx_st*, %struct.ssl_session_st*)* %64, null
  br i1 %65, label %67, label %66

66:                                               ; preds = %61
  tail call void %64(%struct.ssl_ctx_st* %62, %struct.ssl_session_st* %0) #13
  br label %67

67:                                               ; preds = %61, %66
  %68 = icmp eq %struct.ssl_session_st* %0, null
  br i1 %68, label %74, label %69

69:                                               ; preds = %67
  %70 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 0
  %71 = tail call i32 @CRYPTO_refcount_dec_and_test_zero(i32* %70) #13
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %74, label %73

73:                                               ; preds = %69
  tail call void @_ZN14ssl_session_stD2Ev(%struct.ssl_session_st* nonnull %0) #13
  tail call void @OPENSSL_free(i8* nonnull %21) #13
  br label %74

74:                                               ; preds = %73, %69, %67, %7
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @SSL_CTX_sess_set_new_cb(%struct.ssl_ctx_st* nocapture, i32 (%struct.ssl_st*, %struct.ssl_session_st*)*) local_unnamed_addr #7 {
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 17
  store i32 (%struct.ssl_st*, %struct.ssl_session_st*)* %1, i32 (%struct.ssl_st*, %struct.ssl_session_st*)** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 (%struct.ssl_st*, %struct.ssl_session_st*)* @SSL_CTX_sess_get_new_cb(%struct.ssl_ctx_st* nocapture readonly) local_unnamed_addr #6 {
  %2 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 17
  %3 = load i32 (%struct.ssl_st*, %struct.ssl_session_st*)*, i32 (%struct.ssl_st*, %struct.ssl_session_st*)** %2, align 8
  ret i32 (%struct.ssl_st*, %struct.ssl_session_st*)* %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @SSL_CTX_sess_set_remove_cb(%struct.ssl_ctx_st* nocapture, void (%struct.ssl_ctx_st*, %struct.ssl_session_st*)*) local_unnamed_addr #7 {
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 18
  store void (%struct.ssl_ctx_st*, %struct.ssl_session_st*)* %1, void (%struct.ssl_ctx_st*, %struct.ssl_session_st*)** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden void (%struct.ssl_ctx_st*, %struct.ssl_session_st*)* @SSL_CTX_sess_get_remove_cb(%struct.ssl_ctx_st* nocapture readonly) local_unnamed_addr #6 {
  %2 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 18
  %3 = load void (%struct.ssl_ctx_st*, %struct.ssl_session_st*)*, void (%struct.ssl_ctx_st*, %struct.ssl_session_st*)** %2, align 8
  ret void (%struct.ssl_ctx_st*, %struct.ssl_session_st*)* %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @SSL_CTX_sess_set_get_cb(%struct.ssl_ctx_st* nocapture, %struct.ssl_session_st* (%struct.ssl_st*, i8*, i32, i32*)*) local_unnamed_addr #7 {
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 19
  store %struct.ssl_session_st* (%struct.ssl_st*, i8*, i32, i32*)* %1, %struct.ssl_session_st* (%struct.ssl_st*, i8*, i32, i32*)** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.ssl_session_st* (%struct.ssl_st*, i8*, i32, i32*)* @SSL_CTX_sess_get_get_cb(%struct.ssl_ctx_st* nocapture readonly) local_unnamed_addr #6 {
  %2 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 19
  %3 = load %struct.ssl_session_st* (%struct.ssl_st*, i8*, i32, i32*)*, %struct.ssl_session_st* (%struct.ssl_st*, i8*, i32, i32*)** %2, align 8
  ret %struct.ssl_session_st* (%struct.ssl_st*, i8*, i32, i32*)* %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @SSL_CTX_set_info_callback(%struct.ssl_ctx_st* nocapture, void (%struct.ssl_st*, i32, i32)*) local_unnamed_addr #7 {
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 30
  store void (%struct.ssl_st*, i32, i32)* %1, void (%struct.ssl_st*, i32, i32)** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden void (%struct.ssl_st*, i32, i32)* @SSL_CTX_get_info_callback(%struct.ssl_ctx_st* nocapture readonly) local_unnamed_addr #6 {
  %2 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 30
  %3 = load void (%struct.ssl_st*, i32, i32)*, void (%struct.ssl_st*, i32, i32)** %2, align 8
  ret void (%struct.ssl_st*, i32, i32)* %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @SSL_CTX_set_channel_id_cb(%struct.ssl_ctx_st* nocapture, void (%struct.ssl_st*, %struct.evp_pkey_st**)*) local_unnamed_addr #7 {
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 28
  store void (%struct.ssl_st*, %struct.evp_pkey_st**)* %1, void (%struct.ssl_st*, %struct.evp_pkey_st**)** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden void (%struct.ssl_st*, %struct.evp_pkey_st**)* @SSL_CTX_get_channel_id_cb(%struct.ssl_ctx_st* nocapture readonly) local_unnamed_addr #6 {
  %2 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 28
  %3 = load void (%struct.ssl_st*, %struct.evp_pkey_st**)*, void (%struct.ssl_st*, %struct.evp_pkey_st**)** %2, align 8
  ret void (%struct.ssl_st*, %struct.evp_pkey_st**)* %3
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare %struct.stack_st* @sk_deep_copy(%struct.stack_st*, i8* (i8* (i8*)*, i8*)*, i8* (i8*)*, void (void (i8*)*, i8*)*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @sk_CRYPTO_BUFFER_call_copy_func(i8* (i8*)*, i8*) #10 comdat {
  %3 = bitcast i8* (i8*)* %0 to %struct.crypto_buffer_st* (%struct.crypto_buffer_st*)*
  %4 = bitcast i8* %1 to %struct.crypto_buffer_st*
  %5 = tail call %struct.crypto_buffer_st* %3(%struct.crypto_buffer_st* %4) #13
  %6 = bitcast %struct.crypto_buffer_st* %5 to i8*
  ret i8* %6
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @sk_CRYPTO_BUFFER_call_free_func(void (i8*)*, i8*) #10 comdat {
  %3 = bitcast void (i8*)* %0 to void (%struct.crypto_buffer_st*)*
  %4 = bitcast i8* %1 to %struct.crypto_buffer_st*
  tail call void %3(%struct.crypto_buffer_st* %4) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal %struct.crypto_buffer_st* @"_ZZN4bssl15SSL_SESSION_dupEP14ssl_session_stiEN3$_08__invokeEP16crypto_buffer_st"(%struct.crypto_buffer_st* returned) #10 align 2 {
  %2 = tail call i32 @CRYPTO_BUFFER_up_ref(%struct.crypto_buffer_st* %0) #13
  ret %struct.crypto_buffer_st* %0
}

declare i32 @CRYPTO_BUFFER_up_ref(%struct.crypto_buffer_st*) local_unnamed_addr #2

declare i32 @CBB_reserve(%struct.cbb_st*, i8**, i64) local_unnamed_addr #2

declare i32 @CBB_did_write(%struct.cbb_st*, i64) local_unnamed_addr #2

declare i32 @CBB_add_bytes(%struct.cbb_st*, i8*, i64) local_unnamed_addr #2

declare i32 @EVP_EncryptInit_ex(%struct.evp_cipher_ctx_st*, %struct.evp_cipher_st*, %struct.engine_st*, i8*, i8*) local_unnamed_addr #2

declare %struct.evp_cipher_st* @EVP_aes_128_cbc() local_unnamed_addr #2

declare i32 @HMAC_Init_ex(%struct.hmac_ctx_st*, i8*, i64, %struct.env_md_st*, %struct.engine_st*) local_unnamed_addr #2

declare %struct.env_md_st* @EVP_sha256() local_unnamed_addr #2

declare i32 @EVP_CIPHER_CTX_iv_length(%struct.evp_cipher_ctx_st*) local_unnamed_addr #2

declare i32 @EVP_EncryptUpdate(%struct.evp_cipher_ctx_st*, i8*, i32*, i8*, i32) local_unnamed_addr #2

declare i32 @EVP_EncryptFinal_ex(%struct.evp_cipher_ctx_st*, i8*, i32*) local_unnamed_addr #2

declare i32 @HMAC_Update(%struct.hmac_ctx_st*, i8*, i64) local_unnamed_addr #2

declare i8* @CBB_data(%struct.cbb_st*) local_unnamed_addr #2

declare i64 @CBB_len(%struct.cbb_st*) local_unnamed_addr #2

declare i32 @HMAC_Final(%struct.hmac_ctx_st*, i8*, i32*) local_unnamed_addr #2

declare void @EVP_CIPHER_CTX_init(%struct.evp_cipher_ctx_st*) local_unnamed_addr #2

declare void @HMAC_CTX_init(%struct.hmac_ctx_st*) local_unnamed_addr #2

declare void @HMAC_CTX_cleanup(%struct.hmac_ctx_st*) local_unnamed_addr #2

declare i32 @EVP_CIPHER_CTX_cleanup(%struct.evp_cipher_ctx_st*) local_unnamed_addr #2

declare i64 @sk_num(%struct.stack_st*) local_unnamed_addr #2

declare i8* @lh_retrieve_key(%struct.lhash_st*, i8*, i32, i32 (i8*, i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_Z27lh_SSL_SESSION_call_cmp_keyPKvS0_(i8*, i8*) #10 comdat {
  %3 = bitcast i8* %0 to i32 (i8*, %struct.ssl_session_st*)**
  %4 = load i32 (i8*, %struct.ssl_session_st*)*, i32 (i8*, %struct.ssl_session_st*)** %3, align 8
  %5 = getelementptr inbounds i8, i8* %0, i64 8
  %6 = bitcast i8* %5 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = bitcast i8* %1 to %struct.ssl_session_st*
  %9 = tail call i32 %4(i8* %7, %struct.ssl_session_st* %8) #13
  ret i32 %9
}

; Function Attrs: inlinehint norecurse nounwind readonly ssp uwtable
define internal i32 @"_ZZN4bsslL18ssl_lookup_sessionEPNS_13SSL_HANDSHAKEEPNSt3__110unique_ptrI14ssl_session_stNS_8internal7DeleterIS4_EEEENS_4SpanIKhEEEN3$_18__invokeEPKvPKS4_"(i8* nocapture readonly, %struct.ssl_session_st* readonly) #11 align 2 {
  %3 = bitcast i8* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %0, i64 8
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %1, i64 0, i32 6
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = icmp eq i64 %7, %10
  br i1 %11, label %12, label %30

12:                                               ; preds = %2
  %13 = getelementptr inbounds i8, i8* %4, i64 %7
  %14 = icmp eq i64 %7, 0
  %15 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %1, i64 0, i32 7, i64 %7
  br i1 %14, label %30, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %1, i64 0, i32 7, i64 0
  br label %18

18:                                               ; preds = %24, %16
  %19 = phi i8* [ %26, %24 ], [ %17, %16 ]
  %20 = phi i8* [ %25, %24 ], [ %4, %16 ]
  %21 = load i8, i8* %20, align 1
  %22 = load i8, i8* %19, align 1
  %23 = icmp eq i8 %21, %22
  br i1 %23, label %24, label %30

24:                                               ; preds = %18
  %25 = getelementptr inbounds i8, i8* %20, i64 1
  %26 = getelementptr inbounds i8, i8* %19, i64 1
  %27 = icmp eq i8* %25, %13
  %28 = icmp eq i8* %26, %15
  %29 = or i1 %28, %27
  br i1 %29, label %30, label %18

30:                                               ; preds = %18, %24, %2, %12
  %31 = phi i32 [ 1, %2 ], [ 0, %12 ], [ 1, %18 ], [ 0, %24 ]
  ret i32 %31
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare i32 @lh_insert(%struct.lhash_st*, i8**, i8*, i32 (i32 (i8*)*, i8*)*, i32 (i32 (i8*, i8*)*, i8*, i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_Z29lh_SSL_SESSION_call_hash_funcPFjPKvES0_(i32 (i8*)*, i8*) #10 comdat {
  %3 = bitcast i32 (i8*)* %0 to i32 (%struct.ssl_session_st*)*
  %4 = bitcast i8* %1 to %struct.ssl_session_st*
  %5 = tail call i32 %3(%struct.ssl_session_st* %4) #13
  ret i32 %5
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_Z28lh_SSL_SESSION_call_cmp_funcPFiPKvS0_ES0_S0_(i32 (i8*, i8*)*, i8*, i8*) #10 comdat {
  %4 = bitcast i32 (i8*, i8*)* %0 to i32 (%struct.ssl_session_st*, %struct.ssl_session_st*)*
  %5 = bitcast i8* %1 to %struct.ssl_session_st*
  %6 = bitcast i8* %2 to %struct.ssl_session_st*
  %7 = tail call i32 %4(%struct.ssl_session_st* %5, %struct.ssl_session_st* %6) #13
  ret i32 %7
}

declare i64 @lh_num_items(%struct.lhash_st*) local_unnamed_addr #2

declare void @CRYPTO_MUTEX_lock_write(%union.crypto_mutex_st*) local_unnamed_addr #2

declare void @CRYPTO_MUTEX_unlock_write(%union.crypto_mutex_st*) local_unnamed_addr #2

declare i8* @lh_retrieve(%struct.lhash_st*, i8*, i32 (i32 (i8*)*, i8*)*, i32 (i32 (i8*, i8*)*, i8*, i8*)*) local_unnamed_addr #2

declare i8* @lh_delete(%struct.lhash_st*, i8*, i32 (i32 (i8*)*, i8*)*, i32 (i32 (i8*, i8*)*, i8*, i8*)*) local_unnamed_addr #2

declare void @lh_doall_arg(%struct.lhash_st*, void (i8*, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_Z29lh_SSL_SESSION_call_doall_argPvS_(i8*, i8*) #10 comdat {
  %3 = getelementptr inbounds i8, i8* %1, i64 8
  %4 = bitcast i8* %3 to void (%struct.ssl_session_st*, i8*)**
  %5 = load void (%struct.ssl_session_st*, i8*)*, void (%struct.ssl_session_st*, i8*)** %4, align 8
  %6 = bitcast i8* %0 to %struct.ssl_session_st*
  %7 = getelementptr inbounds i8, i8* %1, i64 16
  %8 = bitcast i8* %7 to i8**
  %9 = load i8*, i8** %8, align 8
  tail call void %5(%struct.ssl_session_st* %6, i8* %9) #13
  ret void
}

declare i8* @OPENSSL_malloc(i64) local_unnamed_addr #2

declare void @sk_pop_free_ex(%struct.stack_st*, void (void (i8*)*, i8*)*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN4bssl8internal11DeleterImplI22stack_st_CRYPTO_BUFFERvE4FreeEPS2_ENUlPFvPvES5_E_8__invokeES7_S5_(void (i8*)*, i8*) #10 comdat align 2 {
  %3 = bitcast i8* %1 to %struct.crypto_buffer_st*
  tail call void @CRYPTO_BUFFER_free(%struct.crypto_buffer_st* %3) #13
  ret void
}

declare void @CRYPTO_MUTEX_lock_read(%union.crypto_mutex_st*) local_unnamed_addr #2

declare void @CRYPTO_MUTEX_unlock_read(%union.crypto_mutex_st*) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #12

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { inlinehint norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind readonly }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
