; ModuleID = '../../third_party/webrtc/api/audio_codecs/L16/audio_encoder_L16.cc'
source_filename = "../../third_party/webrtc/api/audio_codecs/L16/audio_encoder_L16.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.webrtc::SdpAudioFormat" = type { %"class.std::__1::basic_string", i32, i64, %"class.std::__1::map" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.0 }
%union.anon.0 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2", %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.webrtc::AudioCodecSpec"*, %"struct.webrtc::AudioCodecSpec"*, %"class.std::__1::__compressed_pair.15" }
%"struct.webrtc::AudioCodecSpec" = type { %"struct.webrtc::SdpAudioFormat", %"struct.webrtc::AudioCodecInfo" }
%"struct.webrtc::AudioCodecInfo" = type <{ i32, [4 x i8], i64, i32, i32, i32, i8, i8, [2 x i8] }>
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.webrtc::AudioCodecSpec"* }
%"struct.webrtc::AudioEncoderL16::Config" = type { i32, i32, i32 }
%"class.webrtc::AudioEncoder" = type { i32 (...)** }
%"struct.webrtc::AudioEncoderPcm16B::Config" = type { %"struct.webrtc::AudioEncoderPcm::Config.base", i32 }
%"struct.webrtc::AudioEncoderPcm::Config.base" = type <{ i32, [4 x i8], i64, i32 }>
%"class.webrtc::AudioEncoderPcm" = type <{ %"class.webrtc::AudioEncoder", i32, [4 x i8], i64, i32, [4 x i8], i64, i64, %"class.std::__1::vector.31", i32, [4 x i8] }>
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { i16*, i16*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { i16* }
%"struct.webrtc::AudioEncoderPcm::Config" = type <{ i32, [4 x i8], i64, i32, [4 x i8] }>
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }

$_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE4findIS7_EENS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEERKT_ = comdat any

@.str = private unnamed_addr constant [6 x i8] c"ptime\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"L16\00", align 1
@_ZTVN6webrtc18AudioEncoderPcm16BE = external unnamed_addr constant { [34 x i8*] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN6webrtc15AudioEncoderL1611SdpToConfigERKNS_14SdpAudioFormatE(%"struct.webrtc::SdpAudioFormat"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = getelementptr inbounds %"struct.webrtc::SdpAudioFormat", %"struct.webrtc::SdpAudioFormat"* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, 2147483648
  br i1 %5, label %6, label %80

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"struct.webrtc::SdpAudioFormat", %"struct.webrtc::SdpAudioFormat"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = trunc i64 %4 to i32
  %10 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #8
  %11 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  store i8 5, i8* %12, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i64 5, i1 false) #8
  %13 = getelementptr inbounds i8, i8* %10, i64 5
  store i8 0, i8* %13, align 1
  %14 = getelementptr inbounds %"struct.webrtc::SdpAudioFormat", %"struct.webrtc::SdpAudioFormat"* %0, i64 0, i32 3, i32 0
  %15 = call %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE4findIS7_EENS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEERKT_(%"class.std::__1::__tree"* %14, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #8
  %16 = load i8, i8* %12, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @_ZdlPv(i8* %20) #9
  br label %21

21:                                               ; preds = %6, %18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #8
  %22 = getelementptr inbounds %"struct.webrtc::SdpAudioFormat", %"struct.webrtc::SdpAudioFormat"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %23 = icmp eq %"class.std::__1::__tree_end_node"* %15, %22
  br i1 %23, label %51, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %15, i64 7
  %26 = bitcast %"class.std::__1::__tree_end_node"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = bitcast %"class.std::__1::__tree_end_node"* %25 to i8**
  %31 = load i8*, i8** %30, align 8
  %32 = bitcast %"class.std::__1::__tree_end_node"* %25 to i8*
  %33 = select i1 %29, i8* %31, i8* %32
  %34 = call { i8, i64 } @_ZN3rtc25string_to_number_internal11ParseSignedEPKci(i8* %33, i32 10) #8
  %35 = extractvalue { i8, i64 } %34, 0
  %36 = extractvalue { i8, i64 } %34, 1
  %37 = icmp ne i8 %35, 0
  %38 = add i64 %36, 2147483648
  %39 = icmp ult i64 %38, 4294967296
  %40 = and i1 %37, %39
  %41 = trunc i64 %36 to i32
  %42 = icmp sgt i32 %41, 0
  %43 = and i1 %42, %40
  br i1 %43, label %44, label %51

44:                                               ; preds = %24
  %45 = urem i32 %41, 10
  %46 = sub nsw i32 %41, %45
  %47 = icmp slt i32 %46, 60
  %48 = select i1 %47, i32 %46, i32 60
  %49 = icmp sgt i32 %48, 10
  %50 = select i1 %49, i32 %48, i32 10
  br label %51

51:                                               ; preds = %21, %24, %44
  %52 = phi i32 [ 10, %21 ], [ %50, %44 ], [ 10, %24 ]
  %53 = bitcast %"struct.webrtc::SdpAudioFormat"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  %55 = load i8, i8* %54, align 1
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %51
  %58 = zext i8 %55 to i64
  %59 = ptrtoint %"struct.webrtc::SdpAudioFormat"* %0 to i64
  br label %67

60:                                               ; preds = %51
  %61 = bitcast %"struct.webrtc::SdpAudioFormat"* %0 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds %"struct.webrtc::SdpAudioFormat", %"struct.webrtc::SdpAudioFormat"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = icmp sgt i64 %64, -1
  br i1 %65, label %67, label %66, !prof !2

66:                                               ; preds = %60
  call void @llvm.trap() #8
  unreachable

67:                                               ; preds = %60, %57
  %68 = phi i64 [ %62, %60 ], [ %59, %57 ]
  %69 = phi i64 [ %64, %60 ], [ %58, %57 ]
  %70 = inttoptr i64 %68 to i8*
  %71 = call zeroext i1 @_ZN4absl16EqualsIgnoreCaseENS_11string_viewES0_(i8* %70, i64 %69, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i64 3) #8
  br i1 %71, label %72, label %79

72:                                               ; preds = %67
  switch i32 %8, label %79 [
    i32 8000, label %73
    i32 16000, label %73
    i32 32000, label %73
    i32 48000, label %73
  ]

73:                                               ; preds = %72, %72, %72, %72
  %74 = icmp sgt i32 %9, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %73
  %76 = trunc i32 %52 to i8
  %77 = urem i8 %76, 10
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %72, %73, %75, %67
  br label %80

80:                                               ; preds = %79, %75, %1
  %81 = phi i64 [ 0, %1 ], [ 0, %79 ], [ 1, %75 ]
  %82 = phi i32 [ undef, %1 ], [ %8, %79 ], [ %8, %75 ]
  %83 = phi i64 [ 0, %1 ], [ %4, %79 ], [ %4, %75 ]
  %84 = phi i32 [ undef, %1 ], [ %52, %79 ], [ %52, %75 ]
  %85 = zext i32 %82 to i64
  %86 = shl nuw i64 %85, 32
  %87 = or i64 %86, %81
  %88 = insertvalue { i64, i64 } undef, i64 %87, 0
  %89 = zext i32 %84 to i64
  %90 = shl nuw i64 %89, 32
  %91 = and i64 %83, 4294967295
  %92 = or i64 %90, %91
  %93 = insertvalue { i64, i64 } %88, i64 %92, 1
  ret { i64, i64 } %93
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind
declare zeroext i1 @_ZN4absl16EqualsIgnoreCaseENS_11string_viewES0_(i8*, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc15AudioEncoderL1623AppendSupportedEncodersEPNSt3__16vectorINS_14AudioCodecSpecENS1_9allocatorIS3_EEEE(%"class.std::__1::vector"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN6webrtc31Pcm16BAppendSupportedCodecSpecsEPNSt3__16vectorINS_14AudioCodecSpecENS0_9allocatorIS2_EEEE(%"class.std::__1::vector"* %0) #8
  ret void
}

declare void @_ZN6webrtc31Pcm16BAppendSupportedCodecSpecsEPNSt3__16vectorINS_14AudioCodecSpecENS0_9allocatorIS2_EEEE(%"class.std::__1::vector"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc15AudioEncoderL1617QueryAudioEncoderERKNS0_6ConfigE(%"struct.webrtc::AudioCodecInfo"* noalias sret, %"struct.webrtc::AudioEncoderL16::Config"* nocapture readonly dereferenceable(12)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.webrtc::AudioEncoderL16::Config", %"struct.webrtc::AudioEncoderL16::Config"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"struct.webrtc::AudioEncoderL16::Config", %"struct.webrtc::AudioEncoderL16::Config"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = sext i32 %6 to i64
  %8 = shl i32 %4, 4
  %9 = mul i32 %8, %6
  tail call void @_ZN6webrtc14AudioCodecInfoC1Eimi(%"struct.webrtc::AudioCodecInfo"* %0, i32 %4, i64 %7, i32 %9) #8
  ret void
}

declare void @_ZN6webrtc14AudioCodecInfoC1Eimi(%"struct.webrtc::AudioCodecInfo"*, i32, i64, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.webrtc::AudioEncoder"* @_ZN6webrtc15AudioEncoderL1616MakeAudioEncoderERKNS0_6ConfigEiN4absl8optionalINS_16AudioCodecPairIdEEE(%"struct.webrtc::AudioEncoderL16::Config"* nocapture readonly dereferenceable(12), i32, i8, i64) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.webrtc::AudioEncoderPcm16B::Config", align 8
  %6 = bitcast %"struct.webrtc::AudioEncoderPcm16B::Config"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"struct.webrtc::AudioEncoderPcm16B::Config", %"struct.webrtc::AudioEncoderPcm16B::Config"* %5, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.webrtc::AudioEncoderPcm16B::Config", %"struct.webrtc::AudioEncoderPcm16B::Config"* %5, i64 0, i32 0, i32 2
  %9 = getelementptr inbounds %"struct.webrtc::AudioEncoderPcm16B::Config", %"struct.webrtc::AudioEncoderPcm16B::Config"* %5, i64 0, i32 0, i32 3
  %10 = getelementptr inbounds %"struct.webrtc::AudioEncoderPcm16B::Config", %"struct.webrtc::AudioEncoderPcm16B::Config"* %5, i64 0, i32 1
  %11 = bitcast %"struct.webrtc::AudioEncoderPcm16B::Config"* %5 to i64*
  store i64 -6148914691236517206, i64* %11, align 8
  %12 = getelementptr inbounds %"struct.webrtc::AudioEncoderL16::Config", %"struct.webrtc::AudioEncoderL16::Config"* %0, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  store i32 %13, i32* %10, align 4
  %14 = getelementptr inbounds %"struct.webrtc::AudioEncoderL16::Config", %"struct.webrtc::AudioEncoderL16::Config"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = sext i32 %15 to i64
  store i64 %16, i64* %8, align 8
  %17 = getelementptr inbounds %"struct.webrtc::AudioEncoderL16::Config", %"struct.webrtc::AudioEncoderL16::Config"* %0, i64 0, i32 2
  %18 = load i32, i32* %17, align 4
  store i32 %18, i32* %7, align 8
  store i32 %1, i32* %9, align 8
  %19 = tail call i8* @_Znwm(i64 80) #9
  %20 = bitcast i8* %19 to %"class.webrtc::AudioEncoderPcm"*
  %21 = bitcast %"struct.webrtc::AudioEncoderPcm16B::Config"* %5 to %"struct.webrtc::AudioEncoderPcm::Config"*
  call void @_ZN6webrtc15AudioEncoderPcmC2ERKNS0_6ConfigEi(%"class.webrtc::AudioEncoderPcm"* nonnull %20, %"struct.webrtc::AudioEncoderPcm::Config"* nonnull dereferenceable(24) %21, i32 %13) #8
  %22 = bitcast i8* %19 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*] }, { [34 x i8*] }* @_ZTVN6webrtc18AudioEncoderPcm16BE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8
  %23 = bitcast i8* %19 to %"class.webrtc::AudioEncoder"*
  ret %"class.webrtc::AudioEncoder"* %23
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE4findIS7_EENS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEERKT_(%"class.std::__1::__tree"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %84, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %19 = select i1 %11, i8* %17, i8* %18
  br label %20

20:                                               ; preds = %46, %7
  %21 = phi %"class.std::__1::__tree_end_node"* [ %3, %7 ], [ %54, %46 ]
  %22 = phi %"class.std::__1::__tree_node"* [ %5, %7 ], [ %55, %46 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1
  %24 = bitcast %"struct.std::__1::__value_type"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = icmp ult i64 %15, %31
  %33 = select i1 %32, i64 %15, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %20
  %36 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"struct.std::__1::__value_type"* %23 to i8*
  %39 = select i1 %27, i8* %37, i8* %38
  %40 = tail call i32 @memcmp(i8* %39, i8* %19, i64 %33) #8
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %35, %20
  %43 = icmp ult i64 %31, %15
  %44 = zext i1 %32 to i32
  %45 = select i1 %43, i32 -1, i32 %44
  br label %46

46:                                               ; preds = %42, %35
  %47 = phi i32 [ %45, %42 ], [ %40, %35 ]
  %48 = icmp slt i32 %47, 0
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 1
  %50 = bitcast %"class.std::__1::__tree_node_base"** %49 to %"class.std::__1::__tree_node"**
  %51 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 0
  %52 = bitcast %"class.std::__1::__tree_node"* %22 to %"class.std::__1::__tree_node"**
  %53 = select i1 %48, %"class.std::__1::__tree_node"** %50, %"class.std::__1::__tree_node"** %52
  %54 = select i1 %48, %"class.std::__1::__tree_end_node"* %21, %"class.std::__1::__tree_end_node"* %51
  %55 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %53, align 8
  %56 = icmp eq %"class.std::__1::__tree_node"* %55, null
  br i1 %56, label %57, label %20

57:                                               ; preds = %46
  %58 = icmp eq %"class.std::__1::__tree_end_node"* %54, %3
  br i1 %58, label %84, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 4
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 5
  %66 = bitcast %"class.std::__1::__tree_end_node"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = zext i8 %63 to i64
  %69 = select i1 %64, i64 %67, i64 %68
  %70 = icmp ult i64 %69, %15
  %71 = select i1 %70, i64 %69, i64 %15
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %80, label %73

73:                                               ; preds = %59
  %74 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8*
  %77 = select i1 %64, i8* %75, i8* %76
  %78 = tail call i32 @memcmp(i8* %19, i8* %77, i64 %71) #8
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %73, %59
  %81 = icmp ult i64 %15, %69
  br i1 %81, label %84, label %85

82:                                               ; preds = %73
  %83 = icmp slt i32 %78, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %57, %80, %2, %82
  br label %85

85:                                               ; preds = %80, %82, %84
  %86 = phi %"class.std::__1::__tree_end_node"* [ %3, %84 ], [ %54, %82 ], [ %54, %80 ]
  ret %"class.std::__1::__tree_end_node"* %86
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare { i8, i64 } @_ZN3rtc25string_to_number_internal11ParseSignedEPKci(i8*, i32) local_unnamed_addr #3

declare void @_ZN6webrtc15AudioEncoderPcmC2ERKNS0_6ConfigEi(%"class.webrtc::AudioEncoderPcm"*, %"struct.webrtc::AudioEncoderPcm::Config"* dereferenceable(24), i32) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
