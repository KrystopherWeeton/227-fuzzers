; ModuleID = '../../third_party/opus/src/silk/float/bwexpander_FLP.c'
source_filename = "../../third_party/opus/src/silk/float/bwexpander_FLP.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @silk_bwexpander_FLP(float* nocapture, i32, float) local_unnamed_addr #0 {
  %4 = add i32 %1, -1
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %55

6:                                                ; preds = %3
  %7 = zext i32 %4 to i64
  %8 = add nsw i64 %7, -1
  %9 = and i64 %7, 3
  %10 = icmp ult i64 %8, 3
  br i1 %10, label %39, label %11

11:                                               ; preds = %6
  %12 = sub nsw i64 %7, %9
  br label %13

13:                                               ; preds = %13, %11
  %14 = phi i64 [ 0, %11 ], [ %36, %13 ]
  %15 = phi float [ %2, %11 ], [ %35, %13 ]
  %16 = phi i64 [ %12, %11 ], [ %37, %13 ]
  %17 = getelementptr inbounds float, float* %0, i64 %14
  %18 = load float, float* %17, align 4
  %19 = fmul float %15, %18
  store float %19, float* %17, align 4
  %20 = fmul float %15, %2
  %21 = or i64 %14, 1
  %22 = getelementptr inbounds float, float* %0, i64 %21
  %23 = load float, float* %22, align 4
  %24 = fmul float %20, %23
  store float %24, float* %22, align 4
  %25 = fmul float %20, %2
  %26 = or i64 %14, 2
  %27 = getelementptr inbounds float, float* %0, i64 %26
  %28 = load float, float* %27, align 4
  %29 = fmul float %25, %28
  store float %29, float* %27, align 4
  %30 = fmul float %25, %2
  %31 = or i64 %14, 3
  %32 = getelementptr inbounds float, float* %0, i64 %31
  %33 = load float, float* %32, align 4
  %34 = fmul float %30, %33
  store float %34, float* %32, align 4
  %35 = fmul float %30, %2
  %36 = add nuw nsw i64 %14, 4
  %37 = add i64 %16, -4
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %39, label %13

39:                                               ; preds = %13, %6
  %40 = phi float [ undef, %6 ], [ %35, %13 ]
  %41 = phi i64 [ 0, %6 ], [ %36, %13 ]
  %42 = phi float [ %2, %6 ], [ %35, %13 ]
  %43 = icmp eq i64 %9, 0
  br i1 %43, label %55, label %44

44:                                               ; preds = %39, %44
  %45 = phi i64 [ %52, %44 ], [ %41, %39 ]
  %46 = phi float [ %51, %44 ], [ %42, %39 ]
  %47 = phi i64 [ %53, %44 ], [ %9, %39 ]
  %48 = getelementptr inbounds float, float* %0, i64 %45
  %49 = load float, float* %48, align 4
  %50 = fmul float %46, %49
  store float %50, float* %48, align 4
  %51 = fmul float %46, %2
  %52 = add nuw nsw i64 %45, 1
  %53 = add i64 %47, -1
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %55, label %44, !llvm.loop !2

55:                                               ; preds = %39, %44, %3
  %56 = phi float [ %2, %3 ], [ %40, %39 ], [ %51, %44 ]
  %57 = sext i32 %4 to i64
  %58 = getelementptr inbounds float, float* %0, i64 %57
  %59 = load float, float* %58, align 4
  %60 = fmul float %56, %59
  store float %60, float* %58, align 4
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
