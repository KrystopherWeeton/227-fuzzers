; ModuleID = '../../third_party/blink/renderer/platform/exported/web_media_stream_audio_sink.cc'
source_filename = "../../third_party/blink/renderer/platform/exported/web_media_stream_audio_sink.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::WebMediaStreamAudioSink" = type { %"class.blink::WebMediaStreamSink" }
%"class.blink::WebMediaStreamSink" = type { i32 (...)** }
%"class.blink::WebMediaStreamTrack" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.blink::MediaStreamComponent" = type opaque
%"class.blink::MediaStreamAudioTrack" = type { %"class.blink::MediaStreamTrackPlatform.base", %"class.base::OnceCallback", %"class.blink::MediaStreamAudioDeliverer", i32, %"class.std::__1::unique_ptr", i8, %"class.base::WeakPtrFactory" }
%"class.blink::MediaStreamTrackPlatform.base" = type <{ i32 (...)**, i8 }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::MediaStreamAudioDeliverer" = type { %"class.base::Lock", %"class.WTF::Vector", %"class.WTF::Vector", %"class.base::Lock", %"class.media::AudioParameters" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::WebMediaStreamAudioSink"**, i32, i32 }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.media::AudioParameters" = type { i32, i32, i32, i32, i32, i32, %"class.std::__1::vector", i32, %"class.absl::optional" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.gfx::Point3F"*, %"class.gfx::Point3F"*, %"class.std::__1::__compressed_pair" }
%"class.gfx::Point3F" = type { float, float, float }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.gfx::Point3F"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"struct.media::AudioParameters::HardwareCapabilities" }
%"struct.media::AudioParameters::HardwareCapabilities" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.media::AudioBus"* }
%"class.media::AudioBus" = type { i32 (...)**, %"class.std::__1::unique_ptr.4", i8, i64, i32, %"class.std::__1::vector.8", i32, i8, %"class.base::OnceCallback" }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { float* }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { float**, float**, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { float** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.16 }
%class.scoped_refptr.16 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.17", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.17" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.18" }
%"struct.std::__1::atomic.18" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__cxx_atomic_impl.21" }
%"struct.std::__1::__cxx_atomic_impl.21" = type { %"struct.std::__1::__cxx_atomic_base_impl.22" }
%"struct.std::__1::__cxx_atomic_base_impl.22" = type { i8 }

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23WebMediaStreamAudioSink15AddToAudioTrackEPS0_RKNS_19WebMediaStreamTrackE(%"class.blink::WebMediaStreamAudioSink"*, %"class.blink::WebMediaStreamTrack"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::MediaStreamComponent"* @_ZNK5blink19WebMediaStreamTrackcvPNS_20MediaStreamComponentEEv(%"class.blink::WebMediaStreamTrack"* %1) #2
  %4 = tail call %"class.blink::MediaStreamAudioTrack"* @_ZN5blink21MediaStreamAudioTrack4FromEPKNS_20MediaStreamComponentE(%"class.blink::MediaStreamComponent"* %3) #2
  tail call void @_ZN5blink21MediaStreamAudioTrack7AddSinkEPNS_23WebMediaStreamAudioSinkE(%"class.blink::MediaStreamAudioTrack"* %4, %"class.blink::WebMediaStreamAudioSink"* %0) #2
  ret void
}

declare %"class.blink::MediaStreamAudioTrack"* @_ZN5blink21MediaStreamAudioTrack4FromEPKNS_20MediaStreamComponentE(%"class.blink::MediaStreamComponent"*) local_unnamed_addr #1

declare %"class.blink::MediaStreamComponent"* @_ZNK5blink19WebMediaStreamTrackcvPNS_20MediaStreamComponentEEv(%"class.blink::WebMediaStreamTrack"*) local_unnamed_addr #1

declare void @_ZN5blink21MediaStreamAudioTrack7AddSinkEPNS_23WebMediaStreamAudioSinkE(%"class.blink::MediaStreamAudioTrack"*, %"class.blink::WebMediaStreamAudioSink"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23WebMediaStreamAudioSink20RemoveFromAudioTrackEPS0_RKNS_19WebMediaStreamTrackE(%"class.blink::WebMediaStreamAudioSink"*, %"class.blink::WebMediaStreamTrack"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::MediaStreamComponent"* @_ZNK5blink19WebMediaStreamTrackcvPNS_20MediaStreamComponentEEv(%"class.blink::WebMediaStreamTrack"* %1) #2
  %4 = tail call %"class.blink::MediaStreamAudioTrack"* @_ZN5blink21MediaStreamAudioTrack4FromEPKNS_20MediaStreamComponentE(%"class.blink::MediaStreamComponent"* %3) #2
  tail call void @_ZN5blink21MediaStreamAudioTrack10RemoveSinkEPNS_23WebMediaStreamAudioSinkE(%"class.blink::MediaStreamAudioTrack"* %4, %"class.blink::WebMediaStreamAudioSink"* %0) #2
  ret void
}

declare void @_ZN5blink21MediaStreamAudioTrack10RemoveSinkEPNS_23WebMediaStreamAudioSinkE(%"class.blink::MediaStreamAudioTrack"*, %"class.blink::WebMediaStreamAudioSink"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23WebMediaStreamAudioSink23GetFormatFromAudioTrackERKNS_19WebMediaStreamTrackE(%"class.media::AudioParameters"* noalias sret, %"class.blink::WebMediaStreamTrack"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::MediaStreamComponent"* @_ZNK5blink19WebMediaStreamTrackcvPNS_20MediaStreamComponentEEv(%"class.blink::WebMediaStreamTrack"* %1) #2
  %4 = tail call %"class.blink::MediaStreamAudioTrack"* @_ZN5blink21MediaStreamAudioTrack4FromEPKNS_20MediaStreamComponentE(%"class.blink::MediaStreamComponent"* %3) #2
  tail call void @_ZNK5blink21MediaStreamAudioTrack15GetOutputFormatEv(%"class.media::AudioParameters"* sret %0, %"class.blink::MediaStreamAudioTrack"* %4) #2
  ret void
}

declare void @_ZNK5blink21MediaStreamAudioTrack15GetOutputFormatEv(%"class.media::AudioParameters"* sret, %"class.blink::MediaStreamAudioTrack"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
