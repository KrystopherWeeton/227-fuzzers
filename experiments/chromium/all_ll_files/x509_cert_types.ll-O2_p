; ModuleID = '../../net/cert/x509_cert_types.cc'
source_filename = "../../net/cert/x509_cert_types.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"class.std::__1::vector.8"*, %"class.std::__1::vector.8"*, %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"struct.net::X509NameAttribute"*, %"struct.net::X509NameAttribute"*, %"class.std::__1::__compressed_pair.10" }
%"struct.net::X509NameAttribute" = type { %"class.net::der::Input", i32, %"class.net::der::Input" }
%"class.net::der::Input" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.net::X509NameAttribute"* }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.std::__1::vector.8"* }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"struct.base::Time::Exploded" = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_ = comdat any

@_ZN3net13CertPrincipalC1Ev = hidden unnamed_addr alias void (%"struct.net::CertPrincipal"*), void (%"struct.net::CertPrincipal"*)* @_ZN3net13CertPrincipalC2Ev
@_ZN3net13CertPrincipalC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE = hidden unnamed_addr alias void (%"struct.net::CertPrincipal"*, %"class.std::__1::basic_string"*), void (%"struct.net::CertPrincipal"*, %"class.std::__1::basic_string"*)* @_ZN3net13CertPrincipalC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
@_ZN3net13CertPrincipalD1Ev = hidden unnamed_addr alias void (%"struct.net::CertPrincipal"*), void (%"struct.net::CertPrincipal"*)* @_ZN3net13CertPrincipalD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13CertPrincipalC2Ev(%"struct.net::CertPrincipal"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.net::CertPrincipal"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 192, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13CertPrincipalC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"struct.net::CertPrincipal"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %"struct.net::CertPrincipal"* %0 to i8*
  %9 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #7
  br label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.net::CertPrincipal", %"struct.net::CertPrincipal"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %11, i8* %13, i64 %15) #7
  br label %16

16:                                               ; preds = %7, %10
  %17 = getelementptr inbounds %"struct.net::CertPrincipal", %"struct.net::CertPrincipal"* %0, i64 0, i32 1
  %18 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 168, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13CertPrincipalD2Ev(%"struct.net::CertPrincipal"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.net::CertPrincipal", %"struct.net::CertPrincipal"* %0, i64 0, i32 7
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %5 = icmp eq %"class.std::__1::basic_string"* %4, null
  br i1 %5, label %28, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %8 = getelementptr inbounds %"struct.net::CertPrincipal", %"struct.net::CertPrincipal"* %0, i64 0, i32 7, i32 0, i32 1
  %9 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  %10 = icmp eq %"class.std::__1::basic_string"* %9, %4
  br i1 %10, label %26, label %11

11:                                               ; preds = %6, %21
  %12 = phi %"class.std::__1::basic_string"* [ %13, %21 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 -1
  %14 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  tail call void @_ZdlPv(i8* %20) #8
  br label %21

21:                                               ; preds = %18, %11
  %22 = icmp eq %"class.std::__1::basic_string"* %13, %4
  br i1 %22, label %23, label %11

23:                                               ; preds = %21
  %24 = bitcast %"class.std::__1::vector"* %2 to i8**
  %25 = load i8*, i8** %24, align 8
  br label %26

26:                                               ; preds = %23, %6
  %27 = phi i8* [ %25, %23 ], [ %7, %6 ]
  store %"class.std::__1::basic_string"* %4, %"class.std::__1::basic_string"** %8, align 8
  tail call void @_ZdlPv(i8* %27) #8
  br label %28

28:                                               ; preds = %1, %26
  %29 = getelementptr inbounds %"struct.net::CertPrincipal", %"struct.net::CertPrincipal"* %0, i64 0, i32 6
  %30 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %29, i64 0, i32 0, i32 0
  %31 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %30, align 8
  %32 = icmp eq %"class.std::__1::basic_string"* %31, null
  br i1 %32, label %55, label %33

33:                                               ; preds = %28
  %34 = bitcast %"class.std::__1::basic_string"* %31 to i8*
  %35 = getelementptr inbounds %"struct.net::CertPrincipal", %"struct.net::CertPrincipal"* %0, i64 0, i32 6, i32 0, i32 1
  %36 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %35, align 8
  %37 = icmp eq %"class.std::__1::basic_string"* %36, %31
  br i1 %37, label %53, label %38

38:                                               ; preds = %33, %48
  %39 = phi %"class.std::__1::basic_string"* [ %40, %48 ], [ %36, %33 ]
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 -1
  %41 = bitcast %"class.std::__1::basic_string"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  tail call void @_ZdlPv(i8* %47) #8
  br label %48

48:                                               ; preds = %45, %38
  %49 = icmp eq %"class.std::__1::basic_string"* %40, %31
  br i1 %49, label %50, label %38

50:                                               ; preds = %48
  %51 = bitcast %"class.std::__1::vector"* %29 to i8**
  %52 = load i8*, i8** %51, align 8
  br label %53

53:                                               ; preds = %50, %33
  %54 = phi i8* [ %52, %50 ], [ %34, %33 ]
  store %"class.std::__1::basic_string"* %31, %"class.std::__1::basic_string"** %35, align 8
  tail call void @_ZdlPv(i8* %54) #8
  br label %55

55:                                               ; preds = %28, %53
  %56 = getelementptr inbounds %"struct.net::CertPrincipal", %"struct.net::CertPrincipal"* %0, i64 0, i32 5
  %57 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %56, i64 0, i32 0, i32 0
  %58 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %57, align 8
  %59 = icmp eq %"class.std::__1::basic_string"* %58, null
  br i1 %59, label %82, label %60

60:                                               ; preds = %55
  %61 = bitcast %"class.std::__1::basic_string"* %58 to i8*
  %62 = getelementptr inbounds %"struct.net::CertPrincipal", %"struct.net::CertPrincipal"* %0, i64 0, i32 5, i32 0, i32 1
  %63 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %62, align 8
  %64 = icmp eq %"class.std::__1::basic_string"* %63, %58
  br i1 %64, label %80, label %65

65:                                               ; preds = %60, %75
  %66 = phi %"class.std::__1::basic_string"* [ %67, %75 ], [ %63, %60 ]
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 -1
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  tail call void @_ZdlPv(i8* %74) #8
  br label %75

75:                                               ; preds = %72, %65
  %76 = icmp eq %"class.std::__1::basic_string"* %67, %58
  br i1 %76, label %77, label %65

77:                                               ; preds = %75
  %78 = bitcast %"class.std::__1::vector"* %56 to i8**
  %79 = load i8*, i8** %78, align 8
  br label %80

80:                                               ; preds = %77, %60
  %81 = phi i8* [ %79, %77 ], [ %61, %60 ]
  store %"class.std::__1::basic_string"* %58, %"class.std::__1::basic_string"** %62, align 8
  tail call void @_ZdlPv(i8* %81) #8
  br label %82

82:                                               ; preds = %55, %80
  %83 = getelementptr inbounds %"struct.net::CertPrincipal", %"struct.net::CertPrincipal"* %0, i64 0, i32 4
  %84 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %83, i64 0, i32 0, i32 0
  %85 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %84, align 8
  %86 = icmp eq %"class.std::__1::basic_string"* %85, null
  br i1 %86, label %109, label %87

87:                                               ; preds = %82
  %88 = bitcast %"class.std::__1::basic_string"* %85 to i8*
  %89 = getelementptr inbounds %"struct.net::CertPrincipal", %"struct.net::CertPrincipal"* %0, i64 0, i32 4, i32 0, i32 1
  %90 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %89, align 8
  %91 = icmp eq %"class.std::__1::basic_string"* %90, %85
  br i1 %91, label %107, label %92

92:                                               ; preds = %87, %102
  %93 = phi %"class.std::__1::basic_string"* [ %94, %102 ], [ %90, %87 ]
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %93, i64 -1
  %95 = bitcast %"class.std::__1::basic_string"* %94 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %96 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %95, i64 0, i32 1, i32 0
  %97 = load i8, i8* %96, align 1
  %98 = icmp slt i8 %97, 0
  br i1 %98, label %99, label %102

99:                                               ; preds = %92
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %94, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load i8*, i8** %100, align 8
  tail call void @_ZdlPv(i8* %101) #8
  br label %102

102:                                              ; preds = %99, %92
  %103 = icmp eq %"class.std::__1::basic_string"* %94, %85
  br i1 %103, label %104, label %92

104:                                              ; preds = %102
  %105 = bitcast %"class.std::__1::vector"* %83 to i8**
  %106 = load i8*, i8** %105, align 8
  br label %107

107:                                              ; preds = %104, %87
  %108 = phi i8* [ %106, %104 ], [ %88, %87 ]
  store %"class.std::__1::basic_string"* %85, %"class.std::__1::basic_string"** %89, align 8
  tail call void @_ZdlPv(i8* %108) #8
  br label %109

109:                                              ; preds = %82, %107
  %110 = getelementptr inbounds %"struct.net::CertPrincipal", %"struct.net::CertPrincipal"* %0, i64 0, i32 3
  %111 = bitcast %"class.std::__1::basic_string"* %110 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %112 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %111, i64 0, i32 1, i32 0
  %113 = load i8, i8* %112, align 1
  %114 = icmp slt i8 %113, 0
  br i1 %114, label %115, label %118

115:                                              ; preds = %109
  %116 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %110, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load i8*, i8** %116, align 8
  tail call void @_ZdlPv(i8* %117) #8
  br label %118

118:                                              ; preds = %109, %115
  %119 = getelementptr inbounds %"struct.net::CertPrincipal", %"struct.net::CertPrincipal"* %0, i64 0, i32 2
  %120 = bitcast %"class.std::__1::basic_string"* %119 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  %122 = load i8, i8* %121, align 1
  %123 = icmp slt i8 %122, 0
  br i1 %123, label %124, label %127

124:                                              ; preds = %118
  %125 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %119, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load i8*, i8** %125, align 8
  tail call void @_ZdlPv(i8* %126) #8
  br label %127

127:                                              ; preds = %118, %124
  %128 = getelementptr inbounds %"struct.net::CertPrincipal", %"struct.net::CertPrincipal"* %0, i64 0, i32 1
  %129 = bitcast %"class.std::__1::basic_string"* %128 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %130 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %129, i64 0, i32 1, i32 0
  %131 = load i8, i8* %130, align 1
  %132 = icmp slt i8 %131, 0
  br i1 %132, label %133, label %136

133:                                              ; preds = %127
  %134 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %128, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = load i8*, i8** %134, align 8
  tail call void @_ZdlPv(i8* %135) #8
  br label %136

136:                                              ; preds = %127, %133
  %137 = bitcast %"struct.net::CertPrincipal"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %138 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %137, i64 0, i32 1, i32 0
  %139 = load i8, i8* %138, align 1
  %140 = icmp slt i8 %139, 0
  br i1 %140, label %141, label %144

141:                                              ; preds = %136
  %142 = getelementptr inbounds %"struct.net::CertPrincipal", %"struct.net::CertPrincipal"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load i8*, i8** %142, align 8
  tail call void @_ZdlPv(i8* %143) #8
  br label %144

144:                                              ; preds = %136, %141
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net13CertPrincipal22ParseDistinguishedNameEPKvmNS0_23PrintableStringHandlingE(%"struct.net::CertPrincipal"*, i8*, i64, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::vector.6", align 8
  %6 = alloca %"class.net::der::Input", align 8
  %7 = alloca %"class.net::der::Input", align 8
  %8 = alloca %"class.net::der::Input", align 8
  %9 = alloca %"class.net::der::Input", align 8
  %10 = alloca %"class.net::der::Input", align 8
  %11 = alloca %"class.net::der::Input", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.net::der::Input", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.net::der::Input", align 8
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = alloca %"class.net::der::Input", align 8
  %18 = alloca %"class.std::__1::basic_string", align 8
  %19 = bitcast %"class.std::__1::vector.6"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #7
  %20 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %5, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %5, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #7
  %22 = bitcast %"class.net::der::Input"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #7
  call void @_ZN3net3der5InputC1EPKhm(%"class.net::der::Input"* nonnull %6, i8* %1, i64 %2) #7
  %23 = call zeroext i1 @_ZN3net9ParseNameERKNS_3der5InputEPNSt3__16vectorINS5_INS_17X509NameAttributeENS4_9allocatorIS6_EEEENS7_IS9_EEEE(%"class.net::der::Input"* nonnull dereferenceable(16) %6, %"class.std::__1::vector.6"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #7
  br i1 %23, label %24, label %314

24:                                               ; preds = %4
  %25 = icmp eq i32 %3, 1
  %26 = zext i1 %25 to i32
  %27 = load %"class.std::__1::vector.8"*, %"class.std::__1::vector.8"** %20, align 8
  %28 = load %"class.std::__1::vector.8"*, %"class.std::__1::vector.8"** %21, align 8
  %29 = icmp eq %"class.std::__1::vector.8"* %27, %28
  br i1 %29, label %317, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.net::der::Input"* %7 to i8*
  %32 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %7, i64 0, i32 0
  %33 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %7, i64 0, i32 1
  %34 = bitcast %"class.net::der::Input"* %8 to i8*
  %35 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %8, i64 0, i32 0
  %36 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %8, i64 0, i32 1
  %37 = bitcast %"class.net::der::Input"* %9 to i8*
  %38 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %9, i64 0, i32 0
  %39 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %9, i64 0, i32 1
  %40 = bitcast %"class.net::der::Input"* %10 to i8*
  %41 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %10, i64 0, i32 0
  %42 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %10, i64 0, i32 1
  %43 = bitcast %"class.net::der::Input"* %11 to i8*
  %44 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %11, i64 0, i32 0
  %45 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %11, i64 0, i32 1
  %46 = bitcast %"class.net::der::Input"* %13 to i8*
  %47 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %13, i64 0, i32 0
  %48 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %13, i64 0, i32 1
  %49 = bitcast %"class.net::der::Input"* %15 to i8*
  %50 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %15, i64 0, i32 0
  %51 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %15, i64 0, i32 1
  %52 = bitcast %"class.net::der::Input"* %17 to i8*
  %53 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %17, i64 0, i32 0
  %54 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %17, i64 0, i32 1
  %55 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %58 = getelementptr inbounds %"struct.net::CertPrincipal", %"struct.net::CertPrincipal"* %0, i64 0, i32 7, i32 0, i32 1
  %59 = getelementptr inbounds %"struct.net::CertPrincipal", %"struct.net::CertPrincipal"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %60 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  %62 = bitcast %"class.std::__1::basic_string"** %58 to i64*
  %63 = getelementptr inbounds %"struct.net::CertPrincipal", %"struct.net::CertPrincipal"* %0, i64 0, i32 7
  %64 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %67 = getelementptr inbounds %"struct.net::CertPrincipal", %"struct.net::CertPrincipal"* %0, i64 0, i32 6, i32 0, i32 1
  %68 = getelementptr inbounds %"struct.net::CertPrincipal", %"struct.net::CertPrincipal"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %69 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %69, i64 0, i32 1, i32 0
  %71 = bitcast %"class.std::__1::basic_string"** %67 to i64*
  %72 = getelementptr inbounds %"struct.net::CertPrincipal", %"struct.net::CertPrincipal"* %0, i64 0, i32 6
  %73 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %76 = getelementptr inbounds %"struct.net::CertPrincipal", %"struct.net::CertPrincipal"* %0, i64 0, i32 5, i32 0, i32 1
  %77 = getelementptr inbounds %"struct.net::CertPrincipal", %"struct.net::CertPrincipal"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %78 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  %80 = bitcast %"class.std::__1::basic_string"** %76 to i64*
  %81 = getelementptr inbounds %"struct.net::CertPrincipal", %"struct.net::CertPrincipal"* %0, i64 0, i32 5
  %82 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %85 = getelementptr inbounds %"struct.net::CertPrincipal", %"struct.net::CertPrincipal"* %0, i64 0, i32 4, i32 0, i32 1
  %86 = getelementptr inbounds %"struct.net::CertPrincipal", %"struct.net::CertPrincipal"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %87 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  %89 = bitcast %"class.std::__1::basic_string"** %85 to i64*
  %90 = getelementptr inbounds %"struct.net::CertPrincipal", %"struct.net::CertPrincipal"* %0, i64 0, i32 4
  %91 = getelementptr inbounds %"struct.net::CertPrincipal", %"struct.net::CertPrincipal"* %0, i64 0, i32 3
  %92 = bitcast %"class.std::__1::basic_string"* %91 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  %94 = getelementptr inbounds %"struct.net::CertPrincipal", %"struct.net::CertPrincipal"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %95 = getelementptr inbounds %"struct.net::CertPrincipal", %"struct.net::CertPrincipal"* %0, i64 0, i32 2
  %96 = bitcast %"class.std::__1::basic_string"* %95 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %96, i64 0, i32 1, i32 0
  %98 = getelementptr inbounds %"struct.net::CertPrincipal", %"struct.net::CertPrincipal"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %99 = getelementptr inbounds %"struct.net::CertPrincipal", %"struct.net::CertPrincipal"* %0, i64 0, i32 1
  %100 = bitcast %"class.std::__1::basic_string"* %99 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  %102 = getelementptr inbounds %"struct.net::CertPrincipal", %"struct.net::CertPrincipal"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %103 = getelementptr inbounds %"struct.net::CertPrincipal", %"struct.net::CertPrincipal"* %0, i64 0, i32 0
  %104 = bitcast %"struct.net::CertPrincipal"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %105 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %104, i64 0, i32 1, i32 0
  %106 = getelementptr inbounds %"struct.net::CertPrincipal", %"struct.net::CertPrincipal"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %107

107:                                              ; preds = %30, %311
  %108 = phi %"class.std::__1::vector.8"* [ %27, %30 ], [ %312, %311 ]
  %109 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %108, i64 0, i32 0, i32 0
  %110 = load %"struct.net::X509NameAttribute"*, %"struct.net::X509NameAttribute"** %109, align 8
  %111 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %108, i64 0, i32 0, i32 1
  %112 = load %"struct.net::X509NameAttribute"*, %"struct.net::X509NameAttribute"** %111, align 8
  %113 = icmp eq %"struct.net::X509NameAttribute"* %110, %112
  br i1 %113, label %311, label %114

114:                                              ; preds = %107, %308
  %115 = phi %"struct.net::X509NameAttribute"* [ %309, %308 ], [ %110, %107 ]
  %116 = getelementptr inbounds %"struct.net::X509NameAttribute", %"struct.net::X509NameAttribute"* %115, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #7
  %117 = call { i8*, i64 } @_ZN3net17TypeCommonNameOidEv() #7
  %118 = extractvalue { i8*, i64 } %117, 0
  store i8* %118, i8** %32, align 8
  %119 = extractvalue { i8*, i64 } %117, 1
  store i64 %119, i64* %33, align 8
  %120 = call zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %116, %"class.net::der::Input"* nonnull dereferenceable(16) %7) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #7
  br i1 %120, label %121, label %133

121:                                              ; preds = %114
  %122 = load i8, i8* %105, align 1
  %123 = icmp slt i8 %122, 0
  br i1 %123, label %124, label %126

124:                                              ; preds = %121
  %125 = load i64, i64* %106, align 8
  br label %128

126:                                              ; preds = %121
  %127 = zext i8 %122 to i64
  br label %128

128:                                              ; preds = %124, %126
  %129 = phi i64 [ %125, %124 ], [ %127, %126 ]
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %308

131:                                              ; preds = %128
  %132 = call zeroext i1 @_ZNK3net17X509NameAttribute30ValueAsStringWithUnsafeOptionsENS0_23PrintableStringHandlingEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"struct.net::X509NameAttribute"* %115, i32 %26, %"class.std::__1::basic_string"* %103) #7
  br i1 %132, label %308, label %314

133:                                              ; preds = %114
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #7
  %134 = call { i8*, i64 } @_ZN3net19TypeLocalityNameOidEv() #7
  %135 = extractvalue { i8*, i64 } %134, 0
  store i8* %135, i8** %35, align 8
  %136 = extractvalue { i8*, i64 } %134, 1
  store i64 %136, i64* %36, align 8
  %137 = call zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %116, %"class.net::der::Input"* nonnull dereferenceable(16) %8) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #7
  br i1 %137, label %138, label %150

138:                                              ; preds = %133
  %139 = load i8, i8* %101, align 1
  %140 = icmp slt i8 %139, 0
  br i1 %140, label %141, label %143

141:                                              ; preds = %138
  %142 = load i64, i64* %102, align 8
  br label %145

143:                                              ; preds = %138
  %144 = zext i8 %139 to i64
  br label %145

145:                                              ; preds = %141, %143
  %146 = phi i64 [ %142, %141 ], [ %144, %143 ]
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %148, label %308

148:                                              ; preds = %145
  %149 = call zeroext i1 @_ZNK3net17X509NameAttribute30ValueAsStringWithUnsafeOptionsENS0_23PrintableStringHandlingEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"struct.net::X509NameAttribute"* %115, i32 %26, %"class.std::__1::basic_string"* %99) #7
  br i1 %149, label %308, label %314

150:                                              ; preds = %133
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #7
  %151 = call { i8*, i64 } @_ZN3net26TypeStateOrProvinceNameOidEv() #7
  %152 = extractvalue { i8*, i64 } %151, 0
  store i8* %152, i8** %38, align 8
  %153 = extractvalue { i8*, i64 } %151, 1
  store i64 %153, i64* %39, align 8
  %154 = call zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %116, %"class.net::der::Input"* nonnull dereferenceable(16) %9) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #7
  br i1 %154, label %155, label %167

155:                                              ; preds = %150
  %156 = load i8, i8* %97, align 1
  %157 = icmp slt i8 %156, 0
  br i1 %157, label %158, label %160

158:                                              ; preds = %155
  %159 = load i64, i64* %98, align 8
  br label %162

160:                                              ; preds = %155
  %161 = zext i8 %156 to i64
  br label %162

162:                                              ; preds = %158, %160
  %163 = phi i64 [ %159, %158 ], [ %161, %160 ]
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %165, label %308

165:                                              ; preds = %162
  %166 = call zeroext i1 @_ZNK3net17X509NameAttribute30ValueAsStringWithUnsafeOptionsENS0_23PrintableStringHandlingEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"struct.net::X509NameAttribute"* %115, i32 %26, %"class.std::__1::basic_string"* %95) #7
  br i1 %166, label %308, label %314

167:                                              ; preds = %150
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #7
  %168 = call { i8*, i64 } @_ZN3net18TypeCountryNameOidEv() #7
  %169 = extractvalue { i8*, i64 } %168, 0
  store i8* %169, i8** %41, align 8
  %170 = extractvalue { i8*, i64 } %168, 1
  store i64 %170, i64* %42, align 8
  %171 = call zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %116, %"class.net::der::Input"* nonnull dereferenceable(16) %10) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #7
  br i1 %171, label %172, label %184

172:                                              ; preds = %167
  %173 = load i8, i8* %93, align 1
  %174 = icmp slt i8 %173, 0
  br i1 %174, label %175, label %177

175:                                              ; preds = %172
  %176 = load i64, i64* %94, align 8
  br label %179

177:                                              ; preds = %172
  %178 = zext i8 %173 to i64
  br label %179

179:                                              ; preds = %175, %177
  %180 = phi i64 [ %176, %175 ], [ %178, %177 ]
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %182, label %308

182:                                              ; preds = %179
  %183 = call zeroext i1 @_ZNK3net17X509NameAttribute30ValueAsStringWithUnsafeOptionsENS0_23PrintableStringHandlingEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"struct.net::X509NameAttribute"* %115, i32 %26, %"class.std::__1::basic_string"* %91) #7
  br i1 %183, label %308, label %314

184:                                              ; preds = %167
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #7
  %185 = call { i8*, i64 } @_ZN3net20TypeStreetAddressOidEv() #7
  %186 = extractvalue { i8*, i64 } %185, 0
  store i8* %186, i8** %44, align 8
  %187 = extractvalue { i8*, i64 } %185, 1
  store i64 %187, i64* %45, align 8
  %188 = call zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %116, %"class.net::der::Input"* nonnull dereferenceable(16) %11) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #7
  br i1 %188, label %189, label %215

189:                                              ; preds = %184
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %82) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %82, i8 0, i64 24, i1 false) #7
  %190 = call zeroext i1 @_ZNK3net17X509NameAttribute30ValueAsStringWithUnsafeOptionsENS0_23PrintableStringHandlingEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"struct.net::X509NameAttribute"* %115, i32 %26, %"class.std::__1::basic_string"* nonnull %12) #7
  br i1 %190, label %191, label %207

191:                                              ; preds = %189
  %192 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %85, align 8
  %193 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %86, align 8
  %194 = icmp eq %"class.std::__1::basic_string"* %192, %193
  br i1 %194, label %206, label %195

195:                                              ; preds = %191
  %196 = load i8, i8* %88, align 1
  %197 = icmp slt i8 %196, 0
  br i1 %197, label %200, label %198

198:                                              ; preds = %195
  %199 = bitcast %"class.std::__1::basic_string"* %192 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %199, i8* nonnull align 8 %82, i64 24, i1 false) #7
  br label %203

200:                                              ; preds = %195
  %201 = load i8*, i8** %83, align 8
  %202 = load i64, i64* %84, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %192, i8* %201, i64 %202) #7
  br label %203

203:                                              ; preds = %200, %198
  %204 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %192, i64 1
  %205 = ptrtoint %"class.std::__1::basic_string"* %204 to i64
  store i64 %205, i64* %89, align 8
  br label %207

206:                                              ; preds = %191
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector"* %90, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %12) #7
  br label %207

207:                                              ; preds = %206, %203, %189
  %208 = phi i32 [ 1, %189 ], [ 0, %203 ], [ 0, %206 ]
  %209 = load i8, i8* %88, align 1
  %210 = icmp slt i8 %209, 0
  br i1 %210, label %211, label %213

211:                                              ; preds = %207
  %212 = load i8*, i8** %83, align 8
  call void @_ZdlPv(i8* %212) #8
  br label %213

213:                                              ; preds = %207, %211
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #7
  %214 = icmp eq i32 %208, 0
  br i1 %214, label %308, label %314

215:                                              ; preds = %184
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #7
  %216 = call { i8*, i64 } @_ZN3net23TypeOrganizationNameOidEv() #7
  %217 = extractvalue { i8*, i64 } %216, 0
  store i8* %217, i8** %47, align 8
  %218 = extractvalue { i8*, i64 } %216, 1
  store i64 %218, i64* %48, align 8
  %219 = call zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %116, %"class.net::der::Input"* nonnull dereferenceable(16) %13) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #7
  br i1 %219, label %220, label %246

220:                                              ; preds = %215
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 0, i64 24, i1 false) #7
  %221 = call zeroext i1 @_ZNK3net17X509NameAttribute30ValueAsStringWithUnsafeOptionsENS0_23PrintableStringHandlingEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"struct.net::X509NameAttribute"* %115, i32 %26, %"class.std::__1::basic_string"* nonnull %14) #7
  br i1 %221, label %222, label %238

222:                                              ; preds = %220
  %223 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %76, align 8
  %224 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %77, align 8
  %225 = icmp eq %"class.std::__1::basic_string"* %223, %224
  br i1 %225, label %237, label %226

226:                                              ; preds = %222
  %227 = load i8, i8* %79, align 1
  %228 = icmp slt i8 %227, 0
  br i1 %228, label %231, label %229

229:                                              ; preds = %226
  %230 = bitcast %"class.std::__1::basic_string"* %223 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %230, i8* nonnull align 8 %73, i64 24, i1 false) #7
  br label %234

231:                                              ; preds = %226
  %232 = load i8*, i8** %74, align 8
  %233 = load i64, i64* %75, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %223, i8* %232, i64 %233) #7
  br label %234

234:                                              ; preds = %231, %229
  %235 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %223, i64 1
  %236 = ptrtoint %"class.std::__1::basic_string"* %235 to i64
  store i64 %236, i64* %80, align 8
  br label %238

237:                                              ; preds = %222
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector"* %81, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %14) #7
  br label %238

238:                                              ; preds = %237, %234, %220
  %239 = phi i32 [ 1, %220 ], [ 0, %234 ], [ 0, %237 ]
  %240 = load i8, i8* %79, align 1
  %241 = icmp slt i8 %240, 0
  br i1 %241, label %242, label %244

242:                                              ; preds = %238
  %243 = load i8*, i8** %74, align 8
  call void @_ZdlPv(i8* %243) #8
  br label %244

244:                                              ; preds = %238, %242
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #7
  %245 = icmp eq i32 %239, 0
  br i1 %245, label %308, label %314

246:                                              ; preds = %215
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49) #7
  %247 = call { i8*, i64 } @_ZN3net27TypeOrganizationUnitNameOidEv() #7
  %248 = extractvalue { i8*, i64 } %247, 0
  store i8* %248, i8** %50, align 8
  %249 = extractvalue { i8*, i64 } %247, 1
  store i64 %249, i64* %51, align 8
  %250 = call zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %116, %"class.net::der::Input"* nonnull dereferenceable(16) %15) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #7
  br i1 %250, label %251, label %277

251:                                              ; preds = %246
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 0, i64 24, i1 false) #7
  %252 = call zeroext i1 @_ZNK3net17X509NameAttribute30ValueAsStringWithUnsafeOptionsENS0_23PrintableStringHandlingEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"struct.net::X509NameAttribute"* %115, i32 %26, %"class.std::__1::basic_string"* nonnull %16) #7
  br i1 %252, label %253, label %269

253:                                              ; preds = %251
  %254 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %67, align 8
  %255 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %68, align 8
  %256 = icmp eq %"class.std::__1::basic_string"* %254, %255
  br i1 %256, label %268, label %257

257:                                              ; preds = %253
  %258 = load i8, i8* %70, align 1
  %259 = icmp slt i8 %258, 0
  br i1 %259, label %262, label %260

260:                                              ; preds = %257
  %261 = bitcast %"class.std::__1::basic_string"* %254 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %261, i8* nonnull align 8 %64, i64 24, i1 false) #7
  br label %265

262:                                              ; preds = %257
  %263 = load i8*, i8** %65, align 8
  %264 = load i64, i64* %66, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %254, i8* %263, i64 %264) #7
  br label %265

265:                                              ; preds = %262, %260
  %266 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %254, i64 1
  %267 = ptrtoint %"class.std::__1::basic_string"* %266 to i64
  store i64 %267, i64* %71, align 8
  br label %269

268:                                              ; preds = %253
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector"* %72, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %16) #7
  br label %269

269:                                              ; preds = %268, %265, %251
  %270 = phi i32 [ 1, %251 ], [ 0, %265 ], [ 0, %268 ]
  %271 = load i8, i8* %70, align 1
  %272 = icmp slt i8 %271, 0
  br i1 %272, label %273, label %275

273:                                              ; preds = %269
  %274 = load i8*, i8** %65, align 8
  call void @_ZdlPv(i8* %274) #8
  br label %275

275:                                              ; preds = %269, %273
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #7
  %276 = icmp eq i32 %270, 0
  br i1 %276, label %308, label %314

277:                                              ; preds = %246
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52) #7
  %278 = call { i8*, i64 } @_ZN3net22TypeDomainComponentOidEv() #7
  %279 = extractvalue { i8*, i64 } %278, 0
  store i8* %279, i8** %53, align 8
  %280 = extractvalue { i8*, i64 } %278, 1
  store i64 %280, i64* %54, align 8
  %281 = call zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %116, %"class.net::der::Input"* nonnull dereferenceable(16) %17) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52) #7
  br i1 %281, label %282, label %308

282:                                              ; preds = %277
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 0, i64 24, i1 false) #7
  %283 = call zeroext i1 @_ZNK3net17X509NameAttribute30ValueAsStringWithUnsafeOptionsENS0_23PrintableStringHandlingEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"struct.net::X509NameAttribute"* %115, i32 %26, %"class.std::__1::basic_string"* nonnull %18) #7
  br i1 %283, label %284, label %300

284:                                              ; preds = %282
  %285 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %58, align 8
  %286 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %59, align 8
  %287 = icmp eq %"class.std::__1::basic_string"* %285, %286
  br i1 %287, label %299, label %288

288:                                              ; preds = %284
  %289 = load i8, i8* %61, align 1
  %290 = icmp slt i8 %289, 0
  br i1 %290, label %293, label %291

291:                                              ; preds = %288
  %292 = bitcast %"class.std::__1::basic_string"* %285 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %292, i8* nonnull align 8 %55, i64 24, i1 false) #7
  br label %296

293:                                              ; preds = %288
  %294 = load i8*, i8** %56, align 8
  %295 = load i64, i64* %57, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %285, i8* %294, i64 %295) #7
  br label %296

296:                                              ; preds = %293, %291
  %297 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %285, i64 1
  %298 = ptrtoint %"class.std::__1::basic_string"* %297 to i64
  store i64 %298, i64* %62, align 8
  br label %300

299:                                              ; preds = %284
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector"* %63, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %18) #7
  br label %300

300:                                              ; preds = %299, %296, %282
  %301 = phi i32 [ 1, %282 ], [ 0, %296 ], [ 0, %299 ]
  %302 = load i8, i8* %61, align 1
  %303 = icmp slt i8 %302, 0
  br i1 %303, label %304, label %306

304:                                              ; preds = %300
  %305 = load i8*, i8** %56, align 8
  call void @_ZdlPv(i8* %305) #8
  br label %306

306:                                              ; preds = %300, %304
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #7
  %307 = icmp eq i32 %301, 0
  br i1 %307, label %308, label %314

308:                                              ; preds = %148, %145, %182, %179, %244, %277, %306, %275, %213, %162, %165, %128, %131
  %309 = getelementptr inbounds %"struct.net::X509NameAttribute", %"struct.net::X509NameAttribute"* %115, i64 1
  %310 = icmp eq %"struct.net::X509NameAttribute"* %309, %112
  br i1 %310, label %311, label %114

311:                                              ; preds = %308, %107
  %312 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %108, i64 1
  %313 = icmp eq %"class.std::__1::vector.8"* %312, %28
  br i1 %313, label %314, label %107

314:                                              ; preds = %311, %213, %244, %275, %306, %131, %148, %165, %182, %4
  %315 = phi i1 [ false, %4 ], [ false, %182 ], [ false, %165 ], [ false, %148 ], [ false, %131 ], [ false, %306 ], [ false, %275 ], [ false, %244 ], [ false, %213 ], [ true, %311 ]
  %316 = load %"class.std::__1::vector.8"*, %"class.std::__1::vector.8"** %20, align 8
  br label %317

317:                                              ; preds = %314, %24
  %318 = phi %"class.std::__1::vector.8"* [ %316, %314 ], [ %27, %24 ]
  %319 = phi i1 [ %315, %314 ], [ true, %24 ]
  %320 = icmp eq %"class.std::__1::vector.8"* %318, null
  br i1 %320, label %343, label %321

321:                                              ; preds = %317
  %322 = bitcast %"class.std::__1::vector.8"* %318 to i8*
  %323 = load %"class.std::__1::vector.8"*, %"class.std::__1::vector.8"** %21, align 8
  %324 = icmp eq %"class.std::__1::vector.8"* %323, %318
  br i1 %324, label %341, label %325

325:                                              ; preds = %321, %336
  %326 = phi %"class.std::__1::vector.8"* [ %327, %336 ], [ %323, %321 ]
  %327 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %326, i64 -1
  %328 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %327, i64 0, i32 0, i32 0
  %329 = load %"struct.net::X509NameAttribute"*, %"struct.net::X509NameAttribute"** %328, align 8
  %330 = icmp eq %"struct.net::X509NameAttribute"* %329, null
  br i1 %330, label %336, label %331

331:                                              ; preds = %325
  %332 = ptrtoint %"struct.net::X509NameAttribute"* %329 to i64
  %333 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %326, i64 -1, i32 0, i32 1
  %334 = bitcast %"struct.net::X509NameAttribute"** %333 to i64*
  store i64 %332, i64* %334, align 8
  %335 = bitcast %"struct.net::X509NameAttribute"* %329 to i8*
  call void @_ZdlPv(i8* %335) #8
  br label %336

336:                                              ; preds = %331, %325
  %337 = icmp eq %"class.std::__1::vector.8"* %327, %318
  br i1 %337, label %338, label %325

338:                                              ; preds = %336
  %339 = bitcast %"class.std::__1::vector.6"* %5 to i8**
  %340 = load i8*, i8** %339, align 8
  br label %341

341:                                              ; preds = %338, %321
  %342 = phi i8* [ %340, %338 ], [ %322, %321 ]
  store %"class.std::__1::vector.8"* %318, %"class.std::__1::vector.8"** %21, align 8
  call void @_ZdlPv(i8* %342) #8
  br label %343

343:                                              ; preds = %317, %341
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #7
  ret i1 %319
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN3net9ParseNameERKNS_3der5InputEPNSt3__16vectorINS5_INS_17X509NameAttributeENS4_9allocatorIS6_EEEENS7_IS9_EEEE(%"class.net::der::Input"* dereferenceable(16), %"class.std::__1::vector.6"*) local_unnamed_addr #2

declare void @_ZN3net3der5InputC1EPKhm(%"class.net::der::Input"*, i8*, i64) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16), %"class.net::der::Input"* dereferenceable(16)) local_unnamed_addr #2

declare { i8*, i64 } @_ZN3net17TypeCommonNameOidEv() local_unnamed_addr #2

declare zeroext i1 @_ZNK3net17X509NameAttribute30ValueAsStringWithUnsafeOptionsENS0_23PrintableStringHandlingEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"struct.net::X509NameAttribute"*, i32, %"class.std::__1::basic_string"*) local_unnamed_addr #2

declare { i8*, i64 } @_ZN3net19TypeLocalityNameOidEv() local_unnamed_addr #2

declare { i8*, i64 } @_ZN3net26TypeStateOrProvinceNameOidEv() local_unnamed_addr #2

declare { i8*, i64 } @_ZN3net18TypeCountryNameOidEv() local_unnamed_addr #2

declare { i8*, i64 } @_ZN3net20TypeStreetAddressOidEv() local_unnamed_addr #2

declare { i8*, i64 } @_ZN3net23TypeOrganizationNameOidEv() local_unnamed_addr #2

declare { i8*, i64 } @_ZN3net27TypeOrganizationUnitNameOidEv() local_unnamed_addr #2

declare { i8*, i64 } @_ZN3net22TypeDomainComponentOidEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net13CertPrincipal14GetDisplayNameEv(%"class.std::__1::basic_string"* noalias sret, %"struct.net::CertPrincipal"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.net::CertPrincipal"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"struct.net::CertPrincipal", %"struct.net::CertPrincipal"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  br label %12

10:                                               ; preds = %2
  %11 = zext i8 %5 to i64
  br label %12

12:                                               ; preds = %7, %10
  %13 = phi i64 [ %9, %7 ], [ %11, %10 ]
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %24, label %15

15:                                               ; preds = %12
  br i1 %6, label %19, label %16

16:                                               ; preds = %15
  %17 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %18 = bitcast %"struct.net::CertPrincipal"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false) #7
  br label %64

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"struct.net::CertPrincipal", %"struct.net::CertPrincipal"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"struct.net::CertPrincipal", %"struct.net::CertPrincipal"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %21, i64 %23) #7
  br label %64

24:                                               ; preds = %12
  %25 = getelementptr inbounds %"struct.net::CertPrincipal", %"struct.net::CertPrincipal"* %1, i64 0, i32 5, i32 0, i32 0
  %26 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %25, align 8
  %27 = getelementptr inbounds %"struct.net::CertPrincipal", %"struct.net::CertPrincipal"* %1, i64 0, i32 5, i32 0, i32 1
  %28 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %27, align 8
  %29 = icmp eq %"class.std::__1::basic_string"* %26, %28
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %30
  %36 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %37 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 24, i1 false) #7
  br label %64

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %40, i64 %42) #7
  br label %64

43:                                               ; preds = %24
  %44 = getelementptr inbounds %"struct.net::CertPrincipal", %"struct.net::CertPrincipal"* %1, i64 0, i32 6, i32 0, i32 0
  %45 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %44, align 8
  %46 = getelementptr inbounds %"struct.net::CertPrincipal", %"struct.net::CertPrincipal"* %1, i64 0, i32 6, i32 0, i32 1
  %47 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %46, align 8
  %48 = icmp eq %"class.std::__1::basic_string"* %45, %47
  br i1 %48, label %62, label %49

49:                                               ; preds = %43
  %50 = bitcast %"class.std::__1::basic_string"* %45 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %57, label %54

54:                                               ; preds = %49
  %55 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %56 = bitcast %"class.std::__1::basic_string"* %45 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %56, i64 24, i1 false) #7
  br label %64

57:                                               ; preds = %49
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %59, i64 %61) #7
  br label %64

62:                                               ; preds = %43
  %63 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 24, i1 false) #7
  br label %64

64:                                               ; preds = %57, %54, %38, %35, %19, %16, %62
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net20ParseCertificateDateERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_14CertDateFormatEPNS0_4TimeE(%"class.base::BasicStringPiece"* nocapture readonly dereferenceable(16), i32, %"class.base::Time"*) local_unnamed_addr #0 {
  %4 = alloca i32, align 4
  %5 = alloca %"class.base::BasicStringPiece", align 8
  %6 = alloca i32, align 4
  %7 = alloca %"class.base::BasicStringPiece", align 8
  %8 = alloca i32, align 4
  %9 = alloca %"class.base::BasicStringPiece", align 8
  %10 = alloca i32, align 4
  %11 = alloca %"class.base::BasicStringPiece", align 8
  %12 = alloca i32, align 4
  %13 = alloca %"class.base::BasicStringPiece", align 8
  %14 = alloca i32, align 4
  %15 = alloca %"class.base::BasicStringPiece", align 8
  %16 = alloca %"struct.base::Time::Exploded", align 4
  %17 = icmp eq i32 %1, 0
  %18 = select i1 %17, i64 2, i64 4
  %19 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = add nuw nsw i64 %18, 11
  %22 = icmp ult i64 %20, %21
  br i1 %22, label %97, label %23

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = ptrtoint i8* %25 to i64
  %27 = bitcast %"struct.base::Time::Exploded"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #7
  %28 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %16, i64 0, i32 2
  %29 = bitcast i32* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %29, i8 0, i64 24, i1 false)
  %30 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %30) #7
  store i32 0, i32* %12, align 4
  %31 = bitcast %"class.base::BasicStringPiece"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #7
  %32 = bitcast %"class.base::BasicStringPiece"* %13 to i64*
  store i64 %26, i64* %32, align 8
  %33 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %13, i64 0, i32 1
  store i64 %18, i64* %33, align 8
  %34 = call zeroext i1 @_ZN3net10ParseInt32ERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_14ParseIntFormatEPiPNS_13ParseIntErrorE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %13, i32 0, i32* nonnull %12, i32* null) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #7
  %35 = getelementptr inbounds i8, i8* %25, i64 %18
  %36 = ptrtoint i8* %35 to i64
  %37 = load i32, i32* %12, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #7
  %38 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %16, i64 0, i32 0
  store i32 %37, i32* %38, align 4
  %39 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %39) #7
  store i32 0, i32* %10, align 4
  %40 = bitcast %"class.base::BasicStringPiece"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #7
  %41 = bitcast %"class.base::BasicStringPiece"* %11 to i64*
  store i64 %36, i64* %41, align 8
  %42 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %11, i64 0, i32 1
  store i64 2, i64* %42, align 8
  %43 = call zeroext i1 @_ZN3net10ParseInt32ERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_14ParseIntFormatEPiPNS_13ParseIntErrorE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %11, i32 0, i32* nonnull %10, i32* null) #7
  %44 = and i1 %34, %43
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #7
  %45 = getelementptr inbounds i8, i8* %35, i64 2
  %46 = ptrtoint i8* %45 to i64
  %47 = load i32, i32* %10, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %39) #7
  %48 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %16, i64 0, i32 1
  store i32 %47, i32* %48, align 4
  %49 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %49) #7
  store i32 0, i32* %8, align 4
  %50 = bitcast %"class.base::BasicStringPiece"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #7
  %51 = bitcast %"class.base::BasicStringPiece"* %9 to i64*
  store i64 %46, i64* %51, align 8
  %52 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %9, i64 0, i32 1
  store i64 2, i64* %52, align 8
  %53 = call zeroext i1 @_ZN3net10ParseInt32ERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_14ParseIntFormatEPiPNS_13ParseIntErrorE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %9, i32 0, i32* nonnull %8, i32* null) #7
  %54 = and i1 %44, %53
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #7
  %55 = getelementptr inbounds i8, i8* %45, i64 2
  %56 = ptrtoint i8* %55 to i64
  %57 = load i32, i32* %8, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %49) #7
  %58 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %16, i64 0, i32 3
  store i32 %57, i32* %58, align 4
  %59 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %59) #7
  store i32 0, i32* %6, align 4
  %60 = bitcast %"class.base::BasicStringPiece"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %60) #7
  %61 = bitcast %"class.base::BasicStringPiece"* %7 to i64*
  store i64 %56, i64* %61, align 8
  %62 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 1
  store i64 2, i64* %62, align 8
  %63 = call zeroext i1 @_ZN3net10ParseInt32ERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_14ParseIntFormatEPiPNS_13ParseIntErrorE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %7, i32 0, i32* nonnull %6, i32* null) #7
  %64 = and i1 %54, %63
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %60) #7
  %65 = getelementptr inbounds i8, i8* %55, i64 2
  %66 = ptrtoint i8* %65 to i64
  %67 = load i32, i32* %6, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %59) #7
  %68 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %16, i64 0, i32 4
  store i32 %67, i32* %68, align 4
  %69 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %69) #7
  store i32 0, i32* %4, align 4
  %70 = bitcast %"class.base::BasicStringPiece"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %70) #7
  %71 = bitcast %"class.base::BasicStringPiece"* %5 to i64*
  store i64 %66, i64* %71, align 8
  %72 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 1
  store i64 2, i64* %72, align 8
  %73 = call zeroext i1 @_ZN3net10ParseInt32ERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_14ParseIntFormatEPiPNS_13ParseIntErrorE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %5, i32 0, i32* nonnull %4, i32* null) #7
  %74 = and i1 %64, %73
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %70) #7
  %75 = getelementptr inbounds i8, i8* %65, i64 2
  %76 = ptrtoint i8* %75 to i64
  %77 = load i32, i32* %4, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %69) #7
  %78 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %16, i64 0, i32 5
  store i32 %77, i32* %78, align 4
  %79 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %79) #7
  store i32 0, i32* %14, align 4
  %80 = bitcast %"class.base::BasicStringPiece"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %80) #7
  %81 = bitcast %"class.base::BasicStringPiece"* %15 to i64*
  store i64 %76, i64* %81, align 8
  %82 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %15, i64 0, i32 1
  store i64 2, i64* %82, align 8
  %83 = call zeroext i1 @_ZN3net10ParseInt32ERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_14ParseIntFormatEPiPNS_13ParseIntErrorE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %15, i32 0, i32* nonnull %14, i32* null) #7
  %84 = and i1 %74, %83
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %80) #7
  %85 = load i32, i32* %14, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %79) #7
  %86 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %16, i64 0, i32 6
  store i32 %85, i32* %86, align 4
  %87 = and i1 %17, %84
  br i1 %87, label %88, label %92

88:                                               ; preds = %23
  %89 = icmp slt i32 %37, 50
  %90 = select i1 %89, i32 2000, i32 1900
  %91 = add nsw i32 %90, %37
  store i32 %91, i32* %38, align 4
  br label %93

92:                                               ; preds = %23
  br i1 %84, label %93, label %95

93:                                               ; preds = %92, %88
  %94 = call zeroext i1 @_ZN4base4Time12FromExplodedEbRKNS0_8ExplodedEPS0_(i1 zeroext false, %"struct.base::Time::Exploded"* nonnull dereferenceable(32) %16, %"class.base::Time"* %2) #7
  br label %95

95:                                               ; preds = %92, %93
  %96 = phi i1 [ %94, %93 ], [ false, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27) #7
  br label %97

97:                                               ; preds = %3, %95
  %98 = phi i1 [ %96, %95 ], [ false, %3 ]
  ret i1 %98
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZN3net10ParseInt32ERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_14ParseIntFormatEPiPNS_13ParseIntErrorE(%"class.base::BasicStringPiece"* dereferenceable(16), i32, i32*, i32*) local_unnamed_addr #2

declare zeroext i1 @_ZN4base4Time12FromExplodedEbRKNS0_8ExplodedEPS0_(i1 zeroext, %"struct.base::Time::Exploded"* dereferenceable(32), %"class.base::Time"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #9
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #8
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %31
  %42 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #7
  br label %49

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %34, i8* %46, i64 %48) #7
  br label %49

49:                                               ; preds = %41, %44
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %51 = ptrtoint %"class.std::__1::basic_string"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %53 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %52, align 8
  %54 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %55 = icmp eq %"class.std::__1::basic_string"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %49
  %57 = ptrtoint %"class.std::__1::basic_string"* %53 to i64
  br label %69

58:                                               ; preds = %49, %58
  %59 = phi %"class.std::__1::basic_string"* [ %61, %58 ], [ %34, %49 ]
  %60 = phi %"class.std::__1::basic_string"* [ %62, %58 ], [ %54, %49 ]
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %59, i64 -1
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %60, i64 -1
  %63 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  %64 = bitcast %"class.std::__1::basic_string"* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 24, i1 false) #7
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 24, i1 false) #7
  %65 = icmp eq %"class.std::__1::basic_string"* %62, %53
  br i1 %65, label %66, label %58

66:                                               ; preds = %58
  %67 = load i64, i64* %6, align 8
  %68 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %69

69:                                               ; preds = %56, %66
  %70 = phi %"class.std::__1::basic_string"* [ %53, %56 ], [ %68, %66 ]
  %71 = phi %"class.std::__1::basic_string"* [ %34, %56 ], [ %61, %66 ]
  %72 = phi i64 [ %57, %56 ], [ %67, %66 ]
  %73 = ptrtoint %"class.std::__1::basic_string"* %71 to i64
  store i64 %73, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %74 = inttoptr i64 %72 to %"class.std::__1::basic_string"*
  %75 = icmp eq %"class.std::__1::basic_string"* %70, %74
  br i1 %75, label %88, label %76

76:                                               ; preds = %69, %86
  %77 = phi %"class.std::__1::basic_string"* [ %78, %86 ], [ %70, %69 ]
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 -1
  %79 = bitcast %"class.std::__1::basic_string"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  tail call void @_ZdlPv(i8* %85) #8
  br label %86

86:                                               ; preds = %83, %76
  %87 = icmp eq %"class.std::__1::basic_string"* %78, %74
  br i1 %87, label %88, label %76

88:                                               ; preds = %86, %69
  %89 = icmp eq i64 %72, 0
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = inttoptr i64 %72 to i8*
  tail call void @_ZdlPv(i8* %91) #8
  br label %92

92:                                               ; preds = %88, %90
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
