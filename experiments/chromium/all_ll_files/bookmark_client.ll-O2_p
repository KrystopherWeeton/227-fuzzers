; ModuleID = '../../components/bookmarks/browser/bookmark_client.cc'
source_filename = "../../components/bookmarks/browser/bookmark_client.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.bookmarks::BookmarkClient" = type { i32 (...)** }
%"class.bookmarks::BookmarkModel" = type opaque
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.21 }
%class.scoped_refptr.21 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.22", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.22" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::CancelableTaskTracker" = type { %"class.base::small_map", i64, %"class.base::SequenceCheckerDoNothing", %"class.base::WeakPtr", %"class.base::WeakPtrFactory" }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.4 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.4 = type { [4 x %"struct.std::__1::pair"] }
%"struct.std::__1::pair" = type { i64, %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.13 }
%class.scoped_refptr.13 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.15" }
%"struct.std::__1::atomic.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__cxx_atomic_impl.18" }
%"struct.std::__1::__cxx_atomic_impl.18" = type { %"struct.std::__1::__cxx_atomic_base_impl.19" }
%"struct.std::__1::__cxx_atomic_base_impl.19" = type { i8 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.20 }
%class.scoped_refptr.20 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::unordered_map" = type opaque

$_ZN9bookmarks14BookmarkClientD2Ev = comdat any

$_ZN9bookmarks14BookmarkClientD0Ev = comdat any

@_ZN4base21CancelableTaskTracker10kBadTaskIdE = external local_unnamed_addr constant i64, align 8
@_ZTVN9bookmarks14BookmarkClientE = hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.bookmarks::BookmarkClient"*)* @_ZN9bookmarks14BookmarkClientD2Ev to i8*), i8* bitcast (void (%"class.bookmarks::BookmarkClient"*)* @_ZN9bookmarks14BookmarkClientD0Ev to i8*), i8* bitcast (void (%"class.bookmarks::BookmarkClient"*, %"class.bookmarks::BookmarkModel"*)* @_ZN9bookmarks14BookmarkClient4InitEPNS_13BookmarkModelE to i8*), i8* bitcast (i64 (%"class.bookmarks::BookmarkClient"*, %class.GURL*, %"class.base::OnceCallback"*, %"class.base::CancelableTaskTracker"*)* @_ZN9bookmarks14BookmarkClient25GetFaviconImageForPageURLERK4GURLN4base12OnceCallbackIFvRKN12favicon_base18FaviconImageResultEEEEPNS4_21CancelableTaskTrackerE to i8*), i8* bitcast (i1 (%"class.bookmarks::BookmarkClient"*)* @_ZN9bookmarks14BookmarkClient25SupportsTypedCountForUrlsEv to i8*), i8* bitcast (void (%"class.bookmarks::BookmarkClient"*, %"class.std::__1::unordered_map"*)* @_ZN9bookmarks14BookmarkClient20GetTypedCountForUrlsEPNSt3__113unordered_mapIPK4GURLiNS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_iEEEEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN9bookmarks14BookmarkClient4InitEPNS_13BookmarkModelE(%"class.bookmarks::BookmarkClient"* nocapture, %"class.bookmarks::BookmarkModel"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN9bookmarks14BookmarkClient25GetFaviconImageForPageURLERK4GURLN4base12OnceCallbackIFvRKN12favicon_base18FaviconImageResultEEEEPNS4_21CancelableTaskTrackerE(%"class.bookmarks::BookmarkClient"* nocapture readnone, %class.GURL* nocapture readnone dereferenceable(120), %"class.base::OnceCallback"* nocapture readnone, %"class.base::CancelableTaskTracker"* nocapture readnone) unnamed_addr #0 align 2 {
  %5 = load i64, i64* @_ZN4base21CancelableTaskTracker10kBadTaskIdE, align 8
  ret i64 %5
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN9bookmarks14BookmarkClient25SupportsTypedCountForUrlsEv(%"class.bookmarks::BookmarkClient"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN9bookmarks14BookmarkClient20GetTypedCountForUrlsEPNSt3__113unordered_mapIPK4GURLiNS1_4hashIS5_EENS1_8equal_toIS5_EENS1_9allocatorINS1_4pairIKS5_iEEEEEE(%"class.bookmarks::BookmarkClient"* nocapture, %"class.std::__1::unordered_map"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9bookmarks14BookmarkClientD2Ev(%"class.bookmarks::BookmarkClient"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9bookmarks14BookmarkClientD0Ev(%"class.bookmarks::BookmarkClient"*) unnamed_addr #1 comdat align 2 {
  tail call void @llvm.trap() #3
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
