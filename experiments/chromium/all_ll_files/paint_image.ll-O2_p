; ModuleID = '../../cc/paint/paint_image.cc'
source_filename = "../../cc/paint/paint_image.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"struct.cc::ImageHeaderMetadata" = type <{ i32, i32, %"class.gfx::Size", %"class.absl::optional", i8, i8, %"class.absl::optional.0", %"class.absl::optional.0", [2 x i8] }>
%"class.gfx::Size" = type { i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.gfx::Size" }
%"class.absl::optional.0" = type { %"class.absl::optional_internal::optional_data.1" }
%"class.absl::optional_internal::optional_data.1" = type { %"class.absl::optional_internal::optional_data_base.2" }
%"class.absl::optional_internal::optional_data_base.2" = type { %"class.absl::optional_internal::optional_data_dtor_base.3" }
%"class.absl::optional_internal::optional_data_dtor_base.3" = type { i8, %union.anon.4 }
%union.anon.4 = type { i8 }
%"class.cc::PaintImage" = type { %class.sk_sp, %class.sk_sp.12, %"class.gfx::Rect", i32, %class.sk_sp.14, %class.sk_sp.18, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp, %class.scoped_refptr }
%class.sk_sp.12 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp.14 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.6, i32, i32 }
%class.sk_sp.6 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.7" }
%"struct.std::__1::atomic.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl.10" }
%"struct.std::__1::__cxx_atomic_impl.10" = type { %"struct.std::__1::__cxx_atomic_base_impl.11" }
%"struct.std::__1::__cxx_atomic_base_impl.11" = type { i8 }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.15" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.18 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.scoped_refptr = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.cc::PaintImage::FrameKey" = type { i32, i64, i64 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkBitmap = type { %class.sk_sp.19, %class.SkPixmap, %class.sk_sp.20 }
%class.sk_sp.19 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.sk_sp.20 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.cc::PaintImageBuilder" = type { %"class.cc::PaintImage" }
%class.sk_sp.27 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.28", [7 x i8] }>
%"struct.std::__1::atomic.28" = type { %"struct.std::__1::__atomic_base.29" }
%"struct.std::__1::__atomic_base.29" = type { %"struct.std::__1::__cxx_atomic_impl.30" }
%"struct.std::__1::__cxx_atomic_impl.30" = type { %"struct.std::__1::__cxx_atomic_base_impl.31" }
%"struct.std::__1::__cxx_atomic_base_impl.31" = type { i8 }
%struct.SkRect = type { float, float, float, float }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.32 }
%class.scoped_refptr.32 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.33", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.33" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.cc::ImageProvider" = type opaque
%class.SkMatrix = type { [9 x float], i32 }
%class.SkPaint = type <{ %class.sk_sp.21, %class.sk_sp.22, %class.sk_sp.23, %class.sk_sp.24, %class.sk_sp.25, %struct.SkRGBA4f, float, float, %union.anon.26, [4 x i8] }>
%class.sk_sp.21 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.sk_sp.22 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.23 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.24 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.25 = type { %class.SkImageFilter* }
%class.SkImageFilter = type opaque
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon.26 = type { %struct.anon }
%struct.anon = type { i32 }
%"class.cc::SkiaPaintImageGenerator" = type <{ %class.SkImageGenerator.base, [4 x i8], %class.sk_sp.14, i64, i32, [4 x i8] }>
%class.SkImageGenerator.base = type <{ i32 (...)**, %struct.SkImageInfo, i32 }>
%class.SkImageGenerator = type <{ i32 (...)**, %struct.SkImageInfo, i32, [4 x i8] }>
%class.GrDirectContext = type opaque
%class.SkYUVAPixmaps = type <{ %"struct.std::__1::array", %class.sk_sp.44, %class.SkYUVAInfo, i32, [4 x i8] }>
%"struct.std::__1::array" = type { [4 x %class.SkPixmap] }
%class.sk_sp.44 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.45, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.45 = type { %"struct.std::__1::atomic" }
%class.SkYUVAInfo = type { %struct.SkISize, i32, i32, i32, i32, i32, i32 }
%"class.SkYUVAPixmapInfo::SupportedDataTypes" = type { %"class.std::__1::bitset" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%class.SkYUVAPixmapInfo = type <{ %class.SkYUVAInfo, %"struct.std::__1::array.46", %"struct.std::__1::array.47", i32, [4 x i8] }>
%"struct.std::__1::array.46" = type { [4 x %struct.SkImageInfo] }
%"struct.std::__1::array.47" = type { [4 x i64] }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.50 }
%union.anon.50 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.51 }
%struct.anon.51 = type { i8 }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZN16SkYUVAPixmapInfo18SupportedDataTypes3AllEv = comdat any

$_ZN16SkYUVAPixmapInfo27DefaultColorTypeForDataTypeENS_8DataTypeEi = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@_ZN2cc10PaintImage16kNonLazyStableIdE = hidden local_unnamed_addr constant i32 -1, align 4
@_ZN2cc10PaintImage18kDefaultFrameIndexE = hidden local_unnamed_addr constant i64 0, align 8
@_ZN2cc10PaintImage10kInvalidIdE = hidden local_unnamed_addr constant i32 -2, align 4
@_ZN2cc10PaintImage17kInvalidContentIdE = hidden local_unnamed_addr constant i32 -1, align 4
@_ZN2cc10PaintImage25kDefaultGeneratorClientIdE = hidden local_unnamed_addr constant i32 0, align 4
@.str = private unnamed_addr constant [12 x i8] c"sk_image_: \00", align 1
@.str.1 = private unnamed_addr constant [17 x i8] c" paint_record_: \00", align 1
@.str.2 = private unnamed_addr constant [22 x i8] c" paint_record_rect_: \00", align 1
@.str.3 = private unnamed_addr constant [26 x i8] c" paint_image_generator_: \00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c" id_: \00", align 1
@.str.5 = private unnamed_addr constant [19 x i8] c" animation_type_: \00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c" completion_state_: \00", align 1
@.str.7 = private unnamed_addr constant [17 x i8] c" is_multipart_: \00", align 1
@.str.8 = private unnamed_addr constant [10 x i8] c" is YUV: \00", align 1
@.str.9 = private unnamed_addr constant [13 x i8] c"content_id: \00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.11 = private unnamed_addr constant [14 x i8] c"frame_index: \00", align 1
@_ZN2cc12_GLOBAL__N_115g_next_image_idE = internal global { { { i32 } } } zeroinitializer, align 4
@_ZN2cc12_GLOBAL__N_123g_next_image_content_idE = internal global { { { i32 } } } zeroinitializer, align 4
@_ZN2cc12_GLOBAL__N_126g_next_generator_client_idE = internal global { { { i32 } } } zeroinitializer, align 4
@_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant [4 x i8*], align 8
@_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [16 x i8*] }, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@switch.table._ZN16SkYUVAPixmapInfo27DefaultColorTypeForDataTypeENS_8DataTypeEi = private unnamed_addr constant [4 x i32] [i32 11, i32 18, i32 16, i32 0], align 4
@switch.table._ZN16SkYUVAPixmapInfo27DefaultColorTypeForDataTypeENS_8DataTypeEi.16 = private unnamed_addr constant [4 x i32] [i32 15, i32 19, i32 17, i32 0], align 4
@switch.table._ZN16SkYUVAPixmapInfo27DefaultColorTypeForDataTypeENS_8DataTypeEi.18 = private unnamed_addr constant [4 x i32] [i32 4, i32 20, i32 13, i32 7], align 4

@_ZN2cc19ImageHeaderMetadataC1Ev = hidden unnamed_addr alias void (%"struct.cc::ImageHeaderMetadata"*), void (%"struct.cc::ImageHeaderMetadata"*)* @_ZN2cc19ImageHeaderMetadataC2Ev
@_ZN2cc19ImageHeaderMetadataC1ERKS0_ = hidden unnamed_addr alias void (%"struct.cc::ImageHeaderMetadata"*, %"struct.cc::ImageHeaderMetadata"*), void (%"struct.cc::ImageHeaderMetadata"*, %"struct.cc::ImageHeaderMetadata"*)* @_ZN2cc19ImageHeaderMetadataC2ERKS0_
@_ZN2cc19ImageHeaderMetadataD1Ev = hidden unnamed_addr alias void (%"struct.cc::ImageHeaderMetadata"*), void (%"struct.cc::ImageHeaderMetadata"*)* @_ZN2cc19ImageHeaderMetadataD2Ev
@_ZN2cc10PaintImageC1Ev = hidden unnamed_addr alias void (%"class.cc::PaintImage"*), void (%"class.cc::PaintImage"*)* @_ZN2cc10PaintImageC2Ev
@_ZN2cc10PaintImageC1ERKS0_ = hidden unnamed_addr alias void (%"class.cc::PaintImage"*, %"class.cc::PaintImage"*), void (%"class.cc::PaintImage"*, %"class.cc::PaintImage"*)* @_ZN2cc10PaintImageC2ERKS0_
@_ZN2cc10PaintImageC1EOS0_ = hidden unnamed_addr alias void (%"class.cc::PaintImage"*, %"class.cc::PaintImage"*), void (%"class.cc::PaintImage"*, %"class.cc::PaintImage"*)* @_ZN2cc10PaintImageC2EOS0_
@_ZN2cc10PaintImageD1Ev = hidden unnamed_addr alias void (%"class.cc::PaintImage"*), void (%"class.cc::PaintImage"*)* @_ZN2cc10PaintImageD2Ev
@_ZN2cc10PaintImage8FrameKeyC1Eim = hidden unnamed_addr alias void (%"class.cc::PaintImage::FrameKey"*, i32, i64), void (%"class.cc::PaintImage::FrameKey"*, i32, i64)* @_ZN2cc10PaintImage8FrameKeyC2Eim

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2cc19ImageHeaderMetadataC2Ev(%"struct.cc::ImageHeaderMetadata"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.cc::ImageHeaderMetadata", %"struct.cc::ImageHeaderMetadata"* %0, i64 0, i32 0
  store i32 8, i32* %2, align 4
  %3 = getelementptr inbounds %"struct.cc::ImageHeaderMetadata", %"struct.cc::ImageHeaderMetadata"* %0, i64 0, i32 1
  store i32 6, i32* %3, align 4
  %4 = getelementptr inbounds %"struct.cc::ImageHeaderMetadata", %"struct.cc::ImageHeaderMetadata"* %0, i64 0, i32 2, i32 0
  %5 = getelementptr inbounds %"struct.cc::ImageHeaderMetadata", %"struct.cc::ImageHeaderMetadata"* %0, i64 0, i32 4
  store i8 0, i8* %5, align 4
  %6 = getelementptr inbounds %"struct.cc::ImageHeaderMetadata", %"struct.cc::ImageHeaderMetadata"* %0, i64 0, i32 5
  store i8 0, i8* %6, align 1
  %7 = getelementptr inbounds %"struct.cc::ImageHeaderMetadata", %"struct.cc::ImageHeaderMetadata"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %7, align 1
  %8 = getelementptr inbounds %"struct.cc::ImageHeaderMetadata", %"struct.cc::ImageHeaderMetadata"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %8, align 1
  %9 = bitcast i32* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %9, i8 0, i64 9, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc19ImageHeaderMetadataC2ERKS0_(%"struct.cc::ImageHeaderMetadata"* nocapture, %"struct.cc::ImageHeaderMetadata"* nocapture readonly dereferenceable(36)) unnamed_addr #1 align 2 {
  %3 = bitcast %"struct.cc::ImageHeaderMetadata"* %0 to i8*
  %4 = bitcast %"struct.cc::ImageHeaderMetadata"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 34, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(36) %"struct.cc::ImageHeaderMetadata"* @_ZN2cc19ImageHeaderMetadataaSERKS0_(%"struct.cc::ImageHeaderMetadata"* returned, %"struct.cc::ImageHeaderMetadata"* nocapture readonly dereferenceable(36)) local_unnamed_addr #1 align 2 {
  %3 = bitcast %"struct.cc::ImageHeaderMetadata"* %0 to i8*
  %4 = bitcast %"struct.cc::ImageHeaderMetadata"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 34, i1 false)
  ret %"struct.cc::ImageHeaderMetadata"* %0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2cc19ImageHeaderMetadataD2Ev(%"struct.cc::ImageHeaderMetadata"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10PaintImageC2Ev(%"class.cc::PaintImage"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 3
  %3 = bitcast %"class.cc::PaintImage"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 32, i1 false)
  store i32 -1, i32* %2, align 8
  %4 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 4, i32 0
  %5 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 7
  %6 = bitcast %"class.cc::PaintImageGenerator"** %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 20, i1 false)
  store i32 2, i32* %5, align 4
  %7 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 8
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 9
  store i32 -2, i32* %8, align 4
  %9 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 10
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 11
  store i8 0, i8* %10, align 1
  %11 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 12
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 13
  store i32 1, i32* %12, align 8
  %13 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 14, i32 0
  %14 = bitcast %class.SkImage** %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10PaintImageC2ERKS0_(%"class.cc::PaintImage"* nocapture, %"class.cc::PaintImage"* nocapture readonly dereferenceable(104)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 0, i32 0
  %5 = load %class.SkImage*, %class.SkImage** %4, align 8
  %6 = icmp eq %class.SkImage* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkImage, %class.SkImage* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  br label %10

10:                                               ; preds = %2, %7
  store %class.SkImage* %5, %class.SkImage** %3, align 8
  %11 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 1, i32 0
  %13 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %12, align 8
  %14 = icmp eq %"class.cc::PaintOpBuffer"* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %13, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 1 monotonic
  br label %18

18:                                               ; preds = %10, %15
  store %"class.cc::PaintOpBuffer"* %13, %"class.cc::PaintOpBuffer"** %11, align 8
  %19 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 2
  %20 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 2
  %21 = bitcast %"class.gfx::Rect"* %19 to i8*
  %22 = bitcast %"class.gfx::Rect"* %20 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 20, i1 false)
  %23 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 4, i32 0
  %24 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 4, i32 0
  %25 = load %"class.cc::PaintImageGenerator"*, %"class.cc::PaintImageGenerator"** %24, align 8
  %26 = icmp eq %"class.cc::PaintImageGenerator"* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %18
  %28 = getelementptr inbounds %"class.cc::PaintImageGenerator", %"class.cc::PaintImageGenerator"* %25, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = atomicrmw add i32* %28, i32 1 monotonic
  br label %30

30:                                               ; preds = %18, %27
  store %"class.cc::PaintImageGenerator"* %25, %"class.cc::PaintImageGenerator"** %23, align 8
  %31 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 5, i32 0
  %32 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 5, i32 0
  %33 = load %"class.cc::TextureBacking"*, %"class.cc::TextureBacking"** %32, align 8
  %34 = icmp eq %"class.cc::TextureBacking"* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.cc::TextureBacking", %"class.cc::TextureBacking"* %33, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw add i32* %36, i32 1 monotonic
  br label %38

38:                                               ; preds = %30, %35
  store %"class.cc::TextureBacking"* %33, %"class.cc::TextureBacking"** %31, align 8
  %39 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 6
  %40 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 6
  %41 = bitcast i32* %39 to i8*
  %42 = bitcast i32* %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 28, i1 false)
  %43 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 14, i32 0
  %44 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 14, i32 0
  %45 = load %class.SkImage*, %class.SkImage** %44, align 8
  %46 = icmp eq %class.SkImage* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %38
  %48 = getelementptr inbounds %class.SkImage, %class.SkImage* %45, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = atomicrmw add i32* %48, i32 1 monotonic
  br label %50

50:                                               ; preds = %38, %47
  store %class.SkImage* %45, %class.SkImage** %43, align 8
  %51 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 15, i32 0
  %52 = load %"class.cc::PaintWorkletInput"*, %"class.cc::PaintWorkletInput"** %51, align 8
  %53 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 15, i32 0
  store %"class.cc::PaintWorkletInput"* %52, %"class.cc::PaintWorkletInput"** %53, align 8
  %54 = icmp eq %"class.cc::PaintWorkletInput"* %52, null
  br i1 %54, label %58, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.cc::PaintWorkletInput", %"class.cc::PaintWorkletInput"* %52, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw add i32* %56, i32 1 monotonic
  br label %58

58:                                               ; preds = %50, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10PaintImageC2EOS0_(%"class.cc::PaintImage"* nocapture, %"class.cc::PaintImage"* nocapture dereferenceable(104)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 0, i32 0
  %4 = bitcast %"class.cc::PaintImage"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  store %class.SkImage* null, %class.SkImage** %3, align 8
  %6 = bitcast %"class.cc::PaintImage"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 1
  %9 = getelementptr inbounds %class.sk_sp.12, %class.sk_sp.12* %8, i64 0, i32 0
  %10 = bitcast %class.sk_sp.12* %8 to i64*
  %11 = load i64, i64* %10, align 8
  store %"class.cc::PaintOpBuffer"* null, %"class.cc::PaintOpBuffer"** %9, align 8
  %12 = bitcast %class.sk_sp.12* %7 to i64*
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 2
  %14 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 2
  %15 = bitcast %"class.gfx::Rect"* %13 to i8*
  %16 = bitcast %"class.gfx::Rect"* %14 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 20, i1 false)
  %17 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 4
  %18 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 4
  %19 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %18, i64 0, i32 0
  %20 = bitcast %class.sk_sp.14* %18 to i64*
  %21 = load i64, i64* %20, align 8
  store %"class.cc::PaintImageGenerator"* null, %"class.cc::PaintImageGenerator"** %19, align 8
  %22 = bitcast %class.sk_sp.14* %17 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 5
  %24 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 5
  %25 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %24, i64 0, i32 0
  %26 = bitcast %class.sk_sp.18* %24 to i64*
  %27 = load i64, i64* %26, align 8
  store %"class.cc::TextureBacking"* null, %"class.cc::TextureBacking"** %25, align 8
  %28 = bitcast %class.sk_sp.18* %23 to i64*
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 6
  %30 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 6
  %31 = bitcast i32* %29 to i8*
  %32 = bitcast i32* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 28, i1 false)
  %33 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 14
  %34 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 14
  %35 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %34, i64 0, i32 0
  %36 = bitcast %class.sk_sp* %34 to i64*
  %37 = load i64, i64* %36, align 8
  store %class.SkImage* null, %class.SkImage** %35, align 8
  %38 = bitcast %class.sk_sp* %33 to i64*
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 15
  %40 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 15
  %41 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %40, i64 0, i32 0
  %42 = bitcast %class.scoped_refptr* %40 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %class.scoped_refptr* %39 to i64*
  store i64 %43, i64* %44, align 8
  store %"class.cc::PaintWorkletInput"* null, %"class.cc::PaintWorkletInput"** %41, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10PaintImageD2Ev(%"class.cc::PaintImage"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 15, i32 0
  %3 = load %"class.cc::PaintWorkletInput"*, %"class.cc::PaintWorkletInput"** %2, align 8
  %4 = icmp eq %"class.cc::PaintWorkletInput"* %3, null
  br i1 %4, label %17, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.cc::PaintWorkletInput", %"class.cc::PaintWorkletInput"* %3, i64 0, i32 1
  %7 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %17

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %6, i64 -2
  %12 = bitcast %"class.base::RefCountedThreadSafe"* %11 to %"class.cc::PaintWorkletInput"*
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %11 to void (%"class.cc::PaintWorkletInput"*)***
  %14 = load void (%"class.cc::PaintWorkletInput"*)**, void (%"class.cc::PaintWorkletInput"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.cc::PaintWorkletInput"*)*, void (%"class.cc::PaintWorkletInput"*)** %14, i64 4
  %16 = load void (%"class.cc::PaintWorkletInput"*)*, void (%"class.cc::PaintWorkletInput"*)** %15, align 8
  tail call void %16(%"class.cc::PaintWorkletInput"* nonnull %12) #11
  br label %17

17:                                               ; preds = %1, %5, %10
  %18 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 14, i32 0
  %19 = load %class.SkImage*, %class.SkImage** %18, align 8
  %20 = icmp eq %class.SkImage* %19, null
  br i1 %20, label %31, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %class.SkImage, %class.SkImage* %19, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 -1 acq_rel
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %31

25:                                               ; preds = %21
  %26 = bitcast %class.SkImage* %19 to %class.SkRefCntBase*
  %27 = bitcast %class.SkImage* %19 to void (%class.SkRefCntBase*)***
  %28 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %27, align 8
  %29 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, i64 2
  %30 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %29, align 8
  tail call void %30(%class.SkRefCntBase* nonnull %26) #11
  br label %31

31:                                               ; preds = %17, %21, %25
  %32 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 5, i32 0
  %33 = load %"class.cc::TextureBacking"*, %"class.cc::TextureBacking"** %32, align 8
  %34 = icmp eq %"class.cc::TextureBacking"* %33, null
  br i1 %34, label %45, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.cc::TextureBacking", %"class.cc::TextureBacking"* %33, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw add i32* %36, i32 -1 acq_rel
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %45

39:                                               ; preds = %35
  %40 = bitcast %"class.cc::TextureBacking"* %33 to %class.SkRefCntBase*
  %41 = bitcast %"class.cc::TextureBacking"* %33 to void (%class.SkRefCntBase*)***
  %42 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %41, align 8
  %43 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %42, i64 2
  %44 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %43, align 8
  tail call void %44(%class.SkRefCntBase* nonnull %40) #11
  br label %45

45:                                               ; preds = %31, %35, %39
  %46 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 4, i32 0
  %47 = load %"class.cc::PaintImageGenerator"*, %"class.cc::PaintImageGenerator"** %46, align 8
  %48 = icmp eq %"class.cc::PaintImageGenerator"* %47, null
  br i1 %48, label %59, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.cc::PaintImageGenerator", %"class.cc::PaintImageGenerator"* %47, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = atomicrmw add i32* %50, i32 -1 acq_rel
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %53, label %59

53:                                               ; preds = %49
  %54 = bitcast %"class.cc::PaintImageGenerator"* %47 to %class.SkRefCntBase*
  %55 = bitcast %"class.cc::PaintImageGenerator"* %47 to void (%class.SkRefCntBase*)***
  %56 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %55, align 8
  %57 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %56, i64 2
  %58 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %57, align 8
  tail call void %58(%class.SkRefCntBase* nonnull %54) #11
  br label %59

59:                                               ; preds = %45, %49, %53
  %60 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 1, i32 0
  %61 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %60, align 8
  %62 = icmp eq %"class.cc::PaintOpBuffer"* %61, null
  br i1 %62, label %73, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %61, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = atomicrmw add i32* %64, i32 -1 acq_rel
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %67, label %73

67:                                               ; preds = %63
  %68 = bitcast %"class.cc::PaintOpBuffer"* %61 to %class.SkRefCntBase*
  %69 = bitcast %"class.cc::PaintOpBuffer"* %61 to void (%class.SkRefCntBase*)***
  %70 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %69, align 8
  %71 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %70, i64 2
  %72 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %71, align 8
  tail call void %72(%class.SkRefCntBase* nonnull %68) #11
  br label %73

73:                                               ; preds = %59, %63, %67
  %74 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 0, i32 0
  %75 = load %class.SkImage*, %class.SkImage** %74, align 8
  %76 = icmp eq %class.SkImage* %75, null
  br i1 %76, label %87, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %class.SkImage, %class.SkImage* %75, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = atomicrmw add i32* %78, i32 -1 acq_rel
  %80 = icmp eq i32 %79, 1
  br i1 %80, label %81, label %87

81:                                               ; preds = %77
  %82 = bitcast %class.SkImage* %75 to %class.SkRefCntBase*
  %83 = bitcast %class.SkImage* %75 to void (%class.SkRefCntBase*)***
  %84 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %83, align 8
  %85 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %84, i64 2
  %86 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %85, align 8
  tail call void %86(%class.SkRefCntBase* nonnull %82) #11
  br label %87

87:                                               ; preds = %73, %77, %81
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(104) %"class.cc::PaintImage"* @_ZN2cc10PaintImageaSERKS0_(%"class.cc::PaintImage"* returned, %"class.cc::PaintImage"* readonly dereferenceable(104)) local_unnamed_addr #1 align 2 {
  %3 = icmp eq %"class.cc::PaintImage"* %0, %1
  br i1 %3, label %92, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 0, i32 0
  %6 = load %class.SkImage*, %class.SkImage** %5, align 8
  %7 = icmp eq %class.SkImage* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %class.SkImage, %class.SkImage* %6, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw add i32* %9, i32 1 monotonic
  br label %11

11:                                               ; preds = %8, %4
  %12 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 0, i32 0
  %13 = load %class.SkImage*, %class.SkImage** %12, align 8
  store %class.SkImage* %6, %class.SkImage** %12, align 8
  %14 = icmp eq %class.SkImage* %13, null
  br i1 %14, label %25, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %class.SkImage, %class.SkImage* %13, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 -1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %25

19:                                               ; preds = %15
  %20 = bitcast %class.SkImage* %13 to %class.SkRefCntBase*
  %21 = bitcast %class.SkImage* %13 to void (%class.SkRefCntBase*)***
  %22 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %22, i64 2
  %24 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, align 8
  tail call void %24(%class.SkRefCntBase* nonnull %20) #11
  br label %25

25:                                               ; preds = %11, %15, %19
  %26 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 1, i32 0
  %27 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %26, align 8
  %28 = icmp eq %"class.cc::PaintOpBuffer"* %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %27, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw add i32* %30, i32 1 monotonic
  br label %32

32:                                               ; preds = %29, %25
  %33 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 1, i32 0
  %34 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %33, align 8
  store %"class.cc::PaintOpBuffer"* %27, %"class.cc::PaintOpBuffer"** %33, align 8
  %35 = icmp eq %"class.cc::PaintOpBuffer"* %34, null
  br i1 %35, label %46, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %34, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw add i32* %37, i32 -1 acq_rel
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %46

40:                                               ; preds = %36
  %41 = bitcast %"class.cc::PaintOpBuffer"* %34 to %class.SkRefCntBase*
  %42 = bitcast %"class.cc::PaintOpBuffer"* %34 to void (%class.SkRefCntBase*)***
  %43 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %42, align 8
  %44 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %43, i64 2
  %45 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %44, align 8
  tail call void %45(%class.SkRefCntBase* nonnull %41) #11
  br label %46

46:                                               ; preds = %32, %36, %40
  %47 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 2
  %48 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 2
  %49 = bitcast %"class.gfx::Rect"* %47 to i8*
  %50 = bitcast %"class.gfx::Rect"* %48 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 20, i1 false)
  %51 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 4, i32 0
  %52 = load %"class.cc::PaintImageGenerator"*, %"class.cc::PaintImageGenerator"** %51, align 8
  %53 = icmp eq %"class.cc::PaintImageGenerator"* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %46
  %55 = getelementptr inbounds %"class.cc::PaintImageGenerator", %"class.cc::PaintImageGenerator"* %52, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = atomicrmw add i32* %55, i32 1 monotonic
  br label %57

57:                                               ; preds = %54, %46
  %58 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 4, i32 0
  %59 = load %"class.cc::PaintImageGenerator"*, %"class.cc::PaintImageGenerator"** %58, align 8
  store %"class.cc::PaintImageGenerator"* %52, %"class.cc::PaintImageGenerator"** %58, align 8
  %60 = icmp eq %"class.cc::PaintImageGenerator"* %59, null
  br i1 %60, label %71, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.cc::PaintImageGenerator", %"class.cc::PaintImageGenerator"* %59, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = atomicrmw add i32* %62, i32 -1 acq_rel
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %65, label %71

65:                                               ; preds = %61
  %66 = bitcast %"class.cc::PaintImageGenerator"* %59 to %class.SkRefCntBase*
  %67 = bitcast %"class.cc::PaintImageGenerator"* %59 to void (%class.SkRefCntBase*)***
  %68 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %67, align 8
  %69 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %68, i64 2
  %70 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %69, align 8
  tail call void %70(%class.SkRefCntBase* nonnull %66) #11
  br label %71

71:                                               ; preds = %57, %61, %65
  %72 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 5, i32 0
  %73 = load %"class.cc::TextureBacking"*, %"class.cc::TextureBacking"** %72, align 8
  %74 = icmp eq %"class.cc::TextureBacking"* %73, null
  br i1 %74, label %78, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.cc::TextureBacking", %"class.cc::TextureBacking"* %73, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = atomicrmw add i32* %76, i32 1 monotonic
  br label %78

78:                                               ; preds = %75, %71
  %79 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 5, i32 0
  %80 = load %"class.cc::TextureBacking"*, %"class.cc::TextureBacking"** %79, align 8
  store %"class.cc::TextureBacking"* %73, %"class.cc::TextureBacking"** %79, align 8
  %81 = icmp eq %"class.cc::TextureBacking"* %80, null
  br i1 %81, label %101, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.cc::TextureBacking", %"class.cc::TextureBacking"* %80, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = atomicrmw add i32* %83, i32 -1 acq_rel
  %85 = icmp eq i32 %84, 1
  br i1 %85, label %86, label %101

86:                                               ; preds = %82
  %87 = bitcast %"class.cc::TextureBacking"* %80 to %class.SkRefCntBase*
  %88 = bitcast %"class.cc::TextureBacking"* %80 to void (%class.SkRefCntBase*)***
  %89 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %88, align 8
  %90 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %89, i64 2
  %91 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %90, align 8
  tail call void %91(%class.SkRefCntBase* nonnull %87) #11
  br label %101

92:                                               ; preds = %2
  %93 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 2
  %94 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 2
  %95 = bitcast %"class.gfx::Rect"* %93 to i8*
  %96 = bitcast %"class.gfx::Rect"* %94 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %95, i8* align 8 %96, i64 20, i1 false)
  %97 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 6
  %98 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 6
  %99 = bitcast i32* %97 to i8*
  %100 = bitcast i32* %98 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %100, i64 28, i1 false)
  br label %126

101:                                              ; preds = %78, %82, %86
  %102 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 6
  %103 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 6
  %104 = bitcast i32* %102 to i8*
  %105 = bitcast i32* %103 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %104, i8* align 8 %105, i64 28, i1 false)
  %106 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 14, i32 0
  %107 = load %class.SkImage*, %class.SkImage** %106, align 8
  %108 = icmp eq %class.SkImage* %107, null
  br i1 %108, label %112, label %109

109:                                              ; preds = %101
  %110 = getelementptr inbounds %class.SkImage, %class.SkImage* %107, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = atomicrmw add i32* %110, i32 1 monotonic
  br label %112

112:                                              ; preds = %109, %101
  %113 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 14, i32 0
  %114 = load %class.SkImage*, %class.SkImage** %113, align 8
  store %class.SkImage* %107, %class.SkImage** %113, align 8
  %115 = icmp eq %class.SkImage* %114, null
  br i1 %115, label %126, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %class.SkImage, %class.SkImage* %114, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = atomicrmw add i32* %117, i32 -1 acq_rel
  %119 = icmp eq i32 %118, 1
  br i1 %119, label %120, label %126

120:                                              ; preds = %116
  %121 = bitcast %class.SkImage* %114 to %class.SkRefCntBase*
  %122 = bitcast %class.SkImage* %114 to void (%class.SkRefCntBase*)***
  %123 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %122, align 8
  %124 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %123, i64 2
  %125 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %124, align 8
  tail call void %125(%class.SkRefCntBase* nonnull %121) #11
  br label %126

126:                                              ; preds = %92, %112, %116, %120
  %127 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 15
  %128 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 15, i32 0
  %129 = load %"class.cc::PaintWorkletInput"*, %"class.cc::PaintWorkletInput"** %128, align 8
  %130 = icmp eq %"class.cc::PaintWorkletInput"* %129, null
  br i1 %130, label %134, label %131

131:                                              ; preds = %126
  %132 = getelementptr inbounds %"class.cc::PaintWorkletInput", %"class.cc::PaintWorkletInput"* %129, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = atomicrmw add i32* %132, i32 1 monotonic
  br label %134

134:                                              ; preds = %126, %131
  %135 = ptrtoint %"class.cc::PaintWorkletInput"* %129 to i64
  %136 = bitcast %class.scoped_refptr* %127 to i64*
  %137 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %127, i64 0, i32 0
  %138 = load %"class.cc::PaintWorkletInput"*, %"class.cc::PaintWorkletInput"** %137, align 8
  store i64 %135, i64* %136, align 8
  %139 = icmp eq %"class.cc::PaintWorkletInput"* %138, null
  br i1 %139, label %152, label %140

140:                                              ; preds = %134
  %141 = getelementptr inbounds %"class.cc::PaintWorkletInput", %"class.cc::PaintWorkletInput"* %138, i64 0, i32 1
  %142 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %141, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = atomicrmw sub i32* %142, i32 1 acq_rel
  %144 = icmp eq i32 %143, 1
  br i1 %144, label %145, label %152

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %141, i64 -2
  %147 = bitcast %"class.base::RefCountedThreadSafe"* %146 to %"class.cc::PaintWorkletInput"*
  %148 = bitcast %"class.base::RefCountedThreadSafe"* %146 to void (%"class.cc::PaintWorkletInput"*)***
  %149 = load void (%"class.cc::PaintWorkletInput"*)**, void (%"class.cc::PaintWorkletInput"*)*** %148, align 8
  %150 = getelementptr inbounds void (%"class.cc::PaintWorkletInput"*)*, void (%"class.cc::PaintWorkletInput"*)** %149, i64 4
  %151 = load void (%"class.cc::PaintWorkletInput"*)*, void (%"class.cc::PaintWorkletInput"*)** %150, align 8
  tail call void %151(%"class.cc::PaintWorkletInput"* nonnull %147) #11
  br label %152

152:                                              ; preds = %134, %140, %145
  ret %"class.cc::PaintImage"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(104) %"class.cc::PaintImage"* @_ZN2cc10PaintImageaSEOS0_(%"class.cc::PaintImage"* returned, %"class.cc::PaintImage"* nocapture dereferenceable(104)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 0, i32 0
  %4 = bitcast %"class.cc::PaintImage"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  store %class.SkImage* null, %class.SkImage** %3, align 8
  %6 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 0, i32 0
  %7 = load %class.SkImage*, %class.SkImage** %6, align 8
  %8 = bitcast %"class.cc::PaintImage"* %0 to i64*
  store i64 %5, i64* %8, align 8
  %9 = icmp eq %class.SkImage* %7, null
  br i1 %9, label %20, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %class.SkImage, %class.SkImage* %7, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw add i32* %11, i32 -1 acq_rel
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %20

14:                                               ; preds = %10
  %15 = bitcast %class.SkImage* %7 to %class.SkRefCntBase*
  %16 = bitcast %class.SkImage* %7 to void (%class.SkRefCntBase*)***
  %17 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %16, align 8
  %18 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %17, i64 2
  %19 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %18, align 8
  tail call void %19(%class.SkRefCntBase* nonnull %15) #11
  br label %20

20:                                               ; preds = %2, %10, %14
  %21 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 1
  %22 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 1
  %23 = getelementptr inbounds %class.sk_sp.12, %class.sk_sp.12* %22, i64 0, i32 0
  %24 = bitcast %class.sk_sp.12* %22 to i64*
  %25 = load i64, i64* %24, align 8
  store %"class.cc::PaintOpBuffer"* null, %"class.cc::PaintOpBuffer"** %23, align 8
  %26 = getelementptr inbounds %class.sk_sp.12, %class.sk_sp.12* %21, i64 0, i32 0
  %27 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %26, align 8
  %28 = bitcast %class.sk_sp.12* %21 to i64*
  store i64 %25, i64* %28, align 8
  %29 = icmp eq %"class.cc::PaintOpBuffer"* %27, null
  br i1 %29, label %40, label %30

30:                                               ; preds = %20
  %31 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %27, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 -1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %40

34:                                               ; preds = %30
  %35 = bitcast %"class.cc::PaintOpBuffer"* %27 to %class.SkRefCntBase*
  %36 = bitcast %"class.cc::PaintOpBuffer"* %27 to void (%class.SkRefCntBase*)***
  %37 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %36, align 8
  %38 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %37, i64 2
  %39 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %38, align 8
  tail call void %39(%class.SkRefCntBase* nonnull %35) #11
  br label %40

40:                                               ; preds = %20, %30, %34
  %41 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 2
  %42 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 2
  %43 = bitcast %"class.gfx::Rect"* %41 to i8*
  %44 = bitcast %"class.gfx::Rect"* %42 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 20, i1 false)
  %45 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 4
  %46 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 4
  %47 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %46, i64 0, i32 0
  %48 = bitcast %class.sk_sp.14* %46 to i64*
  %49 = load i64, i64* %48, align 8
  store %"class.cc::PaintImageGenerator"* null, %"class.cc::PaintImageGenerator"** %47, align 8
  %50 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %45, i64 0, i32 0
  %51 = load %"class.cc::PaintImageGenerator"*, %"class.cc::PaintImageGenerator"** %50, align 8
  %52 = bitcast %class.sk_sp.14* %45 to i64*
  store i64 %49, i64* %52, align 8
  %53 = icmp eq %"class.cc::PaintImageGenerator"* %51, null
  br i1 %53, label %64, label %54

54:                                               ; preds = %40
  %55 = getelementptr inbounds %"class.cc::PaintImageGenerator", %"class.cc::PaintImageGenerator"* %51, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = atomicrmw add i32* %55, i32 -1 acq_rel
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %58, label %64

58:                                               ; preds = %54
  %59 = bitcast %"class.cc::PaintImageGenerator"* %51 to %class.SkRefCntBase*
  %60 = bitcast %"class.cc::PaintImageGenerator"* %51 to void (%class.SkRefCntBase*)***
  %61 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %60, align 8
  %62 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %61, i64 2
  %63 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %62, align 8
  tail call void %63(%class.SkRefCntBase* nonnull %59) #11
  br label %64

64:                                               ; preds = %40, %54, %58
  %65 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 5
  %66 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 5
  %67 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %66, i64 0, i32 0
  %68 = bitcast %class.sk_sp.18* %66 to i64*
  %69 = load i64, i64* %68, align 8
  store %"class.cc::TextureBacking"* null, %"class.cc::TextureBacking"** %67, align 8
  %70 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %65, i64 0, i32 0
  %71 = load %"class.cc::TextureBacking"*, %"class.cc::TextureBacking"** %70, align 8
  %72 = bitcast %class.sk_sp.18* %65 to i64*
  store i64 %69, i64* %72, align 8
  %73 = icmp eq %"class.cc::TextureBacking"* %71, null
  br i1 %73, label %84, label %74

74:                                               ; preds = %64
  %75 = getelementptr inbounds %"class.cc::TextureBacking", %"class.cc::TextureBacking"* %71, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = atomicrmw add i32* %75, i32 -1 acq_rel
  %77 = icmp eq i32 %76, 1
  br i1 %77, label %78, label %84

78:                                               ; preds = %74
  %79 = bitcast %"class.cc::TextureBacking"* %71 to %class.SkRefCntBase*
  %80 = bitcast %"class.cc::TextureBacking"* %71 to void (%class.SkRefCntBase*)***
  %81 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %80, align 8
  %82 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %81, i64 2
  %83 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %82, align 8
  tail call void %83(%class.SkRefCntBase* nonnull %79) #11
  br label %84

84:                                               ; preds = %64, %74, %78
  %85 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 6
  %86 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 6
  %87 = bitcast i32* %85 to i8*
  %88 = bitcast i32* %86 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 8 %88, i64 28, i1 false)
  %89 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 14
  %90 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 14
  %91 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %90, i64 0, i32 0
  %92 = bitcast %class.sk_sp* %90 to i64*
  %93 = load i64, i64* %92, align 8
  store %class.SkImage* null, %class.SkImage** %91, align 8
  %94 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %89, i64 0, i32 0
  %95 = load %class.SkImage*, %class.SkImage** %94, align 8
  %96 = bitcast %class.sk_sp* %89 to i64*
  store i64 %93, i64* %96, align 8
  %97 = icmp eq %class.SkImage* %95, null
  br i1 %97, label %108, label %98

98:                                               ; preds = %84
  %99 = getelementptr inbounds %class.SkImage, %class.SkImage* %95, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = atomicrmw add i32* %99, i32 -1 acq_rel
  %101 = icmp eq i32 %100, 1
  br i1 %101, label %102, label %108

102:                                              ; preds = %98
  %103 = bitcast %class.SkImage* %95 to %class.SkRefCntBase*
  %104 = bitcast %class.SkImage* %95 to void (%class.SkRefCntBase*)***
  %105 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %104, align 8
  %106 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %105, i64 2
  %107 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %106, align 8
  tail call void %107(%class.SkRefCntBase* nonnull %103) #11
  br label %108

108:                                              ; preds = %84, %98, %102
  %109 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 15
  %110 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 15
  %111 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %110, i64 0, i32 0
  %112 = bitcast %class.scoped_refptr* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.cc::PaintWorkletInput"* null, %"class.cc::PaintWorkletInput"** %111, align 8
  %114 = bitcast %class.scoped_refptr* %109 to i64*
  %115 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %109, i64 0, i32 0
  %116 = load %"class.cc::PaintWorkletInput"*, %"class.cc::PaintWorkletInput"** %115, align 8
  store i64 %113, i64* %114, align 8
  %117 = icmp eq %"class.cc::PaintWorkletInput"* %116, null
  br i1 %117, label %130, label %118

118:                                              ; preds = %108
  %119 = getelementptr inbounds %"class.cc::PaintWorkletInput", %"class.cc::PaintWorkletInput"* %116, i64 0, i32 1
  %120 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %119, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = atomicrmw sub i32* %120, i32 1 acq_rel
  %122 = icmp eq i32 %121, 1
  br i1 %122, label %123, label %130

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %119, i64 -2
  %125 = bitcast %"class.base::RefCountedThreadSafe"* %124 to %"class.cc::PaintWorkletInput"*
  %126 = bitcast %"class.base::RefCountedThreadSafe"* %124 to void (%"class.cc::PaintWorkletInput"*)***
  %127 = load void (%"class.cc::PaintWorkletInput"*)**, void (%"class.cc::PaintWorkletInput"*)*** %126, align 8
  %128 = getelementptr inbounds void (%"class.cc::PaintWorkletInput"*)*, void (%"class.cc::PaintWorkletInput"*)** %127, i64 4
  %129 = load void (%"class.cc::PaintWorkletInput"*)*, void (%"class.cc::PaintWorkletInput"*)** %128, align 8
  tail call void %129(%"class.cc::PaintWorkletInput"* nonnull %125) #11
  br label %130

130:                                              ; preds = %108, %118, %123
  ret %"class.cc::PaintImage"* %0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2cc10PaintImageeqERKS0_(%"class.cc::PaintImage"* nocapture readonly, %"class.cc::PaintImage"* nocapture readonly dereferenceable(104)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 0, i32 0
  %4 = load %class.SkImage*, %class.SkImage** %3, align 8
  %5 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 0, i32 0
  %6 = load %class.SkImage*, %class.SkImage** %5, align 8
  %7 = icmp eq %class.SkImage* %4, %6
  br i1 %7, label %8, label %86

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 1, i32 0
  %10 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %9, align 8
  %11 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 1, i32 0
  %12 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %11, align 8
  %13 = icmp eq %"class.cc::PaintOpBuffer"* %10, %12
  br i1 %13, label %14, label %86

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 2, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 2, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %16, %18
  br i1 %19, label %20, label %86

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 2, i32 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 2, i32 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %22, %24
  br i1 %25, label %26, label %86

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 2, i32 1, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 2, i32 1, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %28, %30
  br i1 %31, label %32, label %86

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 2, i32 1, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 2, i32 1, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %34, %36
  br i1 %37, label %38, label %86

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 3
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %40, %42
  br i1 %43, label %44, label %86

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 4, i32 0
  %46 = load %"class.cc::PaintImageGenerator"*, %"class.cc::PaintImageGenerator"** %45, align 8
  %47 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 4, i32 0
  %48 = load %"class.cc::PaintImageGenerator"*, %"class.cc::PaintImageGenerator"** %47, align 8
  %49 = icmp eq %"class.cc::PaintImageGenerator"* %46, %48
  br i1 %49, label %50, label %86

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 6
  %52 = load i32, i32* %51, align 8
  %53 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 6
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %52, %54
  br i1 %55, label %56, label %86

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 7
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 7
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %58, %60
  br i1 %61, label %62, label %86

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 8
  %64 = load i32, i32* %63, align 8
  %65 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 8
  %66 = load i32, i32* %65, align 8
  %67 = icmp eq i32 %64, %66
  br i1 %67, label %68, label %86

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 10
  %70 = load i8, i8* %69, align 8, !range !2
  %71 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 10
  %72 = load i8, i8* %71, align 8, !range !2
  %73 = icmp eq i8 %70, %72
  br i1 %73, label %74, label %86

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 5, i32 0
  %76 = load %"class.cc::TextureBacking"*, %"class.cc::TextureBacking"** %75, align 8
  %77 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 5, i32 0
  %78 = load %"class.cc::TextureBacking"*, %"class.cc::TextureBacking"** %77, align 8
  %79 = icmp eq %"class.cc::TextureBacking"* %76, %78
  br i1 %79, label %80, label %86

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 15, i32 0
  %82 = load %"class.cc::PaintWorkletInput"*, %"class.cc::PaintWorkletInput"** %81, align 8
  %83 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 15, i32 0
  %84 = load %"class.cc::PaintWorkletInput"*, %"class.cc::PaintWorkletInput"** %83, align 8
  %85 = icmp eq %"class.cc::PaintWorkletInput"* %82, %84
  br label %86

86:                                               ; preds = %74, %44, %32, %8, %2, %14, %26, %20, %80, %68, %62, %56, %50, %38
  %87 = phi i1 [ false, %2 ], [ false, %8 ], [ false, %32 ], [ false, %38 ], [ false, %44 ], [ false, %50 ], [ false, %56 ], [ false, %62 ], [ false, %68 ], [ false, %74 ], [ %85, %80 ], [ false, %20 ], [ false, %26 ], [ false, %14 ]
  ret i1 %87
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2cc10PaintImage15GetConservativeENS0_12DecodingModeES1_(i32, i32) local_unnamed_addr #3 align 2 {
  %3 = icmp eq i32 %0, %1
  br i1 %3, label %13, label %4

4:                                                ; preds = %2
  %5 = icmp eq i32 %0, 1
  %6 = icmp eq i32 %1, 1
  %7 = or i1 %5, %6
  br i1 %7, label %13, label %8

8:                                                ; preds = %4
  %9 = icmp eq i32 %0, 0
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %9, %10
  %12 = select i1 %11, i32 0, i32 2
  br label %13

13:                                               ; preds = %8, %4, %2
  %14 = phi i32 [ %0, %2 ], [ 1, %4 ], [ %12, %8 ]
  ret i32 %14
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN2cc10PaintImage9GetNextIdEv() local_unnamed_addr #5 align 2 {
  %1 = atomicrmw add i32* getelementptr inbounds ({ { { i32 } } }, { { { i32 } } }* @_ZN2cc12_GLOBAL__N_115g_next_image_idE, i64 0, i32 0, i32 0, i32 0), i32 1 monotonic
  ret i32 %1
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN2cc10PaintImage16GetNextContentIdEv() local_unnamed_addr #5 align 2 {
  %1 = atomicrmw add i32* getelementptr inbounds ({ { { i32 } } }, { { { i32 } } }* @_ZN2cc12_GLOBAL__N_123g_next_image_content_idE, i64 0, i32 0, i32 0, i32 0), i32 1 monotonic
  ret i32 %1
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN2cc10PaintImage24GetNextGeneratorClientIdEv() local_unnamed_addr #5 align 2 {
  %1 = atomicrmw add i32* getelementptr inbounds ({ { { i32 } } }, { { { i32 } } }* @_ZN2cc12_GLOBAL__N_126g_next_generator_client_idE, i64 0, i32 0, i32 0, i32 0), i32 1 monotonic
  %2 = add nsw i32 %1, 1
  ret i32 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10PaintImage16CreateFromBitmapE8SkBitmap(%"class.cc::PaintImage"* noalias sret, %class.SkBitmap*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.cc::PaintImageBuilder", align 8
  %4 = alloca %class.sk_sp, align 8
  %5 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %16, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp slt i32 %10, 1
  br i1 %11, label %16, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 0, i32 0
  %14 = load %class.SkPixelRef*, %class.SkPixelRef** %13, align 8
  %15 = icmp eq %class.SkPixelRef* %14, null
  br i1 %15, label %16, label %30

16:                                               ; preds = %2, %8, %12
  %17 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 3
  %18 = bitcast %"class.cc::PaintImage"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 32, i1 false) #11
  store i32 -1, i32* %17, align 8
  %19 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 4, i32 0
  %20 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 7
  %21 = bitcast %"class.cc::PaintImageGenerator"** %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 20, i1 false) #11
  store i32 2, i32* %20, align 4
  %22 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 8
  store i32 0, i32* %22, align 8
  %23 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 9
  store i32 -2, i32* %23, align 4
  %24 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 10
  store i8 0, i8* %24, align 8
  %25 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 11
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 12
  store i32 0, i32* %26, align 4
  %27 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 13
  store i32 1, i32* %27, align 8
  %28 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 14, i32 0
  %29 = bitcast %class.SkImage** %28 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #11
  br label %67

30:                                               ; preds = %12
  %31 = bitcast %"class.cc::PaintImageBuilder"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %31) #11
  call void @_ZN2cc17PaintImageBuilder11WithDefaultEv(%"class.cc::PaintImageBuilder"* nonnull sret %3) #11
  %32 = atomicrmw add i32* getelementptr inbounds ({ { { i32 } } }, { { { i32 } } }* @_ZN2cc12_GLOBAL__N_115g_next_image_idE, i64 0, i32 0, i32 0, i32 0), i32 1 monotonic
  %33 = getelementptr inbounds %"class.cc::PaintImageBuilder", %"class.cc::PaintImageBuilder"* %3, i64 0, i32 0, i32 6
  store i32 %32, i32* %33, align 8
  call void @_ZN7SkImage14MakeFromBitmapERK8SkBitmap(%class.sk_sp* nonnull sret %4, %class.SkBitmap* dereferenceable(56) %1) #11
  %34 = atomicrmw add i32* getelementptr inbounds ({ { { i32 } } }, { { { i32 } } }* @_ZN2cc12_GLOBAL__N_123g_next_image_content_idE, i64 0, i32 0, i32 0, i32 0), i32 1 monotonic
  %35 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  %36 = bitcast %class.sk_sp* %4 to i64*
  %37 = load i64, i64* %36, align 8
  store %class.SkImage* null, %class.SkImage** %35, align 8
  %38 = getelementptr inbounds %"class.cc::PaintImageBuilder", %"class.cc::PaintImageBuilder"* %3, i64 0, i32 0, i32 0, i32 0
  %39 = load %class.SkImage*, %class.SkImage** %38, align 8
  %40 = bitcast %"class.cc::PaintImageBuilder"* %3 to i64*
  store i64 %37, i64* %40, align 8
  %41 = icmp eq %class.SkImage* %39, null
  br i1 %41, label %52, label %42

42:                                               ; preds = %30
  %43 = getelementptr inbounds %class.SkImage, %class.SkImage* %39, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = atomicrmw add i32* %43, i32 -1 acq_rel
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %52

46:                                               ; preds = %42
  %47 = bitcast %class.SkImage* %39 to %class.SkRefCntBase*
  %48 = bitcast %class.SkImage* %39 to void (%class.SkRefCntBase*)***
  %49 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %48, align 8
  %50 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %49, i64 2
  %51 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %50, align 8
  call void %51(%class.SkRefCntBase* nonnull %47) #11
  br label %52

52:                                               ; preds = %30, %42, %46
  %53 = getelementptr inbounds %"class.cc::PaintImageBuilder", %"class.cc::PaintImageBuilder"* %3, i64 0, i32 0, i32 3
  store i32 %34, i32* %53, align 8
  call void @_ZN2cc17PaintImageBuilder14TakePaintImageEv(%"class.cc::PaintImage"* sret %0, %"class.cc::PaintImageBuilder"* nonnull %3) #11
  %54 = load %class.SkImage*, %class.SkImage** %35, align 8
  %55 = icmp eq %class.SkImage* %54, null
  br i1 %55, label %66, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %class.SkImage, %class.SkImage* %54, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = atomicrmw add i32* %57, i32 -1 acq_rel
  %59 = icmp eq i32 %58, 1
  br i1 %59, label %60, label %66

60:                                               ; preds = %56
  %61 = bitcast %class.SkImage* %54 to %class.SkRefCntBase*
  %62 = bitcast %class.SkImage* %54 to void (%class.SkRefCntBase*)***
  %63 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %62, align 8
  %64 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %63, i64 2
  %65 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %64, align 8
  call void %65(%class.SkRefCntBase* nonnull %61) #11
  br label %66

66:                                               ; preds = %52, %56, %60
  call void @_ZN2cc17PaintImageBuilderD1Ev(%"class.cc::PaintImageBuilder"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %31) #11
  br label %67

67:                                               ; preds = %66, %16
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN2cc17PaintImageBuilder11WithDefaultEv(%"class.cc::PaintImageBuilder"* sret) local_unnamed_addr #6

declare void @_ZN7SkImage14MakeFromBitmapERK8SkBitmap(%class.sk_sp* sret, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #6

declare void @_ZN2cc17PaintImageBuilder14TakePaintImageEv(%"class.cc::PaintImage"* sret, %"class.cc::PaintImageBuilder"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN2cc17PaintImageBuilderD1Ev(%"class.cc::PaintImageBuilder"*) unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(8) %class.sk_sp* @_ZNK2cc10PaintImage10GetSkImageEv(%"class.cc::PaintImage"* readnone) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 14
  ret %class.sk_sp* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc10PaintImage12GetSwSkImageEv(%class.sk_sp* noalias sret, %"class.cc::PaintImage"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 5, i32 0
  %4 = load %"class.cc::TextureBacking"*, %"class.cc::TextureBacking"** %3, align 8
  %5 = icmp eq %"class.cc::TextureBacking"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.cc::TextureBacking"* %4 to void (%class.sk_sp*, %"class.cc::TextureBacking"*)***
  %8 = load void (%class.sk_sp*, %"class.cc::TextureBacking"*)**, void (%class.sk_sp*, %"class.cc::TextureBacking"*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.sk_sp*, %"class.cc::TextureBacking"*)*, void (%class.sk_sp*, %"class.cc::TextureBacking"*)** %8, i64 6
  %10 = load void (%class.sk_sp*, %"class.cc::TextureBacking"*)*, void (%class.sk_sp*, %"class.cc::TextureBacking"*)** %9, align 8
  tail call void %10(%class.sk_sp* sret %0, %"class.cc::TextureBacking"* nonnull %4) #11
  br label %30

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 14, i32 0
  %13 = load %class.SkImage*, %class.SkImage** %12, align 8
  %14 = icmp eq %class.SkImage* %13, null
  br i1 %14, label %15, label %17

15:                                               ; preds = %11
  %16 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  br label %27

17:                                               ; preds = %11
  %18 = tail call zeroext i1 @_ZNK7SkImage15isTextureBackedEv(%class.SkImage* nonnull %13) #11
  %19 = load %class.SkImage*, %class.SkImage** %12, align 8
  br i1 %18, label %20, label %21

20:                                               ; preds = %17
  tail call void @_ZNK7SkImage19makeNonTextureImageEv(%class.sk_sp* sret %0, %class.SkImage* %19) #11
  br label %30

21:                                               ; preds = %17
  %22 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  %23 = icmp eq %class.SkImage* %19, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds %class.SkImage, %class.SkImage* %19, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw add i32* %25, i32 1 monotonic
  br label %27

27:                                               ; preds = %15, %21, %24
  %28 = phi %class.SkImage** [ %16, %15 ], [ %22, %21 ], [ %22, %24 ]
  %29 = phi %class.SkImage* [ null, %15 ], [ null, %21 ], [ %19, %24 ]
  store %class.SkImage* %29, %class.SkImage** %28, align 8
  br label %30

30:                                               ; preds = %27, %20, %6
  ret void
}

declare zeroext i1 @_ZNK7SkImage15isTextureBackedEv(%class.SkImage*) local_unnamed_addr #6

declare void @_ZNK7SkImage19makeNonTextureImageEv(%class.sk_sp* sret, %class.SkImage*) local_unnamed_addr #6

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK2cc10PaintImage21GetAcceleratedSkImageEv(%class.sk_sp* noalias nocapture sret, %"class.cc::PaintImage"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 14, i32 0
  %5 = load %class.SkImage*, %class.SkImage** %4, align 8
  %6 = icmp eq %class.SkImage* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkImage, %class.SkImage* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  br label %10

10:                                               ; preds = %2, %7
  store %class.SkImage* %5, %class.SkImage** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc10PaintImage10readPixelsERK11SkImageInfoPvmii(%"class.cc::PaintImage"* nocapture readonly, %struct.SkImageInfo* dereferenceable(24), i8*, i64, i32, i32) local_unnamed_addr #1 align 2 {
  %7 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 5, i32 0
  %8 = load %"class.cc::TextureBacking"*, %"class.cc::TextureBacking"** %7, align 8
  %9 = icmp eq %"class.cc::TextureBacking"* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %6
  %11 = bitcast %"class.cc::TextureBacking"* %8 to i1 (%"class.cc::TextureBacking"*, %struct.SkImageInfo*, i8*, i64, i32, i32)***
  %12 = load i1 (%"class.cc::TextureBacking"*, %struct.SkImageInfo*, i8*, i64, i32, i32)**, i1 (%"class.cc::TextureBacking"*, %struct.SkImageInfo*, i8*, i64, i32, i32)*** %11, align 8
  %13 = getelementptr inbounds i1 (%"class.cc::TextureBacking"*, %struct.SkImageInfo*, i8*, i64, i32, i32)*, i1 (%"class.cc::TextureBacking"*, %struct.SkImageInfo*, i8*, i64, i32, i32)** %12, i64 7
  %14 = load i1 (%"class.cc::TextureBacking"*, %struct.SkImageInfo*, i8*, i64, i32, i32)*, i1 (%"class.cc::TextureBacking"*, %struct.SkImageInfo*, i8*, i64, i32, i32)** %13, align 8
  %15 = tail call zeroext i1 %14(%"class.cc::TextureBacking"* nonnull %8, %struct.SkImageInfo* dereferenceable(24) %1, i8* %2, i64 %3, i32 %4, i32 %5) #11
  br label %22

16:                                               ; preds = %6
  %17 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 14, i32 0
  %18 = load %class.SkImage*, %class.SkImage** %17, align 8
  %19 = icmp eq %class.SkImage* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %16
  %21 = tail call zeroext i1 @_ZNK7SkImage10readPixelsERK11SkImageInfoPvmiiNS_11CachingHintE(%class.SkImage* nonnull %18, %struct.SkImageInfo* dereferenceable(24) %1, i8* %2, i64 %3, i32 %4, i32 %5, i32 0) #11
  br label %22

22:                                               ; preds = %16, %20, %10
  %23 = phi i1 [ %15, %10 ], [ %21, %20 ], [ false, %16 ]
  ret i1 %23
}

declare zeroext i1 @_ZNK7SkImage10readPixelsERK11SkImageInfoPvmiiNS_11CachingHintE(%class.SkImage*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, i32, i32, i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc10PaintImage14GetSkImageInfoEv(%struct.SkImageInfo* noalias nocapture sret, %"class.cc::PaintImage"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 4, i32 0
  %4 = load %"class.cc::PaintImageGenerator"*, %"class.cc::PaintImageGenerator"** %3, align 8
  %5 = icmp eq %"class.cc::PaintImageGenerator"* %4, null
  br i1 %5, label %20, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.cc::PaintImageGenerator", %"class.cc::PaintImageGenerator"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %class.SkColorSpace*, %class.SkColorSpace** %8, align 8
  %10 = icmp eq %class.SkColorSpace* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw add i32* %12, i32 1 monotonic
  br label %14

14:                                               ; preds = %6, %11
  store %class.SkColorSpace* %9, %class.SkColorSpace** %7, align 8
  %15 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.cc::PaintImageGenerator", %"class.cc::PaintImageGenerator"* %4, i64 0, i32 1, i32 0, i32 1
  %17 = bitcast i32* %16 to <2 x i64>*
  %18 = load <2 x i64>, <2 x i64>* %17, align 8
  %19 = bitcast i32* %15 to <2 x i64>*
  store <2 x i64> %18, <2 x i64>* %19, align 8
  br label %63

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 5, i32 0
  %22 = load %"class.cc::TextureBacking"*, %"class.cc::TextureBacking"** %21, align 8
  %23 = icmp eq %"class.cc::TextureBacking"* %22, null
  br i1 %23, label %43, label %24

24:                                               ; preds = %20
  %25 = bitcast %"class.cc::TextureBacking"* %22 to %struct.SkImageInfo* (%"class.cc::TextureBacking"*)***
  %26 = load %struct.SkImageInfo* (%"class.cc::TextureBacking"*)**, %struct.SkImageInfo* (%"class.cc::TextureBacking"*)*** %25, align 8
  %27 = getelementptr inbounds %struct.SkImageInfo* (%"class.cc::TextureBacking"*)*, %struct.SkImageInfo* (%"class.cc::TextureBacking"*)** %26, i64 3
  %28 = load %struct.SkImageInfo* (%"class.cc::TextureBacking"*)*, %struct.SkImageInfo* (%"class.cc::TextureBacking"*)** %27, align 8
  %29 = tail call dereferenceable(24) %struct.SkImageInfo* %28(%"class.cc::TextureBacking"* nonnull %22) #11
  %30 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %29, i64 0, i32 0, i32 0, i32 0
  %32 = load %class.SkColorSpace*, %class.SkColorSpace** %31, align 8
  %33 = icmp eq %class.SkColorSpace* %32, null
  br i1 %33, label %37, label %34

34:                                               ; preds = %24
  %35 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 1 monotonic
  br label %37

37:                                               ; preds = %24, %34
  store %class.SkColorSpace* %32, %class.SkColorSpace** %30, align 8
  %38 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 0, i32 1
  %39 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %29, i64 0, i32 0, i32 1
  %40 = bitcast i32* %39 to <2 x i64>*
  %41 = load <2 x i64>, <2 x i64>* %40, align 8
  %42 = bitcast i32* %38 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %42, align 8
  br label %63

43:                                               ; preds = %20
  %44 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 14, i32 0
  %45 = load %class.SkImage*, %class.SkImage** %44, align 8
  %46 = icmp eq %class.SkImage* %45, null
  br i1 %46, label %61, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 0, i32 0, i32 0
  %49 = getelementptr inbounds %class.SkImage, %class.SkImage* %45, i64 0, i32 2, i32 0, i32 0, i32 0
  %50 = load %class.SkColorSpace*, %class.SkColorSpace** %49, align 8
  %51 = icmp eq %class.SkColorSpace* %50, null
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = atomicrmw add i32* %53, i32 1 monotonic
  br label %55

55:                                               ; preds = %47, %52
  store %class.SkColorSpace* %50, %class.SkColorSpace** %48, align 8
  %56 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 0, i32 1
  %57 = getelementptr inbounds %class.SkImage, %class.SkImage* %45, i64 0, i32 2, i32 0, i32 1
  %58 = bitcast i32* %57 to <2 x i64>*
  %59 = load <2 x i64>, <2 x i64>* %58, align 8
  %60 = bitcast i32* %56 to <2 x i64>*
  store <2 x i64> %59, <2 x i64>* %60, align 8
  br label %63

61:                                               ; preds = %43
  %62 = bitcast %struct.SkImageInfo* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 24, i1 false) #11, !alias.scope !3
  br label %63

63:                                               ; preds = %61, %55, %37, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK2cc10PaintImage10GetMailboxEv(%"class.cc::PaintImage"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 5, i32 0
  %3 = load %"class.cc::TextureBacking"*, %"class.cc::TextureBacking"** %2, align 8
  %4 = bitcast %"class.cc::TextureBacking"* %3 to { i64, i64 } (%"class.cc::TextureBacking"*)***
  %5 = load { i64, i64 } (%"class.cc::TextureBacking"*)**, { i64, i64 } (%"class.cc::TextureBacking"*)*** %4, align 8
  %6 = getelementptr inbounds { i64, i64 } (%"class.cc::TextureBacking"*)*, { i64, i64 } (%"class.cc::TextureBacking"*)** %5, i64 4
  %7 = load { i64, i64 } (%"class.cc::TextureBacking"*)*, { i64, i64 } (%"class.cc::TextureBacking"*)** %6, align 8
  %8 = tail call { i64, i64 } %7(%"class.cc::TextureBacking"* %3) #11
  ret { i64, i64 } %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10PaintImage13CreateSkImageEv(%"class.cc::PaintImage"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %class.sk_sp.14, align 8
  %3 = alloca %class.sk_sp, align 8
  %4 = alloca %class.sk_sp.27, align 8
  %5 = alloca %class.sk_sp.12, align 8
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = bitcast { <2 x float>, <2 x float> }* %6 to %struct.SkRect*
  %8 = alloca %"class.base::RepeatingCallback", align 8
  %9 = alloca i64, align 8
  %10 = bitcast i64* %9 to %struct.SkISize*
  %11 = alloca %class.sk_sp.6, align 8
  %12 = alloca %class.sk_sp, align 8
  %13 = alloca %class.sk_sp, align 8
  %14 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 0, i32 0
  %15 = load %class.SkImage*, %class.SkImage** %14, align 8
  %16 = icmp eq %class.SkImage* %15, null
  br i1 %16, label %33, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %class.SkImage, %class.SkImage* %15, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 1 monotonic
  %20 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 14, i32 0
  %21 = load %class.SkImage*, %class.SkImage** %20, align 8
  store %class.SkImage* %15, %class.SkImage** %20, align 8
  %22 = icmp eq %class.SkImage* %21, null
  br i1 %22, label %229, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %class.SkImage, %class.SkImage* %21, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 -1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %229

27:                                               ; preds = %23
  %28 = bitcast %class.SkImage* %21 to %class.SkRefCntBase*
  %29 = bitcast %class.SkImage* %21 to void (%class.SkRefCntBase*)***
  %30 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %29, align 8
  %31 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %30, i64 2
  %32 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %31, align 8
  tail call void %32(%class.SkRefCntBase* nonnull %28) #11
  br label %229

33:                                               ; preds = %1
  %34 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 1, i32 0
  %35 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %34, align 8
  %36 = icmp eq %"class.cc::PaintOpBuffer"* %35, null
  br i1 %36, label %129, label %37

37:                                               ; preds = %33
  %38 = bitcast %class.sk_sp* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #11
  %39 = getelementptr inbounds %class.sk_sp.12, %class.sk_sp.12* %5, i64 0, i32 0
  %40 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %35, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw add i32* %40, i32 1 monotonic
  store %"class.cc::PaintOpBuffer"* %35, %"class.cc::PaintOpBuffer"** %39, align 8
  %42 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #11
  %43 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 2
  %44 = tail call { <2 x float>, <2 x float> } @_ZN3gfx12RectToSkRectERKNS_4RectE(%"class.gfx::Rect"* dereferenceable(16) %43) #11
  %45 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  %46 = extractvalue { <2 x float>, <2 x float> } %44, 0
  store <2 x float> %46, <2 x float>* %45, align 8
  %47 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  %48 = extractvalue { <2 x float>, <2 x float> } %44, 1
  store <2 x float> %48, <2 x float>* %47, align 8
  %49 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %49, align 8
  call void @_ZN2cc11ToSkPictureE5sk_spINS_13PaintOpBufferEERK6SkRectPNS_13ImageProviderEN4base17RepeatingCallbackIFvP8SkCanvasjEEE(%class.sk_sp.27* nonnull sret %4, %class.sk_sp.12* nonnull %5, %struct.SkRect* nonnull dereferenceable(16) %7, %"class.cc::ImageProvider"* null, %"class.base::RepeatingCallback"* nonnull %8) #11
  %50 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #11
  %51 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 2, i32 1, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 2, i32 1, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i64
  %56 = shl nuw i64 %55, 32
  %57 = zext i32 %52 to i64
  %58 = or i64 %56, %57
  store i64 %58, i64* %9, align 8
  call void @_ZN12SkColorSpace8MakeSRGBEv(%class.sk_sp.6* nonnull sret %11) #11
  call void @_ZN7SkImage15MakeFromPictureE5sk_spI9SkPictureERK7SkISizePK8SkMatrixPK7SkPaintNS_8BitDepthES0_I12SkColorSpaceE(%class.sk_sp* nonnull sret %3, %class.sk_sp.27* nonnull %4, %struct.SkISize* nonnull dereferenceable(8) %10, %class.SkMatrix* null, %class.SkPaint* null, i32 0, %class.sk_sp.6* nonnull %11) #11
  %59 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 14
  %60 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  %61 = bitcast %class.sk_sp* %3 to i64*
  %62 = load i64, i64* %61, align 8
  store %class.SkImage* null, %class.SkImage** %60, align 8
  %63 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %59, i64 0, i32 0
  %64 = load %class.SkImage*, %class.SkImage** %63, align 8
  %65 = bitcast %class.sk_sp* %59 to i64*
  store i64 %62, i64* %65, align 8
  %66 = icmp eq %class.SkImage* %64, null
  br i1 %66, label %77, label %67

67:                                               ; preds = %37
  %68 = getelementptr inbounds %class.SkImage, %class.SkImage* %64, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = atomicrmw add i32* %68, i32 -1 acq_rel
  %70 = icmp eq i32 %69, 1
  br i1 %70, label %71, label %77

71:                                               ; preds = %67
  %72 = bitcast %class.SkImage* %64 to %class.SkRefCntBase*
  %73 = bitcast %class.SkImage* %64 to void (%class.SkRefCntBase*)***
  %74 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %73, align 8
  %75 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %74, i64 2
  %76 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %75, align 8
  call void %76(%class.SkRefCntBase* nonnull %72) #11
  br label %77

77:                                               ; preds = %37, %67, %71
  %78 = load %class.SkImage*, %class.SkImage** %60, align 8
  %79 = icmp eq %class.SkImage* %78, null
  br i1 %79, label %90, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %class.SkImage, %class.SkImage* %78, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = atomicrmw add i32* %81, i32 -1 acq_rel
  %83 = icmp eq i32 %82, 1
  br i1 %83, label %84, label %90

84:                                               ; preds = %80
  %85 = bitcast %class.SkImage* %78 to %class.SkRefCntBase*
  %86 = bitcast %class.SkImage* %78 to void (%class.SkRefCntBase*)***
  %87 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %86, align 8
  %88 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %87, i64 2
  %89 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %88, align 8
  call void %89(%class.SkRefCntBase* nonnull %85) #11
  br label %90

90:                                               ; preds = %77, %80, %84
  %91 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %11, i64 0, i32 0
  %92 = load %class.SkColorSpace*, %class.SkColorSpace** %91, align 8
  %93 = icmp eq %class.SkColorSpace* %92, null
  br i1 %93, label %100, label %94

94:                                               ; preds = %90
  %95 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %92, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = atomicrmw add i32* %95, i32 -1 acq_rel
  %97 = icmp eq i32 %96, 1
  br i1 %97, label %98, label %100

98:                                               ; preds = %94
  %99 = bitcast %class.SkColorSpace* %92 to i8*
  call void @_ZdlPv(i8* %99) #12
  br label %100

100:                                              ; preds = %90, %94, %98
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #11
  %101 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %4, i64 0, i32 0
  %102 = load %class.SkPicture*, %class.SkPicture** %101, align 8
  %103 = icmp eq %class.SkPicture* %102, null
  br i1 %103, label %114, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %102, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = atomicrmw add i32* %105, i32 -1 acq_rel
  %107 = icmp eq i32 %106, 1
  br i1 %107, label %108, label %114

108:                                              ; preds = %104
  %109 = bitcast %class.SkPicture* %102 to %class.SkRefCntBase*
  %110 = bitcast %class.SkPicture* %102 to void (%class.SkRefCntBase*)***
  %111 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %110, align 8
  %112 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %111, i64 2
  %113 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %112, align 8
  call void %113(%class.SkRefCntBase* nonnull %109) #11
  br label %114

114:                                              ; preds = %100, %104, %108
  %115 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %8, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %115) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #11
  %116 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %39, align 8
  %117 = icmp eq %"class.cc::PaintOpBuffer"* %116, null
  br i1 %117, label %128, label %118

118:                                              ; preds = %114
  %119 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %116, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = atomicrmw add i32* %119, i32 -1 acq_rel
  %121 = icmp eq i32 %120, 1
  br i1 %121, label %122, label %128

122:                                              ; preds = %118
  %123 = bitcast %"class.cc::PaintOpBuffer"* %116 to %class.SkRefCntBase*
  %124 = bitcast %"class.cc::PaintOpBuffer"* %116 to void (%class.SkRefCntBase*)***
  %125 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %124, align 8
  %126 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %125, i64 2
  %127 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %126, align 8
  call void %127(%class.SkRefCntBase* nonnull %123) #11
  br label %128

128:                                              ; preds = %114, %118, %122
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #11
  br label %229

129:                                              ; preds = %33
  %130 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 4, i32 0
  %131 = load %"class.cc::PaintImageGenerator"*, %"class.cc::PaintImageGenerator"** %130, align 8
  %132 = icmp eq %"class.cc::PaintImageGenerator"* %131, null
  br i1 %132, label %187, label %133

133:                                              ; preds = %129
  %134 = bitcast %class.sk_sp* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %134) #11
  %135 = bitcast %class.sk_sp.14* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %135)
  %136 = tail call i8* @_Znwm(i64 64) #12
  %137 = bitcast i8* %136 to %"class.cc::SkiaPaintImageGenerator"*
  %138 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %2, i64 0, i32 0
  %139 = getelementptr inbounds %"class.cc::PaintImageGenerator", %"class.cc::PaintImageGenerator"* %131, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = atomicrmw add i32* %139, i32 1 monotonic
  store %"class.cc::PaintImageGenerator"* %131, %"class.cc::PaintImageGenerator"** %138, align 8
  call void @_ZN2cc23SkiaPaintImageGeneratorC1E5sk_spINS_19PaintImageGeneratorEEmi(%"class.cc::SkiaPaintImageGenerator"* nonnull %137, %class.sk_sp.14* nonnull %2, i64 0, i32 0) #11
  %141 = load %"class.cc::PaintImageGenerator"*, %"class.cc::PaintImageGenerator"** %138, align 8
  %142 = icmp eq %"class.cc::PaintImageGenerator"* %141, null
  br i1 %142, label %153, label %143

143:                                              ; preds = %133
  %144 = getelementptr inbounds %"class.cc::PaintImageGenerator", %"class.cc::PaintImageGenerator"* %141, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = atomicrmw add i32* %144, i32 -1 acq_rel
  %146 = icmp eq i32 %145, 1
  br i1 %146, label %147, label %153

147:                                              ; preds = %143
  %148 = bitcast %"class.cc::PaintImageGenerator"* %141 to %class.SkRefCntBase*
  %149 = bitcast %"class.cc::PaintImageGenerator"* %141 to void (%class.SkRefCntBase*)***
  %150 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %149, align 8
  %151 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %150, i64 2
  %152 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %151, align 8
  call void %152(%class.SkRefCntBase* nonnull %148) #11
  br label %153

153:                                              ; preds = %133, %143, %147
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %135)
  %154 = bitcast i8* %136 to %class.SkImageGenerator*
  call void @_ZN7SkImage17MakeFromGeneratorENSt3__110unique_ptrI16SkImageGeneratorNS0_14default_deleteIS2_EEEE(%class.sk_sp* nonnull sret %12, %class.SkImageGenerator* nonnull %154) #11
  %155 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 14
  %156 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %12, i64 0, i32 0
  %157 = bitcast %class.sk_sp* %12 to i64*
  %158 = load i64, i64* %157, align 8
  store %class.SkImage* null, %class.SkImage** %156, align 8
  %159 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %155, i64 0, i32 0
  %160 = load %class.SkImage*, %class.SkImage** %159, align 8
  %161 = bitcast %class.sk_sp* %155 to i64*
  store i64 %158, i64* %161, align 8
  %162 = icmp eq %class.SkImage* %160, null
  br i1 %162, label %173, label %163

163:                                              ; preds = %153
  %164 = getelementptr inbounds %class.SkImage, %class.SkImage* %160, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = atomicrmw add i32* %164, i32 -1 acq_rel
  %166 = icmp eq i32 %165, 1
  br i1 %166, label %167, label %173

167:                                              ; preds = %163
  %168 = bitcast %class.SkImage* %160 to %class.SkRefCntBase*
  %169 = bitcast %class.SkImage* %160 to void (%class.SkRefCntBase*)***
  %170 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %169, align 8
  %171 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %170, i64 2
  %172 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %171, align 8
  call void %172(%class.SkRefCntBase* nonnull %168) #11
  br label %173

173:                                              ; preds = %153, %163, %167
  %174 = load %class.SkImage*, %class.SkImage** %156, align 8
  %175 = icmp eq %class.SkImage* %174, null
  br i1 %175, label %186, label %176

176:                                              ; preds = %173
  %177 = getelementptr inbounds %class.SkImage, %class.SkImage* %174, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %178 = atomicrmw add i32* %177, i32 -1 acq_rel
  %179 = icmp eq i32 %178, 1
  br i1 %179, label %180, label %186

180:                                              ; preds = %176
  %181 = bitcast %class.SkImage* %174 to %class.SkRefCntBase*
  %182 = bitcast %class.SkImage* %174 to void (%class.SkRefCntBase*)***
  %183 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %182, align 8
  %184 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %183, i64 2
  %185 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %184, align 8
  call void %185(%class.SkRefCntBase* nonnull %181) #11
  br label %186

186:                                              ; preds = %180, %176, %173
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %134) #11
  br label %229

187:                                              ; preds = %129
  %188 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 5, i32 0
  %189 = load %"class.cc::TextureBacking"*, %"class.cc::TextureBacking"** %188, align 8
  %190 = icmp eq %"class.cc::TextureBacking"* %189, null
  br i1 %190, label %229, label %191

191:                                              ; preds = %187
  %192 = bitcast %class.sk_sp* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %192) #11
  %193 = bitcast %"class.cc::TextureBacking"* %189 to void (%class.sk_sp*, %"class.cc::TextureBacking"*)***
  %194 = load void (%class.sk_sp*, %"class.cc::TextureBacking"*)**, void (%class.sk_sp*, %"class.cc::TextureBacking"*)*** %193, align 8
  %195 = getelementptr inbounds void (%class.sk_sp*, %"class.cc::TextureBacking"*)*, void (%class.sk_sp*, %"class.cc::TextureBacking"*)** %194, i64 5
  %196 = load void (%class.sk_sp*, %"class.cc::TextureBacking"*)*, void (%class.sk_sp*, %"class.cc::TextureBacking"*)** %195, align 8
  call void %196(%class.sk_sp* nonnull sret %13, %"class.cc::TextureBacking"* nonnull %189) #11
  %197 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 14
  %198 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %13, i64 0, i32 0
  %199 = bitcast %class.sk_sp* %13 to i64*
  %200 = load i64, i64* %199, align 8
  store %class.SkImage* null, %class.SkImage** %198, align 8
  %201 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %197, i64 0, i32 0
  %202 = load %class.SkImage*, %class.SkImage** %201, align 8
  %203 = bitcast %class.sk_sp* %197 to i64*
  store i64 %200, i64* %203, align 8
  %204 = icmp eq %class.SkImage* %202, null
  br i1 %204, label %215, label %205

205:                                              ; preds = %191
  %206 = getelementptr inbounds %class.SkImage, %class.SkImage* %202, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %207 = atomicrmw add i32* %206, i32 -1 acq_rel
  %208 = icmp eq i32 %207, 1
  br i1 %208, label %209, label %215

209:                                              ; preds = %205
  %210 = bitcast %class.SkImage* %202 to %class.SkRefCntBase*
  %211 = bitcast %class.SkImage* %202 to void (%class.SkRefCntBase*)***
  %212 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %211, align 8
  %213 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %212, i64 2
  %214 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %213, align 8
  call void %214(%class.SkRefCntBase* nonnull %210) #11
  br label %215

215:                                              ; preds = %191, %205, %209
  %216 = load %class.SkImage*, %class.SkImage** %198, align 8
  %217 = icmp eq %class.SkImage* %216, null
  br i1 %217, label %228, label %218

218:                                              ; preds = %215
  %219 = getelementptr inbounds %class.SkImage, %class.SkImage* %216, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %220 = atomicrmw add i32* %219, i32 -1 acq_rel
  %221 = icmp eq i32 %220, 1
  br i1 %221, label %222, label %228

222:                                              ; preds = %218
  %223 = bitcast %class.SkImage* %216 to %class.SkRefCntBase*
  %224 = bitcast %class.SkImage* %216 to void (%class.SkRefCntBase*)***
  %225 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %224, align 8
  %226 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %225, i64 2
  %227 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %226, align 8
  call void %227(%class.SkRefCntBase* nonnull %223) #11
  br label %228

228:                                              ; preds = %215, %218, %222
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %192) #11
  br label %229

229:                                              ; preds = %187, %27, %23, %17, %128, %228, %186
  ret void
}

declare void @_ZN7SkImage15MakeFromPictureE5sk_spI9SkPictureERK7SkISizePK8SkMatrixPK7SkPaintNS_8BitDepthES0_I12SkColorSpaceE(%class.sk_sp* sret, %class.sk_sp.27*, %struct.SkISize* dereferenceable(8), %class.SkMatrix*, %class.SkPaint*, i32, %class.sk_sp.6*) local_unnamed_addr #6

declare void @_ZN2cc11ToSkPictureE5sk_spINS_13PaintOpBufferEERK6SkRectPNS_13ImageProviderEN4base17RepeatingCallbackIFvP8SkCanvasjEEE(%class.sk_sp.27* sret, %class.sk_sp.12*, %struct.SkRect* dereferenceable(16), %"class.cc::ImageProvider"*, %"class.base::RepeatingCallback"*) local_unnamed_addr #6

declare { <2 x float>, <2 x float> } @_ZN3gfx12RectToSkRectERKNS_4RectE(%"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN12SkColorSpace8MakeSRGBEv(%class.sk_sp.6* sret) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #7

declare void @_ZN7SkImage17MakeFromGeneratorENSt3__110unique_ptrI16SkImageGeneratorNS0_14default_deleteIS2_EEEE(%class.sk_sp* sret, %class.SkImageGenerator*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2cc10PaintImage22GetSupportedDecodeSizeERK7SkISize(%"class.cc::PaintImage"* nocapture readonly, %struct.SkISize* dereferenceable(8)) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 4, i32 0
  %4 = load %"class.cc::PaintImageGenerator"*, %"class.cc::PaintImageGenerator"** %3, align 8
  %5 = icmp eq %"class.cc::PaintImageGenerator"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.cc::PaintImageGenerator"* %4 to i64 (%"class.cc::PaintImageGenerator"*, %struct.SkISize*)***
  %8 = load i64 (%"class.cc::PaintImageGenerator"*, %struct.SkISize*)**, i64 (%"class.cc::PaintImageGenerator"*, %struct.SkISize*)*** %7, align 8
  %9 = getelementptr inbounds i64 (%"class.cc::PaintImageGenerator"*, %struct.SkISize*)*, i64 (%"class.cc::PaintImageGenerator"*, %struct.SkISize*)** %8, i64 7
  %10 = load i64 (%"class.cc::PaintImageGenerator"*, %struct.SkISize*)*, i64 (%"class.cc::PaintImageGenerator"*, %struct.SkISize*)** %9, align 8
  %11 = tail call i64 %10(%"class.cc::PaintImageGenerator"* nonnull %4, %struct.SkISize* dereferenceable(8) %1) #11
  br label %141

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 15, i32 0
  %14 = load %"class.cc::PaintWorkletInput"*, %"class.cc::PaintWorkletInput"** %13, align 8
  %15 = icmp eq %"class.cc::PaintWorkletInput"* %14, null
  br i1 %15, label %16, label %47

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 5, i32 0
  %18 = load %"class.cc::TextureBacking"*, %"class.cc::TextureBacking"** %17, align 8, !noalias !6
  %19 = icmp eq %"class.cc::TextureBacking"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.cc::TextureBacking"* %18 to %struct.SkImageInfo* (%"class.cc::TextureBacking"*)***
  %22 = load %struct.SkImageInfo* (%"class.cc::TextureBacking"*)**, %struct.SkImageInfo* (%"class.cc::TextureBacking"*)*** %21, align 8, !noalias !6
  %23 = getelementptr inbounds %struct.SkImageInfo* (%"class.cc::TextureBacking"*)*, %struct.SkImageInfo* (%"class.cc::TextureBacking"*)** %22, i64 3
  %24 = load %struct.SkImageInfo* (%"class.cc::TextureBacking"*)*, %struct.SkImageInfo* (%"class.cc::TextureBacking"*)** %23, align 8, !noalias !6
  %25 = tail call dereferenceable(24) %struct.SkImageInfo* %24(%"class.cc::TextureBacking"* nonnull %18) #11, !noalias !6
  %26 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %25, i64 0, i32 0, i32 0, i32 0
  %27 = load %class.SkColorSpace*, %class.SkColorSpace** %26, align 8, !noalias !6
  %28 = icmp eq %class.SkColorSpace* %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %20
  %30 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw add i32* %30, i32 1 monotonic, !noalias !6
  br label %32

32:                                               ; preds = %29, %20
  %33 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %25, i64 0, i32 1
  br label %54

34:                                               ; preds = %16
  %35 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 14, i32 0
  %36 = load %class.SkImage*, %class.SkImage** %35, align 8, !noalias !6
  %37 = icmp eq %class.SkImage* %36, null
  br i1 %37, label %67, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %class.SkImage, %class.SkImage* %36, i64 0, i32 2, i32 0, i32 0, i32 0
  %40 = load %class.SkColorSpace*, %class.SkColorSpace** %39, align 8, !noalias !6
  %41 = icmp eq %class.SkColorSpace* %40, null
  br i1 %41, label %45, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = atomicrmw add i32* %43, i32 1 monotonic, !noalias !6
  br label %45

45:                                               ; preds = %42, %38
  %46 = getelementptr inbounds %class.SkImage, %class.SkImage* %36, i64 0, i32 2, i32 1
  br label %54

47:                                               ; preds = %12
  %48 = bitcast %"class.cc::PaintWorkletInput"* %14 to <2 x float> (%"class.cc::PaintWorkletInput"*)***
  %49 = load <2 x float> (%"class.cc::PaintWorkletInput"*)**, <2 x float> (%"class.cc::PaintWorkletInput"*)*** %48, align 8
  %50 = load <2 x float> (%"class.cc::PaintWorkletInput"*)*, <2 x float> (%"class.cc::PaintWorkletInput"*)** %49, align 8
  %51 = tail call <2 x float> %50(%"class.cc::PaintWorkletInput"* nonnull %14) #11
  %52 = extractelement <2 x float> %51, i32 0
  %53 = fptosi float %52 to i32
  br label %67

54:                                               ; preds = %45, %32
  %55 = phi %class.SkColorSpace* [ %40, %45 ], [ %27, %32 ]
  %56 = phi %struct.SkISize* [ %46, %45 ], [ %33, %32 ]
  %57 = bitcast %struct.SkISize* %56 to i64*
  %58 = load i64, i64* %57, align 8, !noalias !6
  %59 = trunc i64 %58 to i32
  %60 = icmp eq %class.SkColorSpace* %55, null
  br i1 %60, label %67, label %61

61:                                               ; preds = %54
  %62 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = atomicrmw add i32* %62, i32 -1 acq_rel
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = bitcast %class.SkColorSpace* %55 to i8*
  tail call void @_ZdlPv(i8* %66) #12
  br label %67

67:                                               ; preds = %34, %47, %54, %61, %65
  %68 = phi i32 [ %53, %47 ], [ %59, %54 ], [ %59, %61 ], [ %59, %65 ], [ 0, %34 ]
  %69 = load %"class.cc::PaintWorkletInput"*, %"class.cc::PaintWorkletInput"** %13, align 8
  %70 = icmp eq %"class.cc::PaintWorkletInput"* %69, null
  br i1 %70, label %71, label %114

71:                                               ; preds = %67
  %72 = load %"class.cc::PaintImageGenerator"*, %"class.cc::PaintImageGenerator"** %3, align 8, !noalias !9
  %73 = icmp eq %"class.cc::PaintImageGenerator"* %72, null
  br i1 %73, label %83, label %74

74:                                               ; preds = %71
  %75 = getelementptr inbounds %"class.cc::PaintImageGenerator", %"class.cc::PaintImageGenerator"* %72, i64 0, i32 1, i32 0, i32 0, i32 0
  %76 = load %class.SkColorSpace*, %class.SkColorSpace** %75, align 8, !noalias !9
  %77 = icmp eq %class.SkColorSpace* %76, null
  br i1 %77, label %81, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = atomicrmw add i32* %79, i32 1 monotonic, !noalias !9
  br label %81

81:                                               ; preds = %78, %74
  %82 = getelementptr inbounds %"class.cc::PaintImageGenerator", %"class.cc::PaintImageGenerator"* %72, i64 0, i32 1, i32 1
  br label %121

83:                                               ; preds = %71
  %84 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 5, i32 0
  %85 = load %"class.cc::TextureBacking"*, %"class.cc::TextureBacking"** %84, align 8, !noalias !9
  %86 = icmp eq %"class.cc::TextureBacking"* %85, null
  br i1 %86, label %101, label %87

87:                                               ; preds = %83
  %88 = bitcast %"class.cc::TextureBacking"* %85 to %struct.SkImageInfo* (%"class.cc::TextureBacking"*)***
  %89 = load %struct.SkImageInfo* (%"class.cc::TextureBacking"*)**, %struct.SkImageInfo* (%"class.cc::TextureBacking"*)*** %88, align 8, !noalias !9
  %90 = getelementptr inbounds %struct.SkImageInfo* (%"class.cc::TextureBacking"*)*, %struct.SkImageInfo* (%"class.cc::TextureBacking"*)** %89, i64 3
  %91 = load %struct.SkImageInfo* (%"class.cc::TextureBacking"*)*, %struct.SkImageInfo* (%"class.cc::TextureBacking"*)** %90, align 8, !noalias !9
  %92 = tail call dereferenceable(24) %struct.SkImageInfo* %91(%"class.cc::TextureBacking"* nonnull %85) #11, !noalias !9
  %93 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %92, i64 0, i32 0, i32 0, i32 0
  %94 = load %class.SkColorSpace*, %class.SkColorSpace** %93, align 8, !noalias !9
  %95 = icmp eq %class.SkColorSpace* %94, null
  br i1 %95, label %99, label %96

96:                                               ; preds = %87
  %97 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %94, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = atomicrmw add i32* %97, i32 1 monotonic, !noalias !9
  br label %99

99:                                               ; preds = %96, %87
  %100 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %92, i64 0, i32 1
  br label %121

101:                                              ; preds = %83
  %102 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 14, i32 0
  %103 = load %class.SkImage*, %class.SkImage** %102, align 8, !noalias !9
  %104 = icmp eq %class.SkImage* %103, null
  br i1 %104, label %135, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %class.SkImage, %class.SkImage* %103, i64 0, i32 2, i32 0, i32 0, i32 0
  %107 = load %class.SkColorSpace*, %class.SkColorSpace** %106, align 8, !noalias !9
  %108 = icmp eq %class.SkColorSpace* %107, null
  br i1 %108, label %112, label %109

109:                                              ; preds = %105
  %110 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %107, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = atomicrmw add i32* %110, i32 1 monotonic, !noalias !9
  br label %112

112:                                              ; preds = %109, %105
  %113 = getelementptr inbounds %class.SkImage, %class.SkImage* %103, i64 0, i32 2, i32 1
  br label %121

114:                                              ; preds = %67
  %115 = bitcast %"class.cc::PaintWorkletInput"* %69 to <2 x float> (%"class.cc::PaintWorkletInput"*)***
  %116 = load <2 x float> (%"class.cc::PaintWorkletInput"*)**, <2 x float> (%"class.cc::PaintWorkletInput"*)*** %115, align 8
  %117 = load <2 x float> (%"class.cc::PaintWorkletInput"*)*, <2 x float> (%"class.cc::PaintWorkletInput"*)** %116, align 8
  %118 = tail call <2 x float> %117(%"class.cc::PaintWorkletInput"* nonnull %69) #11
  %119 = extractelement <2 x float> %118, i32 1
  %120 = fptosi float %119 to i32
  br label %135

121:                                              ; preds = %112, %99, %81
  %122 = phi %class.SkColorSpace* [ %107, %112 ], [ %94, %99 ], [ %76, %81 ]
  %123 = phi %struct.SkISize* [ %113, %112 ], [ %100, %99 ], [ %82, %81 ]
  %124 = bitcast %struct.SkISize* %123 to i64*
  %125 = load i64, i64* %124, align 8, !noalias !9
  %126 = lshr i64 %125, 32
  %127 = trunc i64 %126 to i32
  %128 = icmp eq %class.SkColorSpace* %122, null
  br i1 %128, label %135, label %129

129:                                              ; preds = %121
  %130 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %122, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = atomicrmw add i32* %130, i32 -1 acq_rel
  %132 = icmp eq i32 %131, 1
  br i1 %132, label %133, label %135

133:                                              ; preds = %129
  %134 = bitcast %class.SkColorSpace* %122 to i8*
  tail call void @_ZdlPv(i8* %134) #12
  br label %135

135:                                              ; preds = %101, %114, %121, %129, %133
  %136 = phi i32 [ %120, %114 ], [ %127, %121 ], [ %127, %129 ], [ %127, %133 ], [ 0, %101 ]
  %137 = zext i32 %136 to i64
  %138 = shl nuw i64 %137, 32
  %139 = zext i32 %68 to i64
  %140 = or i64 %138, %139
  br label %141

141:                                              ; preds = %135, %6
  %142 = phi i64 [ %11, %6 ], [ %140, %135 ]
  ret i64 %142
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2cc10PaintImage5widthEv(%"class.cc::PaintImage"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 15, i32 0
  %3 = load %"class.cc::PaintWorkletInput"*, %"class.cc::PaintWorkletInput"** %2, align 8
  %4 = icmp eq %"class.cc::PaintWorkletInput"* %3, null
  br i1 %4, label %5, label %49

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 4, i32 0
  %7 = load %"class.cc::PaintImageGenerator"*, %"class.cc::PaintImageGenerator"** %6, align 8, !noalias !12
  %8 = icmp eq %"class.cc::PaintImageGenerator"* %7, null
  br i1 %8, label %18, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.cc::PaintImageGenerator", %"class.cc::PaintImageGenerator"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %class.SkColorSpace*, %class.SkColorSpace** %10, align 8, !noalias !12
  %12 = icmp eq %class.SkColorSpace* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw add i32* %14, i32 1 monotonic, !noalias !12
  br label %16

16:                                               ; preds = %13, %9
  %17 = getelementptr inbounds %"class.cc::PaintImageGenerator", %"class.cc::PaintImageGenerator"* %7, i64 0, i32 1, i32 1
  br label %56

18:                                               ; preds = %5
  %19 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 5, i32 0
  %20 = load %"class.cc::TextureBacking"*, %"class.cc::TextureBacking"** %19, align 8, !noalias !12
  %21 = icmp eq %"class.cc::TextureBacking"* %20, null
  br i1 %21, label %36, label %22

22:                                               ; preds = %18
  %23 = bitcast %"class.cc::TextureBacking"* %20 to %struct.SkImageInfo* (%"class.cc::TextureBacking"*)***
  %24 = load %struct.SkImageInfo* (%"class.cc::TextureBacking"*)**, %struct.SkImageInfo* (%"class.cc::TextureBacking"*)*** %23, align 8, !noalias !12
  %25 = getelementptr inbounds %struct.SkImageInfo* (%"class.cc::TextureBacking"*)*, %struct.SkImageInfo* (%"class.cc::TextureBacking"*)** %24, i64 3
  %26 = load %struct.SkImageInfo* (%"class.cc::TextureBacking"*)*, %struct.SkImageInfo* (%"class.cc::TextureBacking"*)** %25, align 8, !noalias !12
  %27 = tail call dereferenceable(24) %struct.SkImageInfo* %26(%"class.cc::TextureBacking"* nonnull %20) #11, !noalias !12
  %28 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %27, i64 0, i32 0, i32 0, i32 0
  %29 = load %class.SkColorSpace*, %class.SkColorSpace** %28, align 8, !noalias !12
  %30 = icmp eq %class.SkColorSpace* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %22
  %32 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw add i32* %32, i32 1 monotonic, !noalias !12
  br label %34

34:                                               ; preds = %31, %22
  %35 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %27, i64 0, i32 1
  br label %56

36:                                               ; preds = %18
  %37 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 14, i32 0
  %38 = load %class.SkImage*, %class.SkImage** %37, align 8, !noalias !12
  %39 = icmp eq %class.SkImage* %38, null
  br i1 %39, label %69, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %class.SkImage, %class.SkImage* %38, i64 0, i32 2, i32 0, i32 0, i32 0
  %42 = load %class.SkColorSpace*, %class.SkColorSpace** %41, align 8, !noalias !12
  %43 = icmp eq %class.SkColorSpace* %42, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw add i32* %45, i32 1 monotonic, !noalias !12
  br label %47

47:                                               ; preds = %44, %40
  %48 = getelementptr inbounds %class.SkImage, %class.SkImage* %38, i64 0, i32 2, i32 1
  br label %56

49:                                               ; preds = %1
  %50 = bitcast %"class.cc::PaintWorkletInput"* %3 to <2 x float> (%"class.cc::PaintWorkletInput"*)***
  %51 = load <2 x float> (%"class.cc::PaintWorkletInput"*)**, <2 x float> (%"class.cc::PaintWorkletInput"*)*** %50, align 8
  %52 = load <2 x float> (%"class.cc::PaintWorkletInput"*)*, <2 x float> (%"class.cc::PaintWorkletInput"*)** %51, align 8
  %53 = tail call <2 x float> %52(%"class.cc::PaintWorkletInput"* nonnull %3) #11
  %54 = extractelement <2 x float> %53, i32 0
  %55 = fptosi float %54 to i32
  br label %69

56:                                               ; preds = %47, %34, %16
  %57 = phi %class.SkColorSpace* [ %42, %47 ], [ %29, %34 ], [ %11, %16 ]
  %58 = phi %struct.SkISize* [ %48, %47 ], [ %35, %34 ], [ %17, %16 ]
  %59 = bitcast %struct.SkISize* %58 to i64*
  %60 = load i64, i64* %59, align 8, !noalias !12
  %61 = trunc i64 %60 to i32
  %62 = icmp eq %class.SkColorSpace* %57, null
  br i1 %62, label %69, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = atomicrmw add i32* %64, i32 -1 acq_rel
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %67, label %69

67:                                               ; preds = %63
  %68 = bitcast %class.SkColorSpace* %57 to i8*
  tail call void @_ZdlPv(i8* %68) #12
  br label %69

69:                                               ; preds = %36, %67, %63, %56, %49
  %70 = phi i32 [ %55, %49 ], [ %61, %56 ], [ %61, %63 ], [ %61, %67 ], [ 0, %36 ]
  ret i32 %70
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2cc10PaintImage6heightEv(%"class.cc::PaintImage"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 15, i32 0
  %3 = load %"class.cc::PaintWorkletInput"*, %"class.cc::PaintWorkletInput"** %2, align 8
  %4 = icmp eq %"class.cc::PaintWorkletInput"* %3, null
  br i1 %4, label %5, label %49

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 4, i32 0
  %7 = load %"class.cc::PaintImageGenerator"*, %"class.cc::PaintImageGenerator"** %6, align 8, !noalias !15
  %8 = icmp eq %"class.cc::PaintImageGenerator"* %7, null
  br i1 %8, label %18, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.cc::PaintImageGenerator", %"class.cc::PaintImageGenerator"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %class.SkColorSpace*, %class.SkColorSpace** %10, align 8, !noalias !15
  %12 = icmp eq %class.SkColorSpace* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw add i32* %14, i32 1 monotonic, !noalias !15
  br label %16

16:                                               ; preds = %13, %9
  %17 = getelementptr inbounds %"class.cc::PaintImageGenerator", %"class.cc::PaintImageGenerator"* %7, i64 0, i32 1, i32 1
  br label %56

18:                                               ; preds = %5
  %19 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 5, i32 0
  %20 = load %"class.cc::TextureBacking"*, %"class.cc::TextureBacking"** %19, align 8, !noalias !15
  %21 = icmp eq %"class.cc::TextureBacking"* %20, null
  br i1 %21, label %36, label %22

22:                                               ; preds = %18
  %23 = bitcast %"class.cc::TextureBacking"* %20 to %struct.SkImageInfo* (%"class.cc::TextureBacking"*)***
  %24 = load %struct.SkImageInfo* (%"class.cc::TextureBacking"*)**, %struct.SkImageInfo* (%"class.cc::TextureBacking"*)*** %23, align 8, !noalias !15
  %25 = getelementptr inbounds %struct.SkImageInfo* (%"class.cc::TextureBacking"*)*, %struct.SkImageInfo* (%"class.cc::TextureBacking"*)** %24, i64 3
  %26 = load %struct.SkImageInfo* (%"class.cc::TextureBacking"*)*, %struct.SkImageInfo* (%"class.cc::TextureBacking"*)** %25, align 8, !noalias !15
  %27 = tail call dereferenceable(24) %struct.SkImageInfo* %26(%"class.cc::TextureBacking"* nonnull %20) #11, !noalias !15
  %28 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %27, i64 0, i32 0, i32 0, i32 0
  %29 = load %class.SkColorSpace*, %class.SkColorSpace** %28, align 8, !noalias !15
  %30 = icmp eq %class.SkColorSpace* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %22
  %32 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw add i32* %32, i32 1 monotonic, !noalias !15
  br label %34

34:                                               ; preds = %31, %22
  %35 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %27, i64 0, i32 1
  br label %56

36:                                               ; preds = %18
  %37 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 14, i32 0
  %38 = load %class.SkImage*, %class.SkImage** %37, align 8, !noalias !15
  %39 = icmp eq %class.SkImage* %38, null
  br i1 %39, label %70, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %class.SkImage, %class.SkImage* %38, i64 0, i32 2, i32 0, i32 0, i32 0
  %42 = load %class.SkColorSpace*, %class.SkColorSpace** %41, align 8, !noalias !15
  %43 = icmp eq %class.SkColorSpace* %42, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw add i32* %45, i32 1 monotonic, !noalias !15
  br label %47

47:                                               ; preds = %44, %40
  %48 = getelementptr inbounds %class.SkImage, %class.SkImage* %38, i64 0, i32 2, i32 1
  br label %56

49:                                               ; preds = %1
  %50 = bitcast %"class.cc::PaintWorkletInput"* %3 to <2 x float> (%"class.cc::PaintWorkletInput"*)***
  %51 = load <2 x float> (%"class.cc::PaintWorkletInput"*)**, <2 x float> (%"class.cc::PaintWorkletInput"*)*** %50, align 8
  %52 = load <2 x float> (%"class.cc::PaintWorkletInput"*)*, <2 x float> (%"class.cc::PaintWorkletInput"*)** %51, align 8
  %53 = tail call <2 x float> %52(%"class.cc::PaintWorkletInput"* nonnull %3) #11
  %54 = extractelement <2 x float> %53, i32 1
  %55 = fptosi float %54 to i32
  br label %70

56:                                               ; preds = %47, %34, %16
  %57 = phi %class.SkColorSpace* [ %42, %47 ], [ %29, %34 ], [ %11, %16 ]
  %58 = phi %struct.SkISize* [ %48, %47 ], [ %35, %34 ], [ %17, %16 ]
  %59 = bitcast %struct.SkISize* %58 to i64*
  %60 = load i64, i64* %59, align 8, !noalias !15
  %61 = lshr i64 %60, 32
  %62 = trunc i64 %61 to i32
  %63 = icmp eq %class.SkColorSpace* %57, null
  br i1 %63, label %70, label %64

64:                                               ; preds = %56
  %65 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = atomicrmw add i32* %65, i32 -1 acq_rel
  %67 = icmp eq i32 %66, 1
  br i1 %67, label %68, label %70

68:                                               ; preds = %64
  %69 = bitcast %class.SkColorSpace* %57 to i8*
  tail call void @_ZdlPv(i8* %69) #12
  br label %70

70:                                               ; preds = %36, %68, %64, %56, %49
  %71 = phi i32 [ %55, %49 ], [ %62, %56 ], [ %62, %64 ], [ %62, %68 ], [ 0, %36 ]
  ret i32 %71
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc10PaintImage6DecodeEPvP11SkImageInfo5sk_spI12SkColorSpaceEmi(%"class.cc::PaintImage"* nocapture readonly, i8*, %struct.SkImageInfo*, %class.sk_sp.6* nocapture, i64, i32) local_unnamed_addr #1 align 2 {
  %7 = alloca %class.sk_sp.6, align 8
  %8 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 4, i32 0
  %9 = load %"class.cc::PaintImageGenerator"*, %"class.cc::PaintImageGenerator"** %8, align 8
  %10 = icmp eq %"class.cc::PaintImageGenerator"* %9, null
  %11 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %3, i64 0, i32 0
  %12 = bitcast %class.sk_sp.6* %3 to i64*
  %13 = load i64, i64* %12, align 8
  store %class.SkColorSpace* null, %class.SkColorSpace** %11, align 8
  br i1 %10, label %54, label %14

14:                                               ; preds = %6
  %15 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 1
  %16 = bitcast %struct.SkISize* %15 to i64*
  %17 = load i64, i64* %16, align 8, !noalias !18
  %18 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8, !noalias !21
  %20 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4, !noalias !21
  %22 = zext i32 %19 to i64
  %23 = zext i32 %21 to i64
  %24 = shl nuw i64 %23, 32
  %25 = or i64 %24, %22
  %26 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 0, i32 0, i32 0
  %27 = load %class.SkColorSpace*, %class.SkColorSpace** %26, align 8
  %28 = bitcast %struct.SkImageInfo* %2 to i64*
  store i64 %13, i64* %28, align 8
  %29 = icmp eq %class.SkColorSpace* %27, null
  br i1 %29, label %36, label %30

30:                                               ; preds = %14
  %31 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 -1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %36

34:                                               ; preds = %30
  %35 = bitcast %class.SkColorSpace* %27 to i8*
  tail call void @_ZdlPv(i8* %35) #12
  br label %36

36:                                               ; preds = %34, %30, %14
  %37 = bitcast i32* %18 to i64*
  store i64 %25, i64* %37, align 8
  store i64 %17, i64* %16, align 8
  %38 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 6
  %39 = load i32, i32* %38, align 8
  %40 = load %"class.cc::PaintImageGenerator"*, %"class.cc::PaintImageGenerator"** %8, align 8
  %41 = shl i64 %17, 32
  %42 = ashr exact i64 %41, 32
  %43 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 0
  %44 = tail call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* %43) #11
  %45 = sext i32 %44 to i64
  %46 = mul nsw i64 %42, %45
  %47 = icmp ult i64 %46, 2147483648
  %48 = select i1 %47, i64 %46, i64 0
  %49 = bitcast %"class.cc::PaintImageGenerator"* %40 to i1 (%"class.cc::PaintImageGenerator"*, %struct.SkImageInfo*, i8*, i64, i64, i32, i32)***
  %50 = load i1 (%"class.cc::PaintImageGenerator"*, %struct.SkImageInfo*, i8*, i64, i64, i32, i32)**, i1 (%"class.cc::PaintImageGenerator"*, %struct.SkImageInfo*, i8*, i64, i64, i32, i32)*** %49, align 8
  %51 = getelementptr inbounds i1 (%"class.cc::PaintImageGenerator"*, %struct.SkImageInfo*, i8*, i64, i64, i32, i32)*, i1 (%"class.cc::PaintImageGenerator"*, %struct.SkImageInfo*, i8*, i64, i64, i32, i32)** %50, i64 4
  %52 = load i1 (%"class.cc::PaintImageGenerator"*, %struct.SkImageInfo*, i8*, i64, i64, i32, i32)*, i1 (%"class.cc::PaintImageGenerator"*, %struct.SkImageInfo*, i8*, i64, i64, i32, i32)** %51, align 8
  %53 = tail call zeroext i1 %52(%"class.cc::PaintImageGenerator"* %40, %struct.SkImageInfo* dereferenceable(24) %2, i8* %1, i64 %48, i64 %4, i32 %5, i32 %39) #11
  br label %66

54:                                               ; preds = %6
  %55 = bitcast %class.sk_sp.6* %7 to i64*
  store i64 %13, i64* %55, align 8
  %56 = call zeroext i1 @_ZNK2cc10PaintImage17DecodeFromSkImageEPvP11SkImageInfo5sk_spI12SkColorSpaceEmi(%"class.cc::PaintImage"* %0, i8* %1, %struct.SkImageInfo* %2, %class.sk_sp.6* nonnull %7, i64 %4, i32 %5)
  %57 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %7, i64 0, i32 0
  %58 = load %class.SkColorSpace*, %class.SkColorSpace** %57, align 8
  %59 = icmp eq %class.SkColorSpace* %58, null
  br i1 %59, label %66, label %60

60:                                               ; preds = %54
  %61 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = atomicrmw add i32* %61, i32 -1 acq_rel
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %66

64:                                               ; preds = %60
  %65 = bitcast %class.SkColorSpace* %58 to i8*
  tail call void @_ZdlPv(i8* %65) #12
  br label %66

66:                                               ; preds = %64, %60, %54, %36
  %67 = phi i1 [ %53, %36 ], [ %56, %54 ], [ %56, %60 ], [ %56, %64 ]
  ret i1 %67
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc10PaintImage19DecodeFromGeneratorEPvP11SkImageInfo5sk_spI12SkColorSpaceEmi(%"class.cc::PaintImage"* nocapture readonly, i8*, %struct.SkImageInfo*, %class.sk_sp.6* nocapture, i64, i32) local_unnamed_addr #1 align 2 {
  %7 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %3, i64 0, i32 0
  %8 = bitcast %class.sk_sp.6* %3 to i64*
  %9 = load i64, i64* %8, align 8
  store %class.SkColorSpace* null, %class.SkColorSpace** %7, align 8
  %10 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 1
  %11 = bitcast %struct.SkISize* %10 to i64*
  %12 = load i64, i64* %11, align 8, !noalias !24
  %13 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8, !noalias !27
  %15 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4, !noalias !27
  %17 = zext i32 %14 to i64
  %18 = zext i32 %16 to i64
  %19 = shl nuw i64 %18, 32
  %20 = or i64 %19, %17
  %21 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 0, i32 0, i32 0
  %22 = load %class.SkColorSpace*, %class.SkColorSpace** %21, align 8
  %23 = bitcast %struct.SkImageInfo* %2 to i64*
  store i64 %9, i64* %23, align 8
  %24 = icmp eq %class.SkColorSpace* %22, null
  br i1 %24, label %31, label %25

25:                                               ; preds = %6
  %26 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 -1 acq_rel
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = bitcast %class.SkColorSpace* %22 to i8*
  tail call void @_ZdlPv(i8* %30) #12
  br label %31

31:                                               ; preds = %6, %25, %29
  %32 = bitcast i32* %13 to i64*
  store i64 %20, i64* %32, align 8
  store i64 %12, i64* %11, align 8
  %33 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 6
  %34 = load i32, i32* %33, align 8
  %35 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 4, i32 0
  %36 = load %"class.cc::PaintImageGenerator"*, %"class.cc::PaintImageGenerator"** %35, align 8
  %37 = shl i64 %12, 32
  %38 = ashr exact i64 %37, 32
  %39 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 0
  %40 = tail call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* %39) #11
  %41 = sext i32 %40 to i64
  %42 = mul nsw i64 %38, %41
  %43 = icmp ult i64 %42, 2147483648
  %44 = select i1 %43, i64 %42, i64 0
  %45 = bitcast %"class.cc::PaintImageGenerator"* %36 to i1 (%"class.cc::PaintImageGenerator"*, %struct.SkImageInfo*, i8*, i64, i64, i32, i32)***
  %46 = load i1 (%"class.cc::PaintImageGenerator"*, %struct.SkImageInfo*, i8*, i64, i64, i32, i32)**, i1 (%"class.cc::PaintImageGenerator"*, %struct.SkImageInfo*, i8*, i64, i64, i32, i32)*** %45, align 8
  %47 = getelementptr inbounds i1 (%"class.cc::PaintImageGenerator"*, %struct.SkImageInfo*, i8*, i64, i64, i32, i32)*, i1 (%"class.cc::PaintImageGenerator"*, %struct.SkImageInfo*, i8*, i64, i64, i32, i32)** %46, i64 4
  %48 = load i1 (%"class.cc::PaintImageGenerator"*, %struct.SkImageInfo*, i8*, i64, i64, i32, i32)*, i1 (%"class.cc::PaintImageGenerator"*, %struct.SkImageInfo*, i8*, i64, i64, i32, i32)** %47, align 8
  %49 = tail call zeroext i1 %48(%"class.cc::PaintImageGenerator"* %36, %struct.SkImageInfo* dereferenceable(24) %2, i8* %1, i64 %44, i64 %4, i32 %5, i32 %34) #11
  ret i1 %49
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc10PaintImage17DecodeFromSkImageEPvP11SkImageInfo5sk_spI12SkColorSpaceEmi(%"class.cc::PaintImage"* nocapture readonly, i8*, %struct.SkImageInfo*, %class.sk_sp.6* nocapture, i64, i32) local_unnamed_addr #1 align 2 {
  %7 = alloca %class.sk_sp, align 8
  %8 = alloca %class.sk_sp, align 8
  %9 = alloca %class.sk_sp.6, align 8
  %10 = bitcast %class.sk_sp* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #11
  %11 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %7, i64 0, i32 0
  store %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*), %class.SkImage** %11, align 8
  call void @_ZNK2cc10PaintImage18GetSkImageForFrameEmi(%class.sk_sp* nonnull sret %7, %"class.cc::PaintImage"* %0, i64 %4, i32 %5)
  %12 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %3, i64 0, i32 0
  %13 = load %class.SkColorSpace*, %class.SkColorSpace** %12, align 8
  %14 = icmp eq %class.SkColorSpace* %13, null
  br i1 %14, label %15, label %17

15:                                               ; preds = %6
  %16 = load %class.SkImage*, %class.SkImage** %11, align 8
  br label %64

17:                                               ; preds = %6
  %18 = bitcast %class.sk_sp* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  %19 = load %class.SkImage*, %class.SkImage** %11, align 8
  %20 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %9, i64 0, i32 0
  %21 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 1 monotonic
  store %class.SkColorSpace* %13, %class.SkColorSpace** %20, align 8
  call void @_ZNK7SkImage14makeColorSpaceE5sk_spI12SkColorSpaceEP15GrDirectContext(%class.sk_sp* nonnull sret %8, %class.SkImage* %19, %class.sk_sp.6* nonnull %9, %class.GrDirectContext* null) #11
  %23 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %8, i64 0, i32 0
  %24 = bitcast %class.sk_sp* %8 to i64*
  %25 = load i64, i64* %24, align 8
  store %class.SkImage* null, %class.SkImage** %23, align 8
  %26 = load %class.SkImage*, %class.SkImage** %11, align 8
  %27 = bitcast %class.sk_sp* %7 to i64*
  store i64 %25, i64* %27, align 8
  %28 = icmp eq %class.SkImage* %26, null
  br i1 %28, label %52, label %29

29:                                               ; preds = %17
  %30 = getelementptr inbounds %class.SkImage, %class.SkImage* %26, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw add i32* %30, i32 -1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %39

33:                                               ; preds = %29
  %34 = bitcast %class.SkImage* %26 to %class.SkRefCntBase*
  %35 = bitcast %class.SkImage* %26 to void (%class.SkRefCntBase*)***
  %36 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %35, align 8
  %37 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %36, i64 2
  %38 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %37, align 8
  call void %38(%class.SkRefCntBase* nonnull %34) #11
  br label %39

39:                                               ; preds = %29, %33
  %40 = load %class.SkImage*, %class.SkImage** %23, align 8
  %41 = icmp eq %class.SkImage* %40, null
  br i1 %41, label %52, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %class.SkImage, %class.SkImage* %40, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = atomicrmw add i32* %43, i32 -1 acq_rel
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %52

46:                                               ; preds = %42
  %47 = bitcast %class.SkImage* %40 to %class.SkRefCntBase*
  %48 = bitcast %class.SkImage* %40 to void (%class.SkRefCntBase*)***
  %49 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %48, align 8
  %50 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %49, i64 2
  %51 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %50, align 8
  call void %51(%class.SkRefCntBase* nonnull %47) #11
  br label %52

52:                                               ; preds = %17, %39, %42, %46
  %53 = load %class.SkColorSpace*, %class.SkColorSpace** %20, align 8
  %54 = icmp eq %class.SkColorSpace* %53, null
  br i1 %54, label %61, label %55

55:                                               ; preds = %52
  %56 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw add i32* %56, i32 -1 acq_rel
  %58 = icmp eq i32 %57, 1
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  %60 = bitcast %class.SkColorSpace* %53 to i8*
  call void @_ZdlPv(i8* %60) #12
  br label %61

61:                                               ; preds = %52, %55, %59
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  %62 = load %class.SkImage*, %class.SkImage** %11, align 8
  %63 = icmp eq %class.SkImage* %62, null
  br i1 %63, label %113, label %64

64:                                               ; preds = %15, %61
  %65 = phi %class.SkImage* [ %16, %15 ], [ %62, %61 ]
  %66 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 1, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 0
  %70 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* %69) #11
  %71 = sext i32 %70 to i64
  %72 = mul nsw i64 %71, %68
  %73 = icmp ult i64 %72, 2147483648
  %74 = select i1 %73, i64 %72, i64 0
  %75 = call zeroext i1 @_ZNK7SkImage10readPixelsERK11SkImageInfoPvmiiNS_11CachingHintE(%class.SkImage* %65, %struct.SkImageInfo* dereferenceable(24) %2, i8* %1, i64 %74, i32 0, i32 0, i32 1) #11
  %76 = bitcast %class.sk_sp.6* %3 to i64*
  %77 = load i64, i64* %76, align 8
  store %class.SkColorSpace* null, %class.SkColorSpace** %12, align 8
  %78 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 1
  %79 = bitcast %struct.SkISize* %78 to i64*
  %80 = load i64, i64* %79, align 8, !noalias !30
  %81 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 0, i32 1
  %82 = load i32, i32* %81, align 8, !noalias !33
  %83 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 0, i32 2
  %84 = load i32, i32* %83, align 4, !noalias !33
  %85 = zext i32 %82 to i64
  %86 = zext i32 %84 to i64
  %87 = shl nuw i64 %86, 32
  %88 = or i64 %87, %85
  %89 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 0, i32 0, i32 0
  %90 = load %class.SkColorSpace*, %class.SkColorSpace** %89, align 8
  %91 = bitcast %struct.SkImageInfo* %2 to i64*
  store i64 %77, i64* %91, align 8
  %92 = icmp eq %class.SkColorSpace* %90, null
  br i1 %92, label %99, label %93

93:                                               ; preds = %64
  %94 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = atomicrmw add i32* %94, i32 -1 acq_rel
  %96 = icmp eq i32 %95, 1
  br i1 %96, label %97, label %99

97:                                               ; preds = %93
  %98 = bitcast %class.SkColorSpace* %90 to i8*
  call void @_ZdlPv(i8* %98) #12
  br label %99

99:                                               ; preds = %97, %93, %64
  %100 = bitcast i32* %81 to i64*
  store i64 %88, i64* %100, align 8
  store i64 %80, i64* %79, align 8
  %101 = load %class.SkImage*, %class.SkImage** %11, align 8
  %102 = icmp eq %class.SkImage* %101, null
  br i1 %102, label %113, label %103

103:                                              ; preds = %99
  %104 = getelementptr inbounds %class.SkImage, %class.SkImage* %101, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = atomicrmw add i32* %104, i32 -1 acq_rel
  %106 = icmp eq i32 %105, 1
  br i1 %106, label %107, label %113

107:                                              ; preds = %103
  %108 = bitcast %class.SkImage* %101 to %class.SkRefCntBase*
  %109 = bitcast %class.SkImage* %101 to void (%class.SkRefCntBase*)***
  %110 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %109, align 8
  %111 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %110, i64 2
  %112 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %111, align 8
  call void %112(%class.SkRefCntBase* nonnull %108) #11
  br label %113

113:                                              ; preds = %61, %99, %103, %107
  %114 = phi i1 [ %75, %99 ], [ %75, %103 ], [ %75, %107 ], [ false, %61 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #11
  ret i1 %114
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc10PaintImage9DecodeYuvERK13SkYUVAPixmapsmi(%"class.cc::PaintImage"* nocapture readonly, %class.SkYUVAPixmaps* dereferenceable(208), i64, i32) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 6
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 4, i32 0
  %8 = load %"class.cc::PaintImageGenerator"*, %"class.cc::PaintImageGenerator"** %7, align 8
  %9 = bitcast %"class.cc::PaintImageGenerator"* %8 to i1 (%"class.cc::PaintImageGenerator"*, %class.SkYUVAPixmaps*, i64, i32)***
  %10 = load i1 (%"class.cc::PaintImageGenerator"*, %class.SkYUVAPixmaps*, i64, i32)**, i1 (%"class.cc::PaintImageGenerator"*, %class.SkYUVAPixmaps*, i64, i32)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.cc::PaintImageGenerator"*, %class.SkYUVAPixmaps*, i64, i32)*, i1 (%"class.cc::PaintImageGenerator"*, %class.SkYUVAPixmaps*, i64, i32)** %10, i64 6
  %12 = load i1 (%"class.cc::PaintImageGenerator"*, %class.SkYUVAPixmaps*, i64, i32)*, i1 (%"class.cc::PaintImageGenerator"*, %class.SkYUVAPixmaps*, i64, i32)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.cc::PaintImageGenerator"* %8, %class.SkYUVAPixmaps* dereferenceable(208) %1, i64 %2, i32 %6) #11
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc10PaintImage18GetSkImageForFrameEmi(%class.sk_sp* noalias sret, %"class.cc::PaintImage"* nocapture readonly, i64, i32) local_unnamed_addr #1 align 2 {
  %5 = alloca %class.sk_sp.14, align 8
  %6 = alloca %class.sk_sp, align 8
  %7 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 4, i32 0
  %8 = load %"class.cc::PaintImageGenerator"*, %"class.cc::PaintImageGenerator"** %7, align 8
  %9 = icmp eq %"class.cc::PaintImageGenerator"* %8, null
  br i1 %9, label %10, label %38

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 5, i32 0
  %12 = load %"class.cc::TextureBacking"*, %"class.cc::TextureBacking"** %11, align 8, !noalias !36
  %13 = icmp eq %"class.cc::TextureBacking"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = bitcast %"class.cc::TextureBacking"* %12 to void (%class.sk_sp*, %"class.cc::TextureBacking"*)***
  %16 = load void (%class.sk_sp*, %"class.cc::TextureBacking"*)**, void (%class.sk_sp*, %"class.cc::TextureBacking"*)*** %15, align 8
  %17 = getelementptr inbounds void (%class.sk_sp*, %"class.cc::TextureBacking"*)*, void (%class.sk_sp*, %"class.cc::TextureBacking"*)** %16, i64 6
  %18 = load void (%class.sk_sp*, %"class.cc::TextureBacking"*)*, void (%class.sk_sp*, %"class.cc::TextureBacking"*)** %17, align 8
  tail call void %18(%class.sk_sp* sret %0, %"class.cc::TextureBacking"* nonnull %12) #11
  br label %96

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 14, i32 0
  %21 = load %class.SkImage*, %class.SkImage** %20, align 8, !noalias !36
  %22 = icmp eq %class.SkImage* %21, null
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  br label %35

25:                                               ; preds = %19
  %26 = tail call zeroext i1 @_ZNK7SkImage15isTextureBackedEv(%class.SkImage* nonnull %21) #11
  %27 = load %class.SkImage*, %class.SkImage** %20, align 8, !noalias !36
  br i1 %26, label %28, label %29

28:                                               ; preds = %25
  tail call void @_ZNK7SkImage19makeNonTextureImageEv(%class.sk_sp* sret %0, %class.SkImage* %27) #11
  br label %96

29:                                               ; preds = %25
  %30 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  %31 = icmp eq %class.SkImage* %27, null
  br i1 %31, label %35, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %class.SkImage, %class.SkImage* %27, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 1 monotonic
  br label %35

35:                                               ; preds = %32, %29, %23
  %36 = phi %class.SkImage** [ %24, %23 ], [ %30, %29 ], [ %30, %32 ]
  %37 = phi %class.SkImage* [ null, %23 ], [ null, %29 ], [ %27, %32 ]
  store %class.SkImage* %37, %class.SkImage** %36, align 8, !alias.scope !36
  br label %96

38:                                               ; preds = %4
  %39 = icmp eq i64 %2, 0
  %40 = icmp eq i32 %3, 0
  %41 = and i1 %39, %40
  br i1 %41, label %42, label %70

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 5, i32 0
  %44 = load %"class.cc::TextureBacking"*, %"class.cc::TextureBacking"** %43, align 8, !noalias !39
  %45 = icmp eq %"class.cc::TextureBacking"* %44, null
  br i1 %45, label %51, label %46

46:                                               ; preds = %42
  %47 = bitcast %"class.cc::TextureBacking"* %44 to void (%class.sk_sp*, %"class.cc::TextureBacking"*)***
  %48 = load void (%class.sk_sp*, %"class.cc::TextureBacking"*)**, void (%class.sk_sp*, %"class.cc::TextureBacking"*)*** %47, align 8
  %49 = getelementptr inbounds void (%class.sk_sp*, %"class.cc::TextureBacking"*)*, void (%class.sk_sp*, %"class.cc::TextureBacking"*)** %48, i64 6
  %50 = load void (%class.sk_sp*, %"class.cc::TextureBacking"*)*, void (%class.sk_sp*, %"class.cc::TextureBacking"*)** %49, align 8
  tail call void %50(%class.sk_sp* sret %0, %"class.cc::TextureBacking"* nonnull %44) #11
  br label %96

51:                                               ; preds = %42
  %52 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 14, i32 0
  %53 = load %class.SkImage*, %class.SkImage** %52, align 8, !noalias !39
  %54 = icmp eq %class.SkImage* %53, null
  br i1 %54, label %55, label %57

55:                                               ; preds = %51
  %56 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  br label %67

57:                                               ; preds = %51
  %58 = tail call zeroext i1 @_ZNK7SkImage15isTextureBackedEv(%class.SkImage* nonnull %53) #11
  %59 = load %class.SkImage*, %class.SkImage** %52, align 8, !noalias !39
  br i1 %58, label %60, label %61

60:                                               ; preds = %57
  tail call void @_ZNK7SkImage19makeNonTextureImageEv(%class.sk_sp* sret %0, %class.SkImage* %59) #11
  br label %96

61:                                               ; preds = %57
  %62 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  %63 = icmp eq %class.SkImage* %59, null
  br i1 %63, label %67, label %64

64:                                               ; preds = %61
  %65 = getelementptr inbounds %class.SkImage, %class.SkImage* %59, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = atomicrmw add i32* %65, i32 1 monotonic
  br label %67

67:                                               ; preds = %64, %61, %55
  %68 = phi %class.SkImage** [ %56, %55 ], [ %62, %61 ], [ %62, %64 ]
  %69 = phi %class.SkImage* [ null, %55 ], [ null, %61 ], [ %59, %64 ]
  store %class.SkImage* %69, %class.SkImage** %68, align 8, !alias.scope !39
  br label %96

70:                                               ; preds = %38
  %71 = bitcast %class.sk_sp* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #11
  %72 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %6, i64 0, i32 0
  store %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*), %class.SkImage** %72, align 8
  %73 = bitcast %class.sk_sp.14* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73)
  %74 = tail call i8* @_Znwm(i64 64) #12
  %75 = bitcast i8* %74 to %"class.cc::SkiaPaintImageGenerator"*
  %76 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %5, i64 0, i32 0
  %77 = getelementptr inbounds %"class.cc::PaintImageGenerator", %"class.cc::PaintImageGenerator"* %8, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = atomicrmw add i32* %77, i32 1 monotonic
  store %"class.cc::PaintImageGenerator"* %8, %"class.cc::PaintImageGenerator"** %76, align 8
  call void @_ZN2cc23SkiaPaintImageGeneratorC1E5sk_spINS_19PaintImageGeneratorEEmi(%"class.cc::SkiaPaintImageGenerator"* nonnull %75, %class.sk_sp.14* nonnull %5, i64 %2, i32 %3) #11
  %79 = load %"class.cc::PaintImageGenerator"*, %"class.cc::PaintImageGenerator"** %76, align 8
  %80 = icmp eq %"class.cc::PaintImageGenerator"* %79, null
  br i1 %80, label %91, label %81

81:                                               ; preds = %70
  %82 = getelementptr inbounds %"class.cc::PaintImageGenerator", %"class.cc::PaintImageGenerator"* %79, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = atomicrmw add i32* %82, i32 -1 acq_rel
  %84 = icmp eq i32 %83, 1
  br i1 %84, label %85, label %91

85:                                               ; preds = %81
  %86 = bitcast %"class.cc::PaintImageGenerator"* %79 to %class.SkRefCntBase*
  %87 = bitcast %"class.cc::PaintImageGenerator"* %79 to void (%class.SkRefCntBase*)***
  %88 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %87, align 8
  %89 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %88, i64 2
  %90 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %89, align 8
  call void %90(%class.SkRefCntBase* nonnull %86) #11
  br label %91

91:                                               ; preds = %70, %81, %85
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73)
  %92 = bitcast i8* %74 to %class.SkImageGenerator*
  call void @_ZN7SkImage17MakeFromGeneratorENSt3__110unique_ptrI16SkImageGeneratorNS0_14default_deleteIS2_EEEE(%class.sk_sp* nonnull sret %6, %class.SkImageGenerator* nonnull %92) #11
  %93 = bitcast %class.sk_sp* %6 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %class.sk_sp* %0 to i64*
  store i64 %94, i64* %95, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #11
  br label %96

96:                                               ; preds = %67, %60, %46, %35, %28, %14, %91
  ret void
}

declare void @_ZNK7SkImage14makeColorSpaceE5sk_spI12SkColorSpaceEP15GrDirectContext(%class.sk_sp* sret, %class.SkImage*, %class.sk_sp.6*, %class.GrDirectContext*) local_unnamed_addr #6

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2cc10PaintImage13ShouldAnimateEv(%"class.cc::PaintImage"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 7
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %35

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 9
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, -2
  br i1 %8, label %35, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 15, i32 0
  %11 = load %"class.cc::PaintWorkletInput"*, %"class.cc::PaintWorkletInput"** %10, align 8
  %12 = icmp eq %"class.cc::PaintWorkletInput"* %11, null
  br i1 %12, label %13, label %21

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 14, i32 0
  %15 = load %class.SkImage*, %class.SkImage** %14, align 8
  %16 = icmp eq %class.SkImage* %15, null
  br i1 %16, label %17, label %21

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 5, i32 0
  %19 = load %"class.cc::TextureBacking"*, %"class.cc::TextureBacking"** %18, align 8
  %20 = icmp eq %"class.cc::TextureBacking"* %19, null
  br i1 %20, label %35, label %21

21:                                               ; preds = %17, %13, %9
  %22 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 4, i32 0
  %23 = load %"class.cc::PaintImageGenerator"*, %"class.cc::PaintImageGenerator"** %22, align 8
  %24 = icmp eq %"class.cc::PaintImageGenerator"* %23, null
  br i1 %24, label %35, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.cc::PaintImageGenerator", %"class.cc::PaintImageGenerator"* %23, i64 0, i32 3
  %27 = getelementptr inbounds %"class.cc::PaintImageGenerator", %"class.cc::PaintImageGenerator"* %23, i64 0, i32 3, i32 0, i32 1
  %28 = bitcast %"struct.cc::FrameMetadata"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.std::__1::vector"* %26 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %29, %31
  %33 = ashr exact i64 %32, 4
  %34 = icmp ugt i64 %33, 1
  br label %35

35:                                               ; preds = %25, %21, %17, %5, %1
  %36 = phi i1 [ false, %5 ], [ false, %1 ], [ false, %17 ], [ %34, %25 ], [ false, %21 ]
  ret i1 %36
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2cc10PaintImage10FrameCountEv(%"class.cc::PaintImage"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 15, i32 0
  %3 = load %"class.cc::PaintWorkletInput"*, %"class.cc::PaintWorkletInput"** %2, align 8
  %4 = icmp eq %"class.cc::PaintWorkletInput"* %3, null
  br i1 %4, label %5, label %13

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 14, i32 0
  %7 = load %class.SkImage*, %class.SkImage** %6, align 8
  %8 = icmp eq %class.SkImage* %7, null
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 5, i32 0
  %11 = load %"class.cc::TextureBacking"*, %"class.cc::TextureBacking"** %10, align 8
  %12 = icmp eq %"class.cc::TextureBacking"* %11, null
  br i1 %12, label %26, label %13

13:                                               ; preds = %9, %1, %5
  %14 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 4, i32 0
  %15 = load %"class.cc::PaintImageGenerator"*, %"class.cc::PaintImageGenerator"** %14, align 8
  %16 = icmp eq %"class.cc::PaintImageGenerator"* %15, null
  br i1 %16, label %26, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.cc::PaintImageGenerator", %"class.cc::PaintImageGenerator"* %15, i64 0, i32 3
  %19 = getelementptr inbounds %"class.cc::PaintImageGenerator", %"class.cc::PaintImageGenerator"* %15, i64 0, i32 3, i32 0, i32 1
  %20 = bitcast %"struct.cc::FrameMetadata"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.std::__1::vector"* %18 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %21, %23
  %25 = ashr exact i64 %24, 4
  br label %26

26:                                               ; preds = %9, %13, %17
  %27 = phi i64 [ 0, %9 ], [ %25, %17 ], [ 1, %13 ]
  ret i64 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc10PaintImage14GetKeyForFrameEm(%"class.cc::PaintImage::FrameKey"* noalias nocapture sret, %"class.cc::PaintImage"* nocapture readonly, i64) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 4, i32 0
  %5 = load %"class.cc::PaintImageGenerator"*, %"class.cc::PaintImageGenerator"** %4, align 8
  %6 = icmp eq %"class.cc::PaintImageGenerator"* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = bitcast %"class.cc::PaintImageGenerator"* %5 to i32 (%"class.cc::PaintImageGenerator"*, i64)***
  %9 = load i32 (%"class.cc::PaintImageGenerator"*, i64)**, i32 (%"class.cc::PaintImageGenerator"*, i64)*** %8, align 8
  %10 = getelementptr inbounds i32 (%"class.cc::PaintImageGenerator"*, i64)*, i32 (%"class.cc::PaintImageGenerator"*, i64)** %9, i64 8
  %11 = load i32 (%"class.cc::PaintImageGenerator"*, i64)*, i32 (%"class.cc::PaintImageGenerator"*, i64)** %10, align 8
  %12 = tail call i32 %11(%"class.cc::PaintImageGenerator"* nonnull %5, i64 %2) #11
  br label %16

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 3
  %15 = load i32, i32* %14, align 8
  br label %16

16:                                               ; preds = %7, %13
  %17 = phi i32 [ %12, %7 ], [ %15, %13 ]
  %18 = getelementptr inbounds %"class.cc::PaintImage::FrameKey", %"class.cc::PaintImage::FrameKey"* %0, i64 0, i32 0
  store i32 %17, i32* %18, align 8
  %19 = getelementptr inbounds %"class.cc::PaintImage::FrameKey", %"class.cc::PaintImage::FrameKey"* %0, i64 0, i32 1
  store i64 %2, i64* %19, align 8
  %20 = sext i32 %17 to i64
  %21 = tail call i64 @_ZN4base10HashInts64Emm(i64 %20, i64 %2) #11
  %22 = getelementptr inbounds %"class.cc::PaintImage::FrameKey", %"class.cc::PaintImage::FrameKey"* %0, i64 0, i32 2
  store i64 %21, i64* %22, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2cc10PaintImage20GetContentIdForFrameEm(%"class.cc::PaintImage"* nocapture readonly, i64) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 4, i32 0
  %4 = load %"class.cc::PaintImageGenerator"*, %"class.cc::PaintImageGenerator"** %3, align 8
  %5 = icmp eq %"class.cc::PaintImageGenerator"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.cc::PaintImageGenerator"* %4 to i32 (%"class.cc::PaintImageGenerator"*, i64)***
  %8 = load i32 (%"class.cc::PaintImageGenerator"*, i64)**, i32 (%"class.cc::PaintImageGenerator"*, i64)*** %7, align 8
  %9 = getelementptr inbounds i32 (%"class.cc::PaintImageGenerator"*, i64)*, i32 (%"class.cc::PaintImageGenerator"*, i64)** %8, i64 8
  %10 = load i32 (%"class.cc::PaintImageGenerator"*, i64)*, i32 (%"class.cc::PaintImageGenerator"*, i64)** %9, align 8
  %11 = tail call i32 %10(%"class.cc::PaintImageGenerator"* nonnull %4, i64 %1) #11
  br label %15

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 3
  %14 = load i32, i32* %13, align 8
  br label %15

15:                                               ; preds = %12, %6
  %16 = phi i32 [ %11, %6 ], [ %14, %12 ]
  ret i32 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2cc10PaintImage12GetColorTypeEv(%"class.cc::PaintImage"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 4, i32 0
  %3 = load %"class.cc::PaintImageGenerator"*, %"class.cc::PaintImageGenerator"** %2, align 8, !noalias !42
  %4 = icmp eq %"class.cc::PaintImageGenerator"* %3, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.cc::PaintImageGenerator", %"class.cc::PaintImageGenerator"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %class.SkColorSpace*, %class.SkColorSpace** %6, align 8, !noalias !42
  %8 = icmp eq %class.SkColorSpace* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 1 monotonic, !noalias !42
  br label %12

12:                                               ; preds = %9, %5
  %13 = getelementptr inbounds %"class.cc::PaintImageGenerator", %"class.cc::PaintImageGenerator"* %3, i64 0, i32 1, i32 0, i32 1
  br label %45

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 5, i32 0
  %16 = load %"class.cc::TextureBacking"*, %"class.cc::TextureBacking"** %15, align 8, !noalias !42
  %17 = icmp eq %"class.cc::TextureBacking"* %16, null
  br i1 %17, label %32, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.cc::TextureBacking"* %16 to %struct.SkImageInfo* (%"class.cc::TextureBacking"*)***
  %20 = load %struct.SkImageInfo* (%"class.cc::TextureBacking"*)**, %struct.SkImageInfo* (%"class.cc::TextureBacking"*)*** %19, align 8, !noalias !42
  %21 = getelementptr inbounds %struct.SkImageInfo* (%"class.cc::TextureBacking"*)*, %struct.SkImageInfo* (%"class.cc::TextureBacking"*)** %20, i64 3
  %22 = load %struct.SkImageInfo* (%"class.cc::TextureBacking"*)*, %struct.SkImageInfo* (%"class.cc::TextureBacking"*)** %21, align 8, !noalias !42
  %23 = tail call dereferenceable(24) %struct.SkImageInfo* %22(%"class.cc::TextureBacking"* nonnull %16) #11, !noalias !42
  %24 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %class.SkColorSpace*, %class.SkColorSpace** %24, align 8, !noalias !42
  %26 = icmp eq %class.SkColorSpace* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %18
  %28 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = atomicrmw add i32* %28, i32 1 monotonic, !noalias !42
  br label %30

30:                                               ; preds = %27, %18
  %31 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %23, i64 0, i32 0, i32 1
  br label %45

32:                                               ; preds = %14
  %33 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 14, i32 0
  %34 = load %class.SkImage*, %class.SkImage** %33, align 8, !noalias !42
  %35 = icmp eq %class.SkImage* %34, null
  br i1 %35, label %58, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %class.SkImage, %class.SkImage* %34, i64 0, i32 2, i32 0, i32 0, i32 0
  %38 = load %class.SkColorSpace*, %class.SkColorSpace** %37, align 8, !noalias !42
  %39 = icmp eq %class.SkColorSpace* %38, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = atomicrmw add i32* %41, i32 1 monotonic, !noalias !42
  br label %43

43:                                               ; preds = %40, %36
  %44 = getelementptr inbounds %class.SkImage, %class.SkImage* %34, i64 0, i32 2, i32 0, i32 1
  br label %45

45:                                               ; preds = %12, %30, %43
  %46 = phi %class.SkColorSpace* [ %38, %43 ], [ %25, %30 ], [ %7, %12 ]
  %47 = phi i32* [ %44, %43 ], [ %31, %30 ], [ %13, %12 ]
  %48 = bitcast i32* %47 to i64*
  %49 = load i64, i64* %48, align 8, !noalias !42
  %50 = trunc i64 %49 to i32
  %51 = icmp eq %class.SkColorSpace* %46, null
  br i1 %51, label %58, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = atomicrmw add i32* %53, i32 -1 acq_rel
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %56, label %58

56:                                               ; preds = %52
  %57 = bitcast %class.SkColorSpace* %46 to i8*
  tail call void @_ZdlPv(i8* %57) #12
  br label %58

58:                                               ; preds = %32, %45, %52, %56
  %59 = phi i32 [ %50, %45 ], [ %50, %52 ], [ %50, %56 ], [ 0, %32 ]
  ret i32 %59
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2cc10PaintImage12GetAlphaTypeEv(%"class.cc::PaintImage"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 4, i32 0
  %3 = load %"class.cc::PaintImageGenerator"*, %"class.cc::PaintImageGenerator"** %2, align 8, !noalias !45
  %4 = icmp eq %"class.cc::PaintImageGenerator"* %3, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.cc::PaintImageGenerator", %"class.cc::PaintImageGenerator"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %class.SkColorSpace*, %class.SkColorSpace** %6, align 8, !noalias !45
  %8 = icmp eq %class.SkColorSpace* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 1 monotonic, !noalias !45
  br label %12

12:                                               ; preds = %9, %5
  %13 = getelementptr inbounds %"class.cc::PaintImageGenerator", %"class.cc::PaintImageGenerator"* %3, i64 0, i32 1, i32 0, i32 1
  br label %45

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 5, i32 0
  %16 = load %"class.cc::TextureBacking"*, %"class.cc::TextureBacking"** %15, align 8, !noalias !45
  %17 = icmp eq %"class.cc::TextureBacking"* %16, null
  br i1 %17, label %32, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.cc::TextureBacking"* %16 to %struct.SkImageInfo* (%"class.cc::TextureBacking"*)***
  %20 = load %struct.SkImageInfo* (%"class.cc::TextureBacking"*)**, %struct.SkImageInfo* (%"class.cc::TextureBacking"*)*** %19, align 8, !noalias !45
  %21 = getelementptr inbounds %struct.SkImageInfo* (%"class.cc::TextureBacking"*)*, %struct.SkImageInfo* (%"class.cc::TextureBacking"*)** %20, i64 3
  %22 = load %struct.SkImageInfo* (%"class.cc::TextureBacking"*)*, %struct.SkImageInfo* (%"class.cc::TextureBacking"*)** %21, align 8, !noalias !45
  %23 = tail call dereferenceable(24) %struct.SkImageInfo* %22(%"class.cc::TextureBacking"* nonnull %16) #11, !noalias !45
  %24 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %class.SkColorSpace*, %class.SkColorSpace** %24, align 8, !noalias !45
  %26 = icmp eq %class.SkColorSpace* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %18
  %28 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = atomicrmw add i32* %28, i32 1 monotonic, !noalias !45
  br label %30

30:                                               ; preds = %27, %18
  %31 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %23, i64 0, i32 0, i32 1
  br label %45

32:                                               ; preds = %14
  %33 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 14, i32 0
  %34 = load %class.SkImage*, %class.SkImage** %33, align 8, !noalias !45
  %35 = icmp eq %class.SkImage* %34, null
  br i1 %35, label %59, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %class.SkImage, %class.SkImage* %34, i64 0, i32 2, i32 0, i32 0, i32 0
  %38 = load %class.SkColorSpace*, %class.SkColorSpace** %37, align 8, !noalias !45
  %39 = icmp eq %class.SkColorSpace* %38, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = atomicrmw add i32* %41, i32 1 monotonic, !noalias !45
  br label %43

43:                                               ; preds = %40, %36
  %44 = getelementptr inbounds %class.SkImage, %class.SkImage* %34, i64 0, i32 2, i32 0, i32 1
  br label %45

45:                                               ; preds = %12, %30, %43
  %46 = phi %class.SkColorSpace* [ %38, %43 ], [ %25, %30 ], [ %7, %12 ]
  %47 = phi i32* [ %44, %43 ], [ %31, %30 ], [ %13, %12 ]
  %48 = bitcast i32* %47 to i64*
  %49 = load i64, i64* %48, align 8, !noalias !45
  %50 = lshr i64 %49, 32
  %51 = trunc i64 %50 to i32
  %52 = icmp eq %class.SkColorSpace* %46, null
  br i1 %52, label %59, label %53

53:                                               ; preds = %45
  %54 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = atomicrmw add i32* %54, i32 -1 acq_rel
  %56 = icmp eq i32 %55, 1
  br i1 %56, label %57, label %59

57:                                               ; preds = %53
  %58 = bitcast %class.SkColorSpace* %46 to i8*
  tail call void @_ZdlPv(i8* %58) #12
  br label %59

59:                                               ; preds = %32, %45, %53, %57
  %60 = phi i32 [ %51, %45 ], [ %51, %53 ], [ %51, %57 ], [ 0, %32 ]
  ret i32 %60
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc10PaintImage15IsTextureBackedEv(%"class.cc::PaintImage"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 5, i32 0
  %3 = load %"class.cc::TextureBacking"*, %"class.cc::TextureBacking"** %2, align 8
  %4 = icmp eq %"class.cc::TextureBacking"* %3, null
  br i1 %4, label %5, label %11

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 14, i32 0
  %7 = load %class.SkImage*, %class.SkImage** %6, align 8
  %8 = icmp eq %class.SkImage* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  %10 = tail call zeroext i1 @_ZNK7SkImage15isTextureBackedEv(%class.SkImage* nonnull %7) #11
  br label %11

11:                                               ; preds = %5, %1, %9
  %12 = phi i1 [ %10, %9 ], [ true, %1 ], [ false, %5 ]
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10PaintImage19FlushPendingSkiaOpsEv(%"class.cc::PaintImage"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 5, i32 0
  %3 = load %"class.cc::TextureBacking"*, %"class.cc::TextureBacking"** %2, align 8
  %4 = icmp eq %"class.cc::TextureBacking"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.cc::TextureBacking"* %3 to void (%"class.cc::TextureBacking"*)***
  %7 = load void (%"class.cc::TextureBacking"*)**, void (%"class.cc::TextureBacking"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.cc::TextureBacking"*)*, void (%"class.cc::TextureBacking"*)** %7, i64 8
  %9 = load void (%"class.cc::TextureBacking"*)*, void (%"class.cc::TextureBacking"*)** %8, align 8
  tail call void %9(%"class.cc::TextureBacking"* nonnull %3) #11
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZNK2cc10PaintImage20GetContentColorUsageEv(%"class.cc::PaintImage"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = alloca %struct.skcms_TransferFunction, align 4
  %3 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 15, i32 0
  %4 = load %"class.cc::PaintWorkletInput"*, %"class.cc::PaintWorkletInput"** %3, align 8
  %5 = icmp eq %"class.cc::PaintWorkletInput"* %4, null
  br i1 %5, label %6, label %57

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 4, i32 0
  %8 = load %"class.cc::PaintImageGenerator"*, %"class.cc::PaintImageGenerator"** %7, align 8, !noalias !48
  %9 = icmp eq %"class.cc::PaintImageGenerator"* %8, null
  br i1 %9, label %14, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.cc::PaintImageGenerator", %"class.cc::PaintImageGenerator"* %8, i64 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %class.SkColorSpace*, %class.SkColorSpace** %11, align 8, !noalias !48
  %13 = icmp eq %class.SkColorSpace* %12, null
  br i1 %13, label %57, label %35

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 5, i32 0
  %16 = load %"class.cc::TextureBacking"*, %"class.cc::TextureBacking"** %15, align 8, !noalias !48
  %17 = icmp eq %"class.cc::TextureBacking"* %16, null
  br i1 %17, label %27, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.cc::TextureBacking"* %16 to %struct.SkImageInfo* (%"class.cc::TextureBacking"*)***
  %20 = load %struct.SkImageInfo* (%"class.cc::TextureBacking"*)**, %struct.SkImageInfo* (%"class.cc::TextureBacking"*)*** %19, align 8, !noalias !48
  %21 = getelementptr inbounds %struct.SkImageInfo* (%"class.cc::TextureBacking"*)*, %struct.SkImageInfo* (%"class.cc::TextureBacking"*)** %20, i64 3
  %22 = load %struct.SkImageInfo* (%"class.cc::TextureBacking"*)*, %struct.SkImageInfo* (%"class.cc::TextureBacking"*)** %21, align 8, !noalias !48
  %23 = tail call dereferenceable(24) %struct.SkImageInfo* %22(%"class.cc::TextureBacking"* nonnull %16) #11, !noalias !48
  %24 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %class.SkColorSpace*, %class.SkColorSpace** %24, align 8, !noalias !48
  %26 = icmp eq %class.SkColorSpace* %25, null
  br i1 %26, label %57, label %35

27:                                               ; preds = %14
  %28 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 14, i32 0
  %29 = load %class.SkImage*, %class.SkImage** %28, align 8, !noalias !48
  %30 = icmp eq %class.SkImage* %29, null
  br i1 %30, label %57, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %class.SkImage, %class.SkImage* %29, i64 0, i32 2, i32 0, i32 0, i32 0
  %33 = load %class.SkColorSpace*, %class.SkColorSpace** %32, align 8, !noalias !48
  %34 = icmp eq %class.SkColorSpace* %33, null
  br i1 %34, label %57, label %35

35:                                               ; preds = %31, %18, %10
  %36 = phi %class.SkColorSpace* [ %12, %10 ], [ %25, %18 ], [ %33, %31 ]
  %37 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw add i32* %37, i32 1 monotonic, !noalias !48
  %39 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw add i32* %39, i32 -1 acq_rel
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %44

42:                                               ; preds = %35
  %43 = bitcast %class.SkColorSpace* %36 to i8*
  tail call void @_ZdlPv(i8* %43) #12
  br label %44

44:                                               ; preds = %42, %35
  %45 = tail call zeroext i1 @_ZNK12SkColorSpace6isSRGBEv(%class.SkColorSpace* nonnull %36) #11
  br i1 %45, label %57, label %46

46:                                               ; preds = %44
  %47 = bitcast %struct.skcms_TransferFunction* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %47) #11
  %48 = bitcast %struct.skcms_TransferFunction* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %48, i8 -1, i64 28, i1 false)
  %49 = call zeroext i1 @_ZNK12SkColorSpace21isNumericalTransferFnEP22skcms_TransferFunction(%class.SkColorSpace* nonnull %36, %struct.skcms_TransferFunction* nonnull %2) #11
  br i1 %49, label %54, label %50

50:                                               ; preds = %46
  %51 = call zeroext i1 @skcms_TransferFunction_isPQish(%struct.skcms_TransferFunction* nonnull %2) #11
  br i1 %51, label %55, label %52

52:                                               ; preds = %50
  %53 = call zeroext i1 @skcms_TransferFunction_isHLGish(%struct.skcms_TransferFunction* nonnull %2) #11
  br i1 %53, label %55, label %54

54:                                               ; preds = %52, %46
  br label %55

55:                                               ; preds = %50, %52, %54
  %56 = phi i8 [ 1, %54 ], [ 2, %52 ], [ 2, %50 ]
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %47) #11
  br label %57

57:                                               ; preds = %31, %18, %10, %1, %27, %55, %44
  %58 = phi i8 [ 0, %1 ], [ %56, %55 ], [ 0, %44 ], [ 0, %27 ], [ 0, %10 ], [ 0, %18 ], [ 0, %31 ]
  ret i8 %58
}

declare zeroext i1 @_ZNK12SkColorSpace6isSRGBEv(%class.SkColorSpace*) local_unnamed_addr #6

declare zeroext i1 @_ZNK12SkColorSpace21isNumericalTransferFnEP22skcms_TransferFunction(%class.SkColorSpace*, %struct.skcms_TransferFunction*) local_unnamed_addr #6

declare zeroext i1 @skcms_TransferFunction_isPQish(%struct.skcms_TransferFunction*) local_unnamed_addr #6

declare zeroext i1 @skcms_TransferFunction_isHLGish(%struct.skcms_TransferFunction*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.cc::ImageHeaderMetadata"* @_ZNK2cc10PaintImage22GetImageHeaderMetadataEv(%"class.cc::PaintImage"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 4, i32 0
  %3 = load %"class.cc::PaintImageGenerator"*, %"class.cc::PaintImageGenerator"** %2, align 8
  %4 = icmp eq %"class.cc::PaintImageGenerator"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.cc::PaintImageGenerator"* %3 to %"struct.cc::ImageHeaderMetadata"* (%"class.cc::PaintImageGenerator"*)***
  %7 = load %"struct.cc::ImageHeaderMetadata"* (%"class.cc::PaintImageGenerator"*)**, %"struct.cc::ImageHeaderMetadata"* (%"class.cc::PaintImageGenerator"*)*** %6, align 8
  %8 = getelementptr inbounds %"struct.cc::ImageHeaderMetadata"* (%"class.cc::PaintImageGenerator"*)*, %"struct.cc::ImageHeaderMetadata"* (%"class.cc::PaintImageGenerator"*)** %7, i64 9
  %9 = load %"struct.cc::ImageHeaderMetadata"* (%"class.cc::PaintImageGenerator"*)*, %"struct.cc::ImageHeaderMetadata"* (%"class.cc::PaintImageGenerator"*)** %8, align 8
  %10 = tail call %"struct.cc::ImageHeaderMetadata"* %9(%"class.cc::PaintImageGenerator"* nonnull %3) #11
  br label %11

11:                                               ; preds = %1, %5
  %12 = phi %"struct.cc::ImageHeaderMetadata"* [ %10, %5 ], [ null, %1 ]
  ret %"struct.cc::ImageHeaderMetadata"* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc10PaintImage5IsYuvERKN16SkYUVAPixmapInfo18SupportedDataTypesEPS1_(%"class.cc::PaintImage"* nocapture readonly, %"class.SkYUVAPixmapInfo::SupportedDataTypes"* dereferenceable(8), %class.SkYUVAPixmapInfo*) local_unnamed_addr #1 align 2 {
  %4 = alloca %class.SkYUVAPixmapInfo, align 8
  %5 = bitcast %class.SkYUVAPixmapInfo* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %5) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 168, i1 false)
  %6 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %4, i64 0, i32 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false) #11
  store i32 10, i32* %6, align 8
  %7 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %4, i64 0, i32 0, i32 4
  store i32 1, i32* %7, align 4
  %8 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %4, i64 0, i32 0, i32 5
  %9 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 4, i32 0
  %10 = bitcast i32* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 140, i1 false)
  %11 = load %"class.cc::PaintImageGenerator"*, %"class.cc::PaintImageGenerator"** %9, align 8
  %12 = icmp eq %"class.cc::PaintImageGenerator"* %11, null
  br i1 %12, label %30, label %13

13:                                               ; preds = %3
  %14 = icmp eq %class.SkYUVAPixmapInfo* %2, null
  %15 = select i1 %14, %class.SkYUVAPixmapInfo* %4, %class.SkYUVAPixmapInfo* %2
  %16 = bitcast %"class.cc::PaintImageGenerator"* %11 to i1 (%"class.cc::PaintImageGenerator"*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"*, %class.SkYUVAPixmapInfo*)***
  %17 = load i1 (%"class.cc::PaintImageGenerator"*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"*, %class.SkYUVAPixmapInfo*)**, i1 (%"class.cc::PaintImageGenerator"*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"*, %class.SkYUVAPixmapInfo*)*** %16, align 8
  %18 = getelementptr inbounds i1 (%"class.cc::PaintImageGenerator"*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"*, %class.SkYUVAPixmapInfo*)*, i1 (%"class.cc::PaintImageGenerator"*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"*, %class.SkYUVAPixmapInfo*)** %17, i64 5
  %19 = load i1 (%"class.cc::PaintImageGenerator"*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"*, %class.SkYUVAPixmapInfo*)*, i1 (%"class.cc::PaintImageGenerator"*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"*, %class.SkYUVAPixmapInfo*)** %18, align 8
  %20 = call zeroext i1 %19(%"class.cc::PaintImageGenerator"* nonnull %11, %"class.SkYUVAPixmapInfo::SupportedDataTypes"* dereferenceable(8) %1, %class.SkYUVAPixmapInfo* %15) #11
  %21 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %4, i64 0, i32 1, i32 0, i64 3, i32 0, i32 0, i32 0
  %22 = load %class.SkColorSpace*, %class.SkColorSpace** %21, align 8
  %23 = bitcast %class.SkColorSpace* %22 to i8*
  %24 = icmp eq %class.SkColorSpace* %22, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %13
  %26 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 -1 acq_rel
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %30

29:                                               ; preds = %25
  call void @_ZdlPv(i8* %23) #12
  br label %30

30:                                               ; preds = %3, %29, %25, %13
  %31 = phi i1 [ %20, %29 ], [ %20, %25 ], [ %20, %13 ], [ false, %3 ]
  %32 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %4, i64 0, i32 1, i32 0, i64 2, i32 0, i32 0, i32 0
  %33 = load %class.SkColorSpace*, %class.SkColorSpace** %32, align 8
  %34 = icmp eq %class.SkColorSpace* %33, null
  br i1 %34, label %41, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw add i32* %36, i32 -1 acq_rel
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %41

39:                                               ; preds = %35
  %40 = bitcast %class.SkColorSpace* %33 to i8*
  call void @_ZdlPv(i8* %40) #12
  br label %41

41:                                               ; preds = %39, %35, %30
  %42 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %4, i64 0, i32 1, i32 0, i64 1, i32 0, i32 0, i32 0
  %43 = load %class.SkColorSpace*, %class.SkColorSpace** %42, align 8
  %44 = icmp eq %class.SkColorSpace* %43, null
  br i1 %44, label %51, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = atomicrmw add i32* %46, i32 -1 acq_rel
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %49, label %51

49:                                               ; preds = %45
  %50 = bitcast %class.SkColorSpace* %43 to i8*
  call void @_ZdlPv(i8* %50) #12
  br label %51

51:                                               ; preds = %49, %45, %41
  %52 = getelementptr inbounds %class.SkYUVAPixmapInfo, %class.SkYUVAPixmapInfo* %4, i64 0, i32 1, i32 0, i64 0, i32 0, i32 0, i32 0
  %53 = load %class.SkColorSpace*, %class.SkColorSpace** %52, align 8
  %54 = icmp eq %class.SkColorSpace* %53, null
  br i1 %54, label %61, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw add i32* %56, i32 -1 acq_rel
  %58 = icmp eq i32 %57, 1
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  %60 = bitcast %class.SkColorSpace* %53 to i8*
  call void @_ZdlPv(i8* %60) #12
  br label %61

61:                                               ; preds = %51, %55, %59
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %5) #11
  ret i1 %31
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::vector"* @_ZNK2cc10PaintImage16GetFrameMetadataEv(%"class.cc::PaintImage"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %0, i64 0, i32 4, i32 0
  %3 = load %"class.cc::PaintImageGenerator"*, %"class.cc::PaintImageGenerator"** %2, align 8
  %4 = getelementptr inbounds %"class.cc::PaintImageGenerator", %"class.cc::PaintImageGenerator"* %3, i64 0, i32 3
  ret %"class.std::__1::vector"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc10PaintImage8ToStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.cc::PaintImage"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::basic_ostringstream", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.SkYUVAPixmapInfo::SupportedDataTypes", align 8
  %6 = bitcast %"class.std::__1::basic_ostringstream"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 1
  %8 = bitcast %"class.std::__1::basic_stringbuf"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 256, i1 false)
  %9 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 2, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %11, i64 0, i32 0
  %13 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %14 = bitcast %"class.std::__1::basic_ostringstream"* %3 to i64*
  store i64 %13, i64* %14, align 8
  %15 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %16 = bitcast %"class.std::__1::basic_ostringstream"* %3 to i8**
  %17 = inttoptr i64 %13 to i8*
  %18 = getelementptr i8, i8* %17, i64 -24
  %19 = bitcast i8* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds i8, i8* %6, i64 %20
  %22 = bitcast i8* %21 to i64*
  store i64 %15, i64* %22, align 8
  %23 = load i8*, i8** %16, align 8
  %24 = getelementptr i8, i8* %23, i64 -24
  %25 = bitcast i8* %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds i8, i8* %6, i64 %26
  %28 = bitcast i8* %27 to %"class.std::__1::ios_base"*
  %29 = bitcast %"class.std::__1::basic_stringbuf"* %11 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %28, i8* %29) #11
  %30 = getelementptr inbounds i8, i8* %27, i64 136
  %31 = bitcast i8* %30 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %31, align 8
  %32 = getelementptr inbounds i8, i8* %27, i64 144
  %33 = bitcast i8* %32 to i32*
  store i32 -1, i32* %33, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %10, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %9, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %12) #11
  %34 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %11, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %35 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 1, i32 1
  %36 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 1, i32 3
  %37 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 32, i1 false) #11
  store i32 16, i32* %36, align 8
  %38 = bitcast %"class.std::__1::basic_ostringstream"* %3 to %"class.std::__1::basic_ostream"*
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %38, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i64 11) #11
  %40 = bitcast %"class.cc::PaintImage"* %1 to i8**
  %41 = load i8*, i8** %40, align 8
  %42 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %39, i8* %41) #11
  %43 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %42, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0), i64 16) #11
  %44 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 1
  %45 = bitcast %class.sk_sp.12* %44 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %43, i8* %46) #11
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %47, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0), i64 21) #11
  %49 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #11
  %50 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 2
  call void @_ZNK3gfx4Rect8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %4, %"class.gfx::Rect"* %50) #11
  %51 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %58 = load i64, i64* %57, align 8
  %59 = zext i8 %53 to i64
  %60 = select i1 %54, i8* %56, i8* %49
  %61 = select i1 %54, i64 %58, i64 %59
  %62 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %48, i8* %60, i64 %61) #11
  %63 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %62, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i64 25) #11
  %64 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 4
  %65 = bitcast %class.sk_sp.14* %64 to i8**
  %66 = load i8*, i8** %65, align 8
  %67 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %63, i8* %66) #11
  %68 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %67, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), i64 6) #11
  %69 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 6
  %70 = load i32, i32* %69, align 8
  %71 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %68, i32 %70) #11
  %72 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %71, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0), i64 18) #11
  %73 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 7
  %74 = load i32, i32* %73, align 4
  %75 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %72, i32 %74) #11
  %76 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %75, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0), i64 20) #11
  %77 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 8
  %78 = load i32, i32* %77, align 8
  %79 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %76, i32 %78) #11
  %80 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %79, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0), i64 16) #11
  %81 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %1, i64 0, i32 10
  %82 = load i8, i8* %81, align 8, !range !2
  %83 = icmp ne i8 %82, 0
  %84 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEb(%"class.std::__1::basic_ostream"* %80, i1 zeroext %83) #11
  %85 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %84, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i64 9) #11
  %86 = bitcast %"class.SkYUVAPixmapInfo::SupportedDataTypes"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #11
  %87 = call i64 @_ZN16SkYUVAPixmapInfo18SupportedDataTypes3AllEv()
  %88 = getelementptr inbounds %"class.SkYUVAPixmapInfo::SupportedDataTypes", %"class.SkYUVAPixmapInfo::SupportedDataTypes"* %5, i64 0, i32 0, i32 0, i32 0
  store i64 %87, i64* %88, align 8
  %89 = call zeroext i1 @_ZNK2cc10PaintImage5IsYuvERKN16SkYUVAPixmapInfo18SupportedDataTypesEPS1_(%"class.cc::PaintImage"* %1, %"class.SkYUVAPixmapInfo::SupportedDataTypes"* nonnull dereferenceable(8) %5, %class.SkYUVAPixmapInfo* null)
  %90 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEb(%"class.std::__1::basic_ostream"* %85, i1 zeroext %89) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #11
  %91 = load i8, i8* %52, align 1
  %92 = icmp slt i8 %91, 0
  br i1 %92, label %93, label %95

93:                                               ; preds = %2
  %94 = load i8*, i8** %55, align 8
  call void @_ZdlPv(i8* %94) #12
  br label %95

95:                                               ; preds = %2, %93
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #11
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret %0, %"class.std::__1::basic_stringbuf"* %11) #11
  %96 = load i64, i64* bitcast ([4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  store i64 %96, i64* %14, align 8
  %97 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %98 = inttoptr i64 %96 to i8*
  %99 = getelementptr i8, i8* %98, i64 -24
  %100 = bitcast i8* %99 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = getelementptr inbounds i8, i8* %6, i64 %101
  %103 = bitcast i8* %102 to i64*
  store i64 %97, i64* %103, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %104 = bitcast %"class.std::__1::basic_string"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %105 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %104, i64 0, i32 1, i32 0
  %106 = load i8, i8* %105, align 1
  %107 = icmp slt i8 %106, 0
  br i1 %107, label %108, label %111

108:                                              ; preds = %95
  %109 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load i8*, i8** %109, align 8
  call void @_ZdlPv(i8* %110) #12
  br label %111

111:                                              ; preds = %95, %108
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %12) #11
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %38, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #11
  %112 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 2
  %113 = bitcast %"class.std::__1::basic_ios.base"* %112 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %113) #11
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %6) #11
  ret void
}

declare void @_ZNK3gfx4Rect8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.gfx::Rect"*) local_unnamed_addr #6

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #6

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEb(%"class.std::__1::basic_ostream"*, i1 zeroext) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN16SkYUVAPixmapInfo18SupportedDataTypes3AllEv() local_unnamed_addr #1 comdat align 2 {
  br label %1

1:                                                ; preds = %38, %0
  %2 = phi i64 [ 1, %0 ], [ %45, %38 ]
  %3 = phi i64 [ 0, %0 ], [ %44, %38 ]
  %4 = trunc i64 %2 to i32
  %5 = shl i64 %2, 2
  %6 = tail call i32 @_ZN16SkYUVAPixmapInfo27DefaultColorTypeForDataTypeENS_8DataTypeEi(i32 0, i32 %4)
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %14, label %10

8:                                                ; preds = %38
  %9 = and i64 %44, 65535
  ret i64 %9

10:                                               ; preds = %1
  %11 = add nsw i64 %5, -4
  %12 = shl i64 1, %11
  %13 = or i64 %12, %3
  br label %14

14:                                               ; preds = %1, %10
  %15 = phi i64 [ %13, %10 ], [ %3, %1 ]
  %16 = tail call i32 @_ZN16SkYUVAPixmapInfo27DefaultColorTypeForDataTypeENS_8DataTypeEi(i32 1, i32 %4)
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %14
  %19 = add nsw i64 %5, -3
  %20 = shl i64 1, %19
  %21 = or i64 %20, %15
  br label %22

22:                                               ; preds = %18, %14
  %23 = phi i64 [ %21, %18 ], [ %15, %14 ]
  %24 = tail call i32 @_ZN16SkYUVAPixmapInfo27DefaultColorTypeForDataTypeENS_8DataTypeEi(i32 2, i32 %4)
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %30, label %26

26:                                               ; preds = %22
  %27 = add nsw i64 %5, -2
  %28 = shl i64 1, %27
  %29 = or i64 %28, %23
  br label %30

30:                                               ; preds = %26, %22
  %31 = phi i64 [ %29, %26 ], [ %23, %22 ]
  %32 = tail call i32 @_ZN16SkYUVAPixmapInfo27DefaultColorTypeForDataTypeENS_8DataTypeEi(i32 3, i32 %4)
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %38, label %34

34:                                               ; preds = %30
  %35 = add nsw i64 %5, -1
  %36 = shl i64 1, %35
  %37 = or i64 %36, %31
  br label %38

38:                                               ; preds = %34, %30
  %39 = phi i64 [ %37, %34 ], [ %31, %30 ]
  %40 = tail call i32 @_ZN16SkYUVAPixmapInfo27DefaultColorTypeForDataTypeENS_8DataTypeEi(i32 4, i32 %4)
  %41 = icmp eq i32 %40, 0
  %42 = shl i64 1, %5
  %43 = select i1 %41, i64 0, i64 %42
  %44 = or i64 %39, %43
  %45 = add nuw nsw i64 %2, 1
  %46 = icmp eq i64 %45, 5
  br i1 %46, label %8, label %1
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10PaintImage8FrameKeyC2Eim(%"class.cc::PaintImage::FrameKey"* nocapture, i32, i64) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.cc::PaintImage::FrameKey", %"class.cc::PaintImage::FrameKey"* %0, i64 0, i32 0
  store i32 %1, i32* %4, align 8
  %5 = getelementptr inbounds %"class.cc::PaintImage::FrameKey", %"class.cc::PaintImage::FrameKey"* %0, i64 0, i32 1
  store i64 %2, i64* %5, align 8
  %6 = sext i32 %1 to i64
  %7 = tail call i64 @_ZN4base10HashInts64Emm(i64 %6, i64 %2) #11
  %8 = getelementptr inbounds %"class.cc::PaintImage::FrameKey", %"class.cc::PaintImage::FrameKey"* %0, i64 0, i32 2
  store i64 %7, i64* %8, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2cc10PaintImage8FrameKeyeqERKS1_(%"class.cc::PaintImage::FrameKey"* nocapture readonly, %"class.cc::PaintImage::FrameKey"* nocapture readonly dereferenceable(24)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.cc::PaintImage::FrameKey", %"class.cc::PaintImage::FrameKey"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.cc::PaintImage::FrameKey", %"class.cc::PaintImage::FrameKey"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %14

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.cc::PaintImage::FrameKey", %"class.cc::PaintImage::FrameKey"* %0, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.cc::PaintImage::FrameKey", %"class.cc::PaintImage::FrameKey"* %1, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %10, %12
  br label %14

14:                                               ; preds = %8, %2
  %15 = phi i1 [ false, %2 ], [ %13, %8 ]
  ret i1 %15
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2cc10PaintImage8FrameKeyneERKS1_(%"class.cc::PaintImage::FrameKey"* nocapture readonly, %"class.cc::PaintImage::FrameKey"* nocapture readonly dereferenceable(24)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.cc::PaintImage::FrameKey", %"class.cc::PaintImage::FrameKey"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.cc::PaintImage::FrameKey", %"class.cc::PaintImage::FrameKey"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %14

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.cc::PaintImage::FrameKey", %"class.cc::PaintImage::FrameKey"* %0, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.cc::PaintImage::FrameKey", %"class.cc::PaintImage::FrameKey"* %1, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp ne i64 %10, %12
  br label %14

14:                                               ; preds = %2, %8
  %15 = phi i1 [ true, %2 ], [ %13, %8 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc10PaintImage8FrameKey8ToStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.cc::PaintImage::FrameKey"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::basic_ostringstream", align 8
  %4 = bitcast %"class.std::__1::basic_ostringstream"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 1
  %6 = bitcast %"class.std::__1::basic_stringbuf"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 256, i1 false)
  %7 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 2, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %9, i64 0, i32 0
  %11 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %12 = bitcast %"class.std::__1::basic_ostringstream"* %3 to i64*
  store i64 %11, i64* %12, align 8
  %13 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %14 = bitcast %"class.std::__1::basic_ostringstream"* %3 to i8**
  %15 = inttoptr i64 %11 to i8*
  %16 = getelementptr i8, i8* %15, i64 -24
  %17 = bitcast i8* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds i8, i8* %4, i64 %18
  %20 = bitcast i8* %19 to i64*
  store i64 %13, i64* %20, align 8
  %21 = load i8*, i8** %14, align 8
  %22 = getelementptr i8, i8* %21, i64 -24
  %23 = bitcast i8* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds i8, i8* %4, i64 %24
  %26 = bitcast i8* %25 to %"class.std::__1::ios_base"*
  %27 = bitcast %"class.std::__1::basic_stringbuf"* %9 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %26, i8* %27) #11
  %28 = getelementptr inbounds i8, i8* %25, i64 136
  %29 = bitcast i8* %28 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %29, align 8
  %30 = getelementptr inbounds i8, i8* %25, i64 144
  %31 = bitcast i8* %30 to i32*
  store i32 -1, i32* %31, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %7, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %10) #11
  %32 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %9, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %33 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 1, i32 1
  %34 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 1, i32 3
  %35 = bitcast %"class.std::__1::basic_string"* %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 32, i1 false) #11
  store i32 16, i32* %34, align 8
  %36 = bitcast %"class.std::__1::basic_ostringstream"* %3 to %"class.std::__1::basic_ostream"*
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %36, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), i64 12) #11
  %38 = getelementptr inbounds %"class.cc::PaintImage::FrameKey", %"class.cc::PaintImage::FrameKey"* %1, i64 0, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %37, i32 %39) #11
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %40, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0), i64 1) #11
  %42 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %41, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), i64 13) #11
  %43 = getelementptr inbounds %"class.cc::PaintImage::FrameKey", %"class.cc::PaintImage::FrameKey"* %1, i64 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %42, i64 %44) #11
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret %0, %"class.std::__1::basic_stringbuf"* %9) #11
  %46 = load i64, i64* bitcast ([4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  store i64 %46, i64* %12, align 8
  %47 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %48 = inttoptr i64 %46 to i8*
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %4, i64 %51
  %53 = bitcast i8* %52 to i64*
  store i64 %47, i64* %53, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %54 = bitcast %"class.std::__1::basic_string"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %2
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  call void @_ZdlPv(i8* %60) #12
  br label %61

61:                                               ; preds = %2, %58
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %10) #11
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %36, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #11
  %62 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 2
  %63 = bitcast %"class.std::__1::basic_ios.base"* %62 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %63) #11
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %4) #11
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN16SkYUVAPixmapInfo27DefaultColorTypeForDataTypeENS_8DataTypeEi(i32, i32) local_unnamed_addr #1 comdat align 2 {
  switch i32 %1, label %27 [
    i32 1, label %3
    i32 2, label %5
    i32 3, label %7
    i32 4, label %9
  ]

3:                                                ; preds = %2
  %4 = icmp ult i32 %0, 4
  br i1 %4, label %11, label %27

5:                                                ; preds = %2
  %6 = icmp ult i32 %0, 4
  br i1 %6, label %15, label %27

7:                                                ; preds = %2
  %8 = icmp ult i32 %0, 4
  br i1 %8, label %19, label %27

9:                                                ; preds = %2
  %10 = icmp ult i32 %0, 4
  br i1 %10, label %23, label %27

11:                                               ; preds = %3
  %12 = sext i32 %0 to i64
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._ZN16SkYUVAPixmapInfo27DefaultColorTypeForDataTypeENS_8DataTypeEi, i64 0, i64 %12
  %14 = load i32, i32* %13, align 4
  ret i32 %14

15:                                               ; preds = %5
  %16 = sext i32 %0 to i64
  %17 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._ZN16SkYUVAPixmapInfo27DefaultColorTypeForDataTypeENS_8DataTypeEi.16, i64 0, i64 %16
  %18 = load i32, i32* %17, align 4
  ret i32 %18

19:                                               ; preds = %7
  %20 = sext i32 %0 to i64
  %21 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._ZN16SkYUVAPixmapInfo27DefaultColorTypeForDataTypeENS_8DataTypeEi.18, i64 0, i64 %20
  %22 = load i32, i32* %21, align 4
  ret i32 %22

23:                                               ; preds = %9
  %24 = sext i32 %0 to i64
  %25 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._ZN16SkYUVAPixmapInfo27DefaultColorTypeForDataTypeENS_8DataTypeEi.18, i64 0, i64 %24
  %26 = load i32, i32* %25, align 4
  ret i32 %26

27:                                               ; preds = %2, %3, %5, %7, %9
  ret i32 0
}

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"*, i8**) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #7

declare void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_stringbuf"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #1 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #11
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #11
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #11
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #11
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #11
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #1 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #11
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #11
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #12
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #11
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #11
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #12
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #11
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #11
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #7

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #6

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #6

declare void @_ZN2cc23SkiaPaintImageGeneratorC1E5sk_spINS_19PaintImageGeneratorEEmi(%"class.cc::SkiaPaintImageGenerator"*, %class.sk_sp.14*, i64, i32) unnamed_addr #6

declare void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"*, i8*) local_unnamed_addr #6

declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #6

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #6

declare i64 @_ZN4base10HashInts64Emm(i64, i64) local_unnamed_addr #6

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN11SkImageInfo11MakeUnknownEv: argument 0"}
!5 = distinct !{!5, !"_ZN11SkImageInfo11MakeUnknownEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK2cc10PaintImage14GetSkImageInfoEv: argument 0"}
!8 = distinct !{!8, !"_ZNK2cc10PaintImage14GetSkImageInfoEv"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK2cc10PaintImage14GetSkImageInfoEv: argument 0"}
!11 = distinct !{!11, !"_ZNK2cc10PaintImage14GetSkImageInfoEv"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK2cc10PaintImage14GetSkImageInfoEv: argument 0"}
!14 = distinct !{!14, !"_ZNK2cc10PaintImage14GetSkImageInfoEv"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK2cc10PaintImage14GetSkImageInfoEv: argument 0"}
!17 = distinct !{!17, !"_ZNK2cc10PaintImage14GetSkImageInfoEv"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNK11SkImageInfo14makeColorSpaceE5sk_spI12SkColorSpaceE: argument 0"}
!20 = distinct !{!20, !"_ZNK11SkImageInfo14makeColorSpaceE5sk_spI12SkColorSpaceE"}
!21 = !{!22, !19}
!22 = distinct !{!22, !23, !"_ZNK11SkColorInfo14makeColorSpaceE5sk_spI12SkColorSpaceE: argument 0"}
!23 = distinct !{!23, !"_ZNK11SkColorInfo14makeColorSpaceE5sk_spI12SkColorSpaceE"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNK11SkImageInfo14makeColorSpaceE5sk_spI12SkColorSpaceE: argument 0"}
!26 = distinct !{!26, !"_ZNK11SkImageInfo14makeColorSpaceE5sk_spI12SkColorSpaceE"}
!27 = !{!28, !25}
!28 = distinct !{!28, !29, !"_ZNK11SkColorInfo14makeColorSpaceE5sk_spI12SkColorSpaceE: argument 0"}
!29 = distinct !{!29, !"_ZNK11SkColorInfo14makeColorSpaceE5sk_spI12SkColorSpaceE"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZNK11SkImageInfo14makeColorSpaceE5sk_spI12SkColorSpaceE: argument 0"}
!32 = distinct !{!32, !"_ZNK11SkImageInfo14makeColorSpaceE5sk_spI12SkColorSpaceE"}
!33 = !{!34, !31}
!34 = distinct !{!34, !35, !"_ZNK11SkColorInfo14makeColorSpaceE5sk_spI12SkColorSpaceE: argument 0"}
!35 = distinct !{!35, !"_ZNK11SkColorInfo14makeColorSpaceE5sk_spI12SkColorSpaceE"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZNK2cc10PaintImage12GetSwSkImageEv: argument 0"}
!38 = distinct !{!38, !"_ZNK2cc10PaintImage12GetSwSkImageEv"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZNK2cc10PaintImage12GetSwSkImageEv: argument 0"}
!41 = distinct !{!41, !"_ZNK2cc10PaintImage12GetSwSkImageEv"}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZNK2cc10PaintImage14GetSkImageInfoEv: argument 0"}
!44 = distinct !{!44, !"_ZNK2cc10PaintImage14GetSkImageInfoEv"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZNK2cc10PaintImage14GetSkImageInfoEv: argument 0"}
!47 = distinct !{!47, !"_ZNK2cc10PaintImage14GetSkImageInfoEv"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZNK2cc10PaintImage14GetSkImageInfoEv: argument 0"}
!50 = distinct !{!50, !"_ZNK2cc10PaintImage14GetSkImageInfoEv"}
