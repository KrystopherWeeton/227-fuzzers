; ModuleID = '../../third_party/blink/renderer/core/css/css_syntax_definition.cc'
source_filename = "../../third_party/blink/renderer/core/css/css_syntax_definition.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon }
%union.anon = type { double }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.5", i32, [4 x i8], %"class.std::__1::unique_ptr.141", %"class.std::__1::unique_ptr.141", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.151", %"class.std::__1::unique_ptr.157", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.169", %"class.std::__1::unique_ptr.175", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.182", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.38", %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.63", %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.98", %"class.std::__1::unique_ptr.121", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.41" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i64 }
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.blink::Worklist.52"* }
%"class.blink::Worklist.52" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.41" }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.blink::Worklist.59"* }
%"class.blink::Worklist.59" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.41" }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.blink::Worklist.66"* }
%"class.blink::Worklist.66" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.41" }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.blink::Worklist.73"* }
%"class.blink::Worklist.73" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.41" }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.blink::Worklist.80"* }
%"class.blink::Worklist.80" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.41" }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.blink::Worklist.87"* }
%"class.blink::Worklist.87" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.41" }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.blink::Worklist.94"* }
%"class.blink::Worklist.94" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.41" }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.101", %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.113", %"class.std::__1::__compressed_pair.115", [4 x i8] }>
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103", %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { i64 }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { float }
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.124", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.133" }
%"class.WTF::Vector.133" = type { %"class.WTF::VectorBuffer.134" }
%"class.WTF::VectorBuffer.134" = type { %"class.WTF::VectorBufferBase.135" }
%"class.WTF::VectorBufferBase.135" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.149" }
%"class.WTF::VectorBuffer.149" = type { %"class.WTF::VectorBufferBase.150" }
%"class.WTF::VectorBufferBase.150" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.163" }
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.52"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.59"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.66"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.73"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.80"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.186" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.181 }
%class.scoped_refptr.181 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.182" = type { %"struct.std::__1::__atomic_base.183" }
%"struct.std::__1::__atomic_base.183" = type { %"struct.std::__1::__cxx_atomic_impl.184" }
%"struct.std::__1::__cxx_atomic_impl.184" = type { %"struct.std::__1::__cxx_atomic_base_impl.185" }
%"struct.std::__1::__cxx_atomic_base_impl.185" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.255" }
%"struct.std::__1::atomic.255" = type { %"struct.std::__1::__atomic_base.256" }
%"struct.std::__1::__atomic_base.256" = type { %"struct.std::__1::__atomic_base.257" }
%"struct.std::__1::__atomic_base.257" = type { %"struct.std::__1::__cxx_atomic_impl.258" }
%"struct.std::__1::__cxx_atomic_impl.258" = type { %"struct.std::__1::__cxx_atomic_base_impl.259" }
%"struct.std::__1::__cxx_atomic_base_impl.259" = type { i32 }
%"class.blink::CSSSyntaxDefinition" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::CSSSyntaxComponent"*, i32, i32 }
%"class.blink::CSSSyntaxComponent" = type <{ i32, [4 x i8], %"class.WTF::String", i32, [4 x i8] }>
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::CSSParserContext" = type <{ %"class.blink::KURL", %class.scoped_refptr.4, i8, i8, i8, [5 x i8], %"struct.blink::Referrer", i8, i8, i8, i8, i32, %"class.WTF::TextEncoding", %"class.blink::WeakMember", i32, [4 x i8] }>
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%class.scoped_refptr.4 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Document"* }
%"class.blink::Document" = type opaque
%"class.blink::CSSParserTokenRange" = type { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::CSSVariableReferenceValue" = type { %"class.blink::CSSValue", %class.scoped_refptr.191, %"class.blink::Member" }
%class.scoped_refptr.191 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.192", %"class.WTF::Vector.194", %"class.WTF::Vector.199", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.192" = type { %"class.base::RefCounted.193" }
%"class.base::RefCounted.193" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.194" = type { %"class.WTF::VectorBuffer.195" }
%"class.WTF::VectorBuffer.195" = type { %"class.WTF::VectorBufferBase.196" }
%"class.WTF::VectorBufferBase.196" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.199" = type { %"class.WTF::VectorBuffer.200" }
%"class.WTF::VectorBuffer.200" = type { %"class.WTF::VectorBufferBase.201" }
%"class.WTF::VectorBufferBase.201" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase.204" }
%"class.blink::MemberBase.204" = type { %"class.blink::CSSParserContext"* }
%"class.blink::CSSValueList" = type { %"class.blink::CSSValue", %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.214" }
%"class.WTF::Vector.214" = type { %"class.WTF::VectorBuffer.215" }
%"class.WTF::VectorBuffer.215" = type { %"class.WTF::VectorBufferBase.216", [32 x i8] }
%"class.WTF::VectorBufferBase.216" = type { %"class.blink::Member.217"*, i32, i32 }
%"class.blink::Member.217" = type { %"class.blink::MemberBase.218" }
%"class.blink::MemberBase.218" = type { %"class.blink::CSSValue"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.207 }
%union.anon.207 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::CSSCustomIdentValue" = type <{ %"class.blink::CSSValue", [5 x i8], %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::CSSPrimitiveValue" = type { %"class.blink::CSSValue" }
%"class.blink::cssvalue::CSSURIValue" = type { %"class.blink::CSSValue", %"class.WTF::AtomicString", i8, %"class.blink::Member.241", %"class.WTF::AtomicString" }
%"class.blink::Member.241" = type { %"class.blink::MemberBase.242" }
%"class.blink::MemberBase.242" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.245", %"class.blink::HeapHashMap" }
%"class.blink::Member.245" = type { %"class.blink::MemberBase.246" }
%"class.blink::MemberBase.246" = type { %"class.blink::Element"* }
%"class.blink::Element" = type opaque
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapVectorBacking" = type { i8 }

$_ZNK3WTF6VectorIN5blink18CSSSyntaxComponentELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink8CSSValue14AllocateObjectINS_12CSSValueListEEEPvm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv = comdat any

$_ZN5blink8CSSValue14AllocateObjectINS_19CSSCustomIdentValueEEEPvm = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8CSSValueEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_ = comdat any

$_ZN3WTF6VectorIN5blink18CSSSyntaxComponentELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18CSSSyntaxComponentEEEmm = comdat any

$_ZN3WTF6VectorIN5blink18CSSSyntaxComponentELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = comdat any

@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@.str = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN3WTF10StringImpl12empty16_bit_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink18g_static_eof_tokenE = external local_unnamed_addr constant %"class.blink::CSSParserToken"*, align 8
@.str.2 = private unnamed_addr constant [16 x i8] c"blink::CSSValue\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.4 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.5 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.6 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.7 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.8 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.9 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.10 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.11 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberIKNS1_8CSSValueEEENS_12VectorTraitsIS6_EEEEEEPKcv = private unnamed_addr constant [169 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<const blink::CSSValue>, WTF::VectorTraits<blink::Member<const blink::CSSValue> > >]\00", align 1
@.str.12 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18CSSSyntaxComponentEEEPKcv = private unnamed_addr constant [73 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CSSSyntaxComponent]\00", align 1

@_ZN5blink19CSSSyntaxDefinitionC1EN3WTF6VectorINS_18CSSSyntaxComponentELj0ENS1_18PartitionAllocatorEEE = hidden unnamed_addr alias void (%"class.blink::CSSSyntaxDefinition"*, %"class.WTF::Vector"*), void (%"class.blink::CSSSyntaxDefinition"*, %"class.WTF::Vector"*)* @_ZN5blink19CSSSyntaxDefinitionC2EN3WTF6VectorINS_18CSSSyntaxComponentELj0ENS1_18PartitionAllocatorEEE

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSValue"* @_ZNK5blink19CSSSyntaxDefinition5ParseENS_19CSSParserTokenRangeERKNS_16CSSParserContextEb(%"class.blink::CSSSyntaxDefinition"*, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserContext"* dereferenceable(176), i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::CSSParserTokenRange", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = getelementptr inbounds %"class.blink::CSSSyntaxDefinition", %"class.blink::CSSSyntaxDefinition"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %102

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.blink::CSSSyntaxDefinition", %"class.blink::CSSSyntaxDefinition"* %0, i64 0, i32 0
  %14 = tail call dereferenceable(24) %"class.blink::CSSSyntaxComponent"* @_ZNK3WTF6VectorIN5blink18CSSSyntaxComponentELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %13, i32 0) #8
  %15 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %102

18:                                               ; preds = %12
  %19 = icmp ult %"class.blink::CSSParserToken"* %1, %2
  %20 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  %21 = select i1 %19, %"class.blink::CSSParserToken"* %1, %"class.blink::CSSParserToken"* %20
  %22 = bitcast %"class.blink::CSSParserToken"* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 63
  %25 = icmp eq i32 %24, 17
  br i1 %25, label %26, label %35

26:                                               ; preds = %18, %26
  %27 = phi %"class.blink::CSSParserToken"* [ %28, %26 ], [ %1, %18 ]
  %28 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %27, i64 1
  %29 = icmp ult %"class.blink::CSSParserToken"* %28, %2
  %30 = select i1 %29, %"class.blink::CSSParserToken"* %28, %"class.blink::CSSParserToken"* %20
  %31 = bitcast %"class.blink::CSSParserToken"* %30 to i32*
  %32 = load i32, i32* %31, align 8
  %33 = and i32 %32, 63
  %34 = icmp eq i32 %33, 17
  br i1 %34, label %26, label %35

35:                                               ; preds = %26, %18
  %36 = phi %"class.blink::CSSParserToken"* [ %1, %18 ], [ %28, %26 ]
  %37 = icmp eq %"class.blink::CSSParserToken"* %36, %2
  %38 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %36, i64 1
  %39 = select i1 %37, %"class.blink::CSSParserToken"* %36, %"class.blink::CSSParserToken"* %38
  %40 = select i1 %37, %"class.blink::CSSParserToken"* %20, %"class.blink::CSSParserToken"* %36
  %41 = icmp ult %"class.blink::CSSParserToken"* %39, %2
  %42 = select i1 %41, %"class.blink::CSSParserToken"* %39, %"class.blink::CSSParserToken"* %20
  %43 = bitcast %"class.blink::CSSParserToken"* %42 to i32*
  %44 = load i32, i32* %43, align 8
  %45 = and i32 %44, 63
  %46 = icmp eq i32 %45, 17
  br i1 %46, label %47, label %56

47:                                               ; preds = %35, %47
  %48 = phi %"class.blink::CSSParserToken"* [ %49, %47 ], [ %39, %35 ]
  %49 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %48, i64 1
  %50 = icmp ult %"class.blink::CSSParserToken"* %49, %2
  %51 = select i1 %50, %"class.blink::CSSParserToken"* %49, %"class.blink::CSSParserToken"* %20
  %52 = bitcast %"class.blink::CSSParserToken"* %51 to i32*
  %53 = load i32, i32* %52, align 8
  %54 = and i32 %53, 63
  %55 = icmp eq i32 %54, 17
  br i1 %55, label %47, label %56

56:                                               ; preds = %47, %35
  %57 = phi %"class.blink::CSSParserToken"* [ %39, %35 ], [ %49, %47 ]
  %58 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #8
  %59 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #8
  %60 = bitcast %"class.blink::CSSParserToken"* %40 to i32*
  %61 = load i32, i32* %60, align 8
  %62 = and i32 %61, 63
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %65, label %64

64:                                               ; preds = %56
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #8
  br label %99

65:                                               ; preds = %56
  %66 = and i32 %61, 262144
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %40, i64 0, i32 2
  %69 = bitcast i8** %68 to i64*
  %70 = load i64, i64* %69, align 8, !noalias !2
  %71 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %40, i64 0, i32 1
  %72 = load i32, i32* %71, align 4, !noalias !2
  %73 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %74 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %75 = select i1 %67, i64 %73, i64 %74
  %76 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %75, i64* %76, align 8, !alias.scope !2
  %77 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %78 = bitcast i8** %77 to i64*
  store i64 %70, i64* %78, align 8, !alias.scope !2
  %79 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %72, i32* %79, align 8, !alias.scope !2
  %80 = tail call zeroext i1 @_ZN5blink17css_parsing_utils15IsRevertKeywordEN3WTF10StringViewE(%"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %7) #8
  br i1 %80, label %81, label %83

81:                                               ; preds = %65
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #8
  %82 = icmp eq %"class.blink::CSSParserToken"* %57, %2
  br i1 %82, label %242, label %99

83:                                               ; preds = %65
  %84 = load i32, i32* %60, align 8, !noalias !5
  %85 = and i32 %84, 262144
  %86 = icmp eq i32 %85, 0
  %87 = load i64, i64* %69, align 8, !noalias !5
  %88 = load i32, i32* %71, align 4, !noalias !5
  %89 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %90 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %91 = select i1 %86, i64 %89, i64 %90
  %92 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %91, i64* %92, align 8, !alias.scope !5
  %93 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %94 = bitcast i8** %93 to i64*
  store i64 %87, i64* %94, align 8, !alias.scope !5
  %95 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %88, i32* %95, align 8, !alias.scope !5
  %96 = tail call zeroext i1 @_ZN5blink17css_parsing_utils16IsDefaultKeywordEN3WTF10StringViewE(%"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %8) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #8
  %97 = icmp eq %"class.blink::CSSParserToken"* %57, %2
  %98 = and i1 %97, %96
  br i1 %98, label %242, label %99

99:                                               ; preds = %64, %83, %81
  %100 = tail call %"class.blink::CSSVariableReferenceValue"* @_ZN5blink17CSSVariableParser28ParseRegisteredPropertyValueENS_19CSSParserTokenRangeERKNS_16CSSParserContextEbb(%"class.blink::CSSParserToken"* %1, %"class.blink::CSSParserToken"* %2, %"class.blink::CSSParserContext"* dereferenceable(176) %3, i1 zeroext false, i1 zeroext %4) #8
  %101 = getelementptr inbounds %"class.blink::CSSVariableReferenceValue", %"class.blink::CSSVariableReferenceValue"* %100, i64 0, i32 0
  br label %242

102:                                              ; preds = %5, %12
  %103 = icmp ult %"class.blink::CSSParserToken"* %1, %2
  %104 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  %105 = select i1 %103, %"class.blink::CSSParserToken"* %1, %"class.blink::CSSParserToken"* %104
  %106 = bitcast %"class.blink::CSSParserToken"* %105 to i32*
  %107 = load i32, i32* %106, align 8
  %108 = and i32 %107, 63
  %109 = icmp eq i32 %108, 17
  br i1 %109, label %110, label %119

110:                                              ; preds = %102, %110
  %111 = phi %"class.blink::CSSParserToken"* [ %112, %110 ], [ %1, %102 ]
  %112 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %111, i64 1
  %113 = icmp ult %"class.blink::CSSParserToken"* %112, %2
  %114 = select i1 %113, %"class.blink::CSSParserToken"* %112, %"class.blink::CSSParserToken"* %104
  %115 = bitcast %"class.blink::CSSParserToken"* %114 to i32*
  %116 = load i32, i32* %115, align 8
  %117 = and i32 %116, 63
  %118 = icmp eq i32 %117, 17
  br i1 %118, label %110, label %119

119:                                              ; preds = %110, %102
  %120 = phi %"class.blink::CSSParserToken"* [ %1, %102 ], [ %112, %110 ]
  %121 = getelementptr inbounds %"class.blink::CSSSyntaxDefinition", %"class.blink::CSSSyntaxDefinition"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %122 = load %"class.blink::CSSSyntaxComponent"*, %"class.blink::CSSSyntaxComponent"** %121, align 8
  %123 = load i32, i32* %9, align 4
  %124 = zext i32 %123 to i64
  %125 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %122, i64 %124
  %126 = icmp eq i32 %123, 0
  br i1 %126, label %239, label %127

127:                                              ; preds = %119
  %128 = bitcast %"class.blink::CSSParserTokenRange"* %6 to i8*
  %129 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %6, i64 0, i32 0
  %130 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %6, i64 0, i32 1
  br label %131

131:                                              ; preds = %127, %236
  %132 = phi %"class.blink::CSSSyntaxComponent"* [ %122, %127 ], [ %237, %236 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %128)
  store %"class.blink::CSSParserToken"* %120, %"class.blink::CSSParserToken"** %129, align 8
  store %"class.blink::CSSParserToken"* %2, %"class.blink::CSSParserToken"** %130, align 8
  %133 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %132, i64 0, i32 3
  %134 = load i32, i32* %133, align 8
  switch i32 %134, label %220 [
    i32 1, label %135
    i32 2, label %182
  ]

135:                                              ; preds = %131
  %136 = call i8* @_ZN5blink8CSSValue14AllocateObjectINS_12CSSValueListEEEPvm(i64 56) #8
  %137 = bitcast i8* %136 to %"class.blink::CSSValueList"*
  call void @_ZN5blink12CSSValueListC1ENS_8CSSValue18ValueListSeparatorE(%"class.blink::CSSValueList"* %137, i32 0) #8
  %138 = getelementptr inbounds i8, i8* %136, i64 -4
  %139 = bitcast i8* %138 to i16*
  %140 = load atomic i16, i16* %139 monotonic, align 2
  %141 = or i16 %140, 1
  store atomic i16 %141, i16* %139 release, align 2
  %142 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %129, align 8
  %143 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %130, align 8
  %144 = icmp eq %"class.blink::CSSParserToken"* %142, %143
  br i1 %144, label %179, label %145

145:                                              ; preds = %135
  %146 = getelementptr inbounds i8, i8* %136, i64 8
  %147 = getelementptr inbounds i8, i8* %136, i64 20
  %148 = bitcast i8* %147 to i32*
  %149 = getelementptr inbounds i8, i8* %136, i64 16
  %150 = bitcast i8* %149 to i32*
  %151 = bitcast i8* %146 to %"class.blink::Member.217"**
  %152 = bitcast i8* %146 to %"class.WTF::Vector.214"*
  br label %153

153:                                              ; preds = %175, %145
  %154 = call fastcc %"class.blink::CSSValue"* @_ZN5blink12_GLOBAL__N_117ConsumeSingleTypeERKNS_18CSSSyntaxComponentERNS_19CSSParserTokenRangeERKNS_16CSSParserContextE(%"class.blink::CSSSyntaxComponent"* dereferenceable(24) %132, %"class.blink::CSSParserTokenRange"* nonnull dereferenceable(16) %6, %"class.blink::CSSParserContext"* dereferenceable(176) %3) #8
  %155 = icmp eq %"class.blink::CSSValue"* %154, null
  br i1 %155, label %225, label %156

156:                                              ; preds = %153
  %157 = load i32, i32* %148, align 4
  %158 = load i32, i32* %150, align 8
  %159 = icmp eq i32 %157, %158
  br i1 %159, label %174, label %160, !prof !8

160:                                              ; preds = %156
  %161 = load %"class.blink::Member.217"*, %"class.blink::Member.217"** %151, align 8
  %162 = zext i32 %157 to i64
  %163 = getelementptr inbounds %"class.blink::Member.217", %"class.blink::Member.217"* %161, i64 %162
  %164 = ptrtoint %"class.blink::CSSValue"* %154 to i64
  %165 = bitcast %"class.blink::Member.217"* %163 to i64*
  store atomic i64 %164, i64* %165 monotonic, align 8
  %166 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %171, label %168

168:                                              ; preds = %160
  %169 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %154, i64 0, i32 0
  %170 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %169) #8
  br label %171

171:                                              ; preds = %168, %160
  %172 = load i32, i32* %148, align 4
  %173 = add i32 %172, 1
  store i32 %173, i32* %148, align 4
  br label %175

174:                                              ; preds = %156
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.214"* %152, %"class.blink::CSSValue"* nonnull dereferenceable(3) %154) #8
  br label %175

175:                                              ; preds = %174, %171
  %176 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %129, align 8
  %177 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %130, align 8
  %178 = icmp eq %"class.blink::CSSParserToken"* %176, %177
  br i1 %178, label %179, label %153

179:                                              ; preds = %175, %135
  %180 = getelementptr inbounds i8, i8* %136, i64 20
  %181 = bitcast i8* %180 to i32*
  br label %226

182:                                              ; preds = %131
  %183 = call i8* @_ZN5blink8CSSValue14AllocateObjectINS_12CSSValueListEEEPvm(i64 56) #8
  %184 = bitcast i8* %183 to %"class.blink::CSSValueList"*
  call void @_ZN5blink12CSSValueListC1ENS_8CSSValue18ValueListSeparatorE(%"class.blink::CSSValueList"* %184, i32 1) #8
  %185 = getelementptr inbounds i8, i8* %183, i64 -4
  %186 = bitcast i8* %185 to i16*
  %187 = load atomic i16, i16* %186 monotonic, align 2
  %188 = or i16 %187, 1
  store atomic i16 %188, i16* %186 release, align 2
  %189 = getelementptr inbounds i8, i8* %183, i64 8
  %190 = getelementptr inbounds i8, i8* %183, i64 20
  %191 = bitcast i8* %190 to i32*
  %192 = getelementptr inbounds i8, i8* %183, i64 16
  %193 = bitcast i8* %192 to i32*
  %194 = bitcast i8* %189 to %"class.blink::Member.217"**
  %195 = bitcast i8* %189 to %"class.WTF::Vector.214"*
  br label %196

196:                                              ; preds = %218, %182
  %197 = call fastcc %"class.blink::CSSValue"* @_ZN5blink12_GLOBAL__N_117ConsumeSingleTypeERKNS_18CSSSyntaxComponentERNS_19CSSParserTokenRangeERKNS_16CSSParserContextE(%"class.blink::CSSSyntaxComponent"* dereferenceable(24) %132, %"class.blink::CSSParserTokenRange"* nonnull dereferenceable(16) %6, %"class.blink::CSSParserContext"* dereferenceable(176) %3) #8
  %198 = icmp eq %"class.blink::CSSValue"* %197, null
  br i1 %198, label %225, label %199

199:                                              ; preds = %196
  %200 = load i32, i32* %191, align 4
  %201 = load i32, i32* %193, align 8
  %202 = icmp eq i32 %200, %201
  br i1 %202, label %217, label %203, !prof !8

203:                                              ; preds = %199
  %204 = load %"class.blink::Member.217"*, %"class.blink::Member.217"** %194, align 8
  %205 = zext i32 %200 to i64
  %206 = getelementptr inbounds %"class.blink::Member.217", %"class.blink::Member.217"* %204, i64 %205
  %207 = ptrtoint %"class.blink::CSSValue"* %197 to i64
  %208 = bitcast %"class.blink::Member.217"* %206 to i64*
  store atomic i64 %207, i64* %208 monotonic, align 8
  %209 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %214, label %211

211:                                              ; preds = %203
  %212 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %197, i64 0, i32 0
  %213 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %212) #8
  br label %214

214:                                              ; preds = %211, %203
  %215 = load i32, i32* %191, align 4
  %216 = add i32 %215, 1
  store i32 %216, i32* %191, align 4
  br label %218

217:                                              ; preds = %199
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.214"* %195, %"class.blink::CSSValue"* nonnull dereferenceable(3) %197) #8
  br label %218

218:                                              ; preds = %217, %214
  %219 = call zeroext i1 @_ZN5blink17css_parsing_utils31ConsumeCommaIncludingWhitespaceERNS_19CSSParserTokenRangeE(%"class.blink::CSSParserTokenRange"* nonnull dereferenceable(16) %6) #8
  br i1 %219, label %196, label %226

220:                                              ; preds = %131
  %221 = call fastcc %"class.blink::CSSValue"* @_ZN5blink12_GLOBAL__N_117ConsumeSingleTypeERKNS_18CSSSyntaxComponentERNS_19CSSParserTokenRangeERKNS_16CSSParserContextE(%"class.blink::CSSSyntaxComponent"* dereferenceable(24) %132, %"class.blink::CSSParserTokenRange"* nonnull dereferenceable(16) %6, %"class.blink::CSSParserContext"* dereferenceable(176) %3) #8
  %222 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %129, align 8
  %223 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %130, align 8
  %224 = icmp eq %"class.blink::CSSParserToken"* %222, %223
  br i1 %224, label %233, label %225

225:                                              ; preds = %196, %153, %220
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %128)
  br label %236

226:                                              ; preds = %218, %179
  %227 = phi i32* [ %181, %179 ], [ %191, %218 ]
  %228 = phi %"class.blink::CSSValueList"* [ %137, %179 ], [ %184, %218 ]
  %229 = load i32, i32* %227, align 4
  %230 = icmp eq i32 %229, 0
  %231 = select i1 %230, %"class.blink::CSSValueList"* null, %"class.blink::CSSValueList"* %228
  %232 = getelementptr inbounds %"class.blink::CSSValueList", %"class.blink::CSSValueList"* %231, i64 0, i32 0
  br label %233

233:                                              ; preds = %226, %220
  %234 = phi %"class.blink::CSSValue"* [ %221, %220 ], [ %232, %226 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %128)
  %235 = icmp eq %"class.blink::CSSValue"* %234, null
  br i1 %235, label %236, label %242

236:                                              ; preds = %225, %233
  %237 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %132, i64 1
  %238 = icmp eq %"class.blink::CSSSyntaxComponent"* %237, %125
  br i1 %238, label %239, label %131

239:                                              ; preds = %236, %119
  %240 = call %"class.blink::CSSVariableReferenceValue"* @_ZN5blink17CSSVariableParser28ParseRegisteredPropertyValueENS_19CSSParserTokenRangeERKNS_16CSSParserContextEbb(%"class.blink::CSSParserToken"* %120, %"class.blink::CSSParserToken"* %2, %"class.blink::CSSParserContext"* dereferenceable(176) %3, i1 zeroext true, i1 zeroext %4) #8
  %241 = getelementptr inbounds %"class.blink::CSSVariableReferenceValue", %"class.blink::CSSVariableReferenceValue"* %240, i64 0, i32 0
  br label %242

242:                                              ; preds = %233, %83, %81, %239, %99
  %243 = phi %"class.blink::CSSValue"* [ %101, %99 ], [ %241, %239 ], [ null, %81 ], [ null, %83 ], [ %234, %233 ]
  ret %"class.blink::CSSValue"* %243
}

declare %"class.blink::CSSVariableReferenceValue"* @_ZN5blink17CSSVariableParser28ParseRegisteredPropertyValueENS_19CSSParserTokenRangeERKNS_16CSSParserContextEbb(%"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserContext"* dereferenceable(176), i1 zeroext, i1 zeroext) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink19CSSSyntaxDefinition12IsolatedCopyEv(%"class.blink::CSSSyntaxDefinition"* noalias nocapture sret, %"class.blink::CSSSyntaxDefinition"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::Vector", align 8
  %4 = alloca %"class.blink::CSSSyntaxComponent", align 8
  %5 = bitcast %"class.WTF::Vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false) #8
  %9 = getelementptr inbounds %"class.blink::CSSSyntaxDefinition", %"class.blink::CSSSyntaxDefinition"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %26, label %12, !prof !8

12:                                               ; preds = %2
  %13 = zext i32 %10 to i64
  %14 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18CSSSyntaxComponentEEEmm(i64 %13) #8
  %15 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %14, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18CSSSyntaxComponentEEEPKcv, i64 0, i64 0)) #8
  %16 = ptrtoint i8* %15 to i64
  %17 = bitcast %"class.WTF::Vector"* %3 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = udiv i64 %14, 24
  %19 = trunc i64 %18 to i32
  store i32 %19, i32* %7, align 8
  %20 = load i32, i32* %9, align 4
  %21 = getelementptr inbounds %"class.blink::CSSSyntaxDefinition", %"class.blink::CSSSyntaxDefinition"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"class.blink::CSSSyntaxComponent"*, %"class.blink::CSSSyntaxComponent"** %21, align 8
  %23 = zext i32 %20 to i64
  %24 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %22, i64 %23
  %25 = icmp eq i32 %20, 0
  br i1 %25, label %26, label %30

26:                                               ; preds = %2, %12
  %27 = phi i64 [ %16, %12 ], [ 0, %2 ]
  %28 = phi i32 [ %19, %12 ], [ 0, %2 ]
  %29 = bitcast %"class.WTF::Vector"* %3 to i64*
  br label %43

30:                                               ; preds = %12
  %31 = bitcast %"class.blink::CSSSyntaxComponent"* %4 to i8*
  %32 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %4, i64 0, i32 0
  %33 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %4, i64 0, i32 2, i32 0, i32 0
  %34 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %4, i64 0, i32 3
  %35 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %4, i64 0, i32 2
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 0, i32 0, i32 0
  %37 = bitcast %"class.WTF::String"* %35 to i64*
  br label %51

38:                                               ; preds = %124
  %39 = bitcast %"class.WTF::Vector"* %3 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = load i32, i32* %7, align 8
  %42 = load i32, i32* %8, align 4
  br label %43

43:                                               ; preds = %38, %26
  %44 = phi i64* [ %29, %26 ], [ %39, %38 ]
  %45 = phi i32 [ 0, %26 ], [ %42, %38 ]
  %46 = phi i32 [ %28, %26 ], [ %41, %38 ]
  %47 = phi i64 [ %27, %26 ], [ %40, %38 ]
  store atomic i64 0, i64* %44 monotonic, align 8
  store i32 0, i32* %7, align 8
  store i32 0, i32* %8, align 4
  %48 = getelementptr inbounds %"class.blink::CSSSyntaxDefinition", %"class.blink::CSSSyntaxDefinition"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %49 = getelementptr inbounds %"class.blink::CSSSyntaxDefinition", %"class.blink::CSSSyntaxDefinition"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %50 = bitcast %"class.blink::CSSSyntaxDefinition"* %0 to i64*
  store atomic i64 %47, i64* %50 monotonic, align 8
  store i32 %46, i32* %48, align 8
  store i32 %45, i32* %49, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #8
  ret void

51:                                               ; preds = %30, %124
  %52 = phi %"class.blink::CSSSyntaxComponent"* [ %22, %30 ], [ %125, %124 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #8
  %53 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %52, i64 0, i32 0
  %54 = load i32, i32* %53, align 8
  %55 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %52, i64 0, i32 2
  %56 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"* %55) #8
  %57 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %52, i64 0, i32 3
  %58 = load i32, i32* %57, align 8
  store i32 %54, i32* %32, align 8
  store %"class.WTF::StringImpl"* %56, %"class.WTF::StringImpl"** %33, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %59, label %77, label %60

60:                                               ; preds = %51
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %77

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = zext i32 %67 to i33
  %69 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %68, i33 1) #8
  %70 = extractvalue { i33, i1 } %69, 1
  %71 = extractvalue { i33, i1 } %69, 0
  %72 = icmp slt i33 %71, 0
  %73 = or i1 %70, %72
  br i1 %73, label %74, label %75, !prof !8

74:                                               ; preds = %65
  call void @llvm.trap() #8
  unreachable

75:                                               ; preds = %65
  %76 = trunc i33 %71 to i32
  store i32 %76, i32* %66, align 4
  br label %77

77:                                               ; preds = %51, %60, %75
  store i32 %58, i32* %34, align 8
  %78 = load i32, i32* %8, align 4
  %79 = load i32, i32* %7, align 8
  %80 = icmp eq i32 %78, %79
  br i1 %80, label %93, label %81, !prof !8

81:                                               ; preds = %77
  %82 = load %"class.blink::CSSSyntaxComponent"*, %"class.blink::CSSSyntaxComponent"** %6, align 8
  %83 = zext i32 %78 to i64
  %84 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %82, i64 %83, i32 0
  %85 = load i32, i32* %32, align 8
  store i32 %85, i32* %84, align 8
  %86 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %82, i64 %83, i32 2
  %87 = load i64, i64* %37, align 8
  %88 = bitcast %"class.WTF::String"* %86 to i64*
  store i64 %87, i64* %88, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %36, align 8
  %89 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %82, i64 %83, i32 3
  %90 = load i32, i32* %34, align 8
  store i32 %90, i32* %89, align 8
  %91 = load i32, i32* %8, align 4
  %92 = add i32 %91, 1
  store i32 %92, i32* %8, align 4
  br label %94

93:                                               ; preds = %77
  call void @_ZN3WTF6VectorIN5blink18CSSSyntaxComponentELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector"* nonnull %3, %"class.blink::CSSSyntaxComponent"* nonnull dereferenceable(24) %4) #8
  br label %94

94:                                               ; preds = %81, %93
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %96, label %110, label %97

97:                                               ; preds = %94
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  br i1 %101, label %104, label %106

104:                                              ; preds = %97
  %105 = add i32 %103, -1
  store i32 %105, i32* %102, align 4
  br label %106

106:                                              ; preds = %104, %97
  %107 = phi i32 [ %105, %104 ], [ %103, %97 ]
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %106
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %95) #8
  br label %110

110:                                              ; preds = %94, %106, %109
  br i1 %59, label %124, label %111

111:                                              ; preds = %110
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %120

118:                                              ; preds = %111
  %119 = add i32 %117, -1
  store i32 %119, i32* %116, align 4
  br label %120

120:                                              ; preds = %118, %111
  %121 = phi i32 [ %119, %118 ], [ %117, %111 ]
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %120
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %56) #8
  br label %124

124:                                              ; preds = %110, %120, %123
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #8
  %125 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %52, i64 1
  %126 = icmp eq %"class.blink::CSSSyntaxComponent"* %125, %24
  br i1 %126, label %38, label %51
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19CSSSyntaxDefinitionC2EN3WTF6VectorINS_18CSSSyntaxComponentELj0ENS1_18PartitionAllocatorEEE(%"class.blink::CSSSyntaxDefinition"* nocapture, %"class.WTF::Vector"* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSSyntaxDefinition", %"class.blink::CSSSyntaxDefinition"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.blink::CSSSyntaxDefinition", %"class.blink::CSSSyntaxDefinition"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %5 = bitcast %"class.WTF::Vector"* %1 to i64*
  %6 = bitcast %"class.blink::CSSSyntaxDefinition"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #8
  %7 = load i64, i64* %5, align 8
  %8 = bitcast %"class.blink::CSSSyntaxDefinition"* %0 to i64*
  store atomic i64 0, i64* %5 monotonic, align 8
  store atomic i64 %7, i64* %8 monotonic, align 8
  %9 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 1
  %10 = load i32, i32* %3, align 4
  %11 = load i32, i32* %9, align 4
  store i32 %11, i32* %3, align 4
  store i32 %10, i32* %9, align 4
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %4, align 4
  %14 = load i32, i32* %12, align 4
  store i32 %14, i32* %4, align 4
  store i32 %13, i32* %12, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19CSSSyntaxDefinition15CreateUniversalEv(%"class.blink::CSSSyntaxDefinition"* noalias nocapture sret) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::Vector", align 8
  %3 = alloca %"class.blink::CSSSyntaxComponent", align 8
  %4 = bitcast %"class.WTF::Vector"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #8
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 16, i1 false) #8
  %8 = bitcast %"class.blink::CSSSyntaxComponent"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #8
  %9 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %10 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %3, i64 0, i32 0
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %3, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %13, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %14, label %30, label %15

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %30

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #8
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %32, !prof !8

29:                                               ; preds = %20
  tail call void @llvm.trap() #8
  unreachable

30:                                               ; preds = %1, %15
  %31 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %3, i64 0, i32 3
  store i32 0, i32* %31, align 8
  br label %53

32:                                               ; preds = %20
  %33 = trunc i33 %26 to i32
  store i32 %33, i32* %21, align 4
  %34 = load i32, i32* %7, align 4
  %35 = load i32, i32* %6, align 8
  %36 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %3, i64 0, i32 3
  store i32 0, i32* %36, align 8
  %37 = icmp eq i32 %34, %35
  br i1 %37, label %53, label %38, !prof !8

38:                                               ; preds = %32
  %39 = load %"class.blink::CSSSyntaxComponent"*, %"class.blink::CSSSyntaxComponent"** %5, align 8
  %40 = zext i32 %34 to i64
  %41 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %39, i64 %40, i32 0
  %42 = load i32, i32* %10, align 8
  store i32 %42, i32* %41, align 8
  %43 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %39, i64 %40, i32 2
  %44 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %3, i64 0, i32 2
  %45 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %44, i64 0, i32 0, i32 0
  %46 = bitcast %"class.WTF::String"* %44 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.WTF::String"* %43 to i64*
  store i64 %47, i64* %48, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %45, align 8
  %49 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %39, i64 %40, i32 3
  %50 = load i32, i32* %36, align 8
  store i32 %50, i32* %49, align 8
  %51 = load i32, i32* %7, align 4
  %52 = add i32 %51, 1
  store i32 %52, i32* %7, align 4
  br label %54

53:                                               ; preds = %30, %32
  call void @_ZN3WTF6VectorIN5blink18CSSSyntaxComponentELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector"* nonnull %2, %"class.blink::CSSSyntaxComponent"* nonnull dereferenceable(24) %3) #8
  br label %54

54:                                               ; preds = %38, %53
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #8
  br label %70

70:                                               ; preds = %69, %66, %54
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #8
  %71 = bitcast %"class.WTF::Vector"* %2 to i64*
  %72 = load i64, i64* %71, align 8
  store atomic i64 0, i64* %71 monotonic, align 8
  %73 = load i32, i32* %6, align 8
  store i32 0, i32* %6, align 8
  %74 = load i32, i32* %7, align 4
  store i32 0, i32* %7, align 4
  %75 = getelementptr inbounds %"class.blink::CSSSyntaxDefinition", %"class.blink::CSSSyntaxDefinition"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %76 = getelementptr inbounds %"class.blink::CSSSyntaxDefinition", %"class.blink::CSSSyntaxDefinition"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %77 = bitcast %"class.blink::CSSSyntaxDefinition"* %0 to i64*
  store atomic i64 %72, i64* %77 monotonic, align 8
  store i32 %73, i32* %75, align 8
  store i32 %74, i32* %76, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.blink::CSSSyntaxComponent"* @_ZNK3WTF6VectorIN5blink18CSSSyntaxComponentELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #8
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::CSSSyntaxComponent"*, %"class.blink::CSSSyntaxComponent"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %24, i64 %25
  ret %"class.blink::CSSSyntaxComponent"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare zeroext i1 @_ZN5blink17css_parsing_utils15IsRevertKeywordEN3WTF10StringViewE(%"class.WTF::StringView"* byval(%"class.WTF::StringView") align 8) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink17css_parsing_utils16IsDefaultKeywordEN3WTF10StringViewE(%"class.WTF::StringView"* byval(%"class.WTF::StringView") align 8) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::CSSValue"* @_ZN5blink12_GLOBAL__N_117ConsumeSingleTypeERKNS_18CSSSyntaxComponentERNS_19CSSParserTokenRangeERKNS_16CSSParserContextE(%"class.blink::CSSSyntaxComponent"* nocapture readonly dereferenceable(24), %"class.blink::CSSParserTokenRange"* dereferenceable(16), %"class.blink::CSSParserContext"* dereferenceable(176)) unnamed_addr #0 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::AtomicString", align 8
  %9 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %0, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  switch i32 %10, label %233 [
    i32 1, label %11
    i32 2, label %137
    i32 3, label %144
    i32 4, label %147
    i32 5, label %150
    i32 6, label %157
    i32 7, label %163
    i32 8, label %165
    i32 9, label %168
    i32 10, label %171
    i32 11, label %174
    i32 12, label %177
    i32 13, label %180
    i32 14, label %182
    i32 15, label %184
  ]

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %1, i64 0, i32 0
  %13 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %1, i64 0, i32 1
  %15 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %14, align 8
  %16 = icmp ult %"class.blink::CSSParserToken"* %13, %15
  %17 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  %18 = select i1 %16, %"class.blink::CSSParserToken"* %13, %"class.blink::CSSParserToken"* %17
  %19 = bitcast %"class.blink::CSSParserToken"* %18 to i32*
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, 63
  %22 = icmp eq i32 %21, 0
  %23 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #8
  %24 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #8
  br i1 %22, label %25, label %136

25:                                               ; preds = %11
  %26 = and i32 %20, 262144
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %18, i64 0, i32 2
  %29 = bitcast i8** %28 to i64*
  %30 = load i64, i64* %29, align 8, !noalias !9
  %31 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %18, i64 0, i32 1
  %32 = load i32, i32* %31, align 4, !noalias !9
  %33 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %35 = select i1 %27, i64 %33, i64 %34
  %36 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %35, i64* %36, align 8, !alias.scope !9
  %37 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %38 = bitcast i8** %37 to i64*
  store i64 %30, i64* %38, align 8, !alias.scope !9
  %39 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %32, i32* %39, align 8, !alias.scope !9
  %40 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %0, i64 0, i32 2, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %43, label %47

43:                                               ; preds = %25
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %44, align 8
  %45 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %46 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %45, i64* %46, align 8
  br label %54

47:                                               ; preds = %25
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %41, %"class.WTF::StringImpl"** %48, align 8
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 1
  %52 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %53 = bitcast i8** %52 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %51, %"class.WTF::StringImpl"** %53, align 8
  br label %54

54:                                               ; preds = %43, %47
  %55 = phi i32 [ %50, %47 ], [ 0, %43 ]
  %56 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %55, i32* %56, align 8
  %57 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #8
  br i1 %57, label %58, label %233

58:                                               ; preds = %54
  %59 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %12, align 8
  %60 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %14, align 8
  %61 = icmp eq %"class.blink::CSSParserToken"* %59, %60
  br i1 %61, label %64, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %59, i64 1
  store %"class.blink::CSSParserToken"* %63, %"class.blink::CSSParserToken"** %12, align 8
  br label %64

64:                                               ; preds = %58, %62
  %65 = phi %"class.blink::CSSParserToken"* [ %63, %62 ], [ %59, %58 ]
  %66 = icmp ult %"class.blink::CSSParserToken"* %65, %60
  %67 = select i1 %66, %"class.blink::CSSParserToken"* %65, %"class.blink::CSSParserToken"* %17
  %68 = bitcast %"class.blink::CSSParserToken"* %67 to i32*
  %69 = load i32, i32* %68, align 8
  %70 = and i32 %69, 63
  %71 = icmp eq i32 %70, 17
  br i1 %71, label %72, label %81

72:                                               ; preds = %64, %72
  %73 = phi %"class.blink::CSSParserToken"* [ %74, %72 ], [ %65, %64 ]
  %74 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %73, i64 1
  store %"class.blink::CSSParserToken"* %74, %"class.blink::CSSParserToken"** %12, align 8
  %75 = icmp ult %"class.blink::CSSParserToken"* %74, %60
  %76 = select i1 %75, %"class.blink::CSSParserToken"* %74, %"class.blink::CSSParserToken"* %17
  %77 = bitcast %"class.blink::CSSParserToken"* %76 to i32*
  %78 = load i32, i32* %77, align 8
  %79 = and i32 %78, 63
  %80 = icmp eq i32 %79, 17
  br i1 %80, label %72, label %81

81:                                               ; preds = %72, %64
  %82 = bitcast %"class.WTF::AtomicString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #8
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %108, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load atomic i32, i32* %86 acquire, align 4
  %88 = and i32 %87, 4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %106, label %90

90:                                               ; preds = %85
  %91 = load atomic i32, i32* %86 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %108

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  %97 = zext i32 %96 to i33
  %98 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %97, i33 1) #8
  %99 = extractvalue { i33, i1 } %98, 1
  %100 = extractvalue { i33, i1 } %98, 0
  %101 = icmp slt i33 %100, 0
  %102 = or i1 %99, %101
  br i1 %102, label %103, label %104, !prof !8

103:                                              ; preds = %94
  call void @llvm.trap() #8
  unreachable

104:                                              ; preds = %94
  %105 = trunc i33 %100 to i32
  store i32 %105, i32* %95, align 4
  br label %108

106:                                              ; preds = %85
  %107 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %83) #8
  br label %108

108:                                              ; preds = %81, %90, %104, %106
  %109 = phi %"class.WTF::StringImpl"* [ %107, %106 ], [ %83, %90 ], [ %83, %104 ], [ null, %81 ]
  %110 = ptrtoint %"class.WTF::StringImpl"* %109 to i64
  %111 = bitcast %"class.WTF::AtomicString"* %8 to i64*
  store i64 %110, i64* %111, align 8
  %112 = call i8* @_ZN5blink8CSSValue14AllocateObjectINS_19CSSCustomIdentValueEEEPvm(i64 24) #8
  %113 = bitcast i8* %112 to %"class.blink::CSSCustomIdentValue"*
  call void @_ZN5blink19CSSCustomIdentValueC1ERKN3WTF12AtomicStringE(%"class.blink::CSSCustomIdentValue"* %113, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %8) #8
  %114 = getelementptr inbounds i8, i8* %112, i64 -4
  %115 = bitcast i8* %114 to i16*
  %116 = load atomic i16, i16* %115 monotonic, align 2
  %117 = or i16 %116, 1
  store atomic i16 %117, i16* %115 release, align 2
  %118 = bitcast i8* %112 to %"class.blink::CSSValue"*
  %119 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  %120 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %119, align 8
  %121 = icmp eq %"class.WTF::StringImpl"* %120, null
  br i1 %121, label %135, label %122

122:                                              ; preds = %108
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load atomic i32, i32* %123 monotonic, align 4
  %125 = and i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 0
  %128 = load i32, i32* %127, align 4
  br i1 %126, label %129, label %131

129:                                              ; preds = %122
  %130 = add i32 %128, -1
  store i32 %130, i32* %127, align 4
  br label %131

131:                                              ; preds = %129, %122
  %132 = phi i32 [ %130, %129 ], [ %128, %122 ]
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %135

134:                                              ; preds = %131
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %120) #8
  br label %135

135:                                              ; preds = %108, %131, %134
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #8
  br label %233

136:                                              ; preds = %11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #8
  br label %233

137:                                              ; preds = %3
  %138 = getelementptr inbounds %"class.blink::CSSParserContext", %"class.blink::CSSParserContext"* %2, i64 0, i32 3
  %139 = load i8, i8* %138, align 1
  store i8 0, i8* %138, align 1
  %140 = tail call %"class.blink::CSSPrimitiveValue"* @_ZN5blink17css_parsing_utils13ConsumeLengthERNS_19CSSParserTokenRangeERKNS_16CSSParserContextENS_10ValueRangeENS0_13UnitlessQuirkE(%"class.blink::CSSParserTokenRange"* dereferenceable(16) %1, %"class.blink::CSSParserContext"* dereferenceable(176) %2, i32 0, i32 1) #8
  %141 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %140, i64 0, i32 0
  %142 = icmp eq i8* %138, null
  br i1 %142, label %233, label %143

143:                                              ; preds = %137
  store i8 %139, i8* %138, align 1
  br label %233

144:                                              ; preds = %3
  %145 = tail call %"class.blink::CSSPrimitiveValue"* @_ZN5blink17css_parsing_utils13ConsumeNumberERNS_19CSSParserTokenRangeERKNS_16CSSParserContextENS_10ValueRangeE(%"class.blink::CSSParserTokenRange"* dereferenceable(16) %1, %"class.blink::CSSParserContext"* dereferenceable(176) %2, i32 0) #8
  %146 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %145, i64 0, i32 0
  br label %233

147:                                              ; preds = %3
  %148 = tail call %"class.blink::CSSPrimitiveValue"* @_ZN5blink17css_parsing_utils14ConsumePercentERNS_19CSSParserTokenRangeERKNS_16CSSParserContextENS_10ValueRangeE(%"class.blink::CSSParserTokenRange"* dereferenceable(16) %1, %"class.blink::CSSParserContext"* dereferenceable(176) %2, i32 0) #8
  %149 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %148, i64 0, i32 0
  br label %233

150:                                              ; preds = %3
  %151 = getelementptr inbounds %"class.blink::CSSParserContext", %"class.blink::CSSParserContext"* %2, i64 0, i32 3
  %152 = load i8, i8* %151, align 1
  store i8 0, i8* %151, align 1
  %153 = tail call %"class.blink::CSSPrimitiveValue"* @_ZN5blink17css_parsing_utils22ConsumeLengthOrPercentERNS_19CSSParserTokenRangeERKNS_16CSSParserContextENS_10ValueRangeENS0_13UnitlessQuirkE(%"class.blink::CSSParserTokenRange"* dereferenceable(16) %1, %"class.blink::CSSParserContext"* dereferenceable(176) %2, i32 0, i32 1) #8
  %154 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %153, i64 0, i32 0
  %155 = icmp eq i8* %151, null
  br i1 %155, label %233, label %156

156:                                              ; preds = %150
  store i8 %152, i8* %151, align 1
  br label %233

157:                                              ; preds = %3
  %158 = getelementptr inbounds %"class.blink::CSSParserContext", %"class.blink::CSSParserContext"* %2, i64 0, i32 3
  %159 = load i8, i8* %158, align 1
  store i8 0, i8* %158, align 1
  %160 = tail call %"class.blink::CSSValue"* @_ZN5blink17css_parsing_utils12ConsumeColorERNS_19CSSParserTokenRangeERKNS_16CSSParserContextEb(%"class.blink::CSSParserTokenRange"* dereferenceable(16) %1, %"class.blink::CSSParserContext"* dereferenceable(176) %2, i1 zeroext false) #8
  %161 = icmp eq i8* %158, null
  br i1 %161, label %233, label %162

162:                                              ; preds = %157
  store i8 %159, i8* %158, align 1
  br label %233

163:                                              ; preds = %3
  %164 = tail call %"class.blink::CSSValue"* @_ZN5blink17css_parsing_utils12ConsumeImageERNS_19CSSParserTokenRangeERKNS_16CSSParserContextENS0_27ConsumeGeneratedImagePolicyE(%"class.blink::CSSParserTokenRange"* dereferenceable(16) %1, %"class.blink::CSSParserContext"* dereferenceable(176) %2, i32 0) #8
  br label %233

165:                                              ; preds = %3
  %166 = tail call %"class.blink::cssvalue::CSSURIValue"* @_ZN5blink17css_parsing_utils10ConsumeUrlERNS_19CSSParserTokenRangeERKNS_16CSSParserContextE(%"class.blink::CSSParserTokenRange"* dereferenceable(16) %1, %"class.blink::CSSParserContext"* dereferenceable(176) %2) #8
  %167 = getelementptr inbounds %"class.blink::cssvalue::CSSURIValue", %"class.blink::cssvalue::CSSURIValue"* %166, i64 0, i32 0
  br label %233

168:                                              ; preds = %3
  %169 = tail call %"class.blink::CSSPrimitiveValue"* @_ZN5blink17css_parsing_utils26ConsumeIntegerOrNumberCalcERNS_19CSSParserTokenRangeERKNS_16CSSParserContextE(%"class.blink::CSSParserTokenRange"* dereferenceable(16) %1, %"class.blink::CSSParserContext"* dereferenceable(176) %2) #8
  %170 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %169, i64 0, i32 0
  br label %233

171:                                              ; preds = %3
  %172 = tail call %"class.blink::CSSPrimitiveValue"* @_ZN5blink17css_parsing_utils12ConsumeAngleERNS_19CSSParserTokenRangeERKNS_16CSSParserContextEN4absl8optionalINS_5mojom10WebFeatureEEE(%"class.blink::CSSParserTokenRange"* dereferenceable(16) %1, %"class.blink::CSSParserContext"* dereferenceable(176) %2, i64 0) #8
  %173 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %172, i64 0, i32 0
  br label %233

174:                                              ; preds = %3
  %175 = tail call %"class.blink::CSSPrimitiveValue"* @_ZN5blink17css_parsing_utils11ConsumeTimeERNS_19CSSParserTokenRangeERKNS_16CSSParserContextENS_10ValueRangeE(%"class.blink::CSSParserTokenRange"* dereferenceable(16) %1, %"class.blink::CSSParserContext"* dereferenceable(176) %2, i32 0) #8
  %176 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %175, i64 0, i32 0
  br label %233

177:                                              ; preds = %3
  %178 = tail call %"class.blink::CSSPrimitiveValue"* @_ZN5blink17css_parsing_utils17ConsumeResolutionERNS_19CSSParserTokenRangeE(%"class.blink::CSSParserTokenRange"* dereferenceable(16) %1) #8
  %179 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %178, i64 0, i32 0
  br label %233

180:                                              ; preds = %3
  %181 = tail call %"class.blink::CSSValue"* @_ZN5blink17css_parsing_utils21ConsumeTransformValueERNS_19CSSParserTokenRangeERKNS_16CSSParserContextE(%"class.blink::CSSParserTokenRange"* dereferenceable(16) %1, %"class.blink::CSSParserContext"* dereferenceable(176) %2) #8
  br label %233

182:                                              ; preds = %3
  %183 = tail call %"class.blink::CSSValue"* @_ZN5blink17css_parsing_utils20ConsumeTransformListERNS_19CSSParserTokenRangeERKNS_16CSSParserContextE(%"class.blink::CSSParserTokenRange"* dereferenceable(16) %1, %"class.blink::CSSParserContext"* dereferenceable(176) %2) #8
  br label %233

184:                                              ; preds = %3
  %185 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %1, i64 0, i32 0
  %186 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %185, align 8
  %187 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %1, i64 0, i32 1
  %188 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %187, align 8
  %189 = icmp ult %"class.blink::CSSParserToken"* %186, %188
  %190 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  %191 = select i1 %189, %"class.blink::CSSParserToken"* %186, %"class.blink::CSSParserToken"* %190
  %192 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %192)
  %193 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %193)
  %194 = bitcast %"class.blink::CSSParserToken"* %191 to i32*
  %195 = load i32, i32* %194, align 8
  %196 = and i32 %195, 63
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %199, label %198

198:                                              ; preds = %184
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %192)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %193)
  br label %230

199:                                              ; preds = %184
  %200 = and i32 %195, 262144
  %201 = icmp eq i32 %200, 0
  %202 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %191, i64 0, i32 2
  %203 = bitcast i8** %202 to i64*
  %204 = load i64, i64* %203, align 8, !noalias !12
  %205 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %191, i64 0, i32 1
  %206 = load i32, i32* %205, align 4, !noalias !12
  %207 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %208 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %209 = select i1 %201, i64 %207, i64 %208
  %210 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %209, i64* %210, align 8, !alias.scope !12
  %211 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %212 = bitcast i8** %211 to i64*
  store i64 %204, i64* %212, align 8, !alias.scope !12
  %213 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %206, i32* %213, align 8, !alias.scope !12
  %214 = tail call zeroext i1 @_ZN5blink17css_parsing_utils15IsRevertKeywordEN3WTF10StringViewE(%"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %4) #8
  br i1 %214, label %215, label %216

215:                                              ; preds = %199
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %192)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %193)
  br label %233

216:                                              ; preds = %199
  %217 = load i32, i32* %194, align 8, !noalias !15
  %218 = and i32 %217, 262144
  %219 = icmp eq i32 %218, 0
  %220 = load i64, i64* %203, align 8, !noalias !15
  %221 = load i32, i32* %205, align 4, !noalias !15
  %222 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %223 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %224 = select i1 %219, i64 %222, i64 %223
  %225 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %224, i64* %225, align 8, !alias.scope !15
  %226 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %227 = bitcast i8** %226 to i64*
  store i64 %220, i64* %227, align 8, !alias.scope !15
  %228 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %221, i32* %228, align 8, !alias.scope !15
  %229 = tail call zeroext i1 @_ZN5blink17css_parsing_utils16IsDefaultKeywordEN3WTF10StringViewE(%"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %5) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %192)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %193)
  br i1 %229, label %233, label %230

230:                                              ; preds = %198, %216
  %231 = tail call %"class.blink::CSSCustomIdentValue"* @_ZN5blink17css_parsing_utils18ConsumeCustomIdentERNS_19CSSParserTokenRangeERKNS_16CSSParserContextE(%"class.blink::CSSParserTokenRange"* dereferenceable(16) %1, %"class.blink::CSSParserContext"* dereferenceable(176) %2) #8
  %232 = getelementptr inbounds %"class.blink::CSSCustomIdentValue", %"class.blink::CSSCustomIdentValue"* %231, i64 0, i32 0
  br label %233

233:                                              ; preds = %215, %162, %157, %156, %150, %143, %137, %3, %216, %54, %136, %230, %182, %180, %177, %174, %171, %168, %165, %163, %147, %144, %135
  %234 = phi %"class.blink::CSSValue"* [ %232, %230 ], [ %183, %182 ], [ %181, %180 ], [ %179, %177 ], [ %176, %174 ], [ %173, %171 ], [ %170, %168 ], [ %167, %165 ], [ %164, %163 ], [ %149, %147 ], [ %146, %144 ], [ %118, %135 ], [ null, %136 ], [ null, %54 ], [ null, %216 ], [ null, %3 ], [ %141, %137 ], [ %141, %143 ], [ %154, %150 ], [ %154, %156 ], [ %160, %157 ], [ %160, %162 ], [ null, %215 ]
  ret %"class.blink::CSSValue"* %234
}

declare zeroext i1 @_ZN5blink17css_parsing_utils31ConsumeCommaIncludingWhitespaceERNS_19CSSParserTokenRangeE(%"class.blink::CSSParserTokenRange"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink8CSSValue14AllocateObjectINS_12CSSValueListEEEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !8

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 7, i32 %20, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0))
  ret i8* %21
}

declare void @_ZN5blink12CSSValueListC1ENS_8CSSValue18ValueListSeparatorE(%"class.blink::CSSValueList"*, i32) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #4 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #8
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* %21, i8* %22) #8
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.4, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #8
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #8
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #8
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !8

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #8
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSValue"*
  tail call void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::CSSValue"*
  tail call void @_ZN5blink8CSSValue30FinalizeGarbageCollectedObjectEv(%"class.blink::CSSValue"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZN5blink8CSSValue30FinalizeGarbageCollectedObjectEv(%"class.blink::CSSValue"*) local_unnamed_addr #1

declare %"class.blink::CSSPrimitiveValue"* @_ZN5blink17css_parsing_utils13ConsumeLengthERNS_19CSSParserTokenRangeERKNS_16CSSParserContextENS_10ValueRangeENS0_13UnitlessQuirkE(%"class.blink::CSSParserTokenRange"* dereferenceable(16), %"class.blink::CSSParserContext"* dereferenceable(176), i32, i32) local_unnamed_addr #1

declare %"class.blink::CSSPrimitiveValue"* @_ZN5blink17css_parsing_utils13ConsumeNumberERNS_19CSSParserTokenRangeERKNS_16CSSParserContextENS_10ValueRangeE(%"class.blink::CSSParserTokenRange"* dereferenceable(16), %"class.blink::CSSParserContext"* dereferenceable(176), i32) local_unnamed_addr #1

declare %"class.blink::CSSPrimitiveValue"* @_ZN5blink17css_parsing_utils14ConsumePercentERNS_19CSSParserTokenRangeERKNS_16CSSParserContextENS_10ValueRangeE(%"class.blink::CSSParserTokenRange"* dereferenceable(16), %"class.blink::CSSParserContext"* dereferenceable(176), i32) local_unnamed_addr #1

declare %"class.blink::CSSPrimitiveValue"* @_ZN5blink17css_parsing_utils22ConsumeLengthOrPercentERNS_19CSSParserTokenRangeERKNS_16CSSParserContextENS_10ValueRangeENS0_13UnitlessQuirkE(%"class.blink::CSSParserTokenRange"* dereferenceable(16), %"class.blink::CSSParserContext"* dereferenceable(176), i32, i32) local_unnamed_addr #1

declare %"class.blink::CSSValue"* @_ZN5blink17css_parsing_utils12ConsumeColorERNS_19CSSParserTokenRangeERKNS_16CSSParserContextEb(%"class.blink::CSSParserTokenRange"* dereferenceable(16), %"class.blink::CSSParserContext"* dereferenceable(176), i1 zeroext) local_unnamed_addr #1

declare %"class.blink::CSSValue"* @_ZN5blink17css_parsing_utils12ConsumeImageERNS_19CSSParserTokenRangeERKNS_16CSSParserContextENS0_27ConsumeGeneratedImagePolicyE(%"class.blink::CSSParserTokenRange"* dereferenceable(16), %"class.blink::CSSParserContext"* dereferenceable(176), i32) local_unnamed_addr #1

declare %"class.blink::cssvalue::CSSURIValue"* @_ZN5blink17css_parsing_utils10ConsumeUrlERNS_19CSSParserTokenRangeERKNS_16CSSParserContextE(%"class.blink::CSSParserTokenRange"* dereferenceable(16), %"class.blink::CSSParserContext"* dereferenceable(176)) local_unnamed_addr #1

declare %"class.blink::CSSPrimitiveValue"* @_ZN5blink17css_parsing_utils26ConsumeIntegerOrNumberCalcERNS_19CSSParserTokenRangeERKNS_16CSSParserContextE(%"class.blink::CSSParserTokenRange"* dereferenceable(16), %"class.blink::CSSParserContext"* dereferenceable(176)) local_unnamed_addr #1

declare %"class.blink::CSSPrimitiveValue"* @_ZN5blink17css_parsing_utils12ConsumeAngleERNS_19CSSParserTokenRangeERKNS_16CSSParserContextEN4absl8optionalINS_5mojom10WebFeatureEEE(%"class.blink::CSSParserTokenRange"* dereferenceable(16), %"class.blink::CSSParserContext"* dereferenceable(176), i64) local_unnamed_addr #1

declare %"class.blink::CSSPrimitiveValue"* @_ZN5blink17css_parsing_utils11ConsumeTimeERNS_19CSSParserTokenRangeERKNS_16CSSParserContextENS_10ValueRangeE(%"class.blink::CSSParserTokenRange"* dereferenceable(16), %"class.blink::CSSParserContext"* dereferenceable(176), i32) local_unnamed_addr #1

declare %"class.blink::CSSPrimitiveValue"* @_ZN5blink17css_parsing_utils17ConsumeResolutionERNS_19CSSParserTokenRangeE(%"class.blink::CSSParserTokenRange"* dereferenceable(16)) local_unnamed_addr #1

declare %"class.blink::CSSValue"* @_ZN5blink17css_parsing_utils21ConsumeTransformValueERNS_19CSSParserTokenRangeERKNS_16CSSParserContextE(%"class.blink::CSSParserTokenRange"* dereferenceable(16), %"class.blink::CSSParserContext"* dereferenceable(176)) local_unnamed_addr #1

declare %"class.blink::CSSValue"* @_ZN5blink17css_parsing_utils20ConsumeTransformListERNS_19CSSParserTokenRangeERKNS_16CSSParserContextE(%"class.blink::CSSParserTokenRange"* dereferenceable(16), %"class.blink::CSSParserContext"* dereferenceable(176)) local_unnamed_addr #1

declare %"class.blink::CSSCustomIdentValue"* @_ZN5blink17css_parsing_utils18ConsumeCustomIdentERNS_19CSSParserTokenRangeERKNS_16CSSParserContextE(%"class.blink::CSSParserTokenRange"* dereferenceable(16), %"class.blink::CSSParserContext"* dereferenceable(176)) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink8CSSValue14AllocateObjectINS_19CSSCustomIdentValueEEEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !8

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 7, i32 %20, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0))
  ret i8* %21
}

declare void @_ZN5blink19CSSCustomIdentValueC1ERKN3WTF12AtomicStringE(%"class.blink::CSSCustomIdentValue"*, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.214"*, %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.214"* %0, i32 %5) #8
  %6 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Member.217"*, %"class.blink::Member.217"** %6, align 8
  %8 = load i32, i32* %3, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::Member.217", %"class.blink::Member.217"* %7, i64 %9
  %11 = ptrtoint %"class.blink::CSSValue"* %1 to i64
  %12 = bitcast %"class.blink::Member.217"* %10 to i64*
  store atomic i64 %11, i64* %12 monotonic, align 8
  %13 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 0
  %17 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %16) #8
  br label %18

18:                                               ; preds = %2, %15
  %19 = load i32, i32* %3, align 4
  %20 = add i32 %19, 1
  store i32 %20, i32* %3, align 4
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.214"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #8
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6, i64 0, i64 0), i8* %15, i8* %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #8
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #8
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.214"* %0, i32 %27)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.214"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %75, !prof !18

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.217"*, %"class.blink::Member.217"** %8, align 8
  %10 = icmp eq %"class.blink::Member.217"* %9, null
  br i1 %10, label %11, label %30

11:                                               ; preds = %7
  %12 = icmp ugt i32 %1, 4
  br i1 %12, label %13, label %26

13:                                               ; preds = %11
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8CSSValueEEEEEmm(i64 %14) #8
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %16) #8
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = bitcast %"class.WTF::Vector.214"* %0 to i64*
  store atomic i64 %18, i64* %19 monotonic, align 8
  %20 = trunc i64 %16 to i32
  store i32 %20, i32* %4, align 8
  %21 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %75, label %23

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %25 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %24) #8
  br label %75

26:                                               ; preds = %11
  %27 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 1, i64 0
  %28 = ptrtoint i8* %27 to i64
  %29 = bitcast %"class.WTF::Vector.214"* %0 to i64*
  store atomic i64 %28, i64* %29 monotonic, align 8
  store i32 4, i32* %4, align 8
  br label %75

30:                                               ; preds = %7
  %31 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 1, i64 0
  %32 = bitcast i8* %31 to %"class.blink::Member.217"*
  %33 = icmp eq %"class.blink::Member.217"* %9, %32
  br i1 %33, label %49, label %34

34:                                               ; preds = %30
  %35 = icmp ult i32 %1, 5
  br i1 %35, label %41, label %36

36:                                               ; preds = %34
  %37 = zext i32 %1 to i64
  %38 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8CSSValueEEEEEmm(i64 %37) #8
  %39 = load %"class.blink::Member.217"*, %"class.blink::Member.217"** %8, align 8
  %40 = icmp eq %"class.blink::Member.217"* %39, null
  br i1 %40, label %49, label %41

41:                                               ; preds = %34, %36
  %42 = phi i64 [ %38, %36 ], [ 32, %34 ]
  %43 = phi %"class.blink::Member.217"* [ %39, %36 ], [ %9, %34 ]
  %44 = bitcast %"class.blink::Member.217"* %43 to i8*
  %45 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %44, i64 %42) #8
  br i1 %45, label %46, label %49

46:                                               ; preds = %41
  %47 = lshr i64 %42, 3
  %48 = trunc i64 %47 to i32
  store i32 %48, i32* %4, align 8
  br label %75

49:                                               ; preds = %30, %36, %41
  %50 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %51 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %50, i64 0, i32 1
  %52 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %51) #8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %54, label %56, !prof !8

54:                                               ; preds = %49
  %55 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %51, i8* %55) #8
  br label %56

56:                                               ; preds = %54, %49
  %57 = phi i8* [ %55, %54 ], [ %52, %49 ]
  %58 = bitcast i8* %57 to %"class.blink::ThreadState"**
  %59 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 6
  %61 = load i8, i8* %60, align 8, !range !19
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %67, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 16
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %71, label %67

67:                                               ; preds = %56, %63
  %68 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 13
  %69 = load i64, i64* %68, align 8
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %63, %67
  %72 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7, i64 0, i64 0)) #8
  %73 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #8
  br label %74

74:                                               ; preds = %67, %71
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.214"* %0, i32 %1)
  br label %75

75:                                               ; preds = %46, %26, %23, %13, %2, %74
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.214"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 5
  br i1 %3, label %4, label %43

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::Member.217"*, %"class.blink::Member.217"** %5, align 8
  %7 = icmp eq %"class.blink::Member.217"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::Member.217"*
  %10 = icmp eq %"class.blink::Member.217"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.214"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %15, align 8
  br label %102

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0
  %21 = ptrtoint i8* %8 to i64
  %22 = bitcast %"class.WTF::Vector.214"* %0 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %23, align 8
  %24 = icmp eq i8* %8, null
  %25 = bitcast %"class.blink::Member.217"* %6 to i8*
  %26 = shl nuw nsw i64 %19, 3
  br i1 %24, label %42, label %27, !prof !8

27:                                               ; preds = %16
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %8, i8* nonnull %25, i64 %26) #8
  %28 = icmp eq i32 %18, 0
  br i1 %28, label %42, label %29

29:                                               ; preds = %27, %39
  %30 = phi i64 [ %32, %39 ], [ %19, %27 ]
  %31 = phi %"class.blink::Member.217"* [ %40, %39 ], [ %9, %27 ]
  %32 = add nsw i64 %30, -1
  %33 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.blink::Member.217"* %31 to i8**
  %37 = load i8*, i8** %36, align 8
  %38 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %37) #8
  br label %39

39:                                               ; preds = %35, %29
  %40 = getelementptr inbounds %"class.blink::Member.217", %"class.blink::Member.217"* %31, i64 1
  %41 = icmp eq i64 %32, 0
  br i1 %41, label %42, label %29

42:                                               ; preds = %39, %16, %27
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %25, i64 %26) #8
  tail call void @_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.215"* %20, %"class.blink::Member.217"* %6) #8
  br label %102

43:                                               ; preds = %2
  %44 = zext i32 %1 to i64
  %45 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8CSSValueEEEEEmm(i64 %44) #8
  %46 = lshr i64 %45, 3
  %47 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %46) #8
  %48 = ptrtoint %"class.blink::HeapVectorBacking"* %47 to i64
  %49 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.blink::Member.217"*, %"class.blink::Member.217"** %49, align 8
  %51 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 0, i32 2
  %52 = icmp ne %"class.blink::HeapVectorBacking"* %47, null
  %53 = icmp ne %"class.blink::Member.217"* %50, null
  %54 = and i1 %52, %53
  br i1 %54, label %55, label %81, !prof !18

55:                                               ; preds = %43
  %56 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 1, i64 0
  %57 = bitcast i8* %56 to %"class.blink::Member.217"*
  %58 = icmp ne %"class.blink::Member.217"* %50, %57
  %59 = load i32, i32* %51, align 4
  %60 = zext i32 %59 to i64
  %61 = bitcast %"class.blink::Member.217"* %50 to i8*
  %62 = shl nuw nsw i64 %60, 3
  %63 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %47, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %63, i8* nonnull %61, i64 %62) #8
  %64 = icmp eq i32 %59, 0
  %65 = or i1 %58, %64
  br i1 %65, label %81, label %66

66:                                               ; preds = %55
  %67 = bitcast %"class.blink::HeapVectorBacking"* %47 to %"class.blink::Member.217"*
  br label %68

68:                                               ; preds = %66, %78
  %69 = phi i64 [ %71, %78 ], [ %60, %66 ]
  %70 = phi %"class.blink::Member.217"* [ %79, %78 ], [ %67, %66 ]
  %71 = add nsw i64 %69, -1
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %78, label %74

74:                                               ; preds = %68
  %75 = bitcast %"class.blink::Member.217"* %70 to i8**
  %76 = load i8*, i8** %75, align 8
  %77 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %76) #8
  br label %78

78:                                               ; preds = %74, %68
  %79 = getelementptr inbounds %"class.blink::Member.217", %"class.blink::Member.217"* %70, i64 1
  %80 = icmp eq i64 %71, 0
  br i1 %80, label %81, label %68

81:                                               ; preds = %78, %43, %55
  %82 = bitcast %"class.WTF::Vector.214"* %0 to i8**
  %83 = load i8*, i8** %82, align 8
  %84 = load i32, i32* %51, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %83, i64 %86) #8
  %87 = load %"class.blink::Member.217"*, %"class.blink::Member.217"** %49, align 8
  %88 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 1, i64 0
  %89 = bitcast i8* %88 to %"class.blink::Member.217"*
  %90 = icmp eq %"class.blink::Member.217"* %87, %89
  br i1 %90, label %93, label %91, !prof !18

91:                                               ; preds = %81
  %92 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.215"* %92, %"class.blink::Member.217"* %87) #8
  br label %93

93:                                               ; preds = %81, %91
  %94 = bitcast %"class.WTF::Vector.214"* %0 to i64*
  store atomic i64 %48, i64* %94 monotonic, align 8
  %95 = trunc i64 %46 to i32
  %96 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %95, i32* %96, align 8
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %102, label %99

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %47, i64 0, i32 0
  %101 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %100) #8
  br label %102

102:                                              ; preds = %99, %93, %42, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8CSSValueEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.9, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.11, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !8

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([169 x i8], [169 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberIKNS1_8CSSValueEEENS_12VectorTraitsIS6_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.217"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !8

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %42, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %39, %25
  %28 = phi i64 [ 0, %25 ], [ %40, %39 ]
  %29 = getelementptr inbounds %"class.blink::Member.217", %"class.blink::Member.217"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.217"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %39, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to %"class.blink::CSSValue"*
  %35 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %34, i64 0, i32 0
  %36 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %37 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, i64 5
  %38 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, align 8
  tail call void %38(%"class.blink::Visitor"* %0, i8* %35, i8* %35, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #8
  br label %39

39:                                               ; preds = %33, %27
  %40 = add nuw nsw i64 %28, 1
  %41 = icmp eq i64 %40, %23
  br i1 %41, label %42, label %27

42:                                               ; preds = %39, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.215"*, %"class.blink::Member.217"*) local_unnamed_addr #7 comdat align 2 {
  %3 = bitcast %"class.blink::Member.217"* %1 to i8*
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %3) #8
  ret void
}

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink18CSSSyntaxComponentELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %51

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::CSSSyntaxComponent"*, %"class.blink::CSSSyntaxComponent"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %49, label %14

14:                                               ; preds = %4, %45
  %15 = phi %"class.blink::CSSSyntaxComponent"* [ %47, %45 ], [ %6, %4 ]
  %16 = phi %"class.blink::CSSSyntaxComponent"* [ %46, %45 ], [ null, %4 ]
  %17 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %16, i64 0, i32 0
  %18 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %15, i64 0, i32 0
  %19 = load i32, i32* %18, align 8
  store i32 %19, i32* %17, align 8
  %20 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %16, i64 0, i32 2
  %21 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %15, i64 0, i32 2
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  %23 = bitcast %"class.WTF::String"* %21 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.WTF::String"* %20 to i64*
  store i64 %24, i64* %25, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %22, align 8
  %26 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %16, i64 0, i32 3
  %27 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %15, i64 0, i32 3
  %28 = load i32, i32* %27, align 8
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %15, i64 0, i32 2, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %14
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %32
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi i32 [ %40, %39 ], [ %38, %32 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #8
  br label %45

45:                                               ; preds = %44, %41, %14
  %46 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %16, i64 1
  %47 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %15, i64 1
  %48 = icmp eq %"class.blink::CSSSyntaxComponent"* %47, %10
  br i1 %48, label %49, label %14

49:                                               ; preds = %45, %4
  %50 = bitcast %"class.blink::CSSSyntaxComponent"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #8
  br label %111

51:                                               ; preds = %2
  %52 = zext i32 %1 to i64
  %53 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18CSSSyntaxComponentEEEmm(i64 %52) #8
  %54 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %53, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18CSSSyntaxComponentEEEPKcv, i64 0, i64 0)) #8
  %55 = udiv i64 %53, 24
  %56 = ptrtoint i8* %54 to i64
  %57 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.blink::CSSSyntaxComponent"*, %"class.blink::CSSSyntaxComponent"** %57, align 8
  %59 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %60 = load i32, i32* %59, align 4
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %58, i64 %61
  %63 = icmp eq i32 %60, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %51
  %65 = bitcast %"class.blink::CSSSyntaxComponent"* %58 to i8*
  br label %106

66:                                               ; preds = %51
  %67 = bitcast i8* %54 to %"class.blink::CSSSyntaxComponent"*
  br label %68

68:                                               ; preds = %66, %99
  %69 = phi %"class.blink::CSSSyntaxComponent"* [ %101, %99 ], [ %58, %66 ]
  %70 = phi %"class.blink::CSSSyntaxComponent"* [ %100, %99 ], [ %67, %66 ]
  %71 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %70, i64 0, i32 0
  %72 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %69, i64 0, i32 0
  %73 = load i32, i32* %72, align 8
  store i32 %73, i32* %71, align 8
  %74 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %70, i64 0, i32 2
  %75 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %69, i64 0, i32 2
  %76 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %75, i64 0, i32 0, i32 0
  %77 = bitcast %"class.WTF::String"* %75 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = bitcast %"class.WTF::String"* %74 to i64*
  store i64 %78, i64* %79, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %76, align 8
  %80 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %70, i64 0, i32 3
  %81 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %69, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  store i32 %82, i32* %80, align 8
  %83 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %69, i64 0, i32 2, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %68
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #8
  br label %99

99:                                               ; preds = %98, %95, %68
  %100 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %70, i64 1
  %101 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %69, i64 1
  %102 = icmp eq %"class.blink::CSSSyntaxComponent"* %101, %62
  br i1 %102, label %103, label %68

103:                                              ; preds = %99
  %104 = bitcast %"class.WTF::Vector"* %0 to i8**
  %105 = load i8*, i8** %104, align 8
  br label %106

106:                                              ; preds = %64, %103
  %107 = phi i8* [ %105, %103 ], [ %65, %64 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %107) #8
  %108 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %56, i64* %108 monotonic, align 8
  %109 = trunc i64 %55 to i32
  %110 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %109, i32* %110, align 8
  br label %111

111:                                              ; preds = %106, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18CSSSyntaxComponentEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 89391104
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 89391104) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.12, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = mul i64 %0, 24
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink18CSSSyntaxComponentELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector"*, %"class.blink::CSSSyntaxComponent"* dereferenceable(24)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::CSSSyntaxComponent"*, %"class.blink::CSSSyntaxComponent"** %6, align 8
  %8 = icmp ugt %"class.blink::CSSSyntaxComponent"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %7, i64 %10
  %12 = icmp ugt %"class.blink::CSSSyntaxComponent"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !18

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::CSSSyntaxComponent"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18CSSSyntaxComponentEEEmm(i64 %27) #8
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18CSSSyntaxComponentEEEPKcv, i64 0, i64 0)) #8
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = udiv i64 %28, 24
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.blink::CSSSyntaxComponent"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN5blink18CSSSyntaxComponentELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %22) #8
  %36 = load %"class.blink::CSSSyntaxComponent"*, %"class.blink::CSSSyntaxComponent"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.blink::CSSSyntaxComponent"* %1 to i64
  %39 = ptrtoint %"class.blink::CSSSyntaxComponent"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = sdiv exact i64 %40, 24
  %42 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !18

52:                                               ; preds = %37
  %53 = icmp eq %"class.blink::CSSSyntaxComponent"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18CSSSyntaxComponentEEEmm(i64 %55) #8
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18CSSSyntaxComponentEEEPKcv, i64 0, i64 0)) #8
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = udiv i64 %56, 24
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.blink::CSSSyntaxComponent"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN5blink18CSSSyntaxComponentELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %50) #8
  %64 = load %"class.blink::CSSSyntaxComponent"*, %"class.blink::CSSSyntaxComponent"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.blink::CSSSyntaxComponent"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.blink::CSSSyntaxComponent"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.blink::CSSSyntaxComponent"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %69, i64 %72, i32 0
  %74 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %70, i64 0, i32 0
  %75 = load i32, i32* %74, align 8
  store i32 %75, i32* %73, align 8
  %76 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %69, i64 %72, i32 2
  %77 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %70, i64 0, i32 2
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 0, i32 0, i32 0
  %79 = bitcast %"class.WTF::String"* %77 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = bitcast %"class.WTF::String"* %76 to i64*
  store i64 %80, i64* %81, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %78, align 8
  %82 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %69, i64 %72, i32 3
  %83 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %70, i64 0, i32 3
  %84 = load i32, i32* %83, align 8
  store i32 %84, i32* %82, align 8
  %85 = load i32, i32* %3, align 4
  %86 = add i32 %85, 1
  store i32 %86, i32* %3, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!4 = distinct !{!4, !"_ZNK5blink14CSSParserToken5ValueEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!7 = distinct !{!7, !"_ZNK5blink14CSSParserToken5ValueEv"}
!8 = !{!"branch_weights", i32 1, i32 2000}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!11 = distinct !{!11, !"_ZNK5blink14CSSParserToken5ValueEv"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!14 = distinct !{!14, !"_ZNK5blink14CSSParserToken5ValueEv"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!17 = distinct !{!17, !"_ZNK5blink14CSSParserToken5ValueEv"}
!18 = !{!"branch_weights", i32 2000, i32 1}
!19 = !{i8 0, i8 2}
