; ModuleID = '../../third_party/webrtc/modules/audio_processing/vad/vad_audio_proc.cc'
source_filename = "../../third_party/webrtc/modules/audio_processing/vad/vad_audio_proc.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webrtc::VadAudioProc" = type { [256 x i64], [256 x float], [560 x float], i64, double, double, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.7" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.webrtc::VadAudioProc::PitchAnalysisStruct"* }
%"struct.webrtc::VadAudioProc::PitchAnalysisStruct" = type { %struct.PitchAnalysisStruct }
%struct.PitchAnalysisStruct = type { [72 x double], [5 x double], [2 x double], [24 x double], [24 x double], %struct.PitchFiltstr, %struct.PitchFiltstr, %struct.WeightFiltstr }
%struct.PitchFiltstr = type { [190 x double], [5 x double], [1 x double], [1 x double] }
%struct.WeightFiltstr = type { [240 x double], [6 x double], [6 x double], [6 x double], [240 x double] }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.webrtc::VadAudioProc::PreFiltBankstr"* }
%"struct.webrtc::VadAudioProc::PreFiltBankstr" = type { %struct.PreFiltBankstr }
%struct.PreFiltBankstr = type { [4 x double], [4 x double], [4 x double], [4 x double], [24 x double], [24 x double], [4 x float], [4 x float], [4 x float], [4 x float], [24 x float], [24 x float], [2 x double], [2 x float] }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.webrtc::PoleZeroFilter"* }
%"class.webrtc::PoleZeroFilter" = type { [48 x i16], [48 x float], [25 x float], [25 x float], i64, i64, i64 }
%struct.AudioFeatures = type { [4 x double], [4 x double], [4 x double], [4 x double], i64, i8 }

@_ZN6webrtcL15kCoeffNumeratorE = internal constant [3 x float] [float 0x3FEF31C860000000, float 0xBFFF31C440000000, float 0x3FEF31C860000000], align 4
@_ZN6webrtcL17kCoeffDenominatorE = internal constant [3 x float] [float 1.000000e+00, float 0xBFFF8D4EE0000000, float 0x3FEF1E5E20000000], align 4
@_ZN6webrtcL11kLpcAnalWinE = internal unnamed_addr constant [240 x double] [double 0.000000e+00, double 0x3F8AEB6E229D63D4, double 0x3F9AEAD5CC4FCF4B, double 3.942400e-02, double 0x3FAAE8741D3341A1, double 0x3FB0D02AFB2B59F6, double 7.878670e-02, double 0x3FB785AB7B187A1F, double 0x3FBADEEF39335268, double 0x3FBE3702A0993D28, double 0x3FC0C6DFF8CE8864, double 0x3FC27180B648D1D6, double 0x3FC41B50936B573C, double 0x3FC5C43CB05F83C9, double 0x3FC76C326DBB6F57, double 0x3FC9131EEBA8851A, double 0x3FCAB8EF75434E08, double 0x3FCC5D916B21E1FD, double 0x3FCE00F22DDA58D1, double 0x3FCFA2FF337C5942, double 0x3FD0A1D2F90BC505, double 0x3FD1716A055757D6, double 0x3FD2403B8F224753, double 0x3FD30E3E71AABD2D, double 0x3FD3DB6992EBAA88, double 0x3FD4A7B3CE233915, double 0x3FD573142982B049, double 0x3FD63D81AB3B579A, double 0x3FD706F34EC1AF0C, double 0x3FD7CF603A7D546A, double 0x3FD896BF7F5C5698, double 0x3FD95D0863FCA9B4, double 0x3FDA22320EC5EB87, double 0x3FDAE633C656102D, double 0x3FDBA904F1816215, double 0x3FDC6A9CE1A29CCE, double 0x3FDD2AF3084AD236, double 0x3FDDE9FEEC84A312, double 0x3FDEA7B8155AB025, double 0x3FDF64161F512912, double 0x3FE00F885E32E631, double 0x3FE06C4FC9ECC896, double 0x3FE0C85D414EA9DC, double 0x3FE123ACB2D0F82B, double 0x3FE17E3A0CEC21A7, double 0x3FE1D80153922359, double 0x3FE230FE8AB4FA48, double 0x3FE2892DC661CEA7, double 0x3FE2E08B1AA5C8A7, double 0x3FE33712B1079F5C, double 0x3FE38CC0B30E09D9, double 0x3FE3E19154FC86A4, double 0x3FE43580DB31BF6B, double 0x3FE4888B8A0C5DDC, double 0x3FE4DAADB60636D1, double 0x3FE52BE3B8F782D9, double 0x3FE57C2A07906D20, double 0x3FE5CB7D0BC45961, double 0x3FE619D945003A38, double 0x3FE6673B380F65FA, double 0x3FE6B39F7F36C1DE, double 0x3FE6FF02BA1996D5, double 0x3FE749618DB99187, double 0x3FE792B8AF3389C5, double 0x3FE7DB04E3BF828C, double 0x3FE82242FB524649, double 0x3FE8686FCB3F0320, double 0x3FE8AD8838F41261, double 0x3FE8F189349C94CC, double 0x3FE9346FBE7ED64A, double 0x3FE97638E19DEA36, double 0x3FE9B6E1B3B9AB5D, double 0x3FE9F6675AAD1FB3, double 0x3FEA34C7071014A0, double 0x3FEA71FDF4371EFB, double 0x3FEAAE0968339B0D, double 0x3FEAE8E6C94D3B72, double 0x3FEB22936DB0879D, double 0x3FEB5B0CD11EC10B, double 0x3FEB925074B78CF5, double 0x3FEBC85BDEF8F448, double 0x3FEBFD2CB6975648, double 0x3FEC30C09CE8AE80, double 0x3FEC63154E1AEB13, double 0x3FEC94288BBA5DDF, double 0x3FECC3F8322B4B5D, double 0x3FECF2821DD1F805, double 0x3FED1FC4408C3730, double 0x3FED4BBC96F4A3AB, double 0x3FED7669387DCADC, double 0x3FED9FC8373BD670, double 0x3FEDC7D7C5794668, double 0x3FEDEE96203D6236, double 0x3FEE1401848F714D, double 0x3FEE38185A69D8E2, double 0x3FEE5AD8F9ABD302, double 0x3FEE7C41E527B77F, double 0x3FEE9C519FAFDE2A, double 0x3FEEBB06B6D36644, double 0x3FEED85FD857C564, double 0x3FEEF45BB202711E, double 0x3FEF0EF907126DEC, double 0x3FEF2836B0404F26, double 0x3FEF40138644A826, double 0x3FEF568E820E6299, double 0x3FEF6BA6A7492F9F, double 0x3FEF7F5AFEFF240D, double 0x3FEF91AAAD124755, double 0x3FEFA294E57FCC13, double 0x3FEFB218E1A3489A, double 0x3FEFC035FB0EA991, double 0x3FEFCCEB8B53DB9F, double 0x3FEFD83906DCBE07, double 0x3FEFE21DE77193C1, double 0x3FEFEA99C710F61C, double 0x3FEFF1AC3A5B1AAE, double 0x3FEFF754F6268D5D, double 0x3FEFFB93BF65053D, double 0x3FEFFE685B08395F, double 0x3FEFFFD2B3969AE2, double 0x3FEFFFD2B3969AE2, double 0x3FEFFE685B08395F, double 0x3FEFFB93BF65053D, double 0x3FEFF754F6268D5D, double 0x3FEFF1AC3A5B1AAE, double 0x3FEFEA99C710F61C, double 0x3FEFE21DE77193C1, double 0x3FEFD83906DCBE07, double 0x3FEFCCEB8B53DB9F, double 0x3FEFC035FB0EA991, double 0x3FEFB218E1A3489A, double 0x3FEFA294E57FCC13, double 0x3FEF91AAAD124755, double 0x3FEF7F5AFEFF240D, double 0x3FEF6BA6A7492F9F, double 0x3FEF568E820E6299, double 0x3FEF40138644A826, double 0x3FEF2836B0404F26, double 0x3FEF0EF907126DEC, double 0x3FEEF45BB202711E, double 0x3FEED85FD857C564, double 0x3FEEBB06B6D36644, double 0x3FEE9C519FAFDE2A, double 0x3FEE7C41E527B77F, double 0x3FEE5AD8F9ABD302, double 0x3FEE38185A69D8E2, double 0x3FEE1401848F714D, double 0x3FEDEE96203D6236, double 0x3FEDC7D7C5794668, double 0x3FED9FC8373BD670, double 0x3FED7669387DCADC, double 0x3FED4BBC96F4A3AB, double 0x3FED1FC4408C3730, double 0x3FECF2821DD1F805, double 0x3FECC3F8322B4B5D, double 0x3FEC94288BBA5DDF, double 0x3FEC63154E1AEB13, double 0x3FEC30C09CE8AE80, double 0x3FEBFD2CB6975648, double 0x3FEBC85BDEF8F448, double 0x3FEB925074B78CF5, double 0x3FEB5B0CD11EC10B, double 0x3FEB22936DB0879D, double 0x3FEAE8E6C94D3B72, double 0x3FEAAE0968339B0D, double 0x3FEA71FDF4371EFB, double 0x3FEA34C7071014A0, double 0x3FE9F6675AAD1FB3, double 0x3FE9B6E1B3B9AB5D, double 0x3FE97638E19DEA36, double 0x3FE9346FBE7ED64A, double 0x3FE8F189349C94CC, double 0x3FE8AD8838F41261, double 0x3FE8686FCB3F0320, double 0x3FE82242FB524649, double 0x3FE7DB04E3BF828C, double 0x3FE792B8AF3389C5, double 0x3FE749618DB99187, double 0x3FE6FF02BA1996D5, double 0x3FE6B39F7F36C1DE, double 0x3FE6673B380F65FA, double 0x3FE619D945003A38, double 0x3FE5CB7D0BC45961, double 0x3FE57C2A07906D20, double 0x3FE52BE3B8F782D9, double 0x3FE4DAADB60636D1, double 0x3FE4888B8A0C5DDC, double 0x3FE43580DB31BF6B, double 0x3FE3E19154FC86A4, double 0x3FE38CC0B30E09D9, double 0x3FE33712B1079F5C, double 0x3FE2E08B1AA5C8A7, double 0x3FE2892DC661CEA7, double 0x3FE230FE8AB4FA48, double 0x3FE1D80153922359, double 0x3FE17E3A0CEC21A7, double 0x3FE123ACB2D0F82B, double 0x3FE0C85D414EA9DC, double 0x3FE06C4FC9ECC896, double 0x3FE00F885E32E631, double 0x3FDF64161F512912, double 0x3FDEA7B8155AB025, double 0x3FDDE9FEEC84A312, double 0x3FDD2AF3084AD236, double 0x3FDC6A9CE1A29CCE, double 0x3FDBA904F1816215, double 0x3FDAE633C656102D, double 0x3FDA22320EC5EB87, double 0x3FD95D0863FCA9B4, double 0x3FD896BF7F5C5698, double 0x3FD7CF603A7D546A, double 0x3FD706F34EC1AF0C, double 0x3FD63D81AB3B579A, double 0x3FD573142982B049, double 0x3FD4A7B3CE233915, double 0x3FD3DB6992EBAA88, double 0x3FD30E3E71AABD2D, double 0x3FD2403B8F224753, double 0x3FD1716A055757D6, double 0x3FD0A1D2F90BC505, double 0x3FCFA2FF337C5942, double 0x3FCE00F22DDA58D1, double 0x3FCC5D916B21E1FD, double 0x3FCAB8EF75434E08, double 0x3FC9131EEBA8851A, double 0x3FC76C326DBB6F57, double 0x3FC5C43CB05F83C9, double 0x3FC41B50936B573C, double 0x3FC27180B648D1D6, double 0x3FC0C6DFF8CE8864, double 0x3FBE3702A0993D28, double 0x3FBADEEF39335268, double 0x3FB785AB7B187A1F, double 7.878670e-02, double 0x3FB0D02AFB2B59F6, double 0x3FAAE8741D3341A1, double 3.942400e-02, double 0x3F9AEAD5CC4FCF4B, double 0x3F8AEB6E229D63D4, double 0.000000e+00], align 16

@_ZN6webrtc12VadAudioProcC1Ev = hidden unnamed_addr alias void (%"class.webrtc::VadAudioProc"*), void (%"class.webrtc::VadAudioProc"*)* @_ZN6webrtc12VadAudioProcC2Ev
@_ZN6webrtc12VadAudioProcD1Ev = hidden unnamed_addr alias void (%"class.webrtc::VadAudioProc"*), void (%"class.webrtc::VadAudioProc"*)* @_ZN6webrtc12VadAudioProcD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc12VadAudioProcC2Ev(%"class.webrtc::VadAudioProc"*) unnamed_addr #0 align 2 {
  %2 = alloca [512 x float], align 16
  %3 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 2
  %4 = bitcast [560 x float]* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 2240, i1 false)
  %5 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 3
  store i64 80, i64* %5, align 8
  %6 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 4
  %7 = bitcast double* %6 to <2 x double>*
  store <2 x double> <double -2.000000e+00, double 5.000000e+01>, <2 x double>* %7, align 8
  %8 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 6
  %9 = tail call i8* @_Znwm(i64 8152) #7
  %10 = ptrtoint i8* %9 to i64
  %11 = bitcast %"class.std::__1::unique_ptr"* %8 to i64*
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 7
  %13 = tail call i8* @_Znwm(i64 792) #7
  %14 = ptrtoint i8* %13 to i64
  %15 = bitcast %"class.std::__1::unique_ptr.1"* %12 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 8
  %17 = tail call %"class.webrtc::PoleZeroFilter"* @_ZN6webrtc14PoleZeroFilter6CreateEPKfmS2_m(float* getelementptr inbounds ([3 x float], [3 x float]* @_ZN6webrtcL15kCoeffNumeratorE, i64 0, i64 0), i64 2, float* getelementptr inbounds ([3 x float], [3 x float]* @_ZN6webrtcL17kCoeffDenominatorE, i64 0, i64 0), i64 2) #8
  %18 = ptrtoint %"class.webrtc::PoleZeroFilter"* %17 to i64
  %19 = bitcast %"class.std::__1::unique_ptr.7"* %16 to i64*
  store i64 %18, i64* %19, align 8
  %20 = bitcast [512 x float]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2048, i8* nonnull %20) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %20, i8 -1, i64 2048, i1 false)
  %21 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 0, i64 0
  store i64 0, i64* %21, align 8
  %22 = getelementptr inbounds [512 x float], [512 x float]* %2, i64 0, i64 0
  %23 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 1, i64 0
  call void @_ZN6webrtc11WebRtc_rdftEmiPfPmS0_(i64 512, i32 1, float* nonnull %22, i64* %21, float* %23) #8
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %12, i64 0, i32 0, i32 0, i32 0
  %25 = load %"struct.webrtc::VadAudioProc::PreFiltBankstr"*, %"struct.webrtc::VadAudioProc::PreFiltBankstr"** %24, align 8
  %26 = getelementptr inbounds %"struct.webrtc::VadAudioProc::PreFiltBankstr", %"struct.webrtc::VadAudioProc::PreFiltBankstr"* %25, i64 0, i32 0
  call void @WebRtcIsac_InitPreFilterbank(%struct.PreFiltBankstr* %26) #8
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %8, i64 0, i32 0, i32 0, i32 0
  %28 = load %"struct.webrtc::VadAudioProc::PitchAnalysisStruct"*, %"struct.webrtc::VadAudioProc::PitchAnalysisStruct"** %27, align 8
  %29 = getelementptr inbounds %"struct.webrtc::VadAudioProc::PitchAnalysisStruct", %"struct.webrtc::VadAudioProc::PitchAnalysisStruct"* %28, i64 0, i32 0
  call void @WebRtcIsac_InitPitchAnalysis(%struct.PitchAnalysisStruct* %29) #8
  call void @llvm.lifetime.end.p0i8(i64 2048, i8* nonnull %20) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

declare %"class.webrtc::PoleZeroFilter"* @_ZN6webrtc14PoleZeroFilter6CreateEPKfmS2_m(float*, i64, float*, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN6webrtc11WebRtc_rdftEmiPfPmS0_(i64, i32, float*, i64*, float*) local_unnamed_addr #3

declare void @WebRtcIsac_InitPreFilterbank(%struct.PreFiltBankstr*) local_unnamed_addr #3

declare void @WebRtcIsac_InitPitchAnalysis(%struct.PitchAnalysisStruct*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc12VadAudioProcD2Ev(%"class.webrtc::VadAudioProc"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %3 = load %"class.webrtc::PoleZeroFilter"*, %"class.webrtc::PoleZeroFilter"** %2, align 8
  store %"class.webrtc::PoleZeroFilter"* null, %"class.webrtc::PoleZeroFilter"** %2, align 8
  %4 = icmp eq %"class.webrtc::PoleZeroFilter"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.webrtc::PoleZeroFilter"* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #7
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %9 = load %"struct.webrtc::VadAudioProc::PreFiltBankstr"*, %"struct.webrtc::VadAudioProc::PreFiltBankstr"** %8, align 8
  store %"struct.webrtc::VadAudioProc::PreFiltBankstr"* null, %"struct.webrtc::VadAudioProc::PreFiltBankstr"** %8, align 8
  %10 = icmp eq %"struct.webrtc::VadAudioProc::PreFiltBankstr"* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = bitcast %"struct.webrtc::VadAudioProc::PreFiltBankstr"* %9 to i8*
  tail call void @_ZdlPv(i8* %12) #7
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %15 = load %"struct.webrtc::VadAudioProc::PitchAnalysisStruct"*, %"struct.webrtc::VadAudioProc::PitchAnalysisStruct"** %14, align 8
  store %"struct.webrtc::VadAudioProc::PitchAnalysisStruct"* null, %"struct.webrtc::VadAudioProc::PitchAnalysisStruct"** %14, align 8
  %16 = icmp eq %"struct.webrtc::VadAudioProc::PitchAnalysisStruct"* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %13
  %18 = bitcast %"struct.webrtc::VadAudioProc::PitchAnalysisStruct"* %15 to i8*
  tail call void @_ZdlPv(i8* %18) #7
  br label %19

19:                                               ; preds = %13, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc12VadAudioProc11ResetBufferEv(%"class.webrtc::VadAudioProc"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 2
  %3 = bitcast [560 x float]* %2 to i8*
  %4 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 2, i64 480
  %5 = bitcast float* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %5, i64 320, i1 false)
  %6 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 3
  store i64 80, i64* %6, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc12VadAudioProc15ExtractFeaturesEPKsmP13AudioFeatures(%"class.webrtc::VadAudioProc"*, i16*, i64, %struct.AudioFeatures*) local_unnamed_addr #0 align 2 {
  %5 = alloca [4 x double], align 16
  %6 = alloca [4 x double], align 16
  %7 = alloca [240 x float], align 16
  %8 = alloca [240 x float], align 16
  %9 = alloca [240 x double], align 16
  %10 = alloca [240 x double], align 16
  %11 = alloca [264 x double], align 16
  %12 = getelementptr inbounds %struct.AudioFeatures, %struct.AudioFeatures* %3, i64 0, i32 4
  store i64 0, i64* %12, align 8
  %13 = icmp eq i64 %2, 160
  br i1 %13, label %14, label %136

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %16 = load %"class.webrtc::PoleZeroFilter"*, %"class.webrtc::PoleZeroFilter"** %15, align 8
  %17 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 3
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 2, i64 %18
  %20 = tail call i32 @_ZN6webrtc14PoleZeroFilter6FilterEPKsmPf(%"class.webrtc::PoleZeroFilter"* %16, i16* %1, i64 160, float* %19) #8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %136

22:                                               ; preds = %14
  %23 = load i64, i64* %17, align 8
  %24 = add i64 %23, 160
  store i64 %24, i64* %17, align 8
  %25 = icmp ult i64 %24, 560
  br i1 %25, label %136, label %26

26:                                               ; preds = %22
  store i64 3, i64* %12, align 8
  %27 = getelementptr inbounds %struct.AudioFeatures, %struct.AudioFeatures* %3, i64 0, i32 5
  store i8 0, i8* %27, align 8
  %28 = getelementptr inbounds %struct.AudioFeatures, %struct.AudioFeatures* %3, i64 0, i32 3, i64 0
  store double 0.000000e+00, double* %28, align 8
  br label %33

29:                                               ; preds = %33
  %30 = fdiv double %58, 1.600000e+02
  %31 = tail call double @sqrt(double %30) #8
  store double %31, double* %28, align 8
  %32 = getelementptr inbounds %struct.AudioFeatures, %struct.AudioFeatures* %3, i64 0, i32 3, i64 1
  store double 0.000000e+00, double* %32, align 8
  br label %61

33:                                               ; preds = %33, %26
  %34 = phi double [ 0.000000e+00, %26 ], [ %58, %33 ]
  %35 = phi i64 [ 80, %26 ], [ %59, %33 ]
  %36 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 2, i64 %35
  %37 = load float, float* %36, align 4
  %38 = fmul float %37, %37
  %39 = fpext float %38 to double
  %40 = fadd double %34, %39
  store double %40, double* %28, align 8
  %41 = or i64 %35, 1
  %42 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 2, i64 %41
  %43 = load float, float* %42, align 4
  %44 = fmul float %43, %43
  %45 = fpext float %44 to double
  %46 = fadd double %40, %45
  store double %46, double* %28, align 8
  %47 = or i64 %35, 2
  %48 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 2, i64 %47
  %49 = load float, float* %48, align 4
  %50 = fmul float %49, %49
  %51 = fpext float %50 to double
  %52 = fadd double %46, %51
  store double %52, double* %28, align 8
  %53 = or i64 %35, 3
  %54 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 2, i64 %53
  %55 = load float, float* %54, align 4
  %56 = fmul float %55, %55
  %57 = fpext float %56 to double
  %58 = fadd double %52, %57
  store double %58, double* %28, align 8
  %59 = add nuw nsw i64 %35, 4
  %60 = icmp eq i64 %59, 240
  br i1 %60, label %29, label %33

61:                                               ; preds = %61, %29
  %62 = phi double [ 0.000000e+00, %29 ], [ %86, %61 ]
  %63 = phi i64 [ 240, %29 ], [ %87, %61 ]
  %64 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 2, i64 %63
  %65 = load float, float* %64, align 4
  %66 = fmul float %65, %65
  %67 = fpext float %66 to double
  %68 = fadd double %62, %67
  store double %68, double* %32, align 8
  %69 = or i64 %63, 1
  %70 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 2, i64 %69
  %71 = load float, float* %70, align 4
  %72 = fmul float %71, %71
  %73 = fpext float %72 to double
  %74 = fadd double %68, %73
  store double %74, double* %32, align 8
  %75 = or i64 %63, 2
  %76 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 2, i64 %75
  %77 = load float, float* %76, align 4
  %78 = fmul float %77, %77
  %79 = fpext float %78 to double
  %80 = fadd double %74, %79
  store double %80, double* %32, align 8
  %81 = or i64 %63, 3
  %82 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 2, i64 %81
  %83 = load float, float* %82, align 4
  %84 = fmul float %83, %83
  %85 = fpext float %84 to double
  %86 = fadd double %80, %85
  store double %86, double* %32, align 8
  %87 = add nuw nsw i64 %63, 4
  %88 = icmp eq i64 %87, 400
  br i1 %88, label %89, label %61

89:                                               ; preds = %61
  %90 = fdiv double %86, 1.600000e+02
  %91 = tail call double @sqrt(double %90) #8
  store double %91, double* %32, align 8
  %92 = getelementptr inbounds %struct.AudioFeatures, %struct.AudioFeatures* %3, i64 0, i32 3, i64 2
  store double 0.000000e+00, double* %92, align 8
  br label %93

93:                                               ; preds = %93, %89
  %94 = phi double [ 0.000000e+00, %89 ], [ %118, %93 ]
  %95 = phi i64 [ 400, %89 ], [ %119, %93 ]
  %96 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 2, i64 %95
  %97 = load float, float* %96, align 4
  %98 = fmul float %97, %97
  %99 = fpext float %98 to double
  %100 = fadd double %94, %99
  store double %100, double* %92, align 8
  %101 = or i64 %95, 1
  %102 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 2, i64 %101
  %103 = load float, float* %102, align 4
  %104 = fmul float %103, %103
  %105 = fpext float %104 to double
  %106 = fadd double %100, %105
  store double %106, double* %92, align 8
  %107 = or i64 %95, 2
  %108 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 2, i64 %107
  %109 = load float, float* %108, align 4
  %110 = fmul float %109, %109
  %111 = fpext float %110 to double
  %112 = fadd double %106, %111
  store double %112, double* %92, align 8
  %113 = or i64 %95, 3
  %114 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 2, i64 %113
  %115 = load float, float* %114, align 4
  %116 = fmul float %115, %115
  %117 = fpext float %116 to double
  %118 = fadd double %112, %117
  store double %118, double* %92, align 8
  %119 = add nuw nsw i64 %95, 4
  %120 = icmp eq i64 %119, 560
  br i1 %120, label %121, label %93

121:                                              ; preds = %93
  %122 = fdiv double %118, 1.600000e+02
  %123 = tail call double @sqrt(double %122) #8
  store double %123, double* %92, align 8
  %124 = load double, double* %28, align 8
  %125 = fcmp olt double %124, 5.000000e+00
  br i1 %125, label %131, label %126

126:                                              ; preds = %121
  %127 = load double, double* %32, align 8
  %128 = fcmp olt double %127, 5.000000e+00
  %129 = fcmp olt double %123, 5.000000e+00
  %130 = or i1 %128, %129
  br i1 %130, label %131, label %138

131:                                              ; preds = %126, %121
  store i8 1, i8* %27, align 8
  %132 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 2
  %133 = bitcast [560 x float]* %132 to i8*
  %134 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 2, i64 480
  %135 = bitcast float* %134 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %133, i8* align 8 %135, i64 320, i1 false) #8
  store i64 80, i64* %17, align 8
  br label %136

136:                                              ; preds = %131, %22, %14, %4, %138
  %137 = phi i32 [ 0, %138 ], [ -1, %4 ], [ -1, %14 ], [ 0, %22 ], [ 0, %131 ]
  ret i32 %137

138:                                              ; preds = %126
  %139 = getelementptr inbounds %struct.AudioFeatures, %struct.AudioFeatures* %3, i64 0, i32 0, i64 0
  %140 = getelementptr inbounds %struct.AudioFeatures, %struct.AudioFeatures* %3, i64 0, i32 1, i64 0
  %141 = bitcast [4 x double]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %141) #8
  %142 = getelementptr inbounds [4 x double], [4 x double]* %5, i64 0, i64 0
  %143 = bitcast [4 x double]* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %141, i8 -1, i64 32, i1 false) #8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %143) #8
  %144 = getelementptr inbounds [4 x double], [4 x double]* %6, i64 0, i64 0
  %145 = bitcast [240 x float]* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %143, i8 -1, i64 32, i1 false) #8
  call void @llvm.lifetime.start.p0i8(i64 960, i8* nonnull %145) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %145, i8 -1, i64 960, i1 false) #8
  %146 = bitcast [240 x float]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 960, i8* nonnull %146) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %146, i8 -1, i64 960, i1 false) #8
  %147 = bitcast [240 x double]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1920, i8* nonnull %147) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %147, i8 -1, i64 1920, i1 false) #8
  %148 = bitcast [240 x double]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1920, i8* nonnull %148) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %148, i8 -1, i64 1920, i1 false) #8
  %149 = bitcast [264 x double]* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2112, i8* nonnull %149) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %149, i8 -1, i64 2112, i1 false) #8
  %150 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 2, i64 80
  %151 = getelementptr inbounds [240 x float], [240 x float]* %7, i64 0, i64 0
  %152 = getelementptr inbounds [240 x float], [240 x float]* %8, i64 0, i64 0
  %153 = getelementptr inbounds [240 x double], [240 x double]* %9, i64 0, i64 0
  %154 = getelementptr inbounds [240 x double], [240 x double]* %10, i64 0, i64 0
  %155 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %156 = load %"struct.webrtc::VadAudioProc::PreFiltBankstr"*, %"struct.webrtc::VadAudioProc::PreFiltBankstr"** %155, align 8
  %157 = getelementptr inbounds %"struct.webrtc::VadAudioProc::PreFiltBankstr", %"struct.webrtc::VadAudioProc::PreFiltBankstr"* %156, i64 0, i32 0
  call void @WebRtcIsac_SplitAndFilterFloat(float* %150, float* nonnull %151, float* nonnull %152, double* nonnull %153, double* nonnull %154, %struct.PreFiltBankstr* %157) #8
  %158 = getelementptr inbounds [264 x double], [264 x double]* %11, i64 0, i64 0
  %159 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %160 = load %"struct.webrtc::VadAudioProc::PitchAnalysisStruct"*, %"struct.webrtc::VadAudioProc::PitchAnalysisStruct"** %159, align 8
  %161 = getelementptr inbounds %"struct.webrtc::VadAudioProc::PitchAnalysisStruct", %"struct.webrtc::VadAudioProc::PitchAnalysisStruct"* %160, i64 0, i32 0
  call void @WebRtcIsac_PitchAnalysis(double* nonnull %153, double* nonnull %158, %struct.PitchAnalysisStruct* %161, double* nonnull %144, double* nonnull %142) #8
  %162 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 4
  %163 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 5
  call void @_ZN6webrtc27GetSubframesPitchParametersEiPdS0_iiS0_S0_S0_S0_(i32 8000, double* nonnull %142, double* nonnull %144, i32 4, i32 3, double* %162, double* %163, double* %139, double* %140) #8
  call void @llvm.lifetime.end.p0i8(i64 2112, i8* nonnull %149) #8
  call void @llvm.lifetime.end.p0i8(i64 1920, i8* nonnull %148) #8
  call void @llvm.lifetime.end.p0i8(i64 1920, i8* nonnull %147) #8
  call void @llvm.lifetime.end.p0i8(i64 960, i8* nonnull %146) #8
  call void @llvm.lifetime.end.p0i8(i64 960, i8* nonnull %145) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %143) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %141) #8
  %164 = getelementptr inbounds %struct.AudioFeatures, %struct.AudioFeatures* %3, i64 0, i32 2, i64 0
  call void @_ZN6webrtc12VadAudioProc22FindFirstSpectralPeaksEPdm(%"class.webrtc::VadAudioProc"* %0, double* %164, i64 undef)
  %165 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 2
  %166 = bitcast [560 x float]* %165 to i8*
  %167 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 2, i64 480
  %168 = bitcast float* %167 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %166, i8* align 8 %168, i64 320, i1 false) #8
  store i64 80, i64* %17, align 8
  br label %136
}

declare i32 @_ZN6webrtc14PoleZeroFilter6FilterEPKsmPf(%"class.webrtc::PoleZeroFilter"*, i16*, i64, float*) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN6webrtc12VadAudioProc3RmsEPdm(%"class.webrtc::VadAudioProc"* nocapture readonly, double* nocapture, i64) local_unnamed_addr #4 align 2 {
  store double 0.000000e+00, double* %1, align 8
  br label %8

4:                                                ; preds = %8
  %5 = fdiv double %33, 1.600000e+02
  %6 = tail call double @sqrt(double %5) #8
  store double %6, double* %1, align 8
  %7 = getelementptr inbounds double, double* %1, i64 1
  store double 0.000000e+00, double* %7, align 8
  br label %36

8:                                                ; preds = %8, %3
  %9 = phi double [ 0.000000e+00, %3 ], [ %33, %8 ]
  %10 = phi i64 [ 80, %3 ], [ %34, %8 ]
  %11 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 2, i64 %10
  %12 = load float, float* %11, align 4
  %13 = fmul float %12, %12
  %14 = fpext float %13 to double
  %15 = fadd double %9, %14
  store double %15, double* %1, align 8
  %16 = or i64 %10, 1
  %17 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 2, i64 %16
  %18 = load float, float* %17, align 4
  %19 = fmul float %18, %18
  %20 = fpext float %19 to double
  %21 = fadd double %15, %20
  store double %21, double* %1, align 8
  %22 = or i64 %10, 2
  %23 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 2, i64 %22
  %24 = load float, float* %23, align 4
  %25 = fmul float %24, %24
  %26 = fpext float %25 to double
  %27 = fadd double %21, %26
  store double %27, double* %1, align 8
  %28 = or i64 %10, 3
  %29 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 2, i64 %28
  %30 = load float, float* %29, align 4
  %31 = fmul float %30, %30
  %32 = fpext float %31 to double
  %33 = fadd double %27, %32
  store double %33, double* %1, align 8
  %34 = add nuw nsw i64 %10, 4
  %35 = icmp eq i64 %34, 240
  br i1 %35, label %4, label %8

36:                                               ; preds = %36, %4
  %37 = phi double [ 0.000000e+00, %4 ], [ %61, %36 ]
  %38 = phi i64 [ 240, %4 ], [ %62, %36 ]
  %39 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 2, i64 %38
  %40 = load float, float* %39, align 4
  %41 = fmul float %40, %40
  %42 = fpext float %41 to double
  %43 = fadd double %37, %42
  store double %43, double* %7, align 8
  %44 = or i64 %38, 1
  %45 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 2, i64 %44
  %46 = load float, float* %45, align 4
  %47 = fmul float %46, %46
  %48 = fpext float %47 to double
  %49 = fadd double %43, %48
  store double %49, double* %7, align 8
  %50 = or i64 %38, 2
  %51 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 2, i64 %50
  %52 = load float, float* %51, align 4
  %53 = fmul float %52, %52
  %54 = fpext float %53 to double
  %55 = fadd double %49, %54
  store double %55, double* %7, align 8
  %56 = or i64 %38, 3
  %57 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 2, i64 %56
  %58 = load float, float* %57, align 4
  %59 = fmul float %58, %58
  %60 = fpext float %59 to double
  %61 = fadd double %55, %60
  store double %61, double* %7, align 8
  %62 = add nuw nsw i64 %38, 4
  %63 = icmp eq i64 %62, 400
  br i1 %63, label %64, label %36

64:                                               ; preds = %36
  %65 = fdiv double %61, 1.600000e+02
  %66 = tail call double @sqrt(double %65) #8
  store double %66, double* %7, align 8
  %67 = getelementptr inbounds double, double* %1, i64 2
  store double 0.000000e+00, double* %67, align 8
  br label %68

68:                                               ; preds = %68, %64
  %69 = phi double [ 0.000000e+00, %64 ], [ %93, %68 ]
  %70 = phi i64 [ 400, %64 ], [ %94, %68 ]
  %71 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 2, i64 %70
  %72 = load float, float* %71, align 4
  %73 = fmul float %72, %72
  %74 = fpext float %73 to double
  %75 = fadd double %69, %74
  store double %75, double* %67, align 8
  %76 = or i64 %70, 1
  %77 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 2, i64 %76
  %78 = load float, float* %77, align 4
  %79 = fmul float %78, %78
  %80 = fpext float %79 to double
  %81 = fadd double %75, %80
  store double %81, double* %67, align 8
  %82 = or i64 %70, 2
  %83 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 2, i64 %82
  %84 = load float, float* %83, align 4
  %85 = fmul float %84, %84
  %86 = fpext float %85 to double
  %87 = fadd double %81, %86
  store double %87, double* %67, align 8
  %88 = or i64 %70, 3
  %89 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 2, i64 %88
  %90 = load float, float* %89, align 4
  %91 = fmul float %90, %90
  %92 = fpext float %91 to double
  %93 = fadd double %87, %92
  store double %93, double* %67, align 8
  %94 = add nuw nsw i64 %70, 4
  %95 = icmp eq i64 %94, 560
  br i1 %95, label %96, label %68

96:                                               ; preds = %68
  %97 = fdiv double %93, 1.600000e+02
  %98 = tail call double @sqrt(double %97) #8
  store double %98, double* %67, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc12VadAudioProc13PitchAnalysisEPdS1_m(%"class.webrtc::VadAudioProc"*, double*, double*, i64) local_unnamed_addr #0 align 2 {
  %5 = alloca [4 x double], align 16
  %6 = alloca [4 x double], align 16
  %7 = alloca [240 x float], align 16
  %8 = alloca [240 x float], align 16
  %9 = alloca [240 x double], align 16
  %10 = alloca [240 x double], align 16
  %11 = alloca [264 x double], align 16
  %12 = bitcast [4 x double]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #8
  %13 = getelementptr inbounds [4 x double], [4 x double]* %5, i64 0, i64 0
  %14 = bitcast [4 x double]* %6 to i8*
  %15 = bitcast [4 x double]* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %15, i8 -1, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #8
  %16 = getelementptr inbounds [4 x double], [4 x double]* %6, i64 0, i64 0
  %17 = bitcast [240 x float]* %7 to i8*
  %18 = bitcast [4 x double]* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %18, i8 -1, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 960, i8* nonnull %17) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %17, i8 -1, i64 960, i1 false)
  %19 = bitcast [240 x float]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 960, i8* nonnull %19) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %19, i8 -1, i64 960, i1 false)
  %20 = bitcast [240 x double]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1920, i8* nonnull %20) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %20, i8 -1, i64 1920, i1 false)
  %21 = bitcast [240 x double]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1920, i8* nonnull %21) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %21, i8 -1, i64 1920, i1 false)
  %22 = bitcast [264 x double]* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2112, i8* nonnull %22) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %22, i8 -1, i64 2112, i1 false)
  %23 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 2, i64 80
  %24 = getelementptr inbounds [240 x float], [240 x float]* %7, i64 0, i64 0
  %25 = getelementptr inbounds [240 x float], [240 x float]* %8, i64 0, i64 0
  %26 = getelementptr inbounds [240 x double], [240 x double]* %9, i64 0, i64 0
  %27 = getelementptr inbounds [240 x double], [240 x double]* %10, i64 0, i64 0
  %28 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %29 = load %"struct.webrtc::VadAudioProc::PreFiltBankstr"*, %"struct.webrtc::VadAudioProc::PreFiltBankstr"** %28, align 8
  %30 = getelementptr inbounds %"struct.webrtc::VadAudioProc::PreFiltBankstr", %"struct.webrtc::VadAudioProc::PreFiltBankstr"* %29, i64 0, i32 0
  call void @WebRtcIsac_SplitAndFilterFloat(float* %23, float* nonnull %24, float* nonnull %25, double* nonnull %26, double* nonnull %27, %struct.PreFiltBankstr* %30) #8
  %31 = getelementptr inbounds [264 x double], [264 x double]* %11, i64 0, i64 0
  %32 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %33 = load %"struct.webrtc::VadAudioProc::PitchAnalysisStruct"*, %"struct.webrtc::VadAudioProc::PitchAnalysisStruct"** %32, align 8
  %34 = getelementptr inbounds %"struct.webrtc::VadAudioProc::PitchAnalysisStruct", %"struct.webrtc::VadAudioProc::PitchAnalysisStruct"* %33, i64 0, i32 0
  call void @WebRtcIsac_PitchAnalysis(double* nonnull %26, double* nonnull %31, %struct.PitchAnalysisStruct* %34, double* nonnull %16, double* nonnull %13) #8
  %35 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 4
  %36 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 5
  call void @_ZN6webrtc27GetSubframesPitchParametersEiPdS0_iiS0_S0_S0_S0_(i32 8000, double* nonnull %13, double* nonnull %16, i32 4, i32 3, double* %35, double* %36, double* %1, double* %2) #8
  call void @llvm.lifetime.end.p0i8(i64 2112, i8* nonnull %22) #8
  call void @llvm.lifetime.end.p0i8(i64 1920, i8* nonnull %21) #8
  call void @llvm.lifetime.end.p0i8(i64 1920, i8* nonnull %20) #8
  call void @llvm.lifetime.end.p0i8(i64 960, i8* nonnull %19) #8
  call void @llvm.lifetime.end.p0i8(i64 960, i8* nonnull %17) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc12VadAudioProc22FindFirstSpectralPeaksEPdm(%"class.webrtc::VadAudioProc"*, double* nocapture, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca [51 x double], align 16
  %5 = alloca [512 x float], align 16
  %6 = bitcast [51 x double]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 408, i8* nonnull %6) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -1, i64 408, i1 false)
  %7 = getelementptr inbounds [51 x double], [51 x double]* %4, i64 0, i64 0
  call void @_ZN6webrtc12VadAudioProc17GetLpcPolynomialsEPdm(%"class.webrtc::VadAudioProc"* %0, double* nonnull %7, i64 undef)
  %8 = bitcast [512 x float]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2048, i8* nonnull %8) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -1, i64 2048, i1 false)
  %9 = getelementptr inbounds [512 x float], [512 x float]* %5, i64 0, i64 0
  %10 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 0, i64 0
  %11 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 1, i64 0
  %12 = getelementptr inbounds [512 x float], [512 x float]* %5, i64 0, i64 2
  %13 = getelementptr inbounds [512 x float], [512 x float]* %5, i64 0, i64 3
  %14 = getelementptr inbounds [512 x float], [512 x float]* %5, i64 0, i64 1
  %15 = getelementptr inbounds [512 x float], [512 x float]* %5, i64 0, i64 4
  %16 = getelementptr inbounds [512 x float], [512 x float]* %5, i64 0, i64 8
  %17 = getelementptr inbounds [512 x float], [512 x float]* %5, i64 0, i64 12
  %18 = getelementptr inbounds [512 x float], [512 x float]* %5, i64 0, i64 16
  %19 = bitcast [512 x float]* %5 to <4 x float>*
  %20 = bitcast float* %15 to <4 x float>*
  %21 = bitcast float* %16 to <4 x float>*
  %22 = bitcast float* %17 to <4 x float>*
  br label %24

23:                                               ; preds = %107
  call void @llvm.lifetime.end.p0i8(i64 2048, i8* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 408, i8* nonnull %6) #8
  ret void

24:                                               ; preds = %107, %3
  %25 = phi i64 [ 0, %3 ], [ %115, %107 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 0, i64 2048, i1 false)
  %26 = mul nuw nsw i64 %25, 17
  %27 = getelementptr inbounds [51 x double], [51 x double]* %4, i64 0, i64 %26
  %28 = bitcast double* %27 to <4 x double>*
  %29 = load <4 x double>, <4 x double>* %28, align 8
  %30 = fptrunc <4 x double> %29 to <4 x float>
  store <4 x float> %30, <4 x float>* %19, align 16
  %31 = add nuw nsw i64 %26, 4
  %32 = getelementptr inbounds [51 x double], [51 x double]* %4, i64 0, i64 %31
  %33 = bitcast double* %32 to <4 x double>*
  %34 = load <4 x double>, <4 x double>* %33, align 8
  %35 = fptrunc <4 x double> %34 to <4 x float>
  store <4 x float> %35, <4 x float>* %20, align 16
  %36 = add nuw nsw i64 %26, 8
  %37 = getelementptr inbounds [51 x double], [51 x double]* %4, i64 0, i64 %36
  %38 = bitcast double* %37 to <4 x double>*
  %39 = load <4 x double>, <4 x double>* %38, align 8
  %40 = fptrunc <4 x double> %39 to <4 x float>
  store <4 x float> %40, <4 x float>* %21, align 16
  %41 = add nuw nsw i64 %26, 12
  %42 = getelementptr inbounds [51 x double], [51 x double]* %4, i64 0, i64 %41
  %43 = bitcast double* %42 to <4 x double>*
  %44 = load <4 x double>, <4 x double>* %43, align 8
  %45 = fptrunc <4 x double> %44 to <4 x float>
  store <4 x float> %45, <4 x float>* %22, align 16
  %46 = add nuw nsw i64 %26, 16
  %47 = getelementptr inbounds [51 x double], [51 x double]* %4, i64 0, i64 %46
  %48 = load double, double* %47, align 8
  %49 = fptrunc double %48 to float
  store float %49, float* %18, align 16
  call void @_ZN6webrtc11WebRtc_rdftEmiPfPmS0_(i64 512, i32 1, float* nonnull %9, i64* %10, float* %11) #8
  %50 = load float, float* %9, align 16
  %51 = fmul float %50, %50
  %52 = load float, float* %12, align 8
  %53 = fmul float %52, %52
  %54 = load float, float* %13, align 4
  %55 = fmul float %54, %54
  %56 = fadd float %53, %55
  br label %57

57:                                               ; preds = %117, %24
  %58 = phi i64 [ 2, %24 ], [ %118, %117 ]
  %59 = phi float [ %56, %24 ], [ %81, %117 ]
  %60 = phi float [ %51, %24 ], [ %68, %117 ]
  %61 = shl nuw i64 %58, 1
  %62 = getelementptr inbounds [512 x float], [512 x float]* %5, i64 0, i64 %61
  %63 = bitcast float* %62 to <2 x float>*
  %64 = load <2 x float>, <2 x float>* %63, align 16
  %65 = fmul <2 x float> %64, %64
  %66 = extractelement <2 x float> %65, i32 0
  %67 = extractelement <2 x float> %65, i32 1
  %68 = fadd float %66, %67
  %69 = fcmp olt float %59, %60
  %70 = fcmp olt float %59, %68
  %71 = and i1 %69, %70
  br i1 %71, label %92, label %72

72:                                               ; preds = %57
  %73 = or i64 %58, 1
  %74 = shl nuw i64 %73, 1
  %75 = getelementptr inbounds [512 x float], [512 x float]* %5, i64 0, i64 %74
  %76 = bitcast float* %75 to <2 x float>*
  %77 = load <2 x float>, <2 x float>* %76, align 8
  %78 = fmul <2 x float> %77, %77
  %79 = extractelement <2 x float> %78, i32 0
  %80 = extractelement <2 x float> %78, i32 1
  %81 = fadd float %79, %80
  %82 = fcmp olt float %68, %59
  %83 = fcmp olt float %68, %81
  %84 = and i1 %82, %83
  br i1 %84, label %92, label %117

85:                                               ; preds = %117
  %86 = load float, float* %14, align 4
  %87 = fcmp olt float %81, %68
  %88 = fmul float %86, %86
  %89 = fcmp olt float %81, %88
  %90 = and i1 %87, %89
  %91 = select i1 %90, i64 256, i64 0
  br label %107

92:                                               ; preds = %72, %57
  %93 = phi i64 [ %58, %57 ], [ %73, %72 ]
  %94 = phi float [ %59, %57 ], [ %68, %72 ]
  %95 = phi float [ %60, %57 ], [ %59, %72 ]
  %96 = phi float [ %68, %57 ], [ %81, %72 ]
  %97 = add nsw i64 %93, -1
  %98 = fdiv float 1.000000e+00, %96
  %99 = fdiv float 1.000000e+00, %95
  %100 = fdiv float 1.000000e+00, %94
  %101 = fsub float %98, %99
  %102 = fmul float %101, -5.000000e-01
  %103 = fadd float %99, %98
  %104 = fmul float %100, 2.000000e+00
  %105 = fsub float %103, %104
  %106 = fdiv float %102, %105
  br label %107

107:                                              ; preds = %85, %92
  %108 = phi i64 [ %97, %92 ], [ %91, %85 ]
  %109 = phi float [ %106, %92 ], [ 0.000000e+00, %85 ]
  %110 = uitofp i64 %108 to float
  %111 = fadd float %109, %110
  %112 = fmul float %111, 3.125000e+01
  %113 = fpext float %112 to double
  %114 = getelementptr inbounds double, double* %1, i64 %25
  store double %113, double* %114, align 8
  %115 = add nuw nsw i64 %25, 1
  %116 = icmp eq i64 %115, 3
  br i1 %116, label %23, label %24

117:                                              ; preds = %72
  %118 = add nuw nsw i64 %58, 2
  %119 = icmp eq i64 %118, 256
  br i1 %119, label %85, label %57
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc12VadAudioProc19SubframeCorrelationEPdmm(%"class.webrtc::VadAudioProc"* nocapture readonly, double*, i64, i64) local_unnamed_addr #0 align 2 {
  %5 = alloca [240 x double], align 16
  %6 = bitcast [240 x double]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1920, i8* nonnull %6) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -1, i64 1920, i1 false)
  %7 = mul i64 %3, 160
  br label %8

8:                                                ; preds = %8, %4
  %9 = phi i64 [ 0, %4 ], [ %53, %8 ]
  %10 = add i64 %7, %9
  %11 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 2, i64 %10
  %12 = bitcast float* %11 to <2 x float>*
  %13 = load <2 x float>, <2 x float>* %12, align 4
  %14 = getelementptr inbounds float, float* %11, i64 2
  %15 = bitcast float* %14 to <2 x float>*
  %16 = load <2 x float>, <2 x float>* %15, align 4
  %17 = fpext <2 x float> %13 to <2 x double>
  %18 = fpext <2 x float> %16 to <2 x double>
  %19 = getelementptr inbounds [240 x double], [240 x double]* @_ZN6webrtcL11kLpcAnalWinE, i64 0, i64 %9
  %20 = bitcast double* %19 to <2 x double>*
  %21 = load <2 x double>, <2 x double>* %20, align 16
  %22 = getelementptr inbounds double, double* %19, i64 2
  %23 = bitcast double* %22 to <2 x double>*
  %24 = load <2 x double>, <2 x double>* %23, align 16
  %25 = fmul <2 x double> %21, %17
  %26 = fmul <2 x double> %24, %18
  %27 = getelementptr inbounds [240 x double], [240 x double]* %5, i64 0, i64 %9
  %28 = bitcast double* %27 to <2 x double>*
  store <2 x double> %25, <2 x double>* %28, align 16
  %29 = getelementptr inbounds double, double* %27, i64 2
  %30 = bitcast double* %29 to <2 x double>*
  store <2 x double> %26, <2 x double>* %30, align 16
  %31 = or i64 %9, 4
  %32 = add i64 %7, %31
  %33 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 2, i64 %32
  %34 = bitcast float* %33 to <2 x float>*
  %35 = load <2 x float>, <2 x float>* %34, align 4
  %36 = getelementptr inbounds float, float* %33, i64 2
  %37 = bitcast float* %36 to <2 x float>*
  %38 = load <2 x float>, <2 x float>* %37, align 4
  %39 = fpext <2 x float> %35 to <2 x double>
  %40 = fpext <2 x float> %38 to <2 x double>
  %41 = getelementptr inbounds [240 x double], [240 x double]* @_ZN6webrtcL11kLpcAnalWinE, i64 0, i64 %31
  %42 = bitcast double* %41 to <2 x double>*
  %43 = load <2 x double>, <2 x double>* %42, align 16
  %44 = getelementptr inbounds double, double* %41, i64 2
  %45 = bitcast double* %44 to <2 x double>*
  %46 = load <2 x double>, <2 x double>* %45, align 16
  %47 = fmul <2 x double> %43, %39
  %48 = fmul <2 x double> %46, %40
  %49 = getelementptr inbounds [240 x double], [240 x double]* %5, i64 0, i64 %31
  %50 = bitcast double* %49 to <2 x double>*
  store <2 x double> %47, <2 x double>* %50, align 16
  %51 = getelementptr inbounds double, double* %49, i64 2
  %52 = bitcast double* %51 to <2 x double>*
  store <2 x double> %48, <2 x double>* %52, align 16
  %53 = add nuw nsw i64 %9, 8
  %54 = icmp eq i64 %53, 240
  br i1 %54, label %55, label %8, !llvm.loop !2

55:                                               ; preds = %8
  %56 = getelementptr inbounds [240 x double], [240 x double]* %5, i64 0, i64 0
  call void @WebRtcIsac_AutoCorr(double* %1, double* nonnull %56, i64 240, i64 16) #8
  call void @llvm.lifetime.end.p0i8(i64 1920, i8* nonnull %6) #8
  ret void
}

declare void @WebRtcIsac_AutoCorr(double*, double*, i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc12VadAudioProc17GetLpcPolynomialsEPdm(%"class.webrtc::VadAudioProc"* nocapture readonly, double*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca [240 x double], align 16
  %5 = alloca [17 x double], align 16
  %6 = alloca [16 x double], align 16
  %7 = bitcast [17 x double]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %7) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -1, i64 136, i1 false)
  %8 = bitcast [16 x double]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %8) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -1, i64 128, i1 false)
  %9 = getelementptr inbounds [17 x double], [17 x double]* %5, i64 0, i64 0
  %10 = bitcast [240 x double]* %4 to i8*
  %11 = getelementptr inbounds [240 x double], [240 x double]* %4, i64 0, i64 0
  %12 = getelementptr inbounds [16 x double], [16 x double]* %6, i64 0, i64 0
  %13 = getelementptr inbounds [17 x double], [17 x double]* %5, i64 0, i64 2
  %14 = getelementptr inbounds [17 x double], [17 x double]* %5, i64 0, i64 4
  %15 = getelementptr inbounds [17 x double], [17 x double]* %5, i64 0, i64 6
  %16 = getelementptr inbounds [17 x double], [17 x double]* %5, i64 0, i64 8
  %17 = getelementptr inbounds [17 x double], [17 x double]* %5, i64 0, i64 10
  %18 = getelementptr inbounds [17 x double], [17 x double]* %5, i64 0, i64 12
  %19 = getelementptr inbounds [17 x double], [17 x double]* %5, i64 0, i64 14
  %20 = getelementptr inbounds [17 x double], [17 x double]* %5, i64 0, i64 16
  %21 = bitcast [17 x double]* %5 to <2 x double>*
  %22 = bitcast [17 x double]* %5 to <2 x double>*
  %23 = bitcast double* %13 to <2 x double>*
  %24 = bitcast double* %13 to <2 x double>*
  %25 = bitcast double* %14 to <2 x double>*
  %26 = bitcast double* %14 to <2 x double>*
  %27 = bitcast double* %15 to <2 x double>*
  %28 = bitcast double* %15 to <2 x double>*
  %29 = bitcast double* %16 to <2 x double>*
  %30 = bitcast double* %16 to <2 x double>*
  %31 = bitcast double* %17 to <2 x double>*
  %32 = bitcast double* %17 to <2 x double>*
  %33 = bitcast double* %18 to <2 x double>*
  %34 = bitcast double* %18 to <2 x double>*
  %35 = bitcast double* %19 to <2 x double>*
  %36 = bitcast double* %19 to <2 x double>*
  br label %38

37:                                               ; preds = %89
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %7) #8
  ret void

38:                                               ; preds = %89, %3
  %39 = phi i64 [ 0, %3 ], [ %111, %89 ]
  %40 = phi i64 [ 0, %3 ], [ %110, %89 ]
  call void @llvm.lifetime.start.p0i8(i64 1920, i8* nonnull %10) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 -1, i64 1920, i1 false) #8
  %41 = mul nuw nsw i64 %40, 160
  br label %42

42:                                               ; preds = %42, %38
  %43 = phi i64 [ 0, %38 ], [ %87, %42 ]
  %44 = add nuw nsw i64 %41, %43
  %45 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 2, i64 %44
  %46 = bitcast float* %45 to <2 x float>*
  %47 = load <2 x float>, <2 x float>* %46, align 4
  %48 = getelementptr inbounds float, float* %45, i64 2
  %49 = bitcast float* %48 to <2 x float>*
  %50 = load <2 x float>, <2 x float>* %49, align 4
  %51 = fpext <2 x float> %47 to <2 x double>
  %52 = fpext <2 x float> %50 to <2 x double>
  %53 = getelementptr inbounds [240 x double], [240 x double]* @_ZN6webrtcL11kLpcAnalWinE, i64 0, i64 %43
  %54 = bitcast double* %53 to <2 x double>*
  %55 = load <2 x double>, <2 x double>* %54, align 16
  %56 = getelementptr inbounds double, double* %53, i64 2
  %57 = bitcast double* %56 to <2 x double>*
  %58 = load <2 x double>, <2 x double>* %57, align 16
  %59 = fmul <2 x double> %55, %51
  %60 = fmul <2 x double> %58, %52
  %61 = getelementptr inbounds [240 x double], [240 x double]* %4, i64 0, i64 %43
  %62 = bitcast double* %61 to <2 x double>*
  store <2 x double> %59, <2 x double>* %62, align 16
  %63 = getelementptr inbounds double, double* %61, i64 2
  %64 = bitcast double* %63 to <2 x double>*
  store <2 x double> %60, <2 x double>* %64, align 16
  %65 = or i64 %43, 4
  %66 = add nuw nsw i64 %41, %65
  %67 = getelementptr inbounds %"class.webrtc::VadAudioProc", %"class.webrtc::VadAudioProc"* %0, i64 0, i32 2, i64 %66
  %68 = bitcast float* %67 to <2 x float>*
  %69 = load <2 x float>, <2 x float>* %68, align 4
  %70 = getelementptr inbounds float, float* %67, i64 2
  %71 = bitcast float* %70 to <2 x float>*
  %72 = load <2 x float>, <2 x float>* %71, align 4
  %73 = fpext <2 x float> %69 to <2 x double>
  %74 = fpext <2 x float> %72 to <2 x double>
  %75 = getelementptr inbounds [240 x double], [240 x double]* @_ZN6webrtcL11kLpcAnalWinE, i64 0, i64 %65
  %76 = bitcast double* %75 to <2 x double>*
  %77 = load <2 x double>, <2 x double>* %76, align 16
  %78 = getelementptr inbounds double, double* %75, i64 2
  %79 = bitcast double* %78 to <2 x double>*
  %80 = load <2 x double>, <2 x double>* %79, align 16
  %81 = fmul <2 x double> %77, %73
  %82 = fmul <2 x double> %80, %74
  %83 = getelementptr inbounds [240 x double], [240 x double]* %4, i64 0, i64 %65
  %84 = bitcast double* %83 to <2 x double>*
  store <2 x double> %81, <2 x double>* %84, align 16
  %85 = getelementptr inbounds double, double* %83, i64 2
  %86 = bitcast double* %85 to <2 x double>*
  store <2 x double> %82, <2 x double>* %86, align 16
  %87 = add nuw nsw i64 %43, 8
  %88 = icmp eq i64 %87, 240
  br i1 %88, label %89, label %42, !llvm.loop !4

89:                                               ; preds = %42
  call void @WebRtcIsac_AutoCorr(double* nonnull %9, double* nonnull %11, i64 240, i64 16) #8
  call void @llvm.lifetime.end.p0i8(i64 1920, i8* nonnull %10) #8
  %90 = load <2 x double>, <2 x double>* %21, align 16
  %91 = fmul <2 x double> %90, <double 1.000100e+00, double 0x3FEF851EB851EB85>
  store <2 x double> %91, <2 x double>* %22, align 16
  %92 = load <2 x double>, <2 x double>* %23, align 16
  %93 = fmul <2 x double> %92, <double 9.702250e-01, double 9.556720e-01>
  store <2 x double> %93, <2 x double>* %24, align 16
  %94 = load <2 x double>, <2 x double>* %25, align 16
  %95 = fmul <2 x double> %94, <double 9.413370e-01, double 0x3FEDABC2FC69728A>
  store <2 x double> %95, <2 x double>* %26, align 16
  %96 = load <2 x double>, <2 x double>* %27, align 16
  %97 = fmul <2 x double> %96, <double 9.133080e-01, double 8.996090e-01>
  store <2 x double> %97, <2 x double>* %28, align 16
  %98 = load <2 x double>, <2 x double>* %29, align 16
  %99 = fmul <2 x double> %98, <double 0x3FEC5B0DD82FD75E, double 8.728230e-01>
  store <2 x double> %99, <2 x double>* %30, align 16
  %100 = load <2 x double>, <2 x double>* %31, align 16
  %101 = fmul <2 x double> %100, <double 8.597300e-01, double 8.468340e-01>
  store <2 x double> %101, <2 x double>* %32, align 16
  %102 = load <2 x double>, <2 x double>* %33, align 16
  %103 = fmul <2 x double> %102, <double 8.341320e-01, double 8.216200e-01>
  store <2 x double> %103, <2 x double>* %34, align 16
  %104 = load <2 x double>, <2 x double>* %35, align 16
  %105 = fmul <2 x double> %104, <double 8.092960e-01, double 0x3FE9824D4CB9ECF6>
  store <2 x double> %105, <2 x double>* %36, align 16
  %106 = load double, double* %20, align 16
  %107 = fmul double %106, 0x3FE92059A73B42CC
  store double %107, double* %20, align 16
  %108 = getelementptr inbounds double, double* %1, i64 %39
  %109 = call double @WebRtcIsac_LevDurb(double* %108, double* nonnull %12, double* nonnull %9, i64 16) #8
  %110 = add nuw nsw i64 %40, 1
  %111 = add nuw nsw i64 %39, 17
  %112 = icmp eq i64 %110, 3
  br i1 %112, label %37, label %38
}

declare double @WebRtcIsac_LevDurb(double*, double*, double*, i64) local_unnamed_addr #3

declare void @WebRtcIsac_SplitAndFilterFloat(float*, float*, float*, double*, double*, %struct.PreFiltBankstr*) local_unnamed_addr #3

declare void @WebRtcIsac_PitchAnalysis(double*, double*, %struct.PitchAnalysisStruct*, double*, double*) local_unnamed_addr #3

declare void @_ZN6webrtc27GetSubframesPitchParametersEiPdS0_iiS0_S0_S0_S0_(i32, double*, double*, i32, i32, double*, double*, double*, double*) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare double @sqrt(double) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !3}
