; ModuleID = '../../third_party/blink/renderer/platform/scheduler/worker/worker_scheduler_proxy.cc'
source_filename = "../../third_party/blink/renderer/platform/scheduler/worker/worker_scheduler_proxy.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::scheduler::WorkerSchedulerProxy" = type { %"class.blink::FrameOrWorkerScheduler::Observer", %"class.base::WeakPtr", %class.scoped_refptr.6, i32, %"class.std::__1::unique_ptr", i8, %"class.absl::optional", i32, i64 }
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%class.scoped_refptr.6 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.7" }>
%"class.base::RefCountedThreadSafe.7" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr.8", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.base::WeakPtr.8" = type { %"class.base::internal::WeakPtrBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap", %"class.base::WeakPtrFactory" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.10 }
%class.scoped_refptr.10 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.7", [4 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.215 }
%union.anon.215 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::scheduler::WorkerScheduler" = type { %"class.blink::FrameOrWorkerScheduler", %class.scoped_refptr.11, %class.scoped_refptr.11, %class.scoped_refptr.11, %"class.std::__1::map", i32, %"class.blink::scheduler::WorkerThreadScheduler"*, i8, i32, %"class.base::WeakPtrFactory.212" }
%class.scoped_refptr.11 = type { %"class.blink::scheduler::NonMainThreadTaskQueue"* }
%"class.blink::scheduler::NonMainThreadTaskQueue" = type { %"class.base::sequence_manager::TaskQueue", %"class.blink::scheduler::NonMainThreadSchedulerImpl"*, %"class.absl::optional.88" }
%"class.base::sequence_manager::TaskQueue" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.12", %"class.base::internal::CheckedLock", %"class.std::__1::unique_ptr.13", %"class.base::WeakPtr.86", %class.scoped_refptr.16, %class.scoped_refptr.6, i32, i32, i8*, %"class.base::WeakPtrFactory.87" }
%"class.base::RefCountedThreadSafe.12" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::CheckedLock" = type { %"class.base::Lock" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.base::sequence_manager::internal::TaskQueueImpl"* }
%"class.base::sequence_manager::internal::TaskQueueImpl" = type <{ i8*, %"class.base::sequence_manager::internal::SequenceManagerImpl"*, %class.scoped_refptr.16, %class.scoped_refptr.18, %"class.base::internal::CheckedLock", %"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread", %"struct.base::sequence_manager::internal::TaskQueueImpl::MainThreadOnly", %"class.base::sequence_manager::internal::AtomicFlagSet::AtomicFlag", i8, i8, i8, [5 x i8] }>
%"class.base::sequence_manager::internal::SequenceManagerImpl" = type opaque
%class.scoped_refptr.18 = type { %"class.base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster"* }
%"class.base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster" = type { %"class.base::RefCountedThreadSafe.19", [4 x i8], %"class.base::internal::OperationsController", %"class.base::sequence_manager::internal::TaskQueueImpl"* }
%"class.base::RefCountedThreadSafe.19" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::OperationsController" = type { %"struct.std::__1::atomic.20", [4 x i8], %"class.base::WaitableEvent" }
%"struct.std::__1::atomic.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__cxx_atomic_impl.23" }
%"struct.std::__1::__cxx_atomic_impl.23" = type { %"struct.std::__1::__cxx_atomic_base_impl.24" }
%"struct.std::__1::__cxx_atomic_base_impl.24" = type { i32 }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.25, i8, [7 x i8] }>
%class.scoped_refptr.25 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.26", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.26" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.27" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { i64 }
%"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread" = type { %"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::TaskQueue::Observer"*, %"class.base::sequence_manager::internal::LazilyDeallocatedDeque", i8, i8, i8, %"class.base::RepeatingCallback", %"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread::TracingOnly" }
%"class.base::sequence_manager::TimeDomain" = type { i32 (...)**, %"class.base::sequence_manager::internal::SequenceManagerImpl"*, %"class.base::internal::IntrusiveHeap", i32, %class.scoped_refptr.16 }
%"class.base::internal::IntrusiveHeap" = type { %"class.base::IntrusiveHeap" }
%"class.base::IntrusiveHeap" = type { %"struct.base::IntrusiveHeap<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp, base::internal::IntrusiveHeapImpl<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp>::GreaterUsingLessEqual, base::DefaultHeapHandleAccessor<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp> >::Impl" }
%"struct.base::IntrusiveHeap<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp, base::internal::IntrusiveHeapImpl<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp>::GreaterUsingLessEqual, base::DefaultHeapHandleAccessor<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp> >::Impl" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"class.std::__1::__compressed_pair.30" }
%"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp" = type { %"struct.base::sequence_manager::internal::DelayedWakeUp", %"class.base::sequence_manager::internal::TaskQueueImpl"* }
%"struct.base::sequence_manager::internal::DelayedWakeUp" = type { %"class.base::TimeTicks", i32, i32 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* }
%"class.base::sequence_manager::TaskQueue::Observer" = type { i32 (...)** }
%"class.base::sequence_manager::internal::LazilyDeallocatedDeque" = type { %"class.std::__1::unique_ptr.35", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, i64, i64, %"class.base::TimeTicks" }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* }
%"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.41 }
%class.scoped_refptr.41 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.42", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.42" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread::TracingOnly" = type <{ i8, [7 x i8], %"class.absl::optional.43", i8, [7 x i8] }>
%"class.absl::optional.43" = type { %"class.absl::optional_internal::optional_data.44" }
%"class.absl::optional_internal::optional_data.44" = type { %"class.absl::optional_internal::optional_data_base.45" }
%"class.absl::optional_internal::optional_data_base.45" = type { %"class.absl::optional_internal::optional_data_dtor_base.46" }
%"class.absl::optional_internal::optional_data_dtor_base.46" = type { i8, %union.anon.47 }
%union.anon.47 = type { %"class.base::TimeTicks" }
%"struct.base::sequence_manager::internal::TaskQueueImpl::MainThreadOnly" = type <{ %"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::TaskQueue::Observer"*, %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.48", %"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue", %"class.base::ObserverList", %"class.base::HeapHandle", i8, [7 x i8], %"class.base::trace_event::BlameContext"*, %"class.base::sequence_manager::EnqueueOrder", %"class.absl::optional.43", %"class.base::sequence_manager::EnqueueOrder", %"class.base::sequence_manager::EnqueueOrder", %"class.base::RepeatingCallback.70", %"class.base::RepeatingCallback.71", %"class.absl::optional.72", i8, [7 x i8], %"class.absl::optional.43", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.base::sequence_manager::internal::WorkQueue"* }
%"class.base::sequence_manager::internal::WorkQueue" = type opaque
%"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue" = type { %"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue::PQueue", i32, [4 x i8] }
%"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue::PQueue" = type { %"class.std::__1::priority_queue.base", [7 x i8] }
%"class.std::__1::priority_queue.base" = type <{ %"class.std::__1::vector.54", %"struct.std::__1::less" }>
%"class.std::__1::vector.54" = type { %"class.std::__1::__vector_base.55" }
%"class.std::__1::__vector_base.55" = type { %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"*, %"class.std::__1::__compressed_pair.57" }
%"struct.base::sequence_manager::Task" = type { %"struct.base::PendingTask.base", i8, i8, i8, %class.scoped_refptr.56, %"class.base::sequence_manager::EnqueueOrder" }
%"struct.base::PendingTask.base" = type <{ %"class.base::OnceCallback", %"class.base::Location", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.std::__1::array", i32, [4 x i8], i8*, i32, i8 }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"struct.std::__1::array" = type { [4 x i8*] }
%class.scoped_refptr.56 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"struct.base::sequence_manager::Task"* }
%"struct.std::__1::less" = type { i8 }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.62", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.62" = type { %"class.std::__1::__vector_base.63" }
%"class.std::__1::__vector_base.63" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.64" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::HeapHandle" = type { i64 }
%"class.base::trace_event::BlameContext" = type { %"class.base::trace_event::TraceLog::AsyncEnabledStateObserver", i8*, i8*, i8*, i8*, i64, i8*, i64, i8*, %"class.base::ThreadChecker", %"class.base::WeakPtrFactory.69" }
%"class.base::trace_event::TraceLog::AsyncEnabledStateObserver" = type { i32 (...)** }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::WeakPtrFactory.69" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::sequence_manager::EnqueueOrder" = type { i64 }
%"class.base::RepeatingCallback.70" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.71" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.absl::optional.72" = type { %"class.absl::optional_internal::optional_data.73" }
%"class.absl::optional_internal::optional_data.73" = type { %"class.absl::optional_internal::optional_data_base.74" }
%"class.absl::optional_internal::optional_data_base.74" = type { %"class.absl::optional_internal::optional_data_dtor_base.75" }
%"class.absl::optional_internal::optional_data_dtor_base.75" = type { i8, %union.anon.76 }
%union.anon.76 = type { %"struct.base::sequence_manager::internal::DelayedWakeUp" }
%"class.base::sequence_manager::internal::AtomicFlagSet::AtomicFlag" = type { %"class.base::sequence_manager::internal::AtomicFlagSet"*, %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, i64 }
%"class.base::sequence_manager::internal::AtomicFlagSet" = type { %class.scoped_refptr.16, %"class.std::__1::unique_ptr.77", %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"struct.base::sequence_manager::internal::AtomicFlagSet::Group" = type { %"struct.std::__1::atomic.100", i64, [64 x %"class.base::RepeatingCallback.105"], %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, %"class.std::__1::unique_ptr.77", %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"struct.std::__1::atomic.100" = type { %"struct.std::__1::__atomic_base.101" }
%"struct.std::__1::__atomic_base.101" = type { %"struct.std::__1::__atomic_base.102" }
%"struct.std::__1::__atomic_base.102" = type { %"struct.std::__1::__cxx_atomic_impl.103" }
%"struct.std::__1::__cxx_atomic_impl.103" = type { %"struct.std::__1::__cxx_atomic_base_impl.104" }
%"struct.std::__1::__cxx_atomic_base_impl.104" = type { i64 }
%"class.base::RepeatingCallback.105" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr.86" = type { %"class.base::internal::WeakPtrBase" }
%class.scoped_refptr.16 = type { %"class.base::sequence_manager::internal::AssociatedThreadId"* }
%"class.base::sequence_manager::internal::AssociatedThreadId" = type { %"class.base::RefCountedThreadSafe.17", %"struct.std::__1::atomic" }
%"class.base::RefCountedThreadSafe.17" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory.87" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::scheduler::NonMainThreadSchedulerImpl" = type { %"class.blink::scheduler::ThreadSchedulerImpl", %"class.blink::scheduler::NonMainThreadSchedulerHelper" }
%"class.blink::scheduler::ThreadSchedulerImpl" = type { %"class.blink::ThreadScheduler", %"class.blink::scheduler::WebThreadScheduler", %"class.v8::Isolate"* }
%"class.blink::ThreadScheduler" = type { i32 (...)** }
%"class.blink::scheduler::WebThreadScheduler" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.blink::scheduler::NonMainThreadSchedulerHelper" = type { %"class.blink::scheduler::SchedulerHelper", %"class.blink::scheduler::NonMainThreadSchedulerImpl"*, %class.scoped_refptr.11, %class.scoped_refptr.11 }
%"class.blink::scheduler::SchedulerHelper" = type { %"class.base::sequence_manager::SequenceManager::Observer", %"class.base::sequence_manager::SequenceManager"*, %class.scoped_refptr.6, %"class.blink::scheduler::SchedulerHelper::Observer"*, %"class.blink::scheduler::UkmTaskSampler", %"class.absl::optional.93" }
%"class.base::sequence_manager::SequenceManager::Observer" = type { i32 (...)** }
%"class.base::sequence_manager::SequenceManager" = type { i32 (...)** }
%"class.blink::scheduler::SchedulerHelper::Observer" = type { i32 (...)** }
%"class.blink::scheduler::UkmTaskSampler" = type { double, double, %"class.std::__1::mersenne_twister_engine" }
%"class.std::__1::mersenne_twister_engine" = type { [312 x i64], i64 }
%"class.absl::optional.93" = type { %"class.absl::optional_internal::optional_data.94" }
%"class.absl::optional_internal::optional_data.94" = type { %"class.absl::optional_internal::optional_data_base.95" }
%"class.absl::optional_internal::optional_data_base.95" = type { %"class.absl::optional_internal::optional_data_dtor_base.96" }
%"class.absl::optional_internal::optional_data_dtor_base.96" = type { i8, %union.anon.97 }
%union.anon.97 = type { %"class.base::SimpleTaskExecutor" }
%"class.base::SimpleTaskExecutor" = type { %"class.base::TaskExecutor", %class.scoped_refptr.6, %"class.base::TaskExecutor"* }
%"class.base::TaskExecutor" = type { i32 (...)** }
%"class.absl::optional.88" = type { %"class.absl::optional_internal::optional_data.89" }
%"class.absl::optional_internal::optional_data.89" = type { %"class.absl::optional_internal::optional_data_base.90" }
%"class.absl::optional_internal::optional_data_base.90" = type { %"class.absl::optional_internal::optional_data_dtor_base.91" }
%"class.absl::optional_internal::optional_data_dtor_base.91" = type { i8, %union.anon.92 }
%union.anon.92 = type { i32 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.106", %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.blink::scheduler::WorkerThreadScheduler" = type { %"class.blink::scheduler::NonMainThreadSchedulerImpl", %"class.blink::scheduler::IdleHelper::Delegate", i32, %"class.blink::scheduler::IdleHelper", i8, %class.scoped_refptr.11, %class.scoped_refptr.6, %class.scoped_refptr.6, i32, %"class.blink::scheduler::WorkerMetricsHelper", %"class.blink::scheduler::TraceableVariableController", %"class.WTF::HashSet", %"class.std::__1::unique_ptr.172", %"class.blink::scheduler::WakeUpBudgetPool"*, %"class.blink::scheduler::CPUTimeBudgetPool"*, i32, i64, %"class.std::__1::unique_ptr.206" }
%"class.blink::scheduler::IdleHelper::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::IdleHelper" = type { %"class.base::TaskObserver", %"class.blink::scheduler::SingleThreadIdleTaskRunner::Delegate", %"class.blink::scheduler::SchedulerHelper"*, %"class.blink::scheduler::IdleHelper::Delegate"*, %class.scoped_refptr.115, %class.scoped_refptr.116, %"class.blink::scheduler::CancelableClosureHolder", %"class.blink::scheduler::CancelableClosureHolder", %"class.blink::scheduler::IdleHelper::State", %"class.base::TimeDelta", i8, %"class.base::WeakPtr.131", %"class.base::WeakPtrFactory.132" }
%"class.base::TaskObserver" = type { i32 (...)** }
%"class.blink::scheduler::SingleThreadIdleTaskRunner::Delegate" = type { i32 (...)** }
%class.scoped_refptr.115 = type { %"class.base::sequence_manager::TaskQueue"* }
%class.scoped_refptr.116 = type { %"class.blink::scheduler::SingleThreadIdleTaskRunner"* }
%"class.blink::scheduler::SingleThreadIdleTaskRunner" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.117", %class.scoped_refptr.6, %"class.std::__1::multimap", %"class.blink::scheduler::SingleThreadIdleTaskRunner::Delegate"*, %"class.base::trace_event::BlameContext"*, %"class.base::WeakPtr.128", %"class.base::WeakPtrFactory.129" }
%"class.base::RefCountedThreadSafe.117" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.118" }
%"class.std::__1::__tree.118" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.119", %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.base::WeakPtr.128" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.129" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::scheduler::CancelableClosureHolder" = type { %"class.base::RepeatingCallback.105", %"class.base::internal::CancelableCallbackImpl" }
%"class.base::internal::CancelableCallbackImpl" = type { %"class.base::RepeatingCallback.105", %"class.base::WeakPtrFactory.130" }
%"class.base::WeakPtrFactory.130" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::scheduler::IdleHelper::State" = type { i32 (...)**, %"class.blink::scheduler::SchedulerHelper"*, %"class.blink::scheduler::IdleHelper::Delegate"*, i32, %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i8, i8*, i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::WeakPtr.131" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.132" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::scheduler::WorkerMetricsHelper" = type { %"class.blink::scheduler::MetricsHelper", %"class.scheduling_metrics::TaskDurationMetricReporter.148", %"class.scheduling_metrics::TaskDurationMetricReporter.148", %"class.scheduling_metrics::TaskDurationMetricReporter.149", %"class.scheduling_metrics::TaskDurationMetricReporter.149", %"class.absl::optional" }
%"class.blink::scheduler::MetricsHelper" = type { i32, %"class.scheduling_metrics::ThreadMetrics", %"class.scheduling_metrics::TaskDurationMetricReporter.147", %"class.scheduling_metrics::TaskDurationMetricReporter.147", %"class.scheduling_metrics::TaskDurationMetricReporter.147", %"class.scheduling_metrics::TaskDurationMetricReporter.147", %"class.scheduling_metrics::TaskDurationMetricReporter.147", %"class.scheduling_metrics::TaskDurationMetricReporter.147" }
%"class.scheduling_metrics::ThreadMetrics" = type { i32, i8, %"class.base::ThreadTicks", %"class.scheduling_metrics::TaskDurationMetricReporter", %"class.scheduling_metrics::TaskDurationMetricReporter", %"class.scheduling_metrics::TaskDurationMetricReporter", %"class.scheduling_metrics::TaskDurationMetricReporter" }
%"class.base::ThreadTicks" = type { %"class.base::time_internal::TimeBase.133" }
%"class.base::time_internal::TimeBase.133" = type { i64 }
%"class.scheduling_metrics::TaskDurationMetricReporter" = type { %"class.std::__1::unique_ptr.134" }
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.base::ScaledLinearHistogram"* }
%"class.base::ScaledLinearHistogram" = type { %"class.base::HistogramBase"*, i32, %"class.std::__1::vector.137" }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.20", [4 x i8] }>
%"class.std::__1::vector.137" = type { %"class.std::__1::__vector_base.138" }
%"class.std::__1::__vector_base.138" = type { i32*, i32*, %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { i32* }
%"class.scheduling_metrics::TaskDurationMetricReporter.147" = type { %"class.std::__1::unique_ptr.134" }
%"class.scheduling_metrics::TaskDurationMetricReporter.148" = type { %"class.std::__1::unique_ptr.134" }
%"class.scheduling_metrics::TaskDurationMetricReporter.149" = type { %"class.std::__1::unique_ptr.134" }
%"class.blink::scheduler::TraceableVariableController" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.150", %"class.std::__1::__compressed_pair.158", %"class.std::__1::__compressed_pair.163", %"class.std::__1::__compressed_pair.165", [4 x i8] }>
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152", %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { float }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.169" }
%"class.WTF::HashTable.169" = type <{ %"class.blink::scheduler::WorkerScheduler"**, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.blink::scheduler::TaskQueueThrottler"* }
%"class.blink::scheduler::TaskQueueThrottler" = type { %"class.blink::scheduler::BudgetPoolController", %"class.WTF::HashMap.175", %"class.base::RepeatingCallback.180", %class.scoped_refptr.6, %"class.blink::scheduler::ThreadSchedulerImpl"*, %"class.blink::scheduler::TraceableVariableController"*, %"class.base::TickClock"*, %"class.std::__1::unique_ptr.181", %"class.blink::scheduler::CancelableClosureHolder", %"class.absl::optional.43", i8, [7 x i8], %"class.WTF::HashMap.187", %"class.base::WeakPtrFactory.192" }
%"class.blink::scheduler::BudgetPoolController" = type { i32 (...)** }
%"class.WTF::HashMap.175" = type { %"class.WTF::HashTable.176" }
%"class.WTF::HashTable.176" = type <{ %"struct.WTF::KeyValuePair.179"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.179" = type opaque
%"class.base::RepeatingCallback.180" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::TickClock" = type { i32 (...)** }
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.blink::scheduler::ThrottledTimeDomain"* }
%"class.blink::scheduler::ThrottledTimeDomain" = type opaque
%"class.WTF::HashMap.187" = type { %"class.WTF::HashTable.188" }
%"class.WTF::HashTable.188" = type <{ %"struct.WTF::KeyValuePair.191"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.191" = type opaque
%"class.base::WeakPtrFactory.192" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::scheduler::WakeUpBudgetPool" = type { %"class.blink::scheduler::BudgetPool.base", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, %"class.absl::optional.43" }
%"class.blink::scheduler::BudgetPool.base" = type <{ i32 (...)**, i8*, %"class.blink::scheduler::BudgetPoolController"*, %"class.WTF::HashSet.196", i8 }>
%"class.WTF::HashSet.196" = type { %"class.WTF::HashTable.197" }
%"class.WTF::HashTable.197" = type <{ %"class.base::sequence_manager::TaskQueue"**, i32, i32, i32, [4 x i8] }>
%"class.blink::scheduler::CPUTimeBudgetPool" = type { %"class.blink::scheduler::BudgetPool.base", %"class.absl::optional.200", %"class.absl::optional.200", %"class.base::TimeDelta", %"class.blink::scheduler::TraceableCounter", %"class.base::TimeTicks", double, %"class.base::RepeatingCallback.205" }
%"class.absl::optional.200" = type { %"class.absl::optional_internal::optional_data.201" }
%"class.absl::optional_internal::optional_data.201" = type { %"class.absl::optional_internal::optional_data_base.202" }
%"class.absl::optional_internal::optional_data_base.202" = type { %"class.absl::optional_internal::optional_data_dtor_base.203" }
%"class.absl::optional_internal::optional_data_dtor_base.203" = type { i8, %union.anon.204 }
%union.anon.204 = type { %"class.base::TimeDelta" }
%"class.blink::scheduler::TraceableCounter" = type { %"class.blink::scheduler::TraceableVariable", i8*, double (%"class.base::TimeDelta"*)*, %"class.base::TimeDelta" }
%"class.blink::scheduler::TraceableVariable" = type { i32 (...)**, %"class.blink::scheduler::TraceableVariableController"* }
%"class.base::RepeatingCallback.205" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.base::WeakPtrFactory.212" = type { %"class.base::internal::WeakPtrFactoryBase" }

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink9scheduler15WorkerSchedulerEFvNS4_24SchedulingLifecycleStateEEJNS_7WeakPtrIS5_EES6_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink9scheduler15WorkerSchedulerEFvNS3_24SchedulingLifecycleStateEEJNS_7WeakPtrIS4_EES5_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink9scheduler15WorkerSchedulerEFvNS4_24SchedulingLifecycleStateEEJNS_7WeakPtrIS5_EES6_EEEEEbPKNS0_13BindStateBaseENSC_21CancellationQueryModeE = comdat any

@_ZTVN5blink9scheduler20WorkerSchedulerProxyE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::scheduler::WorkerSchedulerProxy"*)* @_ZN5blink9scheduler20WorkerSchedulerProxyD2Ev to i8*), i8* bitcast (void (%"class.blink::scheduler::WorkerSchedulerProxy"*)* @_ZN5blink9scheduler20WorkerSchedulerProxyD0Ev to i8*), i8* bitcast (void (%"class.blink::scheduler::WorkerSchedulerProxy"*, i32)* @_ZN5blink9scheduler20WorkerSchedulerProxy23OnLifecycleStateChangedENS0_24SchedulingLifecycleStateE to i8*)] }, align 8
@.str = private unnamed_addr constant [24 x i8] c"OnLifecycleStateChanged\00", align 1
@.str.1 = private unnamed_addr constant [85 x i8] c"../../third_party/blink/renderer/platform/scheduler/worker/worker_scheduler_proxy.cc\00", align 1
@.str.2 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.3 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1

@_ZN5blink9scheduler20WorkerSchedulerProxyC1EPNS_22FrameOrWorkerSchedulerE = hidden unnamed_addr alias void (%"class.blink::scheduler::WorkerSchedulerProxy"*, %"class.blink::FrameOrWorkerScheduler"*), void (%"class.blink::scheduler::WorkerSchedulerProxy"*, %"class.blink::FrameOrWorkerScheduler"*)* @_ZN5blink9scheduler20WorkerSchedulerProxyC2EPNS_22FrameOrWorkerSchedulerE
@_ZN5blink9scheduler20WorkerSchedulerProxyD1Ev = hidden unnamed_addr alias void (%"class.blink::scheduler::WorkerSchedulerProxy"*), void (%"class.blink::scheduler::WorkerSchedulerProxy"*)* @_ZN5blink9scheduler20WorkerSchedulerProxyD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler20WorkerSchedulerProxyC2EPNS_22FrameOrWorkerSchedulerE(%"class.blink::scheduler::WorkerSchedulerProxy"*, %"class.blink::FrameOrWorkerScheduler"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::scheduler::WorkerSchedulerProxy", %"class.blink::scheduler::WorkerSchedulerProxy"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::scheduler::WorkerSchedulerProxy", %"class.blink::scheduler::WorkerSchedulerProxy"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink9scheduler20WorkerSchedulerProxyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::scheduler::WorkerSchedulerProxy", %"class.blink::scheduler::WorkerSchedulerProxy"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"* %5) #6
  %6 = getelementptr inbounds %"class.blink::scheduler::WorkerSchedulerProxy", %"class.blink::scheduler::WorkerSchedulerProxy"* %0, i64 0, i32 2, i32 0
  store %"class.base::SingleThreadTaskRunner"* null, %"class.base::SingleThreadTaskRunner"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::scheduler::WorkerSchedulerProxy", %"class.blink::scheduler::WorkerSchedulerProxy"* %0, i64 0, i32 3
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %"class.blink::scheduler::WorkerSchedulerProxy", %"class.blink::scheduler::WorkerSchedulerProxy"* %0, i64 0, i32 4
  %9 = bitcast %"class.std::__1::unique_ptr"* %8 to i64*
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds %"class.blink::scheduler::WorkerSchedulerProxy", %"class.blink::scheduler::WorkerSchedulerProxy"* %0, i64 0, i32 5
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %"class.blink::scheduler::WorkerSchedulerProxy", %"class.blink::scheduler::WorkerSchedulerProxy"* %0, i64 0, i32 6
  %12 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %12, align 4
  %13 = getelementptr inbounds %"class.blink::scheduler::WorkerSchedulerProxy", %"class.blink::scheduler::WorkerSchedulerProxy"* %0, i64 0, i32 7
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds %"class.blink::scheduler::WorkerSchedulerProxy", %"class.blink::scheduler::WorkerSchedulerProxy"* %0, i64 0, i32 8
  store i64 0, i64* %14, align 8
  %15 = tail call %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* @_ZN5blink22FrameOrWorkerScheduler20AddLifecycleObserverENS0_12ObserverTypeEPNS0_8ObserverE(%"class.blink::FrameOrWorkerScheduler"* %1, i32 1, %"class.blink::FrameOrWorkerScheduler::Observer"* %3) #6
  %16 = ptrtoint %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* %15 to i64
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %8, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"*, %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"** %17, align 8
  store i64 %16, i64* %9, align 8
  %19 = icmp eq %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %2
  tail call void @_ZN5blink22FrameOrWorkerScheduler23LifecycleObserverHandleD1Ev(%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* nonnull %18) #6
  %21 = bitcast %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* %18 to i8*
  tail call void @free(i8* %21) #6
  br label %22

22:                                               ; preds = %20, %2
  %23 = bitcast %"class.blink::FrameOrWorkerScheduler"* %1 to %"class.blink::FrameScheduler"* (%"class.blink::FrameOrWorkerScheduler"*)***
  %24 = load %"class.blink::FrameScheduler"* (%"class.blink::FrameOrWorkerScheduler"*)**, %"class.blink::FrameScheduler"* (%"class.blink::FrameOrWorkerScheduler"*)*** %23, align 8
  %25 = getelementptr inbounds %"class.blink::FrameScheduler"* (%"class.blink::FrameOrWorkerScheduler"*)*, %"class.blink::FrameScheduler"* (%"class.blink::FrameOrWorkerScheduler"*)** %24, i64 4
  %26 = load %"class.blink::FrameScheduler"* (%"class.blink::FrameOrWorkerScheduler"*)*, %"class.blink::FrameScheduler"* (%"class.blink::FrameOrWorkerScheduler"*)** %25, align 8
  %27 = tail call %"class.blink::FrameScheduler"* %26(%"class.blink::FrameOrWorkerScheduler"* %1) #6
  %28 = icmp eq %"class.blink::FrameScheduler"* %27, null
  br i1 %28, label %41, label %29

29:                                               ; preds = %22
  %30 = tail call i32 @_ZN5blink9scheduler18GetFrameOriginTypeEPNS_14FrameSchedulerE(%"class.blink::FrameScheduler"* nonnull %27) #6
  %31 = bitcast %"class.absl::optional"* %11 to i64*
  %32 = zext i32 %30 to i64
  %33 = shl nuw i64 %32, 32
  %34 = or i64 %33, 1
  store i64 %34, i64* %31, align 4
  %35 = tail call i32 @_ZN5blink9scheduler14GetFrameStatusEPNS_14FrameSchedulerE(%"class.blink::FrameScheduler"* nonnull %27) #6
  store i32 %35, i32* %13, align 4
  %36 = bitcast %"class.blink::FrameScheduler"* %27 to i64 (%"class.blink::FrameScheduler"*)***
  %37 = load i64 (%"class.blink::FrameScheduler"*)**, i64 (%"class.blink::FrameScheduler"*)*** %36, align 8
  %38 = getelementptr inbounds i64 (%"class.blink::FrameScheduler"*)*, i64 (%"class.blink::FrameScheduler"*)** %37, i64 33
  %39 = load i64 (%"class.blink::FrameScheduler"*)*, i64 (%"class.blink::FrameScheduler"*)** %38, align 8
  %40 = tail call i64 %39(%"class.blink::FrameScheduler"* nonnull %27) #6
  store i64 %40, i64* %14, align 8
  br label %41

41:                                               ; preds = %22, %29
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* @_ZN5blink22FrameOrWorkerScheduler20AddLifecycleObserverENS0_12ObserverTypeEPNS0_8ObserverE(%"class.blink::FrameOrWorkerScheduler"*, i32, %"class.blink::FrameOrWorkerScheduler::Observer"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @_ZN5blink9scheduler18GetFrameOriginTypeEPNS_14FrameSchedulerE(%"class.blink::FrameScheduler"*) local_unnamed_addr #2

declare i32 @_ZN5blink9scheduler14GetFrameStatusEPNS_14FrameSchedulerE(%"class.blink::FrameScheduler"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler20WorkerSchedulerProxyD2Ev(%"class.blink::scheduler::WorkerSchedulerProxy"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::WorkerSchedulerProxy", %"class.blink::scheduler::WorkerSchedulerProxy"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink9scheduler20WorkerSchedulerProxyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::scheduler::WorkerSchedulerProxy", %"class.blink::scheduler::WorkerSchedulerProxy"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"*, %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"** %3, align 8
  store %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* null, %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"** %3, align 8
  %5 = icmp eq %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN5blink22FrameOrWorkerScheduler23LifecycleObserverHandleD1Ev(%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* nonnull %4) #6
  %7 = bitcast %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* %4 to i8*
  tail call void @free(i8* %7) #6
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.blink::scheduler::WorkerSchedulerProxy", %"class.blink::scheduler::WorkerSchedulerProxy"* %0, i64 0, i32 2, i32 0
  %10 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %9, align 8
  %11 = icmp eq %"class.base::SingleThreadTaskRunner"* %10, null
  br i1 %11, label %20, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %10, i64 0, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe.7", %"class.base::RefCountedThreadSafe.7"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw sub i32* %14, i32 1 acq_rel
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %17, label %20

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.base::RefCountedThreadSafe.7", %"class.base::RefCountedThreadSafe.7"* %13, i64 -2
  %19 = bitcast %"class.base::RefCountedThreadSafe.7"* %18 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %19) #6
  br label %20

20:                                               ; preds = %8, %12, %17
  %21 = getelementptr inbounds %"class.blink::scheduler::WorkerSchedulerProxy", %"class.blink::scheduler::WorkerSchedulerProxy"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %21) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler20WorkerSchedulerProxyD0Ev(%"class.blink::scheduler::WorkerSchedulerProxy"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::WorkerSchedulerProxy", %"class.blink::scheduler::WorkerSchedulerProxy"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink9scheduler20WorkerSchedulerProxyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::scheduler::WorkerSchedulerProxy", %"class.blink::scheduler::WorkerSchedulerProxy"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"*, %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"** %3, align 8
  store %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* null, %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"** %3, align 8
  %5 = icmp eq %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN5blink22FrameOrWorkerScheduler23LifecycleObserverHandleD1Ev(%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* nonnull %4) #6
  %7 = bitcast %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* %4 to i8*
  tail call void @free(i8* %7) #6
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.blink::scheduler::WorkerSchedulerProxy", %"class.blink::scheduler::WorkerSchedulerProxy"* %0, i64 0, i32 2, i32 0
  %10 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %9, align 8
  %11 = icmp eq %"class.base::SingleThreadTaskRunner"* %10, null
  br i1 %11, label %20, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %10, i64 0, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe.7", %"class.base::RefCountedThreadSafe.7"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw sub i32* %14, i32 1 acq_rel
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %17, label %20

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.base::RefCountedThreadSafe.7", %"class.base::RefCountedThreadSafe.7"* %13, i64 -2
  %19 = bitcast %"class.base::RefCountedThreadSafe.7"* %18 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %19) #6
  br label %20

20:                                               ; preds = %8, %12, %17
  %21 = getelementptr inbounds %"class.blink::scheduler::WorkerSchedulerProxy", %"class.blink::scheduler::WorkerSchedulerProxy"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %21) #6
  %22 = bitcast %"class.blink::scheduler::WorkerSchedulerProxy"* %0 to i8*
  tail call void @_ZdlPv(i8* %22) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler20WorkerSchedulerProxy24OnWorkerSchedulerCreatedEN4base7WeakPtrINS0_15WorkerSchedulerEEE(%"class.blink::scheduler::WorkerSchedulerProxy"*, %"class.base::WeakPtr"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::scheduler::WorkerSchedulerProxy", %"class.blink::scheduler::WorkerSchedulerProxy"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.base::WeakPtr"* %1 to i64*
  %7 = load i64, i64* %6, align 8
  store %"class.base::internal::WeakReference::Flag"* null, %"class.base::internal::WeakReference::Flag"** %5, align 8
  %8 = bitcast %"class.base::WeakPtr"* %4 to i64*
  %9 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %9, align 8
  store i64 %7, i64* %8, align 8
  %11 = icmp eq %"class.base::internal::WeakReference::Flag"* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw sub i32* %13, i32 1 acq_rel
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %18

16:                                               ; preds = %12
  tail call void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"* nonnull %10) #6
  %17 = bitcast %"class.base::internal::WeakReference::Flag"* %10 to i8*
  tail call void @_ZdlPv(i8* %17) #7
  br label %18

18:                                               ; preds = %2, %12, %16
  %19 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %1, i64 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.blink::scheduler::WorkerSchedulerProxy", %"class.blink::scheduler::WorkerSchedulerProxy"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 0
  %23 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %22) #6
  br i1 %23, label %27, label %24

24:                                               ; preds = %18
  %25 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0)) #6
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #6
  br label %27

27:                                               ; preds = %24, %18
  %28 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %22) #6
  br i1 %28, label %29, label %32

29:                                               ; preds = %27
  %30 = bitcast i64* %21 to %"class.blink::scheduler::WorkerScheduler"**
  %31 = load %"class.blink::scheduler::WorkerScheduler"*, %"class.blink::scheduler::WorkerScheduler"** %30, align 8
  br label %32

32:                                               ; preds = %27, %29
  %33 = phi %"class.blink::scheduler::WorkerScheduler"* [ %31, %29 ], [ null, %27 ]
  %34 = getelementptr inbounds %"class.blink::scheduler::WorkerScheduler", %"class.blink::scheduler::WorkerScheduler"* %33, i64 0, i32 6
  %35 = load %"class.blink::scheduler::WorkerThreadScheduler"*, %"class.blink::scheduler::WorkerThreadScheduler"** %34, align 8
  %36 = call %"class.blink::scheduler::NonMainThreadTaskQueue"* @_ZN5blink9scheduler21WorkerThreadScheduler16ControlTaskQueueEv(%"class.blink::scheduler::WorkerThreadScheduler"* %35) #6
  %37 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadTaskQueue", %"class.blink::scheduler::NonMainThreadTaskQueue"* %36, i64 0, i32 0, i32 6, i32 0
  %38 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %37, align 8
  %39 = icmp eq %"class.base::SingleThreadTaskRunner"* %38, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %32
  %41 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %38, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = atomicrmw add i32* %41, i32 1 monotonic
  br label %43

43:                                               ; preds = %32, %40
  %44 = getelementptr inbounds %"class.blink::scheduler::WorkerSchedulerProxy", %"class.blink::scheduler::WorkerSchedulerProxy"* %0, i64 0, i32 2
  %45 = ptrtoint %"class.base::SingleThreadTaskRunner"* %38 to i64
  %46 = bitcast %class.scoped_refptr.6* %44 to i64*
  %47 = getelementptr inbounds %class.scoped_refptr.6, %class.scoped_refptr.6* %44, i64 0, i32 0
  %48 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %47, align 8
  store i64 %45, i64* %46, align 8
  %49 = icmp eq %"class.base::SingleThreadTaskRunner"* %48, null
  br i1 %49, label %58, label %50

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %48, i64 0, i32 0, i32 0, i32 1
  %52 = getelementptr inbounds %"class.base::RefCountedThreadSafe.7", %"class.base::RefCountedThreadSafe.7"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = atomicrmw sub i32* %52, i32 1 acq_rel
  %54 = icmp eq i32 %53, 1
  br i1 %54, label %55, label %58

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.base::RefCountedThreadSafe.7", %"class.base::RefCountedThreadSafe.7"* %51, i64 -2
  %57 = bitcast %"class.base::RefCountedThreadSafe.7"* %56 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %57) #6
  br label %58

58:                                               ; preds = %43, %50, %55
  %59 = icmp eq %"class.blink::scheduler::NonMainThreadTaskQueue"* %36, null
  br i1 %59, label %72, label %60

60:                                               ; preds = %58
  %61 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadTaskQueue", %"class.blink::scheduler::NonMainThreadTaskQueue"* %36, i64 0, i32 0, i32 1
  %62 = getelementptr inbounds %"class.base::RefCountedThreadSafe.12", %"class.base::RefCountedThreadSafe.12"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = atomicrmw sub i32* %62, i32 1 acq_rel
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %65, label %72

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.base::RefCountedThreadSafe.12", %"class.base::RefCountedThreadSafe.12"* %61, i64 -2
  %67 = bitcast %"class.base::RefCountedThreadSafe.12"* %66 to %"class.base::sequence_manager::TaskQueue"*
  %68 = bitcast %"class.base::RefCountedThreadSafe.12"* %66 to void (%"class.base::sequence_manager::TaskQueue"*)***
  %69 = load void (%"class.base::sequence_manager::TaskQueue"*)**, void (%"class.base::sequence_manager::TaskQueue"*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.base::sequence_manager::TaskQueue"*)*, void (%"class.base::sequence_manager::TaskQueue"*)** %69, i64 3
  %71 = load void (%"class.base::sequence_manager::TaskQueue"*)*, void (%"class.base::sequence_manager::TaskQueue"*)** %70, align 8
  call void %71(%"class.base::sequence_manager::TaskQueue"* nonnull %67) #6
  br label %72

72:                                               ; preds = %58, %60, %65
  %73 = getelementptr inbounds %"class.blink::scheduler::WorkerSchedulerProxy", %"class.blink::scheduler::WorkerSchedulerProxy"* %0, i64 0, i32 5
  store i8 1, i8* %73, align 8
  ret void
}

declare %"class.blink::scheduler::NonMainThreadTaskQueue"* @_ZN5blink9scheduler21WorkerThreadScheduler16ControlTaskQueueEv(%"class.blink::scheduler::WorkerThreadScheduler"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler20WorkerSchedulerProxy23OnLifecycleStateChangedENS0_24SchedulingLifecycleStateE(%"class.blink::scheduler::WorkerSchedulerProxy"*, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = getelementptr inbounds %"class.blink::scheduler::WorkerSchedulerProxy", %"class.blink::scheduler::WorkerSchedulerProxy"* %0, i64 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, %1
  br i1 %7, label %33, label %8

8:                                                ; preds = %2
  store i32 %1, i32* %5, align 8
  %9 = getelementptr inbounds %"class.blink::scheduler::WorkerSchedulerProxy", %"class.blink::scheduler::WorkerSchedulerProxy"* %0, i64 0, i32 5
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %33, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::scheduler::WorkerSchedulerProxy", %"class.blink::scheduler::WorkerSchedulerProxy"* %0, i64 0, i32 2, i32 0
  %14 = bitcast %"class.base::SingleThreadTaskRunner"** %13 to %"class.base::TaskRunner"**
  %15 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %14, align 8
  %16 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #6
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.1, i64 0, i64 0), i32 55) #6
  %17 = call i8* @_Znwm(i64 72) #7, !noalias !3
  %18 = bitcast i8* %17 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %18, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink9scheduler15WorkerSchedulerEFvNS4_24SchedulingLifecycleStateEEJNS_7WeakPtrIS5_EES6_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink9scheduler15WorkerSchedulerEFvNS3_24SchedulingLifecycleStateEEJNS_7WeakPtrIS4_EES5_EE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink9scheduler15WorkerSchedulerEFvNS4_24SchedulingLifecycleStateEEJNS_7WeakPtrIS5_EES6_EEEEEbPKNS0_13BindStateBaseENSC_21CancellationQueryModeE) #6, !noalias !3
  %19 = getelementptr inbounds i8, i8* %17, i64 32
  %20 = bitcast i8* %19 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::scheduler::WorkerScheduler"*, i32)* @_ZN5blink9scheduler15WorkerScheduler23OnLifecycleStateChangedENS0_24SchedulingLifecycleStateE to i64), i64 0>, <2 x i64>* %20, align 8, !noalias !3
  %21 = getelementptr inbounds i8, i8* %17, i64 48
  %22 = bitcast i8* %21 to %"class.base::internal::WeakReference"*
  %23 = getelementptr inbounds %"class.blink::scheduler::WorkerSchedulerProxy", %"class.blink::scheduler::WorkerSchedulerProxy"* %0, i64 0, i32 1, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* %22, %"class.base::internal::WeakReference"* dereferenceable(8) %23) #6, !noalias !3
  %24 = getelementptr inbounds i8, i8* %17, i64 56
  %25 = bitcast i8* %24 to i64*
  %26 = getelementptr inbounds %"class.blink::scheduler::WorkerSchedulerProxy", %"class.blink::scheduler::WorkerSchedulerProxy"* %0, i64 0, i32 1, i32 0, i32 1
  %27 = load i64, i64* %26, align 8, !noalias !3
  store i64 %27, i64* %25, align 8, !noalias !3
  %28 = getelementptr inbounds i8, i8* %17, i64 64
  %29 = bitcast i8* %28 to i32*
  store i32 %1, i32* %29, align 4, !noalias !3
  %30 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %17, i8** %30, align 8, !alias.scope !3
  %31 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %15, %"class.base::Location"* nonnull dereferenceable(32) %3, %"class.base::OnceCallback"* nonnull %4) #6
  %32 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %32) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #6
  br label %33

33:                                               ; preds = %8, %2, %12
  ret void
}

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #2

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

declare void @_ZN5blink9scheduler15WorkerScheduler23OnLifecycleStateChangedENS0_24SchedulingLifecycleStateE(%"class.blink::scheduler::WorkerScheduler"*, i32) #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

declare void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"*) unnamed_addr #3

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink22FrameOrWorkerScheduler23LifecycleObserverHandleD1Ev(%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink9scheduler15WorkerSchedulerEFvNS4_24SchedulingLifecycleStateEEJNS_7WeakPtrIS5_EES6_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to i32*
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %8 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #6
  br i1 %8, label %9, label %45

9:                                                ; preds = %1
  %10 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %11 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to %"class.blink::scheduler::WorkerScheduler"**
  %12 = load %"class.blink::scheduler::WorkerScheduler"*, %"class.blink::scheduler::WorkerScheduler"** %11, align 8
  %13 = icmp eq %"class.blink::scheduler::WorkerScheduler"* %12, null
  br i1 %13, label %45, label %14

14:                                               ; preds = %9
  %15 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %18 = bitcast void ()** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #6
  br i1 %20, label %24, label %21

21:                                               ; preds = %14
  %22 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0)) #6
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #6
  br label %24

24:                                               ; preds = %21, %14
  %25 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #6
  %26 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = select i1 %25, i8* %27, i8* null
  %29 = getelementptr inbounds i8, i8* %28, i64 %19
  %30 = bitcast i8* %29 to %"class.blink::scheduler::WorkerScheduler"*
  %31 = and i64 %16, 1
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %40, label %33

33:                                               ; preds = %24
  %34 = bitcast i8* %29 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = add i64 %16, -1
  %37 = getelementptr i8, i8* %35, i64 %36
  %38 = bitcast i8* %37 to void (%"class.blink::scheduler::WorkerScheduler"*, i32)**
  %39 = load void (%"class.blink::scheduler::WorkerScheduler"*, i32)*, void (%"class.blink::scheduler::WorkerScheduler"*, i32)** %38, align 8
  br label %42

40:                                               ; preds = %24
  %41 = inttoptr i64 %16 to void (%"class.blink::scheduler::WorkerScheduler"*, i32)*
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi void (%"class.blink::scheduler::WorkerScheduler"*, i32)* [ %39, %33 ], [ %41, %40 ]
  %44 = load i32, i32* %6, align 4
  call void %43(%"class.blink::scheduler::WorkerScheduler"* %30, i32 %44) #6
  br label %45

45:                                               ; preds = %1, %9, %42
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink9scheduler15WorkerSchedulerEFvNS3_24SchedulingLifecycleStateEEJNS_7WeakPtrIS4_EES5_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #6
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #7
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink9scheduler15WorkerSchedulerEFvNS4_24SchedulingLifecycleStateEEJNS_7WeakPtrIS5_EES6_EEEEEbPKNS0_13BindStateBaseENSC_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #6
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.blink::scheduler::WorkerScheduler"**
  %9 = load %"class.blink::scheduler::WorkerScheduler"*, %"class.blink::scheduler::WorkerScheduler"** %8, align 8
  %10 = icmp ne %"class.blink::scheduler::WorkerScheduler"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #6
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #2

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #2

declare void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink9scheduler15WorkerSchedulerEFvNS4_24SchedulingLifecycleStateEEJRNS_7WeakPtrIS5_EERS6_EEEDcOT0_DpOT1_: argument 0"}
!5 = distinct !{!5, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink9scheduler15WorkerSchedulerEFvNS4_24SchedulingLifecycleStateEEJRNS_7WeakPtrIS5_EERS6_EEEDcOT0_DpOT1_"}
!6 = distinct !{!6, !7, !"_ZN4base8BindOnceIMN5blink9scheduler15WorkerSchedulerEFvNS2_24SchedulingLifecycleStateEEJRNS_7WeakPtrIS3_EERS4_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!7 = distinct !{!7, !"_ZN4base8BindOnceIMN5blink9scheduler15WorkerSchedulerEFvNS2_24SchedulingLifecycleStateEEJRNS_7WeakPtrIS3_EERS4_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
