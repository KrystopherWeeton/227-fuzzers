; ModuleID = '../../net/socket/udp_net_log_parameters.cc'
source_filename = "../../net/socket/udp_net_log_parameters.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::NetLogWithSource" = type { %"struct.net::NetLogSource", %"class.net::NetLog"* }
%"struct.net::NetLogSource" = type { i32, i32, %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector", %"class.std::__1::vector.1" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.3" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%class.GetParamsImpl = type { %"class.net::NetLog::GetParamsInterface", %class.anon* }
%"class.net::NetLog::GetParamsInterface" = type { i32 (...)** }
%class.anon = type { i32*, i8**, %"class.net::IPEndPoint"** }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.8" }
%"union.absl::variant_internal::DestructibleUnionImpl.8" = type { %"union.absl::variant_internal::DestructibleUnionImpl.9" }
%"union.absl::variant_internal::DestructibleUnionImpl.9" = type { %"union.absl::variant_internal::DestructibleUnionImpl.10" }
%"union.absl::variant_internal::DestructibleUnionImpl.10" = type { %"union.absl::variant_internal::DestructibleUnionImpl.11" }
%"union.absl::variant_internal::DestructibleUnionImpl.11" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN3net6NetLog18GetParamsInterfaceD2Ev = comdat any

@.str = private unnamed_addr constant [8 x i8] c"address\00", align 1
@_ZN3net21NetworkChangeNotifier21kInvalidNetworkHandleE = external local_unnamed_addr constant i64, align 8
@.str.1 = private unnamed_addr constant [17 x i8] c"bound_to_network\00", align 1
@"_ZTVZN3net6NetLog8AddEntryIZNS_21NetLogUDPDataTransferERKNS_16NetLogWithSourceENS_15NetLogEventTypeEiPKcPKNS_10IPEndPointEE3$_0EENSt3__19enable_ifIXsr18ExpectsCaptureModeIT_EE5valueEvE4typeES5_RKNS_12NetLogSourceENS_16NetLogEventPhaseERKSE_E13GetParamsImpl" = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::Value"*, %class.GetParamsImpl*, i32)* @"_ZZN3net6NetLog8AddEntryIZNS_21NetLogUDPDataTransferERKNS_16NetLogWithSourceENS_15NetLogEventTypeEiPKcPKNS_10IPEndPointEE3$_0EENSt3__19enable_ifIXsr18ExpectsCaptureModeIT_EE5valueEvE4typeES5_RKNS_12NetLogSourceENS_16NetLogEventPhaseERKSE_ENK13GetParamsImpl9GetParamsENS_17NetLogCaptureModeE" to i8*), i8* bitcast (void (%"class.net::NetLog::GetParamsInterface"*)* @_ZN3net6NetLog18GetParamsInterfaceD2Ev to i8*), i8* bitcast (void (%class.GetParamsImpl*)* @"_ZZN3net6NetLog8AddEntryIZNS_21NetLogUDPDataTransferERKNS_16NetLogWithSourceENS_15NetLogEventTypeEiPKcPKNS_10IPEndPointEE3$_0EENSt3__19enable_ifIXsr18ExpectsCaptureModeIT_EE5valueEvE4typeES5_RKNS_12NetLogSourceENS_16NetLogEventPhaseERKSE_EN13GetParamsImplD0Ev" to i8*)] }, align 8
@.str.4 = private unnamed_addr constant [11 x i8] c"byte_count\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"bytes\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net21NetLogUDPDataTransferERKNS_16NetLogWithSourceENS_15NetLogEventTypeEiPKcPKNS_10IPEndPointE(%"class.net::NetLogWithSource"* dereferenceable(24), i32, i32, i8*, %"class.net::IPEndPoint"*) local_unnamed_addr #0 {
  %6 = alloca %class.GetParamsImpl, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca %"class.net::IPEndPoint"*, align 8
  %10 = alloca %class.anon, align 8
  store i32 %2, i32* %7, align 4
  store i8* %3, i8** %8, align 8
  store %"class.net::IPEndPoint"* %4, %"class.net::IPEndPoint"** %9, align 8
  %11 = bitcast %class.anon* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #6
  %12 = getelementptr inbounds %class.anon, %class.anon* %10, i64 0, i32 0
  store i32* %7, i32** %12, align 8
  %13 = getelementptr inbounds %class.anon, %class.anon* %10, i64 0, i32 1
  store i8** %8, i8*** %13, align 8
  %14 = getelementptr inbounds %class.anon, %class.anon* %10, i64 0, i32 2
  store %"class.net::IPEndPoint"** %9, %"class.net::IPEndPoint"*** %14, align 8
  %15 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %0, i64 0, i32 1
  %16 = load %"class.net::NetLog"*, %"class.net::NetLog"** %15, align 8
  %17 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %16, i64 0, i32 3
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %26, label %20, !prof !2

20:                                               ; preds = %5
  %21 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %0, i64 0, i32 0
  %22 = bitcast %class.GetParamsImpl* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #6
  %23 = getelementptr inbounds %class.GetParamsImpl, %class.GetParamsImpl* %6, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %class.GetParamsImpl, %class.GetParamsImpl* %6, i64 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @"_ZTVZN3net6NetLog8AddEntryIZNS_21NetLogUDPDataTransferERKNS_16NetLogWithSourceENS_15NetLogEventTypeEiPKcPKNS_10IPEndPointEE3$_0EENSt3__19enable_ifIXsr18ExpectsCaptureModeIT_EE5valueEvE4typeES5_RKNS_12NetLogSourceENS_16NetLogEventPhaseERKSE_E13GetParamsImpl", i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  store %class.anon* %10, %class.anon** %24, align 8
  %25 = getelementptr inbounds %class.GetParamsImpl, %class.GetParamsImpl* %6, i64 0, i32 0
  call void @_ZN3net6NetLog16AddEntryInternalENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEPKNS0_18GetParamsInterfaceE(%"class.net::NetLog"* %16, i32 %1, %"struct.net::NetLogSource"* dereferenceable(16) %21, i32 0, %"class.net::NetLog::GetParamsInterface"* nonnull %25) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #6
  br label %26

26:                                               ; preds = %5, %20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net28CreateNetLogUDPConnectParamsERKNS_10IPEndPointEl(%"class.base::Value"* noalias sret, %"class.net::IPEndPoint"* dereferenceable(20), i64) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.base::Value"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 -86, i64 32, i1 false) #6, !alias.scope !3
  tail call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* %0, i8 zeroext 6) #6
  %6 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #6, !noalias !3
  call void @_ZNK3net10IPEndPoint8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %4, %"class.net::IPEndPoint"* %1) #6
  %7 = call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEONS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::Value"* %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 7, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #6
  %8 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1, !noalias !3
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8, !noalias !3
  call void @_ZdlPv(i8* %14) #7
  br label %15

15:                                               ; preds = %12, %3
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #6, !noalias !3
  %16 = load i64, i64* @_ZN3net21NetworkChangeNotifier21kInvalidNetworkHandleE, align 8
  %17 = icmp eq i64 %16, %2
  br i1 %17, label %21, label %18

18:                                               ; preds = %15
  %19 = trunc i64 %2 to i32
  %20 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0), i64 16, i32 %19) #6
  br label %21

21:                                               ; preds = %15, %18
  ret void
}

declare void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"*, i8 zeroext) unnamed_addr #2

declare %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEONS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::Value"*, i8*, i64, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZNK3net10IPEndPoint8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.net::IPEndPoint"*) local_unnamed_addr #2

declare %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"*, i8*, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare void @_ZN3net6NetLog16AddEntryInternalENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEPKNS0_18GetParamsInterfaceE(%"class.net::NetLog"*, i32, %"struct.net::NetLogSource"* dereferenceable(16), i32, %"class.net::NetLog::GetParamsInterface"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZZN3net6NetLog8AddEntryIZNS_21NetLogUDPDataTransferERKNS_16NetLogWithSourceENS_15NetLogEventTypeEiPKcPKNS_10IPEndPointEE3$_0EENSt3__19enable_ifIXsr18ExpectsCaptureModeIT_EE5valueEvE4typeES5_RKNS_12NetLogSourceENS_16NetLogEventPhaseERKSE_ENK13GetParamsImpl9GetParamsENS_17NetLogCaptureModeE"(%"class.base::Value"* noalias sret, %class.GetParamsImpl* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::Value", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %class.GetParamsImpl, %class.GetParamsImpl* %1, i64 0, i32 1
  %7 = load %class.anon*, %class.anon** %6, align 8
  %8 = getelementptr inbounds %class.anon, %class.anon* %7, i64 0, i32 0
  %9 = load i32*, i32** %8, align 8, !noalias !6
  %10 = load i32, i32* %9, align 4, !noalias !6
  %11 = getelementptr inbounds %class.anon, %class.anon* %7, i64 0, i32 1
  %12 = load i8**, i8*** %11, align 8, !noalias !6
  %13 = load i8*, i8** %12, align 8, !noalias !6
  %14 = getelementptr inbounds %class.anon, %class.anon* %7, i64 0, i32 2
  %15 = load %"class.net::IPEndPoint"**, %"class.net::IPEndPoint"*** %14, align 8, !noalias !6
  %16 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %15, align 8, !noalias !6
  %17 = bitcast %"class.base::Value"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 -86, i64 32, i1 false) #6, !alias.scope !9
  tail call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* %0, i8 zeroext 6) #6
  %18 = tail call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 10, i32 %10) #6
  %19 = tail call zeroext i1 @_ZN3net32NetLogCaptureIncludesSocketBytesENS_17NetLogCaptureModeE(i32 %2) #6
  br i1 %19, label %20, label %24

20:                                               ; preds = %3
  %21 = bitcast %"class.base::Value"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #6, !noalias !9
  %22 = sext i32 %10 to i64
  call void @_ZN3net17NetLogBinaryValueEPKvm(%"class.base::Value"* nonnull sret %4, i8* %13, i64 %22) #6
  %23 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %4) #6
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #6, !noalias !9
  br label %24

24:                                               ; preds = %20, %3
  %25 = icmp eq %"class.net::IPEndPoint"* %16, null
  br i1 %25, label %37, label %26

26:                                               ; preds = %24
  %27 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #6, !noalias !9
  call void @_ZNK3net10IPEndPoint8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %5, %"class.net::IPEndPoint"* nonnull %16) #6
  %28 = call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEONS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::Value"* %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 7, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #6
  %29 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1, !noalias !9
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8, !noalias !9
  call void @_ZdlPv(i8* %35) #7
  br label %36

36:                                               ; preds = %33, %26
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #6, !noalias !9
  br label %37

37:                                               ; preds = %24, %36
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @"_ZZN3net6NetLog8AddEntryIZNS_21NetLogUDPDataTransferERKNS_16NetLogWithSourceENS_15NetLogEventTypeEiPKcPKNS_10IPEndPointEE3$_0EENSt3__19enable_ifIXsr18ExpectsCaptureModeIT_EE5valueEvE4typeES5_RKNS_12NetLogSourceENS_16NetLogEventPhaseERKSE_EN13GetParamsImplD0Ev"(%class.GetParamsImpl*) unnamed_addr #5 align 2 {
  %2 = bitcast %class.GetParamsImpl* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net6NetLog18GetParamsInterfaceD2Ev(%"class.net::NetLog::GetParamsInterface"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZN3net32NetLogCaptureIncludesSocketBytesENS_17NetLogCaptureModeE(i32) local_unnamed_addr #2

declare %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"*, i8*, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #2

declare void @_ZN3net17NetLogBinaryValueEPKvm(%"class.base::Value"* sret, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN3net12_GLOBAL__N_122NetLogUDPConnectParamsERKNS_10IPEndPointEl: argument 0"}
!5 = distinct !{!5, !"_ZN3net12_GLOBAL__N_122NetLogUDPConnectParamsERKNS_10IPEndPointEl"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZZN3net21NetLogUDPDataTransferERKNS_16NetLogWithSourceENS_15NetLogEventTypeEiPKcPKNS_10IPEndPointEENK3$_0clENS_17NetLogCaptureModeE: argument 0"}
!8 = distinct !{!8, !"_ZZN3net21NetLogUDPDataTransferERKNS_16NetLogWithSourceENS_15NetLogEventTypeEiPKcPKNS_10IPEndPointEENK3$_0clENS_17NetLogCaptureModeE"}
!9 = !{!10, !7}
!10 = distinct !{!10, !11, !"_ZN3net12_GLOBAL__N_127NetLogUDPDataTransferParamsEiPKcPKNS_10IPEndPointENS_17NetLogCaptureModeE: argument 0"}
!11 = distinct !{!11, !"_ZN3net12_GLOBAL__N_127NetLogUDPDataTransferParamsEiPKcPKNS_10IPEndPointENS_17NetLogCaptureModeE"}
