; ModuleID = '../../net/proxy_resolution/network_delegate_error_observer.cc'
source_filename = "../../net/proxy_resolution/network_delegate_error_observer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::NetworkDelegateErrorObserver::Core" = type { i32 (...)**, %"class.base::RefCountedThreadSafe", %"class.net::NetworkDelegate"*, %class.scoped_refptr }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr = type { %"class.base::SingleThreadTaskRunner"* }
%"class.net::NetworkDelegate" = type { i32 (...)** }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1" }>
%"class.base::RefCountedThreadSafe.1" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.net::NetworkDelegateErrorObserver" = type { %"class.net::ProxyResolverErrorObserver", %class.scoped_refptr.14 }
%"class.net::ProxyResolverErrorObserver" = type { i32 (...)** }
%class.scoped_refptr.14 = type { %"class.net::NetworkDelegateErrorObserver::Core"* }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1", [4 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.3 }
%class.scoped_refptr.3 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.4", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.4" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"struct.base::internal::BindState" = type { %"class.base::internal::BindStateBase", { i64, i64 }, %"class.std::__1::tuple" }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.24", %"class.std::__1::__tuple_leaf.25" }
%"class.std::__1::__tuple_leaf" = type { %class.scoped_refptr.14 }
%"class.std::__1::__tuple_leaf.24" = type { i32 }
%"class.std::__1::__tuple_leaf.25" = type { %"class.std::__1::basic_string" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string.5", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.8 }
%union.anon.8 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net28NetworkDelegateErrorObserver4CoreEFviRKNSt3__112basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEEEJ13scoped_refptrIS5_EiSC_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN3net28NetworkDelegateErrorObserver4CoreEFviRKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEEEJ13scoped_refptrIS4_EiSB_EEC2ISF_JPS4_RiSD_EEENS5_17integral_constantIbLb0EEEPFvvEOT_DpOT0_ = comdat any

$_ZN4base8internal9BindStateIMN3net28NetworkDelegateErrorObserver4CoreEFviRKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEEEJ13scoped_refptrIS4_EiSB_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

@_ZTVN3net28NetworkDelegateErrorObserver4CoreE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::NetworkDelegateErrorObserver::Core"*)* @_ZN3net28NetworkDelegateErrorObserver4CoreD2Ev to i8*), i8* bitcast (void (%"class.net::NetworkDelegateErrorObserver::Core"*)* @_ZN3net28NetworkDelegateErrorObserver4CoreD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [21 x i8] c"NotifyPACScriptError\00", align 1
@.str.1 = private unnamed_addr constant [62 x i8] c"../../net/proxy_resolution/network_delegate_error_observer.cc\00", align 1
@.str.2 = private unnamed_addr constant [41 x i8] c"origin_runner_->BelongsToCurrentThread()\00", align 1
@_ZTVN3net28NetworkDelegateErrorObserverE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::NetworkDelegateErrorObserver"*)* @_ZN3net28NetworkDelegateErrorObserverD2Ev to i8*), i8* bitcast (void (%"class.net::NetworkDelegateErrorObserver"*)* @_ZN3net28NetworkDelegateErrorObserverD0Ev to i8*), i8* bitcast (void (%"class.net::NetworkDelegateErrorObserver"*, i32, %"class.std::__1::basic_string"*)* @_ZN3net28NetworkDelegateErrorObserver16OnPACScriptErrorEiRKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE to i8*)] }, align 8

@_ZN3net28NetworkDelegateErrorObserver4CoreC1EPNS_15NetworkDelegateEPN4base22SingleThreadTaskRunnerE = hidden unnamed_addr alias void (%"class.net::NetworkDelegateErrorObserver::Core"*, %"class.net::NetworkDelegate"*, %"class.base::SingleThreadTaskRunner"*), void (%"class.net::NetworkDelegateErrorObserver::Core"*, %"class.net::NetworkDelegate"*, %"class.base::SingleThreadTaskRunner"*)* @_ZN3net28NetworkDelegateErrorObserver4CoreC2EPNS_15NetworkDelegateEPN4base22SingleThreadTaskRunnerE
@_ZN3net28NetworkDelegateErrorObserver4CoreD1Ev = hidden unnamed_addr alias void (%"class.net::NetworkDelegateErrorObserver::Core"*), void (%"class.net::NetworkDelegateErrorObserver::Core"*)* @_ZN3net28NetworkDelegateErrorObserver4CoreD2Ev
@_ZN3net28NetworkDelegateErrorObserverC1EPNS_15NetworkDelegateEPN4base22SingleThreadTaskRunnerE = hidden unnamed_addr alias void (%"class.net::NetworkDelegateErrorObserver"*, %"class.net::NetworkDelegate"*, %"class.base::SingleThreadTaskRunner"*), void (%"class.net::NetworkDelegateErrorObserver"*, %"class.net::NetworkDelegate"*, %"class.base::SingleThreadTaskRunner"*)* @_ZN3net28NetworkDelegateErrorObserverC2EPNS_15NetworkDelegateEPN4base22SingleThreadTaskRunnerE
@_ZN3net28NetworkDelegateErrorObserverD1Ev = hidden unnamed_addr alias void (%"class.net::NetworkDelegateErrorObserver"*), void (%"class.net::NetworkDelegateErrorObserver"*)* @_ZN3net28NetworkDelegateErrorObserverD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3net28NetworkDelegateErrorObserver4CoreC2EPNS_15NetworkDelegateEPN4base22SingleThreadTaskRunnerE(%"class.net::NetworkDelegateErrorObserver::Core"* nocapture, %"class.net::NetworkDelegate"*, %"class.base::SingleThreadTaskRunner"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.net::NetworkDelegateErrorObserver::Core", %"class.net::NetworkDelegateErrorObserver::Core"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %"class.net::NetworkDelegateErrorObserver::Core", %"class.net::NetworkDelegateErrorObserver::Core"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3net28NetworkDelegateErrorObserver4CoreE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.net::NetworkDelegateErrorObserver::Core", %"class.net::NetworkDelegateErrorObserver::Core"* %0, i64 0, i32 2
  store %"class.net::NetworkDelegate"* %1, %"class.net::NetworkDelegate"** %6, align 8
  %7 = getelementptr inbounds %"class.net::NetworkDelegateErrorObserver::Core", %"class.net::NetworkDelegateErrorObserver::Core"* %0, i64 0, i32 3, i32 0
  store %"class.base::SingleThreadTaskRunner"* %2, %"class.base::SingleThreadTaskRunner"** %7, align 8
  %8 = icmp eq %"class.base::SingleThreadTaskRunner"* %2, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %2, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 1 monotonic
  br label %12

12:                                               ; preds = %3, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net28NetworkDelegateErrorObserver4CoreD2Ev(%"class.net::NetworkDelegateErrorObserver::Core"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.net::NetworkDelegateErrorObserver::Core", %"class.net::NetworkDelegateErrorObserver::Core"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3net28NetworkDelegateErrorObserver4CoreE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::NetworkDelegateErrorObserver::Core", %"class.net::NetworkDelegateErrorObserver::Core"* %0, i64 0, i32 3, i32 0
  %4 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SingleThreadTaskRunner"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %4, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe.1", %"class.base::RefCountedThreadSafe.1"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe.1", %"class.base::RefCountedThreadSafe.1"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe.1"* %12 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %13) #10
  br label %14

14:                                               ; preds = %1, %6, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net28NetworkDelegateErrorObserver4CoreD0Ev(%"class.net::NetworkDelegateErrorObserver::Core"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.net::NetworkDelegateErrorObserver::Core", %"class.net::NetworkDelegateErrorObserver::Core"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3net28NetworkDelegateErrorObserver4CoreE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::NetworkDelegateErrorObserver::Core", %"class.net::NetworkDelegateErrorObserver::Core"* %0, i64 0, i32 3, i32 0
  %4 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SingleThreadTaskRunner"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %4, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe.1", %"class.base::RefCountedThreadSafe.1"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe.1", %"class.base::RefCountedThreadSafe.1"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe.1"* %12 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %13) #10
  br label %14

14:                                               ; preds = %1, %6, %11
  %15 = bitcast %"class.net::NetworkDelegateErrorObserver::Core"* %0 to i8*
  tail call void @_ZdlPv(i8* %15) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net28NetworkDelegateErrorObserver4Core20NotifyPACScriptErrorEiRKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEE(%"class.net::NetworkDelegateErrorObserver::Core"*, i32, %"class.std::__1::basic_string"* dereferenceable(24)) #1 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca %"class.base::Location", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca <2 x i64>, align 16
  %8 = alloca %"class.net::NetworkDelegateErrorObserver::Core"*, align 8
  store i32 %1, i32* %4, align 4
  %9 = getelementptr inbounds %"class.net::NetworkDelegateErrorObserver::Core", %"class.net::NetworkDelegateErrorObserver::Core"* %0, i64 0, i32 3, i32 0
  %10 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %9, align 8
  %11 = bitcast %"class.base::SingleThreadTaskRunner"* %10 to %"class.base::SequencedTaskRunner"*
  %12 = bitcast %"class.base::SingleThreadTaskRunner"* %10 to i1 (%"class.base::SequencedTaskRunner"*)***
  %13 = load i1 (%"class.base::SequencedTaskRunner"*)**, i1 (%"class.base::SequencedTaskRunner"*)*** %12, align 8
  %14 = getelementptr inbounds i1 (%"class.base::SequencedTaskRunner"*)*, i1 (%"class.base::SequencedTaskRunner"*)** %13, i64 5
  %15 = load i1 (%"class.base::SequencedTaskRunner"*)*, i1 (%"class.base::SequencedTaskRunner"*)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.base::SequencedTaskRunner"* %11) #10
  br i1 %16, label %29, label %17

17:                                               ; preds = %3
  %18 = bitcast <2 x i64>* %7 to { i64, i64 }*
  %19 = bitcast %"class.base::SingleThreadTaskRunner"** %9 to %"class.base::TaskRunner"**
  %20 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %19, align 8
  %21 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.1, i64 0, i64 0), i32 53) #10
  %22 = bitcast <2 x i64>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #10
  store <2 x i64> <i64 ptrtoint (void (%"class.net::NetworkDelegateErrorObserver::Core"*, i32, %"class.std::__1::basic_string"*)* @_ZN3net28NetworkDelegateErrorObserver4Core20NotifyPACScriptErrorEiRKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEE to i64), i64 0>, <2 x i64>* %7, align 16
  %23 = bitcast %"class.net::NetworkDelegateErrorObserver::Core"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #10
  store %"class.net::NetworkDelegateErrorObserver::Core"* %0, %"class.net::NetworkDelegateErrorObserver::Core"** %8, align 8
  %24 = call i8* @_Znwm(i64 88) #11, !noalias !2
  %25 = bitcast i8* %24 to %"struct.base::internal::BindState"*
  call void @_ZN4base8internal9BindStateIMN3net28NetworkDelegateErrorObserver4CoreEFviRKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEEEJ13scoped_refptrIS4_EiSB_EEC2ISF_JPS4_RiSD_EEENS5_17integral_constantIbLb0EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState"* nonnull %25, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net28NetworkDelegateErrorObserver4CoreEFviRKNSt3__112basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEEEJ13scoped_refptrIS5_EiSC_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), { i64, i64 }* nonnull dereferenceable(16) %18, %"class.net::NetworkDelegateErrorObserver::Core"** nonnull dereferenceable(8) %8, i32* nonnull dereferenceable(4) %4, %"class.std::__1::basic_string"* dereferenceable(24) %2) #10, !noalias !2
  %26 = bitcast %"class.base::OnceCallback"* %6 to i8**
  store i8* %24, i8** %26, align 8, !alias.scope !2
  %27 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %20, %"class.base::Location"* nonnull dereferenceable(32) %5, %"class.base::OnceCallback"* nonnull %6) #10
  %28 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %28) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #10
  br label %34

29:                                               ; preds = %3
  %30 = getelementptr inbounds %"class.net::NetworkDelegateErrorObserver::Core", %"class.net::NetworkDelegateErrorObserver::Core"* %0, i64 0, i32 2
  %31 = load %"class.net::NetworkDelegate"*, %"class.net::NetworkDelegate"** %30, align 8
  %32 = icmp eq %"class.net::NetworkDelegate"* %31, null
  br i1 %32, label %34, label %33

33:                                               ; preds = %29
  tail call void @_ZN3net15NetworkDelegate20NotifyPACScriptErrorEiRKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.net::NetworkDelegate"* nonnull %31, i32 %1, %"class.std::__1::basic_string"* dereferenceable(24) %2) #10
  br label %34

34:                                               ; preds = %29, %17, %33
  ret void
}

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN3net15NetworkDelegate20NotifyPACScriptErrorEiRKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.net::NetworkDelegate"*, i32, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net28NetworkDelegateErrorObserver4Core8ShutdownEv(%"class.net::NetworkDelegateErrorObserver::Core"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.net::NetworkDelegateErrorObserver::Core", %"class.net::NetworkDelegateErrorObserver::Core"* %0, i64 0, i32 3, i32 0
  %4 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %3, align 8
  %5 = bitcast %"class.base::SingleThreadTaskRunner"* %4 to %"class.base::SequencedTaskRunner"*
  %6 = bitcast %"class.base::SingleThreadTaskRunner"* %4 to i1 (%"class.base::SequencedTaskRunner"*)***
  %7 = load i1 (%"class.base::SequencedTaskRunner"*)**, i1 (%"class.base::SequencedTaskRunner"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.base::SequencedTaskRunner"*)*, i1 (%"class.base::SequencedTaskRunner"*)** %7, i64 5
  %9 = load i1 (%"class.base::SequencedTaskRunner"*)*, i1 (%"class.base::SequencedTaskRunner"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.base::SequencedTaskRunner"* %5) #10
  br i1 %10, label %14, label %11

11:                                               ; preds = %1
  %12 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.1, i64 0, i64 0), i32 62, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.2, i64 0, i64 0)) #10
  %13 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #10
  br label %14

14:                                               ; preds = %1, %11
  %15 = getelementptr inbounds %"class.net::NetworkDelegateErrorObserver::Core", %"class.net::NetworkDelegateErrorObserver::Core"* %0, i64 0, i32 2
  store %"class.net::NetworkDelegate"* null, %"class.net::NetworkDelegate"** %15, align 8
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN3net28NetworkDelegateErrorObserverC2EPNS_15NetworkDelegateEPN4base22SingleThreadTaskRunnerE(%"class.net::NetworkDelegateErrorObserver"* nocapture, %"class.net::NetworkDelegate"*, %"class.base::SingleThreadTaskRunner"*) unnamed_addr #6 align 2 {
  %4 = getelementptr inbounds %"class.net::NetworkDelegateErrorObserver", %"class.net::NetworkDelegateErrorObserver"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3net28NetworkDelegateErrorObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = tail call i8* @_Znwm(i64 32) #11
  %6 = getelementptr inbounds i8, i8* %5, i64 8
  %7 = bitcast i8* %6 to i32*
  store i32 0, i32* %7, align 4
  %8 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3net28NetworkDelegateErrorObserver4CoreE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds i8, i8* %5, i64 16
  %10 = bitcast i8* %9 to %"class.net::NetworkDelegate"**
  store %"class.net::NetworkDelegate"* %1, %"class.net::NetworkDelegate"** %10, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 24
  %12 = bitcast i8* %11 to %"class.base::SingleThreadTaskRunner"**
  store %"class.base::SingleThreadTaskRunner"* %2, %"class.base::SingleThreadTaskRunner"** %12, align 8
  %13 = icmp eq %"class.base::SingleThreadTaskRunner"* %2, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %2, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw add i32* %15, i32 1 monotonic
  br label %17

17:                                               ; preds = %3, %14
  %18 = getelementptr inbounds %"class.net::NetworkDelegateErrorObserver", %"class.net::NetworkDelegateErrorObserver"* %0, i64 0, i32 1, i32 0
  %19 = bitcast %"class.net::NetworkDelegateErrorObserver::Core"** %18 to i8**
  store i8* %5, i8** %19, align 8
  %20 = atomicrmw add i32* %7, i32 1 monotonic
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net28NetworkDelegateErrorObserverD2Ev(%"class.net::NetworkDelegateErrorObserver"* nocapture) unnamed_addr #1 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.net::NetworkDelegateErrorObserver", %"class.net::NetworkDelegateErrorObserver"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3net28NetworkDelegateErrorObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.net::NetworkDelegateErrorObserver", %"class.net::NetworkDelegateErrorObserver"* %0, i64 0, i32 1, i32 0
  %5 = load %"class.net::NetworkDelegateErrorObserver::Core"*, %"class.net::NetworkDelegateErrorObserver::Core"** %4, align 8
  %6 = getelementptr inbounds %"class.net::NetworkDelegateErrorObserver::Core", %"class.net::NetworkDelegateErrorObserver::Core"* %5, i64 0, i32 3, i32 0
  %7 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %6, align 8
  %8 = bitcast %"class.base::SingleThreadTaskRunner"* %7 to %"class.base::SequencedTaskRunner"*
  %9 = bitcast %"class.base::SingleThreadTaskRunner"* %7 to i1 (%"class.base::SequencedTaskRunner"*)***
  %10 = load i1 (%"class.base::SequencedTaskRunner"*)**, i1 (%"class.base::SequencedTaskRunner"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.base::SequencedTaskRunner"*)*, i1 (%"class.base::SequencedTaskRunner"*)** %10, i64 5
  %12 = load i1 (%"class.base::SequencedTaskRunner"*)*, i1 (%"class.base::SequencedTaskRunner"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.base::SequencedTaskRunner"* %8) #10
  br i1 %13, label %17, label %14

14:                                               ; preds = %1
  %15 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.1, i64 0, i64 0), i32 62, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.2, i64 0, i64 0)) #10
  %16 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #10
  br label %17

17:                                               ; preds = %1, %14
  %18 = getelementptr inbounds %"class.net::NetworkDelegateErrorObserver::Core", %"class.net::NetworkDelegateErrorObserver::Core"* %5, i64 0, i32 2
  store %"class.net::NetworkDelegate"* null, %"class.net::NetworkDelegate"** %18, align 8
  %19 = load %"class.net::NetworkDelegateErrorObserver::Core"*, %"class.net::NetworkDelegateErrorObserver::Core"** %4, align 8
  %20 = icmp eq %"class.net::NetworkDelegateErrorObserver::Core"* %19, null
  br i1 %20, label %33, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.net::NetworkDelegateErrorObserver::Core", %"class.net::NetworkDelegateErrorObserver::Core"* %19, i64 0, i32 1
  %23 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw sub i32* %23, i32 1 acq_rel
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %33

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %22, i64 -2
  %28 = bitcast %"class.base::RefCountedThreadSafe"* %27 to %"class.net::NetworkDelegateErrorObserver::Core"*
  %29 = bitcast %"class.base::RefCountedThreadSafe"* %27 to void (%"class.net::NetworkDelegateErrorObserver::Core"*)***
  %30 = load void (%"class.net::NetworkDelegateErrorObserver::Core"*)**, void (%"class.net::NetworkDelegateErrorObserver::Core"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.net::NetworkDelegateErrorObserver::Core"*)*, void (%"class.net::NetworkDelegateErrorObserver::Core"*)** %30, i64 1
  %32 = load void (%"class.net::NetworkDelegateErrorObserver::Core"*)*, void (%"class.net::NetworkDelegateErrorObserver::Core"*)** %31, align 8
  call void %32(%"class.net::NetworkDelegateErrorObserver::Core"* nonnull %28) #10
  br label %33

33:                                               ; preds = %17, %21, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net28NetworkDelegateErrorObserverD0Ev(%"class.net::NetworkDelegateErrorObserver"*) unnamed_addr #1 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.net::NetworkDelegateErrorObserver", %"class.net::NetworkDelegateErrorObserver"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3net28NetworkDelegateErrorObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.net::NetworkDelegateErrorObserver", %"class.net::NetworkDelegateErrorObserver"* %0, i64 0, i32 1, i32 0
  %5 = load %"class.net::NetworkDelegateErrorObserver::Core"*, %"class.net::NetworkDelegateErrorObserver::Core"** %4, align 8
  %6 = getelementptr inbounds %"class.net::NetworkDelegateErrorObserver::Core", %"class.net::NetworkDelegateErrorObserver::Core"* %5, i64 0, i32 3, i32 0
  %7 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %6, align 8
  %8 = bitcast %"class.base::SingleThreadTaskRunner"* %7 to %"class.base::SequencedTaskRunner"*
  %9 = bitcast %"class.base::SingleThreadTaskRunner"* %7 to i1 (%"class.base::SequencedTaskRunner"*)***
  %10 = load i1 (%"class.base::SequencedTaskRunner"*)**, i1 (%"class.base::SequencedTaskRunner"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.base::SequencedTaskRunner"*)*, i1 (%"class.base::SequencedTaskRunner"*)** %10, i64 5
  %12 = load i1 (%"class.base::SequencedTaskRunner"*)*, i1 (%"class.base::SequencedTaskRunner"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.base::SequencedTaskRunner"* %8) #10
  br i1 %13, label %17, label %14

14:                                               ; preds = %1
  %15 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.1, i64 0, i64 0), i32 62, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.2, i64 0, i64 0)) #10
  %16 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #10
  br label %17

17:                                               ; preds = %14, %1
  %18 = getelementptr inbounds %"class.net::NetworkDelegateErrorObserver::Core", %"class.net::NetworkDelegateErrorObserver::Core"* %5, i64 0, i32 2
  store %"class.net::NetworkDelegate"* null, %"class.net::NetworkDelegate"** %18, align 8
  %19 = load %"class.net::NetworkDelegateErrorObserver::Core"*, %"class.net::NetworkDelegateErrorObserver::Core"** %4, align 8
  %20 = icmp eq %"class.net::NetworkDelegateErrorObserver::Core"* %19, null
  br i1 %20, label %33, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.net::NetworkDelegateErrorObserver::Core", %"class.net::NetworkDelegateErrorObserver::Core"* %19, i64 0, i32 1
  %23 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw sub i32* %23, i32 1 acq_rel
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %33

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %22, i64 -2
  %28 = bitcast %"class.base::RefCountedThreadSafe"* %27 to %"class.net::NetworkDelegateErrorObserver::Core"*
  %29 = bitcast %"class.base::RefCountedThreadSafe"* %27 to void (%"class.net::NetworkDelegateErrorObserver::Core"*)***
  %30 = load void (%"class.net::NetworkDelegateErrorObserver::Core"*)**, void (%"class.net::NetworkDelegateErrorObserver::Core"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.net::NetworkDelegateErrorObserver::Core"*)*, void (%"class.net::NetworkDelegateErrorObserver::Core"*)** %30, i64 1
  %32 = load void (%"class.net::NetworkDelegateErrorObserver::Core"*)*, void (%"class.net::NetworkDelegateErrorObserver::Core"*)** %31, align 8
  call void %32(%"class.net::NetworkDelegateErrorObserver::Core"* nonnull %28) #10
  br label %33

33:                                               ; preds = %17, %21, %26
  %34 = bitcast %"class.net::NetworkDelegateErrorObserver"* %0 to i8*
  call void @_ZdlPv(i8* %34) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::ProxyResolverErrorObserver"* @_ZN3net28NetworkDelegateErrorObserver6CreateEPNS_15NetworkDelegateERK13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.net::NetworkDelegate"*, %class.scoped_refptr* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = ptrtoint %"class.net::NetworkDelegate"* %0 to i64
  %4 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %1, i64 0, i32 0
  %5 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %4, align 8
  %6 = tail call i8* @_Znwm(i64 16) #11
  %7 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3net28NetworkDelegateErrorObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = tail call i8* @_Znwm(i64 32) #11
  %9 = getelementptr inbounds i8, i8* %8, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 0, i32* %10, align 4
  %11 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3net28NetworkDelegateErrorObserver4CoreE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 16
  %13 = bitcast i8* %12 to i64*
  store i64 %3, i64* %13, align 8
  %14 = getelementptr inbounds i8, i8* %8, i64 24
  %15 = bitcast i8* %14 to %"class.base::SingleThreadTaskRunner"**
  store %"class.base::SingleThreadTaskRunner"* %5, %"class.base::SingleThreadTaskRunner"** %15, align 8
  %16 = icmp eq %"class.base::SingleThreadTaskRunner"* %5, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 1 monotonic
  br label %20

20:                                               ; preds = %17, %2
  %21 = getelementptr inbounds i8, i8* %6, i64 8
  %22 = bitcast i8* %21 to i8**
  store i8* %8, i8** %22, align 8
  %23 = atomicrmw add i32* %10, i32 1 monotonic
  %24 = bitcast i8* %6 to %"class.net::ProxyResolverErrorObserver"*
  ret %"class.net::ProxyResolverErrorObserver"* %24
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net28NetworkDelegateErrorObserver16OnPACScriptErrorEiRKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.net::NetworkDelegateErrorObserver"* nocapture readonly, i32, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.net::NetworkDelegateErrorObserver", %"class.net::NetworkDelegateErrorObserver"* %0, i64 0, i32 1, i32 0
  %5 = load %"class.net::NetworkDelegateErrorObserver::Core"*, %"class.net::NetworkDelegateErrorObserver::Core"** %4, align 8
  tail call void @_ZN3net28NetworkDelegateErrorObserver4Core20NotifyPACScriptErrorEiRKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEE(%"class.net::NetworkDelegateErrorObserver::Core"* %5, i32 %1, %"class.std::__1::basic_string"* dereferenceable(24) %2)
  ret void
}

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net28NetworkDelegateErrorObserver4CoreEFviRKNSt3__112basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEEEJ13scoped_refptrIS5_EiSC_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i32*
  %6 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 2
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to %"class.std::__1::basic_string"*
  %8 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %11 = bitcast void ()** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %12
  %16 = bitcast i8* %15 to %"class.net::NetworkDelegateErrorObserver::Core"*
  %17 = and i64 %9, 1
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %1
  %20 = bitcast i8* %15 to i8**
  %21 = load i8*, i8** %20, align 8
  %22 = add i64 %9, -1
  %23 = getelementptr i8, i8* %21, i64 %22
  %24 = bitcast i8* %23 to void (%"class.net::NetworkDelegateErrorObserver::Core"*, i32, %"class.std::__1::basic_string"*)**
  %25 = load void (%"class.net::NetworkDelegateErrorObserver::Core"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.net::NetworkDelegateErrorObserver::Core"*, i32, %"class.std::__1::basic_string"*)** %24, align 8
  br label %28

26:                                               ; preds = %1
  %27 = inttoptr i64 %9 to void (%"class.net::NetworkDelegateErrorObserver::Core"*, i32, %"class.std::__1::basic_string"*)*
  br label %28

28:                                               ; preds = %19, %26
  %29 = phi void (%"class.net::NetworkDelegateErrorObserver::Core"*, i32, %"class.std::__1::basic_string"*)* [ %25, %19 ], [ %27, %26 ]
  %30 = load i32, i32* %5, align 4
  tail call void %29(%"class.net::NetworkDelegateErrorObserver::Core"* %16, i32 %30, %"class.std::__1::basic_string"* dereferenceable(24) %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net28NetworkDelegateErrorObserver4CoreEFviRKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEEEJ13scoped_refptrIS4_EiSB_EEC2ISF_JPS4_RiSD_EEENS5_17integral_constantIbLb0EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState"*, void ()*, { i64, i64 }* dereferenceable(16), %"class.net::NetworkDelegateErrorObserver::Core"** dereferenceable(8), i32* dereferenceable(4), %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #1 comdat align 2 {
  %7 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 0
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* %7, void ()* %1, void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net28NetworkDelegateErrorObserver4CoreEFviRKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEEEJ13scoped_refptrIS4_EiSB_EE7DestroyEPKNS0_13BindStateBaseE) #10
  %8 = bitcast { i64, i64 }* %2 to <2 x i64>*
  %9 = load <2 x i64>, <2 x i64>* %8, align 8
  %10 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 1, i32 0
  %11 = bitcast i64* %10 to <2 x i64>*
  store <2 x i64> %9, <2 x i64>* %11, align 8
  %12 = load %"class.net::NetworkDelegateErrorObserver::Core"*, %"class.net::NetworkDelegateErrorObserver::Core"** %3, align 8
  %13 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store %"class.net::NetworkDelegateErrorObserver::Core"* %12, %"class.net::NetworkDelegateErrorObserver::Core"** %13, align 8
  %14 = icmp eq %"class.net::NetworkDelegateErrorObserver::Core"* %12, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.net::NetworkDelegateErrorObserver::Core", %"class.net::NetworkDelegateErrorObserver::Core"* %12, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 1 monotonic
  br label %18

18:                                               ; preds = %15, %6
  %19 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  %20 = load i32, i32* %4, align 4
  store i32 %20, i32* %19, align 4
  %21 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2, i32 0, i32 2
  %22 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %22, i64 0, i32 1, i32 1
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %18
  %27 = bitcast %"class.std::__1::__tuple_leaf.25"* %21 to i8*
  %28 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 24, i1 false) #10
  br label %204

29:                                               ; preds = %18
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i16*, i16** %30, align 8
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, 11
  br i1 %34, label %35, label %40

35:                                               ; preds = %29
  %36 = bitcast %"class.std::__1::__tuple_leaf.25"* %21 to i16*
  %37 = trunc i64 %33 to i8
  %38 = bitcast %"class.std::__1::__tuple_leaf.25"* %21 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %38, i64 0, i32 1, i32 1
  store i8 %37, i8* %39, align 1
  br label %57

40:                                               ; preds = %29
  %41 = icmp ugt i64 %33, 9223372036854775791
  br i1 %41, label %42, label %44

42:                                               ; preds = %40
  %43 = bitcast %"class.std::__1::__tuple_leaf.25"* %21 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %43) #12
  unreachable

44:                                               ; preds = %40
  %45 = add nuw nsw i64 %33, 8
  %46 = and i64 %45, -8
  %47 = icmp slt i64 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %44
  tail call void @abort() #12
  unreachable

49:                                               ; preds = %44
  %50 = shl i64 %46, 1
  %51 = tail call i8* @_Znwm(i64 %50) #11
  %52 = bitcast i8* %51 to i16*
  %53 = bitcast %"class.std::__1::__tuple_leaf.25"* %21 to i8**
  store i8* %51, i8** %53, align 8
  %54 = or i64 %46, -9223372036854775808
  %55 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %33, i64* %56, align 8
  br label %57

57:                                               ; preds = %49, %35
  %58 = phi i16* [ %36, %35 ], [ %52, %49 ]
  %59 = add nuw nsw i64 %33, 1
  %60 = add i64 %33, 1
  %61 = icmp ult i64 %60, 16
  br i1 %61, label %151, label %62

62:                                               ; preds = %57
  %63 = add i64 %33, 1
  %64 = getelementptr i16, i16* %58, i64 %63
  %65 = getelementptr i16, i16* %31, i64 %63
  %66 = icmp ult i16* %58, %65
  %67 = icmp ult i16* %31, %64
  %68 = and i1 %66, %67
  br i1 %68, label %151, label %69

69:                                               ; preds = %62
  %70 = and i64 %60, -16
  %71 = sub i64 %59, %70
  %72 = getelementptr i16, i16* %31, i64 %70
  %73 = getelementptr i16, i16* %58, i64 %70
  %74 = add i64 %70, -16
  %75 = lshr exact i64 %74, 4
  %76 = add nuw nsw i64 %75, 1
  %77 = and i64 %76, 3
  %78 = icmp ult i64 %74, 48
  br i1 %78, label %130, label %79

79:                                               ; preds = %69
  %80 = sub nsw i64 %76, %77
  br label %81

81:                                               ; preds = %81, %79
  %82 = phi i64 [ 0, %79 ], [ %127, %81 ]
  %83 = phi i64 [ %80, %79 ], [ %128, %81 ]
  %84 = getelementptr i16, i16* %31, i64 %82
  %85 = getelementptr i16, i16* %58, i64 %82
  %86 = bitcast i16* %84 to <8 x i16>*
  %87 = load <8 x i16>, <8 x i16>* %86, align 2, !alias.scope !7
  %88 = getelementptr i16, i16* %84, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !7
  %91 = bitcast i16* %85 to <8 x i16>*
  store <8 x i16> %87, <8 x i16>* %91, align 2, !alias.scope !10, !noalias !7
  %92 = getelementptr i16, i16* %85, i64 8
  %93 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %93, align 2, !alias.scope !10, !noalias !7
  %94 = or i64 %82, 16
  %95 = getelementptr i16, i16* %31, i64 %94
  %96 = getelementptr i16, i16* %58, i64 %94
  %97 = bitcast i16* %95 to <8 x i16>*
  %98 = load <8 x i16>, <8 x i16>* %97, align 2, !alias.scope !7
  %99 = getelementptr i16, i16* %95, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !7
  %102 = bitcast i16* %96 to <8 x i16>*
  store <8 x i16> %98, <8 x i16>* %102, align 2, !alias.scope !10, !noalias !7
  %103 = getelementptr i16, i16* %96, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %104, align 2, !alias.scope !10, !noalias !7
  %105 = or i64 %82, 32
  %106 = getelementptr i16, i16* %31, i64 %105
  %107 = getelementptr i16, i16* %58, i64 %105
  %108 = bitcast i16* %106 to <8 x i16>*
  %109 = load <8 x i16>, <8 x i16>* %108, align 2, !alias.scope !7
  %110 = getelementptr i16, i16* %106, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  %112 = load <8 x i16>, <8 x i16>* %111, align 2, !alias.scope !7
  %113 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %109, <8 x i16>* %113, align 2, !alias.scope !10, !noalias !7
  %114 = getelementptr i16, i16* %107, i64 8
  %115 = bitcast i16* %114 to <8 x i16>*
  store <8 x i16> %112, <8 x i16>* %115, align 2, !alias.scope !10, !noalias !7
  %116 = or i64 %82, 48
  %117 = getelementptr i16, i16* %31, i64 %116
  %118 = getelementptr i16, i16* %58, i64 %116
  %119 = bitcast i16* %117 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !7
  %121 = getelementptr i16, i16* %117, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !7
  %124 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %124, align 2, !alias.scope !10, !noalias !7
  %125 = getelementptr i16, i16* %118, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %126, align 2, !alias.scope !10, !noalias !7
  %127 = add i64 %82, 64
  %128 = add i64 %83, -4
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %81, !llvm.loop !12

130:                                              ; preds = %81, %69
  %131 = phi i64 [ 0, %69 ], [ %127, %81 ]
  %132 = icmp eq i64 %77, 0
  br i1 %132, label %149, label %133

133:                                              ; preds = %130, %133
  %134 = phi i64 [ %146, %133 ], [ %131, %130 ]
  %135 = phi i64 [ %147, %133 ], [ %77, %130 ]
  %136 = getelementptr i16, i16* %31, i64 %134
  %137 = getelementptr i16, i16* %58, i64 %134
  %138 = bitcast i16* %136 to <8 x i16>*
  %139 = load <8 x i16>, <8 x i16>* %138, align 2, !alias.scope !7
  %140 = getelementptr i16, i16* %136, i64 8
  %141 = bitcast i16* %140 to <8 x i16>*
  %142 = load <8 x i16>, <8 x i16>* %141, align 2, !alias.scope !7
  %143 = bitcast i16* %137 to <8 x i16>*
  store <8 x i16> %139, <8 x i16>* %143, align 2, !alias.scope !10, !noalias !7
  %144 = getelementptr i16, i16* %137, i64 8
  %145 = bitcast i16* %144 to <8 x i16>*
  store <8 x i16> %142, <8 x i16>* %145, align 2, !alias.scope !10, !noalias !7
  %146 = add i64 %134, 16
  %147 = add i64 %135, -1
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %149, label %133, !llvm.loop !14

149:                                              ; preds = %133, %130
  %150 = icmp eq i64 %60, %70
  br i1 %150, label %204, label %151

151:                                              ; preds = %149, %62, %57
  %152 = phi i64 [ %59, %62 ], [ %59, %57 ], [ %71, %149 ]
  %153 = phi i16* [ %31, %62 ], [ %31, %57 ], [ %72, %149 ]
  %154 = phi i16* [ %58, %62 ], [ %58, %57 ], [ %73, %149 ]
  %155 = add i64 %152, -1
  %156 = and i64 %152, 7
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %169, label %158

158:                                              ; preds = %151, %158
  %159 = phi i64 [ %164, %158 ], [ %152, %151 ]
  %160 = phi i16* [ %166, %158 ], [ %153, %151 ]
  %161 = phi i16* [ %165, %158 ], [ %154, %151 ]
  %162 = phi i64 [ %167, %158 ], [ %156, %151 ]
  %163 = load i16, i16* %160, align 2
  store i16 %163, i16* %161, align 2
  %164 = add i64 %159, -1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = getelementptr inbounds i16, i16* %160, i64 1
  %167 = add i64 %162, -1
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %169, label %158, !llvm.loop !16

169:                                              ; preds = %158, %151
  %170 = phi i64 [ %152, %151 ], [ %164, %158 ]
  %171 = phi i16* [ %153, %151 ], [ %166, %158 ]
  %172 = phi i16* [ %154, %151 ], [ %165, %158 ]
  %173 = icmp ult i64 %155, 7
  br i1 %173, label %204, label %174

174:                                              ; preds = %169, %174
  %175 = phi i64 [ %200, %174 ], [ %170, %169 ]
  %176 = phi i16* [ %202, %174 ], [ %171, %169 ]
  %177 = phi i16* [ %201, %174 ], [ %172, %169 ]
  %178 = load i16, i16* %176, align 2
  store i16 %178, i16* %177, align 2
  %179 = getelementptr inbounds i16, i16* %177, i64 1
  %180 = getelementptr inbounds i16, i16* %176, i64 1
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %177, i64 2
  %183 = getelementptr inbounds i16, i16* %176, i64 2
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %177, i64 3
  %186 = getelementptr inbounds i16, i16* %176, i64 3
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %177, i64 4
  %189 = getelementptr inbounds i16, i16* %176, i64 4
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = getelementptr inbounds i16, i16* %177, i64 5
  %192 = getelementptr inbounds i16, i16* %176, i64 5
  %193 = load i16, i16* %192, align 2
  store i16 %193, i16* %191, align 2
  %194 = getelementptr inbounds i16, i16* %177, i64 6
  %195 = getelementptr inbounds i16, i16* %176, i64 6
  %196 = load i16, i16* %195, align 2
  store i16 %196, i16* %194, align 2
  %197 = getelementptr inbounds i16, i16* %177, i64 7
  %198 = getelementptr inbounds i16, i16* %176, i64 7
  %199 = load i16, i16* %198, align 2
  store i16 %199, i16* %197, align 2
  %200 = add i64 %175, -8
  %201 = getelementptr inbounds i16, i16* %177, i64 8
  %202 = getelementptr inbounds i16, i16* %176, i64 8
  %203 = icmp eq i64 %200, 0
  br i1 %203, label %204, label %174, !llvm.loop !17

204:                                              ; preds = %169, %174, %149, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net28NetworkDelegateErrorObserver4CoreEFviRKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEEEJ13scoped_refptrIS4_EiSB_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %31, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %5, i64 0, i32 1, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = bitcast %"class.base::internal::BindStateBase"* %4 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_ZdlPv(i8* %11) #11
  br label %12

12:                                               ; preds = %9, %3
  %13 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %13 to %"class.net::NetworkDelegateErrorObserver::Core"**
  %15 = load %"class.net::NetworkDelegateErrorObserver::Core"*, %"class.net::NetworkDelegateErrorObserver::Core"** %14, align 8
  %16 = icmp eq %"class.net::NetworkDelegateErrorObserver::Core"* %15, null
  br i1 %16, label %29, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.net::NetworkDelegateErrorObserver::Core", %"class.net::NetworkDelegateErrorObserver::Core"* %15, i64 0, i32 1
  %19 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw sub i32* %19, i32 1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %29

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %18, i64 -2
  %24 = bitcast %"class.base::RefCountedThreadSafe"* %23 to %"class.net::NetworkDelegateErrorObserver::Core"*
  %25 = bitcast %"class.base::RefCountedThreadSafe"* %23 to void (%"class.net::NetworkDelegateErrorObserver::Core"*)***
  %26 = load void (%"class.net::NetworkDelegateErrorObserver::Core"*)**, void (%"class.net::NetworkDelegateErrorObserver::Core"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.net::NetworkDelegateErrorObserver::Core"*)*, void (%"class.net::NetworkDelegateErrorObserver::Core"*)** %26, i64 1
  %28 = load void (%"class.net::NetworkDelegateErrorObserver::Core"*)*, void (%"class.net::NetworkDelegateErrorObserver::Core"*)** %27, align 8
  tail call void %28(%"class.net::NetworkDelegateErrorObserver::Core"* nonnull %24) #10
  br label %29

29:                                               ; preds = %12, %17, %22
  %30 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %30) #11
  br label %31

31:                                               ; preds = %29, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net28NetworkDelegateErrorObserver4CoreEFviRKNSt3__112basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEEEJPS5_RiSE_EEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net28NetworkDelegateErrorObserver4CoreEFviRKNSt3__112basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEEEJPS5_RiSE_EEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIMN3net28NetworkDelegateErrorObserver4CoreEFviRKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEEEJPS3_RiSC_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSK_DpOSL_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIMN3net28NetworkDelegateErrorObserver4CoreEFviRKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEEEJPS3_RiSC_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSK_DpOSL_"}
!7 = !{!8}
!8 = distinct !{!8, !9}
!9 = distinct !{!9, !"LVerDomain"}
!10 = !{!11}
!11 = distinct !{!11, !9}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.isvectorized", i32 1}
!14 = distinct !{!14, !15}
!15 = !{!"llvm.loop.unroll.disable"}
!16 = distinct !{!16, !15}
!17 = distinct !{!17, !13}
