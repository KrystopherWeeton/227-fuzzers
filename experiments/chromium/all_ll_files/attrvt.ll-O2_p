; ModuleID = '../../third_party/libxslt/src/libxslt/attrvt.c'
source_filename = "../../third_party/libxslt/src/libxslt/attrvt.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._xsltAttrVT = type { %struct._xsltAttrVT*, i32, i32, i32, %struct._xmlNs**, i32, [0 x i8*] }
%struct._xmlNs = type { %struct._xmlNs*, i32, i8*, i8*, i8*, %struct._xmlDoc* }
%struct._xmlDoc = type { i8*, i32, i8*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDoc*, i32, i32, %struct._xmlDtd*, %struct._xmlDtd*, %struct._xmlNs*, i8*, i8*, i8*, i8*, i8*, i32, %struct._xmlDict*, i8*, i32, i32 }
%struct._xmlNode = type { i8*, i32, i8*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDoc*, %struct._xmlNs*, i8*, %struct._xmlAttr*, %struct._xmlNs*, i8*, i16, i16 }
%struct._xmlAttr = type { i8*, i32, i8*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlAttr*, %struct._xmlAttr*, %struct._xmlDoc*, %struct._xmlNs*, i32, i8* }
%struct._xmlDtd = type { i8*, i32, i8*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDoc*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDoc*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%struct._xmlDict = type opaque
%struct._xmlXPathCompExpr = type opaque
%struct._xsltStylesheet = type { %struct._xsltStylesheet*, %struct._xsltStylesheet*, %struct._xsltStylesheet*, %struct._xsltDocument*, %struct._xmlDoc*, %struct._xmlHashTable*, i32, %struct._xmlHashTable*, %struct._xsltStackElem*, %struct._xsltTemplate*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._xmlHashTable*, %struct._xmlHashTable*, %struct._xmlHashTable*, i8*, i8*, i8*, i8*, i8*, i8*, i32, %struct._xsltDecimalFormat*, i32, i8*, i8*, i32, i8*, %struct._xsltElemPreComp*, i32, i32, i8*, i8**, i32, i32, i8*, %struct._xmlHashTable*, i32, %struct._xsltDocument*, %struct._xmlDict*, i8*, i8*, i32, i32, i32, %struct._xsltStylesheet*, i32, %struct._xmlHashTable*, %struct._xmlXPathContext* }
%struct._xsltStackElem = type { %struct._xsltStackElem*, %struct._xsltStylePreComp*, i32, i8*, i8*, i8*, %struct._xmlNode*, %struct._xmlXPathObject*, %struct._xmlDoc*, i32, %struct._xsltTransformContext*, i32 }
%struct._xsltStylePreComp = type { %struct._xsltElemPreComp*, i32, void (%struct._xsltTransformContext*, %struct._xmlNode*, %struct._xmlNode*, %struct._xsltElemPreComp*)*, %struct._xmlNode*, i8*, i32, i32, i8*, i32, i32, i8*, i32, i8*, i8*, i32, i8*, i32, i32, i8*, i32, i8*, i32, i8*, i8*, i8*, %struct._xsltTemplate*, i8*, i32, i8*, i32, %struct._xsltNumberData, %struct._xmlXPathCompExpr*, %struct._xmlNs**, i32 }
%struct._xsltNumberData = type { i8*, i8*, i8*, i8*, i8*, i32, i32, i32, i32, %struct._xmlDoc*, %struct._xmlNode*, %struct._xsltCompMatch*, %struct._xsltCompMatch* }
%struct._xsltCompMatch = type opaque
%struct._xmlXPathObject = type { i32, %struct._xmlNodeSet*, i32, double, i8*, i8*, i32, i8*, i32 }
%struct._xmlNodeSet = type { i32, i32, %struct._xmlNode** }
%struct._xsltTransformContext = type { %struct._xsltStylesheet*, i32, %struct._xsltTemplate*, i32, i32, %struct._xsltTemplate**, %struct._xsltStackElem*, i32, i32, %struct._xsltStackElem**, i32, %struct._xmlHashTable*, %struct._xmlHashTable*, %struct._xmlHashTable*, i8*, i8*, %struct._xsltDocument*, %struct._xsltDocument*, %struct._xmlNode*, %struct._xmlNodeSet*, %struct._xmlDoc*, %struct._xmlNode*, %struct._xmlXPathContext*, i32, %struct._xmlHashTable*, %struct._xmlNode*, i32, i8*, i32, i64, i32, i32, i64*, i8*, i32, i32, %struct._xsltRuntimeExtra*, %struct._xsltDocument*, i8*, void (i8*, i8*, ...)*, i8*, void (%struct._xsltTransformContext*, %struct._xmlNode**, i32)*, %struct._xmlDoc*, %struct._xmlDoc*, i32, i8*, i32, i32, i32, i64*, i32, %struct._xmlDict*, %struct._xmlDoc*, i32, i32, i32, %struct._xsltTemplate*, %struct._xmlNode*, %struct._xmlDoc*, %struct._xsltTransformCache*, i8*, %struct._xmlDoc*, %struct._xmlDoc*, i32, i32, i32, i32, i64, i64 }
%struct._xsltRuntimeExtra = type { i8*, void (i8*)*, %union.anon }
%union.anon = type { i8* }
%struct._xsltTransformCache = type { %struct._xmlDoc*, i32, %struct._xsltStackElem*, i32 }
%struct._xsltTemplate = type { %struct._xsltTemplate*, %struct._xsltStylesheet*, i8*, float, i8*, i8*, i8*, i8*, %struct._xmlNode*, %struct._xmlNode*, i32, %struct._xmlNs**, i32, i64, i8*, i32, i32, %struct._xsltTemplate**, i32* }
%struct._xsltDecimalFormat = type { %struct._xsltDecimalFormat*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%struct._xsltElemPreComp = type { %struct._xsltElemPreComp*, i32, void (%struct._xsltTransformContext*, %struct._xmlNode*, %struct._xmlNode*, %struct._xsltElemPreComp*)*, %struct._xmlNode*, void (%struct._xsltElemPreComp*)* }
%struct._xsltDocument = type { %struct._xsltDocument*, i32, %struct._xmlDoc*, i8*, %struct._xsltDocument*, i32, i32 }
%struct._xmlHashTable = type opaque
%struct._xmlXPathContext = type { %struct._xmlDoc*, %struct._xmlNode*, i32, i32, %struct._xmlHashTable*, i32, i32, %struct._xmlXPathType*, i32, i32, %struct._xmlHashTable*, i32, i32, %struct._xmlXPathAxis*, %struct._xmlNs**, i32, i8*, i32, i32, i32, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlHashTable*, %struct._xmlXPathObject* (i8*, i8*, i8*)*, i8*, i8*, i8*, i8*, void (%struct._xmlXPathParserContext*, i32)* (i8*, i8*, i8*)*, i8*, %struct._xmlNs**, i32, i8*, void (i8*, %struct._xmlError*)*, %struct._xmlError, %struct._xmlNode*, %struct._xmlDict*, i32, i8*, i64, i64, i32 }
%struct._xmlXPathType = type { i8*, i32 (%struct._xmlXPathObject*, i32)* }
%struct._xmlXPathAxis = type { i8*, %struct._xmlXPathObject* (%struct._xmlXPathParserContext*, %struct._xmlXPathObject*)* }
%struct._xmlXPathParserContext = type { i8*, i8*, i32, %struct._xmlXPathContext*, %struct._xmlXPathObject*, i32, i32, %struct._xmlXPathObject**, %struct._xmlXPathCompExpr*, i32, %struct._xmlNode*, i32 }
%struct._xmlError = type { i32, i32, i8*, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, i8* }

@.str = private unnamed_addr constant [89 x i8] c"Attribute '%s': The content is expected to be a single text node when compiling an AVT.\0A\00", align 1
@.str.1 = private unnamed_addr constant [47 x i8] c"Attribute '%s': The AVT has an unmatched '{'.\0A\00", align 1
@xsltGenericError = external local_unnamed_addr global void (i8*, i8*, ...)*, align 8
@xsltGenericErrorContext = external local_unnamed_addr global i8*, align 8
@.str.2 = private unnamed_addr constant [30 x i8] c"Unimplemented block at %s:%d\0A\00", align 1
@.str.3 = private unnamed_addr constant [47 x i8] c"../../third_party/libxslt/src/libxslt/attrvt.c\00", align 1
@.str.4 = private unnamed_addr constant [67 x i8] c"Attribute '%s': Failed to compile the expression '%s' in the AVT.\0A\00", align 1
@xmlFree = external local_unnamed_addr global void (i8*)*, align 8
@.str.5 = private unnamed_addr constant [47 x i8] c"Attribute '%s': The AVT has an unmatched '}'.\0A\00", align 1
@.str.6 = private unnamed_addr constant [33 x i8] c"xsltCompileAttr: malloc problem\0A\00", align 1
@xmlMalloc = external local_unnamed_addr global i8* (i64)*, align 8
@.str.7 = private unnamed_addr constant [34 x i8] c"xsltNewAttrVTPtr : malloc failed\0A\00", align 1
@xmlRealloc = external local_unnamed_addr global i8* (i8*, i64)*, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @xsltFreeAVTList(i8*) local_unnamed_addr #0 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %10, label %3

3:                                                ; preds = %1
  %4 = bitcast i8* %0 to %struct._xsltAttrVT*
  br label %5

5:                                                ; preds = %3, %5
  %6 = phi %struct._xsltAttrVT* [ %8, %5 ], [ %4, %3 ]
  %7 = getelementptr inbounds %struct._xsltAttrVT, %struct._xsltAttrVT* %6, i64 0, i32 0
  %8 = load %struct._xsltAttrVT*, %struct._xsltAttrVT** %7, align 8
  tail call fastcc void @xsltFreeAttrVT(%struct._xsltAttrVT* nonnull %6)
  %9 = icmp eq %struct._xsltAttrVT* %8, null
  br i1 %9, label %10, label %5

10:                                               ; preds = %5, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @xsltFreeAttrVT(%struct._xsltAttrVT*) unnamed_addr #0 {
  %2 = icmp eq %struct._xsltAttrVT* %0, null
  br i1 %2, label %72, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._xsltAttrVT, %struct._xsltAttrVT* %0, i64 0, i32 3
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 1
  %7 = getelementptr inbounds %struct._xsltAttrVT, %struct._xsltAttrVT* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp sgt i32 %8, 0
  br i1 %6, label %11, label %10

10:                                               ; preds = %3
  br i1 %9, label %39, label %62

11:                                               ; preds = %3
  br i1 %9, label %14, label %62

12:                                               ; preds = %23
  %13 = icmp sgt i32 %24, 1
  br i1 %13, label %28, label %62

14:                                               ; preds = %11, %23
  %15 = phi i32 [ %24, %23 ], [ %8, %11 ]
  %16 = phi i64 [ %25, %23 ], [ 0, %11 ]
  %17 = getelementptr inbounds %struct._xsltAttrVT, %struct._xsltAttrVT* %0, i64 0, i32 6, i64 %16
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  tail call void %21(i8* nonnull %18) #3
  %22 = load i32, i32* %7, align 8
  br label %23

23:                                               ; preds = %14, %20
  %24 = phi i32 [ %15, %14 ], [ %22, %20 ]
  %25 = add nuw i64 %16, 2
  %26 = trunc i64 %25 to i32
  %27 = icmp sgt i32 %24, %26
  br i1 %27, label %14, label %12

28:                                               ; preds = %12, %28
  %29 = phi i64 [ %33, %28 ], [ 1, %12 ]
  %30 = getelementptr inbounds %struct._xsltAttrVT, %struct._xsltAttrVT* %0, i64 0, i32 6, i64 %29
  %31 = bitcast i8** %30 to %struct._xmlXPathCompExpr**
  %32 = load %struct._xmlXPathCompExpr*, %struct._xmlXPathCompExpr** %31, align 8
  tail call void @xmlXPathFreeCompExpr(%struct._xmlXPathCompExpr* %32) #3
  %33 = add nuw i64 %29, 2
  %34 = load i32, i32* %7, align 8
  %35 = trunc i64 %33 to i32
  %36 = icmp sgt i32 %34, %35
  br i1 %36, label %28, label %62

37:                                               ; preds = %39
  %38 = icmp sgt i32 %45, 1
  br i1 %38, label %48, label %62

39:                                               ; preds = %10, %39
  %40 = phi i64 [ %44, %39 ], [ 0, %10 ]
  %41 = getelementptr inbounds %struct._xsltAttrVT, %struct._xsltAttrVT* %0, i64 0, i32 6, i64 %40
  %42 = bitcast i8** %41 to %struct._xmlXPathCompExpr**
  %43 = load %struct._xmlXPathCompExpr*, %struct._xmlXPathCompExpr** %42, align 8
  tail call void @xmlXPathFreeCompExpr(%struct._xmlXPathCompExpr* %43) #3
  %44 = add nuw i64 %40, 2
  %45 = load i32, i32* %7, align 8
  %46 = trunc i64 %44 to i32
  %47 = icmp sgt i32 %45, %46
  br i1 %47, label %39, label %37

48:                                               ; preds = %37, %57
  %49 = phi i32 [ %58, %57 ], [ %45, %37 ]
  %50 = phi i64 [ %59, %57 ], [ 1, %37 ]
  %51 = getelementptr inbounds %struct._xsltAttrVT, %struct._xsltAttrVT* %0, i64 0, i32 6, i64 %50
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %48
  %55 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  tail call void %55(i8* nonnull %52) #3
  %56 = load i32, i32* %7, align 8
  br label %57

57:                                               ; preds = %48, %54
  %58 = phi i32 [ %49, %48 ], [ %56, %54 ]
  %59 = add nuw i64 %50, 2
  %60 = trunc i64 %59 to i32
  %61 = icmp sgt i32 %58, %60
  br i1 %61, label %48, label %62

62:                                               ; preds = %57, %28, %11, %10, %37, %12
  %63 = getelementptr inbounds %struct._xsltAttrVT, %struct._xsltAttrVT* %0, i64 0, i32 4
  %64 = load %struct._xmlNs**, %struct._xmlNs*** %63, align 8
  %65 = icmp eq %struct._xmlNs** %64, null
  br i1 %65, label %69, label %66

66:                                               ; preds = %62
  %67 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  %68 = bitcast %struct._xmlNs** %64 to i8*
  tail call void %67(i8* nonnull %68) #3
  br label %69

69:                                               ; preds = %62, %66
  %70 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  %71 = bitcast %struct._xsltAttrVT* %0 to i8*
  tail call void %70(i8* nonnull %71) #3
  br label %72

72:                                               ; preds = %1, %69
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @xsltCompileAttr(%struct._xsltStylesheet*, %struct._xmlAttr*) local_unnamed_addr #0 {
  %3 = icmp eq %struct._xsltStylesheet* %0, null
  %4 = icmp eq %struct._xmlAttr* %1, null
  %5 = or i1 %3, %4
  br i1 %5, label %435, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._xmlAttr, %struct._xmlAttr* %1, i64 0, i32 3
  %8 = load %struct._xmlNode*, %struct._xmlNode** %7, align 8
  %9 = icmp eq %struct._xmlNode* %8, null
  br i1 %9, label %435, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %8, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 3
  br i1 %13, label %14, label %18

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %8, i64 0, i32 6
  %16 = load %struct._xmlNode*, %struct._xmlNode** %15, align 8
  %17 = icmp eq %struct._xmlNode* %16, null
  br i1 %17, label %26, label %18

18:                                               ; preds = %14, %10
  %19 = getelementptr inbounds %struct._xmlAttr, %struct._xmlAttr* %1, i64 0, i32 5
  %20 = load %struct._xmlNode*, %struct._xmlNode** %19, align 8
  %21 = getelementptr inbounds %struct._xmlAttr, %struct._xmlAttr* %1, i64 0, i32 2
  %22 = load i8*, i8** %21, align 8
  tail call void (%struct._xsltTransformContext*, %struct._xsltStylesheet*, %struct._xmlNode*, i8*, ...) @xsltTransformError(%struct._xsltTransformContext* null, %struct._xsltStylesheet* nonnull %0, %struct._xmlNode* %20, i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str, i64 0, i64 0), i8* %22) #3
  %23 = getelementptr inbounds %struct._xsltStylesheet, %struct._xsltStylesheet* %0, i64 0, i32 37
  %24 = load i32, i32* %23, align 4
  %25 = add nsw i32 %24, 1
  store i32 %25, i32* %23, align 4
  br label %435

26:                                               ; preds = %14
  %27 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %8, i64 0, i32 10
  %28 = load i8*, i8** %27, align 8
  %29 = tail call i8* @xmlStrchr(i8* %28, i8 zeroext 123) #3
  %30 = icmp eq i8* %29, null
  br i1 %30, label %31, label %34

31:                                               ; preds = %26
  %32 = tail call i8* @xmlStrchr(i8* %28, i8 zeroext 125) #3
  %33 = icmp eq i8* %32, null
  br i1 %33, label %435, label %34

34:                                               ; preds = %31, %26
  %35 = getelementptr inbounds %struct._xmlAttr, %struct._xmlAttr* %1, i64 0, i32 11
  %36 = load i8*, i8** %35, align 8
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %435

38:                                               ; preds = %34
  %39 = load i8* (i64)*, i8* (i64)** @xmlMalloc, align 8
  %40 = tail call i8* %39(i64 120) #3
  %41 = icmp eq i8* %40, null
  br i1 %41, label %42, label %46

42:                                               ; preds = %38
  tail call void (%struct._xsltTransformContext*, %struct._xsltStylesheet*, %struct._xmlNode*, i8*, ...) @xsltTransformError(%struct._xsltTransformContext* null, %struct._xsltStylesheet* nonnull %0, %struct._xmlNode* null, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.7, i64 0, i64 0)) #3
  %43 = getelementptr inbounds %struct._xsltStylesheet, %struct._xsltStylesheet* %0, i64 0, i32 37
  %44 = load i32, i32* %43, align 4
  %45 = add nsw i32 %44, 1
  store i32 %45, i32* %43, align 4
  br label %435

46:                                               ; preds = %38
  %47 = bitcast i8* %40 to %struct._xsltAttrVT*
  %48 = getelementptr inbounds i8, i8* %40, i64 12
  %49 = bitcast i8* %48 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 0, i64 120, i1 false) #3
  store i32 10, i32* %49, align 4
  %50 = getelementptr inbounds i8, i8* %40, i64 16
  %51 = bitcast i8* %50 to i32*
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %struct._xsltStylesheet, %struct._xsltStylesheet* %0, i64 0, i32 47
  %53 = bitcast i8** %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast i8* %40 to i64*
  store i64 %54, i64* %55, align 8
  store i8* %40, i8** %52, align 8
  store i8* %40, i8** %35, align 8
  %56 = getelementptr inbounds %struct._xmlAttr, %struct._xmlAttr* %1, i64 0, i32 8
  %57 = load %struct._xmlDoc*, %struct._xmlDoc** %56, align 8
  %58 = getelementptr inbounds %struct._xmlAttr, %struct._xmlAttr* %1, i64 0, i32 5
  %59 = load %struct._xmlNode*, %struct._xmlNode** %58, align 8
  %60 = tail call %struct._xmlNs** @xmlGetNsList(%struct._xmlDoc* %57, %struct._xmlNode* %59) #3
  %61 = getelementptr inbounds i8, i8* %40, i64 24
  %62 = bitcast i8* %61 to %struct._xmlNs***
  store %struct._xmlNs** %60, %struct._xmlNs*** %62, align 8
  %63 = icmp eq %struct._xmlNs** %60, null
  br i1 %63, label %72, label %64

64:                                               ; preds = %46, %64
  %65 = phi i64 [ %69, %64 ], [ 0, %46 ]
  %66 = getelementptr inbounds %struct._xmlNs*, %struct._xmlNs** %60, i64 %65
  %67 = load %struct._xmlNs*, %struct._xmlNs** %66, align 8
  %68 = icmp eq %struct._xmlNs* %67, null
  %69 = add nuw i64 %65, 1
  br i1 %68, label %70, label %64

70:                                               ; preds = %64
  %71 = trunc i64 %65 to i32
  br label %72

72:                                               ; preds = %70, %46
  %73 = phi i32 [ 0, %46 ], [ %71, %70 ]
  %74 = getelementptr inbounds i8, i8* %40, i64 32
  %75 = bitcast i8* %74 to i32*
  store i32 %73, i32* %75, align 8
  br label %76

76:                                               ; preds = %336, %72
  %77 = phi i8* [ %338, %336 ], [ %28, %72 ]
  %78 = phi i8* [ %325, %336 ], [ %40, %72 ]
  %79 = phi i8* [ %326, %336 ], [ %40, %72 ]
  %80 = phi i8* [ %327, %336 ], [ %40, %72 ]
  %81 = phi i8* [ %328, %336 ], [ %40, %72 ]
  %82 = phi %struct._xsltAttrVT* [ %329, %336 ], [ %47, %72 ]
  %83 = phi i32 [ 1, %336 ], [ 0, %72 ]
  br label %84

84:                                               ; preds = %339, %76
  %85 = phi i8* [ %77, %76 ], [ %89, %339 ]
  %86 = phi i8* [ %77, %76 ], [ %341, %339 ]
  %87 = phi i8* [ null, %76 ], [ %91, %339 ]
  br label %88

88:                                               ; preds = %97, %84
  %89 = phi i8* [ %85, %84 ], [ %104, %97 ]
  %90 = phi i8* [ %86, %84 ], [ %104, %97 ]
  %91 = phi i8* [ %87, %84 ], [ %103, %97 ]
  %92 = load i8, i8* %90, align 1
  switch i8 %92, label %339 [
    i8 0, label %349
    i8 123, label %93
  ]

93:                                               ; preds = %88
  %94 = getelementptr inbounds i8, i8* %90, i64 1
  %95 = load i8, i8* %94, align 1
  switch i8 %95, label %105 [
    i8 123, label %96
    i8 125, label %97
  ]

96:                                               ; preds = %93
  br label %97

97:                                               ; preds = %342, %93, %96
  %98 = phi i8* [ %94, %96 ], [ %90, %93 ], [ %341, %342 ]
  %99 = ptrtoint i8* %98 to i64
  %100 = ptrtoint i8* %89 to i64
  %101 = sub i64 %99, %100
  %102 = trunc i64 %101 to i32
  %103 = tail call i8* @xmlStrncat(i8* %91, i8* %89, i32 %102) #3
  %104 = getelementptr inbounds i8, i8* %90, i64 2
  br label %88

105:                                              ; preds = %93
  %106 = icmp ne i8* %91, null
  %107 = ptrtoint i8* %90 to i64
  %108 = ptrtoint i8* %89 to i64
  %109 = sub i64 %107, %108
  %110 = icmp sgt i64 %109, 0
  %111 = or i1 %106, %110
  br i1 %111, label %114, label %112

112:                                              ; preds = %105
  %113 = icmp eq i8 %95, 0
  br i1 %113, label %201, label %167

114:                                              ; preds = %105
  %115 = trunc i64 %109 to i32
  %116 = tail call i8* @xmlStrncat(i8* %91, i8* %89, i32 %115) #3
  %117 = getelementptr inbounds %struct._xsltAttrVT, %struct._xsltAttrVT* %82, i64 0, i32 1
  %118 = load i32, i32* %117, align 8
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %122

120:                                              ; preds = %114
  %121 = getelementptr inbounds %struct._xsltAttrVT, %struct._xsltAttrVT* %82, i64 0, i32 3
  store i32 1, i32* %121, align 8
  br label %122

122:                                              ; preds = %120, %114
  %123 = getelementptr inbounds %struct._xsltAttrVT, %struct._xsltAttrVT* %82, i64 0, i32 2
  %124 = load i32, i32* %123, align 4
  %125 = icmp slt i32 %118, %124
  br i1 %125, label %150, label %126

126:                                              ; preds = %122
  %127 = add nsw i32 %124, 10
  %128 = sext i32 %127 to i64
  %129 = shl nsw i64 %128, 3
  %130 = add nsw i64 %129, 40
  %131 = load i8* (i8*, i64)*, i8* (i8*, i64)** @xmlRealloc, align 8
  %132 = tail call i8* %131(i8* %78, i64 %130) #3
  %133 = icmp eq i8* %132, null
  br i1 %133, label %149, label %134

134:                                              ; preds = %126
  %135 = bitcast i8* %132 to %struct._xsltAttrVT*
  %136 = getelementptr inbounds i8, i8* %132, i64 40
  %137 = bitcast i8* %136 to [0 x i8*]*
  %138 = getelementptr inbounds i8, i8* %132, i64 8
  %139 = bitcast i8* %138 to i32*
  %140 = load i32, i32* %139, align 8
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds [0 x i8*], [0 x i8*]* %137, i64 0, i64 %141
  %143 = bitcast i8** %142 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %143, i8 0, i64 80, i1 false) #3
  %144 = getelementptr inbounds i8, i8* %132, i64 12
  %145 = bitcast i8* %144 to i32*
  %146 = load i32, i32* %145, align 4
  %147 = add nsw i32 %146, 10
  store i32 %147, i32* %145, align 4
  %148 = load i32, i32* %139, align 8
  br label %150

149:                                              ; preds = %126
  tail call fastcc void @xsltFreeAttrVT(%struct._xsltAttrVT* %82) #3
  br label %417

150:                                              ; preds = %122, %134
  %151 = phi i32 [ %118, %122 ], [ %148, %134 ]
  %152 = phi i8* [ %78, %122 ], [ %132, %134 ]
  %153 = phi i8* [ %79, %122 ], [ %132, %134 ]
  %154 = phi i8* [ %80, %122 ], [ %132, %134 ]
  %155 = phi i8* [ %81, %122 ], [ %132, %134 ]
  %156 = phi %struct._xsltAttrVT* [ %82, %122 ], [ %135, %134 ]
  %157 = getelementptr inbounds %struct._xsltAttrVT, %struct._xsltAttrVT* %156, i64 0, i32 1
  %158 = add nsw i32 %151, 1
  store i32 %158, i32* %157, align 8
  %159 = sext i32 %151 to i64
  %160 = getelementptr inbounds %struct._xsltAttrVT, %struct._xsltAttrVT* %156, i64 0, i32 6, i64 %159
  store i8* %116, i8** %160, align 8
  %161 = icmp eq %struct._xsltAttrVT* %156, null
  br i1 %161, label %417, label %162

162:                                              ; preds = %150
  %163 = load i8, i8* %94, align 1
  %164 = icmp eq i8 %163, 0
  %165 = icmp ne i8 %163, 125
  %166 = xor i1 %164, %165
  br i1 %166, label %167, label %201

167:                                              ; preds = %112, %162
  %168 = phi i32 [ %83, %112 ], [ 0, %162 ]
  %169 = phi %struct._xsltAttrVT* [ %82, %112 ], [ %156, %162 ]
  %170 = phi i8* [ %81, %112 ], [ %155, %162 ]
  %171 = phi i8* [ %80, %112 ], [ %154, %162 ]
  %172 = phi i8* [ %79, %112 ], [ %153, %162 ]
  %173 = phi i8* [ %78, %112 ], [ %152, %162 ]
  %174 = phi i8* [ %89, %112 ], [ %90, %162 ]
  %175 = phi i8 [ %95, %112 ], [ %163, %162 ]
  br label %176

176:                                              ; preds = %167, %195
  %177 = phi i8 [ %197, %195 ], [ %175, %167 ]
  %178 = phi i8* [ %196, %195 ], [ %94, %167 ]
  switch i8 %177, label %193 [
    i8 39, label %179
    i8 34, label %179
  ]

179:                                              ; preds = %176, %176
  %180 = sext i8 %177 to i32
  br label %181

181:                                              ; preds = %181, %179
  %182 = phi i8* [ %178, %179 ], [ %183, %181 ]
  %183 = getelementptr inbounds i8, i8* %182, i64 1
  %184 = load i8, i8* %183, align 1
  %185 = icmp eq i8 %184, 0
  %186 = zext i8 %184 to i32
  %187 = icmp ne i32 %186, %180
  %188 = xor i1 %185, true
  %189 = and i1 %187, %188
  br i1 %189, label %181, label %190

190:                                              ; preds = %181
  %191 = getelementptr inbounds i8, i8* %182, i64 2
  %192 = select i1 %185, i8* %183, i8* %191
  br label %195

193:                                              ; preds = %176
  %194 = getelementptr inbounds i8, i8* %178, i64 1
  br label %195

195:                                              ; preds = %193, %190
  %196 = phi i8* [ %192, %190 ], [ %194, %193 ]
  %197 = load i8, i8* %196, align 1
  %198 = icmp eq i8 %197, 0
  %199 = icmp ne i8 %197, 125
  %200 = xor i1 %198, %199
  br i1 %200, label %176, label %201

201:                                              ; preds = %195, %112, %162
  %202 = phi i32 [ 0, %162 ], [ %83, %112 ], [ %168, %195 ]
  %203 = phi %struct._xsltAttrVT* [ %156, %162 ], [ %82, %112 ], [ %169, %195 ]
  %204 = phi i8* [ %155, %162 ], [ %81, %112 ], [ %170, %195 ]
  %205 = phi i8* [ %154, %162 ], [ %80, %112 ], [ %171, %195 ]
  %206 = phi i8* [ %153, %162 ], [ %79, %112 ], [ %172, %195 ]
  %207 = phi i8* [ %152, %162 ], [ %78, %112 ], [ %173, %195 ]
  %208 = phi i8* [ %90, %162 ], [ %89, %112 ], [ %174, %195 ]
  %209 = phi i8* [ %94, %162 ], [ %94, %112 ], [ %196, %195 ]
  %210 = phi i1 [ %164, %162 ], [ %113, %112 ], [ %198, %195 ]
  br i1 %210, label %211, label %218

211:                                              ; preds = %201
  %212 = load %struct._xmlNode*, %struct._xmlNode** %58, align 8
  %213 = getelementptr inbounds %struct._xmlAttr, %struct._xmlAttr* %1, i64 0, i32 2
  %214 = load i8*, i8** %213, align 8
  tail call void (%struct._xsltTransformContext*, %struct._xsltStylesheet*, %struct._xmlNode*, i8*, ...) @xsltTransformError(%struct._xsltTransformContext* null, %struct._xsltStylesheet* %0, %struct._xmlNode* %212, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1, i64 0, i64 0), i8* %214) #3
  %215 = getelementptr inbounds %struct._xsltStylesheet, %struct._xsltStylesheet* %0, i64 0, i32 37
  %216 = load i32, i32* %215, align 4
  %217 = add nsw i32 %216, 1
  store i32 %217, i32* %215, align 4
  br label %409

218:                                              ; preds = %201
  %219 = getelementptr inbounds i8, i8* %208, i64 1
  %220 = ptrtoint i8* %209 to i64
  %221 = ptrtoint i8* %219 to i64
  %222 = sub i64 %220, %221
  %223 = trunc i64 %222 to i32
  %224 = tail call i8* @xmlStrndup(i8* %219, i32 %223) #3
  %225 = icmp eq i8* %224, null
  br i1 %225, label %226, label %229

226:                                              ; preds = %218
  %227 = load void (i8*, i8*, ...)*, void (i8*, i8*, ...)** @xsltGenericError, align 8
  %228 = load i8*, i8** @xsltGenericErrorContext, align 8
  tail call void (i8*, i8*, ...) %227(i8* %228, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.3, i64 0, i64 0), i32 280) #3
  br label %409

229:                                              ; preds = %218
  %230 = tail call %struct._xmlXPathCompExpr* @xsltXPathCompile(%struct._xsltStylesheet* %0, i8* nonnull %224) #3
  %231 = icmp eq %struct._xmlXPathCompExpr* %230, null
  br i1 %231, label %232, label %239

232:                                              ; preds = %229
  %233 = load %struct._xmlNode*, %struct._xmlNode** %58, align 8
  %234 = getelementptr inbounds %struct._xmlAttr, %struct._xmlAttr* %1, i64 0, i32 2
  %235 = load i8*, i8** %234, align 8
  tail call void (%struct._xsltTransformContext*, %struct._xsltStylesheet*, %struct._xmlNode*, i8*, ...) @xsltTransformError(%struct._xsltTransformContext* null, %struct._xsltStylesheet* %0, %struct._xmlNode* %233, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.4, i64 0, i64 0), i8* %235, i8* nonnull %224) #3
  %236 = getelementptr inbounds %struct._xsltStylesheet, %struct._xsltStylesheet* %0, i64 0, i32 37
  %237 = load i32, i32* %236, align 4
  %238 = add nsw i32 %237, 1
  store i32 %238, i32* %236, align 4
  br label %409

239:                                              ; preds = %229
  %240 = getelementptr inbounds %struct._xsltAttrVT, %struct._xsltAttrVT* %203, i64 0, i32 1
  %241 = load i32, i32* %240, align 8
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %243, label %245

243:                                              ; preds = %239
  %244 = getelementptr inbounds %struct._xsltAttrVT, %struct._xsltAttrVT* %203, i64 0, i32 3
  store i32 0, i32* %244, align 8
  br label %245

245:                                              ; preds = %243, %239
  %246 = icmp eq i32 %202, 1
  br i1 %246, label %247, label %289

247:                                              ; preds = %245
  %248 = getelementptr inbounds %struct._xsltAttrVT, %struct._xsltAttrVT* %203, i64 0, i32 2
  %249 = load i32, i32* %248, align 4
  %250 = icmp slt i32 %241, %249
  br i1 %250, label %275, label %251

251:                                              ; preds = %247
  %252 = add nsw i32 %249, 10
  %253 = sext i32 %252 to i64
  %254 = shl nsw i64 %253, 3
  %255 = add nsw i64 %254, 40
  %256 = load i8* (i8*, i64)*, i8* (i8*, i64)** @xmlRealloc, align 8
  %257 = tail call i8* %256(i8* %207, i64 %255) #3
  %258 = icmp eq i8* %257, null
  br i1 %258, label %274, label %259

259:                                              ; preds = %251
  %260 = bitcast i8* %257 to %struct._xsltAttrVT*
  %261 = getelementptr inbounds i8, i8* %257, i64 40
  %262 = bitcast i8* %261 to [0 x i8*]*
  %263 = getelementptr inbounds i8, i8* %257, i64 8
  %264 = bitcast i8* %263 to i32*
  %265 = load i32, i32* %264, align 8
  %266 = sext i32 %265 to i64
  %267 = getelementptr inbounds [0 x i8*], [0 x i8*]* %262, i64 0, i64 %266
  %268 = bitcast i8** %267 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %268, i8 0, i64 80, i1 false) #3
  %269 = getelementptr inbounds i8, i8* %257, i64 12
  %270 = bitcast i8* %269 to i32*
  %271 = load i32, i32* %270, align 4
  %272 = add nsw i32 %271, 10
  store i32 %272, i32* %270, align 4
  %273 = load i32, i32* %264, align 8
  br label %275

274:                                              ; preds = %251
  tail call fastcc void @xsltFreeAttrVT(%struct._xsltAttrVT* %203) #3
  br label %417

275:                                              ; preds = %247, %259
  %276 = phi i32 [ %241, %247 ], [ %273, %259 ]
  %277 = phi i8* [ %207, %247 ], [ %257, %259 ]
  %278 = phi i8* [ %206, %247 ], [ %257, %259 ]
  %279 = phi i8* [ %205, %247 ], [ %257, %259 ]
  %280 = phi i8* [ %204, %247 ], [ %257, %259 ]
  %281 = phi %struct._xsltAttrVT* [ %203, %247 ], [ %260, %259 ]
  %282 = getelementptr inbounds %struct._xsltAttrVT, %struct._xsltAttrVT* %281, i64 0, i32 1
  %283 = add nsw i32 %276, 1
  store i32 %283, i32* %282, align 8
  %284 = sext i32 %276 to i64
  %285 = getelementptr inbounds %struct._xsltAttrVT, %struct._xsltAttrVT* %281, i64 0, i32 6, i64 %284
  store i8* null, i8** %285, align 8
  %286 = icmp eq %struct._xsltAttrVT* %281, null
  br i1 %286, label %417, label %287

287:                                              ; preds = %275
  %288 = load i32, i32* %282, align 8
  br label %289

289:                                              ; preds = %287, %245
  %290 = phi i32 [ %288, %287 ], [ %241, %245 ]
  %291 = phi i8* [ %277, %287 ], [ %207, %245 ]
  %292 = phi i8* [ %278, %287 ], [ %206, %245 ]
  %293 = phi i8* [ %279, %287 ], [ %205, %245 ]
  %294 = phi i8* [ %280, %287 ], [ %204, %245 ]
  %295 = phi %struct._xsltAttrVT* [ %281, %287 ], [ %203, %245 ]
  %296 = getelementptr inbounds %struct._xsltAttrVT, %struct._xsltAttrVT* %295, i64 0, i32 2
  %297 = load i32, i32* %296, align 4
  %298 = icmp slt i32 %290, %297
  br i1 %298, label %323, label %299

299:                                              ; preds = %289
  %300 = add nsw i32 %297, 10
  %301 = sext i32 %300 to i64
  %302 = shl nsw i64 %301, 3
  %303 = add nsw i64 %302, 40
  %304 = load i8* (i8*, i64)*, i8* (i8*, i64)** @xmlRealloc, align 8
  %305 = tail call i8* %304(i8* %291, i64 %303) #3
  %306 = icmp eq i8* %305, null
  br i1 %306, label %322, label %307

307:                                              ; preds = %299
  %308 = bitcast i8* %305 to %struct._xsltAttrVT*
  %309 = getelementptr inbounds i8, i8* %305, i64 40
  %310 = bitcast i8* %309 to [0 x i8*]*
  %311 = getelementptr inbounds i8, i8* %305, i64 8
  %312 = bitcast i8* %311 to i32*
  %313 = load i32, i32* %312, align 8
  %314 = sext i32 %313 to i64
  %315 = getelementptr inbounds [0 x i8*], [0 x i8*]* %310, i64 0, i64 %314
  %316 = bitcast i8** %315 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %316, i8 0, i64 80, i1 false) #3
  %317 = getelementptr inbounds i8, i8* %305, i64 12
  %318 = bitcast i8* %317 to i32*
  %319 = load i32, i32* %318, align 4
  %320 = add nsw i32 %319, 10
  store i32 %320, i32* %318, align 4
  %321 = load i32, i32* %312, align 8
  br label %323

322:                                              ; preds = %299
  tail call fastcc void @xsltFreeAttrVT(%struct._xsltAttrVT* %295) #3
  br label %417

323:                                              ; preds = %289, %307
  %324 = phi i32 [ %290, %289 ], [ %321, %307 ]
  %325 = phi i8* [ %291, %289 ], [ %305, %307 ]
  %326 = phi i8* [ %292, %289 ], [ %305, %307 ]
  %327 = phi i8* [ %293, %289 ], [ %305, %307 ]
  %328 = phi i8* [ %294, %289 ], [ %305, %307 ]
  %329 = phi %struct._xsltAttrVT* [ %295, %289 ], [ %308, %307 ]
  %330 = getelementptr inbounds %struct._xsltAttrVT, %struct._xsltAttrVT* %329, i64 0, i32 1
  %331 = add nsw i32 %324, 1
  store i32 %331, i32* %330, align 8
  %332 = sext i32 %324 to i64
  %333 = getelementptr inbounds %struct._xsltAttrVT, %struct._xsltAttrVT* %329, i64 0, i32 6, i64 %332
  %334 = bitcast i8** %333 to %struct._xmlXPathCompExpr**
  store %struct._xmlXPathCompExpr* %230, %struct._xmlXPathCompExpr** %334, align 8
  %335 = icmp eq %struct._xsltAttrVT* %329, null
  br i1 %335, label %417, label %336

336:                                              ; preds = %323
  %337 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  tail call void %337(i8* nonnull %224) #3
  %338 = getelementptr inbounds i8, i8* %209, i64 1
  br label %76

339:                                              ; preds = %88
  %340 = icmp eq i8 %92, 125
  %341 = getelementptr inbounds i8, i8* %90, i64 1
  br i1 %340, label %342, label %84

342:                                              ; preds = %339
  %343 = load i8, i8* %341, align 1
  %344 = icmp eq i8 %343, 125
  br i1 %344, label %97, label %345

345:                                              ; preds = %342
  %346 = load %struct._xmlNode*, %struct._xmlNode** %58, align 8
  %347 = getelementptr inbounds %struct._xmlAttr, %struct._xmlAttr* %1, i64 0, i32 2
  %348 = load i8*, i8** %347, align 8
  tail call void (%struct._xsltTransformContext*, %struct._xsltStylesheet*, %struct._xmlNode*, i8*, ...) @xsltTransformError(%struct._xsltTransformContext* null, %struct._xsltStylesheet* %0, %struct._xmlNode* %346, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.5, i64 0, i64 0), i8* %348) #3
  br label %409

349:                                              ; preds = %88
  %350 = icmp ne i8* %91, null
  %351 = ptrtoint i8* %90 to i64
  %352 = ptrtoint i8* %89 to i64
  %353 = sub i64 %351, %352
  %354 = icmp sgt i64 %353, 0
  %355 = or i1 %350, %354
  br i1 %355, label %356, label %409

356:                                              ; preds = %349
  %357 = trunc i64 %353 to i32
  %358 = tail call i8* @xmlStrncat(i8* %91, i8* %89, i32 %357) #3
  %359 = getelementptr inbounds %struct._xsltAttrVT, %struct._xsltAttrVT* %82, i64 0, i32 1
  %360 = load i32, i32* %359, align 8
  %361 = icmp eq i32 %360, 0
  br i1 %361, label %362, label %364

362:                                              ; preds = %356
  %363 = getelementptr inbounds %struct._xsltAttrVT, %struct._xsltAttrVT* %82, i64 0, i32 3
  store i32 1, i32* %363, align 8
  br label %364

364:                                              ; preds = %362, %356
  %365 = getelementptr inbounds %struct._xsltAttrVT, %struct._xsltAttrVT* %82, i64 0, i32 2
  %366 = load i32, i32* %365, align 4
  %367 = icmp slt i32 %360, %366
  br i1 %367, label %392, label %368

368:                                              ; preds = %364
  %369 = add nsw i32 %366, 10
  %370 = sext i32 %369 to i64
  %371 = shl nsw i64 %370, 3
  %372 = add nsw i64 %371, 40
  %373 = load i8* (i8*, i64)*, i8* (i8*, i64)** @xmlRealloc, align 8
  %374 = tail call i8* %373(i8* %78, i64 %372) #3
  %375 = icmp eq i8* %374, null
  br i1 %375, label %391, label %376

376:                                              ; preds = %368
  %377 = bitcast i8* %374 to %struct._xsltAttrVT*
  %378 = getelementptr inbounds i8, i8* %374, i64 40
  %379 = bitcast i8* %378 to [0 x i8*]*
  %380 = getelementptr inbounds i8, i8* %374, i64 8
  %381 = bitcast i8* %380 to i32*
  %382 = load i32, i32* %381, align 8
  %383 = sext i32 %382 to i64
  %384 = getelementptr inbounds [0 x i8*], [0 x i8*]* %379, i64 0, i64 %383
  %385 = bitcast i8** %384 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %385, i8 0, i64 80, i1 false) #3
  %386 = getelementptr inbounds i8, i8* %374, i64 12
  %387 = bitcast i8* %386 to i32*
  %388 = load i32, i32* %387, align 4
  %389 = add nsw i32 %388, 10
  store i32 %389, i32* %387, align 4
  %390 = load i32, i32* %381, align 8
  br label %392

391:                                              ; preds = %368
  tail call fastcc void @xsltFreeAttrVT(%struct._xsltAttrVT* %82) #3
  br label %402

392:                                              ; preds = %376, %364
  %393 = phi i32 [ %360, %364 ], [ %390, %376 ]
  %394 = phi i8* [ %79, %364 ], [ %374, %376 ]
  %395 = phi i8* [ %80, %364 ], [ %374, %376 ]
  %396 = phi i8* [ %81, %364 ], [ %374, %376 ]
  %397 = phi %struct._xsltAttrVT* [ %82, %364 ], [ %377, %376 ]
  %398 = getelementptr inbounds %struct._xsltAttrVT, %struct._xsltAttrVT* %397, i64 0, i32 1
  %399 = add nsw i32 %393, 1
  store i32 %399, i32* %398, align 8
  %400 = sext i32 %393 to i64
  %401 = getelementptr inbounds %struct._xsltAttrVT, %struct._xsltAttrVT* %397, i64 0, i32 6, i64 %400
  store i8* %358, i8** %401, align 8
  br label %402

402:                                              ; preds = %391, %392
  %403 = phi i8* [ %394, %392 ], [ null, %391 ]
  %404 = phi i8* [ %395, %392 ], [ null, %391 ]
  %405 = phi i8* [ %396, %392 ], [ null, %391 ]
  %406 = phi %struct._xsltAttrVT* [ %397, %392 ], [ null, %391 ]
  %407 = icmp eq %struct._xsltAttrVT* %406, null
  %408 = select i1 %407, i8* %358, i8* null
  br label %409

409:                                              ; preds = %349, %232, %402, %345, %226, %211
  %410 = phi i8* [ null, %211 ], [ null, %226 ], [ %91, %345 ], [ %408, %402 ], [ null, %232 ], [ null, %349 ]
  %411 = phi i8* [ null, %211 ], [ null, %226 ], [ null, %345 ], [ null, %402 ], [ %224, %232 ], [ null, %349 ]
  %412 = phi i8* [ %206, %211 ], [ %206, %226 ], [ %79, %345 ], [ %403, %402 ], [ %206, %232 ], [ %79, %349 ]
  %413 = phi i8* [ %205, %211 ], [ %205, %226 ], [ %80, %345 ], [ %404, %402 ], [ %205, %232 ], [ %80, %349 ]
  %414 = phi i8* [ %204, %211 ], [ %204, %226 ], [ %81, %345 ], [ %405, %402 ], [ %204, %232 ], [ %81, %349 ]
  %415 = phi %struct._xsltAttrVT* [ %203, %211 ], [ %203, %226 ], [ %82, %345 ], [ %406, %402 ], [ %203, %232 ], [ %82, %349 ]
  %416 = icmp eq %struct._xsltAttrVT* %415, null
  br i1 %416, label %417, label %421

417:                                              ; preds = %275, %323, %150, %274, %322, %149, %409
  %418 = phi i8* [ %411, %409 ], [ null, %149 ], [ %224, %322 ], [ %224, %274 ], [ %224, %275 ], [ %224, %323 ], [ null, %150 ]
  %419 = phi i8* [ %410, %409 ], [ %116, %149 ], [ null, %322 ], [ null, %274 ], [ null, %275 ], [ null, %323 ], [ %116, %150 ]
  %420 = load %struct._xmlNode*, %struct._xmlNode** %58, align 8
  tail call void (%struct._xsltTransformContext*, %struct._xsltStylesheet*, %struct._xmlNode*, i8*, ...) @xsltTransformError(%struct._xsltTransformContext* null, %struct._xsltStylesheet* %0, %struct._xmlNode* %420, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6, i64 0, i64 0)) #3
  br label %425

421:                                              ; preds = %409
  %422 = load i8*, i8** %35, align 8
  %423 = icmp eq i8* %422, %414
  br i1 %423, label %425, label %424

424:                                              ; preds = %421
  store i8* %413, i8** %35, align 8
  store i8* %412, i8** %52, align 8
  br label %425

425:                                              ; preds = %421, %424, %417
  %426 = phi i8* [ %411, %421 ], [ %411, %424 ], [ %418, %417 ]
  %427 = phi i8* [ %410, %421 ], [ %410, %424 ], [ %419, %417 ]
  %428 = icmp eq i8* %427, null
  br i1 %428, label %431, label %429

429:                                              ; preds = %425
  %430 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  tail call void %430(i8* nonnull %427) #3
  br label %431

431:                                              ; preds = %425, %429
  %432 = icmp eq i8* %426, null
  br i1 %432, label %435, label %433

433:                                              ; preds = %431
  %434 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  tail call void %434(i8* nonnull %426) #3
  br label %435

435:                                              ; preds = %42, %433, %431, %34, %31, %2, %6, %18
  ret void
}

declare void @xsltTransformError(%struct._xsltTransformContext*, %struct._xsltStylesheet*, %struct._xmlNode*, i8*, ...) local_unnamed_addr #1

declare i8* @xmlStrchr(i8*, i8 zeroext) local_unnamed_addr #1

declare %struct._xmlNs** @xmlGetNsList(%struct._xmlDoc*, %struct._xmlNode*) local_unnamed_addr #1

declare i8* @xmlStrncat(i8*, i8*, i32) local_unnamed_addr #1

declare i8* @xmlStrndup(i8*, i32) local_unnamed_addr #1

declare %struct._xmlXPathCompExpr* @xsltXPathCompile(%struct._xsltStylesheet*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i8* @xsltEvalAVT(%struct._xsltTransformContext*, i8* readonly, %struct._xmlNode* readnone) local_unnamed_addr #0 {
  %4 = icmp eq %struct._xsltTransformContext* %0, null
  %5 = icmp eq i8* %1, null
  %6 = or i1 %4, %5
  %7 = icmp eq %struct._xmlNode* %2, null
  %8 = or i1 %6, %7
  br i1 %8, label %53, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds i8, i8* %1, i64 8
  %11 = bitcast i8* %10 to i32*
  %12 = load i32, i32* %11, align 8
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %53

14:                                               ; preds = %9
  %15 = getelementptr inbounds i8, i8* %1, i64 16
  %16 = bitcast i8* %15 to i32*
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds i8, i8* %1, i64 40
  %19 = bitcast i8* %18 to [0 x i8*]*
  %20 = getelementptr inbounds i8, i8* %1, i64 32
  %21 = bitcast i8* %20 to i32*
  %22 = getelementptr inbounds i8, i8* %1, i64 24
  %23 = bitcast i8* %22 to %struct._xmlNs***
  br label %24

24:                                               ; preds = %14, %45
  %25 = phi i64 [ 0, %14 ], [ %49, %45 ]
  %26 = phi i32 [ %17, %14 ], [ %48, %45 ]
  %27 = phi i8* [ null, %14 ], [ %46, %45 ]
  %28 = icmp ne i32 %26, 0
  %29 = getelementptr inbounds [0 x i8*], [0 x i8*]* %19, i64 0, i64 %25
  br i1 %28, label %30, label %33

30:                                               ; preds = %24
  %31 = load i8*, i8** %29, align 8
  %32 = tail call i8* @xmlStrcat(i8* %27, i8* %31) #3
  br label %45

33:                                               ; preds = %24
  %34 = bitcast i8** %29 to %struct._xmlXPathCompExpr**
  %35 = load %struct._xmlXPathCompExpr*, %struct._xmlXPathCompExpr** %34, align 8
  %36 = load i32, i32* %21, align 8
  %37 = load %struct._xmlNs**, %struct._xmlNs*** %23, align 8
  %38 = tail call i8* @xsltEvalXPathStringNs(%struct._xsltTransformContext* %0, %struct._xmlXPathCompExpr* %35, i32 %36, %struct._xmlNs** %37) #3
  %39 = icmp eq i8* %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %33
  %41 = icmp eq i8* %27, null
  br i1 %41, label %45, label %42

42:                                               ; preds = %40
  %43 = tail call i8* @xmlStrcat(i8* nonnull %27, i8* nonnull %38) #3
  %44 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  tail call void %44(i8* nonnull %38) #3
  br label %45

45:                                               ; preds = %40, %33, %42, %30
  %46 = phi i8* [ %32, %30 ], [ %43, %42 ], [ %27, %33 ], [ %38, %40 ]
  %47 = xor i1 %28, true
  %48 = zext i1 %47 to i32
  %49 = add nuw nsw i64 %25, 1
  %50 = load i32, i32* %11, align 8
  %51 = sext i32 %50 to i64
  %52 = icmp slt i64 %49, %51
  br i1 %52, label %24, label %53

53:                                               ; preds = %45, %9, %3
  %54 = phi i8* [ null, %3 ], [ null, %9 ], [ %46, %45 ]
  ret i8* %54
}

declare i8* @xmlStrcat(i8*, i8*) local_unnamed_addr #1

declare i8* @xsltEvalXPathStringNs(%struct._xsltTransformContext*, %struct._xmlXPathCompExpr*, i32, %struct._xmlNs**) local_unnamed_addr #1

declare void @xmlXPathFreeCompExpr(%struct._xmlXPathCompExpr*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
