; ModuleID = '../../third_party/libaom/source/libaom/aom_dsp/x86/sad_impl_avx2.c'
source_filename = "../../third_party/libaom/source/libaom/aom_dsp/x86/sad_impl_avx2.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @aom_sad128x64_avx2(i8* nocapture readonly, i32, i8* nocapture readonly, i32) local_unnamed_addr #0 {
  %5 = sext i32 %3 to i64
  %6 = sext i32 %1 to i64
  %7 = shl i32 %3, 1
  %8 = sext i32 %7 to i64
  %9 = shl i32 %1, 1
  %10 = sext i32 %9 to i64
  br label %11

11:                                               ; preds = %11, %4
  %12 = phi i32 [ 0, %4 ], [ %52, %11 ]
  %13 = phi <8 x i32> [ zeroinitializer, %4 ], [ %49, %11 ]
  %14 = phi i8* [ %0, %4 ], [ %51, %11 ]
  %15 = phi i8* [ %2, %4 ], [ %50, %11 ]
  %16 = bitcast i8* %15 to <32 x i8>*
  %17 = load <32 x i8>, <32 x i8>* %16, align 1
  %18 = getelementptr inbounds i8, i8* %15, i64 %5
  %19 = bitcast i8* %18 to <32 x i8>*
  %20 = load <32 x i8>, <32 x i8>* %19, align 1
  %21 = bitcast i8* %14 to <32 x i8>*
  %22 = load <32 x i8>, <32 x i8>* %21, align 1
  %23 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %17, <32 x i8> %22) #3
  %24 = getelementptr inbounds i8, i8* %14, i64 %6
  %25 = bitcast i8* %24 to <32 x i8>*
  %26 = load <32 x i8>, <32 x i8>* %25, align 1
  %27 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %20, <32 x i8> %26) #3
  %28 = bitcast <4 x i64> %23 to <8 x i32>
  %29 = bitcast <4 x i64> %27 to <8 x i32>
  %30 = add <8 x i32> %13, %28
  %31 = add <8 x i32> %30, %29
  %32 = getelementptr inbounds i8, i8* %15, i64 %8
  %33 = getelementptr inbounds i8, i8* %14, i64 %10
  %34 = bitcast i8* %32 to <32 x i8>*
  %35 = load <32 x i8>, <32 x i8>* %34, align 1
  %36 = getelementptr inbounds i8, i8* %32, i64 %5
  %37 = bitcast i8* %36 to <32 x i8>*
  %38 = load <32 x i8>, <32 x i8>* %37, align 1
  %39 = bitcast i8* %33 to <32 x i8>*
  %40 = load <32 x i8>, <32 x i8>* %39, align 1
  %41 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %35, <32 x i8> %40) #3
  %42 = getelementptr inbounds i8, i8* %33, i64 %6
  %43 = bitcast i8* %42 to <32 x i8>*
  %44 = load <32 x i8>, <32 x i8>* %43, align 1
  %45 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %38, <32 x i8> %44) #3
  %46 = bitcast <4 x i64> %41 to <8 x i32>
  %47 = bitcast <4 x i64> %45 to <8 x i32>
  %48 = add <8 x i32> %31, %46
  %49 = add <8 x i32> %48, %47
  %50 = getelementptr inbounds i8, i8* %32, i64 %8
  %51 = getelementptr inbounds i8, i8* %33, i64 %10
  %52 = add nuw nsw i32 %12, 2
  %53 = icmp eq i32 %52, 16
  br i1 %53, label %54, label %11

54:                                               ; preds = %11
  %55 = bitcast <8 x i32> %49 to <32 x i8>
  %56 = shufflevector <32 x i8> %55, <32 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <32 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55>
  %57 = bitcast <32 x i8> %56 to <8 x i32>
  %58 = add <8 x i32> %49, %57
  %59 = bitcast <8 x i32> %58 to <4 x i64>
  %60 = shufflevector <4 x i64> %59, <4 x i64> undef, <2 x i32> <i32 0, i32 undef>
  %61 = getelementptr inbounds i8, i8* %0, i64 32
  %62 = getelementptr inbounds i8, i8* %2, i64 32
  br label %63

63:                                               ; preds = %63, %54
  %64 = phi i32 [ 0, %54 ], [ %104, %63 ]
  %65 = phi <8 x i32> [ zeroinitializer, %54 ], [ %101, %63 ]
  %66 = phi i8* [ %61, %54 ], [ %103, %63 ]
  %67 = phi i8* [ %62, %54 ], [ %102, %63 ]
  %68 = bitcast i8* %67 to <32 x i8>*
  %69 = load <32 x i8>, <32 x i8>* %68, align 1
  %70 = getelementptr inbounds i8, i8* %67, i64 %5
  %71 = bitcast i8* %70 to <32 x i8>*
  %72 = load <32 x i8>, <32 x i8>* %71, align 1
  %73 = bitcast i8* %66 to <32 x i8>*
  %74 = load <32 x i8>, <32 x i8>* %73, align 1
  %75 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %69, <32 x i8> %74) #3
  %76 = getelementptr inbounds i8, i8* %66, i64 %6
  %77 = bitcast i8* %76 to <32 x i8>*
  %78 = load <32 x i8>, <32 x i8>* %77, align 1
  %79 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %72, <32 x i8> %78) #3
  %80 = bitcast <4 x i64> %75 to <8 x i32>
  %81 = bitcast <4 x i64> %79 to <8 x i32>
  %82 = add <8 x i32> %65, %80
  %83 = add <8 x i32> %82, %81
  %84 = getelementptr inbounds i8, i8* %67, i64 %8
  %85 = getelementptr inbounds i8, i8* %66, i64 %10
  %86 = bitcast i8* %84 to <32 x i8>*
  %87 = load <32 x i8>, <32 x i8>* %86, align 1
  %88 = getelementptr inbounds i8, i8* %84, i64 %5
  %89 = bitcast i8* %88 to <32 x i8>*
  %90 = load <32 x i8>, <32 x i8>* %89, align 1
  %91 = bitcast i8* %85 to <32 x i8>*
  %92 = load <32 x i8>, <32 x i8>* %91, align 1
  %93 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %87, <32 x i8> %92) #3
  %94 = getelementptr inbounds i8, i8* %85, i64 %6
  %95 = bitcast i8* %94 to <32 x i8>*
  %96 = load <32 x i8>, <32 x i8>* %95, align 1
  %97 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %90, <32 x i8> %96) #3
  %98 = bitcast <4 x i64> %93 to <8 x i32>
  %99 = bitcast <4 x i64> %97 to <8 x i32>
  %100 = add <8 x i32> %83, %98
  %101 = add <8 x i32> %100, %99
  %102 = getelementptr inbounds i8, i8* %84, i64 %8
  %103 = getelementptr inbounds i8, i8* %85, i64 %10
  %104 = add nuw nsw i32 %64, 2
  %105 = icmp eq i32 %104, 16
  br i1 %105, label %106, label %63

106:                                              ; preds = %63
  %107 = bitcast <2 x i64> %60 to <4 x i32>
  %108 = shufflevector <4 x i64> %59, <4 x i64> undef, <2 x i32> <i32 2, i32 undef>
  %109 = bitcast <2 x i64> %108 to <4 x i32>
  %110 = bitcast <8 x i32> %101 to <32 x i8>
  %111 = shufflevector <32 x i8> %110, <32 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <32 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55>
  %112 = bitcast <32 x i8> %111 to <8 x i32>
  %113 = add <8 x i32> %101, %112
  %114 = bitcast <8 x i32> %113 to <4 x i64>
  %115 = shufflevector <4 x i64> %114, <4 x i64> undef, <2 x i32> <i32 0, i32 undef>
  %116 = bitcast <2 x i64> %115 to <4 x i32>
  %117 = shl i32 %1, 5
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds i8, i8* %0, i64 %118
  %120 = shl i32 %3, 5
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds i8, i8* %2, i64 %121
  br label %123

123:                                              ; preds = %123, %106
  %124 = phi i32 [ 0, %106 ], [ %164, %123 ]
  %125 = phi <8 x i32> [ zeroinitializer, %106 ], [ %161, %123 ]
  %126 = phi i8* [ %119, %106 ], [ %163, %123 ]
  %127 = phi i8* [ %122, %106 ], [ %162, %123 ]
  %128 = bitcast i8* %127 to <32 x i8>*
  %129 = load <32 x i8>, <32 x i8>* %128, align 1
  %130 = getelementptr inbounds i8, i8* %127, i64 %5
  %131 = bitcast i8* %130 to <32 x i8>*
  %132 = load <32 x i8>, <32 x i8>* %131, align 1
  %133 = bitcast i8* %126 to <32 x i8>*
  %134 = load <32 x i8>, <32 x i8>* %133, align 1
  %135 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %129, <32 x i8> %134) #3
  %136 = getelementptr inbounds i8, i8* %126, i64 %6
  %137 = bitcast i8* %136 to <32 x i8>*
  %138 = load <32 x i8>, <32 x i8>* %137, align 1
  %139 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %132, <32 x i8> %138) #3
  %140 = bitcast <4 x i64> %135 to <8 x i32>
  %141 = bitcast <4 x i64> %139 to <8 x i32>
  %142 = add <8 x i32> %125, %140
  %143 = add <8 x i32> %142, %141
  %144 = getelementptr inbounds i8, i8* %127, i64 %8
  %145 = getelementptr inbounds i8, i8* %126, i64 %10
  %146 = bitcast i8* %144 to <32 x i8>*
  %147 = load <32 x i8>, <32 x i8>* %146, align 1
  %148 = getelementptr inbounds i8, i8* %144, i64 %5
  %149 = bitcast i8* %148 to <32 x i8>*
  %150 = load <32 x i8>, <32 x i8>* %149, align 1
  %151 = bitcast i8* %145 to <32 x i8>*
  %152 = load <32 x i8>, <32 x i8>* %151, align 1
  %153 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %147, <32 x i8> %152) #3
  %154 = getelementptr inbounds i8, i8* %145, i64 %6
  %155 = bitcast i8* %154 to <32 x i8>*
  %156 = load <32 x i8>, <32 x i8>* %155, align 1
  %157 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %150, <32 x i8> %156) #3
  %158 = bitcast <4 x i64> %153 to <8 x i32>
  %159 = bitcast <4 x i64> %157 to <8 x i32>
  %160 = add <8 x i32> %143, %158
  %161 = add <8 x i32> %160, %159
  %162 = getelementptr inbounds i8, i8* %144, i64 %8
  %163 = getelementptr inbounds i8, i8* %145, i64 %10
  %164 = add nuw nsw i32 %124, 2
  %165 = icmp eq i32 %164, 16
  br i1 %165, label %166, label %123

166:                                              ; preds = %123
  %167 = add <4 x i32> %107, %109
  %168 = shufflevector <4 x i64> %114, <4 x i64> undef, <2 x i32> <i32 2, i32 undef>
  %169 = bitcast <2 x i64> %168 to <4 x i32>
  %170 = add <4 x i32> %116, %169
  %171 = extractelement <4 x i32> %167, i32 0
  %172 = bitcast <8 x i32> %161 to <32 x i8>
  %173 = shufflevector <32 x i8> %172, <32 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <32 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55>
  %174 = bitcast <32 x i8> %173 to <8 x i32>
  %175 = add <8 x i32> %161, %174
  %176 = bitcast <8 x i32> %175 to <4 x i64>
  %177 = shufflevector <4 x i64> %176, <4 x i64> undef, <2 x i32> <i32 0, i32 undef>
  %178 = getelementptr inbounds i8, i8* %119, i64 32
  %179 = getelementptr inbounds i8, i8* %122, i64 32
  br label %180

180:                                              ; preds = %180, %166
  %181 = phi i32 [ 0, %166 ], [ %221, %180 ]
  %182 = phi <8 x i32> [ zeroinitializer, %166 ], [ %218, %180 ]
  %183 = phi i8* [ %178, %166 ], [ %220, %180 ]
  %184 = phi i8* [ %179, %166 ], [ %219, %180 ]
  %185 = bitcast i8* %184 to <32 x i8>*
  %186 = load <32 x i8>, <32 x i8>* %185, align 1
  %187 = getelementptr inbounds i8, i8* %184, i64 %5
  %188 = bitcast i8* %187 to <32 x i8>*
  %189 = load <32 x i8>, <32 x i8>* %188, align 1
  %190 = bitcast i8* %183 to <32 x i8>*
  %191 = load <32 x i8>, <32 x i8>* %190, align 1
  %192 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %186, <32 x i8> %191) #3
  %193 = getelementptr inbounds i8, i8* %183, i64 %6
  %194 = bitcast i8* %193 to <32 x i8>*
  %195 = load <32 x i8>, <32 x i8>* %194, align 1
  %196 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %189, <32 x i8> %195) #3
  %197 = bitcast <4 x i64> %192 to <8 x i32>
  %198 = bitcast <4 x i64> %196 to <8 x i32>
  %199 = add <8 x i32> %182, %197
  %200 = add <8 x i32> %199, %198
  %201 = getelementptr inbounds i8, i8* %184, i64 %8
  %202 = getelementptr inbounds i8, i8* %183, i64 %10
  %203 = bitcast i8* %201 to <32 x i8>*
  %204 = load <32 x i8>, <32 x i8>* %203, align 1
  %205 = getelementptr inbounds i8, i8* %201, i64 %5
  %206 = bitcast i8* %205 to <32 x i8>*
  %207 = load <32 x i8>, <32 x i8>* %206, align 1
  %208 = bitcast i8* %202 to <32 x i8>*
  %209 = load <32 x i8>, <32 x i8>* %208, align 1
  %210 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %204, <32 x i8> %209) #3
  %211 = getelementptr inbounds i8, i8* %202, i64 %6
  %212 = bitcast i8* %211 to <32 x i8>*
  %213 = load <32 x i8>, <32 x i8>* %212, align 1
  %214 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %207, <32 x i8> %213) #3
  %215 = bitcast <4 x i64> %210 to <8 x i32>
  %216 = bitcast <4 x i64> %214 to <8 x i32>
  %217 = add <8 x i32> %200, %215
  %218 = add <8 x i32> %217, %216
  %219 = getelementptr inbounds i8, i8* %201, i64 %8
  %220 = getelementptr inbounds i8, i8* %202, i64 %10
  %221 = add nuw nsw i32 %181, 2
  %222 = icmp eq i32 %221, 16
  br i1 %222, label %223, label %180

223:                                              ; preds = %180
  %224 = extractelement <4 x i32> %170, i32 0
  %225 = bitcast <2 x i64> %177 to <4 x i32>
  %226 = shufflevector <4 x i64> %176, <4 x i64> undef, <2 x i32> <i32 2, i32 undef>
  %227 = bitcast <2 x i64> %226 to <4 x i32>
  %228 = add <4 x i32> %225, %227
  %229 = bitcast <8 x i32> %218 to <32 x i8>
  %230 = shufflevector <32 x i8> %229, <32 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <32 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55>
  %231 = bitcast <32 x i8> %230 to <8 x i32>
  %232 = add <8 x i32> %218, %231
  %233 = bitcast <8 x i32> %232 to <4 x i64>
  %234 = shufflevector <4 x i64> %233, <4 x i64> undef, <2 x i32> <i32 2, i32 undef>
  %235 = shufflevector <4 x i64> %233, <4 x i64> undef, <2 x i32> <i32 0, i32 undef>
  %236 = bitcast <2 x i64> %234 to <4 x i32>
  %237 = bitcast <2 x i64> %235 to <4 x i32>
  %238 = add <4 x i32> %237, %236
  %239 = getelementptr inbounds i8, i8* %0, i64 64
  %240 = getelementptr inbounds i8, i8* %2, i64 64
  br label %241

241:                                              ; preds = %241, %223
  %242 = phi i32 [ 0, %223 ], [ %282, %241 ]
  %243 = phi <8 x i32> [ zeroinitializer, %223 ], [ %279, %241 ]
  %244 = phi i8* [ %239, %223 ], [ %281, %241 ]
  %245 = phi i8* [ %240, %223 ], [ %280, %241 ]
  %246 = bitcast i8* %245 to <32 x i8>*
  %247 = load <32 x i8>, <32 x i8>* %246, align 1
  %248 = getelementptr inbounds i8, i8* %245, i64 %5
  %249 = bitcast i8* %248 to <32 x i8>*
  %250 = load <32 x i8>, <32 x i8>* %249, align 1
  %251 = bitcast i8* %244 to <32 x i8>*
  %252 = load <32 x i8>, <32 x i8>* %251, align 1
  %253 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %247, <32 x i8> %252) #3
  %254 = getelementptr inbounds i8, i8* %244, i64 %6
  %255 = bitcast i8* %254 to <32 x i8>*
  %256 = load <32 x i8>, <32 x i8>* %255, align 1
  %257 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %250, <32 x i8> %256) #3
  %258 = bitcast <4 x i64> %253 to <8 x i32>
  %259 = bitcast <4 x i64> %257 to <8 x i32>
  %260 = add <8 x i32> %243, %258
  %261 = add <8 x i32> %260, %259
  %262 = getelementptr inbounds i8, i8* %245, i64 %8
  %263 = getelementptr inbounds i8, i8* %244, i64 %10
  %264 = bitcast i8* %262 to <32 x i8>*
  %265 = load <32 x i8>, <32 x i8>* %264, align 1
  %266 = getelementptr inbounds i8, i8* %262, i64 %5
  %267 = bitcast i8* %266 to <32 x i8>*
  %268 = load <32 x i8>, <32 x i8>* %267, align 1
  %269 = bitcast i8* %263 to <32 x i8>*
  %270 = load <32 x i8>, <32 x i8>* %269, align 1
  %271 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %265, <32 x i8> %270) #3
  %272 = getelementptr inbounds i8, i8* %263, i64 %6
  %273 = bitcast i8* %272 to <32 x i8>*
  %274 = load <32 x i8>, <32 x i8>* %273, align 1
  %275 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %268, <32 x i8> %274) #3
  %276 = bitcast <4 x i64> %271 to <8 x i32>
  %277 = bitcast <4 x i64> %275 to <8 x i32>
  %278 = add <8 x i32> %261, %276
  %279 = add <8 x i32> %278, %277
  %280 = getelementptr inbounds i8, i8* %262, i64 %8
  %281 = getelementptr inbounds i8, i8* %263, i64 %10
  %282 = add nuw nsw i32 %242, 2
  %283 = icmp eq i32 %282, 16
  br i1 %283, label %284, label %241

284:                                              ; preds = %241
  %285 = extractelement <4 x i32> %228, i32 0
  %286 = extractelement <4 x i32> %238, i32 0
  %287 = bitcast <8 x i32> %279 to <32 x i8>
  %288 = shufflevector <32 x i8> %287, <32 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <32 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55>
  %289 = bitcast <32 x i8> %288 to <8 x i32>
  %290 = add <8 x i32> %279, %289
  %291 = bitcast <8 x i32> %290 to <4 x i64>
  %292 = shufflevector <4 x i64> %291, <4 x i64> undef, <2 x i32> <i32 0, i32 undef>
  %293 = getelementptr inbounds i8, i8* %0, i64 96
  %294 = getelementptr inbounds i8, i8* %2, i64 96
  br label %295

295:                                              ; preds = %295, %284
  %296 = phi i32 [ 0, %284 ], [ %336, %295 ]
  %297 = phi <8 x i32> [ zeroinitializer, %284 ], [ %333, %295 ]
  %298 = phi i8* [ %293, %284 ], [ %335, %295 ]
  %299 = phi i8* [ %294, %284 ], [ %334, %295 ]
  %300 = bitcast i8* %299 to <32 x i8>*
  %301 = load <32 x i8>, <32 x i8>* %300, align 1
  %302 = getelementptr inbounds i8, i8* %299, i64 %5
  %303 = bitcast i8* %302 to <32 x i8>*
  %304 = load <32 x i8>, <32 x i8>* %303, align 1
  %305 = bitcast i8* %298 to <32 x i8>*
  %306 = load <32 x i8>, <32 x i8>* %305, align 1
  %307 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %301, <32 x i8> %306) #3
  %308 = getelementptr inbounds i8, i8* %298, i64 %6
  %309 = bitcast i8* %308 to <32 x i8>*
  %310 = load <32 x i8>, <32 x i8>* %309, align 1
  %311 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %304, <32 x i8> %310) #3
  %312 = bitcast <4 x i64> %307 to <8 x i32>
  %313 = bitcast <4 x i64> %311 to <8 x i32>
  %314 = add <8 x i32> %297, %312
  %315 = add <8 x i32> %314, %313
  %316 = getelementptr inbounds i8, i8* %299, i64 %8
  %317 = getelementptr inbounds i8, i8* %298, i64 %10
  %318 = bitcast i8* %316 to <32 x i8>*
  %319 = load <32 x i8>, <32 x i8>* %318, align 1
  %320 = getelementptr inbounds i8, i8* %316, i64 %5
  %321 = bitcast i8* %320 to <32 x i8>*
  %322 = load <32 x i8>, <32 x i8>* %321, align 1
  %323 = bitcast i8* %317 to <32 x i8>*
  %324 = load <32 x i8>, <32 x i8>* %323, align 1
  %325 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %319, <32 x i8> %324) #3
  %326 = getelementptr inbounds i8, i8* %317, i64 %6
  %327 = bitcast i8* %326 to <32 x i8>*
  %328 = load <32 x i8>, <32 x i8>* %327, align 1
  %329 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %322, <32 x i8> %328) #3
  %330 = bitcast <4 x i64> %325 to <8 x i32>
  %331 = bitcast <4 x i64> %329 to <8 x i32>
  %332 = add <8 x i32> %315, %330
  %333 = add <8 x i32> %332, %331
  %334 = getelementptr inbounds i8, i8* %316, i64 %8
  %335 = getelementptr inbounds i8, i8* %317, i64 %10
  %336 = add nuw nsw i32 %296, 2
  %337 = icmp eq i32 %336, 16
  br i1 %337, label %338, label %295

338:                                              ; preds = %295
  %339 = bitcast <2 x i64> %292 to <4 x i32>
  %340 = shufflevector <4 x i64> %291, <4 x i64> undef, <2 x i32> <i32 2, i32 undef>
  %341 = bitcast <2 x i64> %340 to <4 x i32>
  %342 = bitcast <8 x i32> %333 to <32 x i8>
  %343 = shufflevector <32 x i8> %342, <32 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <32 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55>
  %344 = bitcast <32 x i8> %343 to <8 x i32>
  %345 = add <8 x i32> %333, %344
  %346 = bitcast <8 x i32> %345 to <4 x i64>
  %347 = shufflevector <4 x i64> %346, <4 x i64> undef, <2 x i32> <i32 0, i32 undef>
  %348 = bitcast <2 x i64> %347 to <4 x i32>
  %349 = getelementptr inbounds i8, i8* %239, i64 %118
  %350 = getelementptr inbounds i8, i8* %240, i64 %121
  br label %351

351:                                              ; preds = %351, %338
  %352 = phi i32 [ 0, %338 ], [ %392, %351 ]
  %353 = phi <8 x i32> [ zeroinitializer, %338 ], [ %389, %351 ]
  %354 = phi i8* [ %349, %338 ], [ %391, %351 ]
  %355 = phi i8* [ %350, %338 ], [ %390, %351 ]
  %356 = bitcast i8* %355 to <32 x i8>*
  %357 = load <32 x i8>, <32 x i8>* %356, align 1
  %358 = getelementptr inbounds i8, i8* %355, i64 %5
  %359 = bitcast i8* %358 to <32 x i8>*
  %360 = load <32 x i8>, <32 x i8>* %359, align 1
  %361 = bitcast i8* %354 to <32 x i8>*
  %362 = load <32 x i8>, <32 x i8>* %361, align 1
  %363 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %357, <32 x i8> %362) #3
  %364 = getelementptr inbounds i8, i8* %354, i64 %6
  %365 = bitcast i8* %364 to <32 x i8>*
  %366 = load <32 x i8>, <32 x i8>* %365, align 1
  %367 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %360, <32 x i8> %366) #3
  %368 = bitcast <4 x i64> %363 to <8 x i32>
  %369 = bitcast <4 x i64> %367 to <8 x i32>
  %370 = add <8 x i32> %353, %368
  %371 = add <8 x i32> %370, %369
  %372 = getelementptr inbounds i8, i8* %355, i64 %8
  %373 = getelementptr inbounds i8, i8* %354, i64 %10
  %374 = bitcast i8* %372 to <32 x i8>*
  %375 = load <32 x i8>, <32 x i8>* %374, align 1
  %376 = getelementptr inbounds i8, i8* %372, i64 %5
  %377 = bitcast i8* %376 to <32 x i8>*
  %378 = load <32 x i8>, <32 x i8>* %377, align 1
  %379 = bitcast i8* %373 to <32 x i8>*
  %380 = load <32 x i8>, <32 x i8>* %379, align 1
  %381 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %375, <32 x i8> %380) #3
  %382 = getelementptr inbounds i8, i8* %373, i64 %6
  %383 = bitcast i8* %382 to <32 x i8>*
  %384 = load <32 x i8>, <32 x i8>* %383, align 1
  %385 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %378, <32 x i8> %384) #3
  %386 = bitcast <4 x i64> %381 to <8 x i32>
  %387 = bitcast <4 x i64> %385 to <8 x i32>
  %388 = add <8 x i32> %371, %386
  %389 = add <8 x i32> %388, %387
  %390 = getelementptr inbounds i8, i8* %372, i64 %8
  %391 = getelementptr inbounds i8, i8* %373, i64 %10
  %392 = add nuw nsw i32 %352, 2
  %393 = icmp eq i32 %392, 16
  br i1 %393, label %394, label %351

394:                                              ; preds = %351
  %395 = add <4 x i32> %339, %341
  %396 = shufflevector <4 x i64> %346, <4 x i64> undef, <2 x i32> <i32 2, i32 undef>
  %397 = bitcast <2 x i64> %396 to <4 x i32>
  %398 = add <4 x i32> %348, %397
  %399 = extractelement <4 x i32> %395, i32 0
  %400 = bitcast <8 x i32> %389 to <32 x i8>
  %401 = shufflevector <32 x i8> %400, <32 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <32 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55>
  %402 = bitcast <32 x i8> %401 to <8 x i32>
  %403 = add <8 x i32> %389, %402
  %404 = bitcast <8 x i32> %403 to <4 x i64>
  %405 = shufflevector <4 x i64> %404, <4 x i64> undef, <2 x i32> <i32 0, i32 undef>
  %406 = getelementptr inbounds i8, i8* %349, i64 32
  %407 = getelementptr inbounds i8, i8* %350, i64 32
  br label %408

408:                                              ; preds = %408, %394
  %409 = phi i32 [ 0, %394 ], [ %449, %408 ]
  %410 = phi <8 x i32> [ zeroinitializer, %394 ], [ %446, %408 ]
  %411 = phi i8* [ %406, %394 ], [ %448, %408 ]
  %412 = phi i8* [ %407, %394 ], [ %447, %408 ]
  %413 = bitcast i8* %412 to <32 x i8>*
  %414 = load <32 x i8>, <32 x i8>* %413, align 1
  %415 = getelementptr inbounds i8, i8* %412, i64 %5
  %416 = bitcast i8* %415 to <32 x i8>*
  %417 = load <32 x i8>, <32 x i8>* %416, align 1
  %418 = bitcast i8* %411 to <32 x i8>*
  %419 = load <32 x i8>, <32 x i8>* %418, align 1
  %420 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %414, <32 x i8> %419) #3
  %421 = getelementptr inbounds i8, i8* %411, i64 %6
  %422 = bitcast i8* %421 to <32 x i8>*
  %423 = load <32 x i8>, <32 x i8>* %422, align 1
  %424 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %417, <32 x i8> %423) #3
  %425 = bitcast <4 x i64> %420 to <8 x i32>
  %426 = bitcast <4 x i64> %424 to <8 x i32>
  %427 = add <8 x i32> %410, %425
  %428 = add <8 x i32> %427, %426
  %429 = getelementptr inbounds i8, i8* %412, i64 %8
  %430 = getelementptr inbounds i8, i8* %411, i64 %10
  %431 = bitcast i8* %429 to <32 x i8>*
  %432 = load <32 x i8>, <32 x i8>* %431, align 1
  %433 = getelementptr inbounds i8, i8* %429, i64 %5
  %434 = bitcast i8* %433 to <32 x i8>*
  %435 = load <32 x i8>, <32 x i8>* %434, align 1
  %436 = bitcast i8* %430 to <32 x i8>*
  %437 = load <32 x i8>, <32 x i8>* %436, align 1
  %438 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %432, <32 x i8> %437) #3
  %439 = getelementptr inbounds i8, i8* %430, i64 %6
  %440 = bitcast i8* %439 to <32 x i8>*
  %441 = load <32 x i8>, <32 x i8>* %440, align 1
  %442 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %435, <32 x i8> %441) #3
  %443 = bitcast <4 x i64> %438 to <8 x i32>
  %444 = bitcast <4 x i64> %442 to <8 x i32>
  %445 = add <8 x i32> %428, %443
  %446 = add <8 x i32> %445, %444
  %447 = getelementptr inbounds i8, i8* %429, i64 %8
  %448 = getelementptr inbounds i8, i8* %430, i64 %10
  %449 = add nuw nsw i32 %409, 2
  %450 = icmp eq i32 %449, 16
  br i1 %450, label %451, label %408

451:                                              ; preds = %408
  %452 = extractelement <4 x i32> %398, i32 0
  %453 = bitcast <2 x i64> %405 to <4 x i32>
  %454 = shufflevector <4 x i64> %404, <4 x i64> undef, <2 x i32> <i32 2, i32 undef>
  %455 = bitcast <2 x i64> %454 to <4 x i32>
  %456 = add <4 x i32> %453, %455
  %457 = extractelement <4 x i32> %456, i32 0
  %458 = bitcast <8 x i32> %446 to <32 x i8>
  %459 = shufflevector <32 x i8> %458, <32 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <32 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55>
  %460 = bitcast <32 x i8> %459 to <8 x i32>
  %461 = add <8 x i32> %446, %460
  %462 = bitcast <8 x i32> %461 to <4 x i64>
  %463 = shufflevector <4 x i64> %462, <4 x i64> undef, <2 x i32> <i32 2, i32 undef>
  %464 = shufflevector <4 x i64> %462, <4 x i64> undef, <2 x i32> <i32 0, i32 undef>
  %465 = bitcast <2 x i64> %463 to <4 x i32>
  %466 = bitcast <2 x i64> %464 to <4 x i32>
  %467 = add <4 x i32> %466, %465
  %468 = extractelement <4 x i32> %467, i32 0
  %469 = add i32 %224, %171
  %470 = add i32 %469, %285
  %471 = add i32 %470, %286
  %472 = add i32 %471, %399
  %473 = add i32 %472, %452
  %474 = add i32 %473, %457
  %475 = add i32 %474, %468
  ret i32 %475
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @aom_sad64x128_avx2(i8* nocapture readonly, i32, i8* nocapture readonly, i32) local_unnamed_addr #0 {
  %5 = sext i32 %3 to i64
  %6 = sext i32 %1 to i64
  %7 = shl i32 %3, 1
  %8 = sext i32 %7 to i64
  %9 = shl i32 %1, 1
  %10 = sext i32 %9 to i64
  br label %11

11:                                               ; preds = %11, %4
  %12 = phi i32 [ 0, %4 ], [ %52, %11 ]
  %13 = phi <8 x i32> [ zeroinitializer, %4 ], [ %49, %11 ]
  %14 = phi i8* [ %0, %4 ], [ %51, %11 ]
  %15 = phi i8* [ %2, %4 ], [ %50, %11 ]
  %16 = bitcast i8* %15 to <32 x i8>*
  %17 = load <32 x i8>, <32 x i8>* %16, align 1
  %18 = getelementptr inbounds i8, i8* %15, i64 %5
  %19 = bitcast i8* %18 to <32 x i8>*
  %20 = load <32 x i8>, <32 x i8>* %19, align 1
  %21 = bitcast i8* %14 to <32 x i8>*
  %22 = load <32 x i8>, <32 x i8>* %21, align 1
  %23 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %17, <32 x i8> %22) #3
  %24 = getelementptr inbounds i8, i8* %14, i64 %6
  %25 = bitcast i8* %24 to <32 x i8>*
  %26 = load <32 x i8>, <32 x i8>* %25, align 1
  %27 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %20, <32 x i8> %26) #3
  %28 = bitcast <4 x i64> %23 to <8 x i32>
  %29 = bitcast <4 x i64> %27 to <8 x i32>
  %30 = add <8 x i32> %13, %28
  %31 = add <8 x i32> %30, %29
  %32 = getelementptr inbounds i8, i8* %15, i64 %8
  %33 = getelementptr inbounds i8, i8* %14, i64 %10
  %34 = bitcast i8* %32 to <32 x i8>*
  %35 = load <32 x i8>, <32 x i8>* %34, align 1
  %36 = getelementptr inbounds i8, i8* %32, i64 %5
  %37 = bitcast i8* %36 to <32 x i8>*
  %38 = load <32 x i8>, <32 x i8>* %37, align 1
  %39 = bitcast i8* %33 to <32 x i8>*
  %40 = load <32 x i8>, <32 x i8>* %39, align 1
  %41 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %35, <32 x i8> %40) #3
  %42 = getelementptr inbounds i8, i8* %33, i64 %6
  %43 = bitcast i8* %42 to <32 x i8>*
  %44 = load <32 x i8>, <32 x i8>* %43, align 1
  %45 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %38, <32 x i8> %44) #3
  %46 = bitcast <4 x i64> %41 to <8 x i32>
  %47 = bitcast <4 x i64> %45 to <8 x i32>
  %48 = add <8 x i32> %31, %46
  %49 = add <8 x i32> %48, %47
  %50 = getelementptr inbounds i8, i8* %32, i64 %8
  %51 = getelementptr inbounds i8, i8* %33, i64 %10
  %52 = add nuw nsw i32 %12, 2
  %53 = icmp eq i32 %52, 16
  br i1 %53, label %54, label %11

54:                                               ; preds = %11
  %55 = bitcast <8 x i32> %49 to <32 x i8>
  %56 = shufflevector <32 x i8> %55, <32 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <32 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55>
  %57 = bitcast <32 x i8> %56 to <8 x i32>
  %58 = add <8 x i32> %49, %57
  %59 = bitcast <8 x i32> %58 to <4 x i64>
  %60 = shufflevector <4 x i64> %59, <4 x i64> undef, <2 x i32> <i32 0, i32 undef>
  %61 = getelementptr inbounds i8, i8* %0, i64 32
  %62 = getelementptr inbounds i8, i8* %2, i64 32
  br label %63

63:                                               ; preds = %63, %54
  %64 = phi i32 [ 0, %54 ], [ %104, %63 ]
  %65 = phi <8 x i32> [ zeroinitializer, %54 ], [ %101, %63 ]
  %66 = phi i8* [ %61, %54 ], [ %103, %63 ]
  %67 = phi i8* [ %62, %54 ], [ %102, %63 ]
  %68 = bitcast i8* %67 to <32 x i8>*
  %69 = load <32 x i8>, <32 x i8>* %68, align 1
  %70 = getelementptr inbounds i8, i8* %67, i64 %5
  %71 = bitcast i8* %70 to <32 x i8>*
  %72 = load <32 x i8>, <32 x i8>* %71, align 1
  %73 = bitcast i8* %66 to <32 x i8>*
  %74 = load <32 x i8>, <32 x i8>* %73, align 1
  %75 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %69, <32 x i8> %74) #3
  %76 = getelementptr inbounds i8, i8* %66, i64 %6
  %77 = bitcast i8* %76 to <32 x i8>*
  %78 = load <32 x i8>, <32 x i8>* %77, align 1
  %79 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %72, <32 x i8> %78) #3
  %80 = bitcast <4 x i64> %75 to <8 x i32>
  %81 = bitcast <4 x i64> %79 to <8 x i32>
  %82 = add <8 x i32> %65, %80
  %83 = add <8 x i32> %82, %81
  %84 = getelementptr inbounds i8, i8* %67, i64 %8
  %85 = getelementptr inbounds i8, i8* %66, i64 %10
  %86 = bitcast i8* %84 to <32 x i8>*
  %87 = load <32 x i8>, <32 x i8>* %86, align 1
  %88 = getelementptr inbounds i8, i8* %84, i64 %5
  %89 = bitcast i8* %88 to <32 x i8>*
  %90 = load <32 x i8>, <32 x i8>* %89, align 1
  %91 = bitcast i8* %85 to <32 x i8>*
  %92 = load <32 x i8>, <32 x i8>* %91, align 1
  %93 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %87, <32 x i8> %92) #3
  %94 = getelementptr inbounds i8, i8* %85, i64 %6
  %95 = bitcast i8* %94 to <32 x i8>*
  %96 = load <32 x i8>, <32 x i8>* %95, align 1
  %97 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %90, <32 x i8> %96) #3
  %98 = bitcast <4 x i64> %93 to <8 x i32>
  %99 = bitcast <4 x i64> %97 to <8 x i32>
  %100 = add <8 x i32> %83, %98
  %101 = add <8 x i32> %100, %99
  %102 = getelementptr inbounds i8, i8* %84, i64 %8
  %103 = getelementptr inbounds i8, i8* %85, i64 %10
  %104 = add nuw nsw i32 %64, 2
  %105 = icmp eq i32 %104, 16
  br i1 %105, label %106, label %63

106:                                              ; preds = %63
  %107 = bitcast <2 x i64> %60 to <4 x i32>
  %108 = shufflevector <4 x i64> %59, <4 x i64> undef, <2 x i32> <i32 2, i32 undef>
  %109 = bitcast <2 x i64> %108 to <4 x i32>
  %110 = bitcast <8 x i32> %101 to <32 x i8>
  %111 = shufflevector <32 x i8> %110, <32 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <32 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55>
  %112 = bitcast <32 x i8> %111 to <8 x i32>
  %113 = add <8 x i32> %101, %112
  %114 = bitcast <8 x i32> %113 to <4 x i64>
  %115 = shufflevector <4 x i64> %114, <4 x i64> undef, <2 x i32> <i32 0, i32 undef>
  %116 = bitcast <2 x i64> %115 to <4 x i32>
  %117 = shl i32 %1, 5
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds i8, i8* %0, i64 %118
  %120 = shl i32 %3, 5
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds i8, i8* %2, i64 %121
  br label %123

123:                                              ; preds = %123, %106
  %124 = phi i32 [ 0, %106 ], [ %164, %123 ]
  %125 = phi <8 x i32> [ zeroinitializer, %106 ], [ %161, %123 ]
  %126 = phi i8* [ %119, %106 ], [ %163, %123 ]
  %127 = phi i8* [ %122, %106 ], [ %162, %123 ]
  %128 = bitcast i8* %127 to <32 x i8>*
  %129 = load <32 x i8>, <32 x i8>* %128, align 1
  %130 = getelementptr inbounds i8, i8* %127, i64 %5
  %131 = bitcast i8* %130 to <32 x i8>*
  %132 = load <32 x i8>, <32 x i8>* %131, align 1
  %133 = bitcast i8* %126 to <32 x i8>*
  %134 = load <32 x i8>, <32 x i8>* %133, align 1
  %135 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %129, <32 x i8> %134) #3
  %136 = getelementptr inbounds i8, i8* %126, i64 %6
  %137 = bitcast i8* %136 to <32 x i8>*
  %138 = load <32 x i8>, <32 x i8>* %137, align 1
  %139 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %132, <32 x i8> %138) #3
  %140 = bitcast <4 x i64> %135 to <8 x i32>
  %141 = bitcast <4 x i64> %139 to <8 x i32>
  %142 = add <8 x i32> %125, %140
  %143 = add <8 x i32> %142, %141
  %144 = getelementptr inbounds i8, i8* %127, i64 %8
  %145 = getelementptr inbounds i8, i8* %126, i64 %10
  %146 = bitcast i8* %144 to <32 x i8>*
  %147 = load <32 x i8>, <32 x i8>* %146, align 1
  %148 = getelementptr inbounds i8, i8* %144, i64 %5
  %149 = bitcast i8* %148 to <32 x i8>*
  %150 = load <32 x i8>, <32 x i8>* %149, align 1
  %151 = bitcast i8* %145 to <32 x i8>*
  %152 = load <32 x i8>, <32 x i8>* %151, align 1
  %153 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %147, <32 x i8> %152) #3
  %154 = getelementptr inbounds i8, i8* %145, i64 %6
  %155 = bitcast i8* %154 to <32 x i8>*
  %156 = load <32 x i8>, <32 x i8>* %155, align 1
  %157 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %150, <32 x i8> %156) #3
  %158 = bitcast <4 x i64> %153 to <8 x i32>
  %159 = bitcast <4 x i64> %157 to <8 x i32>
  %160 = add <8 x i32> %143, %158
  %161 = add <8 x i32> %160, %159
  %162 = getelementptr inbounds i8, i8* %144, i64 %8
  %163 = getelementptr inbounds i8, i8* %145, i64 %10
  %164 = add nuw nsw i32 %124, 2
  %165 = icmp eq i32 %164, 16
  br i1 %165, label %166, label %123

166:                                              ; preds = %123
  %167 = add <4 x i32> %107, %109
  %168 = shufflevector <4 x i64> %114, <4 x i64> undef, <2 x i32> <i32 2, i32 undef>
  %169 = bitcast <2 x i64> %168 to <4 x i32>
  %170 = add <4 x i32> %116, %169
  %171 = extractelement <4 x i32> %167, i32 0
  %172 = bitcast <8 x i32> %161 to <32 x i8>
  %173 = shufflevector <32 x i8> %172, <32 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <32 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55>
  %174 = bitcast <32 x i8> %173 to <8 x i32>
  %175 = add <8 x i32> %161, %174
  %176 = bitcast <8 x i32> %175 to <4 x i64>
  %177 = shufflevector <4 x i64> %176, <4 x i64> undef, <2 x i32> <i32 0, i32 undef>
  %178 = getelementptr inbounds i8, i8* %119, i64 32
  %179 = getelementptr inbounds i8, i8* %122, i64 32
  br label %180

180:                                              ; preds = %180, %166
  %181 = phi i32 [ 0, %166 ], [ %221, %180 ]
  %182 = phi <8 x i32> [ zeroinitializer, %166 ], [ %218, %180 ]
  %183 = phi i8* [ %178, %166 ], [ %220, %180 ]
  %184 = phi i8* [ %179, %166 ], [ %219, %180 ]
  %185 = bitcast i8* %184 to <32 x i8>*
  %186 = load <32 x i8>, <32 x i8>* %185, align 1
  %187 = getelementptr inbounds i8, i8* %184, i64 %5
  %188 = bitcast i8* %187 to <32 x i8>*
  %189 = load <32 x i8>, <32 x i8>* %188, align 1
  %190 = bitcast i8* %183 to <32 x i8>*
  %191 = load <32 x i8>, <32 x i8>* %190, align 1
  %192 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %186, <32 x i8> %191) #3
  %193 = getelementptr inbounds i8, i8* %183, i64 %6
  %194 = bitcast i8* %193 to <32 x i8>*
  %195 = load <32 x i8>, <32 x i8>* %194, align 1
  %196 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %189, <32 x i8> %195) #3
  %197 = bitcast <4 x i64> %192 to <8 x i32>
  %198 = bitcast <4 x i64> %196 to <8 x i32>
  %199 = add <8 x i32> %182, %197
  %200 = add <8 x i32> %199, %198
  %201 = getelementptr inbounds i8, i8* %184, i64 %8
  %202 = getelementptr inbounds i8, i8* %183, i64 %10
  %203 = bitcast i8* %201 to <32 x i8>*
  %204 = load <32 x i8>, <32 x i8>* %203, align 1
  %205 = getelementptr inbounds i8, i8* %201, i64 %5
  %206 = bitcast i8* %205 to <32 x i8>*
  %207 = load <32 x i8>, <32 x i8>* %206, align 1
  %208 = bitcast i8* %202 to <32 x i8>*
  %209 = load <32 x i8>, <32 x i8>* %208, align 1
  %210 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %204, <32 x i8> %209) #3
  %211 = getelementptr inbounds i8, i8* %202, i64 %6
  %212 = bitcast i8* %211 to <32 x i8>*
  %213 = load <32 x i8>, <32 x i8>* %212, align 1
  %214 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %207, <32 x i8> %213) #3
  %215 = bitcast <4 x i64> %210 to <8 x i32>
  %216 = bitcast <4 x i64> %214 to <8 x i32>
  %217 = add <8 x i32> %200, %215
  %218 = add <8 x i32> %217, %216
  %219 = getelementptr inbounds i8, i8* %201, i64 %8
  %220 = getelementptr inbounds i8, i8* %202, i64 %10
  %221 = add nuw nsw i32 %181, 2
  %222 = icmp eq i32 %221, 16
  br i1 %222, label %223, label %180

223:                                              ; preds = %180
  %224 = extractelement <4 x i32> %170, i32 0
  %225 = bitcast <2 x i64> %177 to <4 x i32>
  %226 = shufflevector <4 x i64> %176, <4 x i64> undef, <2 x i32> <i32 2, i32 undef>
  %227 = bitcast <2 x i64> %226 to <4 x i32>
  %228 = add <4 x i32> %225, %227
  %229 = bitcast <8 x i32> %218 to <32 x i8>
  %230 = shufflevector <32 x i8> %229, <32 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <32 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55>
  %231 = bitcast <32 x i8> %230 to <8 x i32>
  %232 = add <8 x i32> %218, %231
  %233 = bitcast <8 x i32> %232 to <4 x i64>
  %234 = shufflevector <4 x i64> %233, <4 x i64> undef, <2 x i32> <i32 2, i32 undef>
  %235 = shufflevector <4 x i64> %233, <4 x i64> undef, <2 x i32> <i32 0, i32 undef>
  %236 = bitcast <2 x i64> %234 to <4 x i32>
  %237 = bitcast <2 x i64> %235 to <4 x i32>
  %238 = add <4 x i32> %237, %236
  %239 = shl i32 %1, 6
  %240 = sext i32 %239 to i64
  %241 = getelementptr inbounds i8, i8* %0, i64 %240
  %242 = shl i32 %3, 6
  %243 = sext i32 %242 to i64
  %244 = getelementptr inbounds i8, i8* %2, i64 %243
  br label %245

245:                                              ; preds = %245, %223
  %246 = phi i32 [ 0, %223 ], [ %286, %245 ]
  %247 = phi <8 x i32> [ zeroinitializer, %223 ], [ %283, %245 ]
  %248 = phi i8* [ %241, %223 ], [ %285, %245 ]
  %249 = phi i8* [ %244, %223 ], [ %284, %245 ]
  %250 = bitcast i8* %249 to <32 x i8>*
  %251 = load <32 x i8>, <32 x i8>* %250, align 1
  %252 = getelementptr inbounds i8, i8* %249, i64 %5
  %253 = bitcast i8* %252 to <32 x i8>*
  %254 = load <32 x i8>, <32 x i8>* %253, align 1
  %255 = bitcast i8* %248 to <32 x i8>*
  %256 = load <32 x i8>, <32 x i8>* %255, align 1
  %257 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %251, <32 x i8> %256) #3
  %258 = getelementptr inbounds i8, i8* %248, i64 %6
  %259 = bitcast i8* %258 to <32 x i8>*
  %260 = load <32 x i8>, <32 x i8>* %259, align 1
  %261 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %254, <32 x i8> %260) #3
  %262 = bitcast <4 x i64> %257 to <8 x i32>
  %263 = bitcast <4 x i64> %261 to <8 x i32>
  %264 = add <8 x i32> %247, %262
  %265 = add <8 x i32> %264, %263
  %266 = getelementptr inbounds i8, i8* %249, i64 %8
  %267 = getelementptr inbounds i8, i8* %248, i64 %10
  %268 = bitcast i8* %266 to <32 x i8>*
  %269 = load <32 x i8>, <32 x i8>* %268, align 1
  %270 = getelementptr inbounds i8, i8* %266, i64 %5
  %271 = bitcast i8* %270 to <32 x i8>*
  %272 = load <32 x i8>, <32 x i8>* %271, align 1
  %273 = bitcast i8* %267 to <32 x i8>*
  %274 = load <32 x i8>, <32 x i8>* %273, align 1
  %275 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %269, <32 x i8> %274) #3
  %276 = getelementptr inbounds i8, i8* %267, i64 %6
  %277 = bitcast i8* %276 to <32 x i8>*
  %278 = load <32 x i8>, <32 x i8>* %277, align 1
  %279 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %272, <32 x i8> %278) #3
  %280 = bitcast <4 x i64> %275 to <8 x i32>
  %281 = bitcast <4 x i64> %279 to <8 x i32>
  %282 = add <8 x i32> %265, %280
  %283 = add <8 x i32> %282, %281
  %284 = getelementptr inbounds i8, i8* %266, i64 %8
  %285 = getelementptr inbounds i8, i8* %267, i64 %10
  %286 = add nuw nsw i32 %246, 2
  %287 = icmp eq i32 %286, 16
  br i1 %287, label %288, label %245

288:                                              ; preds = %245
  %289 = extractelement <4 x i32> %228, i32 0
  %290 = extractelement <4 x i32> %238, i32 0
  %291 = bitcast <8 x i32> %283 to <32 x i8>
  %292 = shufflevector <32 x i8> %291, <32 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <32 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55>
  %293 = bitcast <32 x i8> %292 to <8 x i32>
  %294 = add <8 x i32> %283, %293
  %295 = bitcast <8 x i32> %294 to <4 x i64>
  %296 = shufflevector <4 x i64> %295, <4 x i64> undef, <2 x i32> <i32 0, i32 undef>
  %297 = getelementptr inbounds i8, i8* %241, i64 32
  %298 = getelementptr inbounds i8, i8* %244, i64 32
  br label %299

299:                                              ; preds = %299, %288
  %300 = phi i32 [ 0, %288 ], [ %340, %299 ]
  %301 = phi <8 x i32> [ zeroinitializer, %288 ], [ %337, %299 ]
  %302 = phi i8* [ %297, %288 ], [ %339, %299 ]
  %303 = phi i8* [ %298, %288 ], [ %338, %299 ]
  %304 = bitcast i8* %303 to <32 x i8>*
  %305 = load <32 x i8>, <32 x i8>* %304, align 1
  %306 = getelementptr inbounds i8, i8* %303, i64 %5
  %307 = bitcast i8* %306 to <32 x i8>*
  %308 = load <32 x i8>, <32 x i8>* %307, align 1
  %309 = bitcast i8* %302 to <32 x i8>*
  %310 = load <32 x i8>, <32 x i8>* %309, align 1
  %311 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %305, <32 x i8> %310) #3
  %312 = getelementptr inbounds i8, i8* %302, i64 %6
  %313 = bitcast i8* %312 to <32 x i8>*
  %314 = load <32 x i8>, <32 x i8>* %313, align 1
  %315 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %308, <32 x i8> %314) #3
  %316 = bitcast <4 x i64> %311 to <8 x i32>
  %317 = bitcast <4 x i64> %315 to <8 x i32>
  %318 = add <8 x i32> %301, %316
  %319 = add <8 x i32> %318, %317
  %320 = getelementptr inbounds i8, i8* %303, i64 %8
  %321 = getelementptr inbounds i8, i8* %302, i64 %10
  %322 = bitcast i8* %320 to <32 x i8>*
  %323 = load <32 x i8>, <32 x i8>* %322, align 1
  %324 = getelementptr inbounds i8, i8* %320, i64 %5
  %325 = bitcast i8* %324 to <32 x i8>*
  %326 = load <32 x i8>, <32 x i8>* %325, align 1
  %327 = bitcast i8* %321 to <32 x i8>*
  %328 = load <32 x i8>, <32 x i8>* %327, align 1
  %329 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %323, <32 x i8> %328) #3
  %330 = getelementptr inbounds i8, i8* %321, i64 %6
  %331 = bitcast i8* %330 to <32 x i8>*
  %332 = load <32 x i8>, <32 x i8>* %331, align 1
  %333 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %326, <32 x i8> %332) #3
  %334 = bitcast <4 x i64> %329 to <8 x i32>
  %335 = bitcast <4 x i64> %333 to <8 x i32>
  %336 = add <8 x i32> %319, %334
  %337 = add <8 x i32> %336, %335
  %338 = getelementptr inbounds i8, i8* %320, i64 %8
  %339 = getelementptr inbounds i8, i8* %321, i64 %10
  %340 = add nuw nsw i32 %300, 2
  %341 = icmp eq i32 %340, 16
  br i1 %341, label %342, label %299

342:                                              ; preds = %299
  %343 = bitcast <2 x i64> %296 to <4 x i32>
  %344 = shufflevector <4 x i64> %295, <4 x i64> undef, <2 x i32> <i32 2, i32 undef>
  %345 = bitcast <2 x i64> %344 to <4 x i32>
  %346 = bitcast <8 x i32> %337 to <32 x i8>
  %347 = shufflevector <32 x i8> %346, <32 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <32 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55>
  %348 = bitcast <32 x i8> %347 to <8 x i32>
  %349 = add <8 x i32> %337, %348
  %350 = bitcast <8 x i32> %349 to <4 x i64>
  %351 = shufflevector <4 x i64> %350, <4 x i64> undef, <2 x i32> <i32 0, i32 undef>
  %352 = bitcast <2 x i64> %351 to <4 x i32>
  %353 = getelementptr inbounds i8, i8* %241, i64 %118
  %354 = getelementptr inbounds i8, i8* %244, i64 %121
  br label %355

355:                                              ; preds = %355, %342
  %356 = phi i32 [ 0, %342 ], [ %396, %355 ]
  %357 = phi <8 x i32> [ zeroinitializer, %342 ], [ %393, %355 ]
  %358 = phi i8* [ %353, %342 ], [ %395, %355 ]
  %359 = phi i8* [ %354, %342 ], [ %394, %355 ]
  %360 = bitcast i8* %359 to <32 x i8>*
  %361 = load <32 x i8>, <32 x i8>* %360, align 1
  %362 = getelementptr inbounds i8, i8* %359, i64 %5
  %363 = bitcast i8* %362 to <32 x i8>*
  %364 = load <32 x i8>, <32 x i8>* %363, align 1
  %365 = bitcast i8* %358 to <32 x i8>*
  %366 = load <32 x i8>, <32 x i8>* %365, align 1
  %367 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %361, <32 x i8> %366) #3
  %368 = getelementptr inbounds i8, i8* %358, i64 %6
  %369 = bitcast i8* %368 to <32 x i8>*
  %370 = load <32 x i8>, <32 x i8>* %369, align 1
  %371 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %364, <32 x i8> %370) #3
  %372 = bitcast <4 x i64> %367 to <8 x i32>
  %373 = bitcast <4 x i64> %371 to <8 x i32>
  %374 = add <8 x i32> %357, %372
  %375 = add <8 x i32> %374, %373
  %376 = getelementptr inbounds i8, i8* %359, i64 %8
  %377 = getelementptr inbounds i8, i8* %358, i64 %10
  %378 = bitcast i8* %376 to <32 x i8>*
  %379 = load <32 x i8>, <32 x i8>* %378, align 1
  %380 = getelementptr inbounds i8, i8* %376, i64 %5
  %381 = bitcast i8* %380 to <32 x i8>*
  %382 = load <32 x i8>, <32 x i8>* %381, align 1
  %383 = bitcast i8* %377 to <32 x i8>*
  %384 = load <32 x i8>, <32 x i8>* %383, align 1
  %385 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %379, <32 x i8> %384) #3
  %386 = getelementptr inbounds i8, i8* %377, i64 %6
  %387 = bitcast i8* %386 to <32 x i8>*
  %388 = load <32 x i8>, <32 x i8>* %387, align 1
  %389 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %382, <32 x i8> %388) #3
  %390 = bitcast <4 x i64> %385 to <8 x i32>
  %391 = bitcast <4 x i64> %389 to <8 x i32>
  %392 = add <8 x i32> %375, %390
  %393 = add <8 x i32> %392, %391
  %394 = getelementptr inbounds i8, i8* %376, i64 %8
  %395 = getelementptr inbounds i8, i8* %377, i64 %10
  %396 = add nuw nsw i32 %356, 2
  %397 = icmp eq i32 %396, 16
  br i1 %397, label %398, label %355

398:                                              ; preds = %355
  %399 = add <4 x i32> %343, %345
  %400 = shufflevector <4 x i64> %350, <4 x i64> undef, <2 x i32> <i32 2, i32 undef>
  %401 = bitcast <2 x i64> %400 to <4 x i32>
  %402 = add <4 x i32> %352, %401
  %403 = extractelement <4 x i32> %399, i32 0
  %404 = bitcast <8 x i32> %393 to <32 x i8>
  %405 = shufflevector <32 x i8> %404, <32 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <32 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55>
  %406 = bitcast <32 x i8> %405 to <8 x i32>
  %407 = add <8 x i32> %393, %406
  %408 = bitcast <8 x i32> %407 to <4 x i64>
  %409 = shufflevector <4 x i64> %408, <4 x i64> undef, <2 x i32> <i32 0, i32 undef>
  %410 = getelementptr inbounds i8, i8* %353, i64 32
  %411 = getelementptr inbounds i8, i8* %354, i64 32
  br label %412

412:                                              ; preds = %412, %398
  %413 = phi i32 [ 0, %398 ], [ %453, %412 ]
  %414 = phi <8 x i32> [ zeroinitializer, %398 ], [ %450, %412 ]
  %415 = phi i8* [ %410, %398 ], [ %452, %412 ]
  %416 = phi i8* [ %411, %398 ], [ %451, %412 ]
  %417 = bitcast i8* %416 to <32 x i8>*
  %418 = load <32 x i8>, <32 x i8>* %417, align 1
  %419 = getelementptr inbounds i8, i8* %416, i64 %5
  %420 = bitcast i8* %419 to <32 x i8>*
  %421 = load <32 x i8>, <32 x i8>* %420, align 1
  %422 = bitcast i8* %415 to <32 x i8>*
  %423 = load <32 x i8>, <32 x i8>* %422, align 1
  %424 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %418, <32 x i8> %423) #3
  %425 = getelementptr inbounds i8, i8* %415, i64 %6
  %426 = bitcast i8* %425 to <32 x i8>*
  %427 = load <32 x i8>, <32 x i8>* %426, align 1
  %428 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %421, <32 x i8> %427) #3
  %429 = bitcast <4 x i64> %424 to <8 x i32>
  %430 = bitcast <4 x i64> %428 to <8 x i32>
  %431 = add <8 x i32> %414, %429
  %432 = add <8 x i32> %431, %430
  %433 = getelementptr inbounds i8, i8* %416, i64 %8
  %434 = getelementptr inbounds i8, i8* %415, i64 %10
  %435 = bitcast i8* %433 to <32 x i8>*
  %436 = load <32 x i8>, <32 x i8>* %435, align 1
  %437 = getelementptr inbounds i8, i8* %433, i64 %5
  %438 = bitcast i8* %437 to <32 x i8>*
  %439 = load <32 x i8>, <32 x i8>* %438, align 1
  %440 = bitcast i8* %434 to <32 x i8>*
  %441 = load <32 x i8>, <32 x i8>* %440, align 1
  %442 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %436, <32 x i8> %441) #3
  %443 = getelementptr inbounds i8, i8* %434, i64 %6
  %444 = bitcast i8* %443 to <32 x i8>*
  %445 = load <32 x i8>, <32 x i8>* %444, align 1
  %446 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %439, <32 x i8> %445) #3
  %447 = bitcast <4 x i64> %442 to <8 x i32>
  %448 = bitcast <4 x i64> %446 to <8 x i32>
  %449 = add <8 x i32> %432, %447
  %450 = add <8 x i32> %449, %448
  %451 = getelementptr inbounds i8, i8* %433, i64 %8
  %452 = getelementptr inbounds i8, i8* %434, i64 %10
  %453 = add nuw nsw i32 %413, 2
  %454 = icmp eq i32 %453, 16
  br i1 %454, label %455, label %412

455:                                              ; preds = %412
  %456 = extractelement <4 x i32> %402, i32 0
  %457 = bitcast <2 x i64> %409 to <4 x i32>
  %458 = shufflevector <4 x i64> %408, <4 x i64> undef, <2 x i32> <i32 2, i32 undef>
  %459 = bitcast <2 x i64> %458 to <4 x i32>
  %460 = add <4 x i32> %457, %459
  %461 = extractelement <4 x i32> %460, i32 0
  %462 = bitcast <8 x i32> %450 to <32 x i8>
  %463 = shufflevector <32 x i8> %462, <32 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <32 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55>
  %464 = bitcast <32 x i8> %463 to <8 x i32>
  %465 = add <8 x i32> %450, %464
  %466 = bitcast <8 x i32> %465 to <4 x i64>
  %467 = shufflevector <4 x i64> %466, <4 x i64> undef, <2 x i32> <i32 2, i32 undef>
  %468 = shufflevector <4 x i64> %466, <4 x i64> undef, <2 x i32> <i32 0, i32 undef>
  %469 = bitcast <2 x i64> %467 to <4 x i32>
  %470 = bitcast <2 x i64> %468 to <4 x i32>
  %471 = add <4 x i32> %470, %469
  %472 = extractelement <4 x i32> %471, i32 0
  %473 = add i32 %224, %171
  %474 = add i32 %473, %289
  %475 = add i32 %474, %290
  %476 = add i32 %475, %403
  %477 = add i32 %476, %456
  %478 = add i32 %477, %461
  %479 = add i32 %478, %472
  ret i32 %479
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @aom_sad128x128_avx2(i8* nocapture readonly, i32, i8* nocapture readonly, i32) local_unnamed_addr #1 {
  %5 = tail call i32 @aom_sad128x64_avx2(i8* %0, i32 %1, i8* %2, i32 %3)
  %6 = shl i32 %1, 6
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds i8, i8* %0, i64 %7
  %9 = shl i32 %3, 6
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds i8, i8* %2, i64 %10
  %12 = tail call i32 @aom_sad128x64_avx2(i8* %8, i32 %1, i8* %11, i32 %3)
  %13 = add i32 %12, %5
  ret i32 %13
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @aom_sad_skip_128x64_avx2(i8* nocapture readonly, i32, i8* nocapture readonly, i32) local_unnamed_addr #0 {
  %5 = shl nsw i32 %1, 1
  %6 = shl nsw i32 %3, 1
  %7 = sext i32 %6 to i64
  %8 = sext i32 %5 to i64
  %9 = shl i32 %3, 2
  %10 = sext i32 %9 to i64
  %11 = shl i32 %1, 2
  %12 = sext i32 %11 to i64
  br label %13

13:                                               ; preds = %13, %4
  %14 = phi i32 [ 0, %4 ], [ %54, %13 ]
  %15 = phi <8 x i32> [ zeroinitializer, %4 ], [ %51, %13 ]
  %16 = phi i8* [ %0, %4 ], [ %53, %13 ]
  %17 = phi i8* [ %2, %4 ], [ %52, %13 ]
  %18 = bitcast i8* %17 to <32 x i8>*
  %19 = load <32 x i8>, <32 x i8>* %18, align 1
  %20 = getelementptr inbounds i8, i8* %17, i64 %7
  %21 = bitcast i8* %20 to <32 x i8>*
  %22 = load <32 x i8>, <32 x i8>* %21, align 1
  %23 = bitcast i8* %16 to <32 x i8>*
  %24 = load <32 x i8>, <32 x i8>* %23, align 1
  %25 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %19, <32 x i8> %24) #3
  %26 = getelementptr inbounds i8, i8* %16, i64 %8
  %27 = bitcast i8* %26 to <32 x i8>*
  %28 = load <32 x i8>, <32 x i8>* %27, align 1
  %29 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %22, <32 x i8> %28) #3
  %30 = bitcast <4 x i64> %25 to <8 x i32>
  %31 = bitcast <4 x i64> %29 to <8 x i32>
  %32 = add <8 x i32> %15, %30
  %33 = add <8 x i32> %32, %31
  %34 = getelementptr inbounds i8, i8* %17, i64 %10
  %35 = getelementptr inbounds i8, i8* %16, i64 %12
  %36 = bitcast i8* %34 to <32 x i8>*
  %37 = load <32 x i8>, <32 x i8>* %36, align 1
  %38 = getelementptr inbounds i8, i8* %34, i64 %7
  %39 = bitcast i8* %38 to <32 x i8>*
  %40 = load <32 x i8>, <32 x i8>* %39, align 1
  %41 = bitcast i8* %35 to <32 x i8>*
  %42 = load <32 x i8>, <32 x i8>* %41, align 1
  %43 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %37, <32 x i8> %42) #3
  %44 = getelementptr inbounds i8, i8* %35, i64 %8
  %45 = bitcast i8* %44 to <32 x i8>*
  %46 = load <32 x i8>, <32 x i8>* %45, align 1
  %47 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %40, <32 x i8> %46) #3
  %48 = bitcast <4 x i64> %43 to <8 x i32>
  %49 = bitcast <4 x i64> %47 to <8 x i32>
  %50 = add <8 x i32> %33, %48
  %51 = add <8 x i32> %50, %49
  %52 = getelementptr inbounds i8, i8* %34, i64 %10
  %53 = getelementptr inbounds i8, i8* %35, i64 %12
  %54 = add nuw nsw i32 %14, 2
  %55 = icmp eq i32 %54, 16
  br i1 %55, label %56, label %13

56:                                               ; preds = %13
  %57 = bitcast <8 x i32> %51 to <32 x i8>
  %58 = shufflevector <32 x i8> %57, <32 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <32 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55>
  %59 = bitcast <32 x i8> %58 to <8 x i32>
  %60 = add <8 x i32> %51, %59
  %61 = bitcast <8 x i32> %60 to <4 x i64>
  %62 = shufflevector <4 x i64> %61, <4 x i64> undef, <2 x i32> <i32 0, i32 undef>
  %63 = bitcast <2 x i64> %62 to <4 x i32>
  %64 = getelementptr inbounds i8, i8* %0, i64 32
  %65 = getelementptr inbounds i8, i8* %2, i64 32
  br label %66

66:                                               ; preds = %66, %56
  %67 = phi i32 [ 0, %56 ], [ %107, %66 ]
  %68 = phi <8 x i32> [ zeroinitializer, %56 ], [ %104, %66 ]
  %69 = phi i8* [ %64, %56 ], [ %106, %66 ]
  %70 = phi i8* [ %65, %56 ], [ %105, %66 ]
  %71 = bitcast i8* %70 to <32 x i8>*
  %72 = load <32 x i8>, <32 x i8>* %71, align 1
  %73 = getelementptr inbounds i8, i8* %70, i64 %7
  %74 = bitcast i8* %73 to <32 x i8>*
  %75 = load <32 x i8>, <32 x i8>* %74, align 1
  %76 = bitcast i8* %69 to <32 x i8>*
  %77 = load <32 x i8>, <32 x i8>* %76, align 1
  %78 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %72, <32 x i8> %77) #3
  %79 = getelementptr inbounds i8, i8* %69, i64 %8
  %80 = bitcast i8* %79 to <32 x i8>*
  %81 = load <32 x i8>, <32 x i8>* %80, align 1
  %82 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %75, <32 x i8> %81) #3
  %83 = bitcast <4 x i64> %78 to <8 x i32>
  %84 = bitcast <4 x i64> %82 to <8 x i32>
  %85 = add <8 x i32> %68, %83
  %86 = add <8 x i32> %85, %84
  %87 = getelementptr inbounds i8, i8* %70, i64 %10
  %88 = getelementptr inbounds i8, i8* %69, i64 %12
  %89 = bitcast i8* %87 to <32 x i8>*
  %90 = load <32 x i8>, <32 x i8>* %89, align 1
  %91 = getelementptr inbounds i8, i8* %87, i64 %7
  %92 = bitcast i8* %91 to <32 x i8>*
  %93 = load <32 x i8>, <32 x i8>* %92, align 1
  %94 = bitcast i8* %88 to <32 x i8>*
  %95 = load <32 x i8>, <32 x i8>* %94, align 1
  %96 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %90, <32 x i8> %95) #3
  %97 = getelementptr inbounds i8, i8* %88, i64 %8
  %98 = bitcast i8* %97 to <32 x i8>*
  %99 = load <32 x i8>, <32 x i8>* %98, align 1
  %100 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %93, <32 x i8> %99) #3
  %101 = bitcast <4 x i64> %96 to <8 x i32>
  %102 = bitcast <4 x i64> %100 to <8 x i32>
  %103 = add <8 x i32> %86, %101
  %104 = add <8 x i32> %103, %102
  %105 = getelementptr inbounds i8, i8* %87, i64 %10
  %106 = getelementptr inbounds i8, i8* %88, i64 %12
  %107 = add nuw nsw i32 %67, 2
  %108 = icmp eq i32 %107, 16
  br i1 %108, label %109, label %66

109:                                              ; preds = %66
  %110 = shufflevector <4 x i64> %61, <4 x i64> undef, <2 x i32> <i32 2, i32 undef>
  %111 = bitcast <2 x i64> %110 to <4 x i32>
  %112 = add <4 x i32> %63, %111
  %113 = bitcast <8 x i32> %104 to <32 x i8>
  %114 = shufflevector <32 x i8> %113, <32 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <32 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55>
  %115 = bitcast <32 x i8> %114 to <8 x i32>
  %116 = add <8 x i32> %104, %115
  %117 = bitcast <8 x i32> %116 to <4 x i64>
  %118 = shufflevector <4 x i64> %117, <4 x i64> undef, <2 x i32> <i32 2, i32 undef>
  %119 = shufflevector <4 x i64> %117, <4 x i64> undef, <2 x i32> <i32 0, i32 undef>
  %120 = bitcast <2 x i64> %118 to <4 x i32>
  %121 = bitcast <2 x i64> %119 to <4 x i32>
  %122 = add <4 x i32> %121, %120
  %123 = getelementptr inbounds i8, i8* %0, i64 64
  %124 = getelementptr inbounds i8, i8* %2, i64 64
  br label %125

125:                                              ; preds = %125, %109
  %126 = phi i32 [ 0, %109 ], [ %166, %125 ]
  %127 = phi <8 x i32> [ zeroinitializer, %109 ], [ %163, %125 ]
  %128 = phi i8* [ %123, %109 ], [ %165, %125 ]
  %129 = phi i8* [ %124, %109 ], [ %164, %125 ]
  %130 = bitcast i8* %129 to <32 x i8>*
  %131 = load <32 x i8>, <32 x i8>* %130, align 1
  %132 = getelementptr inbounds i8, i8* %129, i64 %7
  %133 = bitcast i8* %132 to <32 x i8>*
  %134 = load <32 x i8>, <32 x i8>* %133, align 1
  %135 = bitcast i8* %128 to <32 x i8>*
  %136 = load <32 x i8>, <32 x i8>* %135, align 1
  %137 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %131, <32 x i8> %136) #3
  %138 = getelementptr inbounds i8, i8* %128, i64 %8
  %139 = bitcast i8* %138 to <32 x i8>*
  %140 = load <32 x i8>, <32 x i8>* %139, align 1
  %141 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %134, <32 x i8> %140) #3
  %142 = bitcast <4 x i64> %137 to <8 x i32>
  %143 = bitcast <4 x i64> %141 to <8 x i32>
  %144 = add <8 x i32> %127, %142
  %145 = add <8 x i32> %144, %143
  %146 = getelementptr inbounds i8, i8* %129, i64 %10
  %147 = getelementptr inbounds i8, i8* %128, i64 %12
  %148 = bitcast i8* %146 to <32 x i8>*
  %149 = load <32 x i8>, <32 x i8>* %148, align 1
  %150 = getelementptr inbounds i8, i8* %146, i64 %7
  %151 = bitcast i8* %150 to <32 x i8>*
  %152 = load <32 x i8>, <32 x i8>* %151, align 1
  %153 = bitcast i8* %147 to <32 x i8>*
  %154 = load <32 x i8>, <32 x i8>* %153, align 1
  %155 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %149, <32 x i8> %154) #3
  %156 = getelementptr inbounds i8, i8* %147, i64 %8
  %157 = bitcast i8* %156 to <32 x i8>*
  %158 = load <32 x i8>, <32 x i8>* %157, align 1
  %159 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %152, <32 x i8> %158) #3
  %160 = bitcast <4 x i64> %155 to <8 x i32>
  %161 = bitcast <4 x i64> %159 to <8 x i32>
  %162 = add <8 x i32> %145, %160
  %163 = add <8 x i32> %162, %161
  %164 = getelementptr inbounds i8, i8* %146, i64 %10
  %165 = getelementptr inbounds i8, i8* %147, i64 %12
  %166 = add nuw nsw i32 %126, 2
  %167 = icmp eq i32 %166, 16
  br i1 %167, label %168, label %125

168:                                              ; preds = %125
  %169 = extractelement <4 x i32> %112, i32 0
  %170 = extractelement <4 x i32> %122, i32 0
  %171 = bitcast <8 x i32> %163 to <32 x i8>
  %172 = shufflevector <32 x i8> %171, <32 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <32 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55>
  %173 = bitcast <32 x i8> %172 to <8 x i32>
  %174 = add <8 x i32> %163, %173
  %175 = bitcast <8 x i32> %174 to <4 x i64>
  %176 = shufflevector <4 x i64> %175, <4 x i64> undef, <2 x i32> <i32 0, i32 undef>
  %177 = bitcast <2 x i64> %176 to <4 x i32>
  %178 = getelementptr inbounds i8, i8* %0, i64 96
  %179 = getelementptr inbounds i8, i8* %2, i64 96
  br label %180

180:                                              ; preds = %180, %168
  %181 = phi i32 [ 0, %168 ], [ %221, %180 ]
  %182 = phi <8 x i32> [ zeroinitializer, %168 ], [ %218, %180 ]
  %183 = phi i8* [ %178, %168 ], [ %220, %180 ]
  %184 = phi i8* [ %179, %168 ], [ %219, %180 ]
  %185 = bitcast i8* %184 to <32 x i8>*
  %186 = load <32 x i8>, <32 x i8>* %185, align 1
  %187 = getelementptr inbounds i8, i8* %184, i64 %7
  %188 = bitcast i8* %187 to <32 x i8>*
  %189 = load <32 x i8>, <32 x i8>* %188, align 1
  %190 = bitcast i8* %183 to <32 x i8>*
  %191 = load <32 x i8>, <32 x i8>* %190, align 1
  %192 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %186, <32 x i8> %191) #3
  %193 = getelementptr inbounds i8, i8* %183, i64 %8
  %194 = bitcast i8* %193 to <32 x i8>*
  %195 = load <32 x i8>, <32 x i8>* %194, align 1
  %196 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %189, <32 x i8> %195) #3
  %197 = bitcast <4 x i64> %192 to <8 x i32>
  %198 = bitcast <4 x i64> %196 to <8 x i32>
  %199 = add <8 x i32> %182, %197
  %200 = add <8 x i32> %199, %198
  %201 = getelementptr inbounds i8, i8* %184, i64 %10
  %202 = getelementptr inbounds i8, i8* %183, i64 %12
  %203 = bitcast i8* %201 to <32 x i8>*
  %204 = load <32 x i8>, <32 x i8>* %203, align 1
  %205 = getelementptr inbounds i8, i8* %201, i64 %7
  %206 = bitcast i8* %205 to <32 x i8>*
  %207 = load <32 x i8>, <32 x i8>* %206, align 1
  %208 = bitcast i8* %202 to <32 x i8>*
  %209 = load <32 x i8>, <32 x i8>* %208, align 1
  %210 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %204, <32 x i8> %209) #3
  %211 = getelementptr inbounds i8, i8* %202, i64 %8
  %212 = bitcast i8* %211 to <32 x i8>*
  %213 = load <32 x i8>, <32 x i8>* %212, align 1
  %214 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %207, <32 x i8> %213) #3
  %215 = bitcast <4 x i64> %210 to <8 x i32>
  %216 = bitcast <4 x i64> %214 to <8 x i32>
  %217 = add <8 x i32> %200, %215
  %218 = add <8 x i32> %217, %216
  %219 = getelementptr inbounds i8, i8* %201, i64 %10
  %220 = getelementptr inbounds i8, i8* %202, i64 %12
  %221 = add nuw nsw i32 %181, 2
  %222 = icmp eq i32 %221, 16
  br i1 %222, label %223, label %180

223:                                              ; preds = %180
  %224 = shufflevector <4 x i64> %175, <4 x i64> undef, <2 x i32> <i32 2, i32 undef>
  %225 = bitcast <2 x i64> %224 to <4 x i32>
  %226 = add <4 x i32> %177, %225
  %227 = extractelement <4 x i32> %226, i32 0
  %228 = bitcast <8 x i32> %218 to <32 x i8>
  %229 = shufflevector <32 x i8> %228, <32 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <32 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55>
  %230 = bitcast <32 x i8> %229 to <8 x i32>
  %231 = add <8 x i32> %218, %230
  %232 = bitcast <8 x i32> %231 to <4 x i64>
  %233 = shufflevector <4 x i64> %232, <4 x i64> undef, <2 x i32> <i32 2, i32 undef>
  %234 = shufflevector <4 x i64> %232, <4 x i64> undef, <2 x i32> <i32 0, i32 undef>
  %235 = bitcast <2 x i64> %233 to <4 x i32>
  %236 = bitcast <2 x i64> %234 to <4 x i32>
  %237 = add <4 x i32> %236, %235
  %238 = extractelement <4 x i32> %237, i32 0
  %239 = add i32 %170, %169
  %240 = add i32 %239, %227
  %241 = add i32 %240, %238
  %242 = shl i32 %241, 1
  ret i32 %242
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @aom_sad_skip_64x128_avx2(i8* nocapture readonly, i32, i8* nocapture readonly, i32) local_unnamed_addr #0 {
  %5 = shl nsw i32 %1, 1
  %6 = shl nsw i32 %3, 1
  %7 = sext i32 %6 to i64
  %8 = sext i32 %5 to i64
  %9 = shl i32 %3, 2
  %10 = sext i32 %9 to i64
  %11 = shl i32 %1, 2
  %12 = sext i32 %11 to i64
  br label %13

13:                                               ; preds = %13, %4
  %14 = phi i32 [ 0, %4 ], [ %54, %13 ]
  %15 = phi <8 x i32> [ zeroinitializer, %4 ], [ %51, %13 ]
  %16 = phi i8* [ %0, %4 ], [ %53, %13 ]
  %17 = phi i8* [ %2, %4 ], [ %52, %13 ]
  %18 = bitcast i8* %17 to <32 x i8>*
  %19 = load <32 x i8>, <32 x i8>* %18, align 1
  %20 = getelementptr inbounds i8, i8* %17, i64 %7
  %21 = bitcast i8* %20 to <32 x i8>*
  %22 = load <32 x i8>, <32 x i8>* %21, align 1
  %23 = bitcast i8* %16 to <32 x i8>*
  %24 = load <32 x i8>, <32 x i8>* %23, align 1
  %25 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %19, <32 x i8> %24) #3
  %26 = getelementptr inbounds i8, i8* %16, i64 %8
  %27 = bitcast i8* %26 to <32 x i8>*
  %28 = load <32 x i8>, <32 x i8>* %27, align 1
  %29 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %22, <32 x i8> %28) #3
  %30 = bitcast <4 x i64> %25 to <8 x i32>
  %31 = bitcast <4 x i64> %29 to <8 x i32>
  %32 = add <8 x i32> %15, %30
  %33 = add <8 x i32> %32, %31
  %34 = getelementptr inbounds i8, i8* %17, i64 %10
  %35 = getelementptr inbounds i8, i8* %16, i64 %12
  %36 = bitcast i8* %34 to <32 x i8>*
  %37 = load <32 x i8>, <32 x i8>* %36, align 1
  %38 = getelementptr inbounds i8, i8* %34, i64 %7
  %39 = bitcast i8* %38 to <32 x i8>*
  %40 = load <32 x i8>, <32 x i8>* %39, align 1
  %41 = bitcast i8* %35 to <32 x i8>*
  %42 = load <32 x i8>, <32 x i8>* %41, align 1
  %43 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %37, <32 x i8> %42) #3
  %44 = getelementptr inbounds i8, i8* %35, i64 %8
  %45 = bitcast i8* %44 to <32 x i8>*
  %46 = load <32 x i8>, <32 x i8>* %45, align 1
  %47 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %40, <32 x i8> %46) #3
  %48 = bitcast <4 x i64> %43 to <8 x i32>
  %49 = bitcast <4 x i64> %47 to <8 x i32>
  %50 = add <8 x i32> %33, %48
  %51 = add <8 x i32> %50, %49
  %52 = getelementptr inbounds i8, i8* %34, i64 %10
  %53 = getelementptr inbounds i8, i8* %35, i64 %12
  %54 = add nuw nsw i32 %14, 2
  %55 = icmp eq i32 %54, 16
  br i1 %55, label %56, label %13

56:                                               ; preds = %13
  %57 = bitcast <8 x i32> %51 to <32 x i8>
  %58 = shufflevector <32 x i8> %57, <32 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <32 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55>
  %59 = bitcast <32 x i8> %58 to <8 x i32>
  %60 = add <8 x i32> %51, %59
  %61 = bitcast <8 x i32> %60 to <4 x i64>
  %62 = shufflevector <4 x i64> %61, <4 x i64> undef, <2 x i32> <i32 0, i32 undef>
  %63 = getelementptr inbounds i8, i8* %0, i64 32
  %64 = getelementptr inbounds i8, i8* %2, i64 32
  br label %65

65:                                               ; preds = %65, %56
  %66 = phi i32 [ 0, %56 ], [ %106, %65 ]
  %67 = phi <8 x i32> [ zeroinitializer, %56 ], [ %103, %65 ]
  %68 = phi i8* [ %63, %56 ], [ %105, %65 ]
  %69 = phi i8* [ %64, %56 ], [ %104, %65 ]
  %70 = bitcast i8* %69 to <32 x i8>*
  %71 = load <32 x i8>, <32 x i8>* %70, align 1
  %72 = getelementptr inbounds i8, i8* %69, i64 %7
  %73 = bitcast i8* %72 to <32 x i8>*
  %74 = load <32 x i8>, <32 x i8>* %73, align 1
  %75 = bitcast i8* %68 to <32 x i8>*
  %76 = load <32 x i8>, <32 x i8>* %75, align 1
  %77 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %71, <32 x i8> %76) #3
  %78 = getelementptr inbounds i8, i8* %68, i64 %8
  %79 = bitcast i8* %78 to <32 x i8>*
  %80 = load <32 x i8>, <32 x i8>* %79, align 1
  %81 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %74, <32 x i8> %80) #3
  %82 = bitcast <4 x i64> %77 to <8 x i32>
  %83 = bitcast <4 x i64> %81 to <8 x i32>
  %84 = add <8 x i32> %67, %82
  %85 = add <8 x i32> %84, %83
  %86 = getelementptr inbounds i8, i8* %69, i64 %10
  %87 = getelementptr inbounds i8, i8* %68, i64 %12
  %88 = bitcast i8* %86 to <32 x i8>*
  %89 = load <32 x i8>, <32 x i8>* %88, align 1
  %90 = getelementptr inbounds i8, i8* %86, i64 %7
  %91 = bitcast i8* %90 to <32 x i8>*
  %92 = load <32 x i8>, <32 x i8>* %91, align 1
  %93 = bitcast i8* %87 to <32 x i8>*
  %94 = load <32 x i8>, <32 x i8>* %93, align 1
  %95 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %89, <32 x i8> %94) #3
  %96 = getelementptr inbounds i8, i8* %87, i64 %8
  %97 = bitcast i8* %96 to <32 x i8>*
  %98 = load <32 x i8>, <32 x i8>* %97, align 1
  %99 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %92, <32 x i8> %98) #3
  %100 = bitcast <4 x i64> %95 to <8 x i32>
  %101 = bitcast <4 x i64> %99 to <8 x i32>
  %102 = add <8 x i32> %85, %100
  %103 = add <8 x i32> %102, %101
  %104 = getelementptr inbounds i8, i8* %86, i64 %10
  %105 = getelementptr inbounds i8, i8* %87, i64 %12
  %106 = add nuw nsw i32 %66, 2
  %107 = icmp eq i32 %106, 16
  br i1 %107, label %108, label %65

108:                                              ; preds = %65
  %109 = bitcast <2 x i64> %62 to <4 x i32>
  %110 = shufflevector <4 x i64> %61, <4 x i64> undef, <2 x i32> <i32 2, i32 undef>
  %111 = bitcast <2 x i64> %110 to <4 x i32>
  %112 = bitcast <8 x i32> %103 to <32 x i8>
  %113 = shufflevector <32 x i8> %112, <32 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <32 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55>
  %114 = bitcast <32 x i8> %113 to <8 x i32>
  %115 = add <8 x i32> %103, %114
  %116 = bitcast <8 x i32> %115 to <4 x i64>
  %117 = shufflevector <4 x i64> %116, <4 x i64> undef, <2 x i32> <i32 0, i32 undef>
  %118 = bitcast <2 x i64> %117 to <4 x i32>
  %119 = shl i32 %1, 6
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds i8, i8* %0, i64 %120
  %122 = shl i32 %3, 6
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds i8, i8* %2, i64 %123
  br label %125

125:                                              ; preds = %125, %108
  %126 = phi i32 [ 0, %108 ], [ %166, %125 ]
  %127 = phi <8 x i32> [ zeroinitializer, %108 ], [ %163, %125 ]
  %128 = phi i8* [ %121, %108 ], [ %165, %125 ]
  %129 = phi i8* [ %124, %108 ], [ %164, %125 ]
  %130 = bitcast i8* %129 to <32 x i8>*
  %131 = load <32 x i8>, <32 x i8>* %130, align 1
  %132 = getelementptr inbounds i8, i8* %129, i64 %7
  %133 = bitcast i8* %132 to <32 x i8>*
  %134 = load <32 x i8>, <32 x i8>* %133, align 1
  %135 = bitcast i8* %128 to <32 x i8>*
  %136 = load <32 x i8>, <32 x i8>* %135, align 1
  %137 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %131, <32 x i8> %136) #3
  %138 = getelementptr inbounds i8, i8* %128, i64 %8
  %139 = bitcast i8* %138 to <32 x i8>*
  %140 = load <32 x i8>, <32 x i8>* %139, align 1
  %141 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %134, <32 x i8> %140) #3
  %142 = bitcast <4 x i64> %137 to <8 x i32>
  %143 = bitcast <4 x i64> %141 to <8 x i32>
  %144 = add <8 x i32> %127, %142
  %145 = add <8 x i32> %144, %143
  %146 = getelementptr inbounds i8, i8* %129, i64 %10
  %147 = getelementptr inbounds i8, i8* %128, i64 %12
  %148 = bitcast i8* %146 to <32 x i8>*
  %149 = load <32 x i8>, <32 x i8>* %148, align 1
  %150 = getelementptr inbounds i8, i8* %146, i64 %7
  %151 = bitcast i8* %150 to <32 x i8>*
  %152 = load <32 x i8>, <32 x i8>* %151, align 1
  %153 = bitcast i8* %147 to <32 x i8>*
  %154 = load <32 x i8>, <32 x i8>* %153, align 1
  %155 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %149, <32 x i8> %154) #3
  %156 = getelementptr inbounds i8, i8* %147, i64 %8
  %157 = bitcast i8* %156 to <32 x i8>*
  %158 = load <32 x i8>, <32 x i8>* %157, align 1
  %159 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %152, <32 x i8> %158) #3
  %160 = bitcast <4 x i64> %155 to <8 x i32>
  %161 = bitcast <4 x i64> %159 to <8 x i32>
  %162 = add <8 x i32> %145, %160
  %163 = add <8 x i32> %162, %161
  %164 = getelementptr inbounds i8, i8* %146, i64 %10
  %165 = getelementptr inbounds i8, i8* %147, i64 %12
  %166 = add nuw nsw i32 %126, 2
  %167 = icmp eq i32 %166, 16
  br i1 %167, label %168, label %125

168:                                              ; preds = %125
  %169 = add <4 x i32> %109, %111
  %170 = shufflevector <4 x i64> %116, <4 x i64> undef, <2 x i32> <i32 2, i32 undef>
  %171 = bitcast <2 x i64> %170 to <4 x i32>
  %172 = add <4 x i32> %118, %171
  %173 = extractelement <4 x i32> %169, i32 0
  %174 = bitcast <8 x i32> %163 to <32 x i8>
  %175 = shufflevector <32 x i8> %174, <32 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <32 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55>
  %176 = bitcast <32 x i8> %175 to <8 x i32>
  %177 = add <8 x i32> %163, %176
  %178 = bitcast <8 x i32> %177 to <4 x i64>
  %179 = shufflevector <4 x i64> %178, <4 x i64> undef, <2 x i32> <i32 0, i32 undef>
  %180 = getelementptr inbounds i8, i8* %121, i64 32
  %181 = getelementptr inbounds i8, i8* %124, i64 32
  br label %182

182:                                              ; preds = %182, %168
  %183 = phi i32 [ 0, %168 ], [ %223, %182 ]
  %184 = phi <8 x i32> [ zeroinitializer, %168 ], [ %220, %182 ]
  %185 = phi i8* [ %180, %168 ], [ %222, %182 ]
  %186 = phi i8* [ %181, %168 ], [ %221, %182 ]
  %187 = bitcast i8* %186 to <32 x i8>*
  %188 = load <32 x i8>, <32 x i8>* %187, align 1
  %189 = getelementptr inbounds i8, i8* %186, i64 %7
  %190 = bitcast i8* %189 to <32 x i8>*
  %191 = load <32 x i8>, <32 x i8>* %190, align 1
  %192 = bitcast i8* %185 to <32 x i8>*
  %193 = load <32 x i8>, <32 x i8>* %192, align 1
  %194 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %188, <32 x i8> %193) #3
  %195 = getelementptr inbounds i8, i8* %185, i64 %8
  %196 = bitcast i8* %195 to <32 x i8>*
  %197 = load <32 x i8>, <32 x i8>* %196, align 1
  %198 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %191, <32 x i8> %197) #3
  %199 = bitcast <4 x i64> %194 to <8 x i32>
  %200 = bitcast <4 x i64> %198 to <8 x i32>
  %201 = add <8 x i32> %184, %199
  %202 = add <8 x i32> %201, %200
  %203 = getelementptr inbounds i8, i8* %186, i64 %10
  %204 = getelementptr inbounds i8, i8* %185, i64 %12
  %205 = bitcast i8* %203 to <32 x i8>*
  %206 = load <32 x i8>, <32 x i8>* %205, align 1
  %207 = getelementptr inbounds i8, i8* %203, i64 %7
  %208 = bitcast i8* %207 to <32 x i8>*
  %209 = load <32 x i8>, <32 x i8>* %208, align 1
  %210 = bitcast i8* %204 to <32 x i8>*
  %211 = load <32 x i8>, <32 x i8>* %210, align 1
  %212 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %206, <32 x i8> %211) #3
  %213 = getelementptr inbounds i8, i8* %204, i64 %8
  %214 = bitcast i8* %213 to <32 x i8>*
  %215 = load <32 x i8>, <32 x i8>* %214, align 1
  %216 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %209, <32 x i8> %215) #3
  %217 = bitcast <4 x i64> %212 to <8 x i32>
  %218 = bitcast <4 x i64> %216 to <8 x i32>
  %219 = add <8 x i32> %202, %217
  %220 = add <8 x i32> %219, %218
  %221 = getelementptr inbounds i8, i8* %203, i64 %10
  %222 = getelementptr inbounds i8, i8* %204, i64 %12
  %223 = add nuw nsw i32 %183, 2
  %224 = icmp eq i32 %223, 16
  br i1 %224, label %225, label %182

225:                                              ; preds = %182
  %226 = extractelement <4 x i32> %172, i32 0
  %227 = bitcast <2 x i64> %179 to <4 x i32>
  %228 = shufflevector <4 x i64> %178, <4 x i64> undef, <2 x i32> <i32 2, i32 undef>
  %229 = bitcast <2 x i64> %228 to <4 x i32>
  %230 = add <4 x i32> %227, %229
  %231 = extractelement <4 x i32> %230, i32 0
  %232 = bitcast <8 x i32> %220 to <32 x i8>
  %233 = shufflevector <32 x i8> %232, <32 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <32 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55>
  %234 = bitcast <32 x i8> %233 to <8 x i32>
  %235 = add <8 x i32> %220, %234
  %236 = bitcast <8 x i32> %235 to <4 x i64>
  %237 = shufflevector <4 x i64> %236, <4 x i64> undef, <2 x i32> <i32 2, i32 undef>
  %238 = shufflevector <4 x i64> %236, <4 x i64> undef, <2 x i32> <i32 0, i32 undef>
  %239 = bitcast <2 x i64> %237 to <4 x i32>
  %240 = bitcast <2 x i64> %238 to <4 x i32>
  %241 = add <4 x i32> %240, %239
  %242 = extractelement <4 x i32> %241, i32 0
  %243 = add i32 %226, %173
  %244 = add i32 %243, %231
  %245 = add i32 %244, %242
  %246 = shl i32 %245, 1
  ret i32 %246
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @aom_sad_skip_128x128_avx2(i8* nocapture readonly, i32, i8* nocapture readonly, i32) local_unnamed_addr #1 {
  %5 = shl nsw i32 %1, 1
  %6 = shl nsw i32 %3, 1
  %7 = tail call i32 @aom_sad128x64_avx2(i8* %0, i32 %5, i8* %2, i32 %6)
  %8 = shl i32 %7, 1
  ret i32 %8
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @aom_sad64x128_avg_avx2(i8* nocapture readonly, i32, i8* nocapture readonly, i32, i8* nocapture readonly) local_unnamed_addr #0 {
  %6 = sext i32 %3 to i64
  %7 = sext i32 %1 to i64
  br label %8

8:                                                ; preds = %8, %5
  %9 = phi <8 x i32> [ zeroinitializer, %5 ], [ %36, %8 ]
  %10 = phi i32 [ 0, %5 ], [ %40, %8 ]
  %11 = phi i8* [ %0, %5 ], [ %38, %8 ]
  %12 = phi i8* [ %4, %5 ], [ %39, %8 ]
  %13 = phi i8* [ %2, %5 ], [ %37, %8 ]
  %14 = bitcast i8* %13 to <32 x i8>*
  %15 = load <32 x i8>, <32 x i8>* %14, align 1
  %16 = getelementptr inbounds i8, i8* %13, i64 32
  %17 = bitcast i8* %16 to <32 x i8>*
  %18 = load <32 x i8>, <32 x i8>* %17, align 1
  %19 = bitcast i8* %12 to <32 x i8>*
  %20 = load <32 x i8>, <32 x i8>* %19, align 1
  %21 = tail call <32 x i8> @llvm.x86.avx2.pavg.b(<32 x i8> %15, <32 x i8> %20) #3
  %22 = getelementptr inbounds i8, i8* %12, i64 32
  %23 = bitcast i8* %22 to <32 x i8>*
  %24 = load <32 x i8>, <32 x i8>* %23, align 1
  %25 = tail call <32 x i8> @llvm.x86.avx2.pavg.b(<32 x i8> %18, <32 x i8> %24) #3
  %26 = bitcast i8* %11 to <32 x i8>*
  %27 = load <32 x i8>, <32 x i8>* %26, align 1
  %28 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %21, <32 x i8> %27) #3
  %29 = getelementptr inbounds i8, i8* %11, i64 32
  %30 = bitcast i8* %29 to <32 x i8>*
  %31 = load <32 x i8>, <32 x i8>* %30, align 1
  %32 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %25, <32 x i8> %31) #3
  %33 = bitcast <4 x i64> %28 to <8 x i32>
  %34 = bitcast <4 x i64> %32 to <8 x i32>
  %35 = add <8 x i32> %9, %33
  %36 = add <8 x i32> %35, %34
  %37 = getelementptr inbounds i8, i8* %13, i64 %6
  %38 = getelementptr inbounds i8, i8* %11, i64 %7
  %39 = getelementptr inbounds i8, i8* %12, i64 64
  %40 = add nuw nsw i32 %10, 1
  %41 = icmp eq i32 %40, 64
  br i1 %41, label %42, label %8

42:                                               ; preds = %8
  %43 = bitcast <8 x i32> %36 to <32 x i8>
  %44 = shufflevector <32 x i8> %43, <32 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <32 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55>
  %45 = bitcast <32 x i8> %44 to <8 x i32>
  %46 = add <8 x i32> %36, %45
  %47 = bitcast <8 x i32> %46 to <4 x i64>
  %48 = shufflevector <4 x i64> %47, <4 x i64> undef, <2 x i32> <i32 2, i32 undef>
  %49 = shufflevector <4 x i64> %47, <4 x i64> undef, <2 x i32> <i32 0, i32 undef>
  %50 = bitcast <2 x i64> %49 to <4 x i32>
  %51 = bitcast <2 x i64> %48 to <4 x i32>
  %52 = add <4 x i32> %51, %50
  %53 = shl i32 %1, 6
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i8, i8* %0, i64 %54
  %56 = shl i32 %3, 6
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i8, i8* %2, i64 %57
  %59 = getelementptr inbounds i8, i8* %4, i64 4096
  br label %60

60:                                               ; preds = %60, %42
  %61 = phi <8 x i32> [ zeroinitializer, %42 ], [ %88, %60 ]
  %62 = phi i32 [ 0, %42 ], [ %92, %60 ]
  %63 = phi i8* [ %55, %42 ], [ %90, %60 ]
  %64 = phi i8* [ %59, %42 ], [ %91, %60 ]
  %65 = phi i8* [ %58, %42 ], [ %89, %60 ]
  %66 = bitcast i8* %65 to <32 x i8>*
  %67 = load <32 x i8>, <32 x i8>* %66, align 1
  %68 = getelementptr inbounds i8, i8* %65, i64 32
  %69 = bitcast i8* %68 to <32 x i8>*
  %70 = load <32 x i8>, <32 x i8>* %69, align 1
  %71 = bitcast i8* %64 to <32 x i8>*
  %72 = load <32 x i8>, <32 x i8>* %71, align 1
  %73 = tail call <32 x i8> @llvm.x86.avx2.pavg.b(<32 x i8> %67, <32 x i8> %72) #3
  %74 = getelementptr inbounds i8, i8* %64, i64 32
  %75 = bitcast i8* %74 to <32 x i8>*
  %76 = load <32 x i8>, <32 x i8>* %75, align 1
  %77 = tail call <32 x i8> @llvm.x86.avx2.pavg.b(<32 x i8> %70, <32 x i8> %76) #3
  %78 = bitcast i8* %63 to <32 x i8>*
  %79 = load <32 x i8>, <32 x i8>* %78, align 1
  %80 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %73, <32 x i8> %79) #3
  %81 = getelementptr inbounds i8, i8* %63, i64 32
  %82 = bitcast i8* %81 to <32 x i8>*
  %83 = load <32 x i8>, <32 x i8>* %82, align 1
  %84 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %77, <32 x i8> %83) #3
  %85 = bitcast <4 x i64> %80 to <8 x i32>
  %86 = bitcast <4 x i64> %84 to <8 x i32>
  %87 = add <8 x i32> %61, %85
  %88 = add <8 x i32> %87, %86
  %89 = getelementptr inbounds i8, i8* %65, i64 %6
  %90 = getelementptr inbounds i8, i8* %63, i64 %7
  %91 = getelementptr inbounds i8, i8* %64, i64 64
  %92 = add nuw nsw i32 %62, 1
  %93 = icmp eq i32 %92, 64
  br i1 %93, label %94, label %60

94:                                               ; preds = %60
  %95 = extractelement <4 x i32> %52, i32 0
  %96 = bitcast <8 x i32> %88 to <32 x i8>
  %97 = shufflevector <32 x i8> %96, <32 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <32 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55>
  %98 = bitcast <32 x i8> %97 to <8 x i32>
  %99 = add <8 x i32> %88, %98
  %100 = bitcast <8 x i32> %99 to <4 x i64>
  %101 = shufflevector <4 x i64> %100, <4 x i64> undef, <2 x i32> <i32 2, i32 undef>
  %102 = shufflevector <4 x i64> %100, <4 x i64> undef, <2 x i32> <i32 0, i32 undef>
  %103 = bitcast <2 x i64> %102 to <4 x i32>
  %104 = bitcast <2 x i64> %101 to <4 x i32>
  %105 = add <4 x i32> %104, %103
  %106 = extractelement <4 x i32> %105, i32 0
  %107 = add i32 %106, %95
  ret i32 %107
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @aom_sad128x64_avg_avx2(i8* nocapture readonly, i32, i8* nocapture readonly, i32, i8* nocapture readonly) local_unnamed_addr #0 {
  %6 = sext i32 %3 to i64
  %7 = sext i32 %1 to i64
  br label %8

8:                                                ; preds = %8, %5
  %9 = phi <8 x i32> [ zeroinitializer, %5 ], [ %36, %8 ]
  %10 = phi i32 [ 0, %5 ], [ %40, %8 ]
  %11 = phi i8* [ %0, %5 ], [ %38, %8 ]
  %12 = phi i8* [ %4, %5 ], [ %39, %8 ]
  %13 = phi i8* [ %2, %5 ], [ %37, %8 ]
  %14 = bitcast i8* %13 to <32 x i8>*
  %15 = load <32 x i8>, <32 x i8>* %14, align 1
  %16 = getelementptr inbounds i8, i8* %13, i64 32
  %17 = bitcast i8* %16 to <32 x i8>*
  %18 = load <32 x i8>, <32 x i8>* %17, align 1
  %19 = bitcast i8* %12 to <32 x i8>*
  %20 = load <32 x i8>, <32 x i8>* %19, align 1
  %21 = tail call <32 x i8> @llvm.x86.avx2.pavg.b(<32 x i8> %15, <32 x i8> %20) #3
  %22 = getelementptr inbounds i8, i8* %12, i64 32
  %23 = bitcast i8* %22 to <32 x i8>*
  %24 = load <32 x i8>, <32 x i8>* %23, align 1
  %25 = tail call <32 x i8> @llvm.x86.avx2.pavg.b(<32 x i8> %18, <32 x i8> %24) #3
  %26 = bitcast i8* %11 to <32 x i8>*
  %27 = load <32 x i8>, <32 x i8>* %26, align 1
  %28 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %21, <32 x i8> %27) #3
  %29 = getelementptr inbounds i8, i8* %11, i64 32
  %30 = bitcast i8* %29 to <32 x i8>*
  %31 = load <32 x i8>, <32 x i8>* %30, align 1
  %32 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %25, <32 x i8> %31) #3
  %33 = bitcast <4 x i64> %28 to <8 x i32>
  %34 = bitcast <4 x i64> %32 to <8 x i32>
  %35 = add <8 x i32> %9, %33
  %36 = add <8 x i32> %35, %34
  %37 = getelementptr inbounds i8, i8* %13, i64 %6
  %38 = getelementptr inbounds i8, i8* %11, i64 %7
  %39 = getelementptr inbounds i8, i8* %12, i64 128
  %40 = add nuw nsw i32 %10, 1
  %41 = icmp eq i32 %40, 64
  br i1 %41, label %42, label %8

42:                                               ; preds = %8
  %43 = bitcast <8 x i32> %36 to <32 x i8>
  %44 = shufflevector <32 x i8> %43, <32 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <32 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55>
  %45 = bitcast <32 x i8> %44 to <8 x i32>
  %46 = add <8 x i32> %36, %45
  %47 = bitcast <8 x i32> %46 to <4 x i64>
  %48 = shufflevector <4 x i64> %47, <4 x i64> undef, <2 x i32> <i32 2, i32 undef>
  %49 = shufflevector <4 x i64> %47, <4 x i64> undef, <2 x i32> <i32 0, i32 undef>
  %50 = bitcast <2 x i64> %49 to <4 x i32>
  %51 = bitcast <2 x i64> %48 to <4 x i32>
  %52 = add <4 x i32> %51, %50
  %53 = getelementptr inbounds i8, i8* %0, i64 64
  %54 = getelementptr inbounds i8, i8* %2, i64 64
  %55 = getelementptr inbounds i8, i8* %4, i64 64
  br label %56

56:                                               ; preds = %56, %42
  %57 = phi <8 x i32> [ zeroinitializer, %42 ], [ %84, %56 ]
  %58 = phi i32 [ 0, %42 ], [ %88, %56 ]
  %59 = phi i8* [ %53, %42 ], [ %86, %56 ]
  %60 = phi i8* [ %55, %42 ], [ %87, %56 ]
  %61 = phi i8* [ %54, %42 ], [ %85, %56 ]
  %62 = bitcast i8* %61 to <32 x i8>*
  %63 = load <32 x i8>, <32 x i8>* %62, align 1
  %64 = getelementptr inbounds i8, i8* %61, i64 32
  %65 = bitcast i8* %64 to <32 x i8>*
  %66 = load <32 x i8>, <32 x i8>* %65, align 1
  %67 = bitcast i8* %60 to <32 x i8>*
  %68 = load <32 x i8>, <32 x i8>* %67, align 1
  %69 = tail call <32 x i8> @llvm.x86.avx2.pavg.b(<32 x i8> %63, <32 x i8> %68) #3
  %70 = getelementptr inbounds i8, i8* %60, i64 32
  %71 = bitcast i8* %70 to <32 x i8>*
  %72 = load <32 x i8>, <32 x i8>* %71, align 1
  %73 = tail call <32 x i8> @llvm.x86.avx2.pavg.b(<32 x i8> %66, <32 x i8> %72) #3
  %74 = bitcast i8* %59 to <32 x i8>*
  %75 = load <32 x i8>, <32 x i8>* %74, align 1
  %76 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %69, <32 x i8> %75) #3
  %77 = getelementptr inbounds i8, i8* %59, i64 32
  %78 = bitcast i8* %77 to <32 x i8>*
  %79 = load <32 x i8>, <32 x i8>* %78, align 1
  %80 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %73, <32 x i8> %79) #3
  %81 = bitcast <4 x i64> %76 to <8 x i32>
  %82 = bitcast <4 x i64> %80 to <8 x i32>
  %83 = add <8 x i32> %57, %81
  %84 = add <8 x i32> %83, %82
  %85 = getelementptr inbounds i8, i8* %61, i64 %6
  %86 = getelementptr inbounds i8, i8* %59, i64 %7
  %87 = getelementptr inbounds i8, i8* %60, i64 128
  %88 = add nuw nsw i32 %58, 1
  %89 = icmp eq i32 %88, 64
  br i1 %89, label %90, label %56

90:                                               ; preds = %56
  %91 = extractelement <4 x i32> %52, i32 0
  %92 = bitcast <8 x i32> %84 to <32 x i8>
  %93 = shufflevector <32 x i8> %92, <32 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <32 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55>
  %94 = bitcast <32 x i8> %93 to <8 x i32>
  %95 = add <8 x i32> %84, %94
  %96 = bitcast <8 x i32> %95 to <4 x i64>
  %97 = shufflevector <4 x i64> %96, <4 x i64> undef, <2 x i32> <i32 2, i32 undef>
  %98 = shufflevector <4 x i64> %96, <4 x i64> undef, <2 x i32> <i32 0, i32 undef>
  %99 = bitcast <2 x i64> %98 to <4 x i32>
  %100 = bitcast <2 x i64> %97 to <4 x i32>
  %101 = add <4 x i32> %100, %99
  %102 = extractelement <4 x i32> %101, i32 0
  %103 = add i32 %102, %91
  ret i32 %103
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @aom_sad128x128_avg_avx2(i8* nocapture readonly, i32, i8* nocapture readonly, i32, i8* nocapture readonly) local_unnamed_addr #0 {
  %6 = sext i32 %3 to i64
  %7 = sext i32 %1 to i64
  br label %8

8:                                                ; preds = %8, %5
  %9 = phi <8 x i32> [ zeroinitializer, %5 ], [ %36, %8 ]
  %10 = phi i32 [ 0, %5 ], [ %40, %8 ]
  %11 = phi i8* [ %0, %5 ], [ %38, %8 ]
  %12 = phi i8* [ %4, %5 ], [ %39, %8 ]
  %13 = phi i8* [ %2, %5 ], [ %37, %8 ]
  %14 = bitcast i8* %13 to <32 x i8>*
  %15 = load <32 x i8>, <32 x i8>* %14, align 1
  %16 = getelementptr inbounds i8, i8* %13, i64 32
  %17 = bitcast i8* %16 to <32 x i8>*
  %18 = load <32 x i8>, <32 x i8>* %17, align 1
  %19 = bitcast i8* %12 to <32 x i8>*
  %20 = load <32 x i8>, <32 x i8>* %19, align 1
  %21 = tail call <32 x i8> @llvm.x86.avx2.pavg.b(<32 x i8> %15, <32 x i8> %20) #3
  %22 = getelementptr inbounds i8, i8* %12, i64 32
  %23 = bitcast i8* %22 to <32 x i8>*
  %24 = load <32 x i8>, <32 x i8>* %23, align 1
  %25 = tail call <32 x i8> @llvm.x86.avx2.pavg.b(<32 x i8> %18, <32 x i8> %24) #3
  %26 = bitcast i8* %11 to <32 x i8>*
  %27 = load <32 x i8>, <32 x i8>* %26, align 1
  %28 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %21, <32 x i8> %27) #3
  %29 = getelementptr inbounds i8, i8* %11, i64 32
  %30 = bitcast i8* %29 to <32 x i8>*
  %31 = load <32 x i8>, <32 x i8>* %30, align 1
  %32 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %25, <32 x i8> %31) #3
  %33 = bitcast <4 x i64> %28 to <8 x i32>
  %34 = bitcast <4 x i64> %32 to <8 x i32>
  %35 = add <8 x i32> %9, %33
  %36 = add <8 x i32> %35, %34
  %37 = getelementptr inbounds i8, i8* %13, i64 %6
  %38 = getelementptr inbounds i8, i8* %11, i64 %7
  %39 = getelementptr inbounds i8, i8* %12, i64 128
  %40 = add nuw nsw i32 %10, 1
  %41 = icmp eq i32 %40, 64
  br i1 %41, label %42, label %8

42:                                               ; preds = %8
  %43 = bitcast <8 x i32> %36 to <32 x i8>
  %44 = shufflevector <32 x i8> %43, <32 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <32 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55>
  %45 = bitcast <32 x i8> %44 to <8 x i32>
  %46 = add <8 x i32> %36, %45
  %47 = bitcast <8 x i32> %46 to <4 x i64>
  %48 = shufflevector <4 x i64> %47, <4 x i64> undef, <2 x i32> <i32 2, i32 undef>
  %49 = shufflevector <4 x i64> %47, <4 x i64> undef, <2 x i32> <i32 0, i32 undef>
  %50 = bitcast <2 x i64> %48 to <4 x i32>
  %51 = getelementptr inbounds i8, i8* %0, i64 64
  %52 = getelementptr inbounds i8, i8* %2, i64 64
  %53 = getelementptr inbounds i8, i8* %4, i64 64
  br label %54

54:                                               ; preds = %54, %42
  %55 = phi <8 x i32> [ zeroinitializer, %42 ], [ %82, %54 ]
  %56 = phi i32 [ 0, %42 ], [ %86, %54 ]
  %57 = phi i8* [ %51, %42 ], [ %84, %54 ]
  %58 = phi i8* [ %53, %42 ], [ %85, %54 ]
  %59 = phi i8* [ %52, %42 ], [ %83, %54 ]
  %60 = bitcast i8* %59 to <32 x i8>*
  %61 = load <32 x i8>, <32 x i8>* %60, align 1
  %62 = getelementptr inbounds i8, i8* %59, i64 32
  %63 = bitcast i8* %62 to <32 x i8>*
  %64 = load <32 x i8>, <32 x i8>* %63, align 1
  %65 = bitcast i8* %58 to <32 x i8>*
  %66 = load <32 x i8>, <32 x i8>* %65, align 1
  %67 = tail call <32 x i8> @llvm.x86.avx2.pavg.b(<32 x i8> %61, <32 x i8> %66) #3
  %68 = getelementptr inbounds i8, i8* %58, i64 32
  %69 = bitcast i8* %68 to <32 x i8>*
  %70 = load <32 x i8>, <32 x i8>* %69, align 1
  %71 = tail call <32 x i8> @llvm.x86.avx2.pavg.b(<32 x i8> %64, <32 x i8> %70) #3
  %72 = bitcast i8* %57 to <32 x i8>*
  %73 = load <32 x i8>, <32 x i8>* %72, align 1
  %74 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %67, <32 x i8> %73) #3
  %75 = getelementptr inbounds i8, i8* %57, i64 32
  %76 = bitcast i8* %75 to <32 x i8>*
  %77 = load <32 x i8>, <32 x i8>* %76, align 1
  %78 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %71, <32 x i8> %77) #3
  %79 = bitcast <4 x i64> %74 to <8 x i32>
  %80 = bitcast <4 x i64> %78 to <8 x i32>
  %81 = add <8 x i32> %55, %79
  %82 = add <8 x i32> %81, %80
  %83 = getelementptr inbounds i8, i8* %59, i64 %6
  %84 = getelementptr inbounds i8, i8* %57, i64 %7
  %85 = getelementptr inbounds i8, i8* %58, i64 128
  %86 = add nuw nsw i32 %56, 1
  %87 = icmp eq i32 %86, 64
  br i1 %87, label %88, label %54

88:                                               ; preds = %54
  %89 = bitcast <2 x i64> %49 to <4 x i32>
  %90 = add <4 x i32> %50, %89
  %91 = bitcast <8 x i32> %82 to <32 x i8>
  %92 = shufflevector <32 x i8> %91, <32 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <32 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55>
  %93 = bitcast <32 x i8> %92 to <8 x i32>
  %94 = add <8 x i32> %82, %93
  %95 = bitcast <8 x i32> %94 to <4 x i64>
  %96 = shufflevector <4 x i64> %95, <4 x i64> undef, <2 x i32> <i32 2, i32 undef>
  %97 = shufflevector <4 x i64> %95, <4 x i64> undef, <2 x i32> <i32 0, i32 undef>
  %98 = bitcast <2 x i64> %97 to <4 x i32>
  %99 = bitcast <2 x i64> %96 to <4 x i32>
  %100 = add <4 x i32> %99, %98
  %101 = shl i32 %1, 6
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds i8, i8* %0, i64 %102
  %104 = shl i32 %3, 6
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds i8, i8* %2, i64 %105
  %107 = getelementptr inbounds i8, i8* %4, i64 8192
  br label %108

108:                                              ; preds = %108, %88
  %109 = phi <8 x i32> [ zeroinitializer, %88 ], [ %136, %108 ]
  %110 = phi i32 [ 0, %88 ], [ %140, %108 ]
  %111 = phi i8* [ %103, %88 ], [ %138, %108 ]
  %112 = phi i8* [ %107, %88 ], [ %139, %108 ]
  %113 = phi i8* [ %106, %88 ], [ %137, %108 ]
  %114 = bitcast i8* %113 to <32 x i8>*
  %115 = load <32 x i8>, <32 x i8>* %114, align 1
  %116 = getelementptr inbounds i8, i8* %113, i64 32
  %117 = bitcast i8* %116 to <32 x i8>*
  %118 = load <32 x i8>, <32 x i8>* %117, align 1
  %119 = bitcast i8* %112 to <32 x i8>*
  %120 = load <32 x i8>, <32 x i8>* %119, align 1
  %121 = tail call <32 x i8> @llvm.x86.avx2.pavg.b(<32 x i8> %115, <32 x i8> %120) #3
  %122 = getelementptr inbounds i8, i8* %112, i64 32
  %123 = bitcast i8* %122 to <32 x i8>*
  %124 = load <32 x i8>, <32 x i8>* %123, align 1
  %125 = tail call <32 x i8> @llvm.x86.avx2.pavg.b(<32 x i8> %118, <32 x i8> %124) #3
  %126 = bitcast i8* %111 to <32 x i8>*
  %127 = load <32 x i8>, <32 x i8>* %126, align 1
  %128 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %121, <32 x i8> %127) #3
  %129 = getelementptr inbounds i8, i8* %111, i64 32
  %130 = bitcast i8* %129 to <32 x i8>*
  %131 = load <32 x i8>, <32 x i8>* %130, align 1
  %132 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %125, <32 x i8> %131) #3
  %133 = bitcast <4 x i64> %128 to <8 x i32>
  %134 = bitcast <4 x i64> %132 to <8 x i32>
  %135 = add <8 x i32> %109, %133
  %136 = add <8 x i32> %135, %134
  %137 = getelementptr inbounds i8, i8* %113, i64 %6
  %138 = getelementptr inbounds i8, i8* %111, i64 %7
  %139 = getelementptr inbounds i8, i8* %112, i64 128
  %140 = add nuw nsw i32 %110, 1
  %141 = icmp eq i32 %140, 64
  br i1 %141, label %142, label %108

142:                                              ; preds = %108
  %143 = extractelement <4 x i32> %90, i32 0
  %144 = extractelement <4 x i32> %100, i32 0
  %145 = bitcast <8 x i32> %136 to <32 x i8>
  %146 = shufflevector <32 x i8> %145, <32 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <32 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55>
  %147 = bitcast <32 x i8> %146 to <8 x i32>
  %148 = add <8 x i32> %136, %147
  %149 = bitcast <8 x i32> %148 to <4 x i64>
  %150 = shufflevector <4 x i64> %149, <4 x i64> undef, <2 x i32> <i32 2, i32 undef>
  %151 = shufflevector <4 x i64> %149, <4 x i64> undef, <2 x i32> <i32 0, i32 undef>
  %152 = bitcast <2 x i64> %150 to <4 x i32>
  %153 = getelementptr inbounds i8, i8* %103, i64 64
  %154 = getelementptr inbounds i8, i8* %106, i64 64
  %155 = getelementptr inbounds i8, i8* %4, i64 8256
  br label %156

156:                                              ; preds = %156, %142
  %157 = phi <8 x i32> [ zeroinitializer, %142 ], [ %184, %156 ]
  %158 = phi i32 [ 0, %142 ], [ %188, %156 ]
  %159 = phi i8* [ %153, %142 ], [ %186, %156 ]
  %160 = phi i8* [ %155, %142 ], [ %187, %156 ]
  %161 = phi i8* [ %154, %142 ], [ %185, %156 ]
  %162 = bitcast i8* %161 to <32 x i8>*
  %163 = load <32 x i8>, <32 x i8>* %162, align 1
  %164 = getelementptr inbounds i8, i8* %161, i64 32
  %165 = bitcast i8* %164 to <32 x i8>*
  %166 = load <32 x i8>, <32 x i8>* %165, align 1
  %167 = bitcast i8* %160 to <32 x i8>*
  %168 = load <32 x i8>, <32 x i8>* %167, align 1
  %169 = tail call <32 x i8> @llvm.x86.avx2.pavg.b(<32 x i8> %163, <32 x i8> %168) #3
  %170 = getelementptr inbounds i8, i8* %160, i64 32
  %171 = bitcast i8* %170 to <32 x i8>*
  %172 = load <32 x i8>, <32 x i8>* %171, align 1
  %173 = tail call <32 x i8> @llvm.x86.avx2.pavg.b(<32 x i8> %166, <32 x i8> %172) #3
  %174 = bitcast i8* %159 to <32 x i8>*
  %175 = load <32 x i8>, <32 x i8>* %174, align 1
  %176 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %169, <32 x i8> %175) #3
  %177 = getelementptr inbounds i8, i8* %159, i64 32
  %178 = bitcast i8* %177 to <32 x i8>*
  %179 = load <32 x i8>, <32 x i8>* %178, align 1
  %180 = tail call <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8> %173, <32 x i8> %179) #3
  %181 = bitcast <4 x i64> %176 to <8 x i32>
  %182 = bitcast <4 x i64> %180 to <8 x i32>
  %183 = add <8 x i32> %157, %181
  %184 = add <8 x i32> %183, %182
  %185 = getelementptr inbounds i8, i8* %161, i64 %6
  %186 = getelementptr inbounds i8, i8* %159, i64 %7
  %187 = getelementptr inbounds i8, i8* %160, i64 128
  %188 = add nuw nsw i32 %158, 1
  %189 = icmp eq i32 %188, 64
  br i1 %189, label %190, label %156

190:                                              ; preds = %156
  %191 = bitcast <2 x i64> %151 to <4 x i32>
  %192 = add <4 x i32> %152, %191
  %193 = extractelement <4 x i32> %192, i32 0
  %194 = bitcast <8 x i32> %184 to <32 x i8>
  %195 = shufflevector <32 x i8> %194, <32 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <32 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55>
  %196 = bitcast <32 x i8> %195 to <8 x i32>
  %197 = add <8 x i32> %184, %196
  %198 = bitcast <8 x i32> %197 to <4 x i64>
  %199 = shufflevector <4 x i64> %198, <4 x i64> undef, <2 x i32> <i32 2, i32 undef>
  %200 = shufflevector <4 x i64> %198, <4 x i64> undef, <2 x i32> <i32 0, i32 undef>
  %201 = bitcast <2 x i64> %200 to <4 x i32>
  %202 = bitcast <2 x i64> %199 to <4 x i32>
  %203 = add <4 x i32> %202, %201
  %204 = extractelement <4 x i32> %203, i32 0
  %205 = add i32 %144, %143
  %206 = add i32 %205, %193
  %207 = add i32 %206, %204
  ret i32 %207
}

; Function Attrs: nounwind readnone
declare <4 x i64> @llvm.x86.avx2.psad.bw(<32 x i8>, <32 x i8>) #2

; Function Attrs: nounwind readnone
declare <32 x i8> @llvm.x86.avx2.pavg.b(<32 x i8>, <32 x i8>) #2

attributes #0 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="256" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+avx,+avx2,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+avx,+avx2,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
