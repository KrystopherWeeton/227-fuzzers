; ModuleID = '../../third_party/tflite/src/tensorflow/lite/kernels/concatenation.cc'
source_filename = "../../third_party/tflite/src/tensorflow/lite/kernels/concatenation.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.TfLiteContext = type { i64, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray**)*, %struct.TfLiteTensor*, i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, void (%struct.TfLiteContext*, i8*, ...)*, i32 (%struct.TfLiteContext*, i32, i32*)*, i32 (%struct.TfLiteContext*, i32, %struct.TfLiteNode**, %struct.TfLiteRegistration**)*, i32 (%struct.TfLiteContext*, %struct.TfLiteRegistration*, %struct.TfLiteIntArray*, %struct.TfLiteDelegate*)*, i32, %struct.TfLiteExternalContext* (%struct.TfLiteContext*, i32)*, void (%struct.TfLiteContext*, i32, %struct.TfLiteExternalContext*)*, i8, i8*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i32*)*, i8* (%struct.TfLiteContext*, i32)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, i32, i32*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray*, %struct.TfLiteDelegateParams**, i32*)* }
%struct.TfLiteIntArray = type { i32, [0 x i32] }
%struct.TfLiteTensor = type { i32, %union.TfLitePtrUnion, %struct.TfLiteIntArray*, %struct.TfLiteQuantizationParams, i32, i64, i8*, i8*, %struct.TfLiteDelegate*, i32, i8, i8, %struct.TfLiteQuantization, %struct.TfLiteSparsity*, %struct.TfLiteIntArray* }
%union.TfLitePtrUnion = type { i32* }
%struct.TfLiteQuantizationParams = type { float, i32 }
%struct.TfLiteDelegate = type { i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, void (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32*)*, i64 }
%struct.TfLiteQuantization = type { i32, i8* }
%struct.TfLiteSparsity = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteDimensionMetadata*, i32 }
%struct.TfLiteDimensionMetadata = type { i32, i32, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteNode = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, i8*, i8*, i8*, i32, %struct.TfLiteDelegate* }
%struct.TfLiteRegistration = type { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, {}*, {}*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }
%struct.TfLiteExternalContext = type { i32, i32 (%struct.TfLiteContext*)* }
%struct.TfLiteDelegateParams = type { %struct.TfLiteDelegate*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%"class.tflite::VectorOfTensors" = type { %"class.std::__1::vector", %"class.std::__1::vector.2", %"class.std::__1::vector.9" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8**, i8**, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8** }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"*, %"class.std::__1::__compressed_pair.4" }
%"class.tflite::RuntimeShape" = type { i32, %union.anon }
%union.anon = type { i32*, [16 x i8] }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.tflite::RuntimeShape"* }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"**, %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.tflite::RuntimeShape"** }
%struct.TfLiteConcatenationParams = type { i32, i32 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.tflite::VectorOfTensors.24" = type { %"class.std::__1::vector.25", %"class.std::__1::vector.2", %"class.std::__1::vector.9" }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { float**, float**, %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { float** }
%"class.tflite::VectorOfTensors.32" = type { %"class.std::__1::vector.33", %"class.std::__1::vector.2", %"class.std::__1::vector.9" }
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { i32**, i32**, %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { i32** }
%"class.tflite::VectorOfQuantizedTensors" = type { %"class.tflite::VectorOfTensors.40", %"class.std::__1::vector.48", %"class.std::__1::vector.55" }
%"class.tflite::VectorOfTensors.40" = type { %"class.std::__1::vector.41", %"class.std::__1::vector.2", %"class.std::__1::vector.9" }
%"class.std::__1::vector.41" = type { %"class.std::__1::__vector_base.42" }
%"class.std::__1::__vector_base.42" = type { i8**, i8**, %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { i8** }
%"class.std::__1::vector.48" = type { %"class.std::__1::__vector_base.49" }
%"class.std::__1::__vector_base.49" = type { i32*, i32*, %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { i32* }
%"class.std::__1::vector.55" = type { %"class.std::__1::__vector_base.56" }
%"class.std::__1::__vector_base.56" = type { float*, float*, %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { float* }
%"class.tflite::VectorOfTensors.62" = type { %"class.std::__1::vector.63", %"class.std::__1::vector.2", %"class.std::__1::vector.9" }
%"class.std::__1::vector.63" = type { %"class.std::__1::__vector_base.64" }
%"class.std::__1::__vector_base.64" = type { i64**, i64**, %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { i64** }
%"class.tflite::VectorOfTensors.70" = type { %"class.std::__1::vector.71", %"class.std::__1::vector.2", %"class.std::__1::vector.9" }
%"class.std::__1::vector.71" = type { %"class.std::__1::__vector_base.72" }
%"class.std::__1::__vector_base.72" = type { i16**, i16**, %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { i16** }

$_ZN6tflite15VectorOfTensorsIaEC2ERK13TfLiteContextRK14TfLiteIntArray = comdat any

$_ZN6tflite3ops7builtin13concatenation4EvalILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode = comdat any

$_ZN6tflite3ops7builtin13concatenation4EvalILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode = comdat any

$_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE7reserveEm = comdat any

$_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

$_ZN6tflite15VectorOfTensorsIfEC2ERK13TfLiteContextRK14TfLiteIntArray = comdat any

$_ZN6tflite15VectorOfTensorsIiEC2ERK13TfLiteContextRK14TfLiteIntArray = comdat any

$_ZN6tflite24VectorOfQuantizedTensorsC2ERK13TfLiteContextRK14TfLiteIntArray = comdat any

$_ZN6tflite15VectorOfTensorsIlEC2ERK13TfLiteContextRK14TfLiteIntArray = comdat any

$_ZN6tflite15VectorOfTensorsIsEC2ERK13TfLiteContextRK14TfLiteIntArray = comdat any

$_ZN6tflite15VectorOfTensorsIhEC2ERK13TfLiteContextRK14TfLiteIntArray = comdat any

@.str = private unnamed_addr constant [23 x i8] c"%s:%d %s was not true.\00", align 1
@.str.3 = private unnamed_addr constant [70 x i8] c"../../third_party/tflite/src/tensorflow/lite/kernels/concatenation.cc\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"axis >= 0\00", align 1
@.str.5 = private unnamed_addr constant [22 x i8] c"axis < t0->dims->size\00", align 1
@.str.6 = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%d != %d)\00", align 1
@.str.7 = private unnamed_addr constant [19 x i8] c"params->activation\00", align 1
@.str.8 = private unnamed_addr constant [15 x i8] c"kTfLiteActNone\00", align 1
@.str.9 = private unnamed_addr constant [178 x i8] c"input_type == kTfLiteFloat32 || input_type == kTfLiteUInt8 || input_type == kTfLiteInt8 || input_type == kTfLiteInt16 || input_type == kTfLiteInt32 || input_type == kTfLiteInt64\00", align 1
@.str.10 = private unnamed_addr constant [14 x i8] c"t->dims->size\00", align 1
@.str.11 = private unnamed_addr constant [15 x i8] c"t0->dims->size\00", align 1
@.str.12 = private unnamed_addr constant [8 x i8] c"t->type\00", align 1
@.str.13 = private unnamed_addr constant [11 x i8] c"input_type\00", align 1
@.str.14 = private unnamed_addr constant [17 x i8] c"t->dims->data[d]\00", align 1
@.str.15 = private unnamed_addr constant [18 x i8] c"t0->dims->data[d]\00", align 1
@.str.16 = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%s != %s)\00", align 1
@.str.17 = private unnamed_addr constant [13 x i8] c"output->type\00", align 1
@.str.18 = private unnamed_addr constant [16 x i8] c"t->params.scale\00", align 1
@.str.19 = private unnamed_addr constant [21 x i8] c"output->params.scale\00", align 1
@.str.20 = private unnamed_addr constant [21 x i8] c"t->params.zero_point\00", align 1
@.str.21 = private unnamed_addr constant [26 x i8] c"output->params.zero_point\00", align 1
@_ZZN6tflite3ops7builtin26Register_CONCATENATION_REFEvE1r = internal global { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 } { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin13concatenation7PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin13concatenation4EvalILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@_ZZN6tflite3ops7builtin34Register_CONCATENATION_GENERIC_OPTEvE1r = internal global { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 } { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin13concatenation7PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin13concatenation4EvalILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@.str.29 = private unnamed_addr constant [38 x i8] c"Type '%s' is not supported currently.\00", align 1
@llvm.global_ctors = appending global [0 x { i32, void ()*, i8* }] zeroinitializer

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin13concatenation7PrepareEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #0 {
  %3 = alloca %"class.tflite::VectorOfTensors", align 8
  %4 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %5 = bitcast i8** %4 to %struct.TfLiteConcatenationParams**
  %6 = load %struct.TfLiteConcatenationParams*, %struct.TfLiteConcatenationParams** %5, align 8
  %7 = getelementptr inbounds %struct.TfLiteConcatenationParams, %struct.TfLiteConcatenationParams* %6, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %10 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %9, align 8
  %11 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %10, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %10, i64 0, i32 1, i64 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp slt i32 %14, 0
  br i1 %15, label %21, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %18 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %17, align 8
  %19 = sext i32 %14 to i64
  %20 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %18, i64 %19
  br label %21

21:                                               ; preds = %2, %16
  %22 = phi %struct.TfLiteTensor* [ %20, %16 ], [ null, %2 ]
  %23 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %22, i64 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = icmp slt i32 %8, 0
  %26 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %22, i64 0, i32 2
  %27 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %26, align 8
  %28 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %27, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %25, label %30, label %36

30:                                               ; preds = %21
  %31 = add nsw i32 %29, %8
  %32 = icmp sgt i32 %31, -1
  br i1 %32, label %36, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %35 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %34, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %35(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.3, i64 0, i64 0), i32 51, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0)) #10
  br label %264

36:                                               ; preds = %21, %30
  %37 = phi i32 [ %31, %30 ], [ %8, %21 ]
  %38 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %22, i64 0, i32 2
  %39 = icmp slt i32 %37, %29
  br i1 %39, label %43, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %42 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %41, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %42(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.3, i64 0, i64 0), i32 52, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i64 0, i64 0)) #10
  br label %264

43:                                               ; preds = %36
  %44 = getelementptr inbounds %struct.TfLiteConcatenationParams, %struct.TfLiteConcatenationParams* %6, i64 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %49 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %48, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %49(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.3, i64 0, i64 0), i32 56, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0), i32 %45, i32 0) #10
  br label %264

50:                                               ; preds = %43
  %51 = icmp eq i32 %24, 9
  switch i32 %24, label %52 [
    i32 9, label %55
    i32 7, label %55
    i32 4, label %55
    i32 3, label %55
    i32 2, label %55
    i32 1, label %55
  ]

52:                                               ; preds = %50
  %53 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %54 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %53, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %54(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.3, i64 0, i64 0), i32 60, i8* getelementptr inbounds ([178 x i8], [178 x i8]* @.str.9, i64 0, i64 0)) #10
  br label %264

55:                                               ; preds = %50, %50, %50, %50, %50, %50
  %56 = sext i32 %37 to i64
  %57 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %27, i64 0, i32 1, i64 %56
  %58 = load i32, i32* %57, align 4
  %59 = icmp sgt i32 %12, 1
  br i1 %59, label %60, label %120

60:                                               ; preds = %55
  %61 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %62 = icmp sgt i32 %29, 0
  %63 = zext i32 %37 to i64
  %64 = zext i32 %12 to i64
  %65 = zext i32 %29 to i64
  br label %66

66:                                               ; preds = %116, %60
  %67 = phi i64 [ 1, %60 ], [ %118, %116 ]
  %68 = phi i32 [ %58, %60 ], [ %117, %116 ]
  %69 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %10, i64 0, i32 1, i64 %67
  %70 = load i32, i32* %69, align 4
  %71 = icmp slt i32 %70, 0
  br i1 %71, label %76, label %72

72:                                               ; preds = %66
  %73 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %61, align 8
  %74 = sext i32 %70 to i64
  %75 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %73, i64 %74
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi %struct.TfLiteTensor* [ %75, %72 ], [ null, %66 ]
  %78 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %77, i64 0, i32 2
  %79 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %78, align 8
  %80 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %79, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %81, %29
  br i1 %82, label %86, label %83

83:                                               ; preds = %76
  %84 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %85 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %84, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %85(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.3, i64 0, i64 0), i32 67, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11, i64 0, i64 0), i32 %81, i32 %29) #10
  br label %264

86:                                               ; preds = %76
  %87 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %77, i64 0, i32 0
  %88 = load i32, i32* %87, align 8
  %89 = icmp eq i32 %88, %24
  br i1 %89, label %90, label %93

90:                                               ; preds = %86
  br i1 %62, label %91, label %116

91:                                               ; preds = %90
  %92 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %79, i64 0, i32 1, i64 %56
  br label %96

93:                                               ; preds = %86
  %94 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %95 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %94, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %95(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.3, i64 0, i64 0), i32 68, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i64 0, i64 0), i32 %88, i32 %24) #10
  br label %264

96:                                               ; preds = %109, %91
  %97 = phi i64 [ 0, %91 ], [ %111, %109 ]
  %98 = phi i32 [ %68, %91 ], [ %110, %109 ]
  %99 = icmp eq i64 %97, %63
  br i1 %99, label %100, label %103

100:                                              ; preds = %96
  %101 = load i32, i32* %92, align 4
  %102 = add nsw i32 %101, %98
  br label %109

103:                                              ; preds = %96
  %104 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %79, i64 0, i32 1, i64 %97
  %105 = load i32, i32* %104, align 4
  %106 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %27, i64 0, i32 1, i64 %97
  %107 = load i32, i32* %106, align 4
  %108 = icmp eq i32 %105, %107
  br i1 %108, label %109, label %113

109:                                              ; preds = %103, %100
  %110 = phi i32 [ %102, %100 ], [ %98, %103 ]
  %111 = add nuw nsw i64 %97, 1
  %112 = icmp eq i64 %111, %65
  br i1 %112, label %116, label %96

113:                                              ; preds = %103
  %114 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %115 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %114, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %115(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.3, i64 0, i64 0), i32 73, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.15, i64 0, i64 0), i32 %105, i32 %107) #10
  br label %264

116:                                              ; preds = %109, %90
  %117 = phi i32 [ %68, %90 ], [ %110, %109 ]
  %118 = add nuw nsw i64 %67, 1
  %119 = icmp eq i64 %118, %64
  br i1 %119, label %120, label %66

120:                                              ; preds = %116, %55
  %121 = phi i32 [ %58, %55 ], [ %117, %116 ]
  %122 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 %29) #10
  %123 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %38, align 8
  %124 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %123, i64 0, i32 0
  %125 = load i32, i32* %124, align 4
  %126 = icmp sgt i32 %125, 0
  br i1 %126, label %127, label %129

127:                                              ; preds = %120
  %128 = zext i32 %37 to i64
  br label %145

129:                                              ; preds = %152, %120
  %130 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %131 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %130, align 8
  %132 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %131, i64 0, i32 1, i64 0
  %133 = load i32, i32* %132, align 4
  %134 = icmp slt i32 %133, 0
  br i1 %134, label %140, label %135

135:                                              ; preds = %129
  %136 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %137 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %136, align 8
  %138 = sext i32 %133 to i64
  %139 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %137, i64 %138
  br label %140

140:                                              ; preds = %129, %135
  %141 = phi %struct.TfLiteTensor* [ %139, %135 ], [ null, %129 ]
  %142 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %141, i64 0, i32 0
  %143 = load i32, i32* %142, align 8
  %144 = icmp eq i32 %143, %24
  br i1 %144, label %166, label %161

145:                                              ; preds = %127, %152
  %146 = phi i64 [ 0, %127 ], [ %155, %152 ]
  %147 = phi %struct.TfLiteIntArray* [ %123, %127 ], [ %156, %152 ]
  %148 = icmp eq i64 %146, %128
  br i1 %148, label %152, label %149

149:                                              ; preds = %145
  %150 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %147, i64 0, i32 1, i64 %146
  %151 = load i32, i32* %150, align 4
  br label %152

152:                                              ; preds = %145, %149
  %153 = phi i32 [ %151, %149 ], [ %121, %145 ]
  %154 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %122, i64 0, i32 1, i64 %146
  store i32 %153, i32* %154, align 4
  %155 = add nuw nsw i64 %146, 1
  %156 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %38, align 8
  %157 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %156, i64 0, i32 0
  %158 = load i32, i32* %157, align 4
  %159 = sext i32 %158 to i64
  %160 = icmp slt i64 %155, %159
  br i1 %160, label %145, label %129

161:                                              ; preds = %140
  %162 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %163 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %162, align 8
  %164 = tail call i8* @TfLiteTypeGetName(i32 %143) #10
  %165 = tail call i8* @TfLiteTypeGetName(i32 %24) #10
  tail call void (%struct.TfLiteContext*, i8*, ...) %163(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.3, i64 0, i64 0), i32 84, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i64 0, i64 0), i8* %164, i8* %165) #10
  br label %264

166:                                              ; preds = %140
  br i1 %51, label %167, label %260

167:                                              ; preds = %166
  %168 = bitcast %"class.tflite::VectorOfTensors"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %168) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %168, i8 -86, i64 72, i1 false)
  %169 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %9, align 8
  call void @_ZN6tflite15VectorOfTensorsIaEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors"* nonnull %3, %struct.TfLiteContext* dereferenceable(160) %0, %struct.TfLiteIntArray* dereferenceable(4) %169)
  %170 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %9, align 8
  %171 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %170, i64 0, i32 0
  %172 = load i32, i32* %171, align 4
  %173 = icmp sgt i32 %172, 0
  br i1 %173, label %174, label %210

174:                                              ; preds = %167
  %175 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %176 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %141, i64 0, i32 3, i32 0
  %177 = load float, float* %176, align 8
  %178 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %141, i64 0, i32 3, i32 1
  %179 = sext i32 %172 to i64
  br label %182

180:                                              ; preds = %201
  %181 = icmp slt i64 %206, %179
  br i1 %181, label %182, label %210

182:                                              ; preds = %174, %180
  %183 = phi i64 [ 0, %174 ], [ %206, %180 ]
  %184 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %170, i64 0, i32 1, i64 %183
  %185 = load i32, i32* %184, align 4
  %186 = icmp slt i32 %185, 0
  br i1 %186, label %191, label %187

187:                                              ; preds = %182
  %188 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %175, align 8
  %189 = sext i32 %185 to i64
  %190 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %188, i64 %189
  br label %191

191:                                              ; preds = %182, %187
  %192 = phi %struct.TfLiteTensor* [ %190, %187 ], [ null, %182 ]
  %193 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %192, i64 0, i32 3, i32 0
  %194 = load float, float* %193, align 8
  %195 = fcmp une float %194, %177
  br i1 %195, label %196, label %201

196:                                              ; preds = %191
  %197 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %198 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %197, align 8
  %199 = fpext float %194 to double
  %200 = fpext float %177 to double
  call void (%struct.TfLiteContext*, i8*, ...) %198(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.3, i64 0, i64 0), i32 92, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.19, i64 0, i64 0), double %199, double %200) #10
  br label %210

201:                                              ; preds = %191
  %202 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %192, i64 0, i32 3, i32 1
  %203 = load i32, i32* %202, align 4
  %204 = load i32, i32* %178, align 4
  %205 = icmp eq i32 %203, %204
  %206 = add nuw nsw i64 %183, 1
  br i1 %205, label %180, label %207

207:                                              ; preds = %201
  %208 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %209 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %208, align 8
  call void (%struct.TfLiteContext*, i8*, ...) %209(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.3, i64 0, i64 0), i32 94, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.21, i64 0, i64 0), i32 %203, i32 %204) #10
  br label %210

210:                                              ; preds = %180, %167, %207, %196
  %211 = phi i32 [ 1, %196 ], [ 1, %207 ], [ 0, %167 ], [ 0, %180 ]
  %212 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %3, i64 0, i32 2, i32 0, i32 0
  %213 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %212, align 8
  %214 = icmp eq %"class.tflite::RuntimeShape"** %213, null
  br i1 %214, label %220, label %215

215:                                              ; preds = %210
  %216 = ptrtoint %"class.tflite::RuntimeShape"** %213 to i64
  %217 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %3, i64 0, i32 2, i32 0, i32 1
  %218 = bitcast %"class.tflite::RuntimeShape"*** %217 to i64*
  store i64 %216, i64* %218, align 8
  %219 = bitcast %"class.tflite::RuntimeShape"** %213 to i8*
  call void @_ZdlPv(i8* %219) #11
  br label %220

220:                                              ; preds = %215, %210
  %221 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %3, i64 0, i32 1
  %222 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %221, i64 0, i32 0, i32 0
  %223 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %222, align 8
  %224 = icmp eq %"class.tflite::RuntimeShape"* %223, null
  br i1 %224, label %249, label %225

225:                                              ; preds = %220
  %226 = bitcast %"class.tflite::RuntimeShape"* %223 to i8*
  %227 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %3, i64 0, i32 1, i32 0, i32 1
  %228 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %227, align 8
  %229 = icmp eq %"class.tflite::RuntimeShape"* %228, %223
  br i1 %229, label %247, label %230

230:                                              ; preds = %225, %242
  %231 = phi %"class.tflite::RuntimeShape"* [ %232, %242 ], [ %228, %225 ]
  %232 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %231, i64 -1
  %233 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %232, i64 0, i32 0
  %234 = load i32, i32* %233, align 8
  %235 = icmp sgt i32 %234, 5
  br i1 %235, label %236, label %242

236:                                              ; preds = %230
  %237 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %231, i64 -1, i32 1, i32 0
  %238 = load i32*, i32** %237, align 8
  %239 = icmp eq i32* %238, null
  br i1 %239, label %242, label %240

240:                                              ; preds = %236
  %241 = bitcast i32* %238 to i8*
  call void @_ZdaPv(i8* %241) #11
  br label %242

242:                                              ; preds = %240, %236, %230
  %243 = icmp eq %"class.tflite::RuntimeShape"* %232, %223
  br i1 %243, label %244, label %230

244:                                              ; preds = %242
  %245 = bitcast %"class.std::__1::vector.2"* %221 to i8**
  %246 = load i8*, i8** %245, align 8
  br label %247

247:                                              ; preds = %244, %225
  %248 = phi i8* [ %246, %244 ], [ %226, %225 ]
  store %"class.tflite::RuntimeShape"* %223, %"class.tflite::RuntimeShape"** %227, align 8
  call void @_ZdlPv(i8* %248) #11
  br label %249

249:                                              ; preds = %247, %220
  %250 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %3, i64 0, i32 0, i32 0, i32 0
  %251 = load i8**, i8*** %250, align 8
  %252 = icmp eq i8** %251, null
  br i1 %252, label %258, label %253

253:                                              ; preds = %249
  %254 = ptrtoint i8** %251 to i64
  %255 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %3, i64 0, i32 0, i32 0, i32 1
  %256 = bitcast i8*** %255 to i64*
  store i64 %254, i64* %256, align 8
  %257 = bitcast i8** %251 to i8*
  call void @_ZdlPv(i8* %257) #11
  br label %258

258:                                              ; preds = %249, %253
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %168) #10
  %259 = icmp eq i32 %211, 0
  br i1 %259, label %260, label %264

260:                                              ; preds = %258, %166
  %261 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %262 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %261, align 8
  %263 = call i32 %262(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %141, %struct.TfLiteIntArray* %122) #10
  br label %264

264:                                              ; preds = %113, %93, %83, %258, %260, %161, %52, %47, %40, %33
  %265 = phi i32 [ 1, %47 ], [ 1, %52 ], [ 1, %40 ], [ 1, %33 ], [ 1, %161 ], [ %263, %260 ], [ 1, %258 ], [ 1, %83 ], [ 1, %93 ], [ 1, %113 ]
  ret i32 %265
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32) local_unnamed_addr #2

declare i8* @TfLiteTypeGetName(i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite15VectorOfTensorsIaEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors"*, %struct.TfLiteContext* dereferenceable(160), %struct.TfLiteIntArray* dereferenceable(4)) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2, i64 0, i32 0
  %8 = bitcast %"class.tflite::VectorOfTensors"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 72, i1 false)
  %9 = load i32, i32* %7, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %12 = bitcast i8*** %11 to i64*
  %13 = bitcast %"class.tflite::VectorOfTensors"* %0 to i64*
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %3
  %16 = icmp slt i32 %9, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %15
  tail call void @abort() #12
  unreachable

18:                                               ; preds = %15
  %19 = shl nsw i64 %10, 3
  %20 = tail call i8* @_Znwm(i64 %19) #11
  %21 = bitcast i8* %20 to i8**
  %22 = getelementptr inbounds i8*, i8** %21, i64 %10
  %23 = ptrtoint i8** %22 to i64
  %24 = insertelement <2 x i8*> undef, i8* %20, i32 0
  %25 = shufflevector <2 x i8*> %24, <2 x i8*> undef, <2 x i32> zeroinitializer
  %26 = ptrtoint <2 x i8*> %25 to <2 x i64>
  %27 = bitcast %"class.tflite::VectorOfTensors"* %0 to <2 x i64>*
  store <2 x i64> %26, <2 x i64>* %27, align 8
  store i64 %23, i64* %12, align 8
  br label %28

28:                                               ; preds = %18, %3
  tail call void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.2"* %5, i64 %10)
  %29 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast %"class.tflite::RuntimeShape"*** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector.9"* %6 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %31, %33
  %35 = ashr exact i64 %34, 3
  %36 = icmp ult i64 %35, %10
  br i1 %36, label %37, label %58

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %0, i64 0, i32 2, i32 0, i32 1
  %39 = bitcast %"class.tflite::RuntimeShape"*** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %40, %33
  %42 = ashr exact i64 %41, 3
  %43 = shl nsw i64 %10, 3
  %44 = tail call i8* @_Znwm(i64 %43) #11
  %45 = bitcast i8* %44 to %"class.tflite::RuntimeShape"**
  %46 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %45, i64 %42
  %47 = ptrtoint %"class.tflite::RuntimeShape"** %46 to i64
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %45, i64 %10
  %49 = ptrtoint %"class.tflite::RuntimeShape"** %48 to i64
  %50 = ptrtoint i8* %44 to i64
  %51 = icmp sgt i64 %41, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %37
  %53 = inttoptr i64 %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* align 8 %53, i64 %41, i1 false) #10
  br label %54

54:                                               ; preds = %52, %37
  store i64 %50, i64* %32, align 8
  store i64 %47, i64* %39, align 8
  store i64 %49, i64* %30, align 8
  %55 = icmp eq i64 %33, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = inttoptr i64 %33 to i8*
  tail call void @_ZdlPv(i8* %57) #11
  br label %58

58:                                               ; preds = %28, %54, %56
  %59 = icmp sgt i32 %9, 0
  br i1 %59, label %60, label %221

60:                                               ; preds = %58
  %61 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %1, i64 0, i32 2
  %62 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %0, i64 0, i32 0, i32 0, i32 1
  %63 = bitcast i8*** %62 to i64*
  %64 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %0, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  %66 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %67 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %68 = bitcast %union.anon* %67 to i32*
  %69 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %70 = bitcast i32** %69 to i8**
  %71 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %0, i64 0, i32 1, i32 0, i32 1
  %72 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %73 = getelementptr inbounds %union.anon, %union.anon* %67, i64 0, i32 0
  %74 = bitcast %"class.tflite::RuntimeShape"** %71 to i64*
  %75 = zext i32 %9 to i64
  br label %83

76:                                               ; preds = %218
  br i1 %59, label %77, label %221

77:                                               ; preds = %76
  %78 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %5, i64 0, i32 0, i32 0
  %79 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %0, i64 0, i32 2, i32 0, i32 1
  %80 = bitcast %"class.tflite::RuntimeShape"*** %79 to i64*
  %81 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %6, i64 0, i32 0, i32 0
  %82 = zext i32 %9 to i64
  br label %222

83:                                               ; preds = %218, %60
  %84 = phi i64 [ 0, %60 ], [ %219, %218 ]
  %85 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %61, align 8
  %86 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2, i64 0, i32 1, i64 %84
  %87 = load i32, i32* %86, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88
  %90 = icmp eq %struct.TfLiteTensor* %89, null
  br i1 %90, label %95, label %91

91:                                               ; preds = %83
  %92 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88, i32 1
  %93 = bitcast %union.TfLitePtrUnion* %92 to i8**
  %94 = load i8*, i8** %93, align 8
  br label %95

95:                                               ; preds = %83, %91
  %96 = phi i8* [ %94, %91 ], [ null, %83 ]
  %97 = ptrtoint i8* %96 to i64
  %98 = load i8**, i8*** %62, align 8
  %99 = load i8**, i8*** %11, align 8
  %100 = icmp ult i8** %98, %99
  %101 = ptrtoint i8** %99 to i64
  br i1 %100, label %102, label %106

102:                                              ; preds = %95
  %103 = bitcast i8** %98 to i64*
  store i64 %97, i64* %103, align 8
  %104 = getelementptr inbounds i8*, i8** %98, i64 1
  %105 = ptrtoint i8** %104 to i64
  store i64 %105, i64* %63, align 8
  br label %159

106:                                              ; preds = %95
  %107 = ptrtoint i8** %98 to i64
  %108 = load i64, i64* %13, align 8
  %109 = sub i64 %107, %108
  %110 = ashr exact i64 %109, 3
  %111 = add nsw i64 %110, 1
  %112 = icmp ugt i64 %111, 2305843009213693951
  br i1 %112, label %113, label %115

113:                                              ; preds = %106
  %114 = bitcast %"class.tflite::VectorOfTensors"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %114) #12
  unreachable

115:                                              ; preds = %106
  %116 = sub i64 %101, %108
  %117 = ashr exact i64 %116, 3
  %118 = icmp ult i64 %117, 1152921504606846975
  br i1 %118, label %119, label %127

119:                                              ; preds = %115
  %120 = ashr exact i64 %116, 2
  %121 = icmp ult i64 %120, %111
  %122 = select i1 %121, i64 %111, i64 %120
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %132, label %124

124:                                              ; preds = %119
  %125 = icmp ugt i64 %122, 2305843009213693951
  br i1 %125, label %126, label %127

126:                                              ; preds = %124
  call void @abort() #12
  unreachable

127:                                              ; preds = %124, %115
  %128 = phi i64 [ %122, %124 ], [ 2305843009213693951, %115 ]
  %129 = shl i64 %128, 3
  %130 = call i8* @_Znwm(i64 %129) #11
  %131 = bitcast i8* %130 to i8**
  br label %132

132:                                              ; preds = %127, %119
  %133 = phi i64 [ %128, %127 ], [ 0, %119 ]
  %134 = phi i8** [ %131, %127 ], [ null, %119 ]
  %135 = getelementptr inbounds i8*, i8** %134, i64 %110
  %136 = getelementptr inbounds i8*, i8** %134, i64 %133
  %137 = ptrtoint i8** %136 to i64
  %138 = bitcast i8** %135 to i64*
  store i64 %97, i64* %138, align 8
  %139 = getelementptr inbounds i8*, i8** %135, i64 1
  %140 = ptrtoint i8** %139 to i64
  %141 = load i8**, i8*** %64, align 8
  %142 = load i64, i64* %63, align 8
  %143 = ptrtoint i8** %141 to i64
  %144 = sub i64 %142, %143
  %145 = ashr exact i64 %144, 3
  %146 = sub nsw i64 0, %145
  %147 = getelementptr inbounds i8*, i8** %135, i64 %146
  %148 = ptrtoint i8** %147 to i64
  %149 = icmp sgt i64 %144, 0
  br i1 %149, label %150, label %154

150:                                              ; preds = %132
  %151 = bitcast i8** %147 to i8*
  %152 = bitcast i8** %141 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %152, i64 %144, i1 false) #10
  %153 = load i8**, i8*** %64, align 8
  br label %154

154:                                              ; preds = %150, %132
  %155 = phi i8** [ %141, %132 ], [ %153, %150 ]
  store i64 %148, i64* %13, align 8
  store i64 %140, i64* %63, align 8
  store i64 %137, i64* %12, align 8
  %156 = icmp eq i8** %155, null
  br i1 %156, label %159, label %157

157:                                              ; preds = %154
  %158 = bitcast i8** %155 to i8*
  call void @_ZdlPv(i8* %158) #11
  br label %159

159:                                              ; preds = %102, %154, %157
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %65) #10
  br i1 %90, label %160, label %161

160:                                              ; preds = %159
  store i32 0, i32* %66, align 8, !alias.scope !2
  br label %177

161:                                              ; preds = %159
  %162 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88, i32 2
  %163 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %162, align 8, !noalias !2
  %164 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 0
  %165 = load i32, i32* %164, align 4, !noalias !2
  %166 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 1, i64 0
  store i32 %165, i32* %66, align 8, !alias.scope !2
  %167 = icmp sgt i32 %165, 5
  %168 = sext i32 %165 to i64
  %169 = shl nsw i64 %168, 2
  br i1 %167, label %170, label %173

170:                                              ; preds = %161
  %171 = call i8* @_Znam(i64 %169) #11, !noalias !2
  store i8* %171, i8** %70, align 8, !alias.scope !2
  %172 = bitcast i8* %171 to i32*
  br label %173

173:                                              ; preds = %161, %170
  %174 = phi i32* [ %172, %170 ], [ %68, %161 ]
  %175 = bitcast i32* %174 to i8*
  %176 = bitcast i32* %166 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %175, i8* align 4 %176, i64 %169, i1 false) #10
  br label %177

177:                                              ; preds = %160, %173
  %178 = phi i32 [ 0, %160 ], [ %165, %173 ]
  %179 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %71, align 8
  %180 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %72, align 8
  %181 = icmp ult %"class.tflite::RuntimeShape"* %179, %180
  br i1 %181, label %182, label %208

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 0
  store i32 %178, i32* %183, align 8
  %184 = icmp sgt i32 %178, 5
  br i1 %184, label %185, label %192

185:                                              ; preds = %182
  %186 = sext i32 %178 to i64
  %187 = shl nsw i64 %186, 2
  %188 = call i8* @_Znam(i64 %187) #11
  %189 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 1, i32 0
  %190 = bitcast i32** %189 to i8**
  store i8* %188, i8** %190, align 8
  %191 = bitcast i8* %188 to i32*
  br label %197

192:                                              ; preds = %182
  %193 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 1
  %194 = bitcast %union.anon* %193 to i32*
  %195 = sext i32 %178 to i64
  %196 = shl nsw i64 %195, 2
  br label %197

197:                                              ; preds = %192, %185
  %198 = phi i64 [ %187, %185 ], [ %196, %192 ]
  %199 = phi i32* [ %191, %185 ], [ %194, %192 ]
  %200 = bitcast i32* %199 to i8*
  %201 = load i32, i32* %66, align 8
  %202 = icmp sgt i32 %201, 5
  %203 = load i32*, i32** %73, align 8
  %204 = select i1 %202, i32* %203, i32* %68
  %205 = bitcast i32* %204 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %200, i8* align 4 %205, i64 %198, i1 false) #10
  %206 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 1
  %207 = ptrtoint %"class.tflite::RuntimeShape"* %206 to i64
  store i64 %207, i64* %74, align 8
  br label %210

208:                                              ; preds = %177
  call void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.2"* %5, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4) #10
  %209 = load i32, i32* %66, align 8
  br label %210

210:                                              ; preds = %197, %208
  %211 = phi i32 [ %201, %197 ], [ %209, %208 ]
  %212 = icmp sgt i32 %211, 5
  br i1 %212, label %213, label %218

213:                                              ; preds = %210
  %214 = load i32*, i32** %69, align 8
  %215 = icmp eq i32* %214, null
  br i1 %215, label %218, label %216

216:                                              ; preds = %213
  %217 = bitcast i32* %214 to i8*
  call void @_ZdaPv(i8* %217) #11
  br label %218

218:                                              ; preds = %210, %213, %216
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %65) #10
  %219 = add nuw nsw i64 %84, 1
  %220 = icmp eq i64 %219, %75
  br i1 %220, label %76, label %83

221:                                              ; preds = %288, %58, %76
  ret void

222:                                              ; preds = %288, %77
  %223 = phi i64 [ 0, %77 ], [ %289, %288 ]
  %224 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %78, align 8
  %225 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %224, i64 %223
  %226 = ptrtoint %"class.tflite::RuntimeShape"* %225 to i64
  %227 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %79, align 8
  %228 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %29, align 8
  %229 = icmp ult %"class.tflite::RuntimeShape"** %227, %228
  %230 = ptrtoint %"class.tflite::RuntimeShape"** %228 to i64
  br i1 %229, label %231, label %235

231:                                              ; preds = %222
  %232 = bitcast %"class.tflite::RuntimeShape"** %227 to i64*
  store i64 %226, i64* %232, align 8
  %233 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %227, i64 1
  %234 = ptrtoint %"class.tflite::RuntimeShape"** %233 to i64
  store i64 %234, i64* %80, align 8
  br label %288

235:                                              ; preds = %222
  %236 = ptrtoint %"class.tflite::RuntimeShape"** %227 to i64
  %237 = load i64, i64* %32, align 8
  %238 = sub i64 %236, %237
  %239 = ashr exact i64 %238, 3
  %240 = add nsw i64 %239, 1
  %241 = icmp ugt i64 %240, 2305843009213693951
  br i1 %241, label %242, label %244

242:                                              ; preds = %235
  %243 = bitcast %"class.std::__1::vector.9"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %243) #12
  unreachable

244:                                              ; preds = %235
  %245 = sub i64 %230, %237
  %246 = ashr exact i64 %245, 3
  %247 = icmp ult i64 %246, 1152921504606846975
  br i1 %247, label %248, label %256

248:                                              ; preds = %244
  %249 = ashr exact i64 %245, 2
  %250 = icmp ult i64 %249, %240
  %251 = select i1 %250, i64 %240, i64 %249
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %261, label %253

253:                                              ; preds = %248
  %254 = icmp ugt i64 %251, 2305843009213693951
  br i1 %254, label %255, label %256

255:                                              ; preds = %253
  call void @abort() #12
  unreachable

256:                                              ; preds = %253, %244
  %257 = phi i64 [ %251, %253 ], [ 2305843009213693951, %244 ]
  %258 = shl i64 %257, 3
  %259 = call i8* @_Znwm(i64 %258) #11
  %260 = bitcast i8* %259 to %"class.tflite::RuntimeShape"**
  br label %261

261:                                              ; preds = %256, %248
  %262 = phi i64 [ %257, %256 ], [ 0, %248 ]
  %263 = phi %"class.tflite::RuntimeShape"** [ %260, %256 ], [ null, %248 ]
  %264 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %263, i64 %239
  %265 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %263, i64 %262
  %266 = ptrtoint %"class.tflite::RuntimeShape"** %265 to i64
  %267 = bitcast %"class.tflite::RuntimeShape"** %264 to i64*
  store i64 %226, i64* %267, align 8
  %268 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %264, i64 1
  %269 = ptrtoint %"class.tflite::RuntimeShape"** %268 to i64
  %270 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %81, align 8
  %271 = load i64, i64* %80, align 8
  %272 = ptrtoint %"class.tflite::RuntimeShape"** %270 to i64
  %273 = sub i64 %271, %272
  %274 = ashr exact i64 %273, 3
  %275 = sub nsw i64 0, %274
  %276 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %264, i64 %275
  %277 = ptrtoint %"class.tflite::RuntimeShape"** %276 to i64
  %278 = icmp sgt i64 %273, 0
  br i1 %278, label %279, label %283

279:                                              ; preds = %261
  %280 = bitcast %"class.tflite::RuntimeShape"** %276 to i8*
  %281 = bitcast %"class.tflite::RuntimeShape"** %270 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %280, i8* align 8 %281, i64 %273, i1 false) #10
  %282 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %81, align 8
  br label %283

283:                                              ; preds = %279, %261
  %284 = phi %"class.tflite::RuntimeShape"** [ %270, %261 ], [ %282, %279 ]
  store i64 %277, i64* %32, align 8
  store i64 %269, i64* %80, align 8
  store i64 %266, i64* %30, align 8
  %285 = icmp eq %"class.tflite::RuntimeShape"** %284, null
  br i1 %285, label %288, label %286

286:                                              ; preds = %283
  %287 = bitcast %"class.tflite::RuntimeShape"** %284 to i8*
  call void @_ZdlPv(i8* %287) #11
  br label %288

288:                                              ; preds = %231, %283, %286
  %289 = add nuw nsw i64 %223, 1
  %290 = icmp eq i64 %289, %82
  br i1 %290, label %221, label %222
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin26Register_CONCATENATION_REFEv() local_unnamed_addr #3 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin26Register_CONCATENATION_REFEvE1r to %struct.TfLiteRegistration*)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin13concatenation4EvalILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) #0 comdat {
  %3 = alloca %"class.tflite::VectorOfTensors.24", align 8
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = alloca %"class.tflite::VectorOfTensors.32", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"class.tflite::VectorOfQuantizedTensors", align 8
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca %"class.tflite::VectorOfTensors", align 8
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"class.tflite::VectorOfTensors.62", align 8
  %12 = alloca %"class.tflite::RuntimeShape", align 8
  %13 = alloca %"class.tflite::VectorOfTensors.70", align 8
  %14 = alloca %"class.tflite::RuntimeShape", align 8
  %15 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %16 = bitcast i8** %15 to %struct.TfLiteConcatenationParams**
  %17 = load %struct.TfLiteConcatenationParams*, %struct.TfLiteConcatenationParams** %16, align 8
  %18 = getelementptr inbounds %struct.TfLiteConcatenationParams, %struct.TfLiteConcatenationParams* %17, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %21 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %20, align 8
  %22 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %21, i64 0, i32 1, i64 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp slt i32 %23, 0
  br i1 %24, label %30, label %25

25:                                               ; preds = %2
  %26 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %27 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %26, align 8
  %28 = sext i32 %23 to i64
  %29 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %27, i64 %28
  br label %30

30:                                               ; preds = %2, %25
  %31 = phi %struct.TfLiteTensor* [ %29, %25 ], [ null, %2 ]
  %32 = icmp slt i32 %19, 0
  br i1 %32, label %33, label %39

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %31, i64 0, i32 2
  %35 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %34, align 8
  %36 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %35, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = add nsw i32 %37, %19
  br label %39

39:                                               ; preds = %33, %30
  %40 = phi i32 [ %38, %33 ], [ %19, %30 ]
  %41 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %31, i64 0, i32 0
  %42 = load i32, i32* %41, align 8
  switch i32 %42, label %1907 [
    i32 1, label %43
    i32 2, label %338
    i32 3, label %632
    i32 9, label %1025
    i32 4, label %1317
    i32 7, label %1612
  ]

43:                                               ; preds = %39
  %44 = bitcast %"class.tflite::VectorOfTensors.24"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %44) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 72, i1 false)
  %45 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %46 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %45, align 8
  call void @_ZN6tflite15VectorOfTensorsIfEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors.24"* nonnull %3, %struct.TfLiteContext* dereferenceable(160) %0, %struct.TfLiteIntArray* dereferenceable(4) %46)
  %47 = trunc i32 %40 to i8
  %48 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %45, align 8
  %49 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %48, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = trunc i32 %50 to i16
  %52 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %3, i64 0, i32 2, i32 0, i32 0
  %53 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %52, align 8
  %54 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %3, i64 0, i32 0, i32 0, i32 0
  %55 = load float**, float*** %54, align 8
  %56 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %56) #10
  %57 = icmp eq %struct.TfLiteTensor* %31, null
  br i1 %57, label %58, label %60

58:                                               ; preds = %43
  %59 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %59, align 8, !alias.scope !5
  br label %88

60:                                               ; preds = %43
  %61 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %31, i64 0, i32 2
  %62 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %61, align 8, !noalias !5
  %63 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %62, i64 0, i32 0
  %64 = load i32, i32* %63, align 4, !noalias !5
  %65 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %62, i64 0, i32 1, i64 0
  %66 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %64, i32* %66, align 8, !alias.scope !5
  %67 = icmp sgt i32 %64, 5
  br i1 %67, label %68, label %75

68:                                               ; preds = %60
  %69 = sext i32 %64 to i64
  %70 = shl nsw i64 %69, 2
  %71 = call i8* @_Znam(i64 %70) #11, !noalias !5
  %72 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %73 = bitcast i32** %72 to i8**
  store i8* %71, i8** %73, align 8, !alias.scope !5
  %74 = bitcast i8* %71 to i32*
  br label %80

75:                                               ; preds = %60
  %76 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %77 = bitcast %union.anon* %76 to i32*
  %78 = sext i32 %64 to i64
  %79 = shl nsw i64 %78, 2
  br label %80

80:                                               ; preds = %75, %68
  %81 = phi i64 [ %70, %68 ], [ %79, %75 ]
  %82 = phi i32* [ %74, %68 ], [ %77, %75 ]
  %83 = bitcast i32* %82 to i8*
  %84 = bitcast i32* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %83, i8* align 4 %84, i64 %81, i1 false) #10
  %85 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %31, i64 0, i32 1
  %86 = bitcast %union.TfLitePtrUnion* %85 to float**
  %87 = load float*, float** %86, align 8
  br label %88

88:                                               ; preds = %58, %80
  %89 = phi i32 [ %64, %80 ], [ 0, %58 ]
  %90 = phi float* [ %87, %80 ], [ null, %58 ]
  %91 = shl i32 %40, 24
  %92 = ashr exact i32 %91, 24
  %93 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %94 = icmp eq i16 %51, 0
  %95 = icmp sgt i32 %89, 5
  %96 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %97 = icmp sgt i8 %47, 0
  br i1 %97, label %98, label %126

98:                                               ; preds = %88
  %99 = getelementptr inbounds %union.anon, %union.anon* %96, i64 0, i32 0
  %100 = load i32*, i32** %99, align 8
  %101 = bitcast %union.anon* %96 to [5 x i32]*
  %102 = zext i32 %92 to i64
  %103 = add nsw i64 %102, -1
  %104 = and i64 %102, 3
  %105 = icmp ult i64 %103, 3
  br i1 %105, label %108, label %106

106:                                              ; preds = %98
  %107 = sub nsw i64 %102, %104
  br label %144

108:                                              ; preds = %144, %98
  %109 = phi i64 [ undef, %98 ], [ %174, %144 ]
  %110 = phi i64 [ 0, %98 ], [ %175, %144 ]
  %111 = phi i64 [ 1, %98 ], [ %174, %144 ]
  %112 = icmp eq i64 %104, 0
  br i1 %112, label %126, label %113

113:                                              ; preds = %108, %113
  %114 = phi i64 [ %123, %113 ], [ %110, %108 ]
  %115 = phi i64 [ %122, %113 ], [ %111, %108 ]
  %116 = phi i64 [ %124, %113 ], [ %104, %108 ]
  %117 = getelementptr inbounds i32, i32* %100, i64 %114
  %118 = getelementptr inbounds [5 x i32], [5 x i32]* %101, i64 0, i64 %114
  %119 = select i1 %95, i32* %117, i32* %118
  %120 = load i32, i32* %119, align 4
  %121 = sext i32 %120 to i64
  %122 = mul nsw i64 %115, %121
  %123 = add nuw nsw i64 %114, 1
  %124 = add i64 %116, -1
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %126, label %113, !llvm.loop !8

126:                                              ; preds = %108, %113, %88
  %127 = phi i64 [ 1, %88 ], [ %109, %108 ], [ %122, %113 ]
  %128 = add nsw i32 %92, 1
  %129 = icmp slt i32 %128, %89
  br i1 %129, label %130, label %199

130:                                              ; preds = %126
  %131 = getelementptr inbounds %union.anon, %union.anon* %96, i64 0, i32 0
  %132 = load i32*, i32** %131, align 8
  %133 = bitcast %union.anon* %96 to [5 x i32]*
  %134 = sext i8 %47 to i64
  %135 = add nsw i64 %134, 1
  %136 = xor i32 %92, -1
  %137 = add i32 %89, %136
  %138 = add i32 %89, -2
  %139 = sub i32 %138, %92
  %140 = and i32 %137, 3
  %141 = icmp ult i32 %139, 3
  br i1 %141, label %178, label %142

142:                                              ; preds = %130
  %143 = sub i32 %137, %140
  br label %206

144:                                              ; preds = %144, %106
  %145 = phi i64 [ 0, %106 ], [ %175, %144 ]
  %146 = phi i64 [ 1, %106 ], [ %174, %144 ]
  %147 = phi i64 [ %107, %106 ], [ %176, %144 ]
  %148 = getelementptr inbounds i32, i32* %100, i64 %145
  %149 = getelementptr inbounds [5 x i32], [5 x i32]* %101, i64 0, i64 %145
  %150 = select i1 %95, i32* %148, i32* %149
  %151 = load i32, i32* %150, align 4
  %152 = sext i32 %151 to i64
  %153 = mul nsw i64 %146, %152
  %154 = or i64 %145, 1
  %155 = getelementptr inbounds i32, i32* %100, i64 %154
  %156 = getelementptr inbounds [5 x i32], [5 x i32]* %101, i64 0, i64 %154
  %157 = select i1 %95, i32* %155, i32* %156
  %158 = load i32, i32* %157, align 4
  %159 = sext i32 %158 to i64
  %160 = mul nsw i64 %153, %159
  %161 = or i64 %145, 2
  %162 = getelementptr inbounds i32, i32* %100, i64 %161
  %163 = getelementptr inbounds [5 x i32], [5 x i32]* %101, i64 0, i64 %161
  %164 = select i1 %95, i32* %162, i32* %163
  %165 = load i32, i32* %164, align 4
  %166 = sext i32 %165 to i64
  %167 = mul nsw i64 %160, %166
  %168 = or i64 %145, 3
  %169 = getelementptr inbounds i32, i32* %100, i64 %168
  %170 = getelementptr inbounds [5 x i32], [5 x i32]* %101, i64 0, i64 %168
  %171 = select i1 %95, i32* %169, i32* %170
  %172 = load i32, i32* %171, align 4
  %173 = sext i32 %172 to i64
  %174 = mul nsw i64 %167, %173
  %175 = add nuw nsw i64 %145, 4
  %176 = add i64 %147, -4
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %108, label %144

178:                                              ; preds = %206, %130
  %179 = phi i64 [ undef, %130 ], [ %236, %206 ]
  %180 = phi i64 [ %135, %130 ], [ %237, %206 ]
  %181 = phi i64 [ 1, %130 ], [ %236, %206 ]
  %182 = icmp eq i32 %140, 0
  br i1 %182, label %196, label %183

183:                                              ; preds = %178, %183
  %184 = phi i64 [ %193, %183 ], [ %180, %178 ]
  %185 = phi i64 [ %192, %183 ], [ %181, %178 ]
  %186 = phi i32 [ %194, %183 ], [ %140, %178 ]
  %187 = getelementptr inbounds i32, i32* %132, i64 %184
  %188 = getelementptr inbounds [5 x i32], [5 x i32]* %133, i64 0, i64 %184
  %189 = select i1 %95, i32* %187, i32* %188
  %190 = load i32, i32* %189, align 4
  %191 = sext i32 %190 to i64
  %192 = mul nsw i64 %185, %191
  %193 = add i64 %184, 1
  %194 = add i32 %186, -1
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %183, !llvm.loop !10

196:                                              ; preds = %183, %178
  %197 = phi i64 [ %179, %178 ], [ %192, %183 ]
  %198 = trunc i64 %197 to i32
  br label %199

199:                                              ; preds = %196, %126
  %200 = phi i32 [ 1, %126 ], [ %198, %196 ]
  %201 = icmp sgt i64 %127, 0
  br i1 %201, label %202, label %283

202:                                              ; preds = %199
  %203 = sext i8 %47 to i64
  %204 = and i32 %50, 65535
  %205 = zext i32 %204 to i64
  br label %240

206:                                              ; preds = %206, %142
  %207 = phi i64 [ %135, %142 ], [ %237, %206 ]
  %208 = phi i64 [ 1, %142 ], [ %236, %206 ]
  %209 = phi i32 [ %143, %142 ], [ %238, %206 ]
  %210 = getelementptr inbounds i32, i32* %132, i64 %207
  %211 = getelementptr inbounds [5 x i32], [5 x i32]* %133, i64 0, i64 %207
  %212 = select i1 %95, i32* %210, i32* %211
  %213 = load i32, i32* %212, align 4
  %214 = sext i32 %213 to i64
  %215 = mul nsw i64 %208, %214
  %216 = add i64 %207, 1
  %217 = getelementptr inbounds i32, i32* %132, i64 %216
  %218 = getelementptr inbounds [5 x i32], [5 x i32]* %133, i64 0, i64 %216
  %219 = select i1 %95, i32* %217, i32* %218
  %220 = load i32, i32* %219, align 4
  %221 = sext i32 %220 to i64
  %222 = mul nsw i64 %215, %221
  %223 = add i64 %207, 2
  %224 = getelementptr inbounds i32, i32* %132, i64 %223
  %225 = getelementptr inbounds [5 x i32], [5 x i32]* %133, i64 0, i64 %223
  %226 = select i1 %95, i32* %224, i32* %225
  %227 = load i32, i32* %226, align 4
  %228 = sext i32 %227 to i64
  %229 = mul nsw i64 %222, %228
  %230 = add i64 %207, 3
  %231 = getelementptr inbounds i32, i32* %132, i64 %230
  %232 = getelementptr inbounds [5 x i32], [5 x i32]* %133, i64 0, i64 %230
  %233 = select i1 %95, i32* %231, i32* %232
  %234 = load i32, i32* %233, align 4
  %235 = sext i32 %234 to i64
  %236 = mul nsw i64 %229, %235
  %237 = add i64 %207, 4
  %238 = add i32 %209, -4
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %178, label %206

240:                                              ; preds = %245, %202
  %241 = phi i64 [ 0, %202 ], [ %247, %245 ]
  %242 = phi float* [ %90, %202 ], [ %246, %245 ]
  br i1 %94, label %245, label %243

243:                                              ; preds = %240
  %244 = trunc i64 %241 to i32
  br label %249

245:                                              ; preds = %265, %240
  %246 = phi float* [ %242, %240 ], [ %278, %265 ]
  %247 = add nuw nsw i64 %241, 1
  %248 = icmp eq i64 %247, %127
  br i1 %248, label %281, label %240

249:                                              ; preds = %265, %243
  %250 = phi i64 [ 0, %243 ], [ %279, %265 ]
  %251 = phi float* [ %242, %243 ], [ %278, %265 ]
  %252 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %53, i64 %250
  %253 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %252, align 8
  %254 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %253, i64 0, i32 0
  %255 = load i32, i32* %254, align 8
  %256 = icmp sgt i32 %255, 5
  %257 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %253, i64 0, i32 1
  br i1 %256, label %258, label %262

258:                                              ; preds = %249
  %259 = getelementptr inbounds %union.anon, %union.anon* %257, i64 0, i32 0
  %260 = load i32*, i32** %259, align 8
  %261 = getelementptr inbounds i32, i32* %260, i64 %203
  br label %265

262:                                              ; preds = %249
  %263 = bitcast %union.anon* %257 to [5 x i32]*
  %264 = getelementptr inbounds [5 x i32], [5 x i32]* %263, i64 0, i64 %203
  br label %265

265:                                              ; preds = %262, %258
  %266 = phi i32* [ %261, %258 ], [ %264, %262 ]
  %267 = load i32, i32* %266, align 4
  %268 = mul i32 %267, %200
  %269 = getelementptr inbounds float*, float** %55, i64 %250
  %270 = load float*, float** %269, align 8
  %271 = mul nsw i32 %268, %244
  %272 = sext i32 %271 to i64
  %273 = getelementptr inbounds float, float* %270, i64 %272
  %274 = bitcast float* %251 to i8*
  %275 = bitcast float* %273 to i8*
  %276 = sext i32 %268 to i64
  %277 = shl nsw i64 %276, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %274, i8* align 4 %275, i64 %277, i1 false) #10
  %278 = getelementptr inbounds float, float* %251, i64 %276
  %279 = add nuw nsw i64 %250, 1
  %280 = icmp eq i64 %279, %205
  br i1 %280, label %245, label %249

281:                                              ; preds = %245
  %282 = load i32, i32* %93, align 8
  br label %283

283:                                              ; preds = %281, %199
  %284 = phi i32 [ %282, %281 ], [ %89, %199 ]
  %285 = icmp sgt i32 %284, 5
  br i1 %285, label %286, label %292

286:                                              ; preds = %283
  %287 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %288 = load i32*, i32** %287, align 8
  %289 = icmp eq i32* %288, null
  br i1 %289, label %292, label %290

290:                                              ; preds = %286
  %291 = bitcast i32* %288 to i8*
  call void @_ZdaPv(i8* %291) #11
  br label %292

292:                                              ; preds = %283, %286, %290
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %56) #10
  %293 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %52, align 8
  %294 = icmp eq %"class.tflite::RuntimeShape"** %293, null
  br i1 %294, label %300, label %295

295:                                              ; preds = %292
  %296 = ptrtoint %"class.tflite::RuntimeShape"** %293 to i64
  %297 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %3, i64 0, i32 2, i32 0, i32 1
  %298 = bitcast %"class.tflite::RuntimeShape"*** %297 to i64*
  store i64 %296, i64* %298, align 8
  %299 = bitcast %"class.tflite::RuntimeShape"** %293 to i8*
  call void @_ZdlPv(i8* %299) #11
  br label %300

300:                                              ; preds = %295, %292
  %301 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %3, i64 0, i32 1
  %302 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %301, i64 0, i32 0, i32 0
  %303 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %302, align 8
  %304 = icmp eq %"class.tflite::RuntimeShape"* %303, null
  br i1 %304, label %329, label %305

305:                                              ; preds = %300
  %306 = bitcast %"class.tflite::RuntimeShape"* %303 to i8*
  %307 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %3, i64 0, i32 1, i32 0, i32 1
  %308 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %307, align 8
  %309 = icmp eq %"class.tflite::RuntimeShape"* %308, %303
  br i1 %309, label %327, label %310

310:                                              ; preds = %305, %322
  %311 = phi %"class.tflite::RuntimeShape"* [ %312, %322 ], [ %308, %305 ]
  %312 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %311, i64 -1
  %313 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %312, i64 0, i32 0
  %314 = load i32, i32* %313, align 8
  %315 = icmp sgt i32 %314, 5
  br i1 %315, label %316, label %322

316:                                              ; preds = %310
  %317 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %311, i64 -1, i32 1, i32 0
  %318 = load i32*, i32** %317, align 8
  %319 = icmp eq i32* %318, null
  br i1 %319, label %322, label %320

320:                                              ; preds = %316
  %321 = bitcast i32* %318 to i8*
  call void @_ZdaPv(i8* %321) #11
  br label %322

322:                                              ; preds = %320, %316, %310
  %323 = icmp eq %"class.tflite::RuntimeShape"* %312, %303
  br i1 %323, label %324, label %310

324:                                              ; preds = %322
  %325 = bitcast %"class.std::__1::vector.2"* %301 to i8**
  %326 = load i8*, i8** %325, align 8
  br label %327

327:                                              ; preds = %324, %305
  %328 = phi i8* [ %326, %324 ], [ %306, %305 ]
  store %"class.tflite::RuntimeShape"* %303, %"class.tflite::RuntimeShape"** %307, align 8
  call void @_ZdlPv(i8* %328) #11
  br label %329

329:                                              ; preds = %327, %300
  %330 = load float**, float*** %54, align 8
  %331 = icmp eq float** %330, null
  br i1 %331, label %337, label %332

332:                                              ; preds = %329
  %333 = ptrtoint float** %330 to i64
  %334 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %3, i64 0, i32 0, i32 0, i32 1
  %335 = bitcast float*** %334 to i64*
  store i64 %333, i64* %335, align 8
  %336 = bitcast float** %330 to i8*
  call void @_ZdlPv(i8* %336) #11
  br label %337

337:                                              ; preds = %329, %332
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %44) #10
  br label %1911

338:                                              ; preds = %39
  %339 = bitcast %"class.tflite::VectorOfTensors.32"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %339) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %339, i8 -86, i64 72, i1 false)
  %340 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %341 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %340, align 8
  call void @_ZN6tflite15VectorOfTensorsIiEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors.32"* nonnull %5, %struct.TfLiteContext* dereferenceable(160) %0, %struct.TfLiteIntArray* dereferenceable(4) %341)
  %342 = trunc i32 %40 to i8
  %343 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %340, align 8
  %344 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %343, i64 0, i32 0
  %345 = load i32, i32* %344, align 4
  %346 = trunc i32 %345 to i16
  %347 = getelementptr inbounds %"class.tflite::VectorOfTensors.32", %"class.tflite::VectorOfTensors.32"* %5, i64 0, i32 2, i32 0, i32 0
  %348 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %347, align 8
  %349 = getelementptr inbounds %"class.tflite::VectorOfTensors.32", %"class.tflite::VectorOfTensors.32"* %5, i64 0, i32 0, i32 0, i32 0
  %350 = load i32**, i32*** %349, align 8
  %351 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %351) #10
  %352 = icmp eq %struct.TfLiteTensor* %31, null
  br i1 %352, label %353, label %355

353:                                              ; preds = %338
  %354 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %354, align 8, !alias.scope !11
  br label %382

355:                                              ; preds = %338
  %356 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %31, i64 0, i32 2
  %357 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %356, align 8, !noalias !11
  %358 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %357, i64 0, i32 0
  %359 = load i32, i32* %358, align 4, !noalias !11
  %360 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %357, i64 0, i32 1, i64 0
  %361 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %359, i32* %361, align 8, !alias.scope !11
  %362 = icmp sgt i32 %359, 5
  br i1 %362, label %363, label %370

363:                                              ; preds = %355
  %364 = sext i32 %359 to i64
  %365 = shl nsw i64 %364, 2
  %366 = call i8* @_Znam(i64 %365) #11, !noalias !11
  %367 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %368 = bitcast i32** %367 to i8**
  store i8* %366, i8** %368, align 8, !alias.scope !11
  %369 = bitcast i8* %366 to i32*
  br label %375

370:                                              ; preds = %355
  %371 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %372 = bitcast %union.anon* %371 to i32*
  %373 = sext i32 %359 to i64
  %374 = shl nsw i64 %373, 2
  br label %375

375:                                              ; preds = %370, %363
  %376 = phi i64 [ %365, %363 ], [ %374, %370 ]
  %377 = phi i32* [ %369, %363 ], [ %372, %370 ]
  %378 = bitcast i32* %377 to i8*
  %379 = bitcast i32* %360 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %378, i8* align 4 %379, i64 %376, i1 false) #10
  %380 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %31, i64 0, i32 1, i32 0
  %381 = load i32*, i32** %380, align 8
  br label %382

382:                                              ; preds = %353, %375
  %383 = phi i32 [ %359, %375 ], [ 0, %353 ]
  %384 = phi i32* [ %381, %375 ], [ null, %353 ]
  %385 = shl i32 %40, 24
  %386 = ashr exact i32 %385, 24
  %387 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %388 = icmp eq i16 %346, 0
  %389 = icmp sgt i32 %383, 5
  %390 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %391 = icmp sgt i8 %342, 0
  br i1 %391, label %392, label %420

392:                                              ; preds = %382
  %393 = getelementptr inbounds %union.anon, %union.anon* %390, i64 0, i32 0
  %394 = load i32*, i32** %393, align 8
  %395 = bitcast %union.anon* %390 to [5 x i32]*
  %396 = zext i32 %386 to i64
  %397 = add nsw i64 %396, -1
  %398 = and i64 %396, 3
  %399 = icmp ult i64 %397, 3
  br i1 %399, label %402, label %400

400:                                              ; preds = %392
  %401 = sub nsw i64 %396, %398
  br label %438

402:                                              ; preds = %438, %392
  %403 = phi i64 [ undef, %392 ], [ %468, %438 ]
  %404 = phi i64 [ 0, %392 ], [ %469, %438 ]
  %405 = phi i64 [ 1, %392 ], [ %468, %438 ]
  %406 = icmp eq i64 %398, 0
  br i1 %406, label %420, label %407

407:                                              ; preds = %402, %407
  %408 = phi i64 [ %417, %407 ], [ %404, %402 ]
  %409 = phi i64 [ %416, %407 ], [ %405, %402 ]
  %410 = phi i64 [ %418, %407 ], [ %398, %402 ]
  %411 = getelementptr inbounds i32, i32* %394, i64 %408
  %412 = getelementptr inbounds [5 x i32], [5 x i32]* %395, i64 0, i64 %408
  %413 = select i1 %389, i32* %411, i32* %412
  %414 = load i32, i32* %413, align 4
  %415 = sext i32 %414 to i64
  %416 = mul nsw i64 %409, %415
  %417 = add nuw nsw i64 %408, 1
  %418 = add i64 %410, -1
  %419 = icmp eq i64 %418, 0
  br i1 %419, label %420, label %407, !llvm.loop !14

420:                                              ; preds = %402, %407, %382
  %421 = phi i64 [ 1, %382 ], [ %403, %402 ], [ %416, %407 ]
  %422 = add nsw i32 %386, 1
  %423 = icmp slt i32 %422, %383
  br i1 %423, label %424, label %493

424:                                              ; preds = %420
  %425 = getelementptr inbounds %union.anon, %union.anon* %390, i64 0, i32 0
  %426 = load i32*, i32** %425, align 8
  %427 = bitcast %union.anon* %390 to [5 x i32]*
  %428 = sext i8 %342 to i64
  %429 = add nsw i64 %428, 1
  %430 = xor i32 %386, -1
  %431 = add i32 %383, %430
  %432 = add i32 %383, -2
  %433 = sub i32 %432, %386
  %434 = and i32 %431, 3
  %435 = icmp ult i32 %433, 3
  br i1 %435, label %472, label %436

436:                                              ; preds = %424
  %437 = sub i32 %431, %434
  br label %500

438:                                              ; preds = %438, %400
  %439 = phi i64 [ 0, %400 ], [ %469, %438 ]
  %440 = phi i64 [ 1, %400 ], [ %468, %438 ]
  %441 = phi i64 [ %401, %400 ], [ %470, %438 ]
  %442 = getelementptr inbounds i32, i32* %394, i64 %439
  %443 = getelementptr inbounds [5 x i32], [5 x i32]* %395, i64 0, i64 %439
  %444 = select i1 %389, i32* %442, i32* %443
  %445 = load i32, i32* %444, align 4
  %446 = sext i32 %445 to i64
  %447 = mul nsw i64 %440, %446
  %448 = or i64 %439, 1
  %449 = getelementptr inbounds i32, i32* %394, i64 %448
  %450 = getelementptr inbounds [5 x i32], [5 x i32]* %395, i64 0, i64 %448
  %451 = select i1 %389, i32* %449, i32* %450
  %452 = load i32, i32* %451, align 4
  %453 = sext i32 %452 to i64
  %454 = mul nsw i64 %447, %453
  %455 = or i64 %439, 2
  %456 = getelementptr inbounds i32, i32* %394, i64 %455
  %457 = getelementptr inbounds [5 x i32], [5 x i32]* %395, i64 0, i64 %455
  %458 = select i1 %389, i32* %456, i32* %457
  %459 = load i32, i32* %458, align 4
  %460 = sext i32 %459 to i64
  %461 = mul nsw i64 %454, %460
  %462 = or i64 %439, 3
  %463 = getelementptr inbounds i32, i32* %394, i64 %462
  %464 = getelementptr inbounds [5 x i32], [5 x i32]* %395, i64 0, i64 %462
  %465 = select i1 %389, i32* %463, i32* %464
  %466 = load i32, i32* %465, align 4
  %467 = sext i32 %466 to i64
  %468 = mul nsw i64 %461, %467
  %469 = add nuw nsw i64 %439, 4
  %470 = add i64 %441, -4
  %471 = icmp eq i64 %470, 0
  br i1 %471, label %402, label %438

472:                                              ; preds = %500, %424
  %473 = phi i64 [ undef, %424 ], [ %530, %500 ]
  %474 = phi i64 [ %429, %424 ], [ %531, %500 ]
  %475 = phi i64 [ 1, %424 ], [ %530, %500 ]
  %476 = icmp eq i32 %434, 0
  br i1 %476, label %490, label %477

477:                                              ; preds = %472, %477
  %478 = phi i64 [ %487, %477 ], [ %474, %472 ]
  %479 = phi i64 [ %486, %477 ], [ %475, %472 ]
  %480 = phi i32 [ %488, %477 ], [ %434, %472 ]
  %481 = getelementptr inbounds i32, i32* %426, i64 %478
  %482 = getelementptr inbounds [5 x i32], [5 x i32]* %427, i64 0, i64 %478
  %483 = select i1 %389, i32* %481, i32* %482
  %484 = load i32, i32* %483, align 4
  %485 = sext i32 %484 to i64
  %486 = mul nsw i64 %479, %485
  %487 = add i64 %478, 1
  %488 = add i32 %480, -1
  %489 = icmp eq i32 %488, 0
  br i1 %489, label %490, label %477, !llvm.loop !15

490:                                              ; preds = %477, %472
  %491 = phi i64 [ %473, %472 ], [ %486, %477 ]
  %492 = trunc i64 %491 to i32
  br label %493

493:                                              ; preds = %490, %420
  %494 = phi i32 [ 1, %420 ], [ %492, %490 ]
  %495 = icmp sgt i64 %421, 0
  br i1 %495, label %496, label %577

496:                                              ; preds = %493
  %497 = sext i8 %342 to i64
  %498 = and i32 %345, 65535
  %499 = zext i32 %498 to i64
  br label %534

500:                                              ; preds = %500, %436
  %501 = phi i64 [ %429, %436 ], [ %531, %500 ]
  %502 = phi i64 [ 1, %436 ], [ %530, %500 ]
  %503 = phi i32 [ %437, %436 ], [ %532, %500 ]
  %504 = getelementptr inbounds i32, i32* %426, i64 %501
  %505 = getelementptr inbounds [5 x i32], [5 x i32]* %427, i64 0, i64 %501
  %506 = select i1 %389, i32* %504, i32* %505
  %507 = load i32, i32* %506, align 4
  %508 = sext i32 %507 to i64
  %509 = mul nsw i64 %502, %508
  %510 = add i64 %501, 1
  %511 = getelementptr inbounds i32, i32* %426, i64 %510
  %512 = getelementptr inbounds [5 x i32], [5 x i32]* %427, i64 0, i64 %510
  %513 = select i1 %389, i32* %511, i32* %512
  %514 = load i32, i32* %513, align 4
  %515 = sext i32 %514 to i64
  %516 = mul nsw i64 %509, %515
  %517 = add i64 %501, 2
  %518 = getelementptr inbounds i32, i32* %426, i64 %517
  %519 = getelementptr inbounds [5 x i32], [5 x i32]* %427, i64 0, i64 %517
  %520 = select i1 %389, i32* %518, i32* %519
  %521 = load i32, i32* %520, align 4
  %522 = sext i32 %521 to i64
  %523 = mul nsw i64 %516, %522
  %524 = add i64 %501, 3
  %525 = getelementptr inbounds i32, i32* %426, i64 %524
  %526 = getelementptr inbounds [5 x i32], [5 x i32]* %427, i64 0, i64 %524
  %527 = select i1 %389, i32* %525, i32* %526
  %528 = load i32, i32* %527, align 4
  %529 = sext i32 %528 to i64
  %530 = mul nsw i64 %523, %529
  %531 = add i64 %501, 4
  %532 = add i32 %503, -4
  %533 = icmp eq i32 %532, 0
  br i1 %533, label %472, label %500

534:                                              ; preds = %539, %496
  %535 = phi i64 [ 0, %496 ], [ %541, %539 ]
  %536 = phi i32* [ %384, %496 ], [ %540, %539 ]
  br i1 %388, label %539, label %537

537:                                              ; preds = %534
  %538 = trunc i64 %535 to i32
  br label %543

539:                                              ; preds = %559, %534
  %540 = phi i32* [ %536, %534 ], [ %572, %559 ]
  %541 = add nuw nsw i64 %535, 1
  %542 = icmp eq i64 %541, %421
  br i1 %542, label %575, label %534

543:                                              ; preds = %559, %537
  %544 = phi i64 [ 0, %537 ], [ %573, %559 ]
  %545 = phi i32* [ %536, %537 ], [ %572, %559 ]
  %546 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %348, i64 %544
  %547 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %546, align 8
  %548 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %547, i64 0, i32 0
  %549 = load i32, i32* %548, align 8
  %550 = icmp sgt i32 %549, 5
  %551 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %547, i64 0, i32 1
  br i1 %550, label %552, label %556

552:                                              ; preds = %543
  %553 = getelementptr inbounds %union.anon, %union.anon* %551, i64 0, i32 0
  %554 = load i32*, i32** %553, align 8
  %555 = getelementptr inbounds i32, i32* %554, i64 %497
  br label %559

556:                                              ; preds = %543
  %557 = bitcast %union.anon* %551 to [5 x i32]*
  %558 = getelementptr inbounds [5 x i32], [5 x i32]* %557, i64 0, i64 %497
  br label %559

559:                                              ; preds = %556, %552
  %560 = phi i32* [ %555, %552 ], [ %558, %556 ]
  %561 = load i32, i32* %560, align 4
  %562 = mul i32 %561, %494
  %563 = getelementptr inbounds i32*, i32** %350, i64 %544
  %564 = load i32*, i32** %563, align 8
  %565 = mul nsw i32 %562, %538
  %566 = sext i32 %565 to i64
  %567 = getelementptr inbounds i32, i32* %564, i64 %566
  %568 = bitcast i32* %545 to i8*
  %569 = bitcast i32* %567 to i8*
  %570 = sext i32 %562 to i64
  %571 = shl nsw i64 %570, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %568, i8* align 4 %569, i64 %571, i1 false) #10
  %572 = getelementptr inbounds i32, i32* %545, i64 %570
  %573 = add nuw nsw i64 %544, 1
  %574 = icmp eq i64 %573, %499
  br i1 %574, label %539, label %543

575:                                              ; preds = %539
  %576 = load i32, i32* %387, align 8
  br label %577

577:                                              ; preds = %575, %493
  %578 = phi i32 [ %576, %575 ], [ %383, %493 ]
  %579 = icmp sgt i32 %578, 5
  br i1 %579, label %580, label %586

580:                                              ; preds = %577
  %581 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %582 = load i32*, i32** %581, align 8
  %583 = icmp eq i32* %582, null
  br i1 %583, label %586, label %584

584:                                              ; preds = %580
  %585 = bitcast i32* %582 to i8*
  call void @_ZdaPv(i8* %585) #11
  br label %586

586:                                              ; preds = %577, %580, %584
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %351) #10
  %587 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %347, align 8
  %588 = icmp eq %"class.tflite::RuntimeShape"** %587, null
  br i1 %588, label %594, label %589

589:                                              ; preds = %586
  %590 = ptrtoint %"class.tflite::RuntimeShape"** %587 to i64
  %591 = getelementptr inbounds %"class.tflite::VectorOfTensors.32", %"class.tflite::VectorOfTensors.32"* %5, i64 0, i32 2, i32 0, i32 1
  %592 = bitcast %"class.tflite::RuntimeShape"*** %591 to i64*
  store i64 %590, i64* %592, align 8
  %593 = bitcast %"class.tflite::RuntimeShape"** %587 to i8*
  call void @_ZdlPv(i8* %593) #11
  br label %594

594:                                              ; preds = %589, %586
  %595 = getelementptr inbounds %"class.tflite::VectorOfTensors.32", %"class.tflite::VectorOfTensors.32"* %5, i64 0, i32 1
  %596 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %595, i64 0, i32 0, i32 0
  %597 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %596, align 8
  %598 = icmp eq %"class.tflite::RuntimeShape"* %597, null
  br i1 %598, label %623, label %599

599:                                              ; preds = %594
  %600 = bitcast %"class.tflite::RuntimeShape"* %597 to i8*
  %601 = getelementptr inbounds %"class.tflite::VectorOfTensors.32", %"class.tflite::VectorOfTensors.32"* %5, i64 0, i32 1, i32 0, i32 1
  %602 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %601, align 8
  %603 = icmp eq %"class.tflite::RuntimeShape"* %602, %597
  br i1 %603, label %621, label %604

604:                                              ; preds = %599, %616
  %605 = phi %"class.tflite::RuntimeShape"* [ %606, %616 ], [ %602, %599 ]
  %606 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %605, i64 -1
  %607 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %606, i64 0, i32 0
  %608 = load i32, i32* %607, align 8
  %609 = icmp sgt i32 %608, 5
  br i1 %609, label %610, label %616

610:                                              ; preds = %604
  %611 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %605, i64 -1, i32 1, i32 0
  %612 = load i32*, i32** %611, align 8
  %613 = icmp eq i32* %612, null
  br i1 %613, label %616, label %614

614:                                              ; preds = %610
  %615 = bitcast i32* %612 to i8*
  call void @_ZdaPv(i8* %615) #11
  br label %616

616:                                              ; preds = %614, %610, %604
  %617 = icmp eq %"class.tflite::RuntimeShape"* %606, %597
  br i1 %617, label %618, label %604

618:                                              ; preds = %616
  %619 = bitcast %"class.std::__1::vector.2"* %595 to i8**
  %620 = load i8*, i8** %619, align 8
  br label %621

621:                                              ; preds = %618, %599
  %622 = phi i8* [ %620, %618 ], [ %600, %599 ]
  store %"class.tflite::RuntimeShape"* %597, %"class.tflite::RuntimeShape"** %601, align 8
  call void @_ZdlPv(i8* %622) #11
  br label %623

623:                                              ; preds = %621, %594
  %624 = load i32**, i32*** %349, align 8
  %625 = icmp eq i32** %624, null
  br i1 %625, label %631, label %626

626:                                              ; preds = %623
  %627 = ptrtoint i32** %624 to i64
  %628 = getelementptr inbounds %"class.tflite::VectorOfTensors.32", %"class.tflite::VectorOfTensors.32"* %5, i64 0, i32 0, i32 0, i32 1
  %629 = bitcast i32*** %628 to i64*
  store i64 %627, i64* %629, align 8
  %630 = bitcast i32** %624 to i8*
  call void @_ZdlPv(i8* %630) #11
  br label %631

631:                                              ; preds = %623, %626
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %339) #10
  br label %1911

632:                                              ; preds = %39
  %633 = bitcast %"class.tflite::VectorOfQuantizedTensors"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %633) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %633, i8 -86, i64 120, i1 false)
  %634 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %635 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %634, align 8
  call void @_ZN6tflite24VectorOfQuantizedTensorsC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfQuantizedTensors"* nonnull %7, %struct.TfLiteContext* dereferenceable(160) %0, %struct.TfLiteIntArray* dereferenceable(4) %635)
  %636 = trunc i32 %40 to i8
  %637 = getelementptr inbounds %"class.tflite::VectorOfQuantizedTensors", %"class.tflite::VectorOfQuantizedTensors"* %7, i64 0, i32 1, i32 0, i32 0
  %638 = load i32*, i32** %637, align 8
  %639 = getelementptr inbounds %"class.tflite::VectorOfQuantizedTensors", %"class.tflite::VectorOfQuantizedTensors"* %7, i64 0, i32 2, i32 0, i32 0
  %640 = load float*, float** %639, align 8
  %641 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %634, align 8
  %642 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %641, i64 0, i32 0
  %643 = load i32, i32* %642, align 4
  %644 = trunc i32 %643 to i16
  %645 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %31, i64 0, i32 3, i32 1
  %646 = load i32, i32* %645, align 4
  %647 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %31, i64 0, i32 3, i32 0
  %648 = load float, float* %647, align 8
  %649 = getelementptr inbounds %"class.tflite::VectorOfQuantizedTensors", %"class.tflite::VectorOfQuantizedTensors"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %650 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %649, align 8
  %651 = getelementptr inbounds %"class.tflite::VectorOfQuantizedTensors", %"class.tflite::VectorOfQuantizedTensors"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %652 = load i8**, i8*** %651, align 8
  %653 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %653) #10
  %654 = icmp eq %struct.TfLiteTensor* %31, null
  br i1 %654, label %655, label %657

655:                                              ; preds = %632
  %656 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %656, align 8, !alias.scope !16
  br label %685

657:                                              ; preds = %632
  %658 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %31, i64 0, i32 2
  %659 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %658, align 8, !noalias !16
  %660 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %659, i64 0, i32 0
  %661 = load i32, i32* %660, align 4, !noalias !16
  %662 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %659, i64 0, i32 1, i64 0
  %663 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 %661, i32* %663, align 8, !alias.scope !16
  %664 = icmp sgt i32 %661, 5
  br i1 %664, label %665, label %672

665:                                              ; preds = %657
  %666 = sext i32 %661 to i64
  %667 = shl nsw i64 %666, 2
  %668 = call i8* @_Znam(i64 %667) #11, !noalias !16
  %669 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %670 = bitcast i32** %669 to i8**
  store i8* %668, i8** %670, align 8, !alias.scope !16
  %671 = bitcast i8* %668 to i32*
  br label %677

672:                                              ; preds = %657
  %673 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %674 = bitcast %union.anon* %673 to i32*
  %675 = sext i32 %661 to i64
  %676 = shl nsw i64 %675, 2
  br label %677

677:                                              ; preds = %672, %665
  %678 = phi i64 [ %667, %665 ], [ %676, %672 ]
  %679 = phi i32* [ %671, %665 ], [ %674, %672 ]
  %680 = bitcast i32* %679 to i8*
  %681 = bitcast i32* %662 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %680, i8* align 4 %681, i64 %678, i1 false) #10
  %682 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %31, i64 0, i32 1
  %683 = bitcast %union.TfLitePtrUnion* %682 to i8**
  %684 = load i8*, i8** %683, align 8
  br label %685

685:                                              ; preds = %655, %677
  %686 = phi i32 [ %661, %677 ], [ 0, %655 ]
  %687 = phi i8* [ %684, %677 ], [ null, %655 ]
  %688 = shl i32 %40, 24
  %689 = ashr exact i32 %688, 24
  %690 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  %691 = icmp eq i16 %644, 0
  %692 = icmp sgt i32 %686, 5
  %693 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %694 = icmp sgt i8 %636, 0
  br i1 %694, label %695, label %723

695:                                              ; preds = %685
  %696 = getelementptr inbounds %union.anon, %union.anon* %693, i64 0, i32 0
  %697 = load i32*, i32** %696, align 8
  %698 = bitcast %union.anon* %693 to [5 x i32]*
  %699 = zext i32 %689 to i64
  %700 = add nsw i64 %699, -1
  %701 = and i64 %699, 3
  %702 = icmp ult i64 %700, 3
  br i1 %702, label %705, label %703

703:                                              ; preds = %695
  %704 = sub nsw i64 %699, %701
  br label %741

705:                                              ; preds = %741, %695
  %706 = phi i64 [ undef, %695 ], [ %771, %741 ]
  %707 = phi i64 [ 0, %695 ], [ %772, %741 ]
  %708 = phi i64 [ 1, %695 ], [ %771, %741 ]
  %709 = icmp eq i64 %701, 0
  br i1 %709, label %723, label %710

710:                                              ; preds = %705, %710
  %711 = phi i64 [ %720, %710 ], [ %707, %705 ]
  %712 = phi i64 [ %719, %710 ], [ %708, %705 ]
  %713 = phi i64 [ %721, %710 ], [ %701, %705 ]
  %714 = getelementptr inbounds i32, i32* %697, i64 %711
  %715 = getelementptr inbounds [5 x i32], [5 x i32]* %698, i64 0, i64 %711
  %716 = select i1 %692, i32* %714, i32* %715
  %717 = load i32, i32* %716, align 4
  %718 = sext i32 %717 to i64
  %719 = mul nsw i64 %712, %718
  %720 = add nuw nsw i64 %711, 1
  %721 = add i64 %713, -1
  %722 = icmp eq i64 %721, 0
  br i1 %722, label %723, label %710, !llvm.loop !19

723:                                              ; preds = %705, %710, %685
  %724 = phi i64 [ 1, %685 ], [ %706, %705 ], [ %719, %710 ]
  %725 = add nsw i32 %689, 1
  %726 = icmp slt i32 %725, %686
  br i1 %726, label %727, label %796

727:                                              ; preds = %723
  %728 = getelementptr inbounds %union.anon, %union.anon* %693, i64 0, i32 0
  %729 = load i32*, i32** %728, align 8
  %730 = bitcast %union.anon* %693 to [5 x i32]*
  %731 = sext i8 %636 to i64
  %732 = add nsw i64 %731, 1
  %733 = xor i32 %689, -1
  %734 = add i32 %686, %733
  %735 = add i32 %686, -2
  %736 = sub i32 %735, %689
  %737 = and i32 %734, 3
  %738 = icmp ult i32 %736, 3
  br i1 %738, label %775, label %739

739:                                              ; preds = %727
  %740 = sub i32 %734, %737
  br label %806

741:                                              ; preds = %741, %703
  %742 = phi i64 [ 0, %703 ], [ %772, %741 ]
  %743 = phi i64 [ 1, %703 ], [ %771, %741 ]
  %744 = phi i64 [ %704, %703 ], [ %773, %741 ]
  %745 = getelementptr inbounds i32, i32* %697, i64 %742
  %746 = getelementptr inbounds [5 x i32], [5 x i32]* %698, i64 0, i64 %742
  %747 = select i1 %692, i32* %745, i32* %746
  %748 = load i32, i32* %747, align 4
  %749 = sext i32 %748 to i64
  %750 = mul nsw i64 %743, %749
  %751 = or i64 %742, 1
  %752 = getelementptr inbounds i32, i32* %697, i64 %751
  %753 = getelementptr inbounds [5 x i32], [5 x i32]* %698, i64 0, i64 %751
  %754 = select i1 %692, i32* %752, i32* %753
  %755 = load i32, i32* %754, align 4
  %756 = sext i32 %755 to i64
  %757 = mul nsw i64 %750, %756
  %758 = or i64 %742, 2
  %759 = getelementptr inbounds i32, i32* %697, i64 %758
  %760 = getelementptr inbounds [5 x i32], [5 x i32]* %698, i64 0, i64 %758
  %761 = select i1 %692, i32* %759, i32* %760
  %762 = load i32, i32* %761, align 4
  %763 = sext i32 %762 to i64
  %764 = mul nsw i64 %757, %763
  %765 = or i64 %742, 3
  %766 = getelementptr inbounds i32, i32* %697, i64 %765
  %767 = getelementptr inbounds [5 x i32], [5 x i32]* %698, i64 0, i64 %765
  %768 = select i1 %692, i32* %766, i32* %767
  %769 = load i32, i32* %768, align 4
  %770 = sext i32 %769 to i64
  %771 = mul nsw i64 %764, %770
  %772 = add nuw nsw i64 %742, 4
  %773 = add i64 %744, -4
  %774 = icmp eq i64 %773, 0
  br i1 %774, label %705, label %741

775:                                              ; preds = %806, %727
  %776 = phi i64 [ undef, %727 ], [ %836, %806 ]
  %777 = phi i64 [ %732, %727 ], [ %837, %806 ]
  %778 = phi i64 [ 1, %727 ], [ %836, %806 ]
  %779 = icmp eq i32 %737, 0
  br i1 %779, label %793, label %780

780:                                              ; preds = %775, %780
  %781 = phi i64 [ %790, %780 ], [ %777, %775 ]
  %782 = phi i64 [ %789, %780 ], [ %778, %775 ]
  %783 = phi i32 [ %791, %780 ], [ %737, %775 ]
  %784 = getelementptr inbounds i32, i32* %729, i64 %781
  %785 = getelementptr inbounds [5 x i32], [5 x i32]* %730, i64 0, i64 %781
  %786 = select i1 %692, i32* %784, i32* %785
  %787 = load i32, i32* %786, align 4
  %788 = sext i32 %787 to i64
  %789 = mul nsw i64 %782, %788
  %790 = add i64 %781, 1
  %791 = add i32 %783, -1
  %792 = icmp eq i32 %791, 0
  br i1 %792, label %793, label %780, !llvm.loop !20

793:                                              ; preds = %780, %775
  %794 = phi i64 [ %776, %775 ], [ %789, %780 ]
  %795 = trunc i64 %794 to i32
  br label %796

796:                                              ; preds = %793, %723
  %797 = phi i32 [ 1, %723 ], [ %795, %793 ]
  %798 = fdiv float 1.000000e+00, %648
  %799 = icmp sgt i64 %724, 0
  br i1 %799, label %800, label %954

800:                                              ; preds = %796
  %801 = sext i8 %636 to i64
  %802 = and i32 %643, 65535
  %803 = zext i32 %802 to i64
  %804 = insertelement <16 x i32> undef, i32 %646, i32 0
  %805 = shufflevector <16 x i32> %804, <16 x i32> undef, <16 x i32> zeroinitializer
  br label %840

806:                                              ; preds = %806, %739
  %807 = phi i64 [ %732, %739 ], [ %837, %806 ]
  %808 = phi i64 [ 1, %739 ], [ %836, %806 ]
  %809 = phi i32 [ %740, %739 ], [ %838, %806 ]
  %810 = getelementptr inbounds i32, i32* %729, i64 %807
  %811 = getelementptr inbounds [5 x i32], [5 x i32]* %730, i64 0, i64 %807
  %812 = select i1 %692, i32* %810, i32* %811
  %813 = load i32, i32* %812, align 4
  %814 = sext i32 %813 to i64
  %815 = mul nsw i64 %808, %814
  %816 = add i64 %807, 1
  %817 = getelementptr inbounds i32, i32* %729, i64 %816
  %818 = getelementptr inbounds [5 x i32], [5 x i32]* %730, i64 0, i64 %816
  %819 = select i1 %692, i32* %817, i32* %818
  %820 = load i32, i32* %819, align 4
  %821 = sext i32 %820 to i64
  %822 = mul nsw i64 %815, %821
  %823 = add i64 %807, 2
  %824 = getelementptr inbounds i32, i32* %729, i64 %823
  %825 = getelementptr inbounds [5 x i32], [5 x i32]* %730, i64 0, i64 %823
  %826 = select i1 %692, i32* %824, i32* %825
  %827 = load i32, i32* %826, align 4
  %828 = sext i32 %827 to i64
  %829 = mul nsw i64 %822, %828
  %830 = add i64 %807, 3
  %831 = getelementptr inbounds i32, i32* %729, i64 %830
  %832 = getelementptr inbounds [5 x i32], [5 x i32]* %730, i64 0, i64 %830
  %833 = select i1 %692, i32* %831, i32* %832
  %834 = load i32, i32* %833, align 4
  %835 = sext i32 %834 to i64
  %836 = mul nsw i64 %829, %835
  %837 = add i64 %807, 4
  %838 = add i32 %809, -4
  %839 = icmp eq i32 %838, 0
  br i1 %839, label %775, label %806

840:                                              ; preds = %845, %800
  %841 = phi i64 [ 0, %800 ], [ %847, %845 ]
  %842 = phi i8* [ %687, %800 ], [ %846, %845 ]
  br i1 %691, label %845, label %843

843:                                              ; preds = %840
  %844 = trunc i64 %841 to i32
  br label %849

845:                                              ; preds = %947, %840
  %846 = phi i8* [ %842, %840 ], [ %949, %947 ]
  %847 = add nuw nsw i64 %841, 1
  %848 = icmp eq i64 %847, %724
  br i1 %848, label %952, label %840

849:                                              ; preds = %947, %843
  %850 = phi i64 [ 0, %843 ], [ %950, %947 ]
  %851 = phi i8* [ %842, %843 ], [ %949, %947 ]
  %852 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %650, i64 %850
  %853 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %852, align 8
  %854 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %853, i64 0, i32 0
  %855 = load i32, i32* %854, align 8
  %856 = icmp sgt i32 %855, 5
  %857 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %853, i64 0, i32 1
  br i1 %856, label %858, label %862

858:                                              ; preds = %849
  %859 = getelementptr inbounds %union.anon, %union.anon* %857, i64 0, i32 0
  %860 = load i32*, i32** %859, align 8
  %861 = getelementptr inbounds i32, i32* %860, i64 %801
  br label %865

862:                                              ; preds = %849
  %863 = bitcast %union.anon* %857 to [5 x i32]*
  %864 = getelementptr inbounds [5 x i32], [5 x i32]* %863, i64 0, i64 %801
  br label %865

865:                                              ; preds = %862, %858
  %866 = phi i32* [ %861, %858 ], [ %864, %862 ]
  %867 = load i32, i32* %866, align 4
  %868 = mul i32 %867, %797
  %869 = getelementptr inbounds i8*, i8** %652, i64 %850
  %870 = load i8*, i8** %869, align 8
  %871 = mul nsw i32 %868, %844
  %872 = sext i32 %871 to i64
  %873 = getelementptr inbounds i8, i8* %870, i64 %872
  %874 = getelementptr inbounds i32, i32* %638, i64 %850
  %875 = load i32, i32* %874, align 4
  %876 = icmp eq i32 %875, %646
  %877 = getelementptr inbounds float, float* %640, i64 %850
  %878 = load float, float* %877, align 4
  %879 = fcmp oeq float %878, %648
  %880 = and i1 %876, %879
  br i1 %880, label %881, label %883

881:                                              ; preds = %865
  %882 = sext i32 %868 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %851, i8* align 1 %873, i64 %882, i1 false) #10
  br label %947

883:                                              ; preds = %865
  %884 = fmul float %798, %878
  %885 = sub nsw i32 0, %875
  %886 = sitofp i32 %885 to float
  %887 = fmul float %884, %886
  %888 = icmp sgt i32 %868, 0
  br i1 %888, label %889, label %947

889:                                              ; preds = %883
  %890 = zext i32 %868 to i64
  %891 = icmp ult i32 %868, 16
  br i1 %891, label %927, label %892

892:                                              ; preds = %889
  %893 = getelementptr i8, i8* %851, i64 %890
  %894 = add nsw i64 %872, %890
  %895 = getelementptr i8, i8* %870, i64 %894
  %896 = icmp ult i8* %851, %895
  %897 = icmp ult i8* %873, %893
  %898 = and i1 %896, %897
  br i1 %898, label %927, label %899

899:                                              ; preds = %892
  %900 = and i64 %890, 4294967280
  %901 = insertelement <16 x float> undef, float %884, i32 0
  %902 = shufflevector <16 x float> %901, <16 x float> undef, <16 x i32> zeroinitializer
  %903 = insertelement <16 x float> undef, float %887, i32 0
  %904 = shufflevector <16 x float> %903, <16 x float> undef, <16 x i32> zeroinitializer
  br label %905

905:                                              ; preds = %905, %899
  %906 = phi i64 [ 0, %899 ], [ %923, %905 ]
  %907 = getelementptr inbounds i8, i8* %873, i64 %906
  %908 = bitcast i8* %907 to <16 x i8>*
  %909 = load <16 x i8>, <16 x i8>* %908, align 1, !alias.scope !21
  %910 = uitofp <16 x i8> %909 to <16 x float>
  %911 = fmul <16 x float> %902, %910
  %912 = fadd <16 x float> %904, %911
  %913 = call <16 x float> @llvm.round.v16f32(<16 x float> %912)
  %914 = fptosi <16 x float> %913 to <16 x i32>
  %915 = add nsw <16 x i32> %805, %914
  %916 = icmp slt <16 x i32> %915, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %917 = select <16 x i1> %916, <16 x i32> %915, <16 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %918 = icmp sgt <16 x i32> %917, zeroinitializer
  %919 = select <16 x i1> %918, <16 x i32> %917, <16 x i32> zeroinitializer
  %920 = trunc <16 x i32> %919 to <16 x i8>
  %921 = getelementptr inbounds i8, i8* %851, i64 %906
  %922 = bitcast i8* %921 to <16 x i8>*
  store <16 x i8> %920, <16 x i8>* %922, align 1, !alias.scope !24, !noalias !21
  %923 = add i64 %906, 16
  %924 = icmp eq i64 %923, %900
  br i1 %924, label %925, label %905, !llvm.loop !26

925:                                              ; preds = %905
  %926 = icmp eq i64 %900, %890
  br i1 %926, label %947, label %927

927:                                              ; preds = %925, %892, %889
  %928 = phi i64 [ 0, %892 ], [ 0, %889 ], [ %900, %925 ]
  br label %929

929:                                              ; preds = %927, %929
  %930 = phi i64 [ %945, %929 ], [ %928, %927 ]
  %931 = getelementptr inbounds i8, i8* %873, i64 %930
  %932 = load i8, i8* %931, align 1
  %933 = uitofp i8 %932 to float
  %934 = fmul float %884, %933
  %935 = fadd float %887, %934
  %936 = call float @llvm.round.f32(float %935) #10
  %937 = fptosi float %936 to i32
  %938 = add nsw i32 %646, %937
  %939 = icmp slt i32 %938, 255
  %940 = select i1 %939, i32 %938, i32 255
  %941 = icmp sgt i32 %940, 0
  %942 = select i1 %941, i32 %940, i32 0
  %943 = trunc i32 %942 to i8
  %944 = getelementptr inbounds i8, i8* %851, i64 %930
  store i8 %943, i8* %944, align 1
  %945 = add nuw nsw i64 %930, 1
  %946 = icmp eq i64 %945, %890
  br i1 %946, label %947, label %929, !llvm.loop !28

947:                                              ; preds = %929, %925, %883, %881
  %948 = sext i32 %868 to i64
  %949 = getelementptr inbounds i8, i8* %851, i64 %948
  %950 = add nuw nsw i64 %850, 1
  %951 = icmp eq i64 %950, %803
  br i1 %951, label %845, label %849

952:                                              ; preds = %845
  %953 = load i32, i32* %690, align 8
  br label %954

954:                                              ; preds = %952, %796
  %955 = phi i32 [ %953, %952 ], [ %686, %796 ]
  %956 = icmp sgt i32 %955, 5
  br i1 %956, label %957, label %963

957:                                              ; preds = %954
  %958 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %959 = load i32*, i32** %958, align 8
  %960 = icmp eq i32* %959, null
  br i1 %960, label %963, label %961

961:                                              ; preds = %957
  %962 = bitcast i32* %959 to i8*
  call void @_ZdaPv(i8* %962) #11
  br label %963

963:                                              ; preds = %954, %957, %961
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %653) #10
  %964 = load float*, float** %639, align 8
  %965 = icmp eq float* %964, null
  br i1 %965, label %971, label %966

966:                                              ; preds = %963
  %967 = ptrtoint float* %964 to i64
  %968 = getelementptr inbounds %"class.tflite::VectorOfQuantizedTensors", %"class.tflite::VectorOfQuantizedTensors"* %7, i64 0, i32 2, i32 0, i32 1
  %969 = bitcast float** %968 to i64*
  store i64 %967, i64* %969, align 8
  %970 = bitcast float* %964 to i8*
  call void @_ZdlPv(i8* %970) #11
  br label %971

971:                                              ; preds = %966, %963
  %972 = load i32*, i32** %637, align 8
  %973 = icmp eq i32* %972, null
  br i1 %973, label %979, label %974

974:                                              ; preds = %971
  %975 = ptrtoint i32* %972 to i64
  %976 = getelementptr inbounds %"class.tflite::VectorOfQuantizedTensors", %"class.tflite::VectorOfQuantizedTensors"* %7, i64 0, i32 1, i32 0, i32 1
  %977 = bitcast i32** %976 to i64*
  store i64 %975, i64* %977, align 8
  %978 = bitcast i32* %972 to i8*
  call void @_ZdlPv(i8* %978) #11
  br label %979

979:                                              ; preds = %971, %974
  %980 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %649, align 8
  %981 = icmp eq %"class.tflite::RuntimeShape"** %980, null
  br i1 %981, label %987, label %982

982:                                              ; preds = %979
  %983 = ptrtoint %"class.tflite::RuntimeShape"** %980 to i64
  %984 = getelementptr inbounds %"class.tflite::VectorOfQuantizedTensors", %"class.tflite::VectorOfQuantizedTensors"* %7, i64 0, i32 0, i32 2, i32 0, i32 1
  %985 = bitcast %"class.tflite::RuntimeShape"*** %984 to i64*
  store i64 %983, i64* %985, align 8
  %986 = bitcast %"class.tflite::RuntimeShape"** %980 to i8*
  call void @_ZdlPv(i8* %986) #11
  br label %987

987:                                              ; preds = %982, %979
  %988 = getelementptr inbounds %"class.tflite::VectorOfQuantizedTensors", %"class.tflite::VectorOfQuantizedTensors"* %7, i64 0, i32 0, i32 1
  %989 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %988, i64 0, i32 0, i32 0
  %990 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %989, align 8
  %991 = icmp eq %"class.tflite::RuntimeShape"* %990, null
  br i1 %991, label %1016, label %992

992:                                              ; preds = %987
  %993 = bitcast %"class.tflite::RuntimeShape"* %990 to i8*
  %994 = getelementptr inbounds %"class.tflite::VectorOfQuantizedTensors", %"class.tflite::VectorOfQuantizedTensors"* %7, i64 0, i32 0, i32 1, i32 0, i32 1
  %995 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %994, align 8
  %996 = icmp eq %"class.tflite::RuntimeShape"* %995, %990
  br i1 %996, label %1014, label %997

997:                                              ; preds = %992, %1009
  %998 = phi %"class.tflite::RuntimeShape"* [ %999, %1009 ], [ %995, %992 ]
  %999 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %998, i64 -1
  %1000 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %999, i64 0, i32 0
  %1001 = load i32, i32* %1000, align 8
  %1002 = icmp sgt i32 %1001, 5
  br i1 %1002, label %1003, label %1009

1003:                                             ; preds = %997
  %1004 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %998, i64 -1, i32 1, i32 0
  %1005 = load i32*, i32** %1004, align 8
  %1006 = icmp eq i32* %1005, null
  br i1 %1006, label %1009, label %1007

1007:                                             ; preds = %1003
  %1008 = bitcast i32* %1005 to i8*
  call void @_ZdaPv(i8* %1008) #11
  br label %1009

1009:                                             ; preds = %1007, %1003, %997
  %1010 = icmp eq %"class.tflite::RuntimeShape"* %999, %990
  br i1 %1010, label %1011, label %997

1011:                                             ; preds = %1009
  %1012 = bitcast %"class.std::__1::vector.2"* %988 to i8**
  %1013 = load i8*, i8** %1012, align 8
  br label %1014

1014:                                             ; preds = %1011, %992
  %1015 = phi i8* [ %1013, %1011 ], [ %993, %992 ]
  store %"class.tflite::RuntimeShape"* %990, %"class.tflite::RuntimeShape"** %994, align 8
  call void @_ZdlPv(i8* %1015) #11
  br label %1016

1016:                                             ; preds = %1014, %987
  %1017 = load i8**, i8*** %651, align 8
  %1018 = icmp eq i8** %1017, null
  br i1 %1018, label %1024, label %1019

1019:                                             ; preds = %1016
  %1020 = ptrtoint i8** %1017 to i64
  %1021 = getelementptr inbounds %"class.tflite::VectorOfQuantizedTensors", %"class.tflite::VectorOfQuantizedTensors"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %1022 = bitcast i8*** %1021 to i64*
  store i64 %1020, i64* %1022, align 8
  %1023 = bitcast i8** %1017 to i8*
  call void @_ZdlPv(i8* %1023) #11
  br label %1024

1024:                                             ; preds = %1016, %1019
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %633) #10
  br label %1911

1025:                                             ; preds = %39
  %1026 = bitcast %"class.tflite::VectorOfTensors"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %1026) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1026, i8 -86, i64 72, i1 false)
  %1027 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %1028 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1027, align 8
  call void @_ZN6tflite15VectorOfTensorsIaEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors"* nonnull %9, %struct.TfLiteContext* dereferenceable(160) %0, %struct.TfLiteIntArray* dereferenceable(4) %1028)
  %1029 = trunc i32 %40 to i8
  %1030 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1027, align 8
  %1031 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1030, i64 0, i32 0
  %1032 = load i32, i32* %1031, align 4
  %1033 = trunc i32 %1032 to i16
  %1034 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %9, i64 0, i32 2, i32 0, i32 0
  %1035 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %1034, align 8
  %1036 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %9, i64 0, i32 0, i32 0, i32 0
  %1037 = load i8**, i8*** %1036, align 8
  %1038 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1038) #10
  %1039 = icmp eq %struct.TfLiteTensor* %31, null
  br i1 %1039, label %1040, label %1042

1040:                                             ; preds = %1025
  %1041 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %1041, align 8, !alias.scope !29
  br label %1070

1042:                                             ; preds = %1025
  %1043 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %31, i64 0, i32 2
  %1044 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1043, align 8, !noalias !29
  %1045 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1044, i64 0, i32 0
  %1046 = load i32, i32* %1045, align 4, !noalias !29
  %1047 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1044, i64 0, i32 1, i64 0
  %1048 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 %1046, i32* %1048, align 8, !alias.scope !29
  %1049 = icmp sgt i32 %1046, 5
  br i1 %1049, label %1050, label %1057

1050:                                             ; preds = %1042
  %1051 = sext i32 %1046 to i64
  %1052 = shl nsw i64 %1051, 2
  %1053 = call i8* @_Znam(i64 %1052) #11, !noalias !29
  %1054 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %1055 = bitcast i32** %1054 to i8**
  store i8* %1053, i8** %1055, align 8, !alias.scope !29
  %1056 = bitcast i8* %1053 to i32*
  br label %1062

1057:                                             ; preds = %1042
  %1058 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %1059 = bitcast %union.anon* %1058 to i32*
  %1060 = sext i32 %1046 to i64
  %1061 = shl nsw i64 %1060, 2
  br label %1062

1062:                                             ; preds = %1057, %1050
  %1063 = phi i64 [ %1052, %1050 ], [ %1061, %1057 ]
  %1064 = phi i32* [ %1056, %1050 ], [ %1059, %1057 ]
  %1065 = bitcast i32* %1064 to i8*
  %1066 = bitcast i32* %1047 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1065, i8* align 4 %1066, i64 %1063, i1 false) #10
  %1067 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %31, i64 0, i32 1
  %1068 = bitcast %union.TfLitePtrUnion* %1067 to i8**
  %1069 = load i8*, i8** %1068, align 8
  br label %1070

1070:                                             ; preds = %1040, %1062
  %1071 = phi i32 [ %1046, %1062 ], [ 0, %1040 ]
  %1072 = phi i8* [ %1069, %1062 ], [ null, %1040 ]
  %1073 = shl i32 %40, 24
  %1074 = ashr exact i32 %1073, 24
  %1075 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  %1076 = icmp eq i16 %1033, 0
  %1077 = icmp sgt i32 %1071, 5
  %1078 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %1079 = icmp sgt i8 %1029, 0
  br i1 %1079, label %1080, label %1108

1080:                                             ; preds = %1070
  %1081 = getelementptr inbounds %union.anon, %union.anon* %1078, i64 0, i32 0
  %1082 = load i32*, i32** %1081, align 8
  %1083 = bitcast %union.anon* %1078 to [5 x i32]*
  %1084 = zext i32 %1074 to i64
  %1085 = add nsw i64 %1084, -1
  %1086 = and i64 %1084, 3
  %1087 = icmp ult i64 %1085, 3
  br i1 %1087, label %1090, label %1088

1088:                                             ; preds = %1080
  %1089 = sub nsw i64 %1084, %1086
  br label %1126

1090:                                             ; preds = %1126, %1080
  %1091 = phi i64 [ undef, %1080 ], [ %1156, %1126 ]
  %1092 = phi i64 [ 0, %1080 ], [ %1157, %1126 ]
  %1093 = phi i64 [ 1, %1080 ], [ %1156, %1126 ]
  %1094 = icmp eq i64 %1086, 0
  br i1 %1094, label %1108, label %1095

1095:                                             ; preds = %1090, %1095
  %1096 = phi i64 [ %1105, %1095 ], [ %1092, %1090 ]
  %1097 = phi i64 [ %1104, %1095 ], [ %1093, %1090 ]
  %1098 = phi i64 [ %1106, %1095 ], [ %1086, %1090 ]
  %1099 = getelementptr inbounds i32, i32* %1082, i64 %1096
  %1100 = getelementptr inbounds [5 x i32], [5 x i32]* %1083, i64 0, i64 %1096
  %1101 = select i1 %1077, i32* %1099, i32* %1100
  %1102 = load i32, i32* %1101, align 4
  %1103 = sext i32 %1102 to i64
  %1104 = mul nsw i64 %1097, %1103
  %1105 = add nuw nsw i64 %1096, 1
  %1106 = add i64 %1098, -1
  %1107 = icmp eq i64 %1106, 0
  br i1 %1107, label %1108, label %1095, !llvm.loop !32

1108:                                             ; preds = %1090, %1095, %1070
  %1109 = phi i64 [ 1, %1070 ], [ %1091, %1090 ], [ %1104, %1095 ]
  %1110 = add nsw i32 %1074, 1
  %1111 = icmp slt i32 %1110, %1071
  br i1 %1111, label %1112, label %1181

1112:                                             ; preds = %1108
  %1113 = getelementptr inbounds %union.anon, %union.anon* %1078, i64 0, i32 0
  %1114 = load i32*, i32** %1113, align 8
  %1115 = bitcast %union.anon* %1078 to [5 x i32]*
  %1116 = sext i8 %1029 to i64
  %1117 = add nsw i64 %1116, 1
  %1118 = xor i32 %1074, -1
  %1119 = add i32 %1071, %1118
  %1120 = add i32 %1071, -2
  %1121 = sub i32 %1120, %1074
  %1122 = and i32 %1119, 3
  %1123 = icmp ult i32 %1121, 3
  br i1 %1123, label %1160, label %1124

1124:                                             ; preds = %1112
  %1125 = sub i32 %1119, %1122
  br label %1188

1126:                                             ; preds = %1126, %1088
  %1127 = phi i64 [ 0, %1088 ], [ %1157, %1126 ]
  %1128 = phi i64 [ 1, %1088 ], [ %1156, %1126 ]
  %1129 = phi i64 [ %1089, %1088 ], [ %1158, %1126 ]
  %1130 = getelementptr inbounds i32, i32* %1082, i64 %1127
  %1131 = getelementptr inbounds [5 x i32], [5 x i32]* %1083, i64 0, i64 %1127
  %1132 = select i1 %1077, i32* %1130, i32* %1131
  %1133 = load i32, i32* %1132, align 4
  %1134 = sext i32 %1133 to i64
  %1135 = mul nsw i64 %1128, %1134
  %1136 = or i64 %1127, 1
  %1137 = getelementptr inbounds i32, i32* %1082, i64 %1136
  %1138 = getelementptr inbounds [5 x i32], [5 x i32]* %1083, i64 0, i64 %1136
  %1139 = select i1 %1077, i32* %1137, i32* %1138
  %1140 = load i32, i32* %1139, align 4
  %1141 = sext i32 %1140 to i64
  %1142 = mul nsw i64 %1135, %1141
  %1143 = or i64 %1127, 2
  %1144 = getelementptr inbounds i32, i32* %1082, i64 %1143
  %1145 = getelementptr inbounds [5 x i32], [5 x i32]* %1083, i64 0, i64 %1143
  %1146 = select i1 %1077, i32* %1144, i32* %1145
  %1147 = load i32, i32* %1146, align 4
  %1148 = sext i32 %1147 to i64
  %1149 = mul nsw i64 %1142, %1148
  %1150 = or i64 %1127, 3
  %1151 = getelementptr inbounds i32, i32* %1082, i64 %1150
  %1152 = getelementptr inbounds [5 x i32], [5 x i32]* %1083, i64 0, i64 %1150
  %1153 = select i1 %1077, i32* %1151, i32* %1152
  %1154 = load i32, i32* %1153, align 4
  %1155 = sext i32 %1154 to i64
  %1156 = mul nsw i64 %1149, %1155
  %1157 = add nuw nsw i64 %1127, 4
  %1158 = add i64 %1129, -4
  %1159 = icmp eq i64 %1158, 0
  br i1 %1159, label %1090, label %1126

1160:                                             ; preds = %1188, %1112
  %1161 = phi i64 [ undef, %1112 ], [ %1218, %1188 ]
  %1162 = phi i64 [ %1117, %1112 ], [ %1219, %1188 ]
  %1163 = phi i64 [ 1, %1112 ], [ %1218, %1188 ]
  %1164 = icmp eq i32 %1122, 0
  br i1 %1164, label %1178, label %1165

1165:                                             ; preds = %1160, %1165
  %1166 = phi i64 [ %1175, %1165 ], [ %1162, %1160 ]
  %1167 = phi i64 [ %1174, %1165 ], [ %1163, %1160 ]
  %1168 = phi i32 [ %1176, %1165 ], [ %1122, %1160 ]
  %1169 = getelementptr inbounds i32, i32* %1114, i64 %1166
  %1170 = getelementptr inbounds [5 x i32], [5 x i32]* %1115, i64 0, i64 %1166
  %1171 = select i1 %1077, i32* %1169, i32* %1170
  %1172 = load i32, i32* %1171, align 4
  %1173 = sext i32 %1172 to i64
  %1174 = mul nsw i64 %1167, %1173
  %1175 = add i64 %1166, 1
  %1176 = add i32 %1168, -1
  %1177 = icmp eq i32 %1176, 0
  br i1 %1177, label %1178, label %1165, !llvm.loop !33

1178:                                             ; preds = %1165, %1160
  %1179 = phi i64 [ %1161, %1160 ], [ %1174, %1165 ]
  %1180 = trunc i64 %1179 to i32
  br label %1181

1181:                                             ; preds = %1178, %1108
  %1182 = phi i32 [ 1, %1108 ], [ %1180, %1178 ]
  %1183 = icmp sgt i64 %1109, 0
  br i1 %1183, label %1184, label %1262

1184:                                             ; preds = %1181
  %1185 = sext i8 %1029 to i64
  %1186 = and i32 %1032, 65535
  %1187 = zext i32 %1186 to i64
  br label %1222

1188:                                             ; preds = %1188, %1124
  %1189 = phi i64 [ %1117, %1124 ], [ %1219, %1188 ]
  %1190 = phi i64 [ 1, %1124 ], [ %1218, %1188 ]
  %1191 = phi i32 [ %1125, %1124 ], [ %1220, %1188 ]
  %1192 = getelementptr inbounds i32, i32* %1114, i64 %1189
  %1193 = getelementptr inbounds [5 x i32], [5 x i32]* %1115, i64 0, i64 %1189
  %1194 = select i1 %1077, i32* %1192, i32* %1193
  %1195 = load i32, i32* %1194, align 4
  %1196 = sext i32 %1195 to i64
  %1197 = mul nsw i64 %1190, %1196
  %1198 = add i64 %1189, 1
  %1199 = getelementptr inbounds i32, i32* %1114, i64 %1198
  %1200 = getelementptr inbounds [5 x i32], [5 x i32]* %1115, i64 0, i64 %1198
  %1201 = select i1 %1077, i32* %1199, i32* %1200
  %1202 = load i32, i32* %1201, align 4
  %1203 = sext i32 %1202 to i64
  %1204 = mul nsw i64 %1197, %1203
  %1205 = add i64 %1189, 2
  %1206 = getelementptr inbounds i32, i32* %1114, i64 %1205
  %1207 = getelementptr inbounds [5 x i32], [5 x i32]* %1115, i64 0, i64 %1205
  %1208 = select i1 %1077, i32* %1206, i32* %1207
  %1209 = load i32, i32* %1208, align 4
  %1210 = sext i32 %1209 to i64
  %1211 = mul nsw i64 %1204, %1210
  %1212 = add i64 %1189, 3
  %1213 = getelementptr inbounds i32, i32* %1114, i64 %1212
  %1214 = getelementptr inbounds [5 x i32], [5 x i32]* %1115, i64 0, i64 %1212
  %1215 = select i1 %1077, i32* %1213, i32* %1214
  %1216 = load i32, i32* %1215, align 4
  %1217 = sext i32 %1216 to i64
  %1218 = mul nsw i64 %1211, %1217
  %1219 = add i64 %1189, 4
  %1220 = add i32 %1191, -4
  %1221 = icmp eq i32 %1220, 0
  br i1 %1221, label %1160, label %1188

1222:                                             ; preds = %1227, %1184
  %1223 = phi i64 [ 0, %1184 ], [ %1229, %1227 ]
  %1224 = phi i8* [ %1072, %1184 ], [ %1228, %1227 ]
  br i1 %1076, label %1227, label %1225

1225:                                             ; preds = %1222
  %1226 = trunc i64 %1223 to i32
  br label %1231

1227:                                             ; preds = %1247, %1222
  %1228 = phi i8* [ %1224, %1222 ], [ %1257, %1247 ]
  %1229 = add nuw nsw i64 %1223, 1
  %1230 = icmp eq i64 %1229, %1109
  br i1 %1230, label %1260, label %1222

1231:                                             ; preds = %1247, %1225
  %1232 = phi i64 [ 0, %1225 ], [ %1258, %1247 ]
  %1233 = phi i8* [ %1224, %1225 ], [ %1257, %1247 ]
  %1234 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %1035, i64 %1232
  %1235 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %1234, align 8
  %1236 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1235, i64 0, i32 0
  %1237 = load i32, i32* %1236, align 8
  %1238 = icmp sgt i32 %1237, 5
  %1239 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1235, i64 0, i32 1
  br i1 %1238, label %1240, label %1244

1240:                                             ; preds = %1231
  %1241 = getelementptr inbounds %union.anon, %union.anon* %1239, i64 0, i32 0
  %1242 = load i32*, i32** %1241, align 8
  %1243 = getelementptr inbounds i32, i32* %1242, i64 %1185
  br label %1247

1244:                                             ; preds = %1231
  %1245 = bitcast %union.anon* %1239 to [5 x i32]*
  %1246 = getelementptr inbounds [5 x i32], [5 x i32]* %1245, i64 0, i64 %1185
  br label %1247

1247:                                             ; preds = %1244, %1240
  %1248 = phi i32* [ %1243, %1240 ], [ %1246, %1244 ]
  %1249 = load i32, i32* %1248, align 4
  %1250 = mul i32 %1249, %1182
  %1251 = getelementptr inbounds i8*, i8** %1037, i64 %1232
  %1252 = load i8*, i8** %1251, align 8
  %1253 = mul nsw i32 %1250, %1226
  %1254 = sext i32 %1253 to i64
  %1255 = getelementptr inbounds i8, i8* %1252, i64 %1254
  %1256 = sext i32 %1250 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1233, i8* align 1 %1255, i64 %1256, i1 false) #10
  %1257 = getelementptr inbounds i8, i8* %1233, i64 %1256
  %1258 = add nuw nsw i64 %1232, 1
  %1259 = icmp eq i64 %1258, %1187
  br i1 %1259, label %1227, label %1231

1260:                                             ; preds = %1227
  %1261 = load i32, i32* %1075, align 8
  br label %1262

1262:                                             ; preds = %1260, %1181
  %1263 = phi i32 [ %1261, %1260 ], [ %1071, %1181 ]
  %1264 = icmp sgt i32 %1263, 5
  br i1 %1264, label %1265, label %1271

1265:                                             ; preds = %1262
  %1266 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %1267 = load i32*, i32** %1266, align 8
  %1268 = icmp eq i32* %1267, null
  br i1 %1268, label %1271, label %1269

1269:                                             ; preds = %1265
  %1270 = bitcast i32* %1267 to i8*
  call void @_ZdaPv(i8* %1270) #11
  br label %1271

1271:                                             ; preds = %1262, %1265, %1269
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1038) #10
  %1272 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %1034, align 8
  %1273 = icmp eq %"class.tflite::RuntimeShape"** %1272, null
  br i1 %1273, label %1279, label %1274

1274:                                             ; preds = %1271
  %1275 = ptrtoint %"class.tflite::RuntimeShape"** %1272 to i64
  %1276 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %9, i64 0, i32 2, i32 0, i32 1
  %1277 = bitcast %"class.tflite::RuntimeShape"*** %1276 to i64*
  store i64 %1275, i64* %1277, align 8
  %1278 = bitcast %"class.tflite::RuntimeShape"** %1272 to i8*
  call void @_ZdlPv(i8* %1278) #11
  br label %1279

1279:                                             ; preds = %1274, %1271
  %1280 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %9, i64 0, i32 1
  %1281 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %1280, i64 0, i32 0, i32 0
  %1282 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %1281, align 8
  %1283 = icmp eq %"class.tflite::RuntimeShape"* %1282, null
  br i1 %1283, label %1308, label %1284

1284:                                             ; preds = %1279
  %1285 = bitcast %"class.tflite::RuntimeShape"* %1282 to i8*
  %1286 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %9, i64 0, i32 1, i32 0, i32 1
  %1287 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %1286, align 8
  %1288 = icmp eq %"class.tflite::RuntimeShape"* %1287, %1282
  br i1 %1288, label %1306, label %1289

1289:                                             ; preds = %1284, %1301
  %1290 = phi %"class.tflite::RuntimeShape"* [ %1291, %1301 ], [ %1287, %1284 ]
  %1291 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1290, i64 -1
  %1292 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1291, i64 0, i32 0
  %1293 = load i32, i32* %1292, align 8
  %1294 = icmp sgt i32 %1293, 5
  br i1 %1294, label %1295, label %1301

1295:                                             ; preds = %1289
  %1296 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1290, i64 -1, i32 1, i32 0
  %1297 = load i32*, i32** %1296, align 8
  %1298 = icmp eq i32* %1297, null
  br i1 %1298, label %1301, label %1299

1299:                                             ; preds = %1295
  %1300 = bitcast i32* %1297 to i8*
  call void @_ZdaPv(i8* %1300) #11
  br label %1301

1301:                                             ; preds = %1299, %1295, %1289
  %1302 = icmp eq %"class.tflite::RuntimeShape"* %1291, %1282
  br i1 %1302, label %1303, label %1289

1303:                                             ; preds = %1301
  %1304 = bitcast %"class.std::__1::vector.2"* %1280 to i8**
  %1305 = load i8*, i8** %1304, align 8
  br label %1306

1306:                                             ; preds = %1303, %1284
  %1307 = phi i8* [ %1305, %1303 ], [ %1285, %1284 ]
  store %"class.tflite::RuntimeShape"* %1282, %"class.tflite::RuntimeShape"** %1286, align 8
  call void @_ZdlPv(i8* %1307) #11
  br label %1308

1308:                                             ; preds = %1306, %1279
  %1309 = load i8**, i8*** %1036, align 8
  %1310 = icmp eq i8** %1309, null
  br i1 %1310, label %1316, label %1311

1311:                                             ; preds = %1308
  %1312 = ptrtoint i8** %1309 to i64
  %1313 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %9, i64 0, i32 0, i32 0, i32 1
  %1314 = bitcast i8*** %1313 to i64*
  store i64 %1312, i64* %1314, align 8
  %1315 = bitcast i8** %1309 to i8*
  call void @_ZdlPv(i8* %1315) #11
  br label %1316

1316:                                             ; preds = %1308, %1311
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1026) #10
  br label %1911

1317:                                             ; preds = %39
  %1318 = bitcast %"class.tflite::VectorOfTensors.62"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %1318) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1318, i8 -86, i64 72, i1 false)
  %1319 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %1320 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1319, align 8
  call void @_ZN6tflite15VectorOfTensorsIlEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors.62"* nonnull %11, %struct.TfLiteContext* dereferenceable(160) %0, %struct.TfLiteIntArray* dereferenceable(4) %1320)
  %1321 = trunc i32 %40 to i8
  %1322 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1319, align 8
  %1323 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1322, i64 0, i32 0
  %1324 = load i32, i32* %1323, align 4
  %1325 = trunc i32 %1324 to i16
  %1326 = getelementptr inbounds %"class.tflite::VectorOfTensors.62", %"class.tflite::VectorOfTensors.62"* %11, i64 0, i32 2, i32 0, i32 0
  %1327 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %1326, align 8
  %1328 = getelementptr inbounds %"class.tflite::VectorOfTensors.62", %"class.tflite::VectorOfTensors.62"* %11, i64 0, i32 0, i32 0, i32 0
  %1329 = load i64**, i64*** %1328, align 8
  %1330 = bitcast %"class.tflite::RuntimeShape"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1330) #10
  %1331 = icmp eq %struct.TfLiteTensor* %31, null
  br i1 %1331, label %1332, label %1334

1332:                                             ; preds = %1317
  %1333 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 0, i32* %1333, align 8, !alias.scope !34
  br label %1362

1334:                                             ; preds = %1317
  %1335 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %31, i64 0, i32 2
  %1336 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1335, align 8, !noalias !34
  %1337 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1336, i64 0, i32 0
  %1338 = load i32, i32* %1337, align 4, !noalias !34
  %1339 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1336, i64 0, i32 1, i64 0
  %1340 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 %1338, i32* %1340, align 8, !alias.scope !34
  %1341 = icmp sgt i32 %1338, 5
  br i1 %1341, label %1342, label %1349

1342:                                             ; preds = %1334
  %1343 = sext i32 %1338 to i64
  %1344 = shl nsw i64 %1343, 2
  %1345 = call i8* @_Znam(i64 %1344) #11, !noalias !34
  %1346 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %1347 = bitcast i32** %1346 to i8**
  store i8* %1345, i8** %1347, align 8, !alias.scope !34
  %1348 = bitcast i8* %1345 to i32*
  br label %1354

1349:                                             ; preds = %1334
  %1350 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %1351 = bitcast %union.anon* %1350 to i32*
  %1352 = sext i32 %1338 to i64
  %1353 = shl nsw i64 %1352, 2
  br label %1354

1354:                                             ; preds = %1349, %1342
  %1355 = phi i64 [ %1344, %1342 ], [ %1353, %1349 ]
  %1356 = phi i32* [ %1348, %1342 ], [ %1351, %1349 ]
  %1357 = bitcast i32* %1356 to i8*
  %1358 = bitcast i32* %1339 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1357, i8* align 4 %1358, i64 %1355, i1 false) #10
  %1359 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %31, i64 0, i32 1
  %1360 = bitcast %union.TfLitePtrUnion* %1359 to i64**
  %1361 = load i64*, i64** %1360, align 8
  br label %1362

1362:                                             ; preds = %1332, %1354
  %1363 = phi i32 [ %1338, %1354 ], [ 0, %1332 ]
  %1364 = phi i64* [ %1361, %1354 ], [ null, %1332 ]
  %1365 = shl i32 %40, 24
  %1366 = ashr exact i32 %1365, 24
  %1367 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  %1368 = icmp eq i16 %1325, 0
  %1369 = icmp sgt i32 %1363, 5
  %1370 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %1371 = icmp sgt i8 %1321, 0
  br i1 %1371, label %1372, label %1400

1372:                                             ; preds = %1362
  %1373 = getelementptr inbounds %union.anon, %union.anon* %1370, i64 0, i32 0
  %1374 = load i32*, i32** %1373, align 8
  %1375 = bitcast %union.anon* %1370 to [5 x i32]*
  %1376 = zext i32 %1366 to i64
  %1377 = add nsw i64 %1376, -1
  %1378 = and i64 %1376, 3
  %1379 = icmp ult i64 %1377, 3
  br i1 %1379, label %1382, label %1380

1380:                                             ; preds = %1372
  %1381 = sub nsw i64 %1376, %1378
  br label %1418

1382:                                             ; preds = %1418, %1372
  %1383 = phi i64 [ undef, %1372 ], [ %1448, %1418 ]
  %1384 = phi i64 [ 0, %1372 ], [ %1449, %1418 ]
  %1385 = phi i64 [ 1, %1372 ], [ %1448, %1418 ]
  %1386 = icmp eq i64 %1378, 0
  br i1 %1386, label %1400, label %1387

1387:                                             ; preds = %1382, %1387
  %1388 = phi i64 [ %1397, %1387 ], [ %1384, %1382 ]
  %1389 = phi i64 [ %1396, %1387 ], [ %1385, %1382 ]
  %1390 = phi i64 [ %1398, %1387 ], [ %1378, %1382 ]
  %1391 = getelementptr inbounds i32, i32* %1374, i64 %1388
  %1392 = getelementptr inbounds [5 x i32], [5 x i32]* %1375, i64 0, i64 %1388
  %1393 = select i1 %1369, i32* %1391, i32* %1392
  %1394 = load i32, i32* %1393, align 4
  %1395 = sext i32 %1394 to i64
  %1396 = mul nsw i64 %1389, %1395
  %1397 = add nuw nsw i64 %1388, 1
  %1398 = add i64 %1390, -1
  %1399 = icmp eq i64 %1398, 0
  br i1 %1399, label %1400, label %1387, !llvm.loop !37

1400:                                             ; preds = %1382, %1387, %1362
  %1401 = phi i64 [ 1, %1362 ], [ %1383, %1382 ], [ %1396, %1387 ]
  %1402 = add nsw i32 %1366, 1
  %1403 = icmp slt i32 %1402, %1363
  br i1 %1403, label %1404, label %1473

1404:                                             ; preds = %1400
  %1405 = getelementptr inbounds %union.anon, %union.anon* %1370, i64 0, i32 0
  %1406 = load i32*, i32** %1405, align 8
  %1407 = bitcast %union.anon* %1370 to [5 x i32]*
  %1408 = sext i8 %1321 to i64
  %1409 = add nsw i64 %1408, 1
  %1410 = xor i32 %1366, -1
  %1411 = add i32 %1363, %1410
  %1412 = add i32 %1363, -2
  %1413 = sub i32 %1412, %1366
  %1414 = and i32 %1411, 3
  %1415 = icmp ult i32 %1413, 3
  br i1 %1415, label %1452, label %1416

1416:                                             ; preds = %1404
  %1417 = sub i32 %1411, %1414
  br label %1480

1418:                                             ; preds = %1418, %1380
  %1419 = phi i64 [ 0, %1380 ], [ %1449, %1418 ]
  %1420 = phi i64 [ 1, %1380 ], [ %1448, %1418 ]
  %1421 = phi i64 [ %1381, %1380 ], [ %1450, %1418 ]
  %1422 = getelementptr inbounds i32, i32* %1374, i64 %1419
  %1423 = getelementptr inbounds [5 x i32], [5 x i32]* %1375, i64 0, i64 %1419
  %1424 = select i1 %1369, i32* %1422, i32* %1423
  %1425 = load i32, i32* %1424, align 4
  %1426 = sext i32 %1425 to i64
  %1427 = mul nsw i64 %1420, %1426
  %1428 = or i64 %1419, 1
  %1429 = getelementptr inbounds i32, i32* %1374, i64 %1428
  %1430 = getelementptr inbounds [5 x i32], [5 x i32]* %1375, i64 0, i64 %1428
  %1431 = select i1 %1369, i32* %1429, i32* %1430
  %1432 = load i32, i32* %1431, align 4
  %1433 = sext i32 %1432 to i64
  %1434 = mul nsw i64 %1427, %1433
  %1435 = or i64 %1419, 2
  %1436 = getelementptr inbounds i32, i32* %1374, i64 %1435
  %1437 = getelementptr inbounds [5 x i32], [5 x i32]* %1375, i64 0, i64 %1435
  %1438 = select i1 %1369, i32* %1436, i32* %1437
  %1439 = load i32, i32* %1438, align 4
  %1440 = sext i32 %1439 to i64
  %1441 = mul nsw i64 %1434, %1440
  %1442 = or i64 %1419, 3
  %1443 = getelementptr inbounds i32, i32* %1374, i64 %1442
  %1444 = getelementptr inbounds [5 x i32], [5 x i32]* %1375, i64 0, i64 %1442
  %1445 = select i1 %1369, i32* %1443, i32* %1444
  %1446 = load i32, i32* %1445, align 4
  %1447 = sext i32 %1446 to i64
  %1448 = mul nsw i64 %1441, %1447
  %1449 = add nuw nsw i64 %1419, 4
  %1450 = add i64 %1421, -4
  %1451 = icmp eq i64 %1450, 0
  br i1 %1451, label %1382, label %1418

1452:                                             ; preds = %1480, %1404
  %1453 = phi i64 [ undef, %1404 ], [ %1510, %1480 ]
  %1454 = phi i64 [ %1409, %1404 ], [ %1511, %1480 ]
  %1455 = phi i64 [ 1, %1404 ], [ %1510, %1480 ]
  %1456 = icmp eq i32 %1414, 0
  br i1 %1456, label %1470, label %1457

1457:                                             ; preds = %1452, %1457
  %1458 = phi i64 [ %1467, %1457 ], [ %1454, %1452 ]
  %1459 = phi i64 [ %1466, %1457 ], [ %1455, %1452 ]
  %1460 = phi i32 [ %1468, %1457 ], [ %1414, %1452 ]
  %1461 = getelementptr inbounds i32, i32* %1406, i64 %1458
  %1462 = getelementptr inbounds [5 x i32], [5 x i32]* %1407, i64 0, i64 %1458
  %1463 = select i1 %1369, i32* %1461, i32* %1462
  %1464 = load i32, i32* %1463, align 4
  %1465 = sext i32 %1464 to i64
  %1466 = mul nsw i64 %1459, %1465
  %1467 = add i64 %1458, 1
  %1468 = add i32 %1460, -1
  %1469 = icmp eq i32 %1468, 0
  br i1 %1469, label %1470, label %1457, !llvm.loop !38

1470:                                             ; preds = %1457, %1452
  %1471 = phi i64 [ %1453, %1452 ], [ %1466, %1457 ]
  %1472 = trunc i64 %1471 to i32
  br label %1473

1473:                                             ; preds = %1470, %1400
  %1474 = phi i32 [ 1, %1400 ], [ %1472, %1470 ]
  %1475 = icmp sgt i64 %1401, 0
  br i1 %1475, label %1476, label %1557

1476:                                             ; preds = %1473
  %1477 = sext i8 %1321 to i64
  %1478 = and i32 %1324, 65535
  %1479 = zext i32 %1478 to i64
  br label %1514

1480:                                             ; preds = %1480, %1416
  %1481 = phi i64 [ %1409, %1416 ], [ %1511, %1480 ]
  %1482 = phi i64 [ 1, %1416 ], [ %1510, %1480 ]
  %1483 = phi i32 [ %1417, %1416 ], [ %1512, %1480 ]
  %1484 = getelementptr inbounds i32, i32* %1406, i64 %1481
  %1485 = getelementptr inbounds [5 x i32], [5 x i32]* %1407, i64 0, i64 %1481
  %1486 = select i1 %1369, i32* %1484, i32* %1485
  %1487 = load i32, i32* %1486, align 4
  %1488 = sext i32 %1487 to i64
  %1489 = mul nsw i64 %1482, %1488
  %1490 = add i64 %1481, 1
  %1491 = getelementptr inbounds i32, i32* %1406, i64 %1490
  %1492 = getelementptr inbounds [5 x i32], [5 x i32]* %1407, i64 0, i64 %1490
  %1493 = select i1 %1369, i32* %1491, i32* %1492
  %1494 = load i32, i32* %1493, align 4
  %1495 = sext i32 %1494 to i64
  %1496 = mul nsw i64 %1489, %1495
  %1497 = add i64 %1481, 2
  %1498 = getelementptr inbounds i32, i32* %1406, i64 %1497
  %1499 = getelementptr inbounds [5 x i32], [5 x i32]* %1407, i64 0, i64 %1497
  %1500 = select i1 %1369, i32* %1498, i32* %1499
  %1501 = load i32, i32* %1500, align 4
  %1502 = sext i32 %1501 to i64
  %1503 = mul nsw i64 %1496, %1502
  %1504 = add i64 %1481, 3
  %1505 = getelementptr inbounds i32, i32* %1406, i64 %1504
  %1506 = getelementptr inbounds [5 x i32], [5 x i32]* %1407, i64 0, i64 %1504
  %1507 = select i1 %1369, i32* %1505, i32* %1506
  %1508 = load i32, i32* %1507, align 4
  %1509 = sext i32 %1508 to i64
  %1510 = mul nsw i64 %1503, %1509
  %1511 = add i64 %1481, 4
  %1512 = add i32 %1483, -4
  %1513 = icmp eq i32 %1512, 0
  br i1 %1513, label %1452, label %1480

1514:                                             ; preds = %1519, %1476
  %1515 = phi i64 [ 0, %1476 ], [ %1521, %1519 ]
  %1516 = phi i64* [ %1364, %1476 ], [ %1520, %1519 ]
  br i1 %1368, label %1519, label %1517

1517:                                             ; preds = %1514
  %1518 = trunc i64 %1515 to i32
  br label %1523

1519:                                             ; preds = %1539, %1514
  %1520 = phi i64* [ %1516, %1514 ], [ %1552, %1539 ]
  %1521 = add nuw nsw i64 %1515, 1
  %1522 = icmp eq i64 %1521, %1401
  br i1 %1522, label %1555, label %1514

1523:                                             ; preds = %1539, %1517
  %1524 = phi i64 [ 0, %1517 ], [ %1553, %1539 ]
  %1525 = phi i64* [ %1516, %1517 ], [ %1552, %1539 ]
  %1526 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %1327, i64 %1524
  %1527 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %1526, align 8
  %1528 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1527, i64 0, i32 0
  %1529 = load i32, i32* %1528, align 8
  %1530 = icmp sgt i32 %1529, 5
  %1531 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1527, i64 0, i32 1
  br i1 %1530, label %1532, label %1536

1532:                                             ; preds = %1523
  %1533 = getelementptr inbounds %union.anon, %union.anon* %1531, i64 0, i32 0
  %1534 = load i32*, i32** %1533, align 8
  %1535 = getelementptr inbounds i32, i32* %1534, i64 %1477
  br label %1539

1536:                                             ; preds = %1523
  %1537 = bitcast %union.anon* %1531 to [5 x i32]*
  %1538 = getelementptr inbounds [5 x i32], [5 x i32]* %1537, i64 0, i64 %1477
  br label %1539

1539:                                             ; preds = %1536, %1532
  %1540 = phi i32* [ %1535, %1532 ], [ %1538, %1536 ]
  %1541 = load i32, i32* %1540, align 4
  %1542 = mul i32 %1541, %1474
  %1543 = getelementptr inbounds i64*, i64** %1329, i64 %1524
  %1544 = load i64*, i64** %1543, align 8
  %1545 = mul nsw i32 %1542, %1518
  %1546 = sext i32 %1545 to i64
  %1547 = getelementptr inbounds i64, i64* %1544, i64 %1546
  %1548 = bitcast i64* %1525 to i8*
  %1549 = bitcast i64* %1547 to i8*
  %1550 = sext i32 %1542 to i64
  %1551 = shl nsw i64 %1550, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1548, i8* align 8 %1549, i64 %1551, i1 false) #10
  %1552 = getelementptr inbounds i64, i64* %1525, i64 %1550
  %1553 = add nuw nsw i64 %1524, 1
  %1554 = icmp eq i64 %1553, %1479
  br i1 %1554, label %1519, label %1523

1555:                                             ; preds = %1519
  %1556 = load i32, i32* %1367, align 8
  br label %1557

1557:                                             ; preds = %1555, %1473
  %1558 = phi i32 [ %1556, %1555 ], [ %1363, %1473 ]
  %1559 = icmp sgt i32 %1558, 5
  br i1 %1559, label %1560, label %1566

1560:                                             ; preds = %1557
  %1561 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %1562 = load i32*, i32** %1561, align 8
  %1563 = icmp eq i32* %1562, null
  br i1 %1563, label %1566, label %1564

1564:                                             ; preds = %1560
  %1565 = bitcast i32* %1562 to i8*
  call void @_ZdaPv(i8* %1565) #11
  br label %1566

1566:                                             ; preds = %1557, %1560, %1564
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1330) #10
  %1567 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %1326, align 8
  %1568 = icmp eq %"class.tflite::RuntimeShape"** %1567, null
  br i1 %1568, label %1574, label %1569

1569:                                             ; preds = %1566
  %1570 = ptrtoint %"class.tflite::RuntimeShape"** %1567 to i64
  %1571 = getelementptr inbounds %"class.tflite::VectorOfTensors.62", %"class.tflite::VectorOfTensors.62"* %11, i64 0, i32 2, i32 0, i32 1
  %1572 = bitcast %"class.tflite::RuntimeShape"*** %1571 to i64*
  store i64 %1570, i64* %1572, align 8
  %1573 = bitcast %"class.tflite::RuntimeShape"** %1567 to i8*
  call void @_ZdlPv(i8* %1573) #11
  br label %1574

1574:                                             ; preds = %1569, %1566
  %1575 = getelementptr inbounds %"class.tflite::VectorOfTensors.62", %"class.tflite::VectorOfTensors.62"* %11, i64 0, i32 1
  %1576 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %1575, i64 0, i32 0, i32 0
  %1577 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %1576, align 8
  %1578 = icmp eq %"class.tflite::RuntimeShape"* %1577, null
  br i1 %1578, label %1603, label %1579

1579:                                             ; preds = %1574
  %1580 = bitcast %"class.tflite::RuntimeShape"* %1577 to i8*
  %1581 = getelementptr inbounds %"class.tflite::VectorOfTensors.62", %"class.tflite::VectorOfTensors.62"* %11, i64 0, i32 1, i32 0, i32 1
  %1582 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %1581, align 8
  %1583 = icmp eq %"class.tflite::RuntimeShape"* %1582, %1577
  br i1 %1583, label %1601, label %1584

1584:                                             ; preds = %1579, %1596
  %1585 = phi %"class.tflite::RuntimeShape"* [ %1586, %1596 ], [ %1582, %1579 ]
  %1586 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1585, i64 -1
  %1587 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1586, i64 0, i32 0
  %1588 = load i32, i32* %1587, align 8
  %1589 = icmp sgt i32 %1588, 5
  br i1 %1589, label %1590, label %1596

1590:                                             ; preds = %1584
  %1591 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1585, i64 -1, i32 1, i32 0
  %1592 = load i32*, i32** %1591, align 8
  %1593 = icmp eq i32* %1592, null
  br i1 %1593, label %1596, label %1594

1594:                                             ; preds = %1590
  %1595 = bitcast i32* %1592 to i8*
  call void @_ZdaPv(i8* %1595) #11
  br label %1596

1596:                                             ; preds = %1594, %1590, %1584
  %1597 = icmp eq %"class.tflite::RuntimeShape"* %1586, %1577
  br i1 %1597, label %1598, label %1584

1598:                                             ; preds = %1596
  %1599 = bitcast %"class.std::__1::vector.2"* %1575 to i8**
  %1600 = load i8*, i8** %1599, align 8
  br label %1601

1601:                                             ; preds = %1598, %1579
  %1602 = phi i8* [ %1600, %1598 ], [ %1580, %1579 ]
  store %"class.tflite::RuntimeShape"* %1577, %"class.tflite::RuntimeShape"** %1581, align 8
  call void @_ZdlPv(i8* %1602) #11
  br label %1603

1603:                                             ; preds = %1601, %1574
  %1604 = load i64**, i64*** %1328, align 8
  %1605 = icmp eq i64** %1604, null
  br i1 %1605, label %1611, label %1606

1606:                                             ; preds = %1603
  %1607 = ptrtoint i64** %1604 to i64
  %1608 = getelementptr inbounds %"class.tflite::VectorOfTensors.62", %"class.tflite::VectorOfTensors.62"* %11, i64 0, i32 0, i32 0, i32 1
  %1609 = bitcast i64*** %1608 to i64*
  store i64 %1607, i64* %1609, align 8
  %1610 = bitcast i64** %1604 to i8*
  call void @_ZdlPv(i8* %1610) #11
  br label %1611

1611:                                             ; preds = %1603, %1606
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1318) #10
  br label %1911

1612:                                             ; preds = %39
  %1613 = bitcast %"class.tflite::VectorOfTensors.70"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %1613) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1613, i8 -86, i64 72, i1 false)
  %1614 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %1615 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1614, align 8
  call void @_ZN6tflite15VectorOfTensorsIsEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors.70"* nonnull %13, %struct.TfLiteContext* dereferenceable(160) %0, %struct.TfLiteIntArray* dereferenceable(4) %1615)
  %1616 = trunc i32 %40 to i8
  %1617 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1614, align 8
  %1618 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1617, i64 0, i32 0
  %1619 = load i32, i32* %1618, align 4
  %1620 = trunc i32 %1619 to i16
  %1621 = getelementptr inbounds %"class.tflite::VectorOfTensors.70", %"class.tflite::VectorOfTensors.70"* %13, i64 0, i32 2, i32 0, i32 0
  %1622 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %1621, align 8
  %1623 = getelementptr inbounds %"class.tflite::VectorOfTensors.70", %"class.tflite::VectorOfTensors.70"* %13, i64 0, i32 0, i32 0, i32 0
  %1624 = load i16**, i16*** %1623, align 8
  %1625 = bitcast %"class.tflite::RuntimeShape"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1625) #10
  %1626 = icmp eq %struct.TfLiteTensor* %31, null
  br i1 %1626, label %1627, label %1629

1627:                                             ; preds = %1612
  %1628 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 0, i32* %1628, align 8, !alias.scope !39
  br label %1657

1629:                                             ; preds = %1612
  %1630 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %31, i64 0, i32 2
  %1631 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1630, align 8, !noalias !39
  %1632 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1631, i64 0, i32 0
  %1633 = load i32, i32* %1632, align 4, !noalias !39
  %1634 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1631, i64 0, i32 1, i64 0
  %1635 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 %1633, i32* %1635, align 8, !alias.scope !39
  %1636 = icmp sgt i32 %1633, 5
  br i1 %1636, label %1637, label %1644

1637:                                             ; preds = %1629
  %1638 = sext i32 %1633 to i64
  %1639 = shl nsw i64 %1638, 2
  %1640 = call i8* @_Znam(i64 %1639) #11, !noalias !39
  %1641 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %1642 = bitcast i32** %1641 to i8**
  store i8* %1640, i8** %1642, align 8, !alias.scope !39
  %1643 = bitcast i8* %1640 to i32*
  br label %1649

1644:                                             ; preds = %1629
  %1645 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %1646 = bitcast %union.anon* %1645 to i32*
  %1647 = sext i32 %1633 to i64
  %1648 = shl nsw i64 %1647, 2
  br label %1649

1649:                                             ; preds = %1644, %1637
  %1650 = phi i64 [ %1639, %1637 ], [ %1648, %1644 ]
  %1651 = phi i32* [ %1643, %1637 ], [ %1646, %1644 ]
  %1652 = bitcast i32* %1651 to i8*
  %1653 = bitcast i32* %1634 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1652, i8* align 4 %1653, i64 %1650, i1 false) #10
  %1654 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %31, i64 0, i32 1
  %1655 = bitcast %union.TfLitePtrUnion* %1654 to i16**
  %1656 = load i16*, i16** %1655, align 8
  br label %1657

1657:                                             ; preds = %1627, %1649
  %1658 = phi i32 [ %1633, %1649 ], [ 0, %1627 ]
  %1659 = phi i16* [ %1656, %1649 ], [ null, %1627 ]
  %1660 = shl i32 %40, 24
  %1661 = ashr exact i32 %1660, 24
  %1662 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  %1663 = icmp eq i16 %1620, 0
  %1664 = icmp sgt i32 %1658, 5
  %1665 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %1666 = icmp sgt i8 %1616, 0
  br i1 %1666, label %1667, label %1695

1667:                                             ; preds = %1657
  %1668 = getelementptr inbounds %union.anon, %union.anon* %1665, i64 0, i32 0
  %1669 = load i32*, i32** %1668, align 8
  %1670 = bitcast %union.anon* %1665 to [5 x i32]*
  %1671 = zext i32 %1661 to i64
  %1672 = add nsw i64 %1671, -1
  %1673 = and i64 %1671, 3
  %1674 = icmp ult i64 %1672, 3
  br i1 %1674, label %1677, label %1675

1675:                                             ; preds = %1667
  %1676 = sub nsw i64 %1671, %1673
  br label %1713

1677:                                             ; preds = %1713, %1667
  %1678 = phi i64 [ undef, %1667 ], [ %1743, %1713 ]
  %1679 = phi i64 [ 0, %1667 ], [ %1744, %1713 ]
  %1680 = phi i64 [ 1, %1667 ], [ %1743, %1713 ]
  %1681 = icmp eq i64 %1673, 0
  br i1 %1681, label %1695, label %1682

1682:                                             ; preds = %1677, %1682
  %1683 = phi i64 [ %1692, %1682 ], [ %1679, %1677 ]
  %1684 = phi i64 [ %1691, %1682 ], [ %1680, %1677 ]
  %1685 = phi i64 [ %1693, %1682 ], [ %1673, %1677 ]
  %1686 = getelementptr inbounds i32, i32* %1669, i64 %1683
  %1687 = getelementptr inbounds [5 x i32], [5 x i32]* %1670, i64 0, i64 %1683
  %1688 = select i1 %1664, i32* %1686, i32* %1687
  %1689 = load i32, i32* %1688, align 4
  %1690 = sext i32 %1689 to i64
  %1691 = mul nsw i64 %1684, %1690
  %1692 = add nuw nsw i64 %1683, 1
  %1693 = add i64 %1685, -1
  %1694 = icmp eq i64 %1693, 0
  br i1 %1694, label %1695, label %1682, !llvm.loop !42

1695:                                             ; preds = %1677, %1682, %1657
  %1696 = phi i64 [ 1, %1657 ], [ %1678, %1677 ], [ %1691, %1682 ]
  %1697 = add nsw i32 %1661, 1
  %1698 = icmp slt i32 %1697, %1658
  br i1 %1698, label %1699, label %1768

1699:                                             ; preds = %1695
  %1700 = getelementptr inbounds %union.anon, %union.anon* %1665, i64 0, i32 0
  %1701 = load i32*, i32** %1700, align 8
  %1702 = bitcast %union.anon* %1665 to [5 x i32]*
  %1703 = sext i8 %1616 to i64
  %1704 = add nsw i64 %1703, 1
  %1705 = xor i32 %1661, -1
  %1706 = add i32 %1658, %1705
  %1707 = add i32 %1658, -2
  %1708 = sub i32 %1707, %1661
  %1709 = and i32 %1706, 3
  %1710 = icmp ult i32 %1708, 3
  br i1 %1710, label %1747, label %1711

1711:                                             ; preds = %1699
  %1712 = sub i32 %1706, %1709
  br label %1775

1713:                                             ; preds = %1713, %1675
  %1714 = phi i64 [ 0, %1675 ], [ %1744, %1713 ]
  %1715 = phi i64 [ 1, %1675 ], [ %1743, %1713 ]
  %1716 = phi i64 [ %1676, %1675 ], [ %1745, %1713 ]
  %1717 = getelementptr inbounds i32, i32* %1669, i64 %1714
  %1718 = getelementptr inbounds [5 x i32], [5 x i32]* %1670, i64 0, i64 %1714
  %1719 = select i1 %1664, i32* %1717, i32* %1718
  %1720 = load i32, i32* %1719, align 4
  %1721 = sext i32 %1720 to i64
  %1722 = mul nsw i64 %1715, %1721
  %1723 = or i64 %1714, 1
  %1724 = getelementptr inbounds i32, i32* %1669, i64 %1723
  %1725 = getelementptr inbounds [5 x i32], [5 x i32]* %1670, i64 0, i64 %1723
  %1726 = select i1 %1664, i32* %1724, i32* %1725
  %1727 = load i32, i32* %1726, align 4
  %1728 = sext i32 %1727 to i64
  %1729 = mul nsw i64 %1722, %1728
  %1730 = or i64 %1714, 2
  %1731 = getelementptr inbounds i32, i32* %1669, i64 %1730
  %1732 = getelementptr inbounds [5 x i32], [5 x i32]* %1670, i64 0, i64 %1730
  %1733 = select i1 %1664, i32* %1731, i32* %1732
  %1734 = load i32, i32* %1733, align 4
  %1735 = sext i32 %1734 to i64
  %1736 = mul nsw i64 %1729, %1735
  %1737 = or i64 %1714, 3
  %1738 = getelementptr inbounds i32, i32* %1669, i64 %1737
  %1739 = getelementptr inbounds [5 x i32], [5 x i32]* %1670, i64 0, i64 %1737
  %1740 = select i1 %1664, i32* %1738, i32* %1739
  %1741 = load i32, i32* %1740, align 4
  %1742 = sext i32 %1741 to i64
  %1743 = mul nsw i64 %1736, %1742
  %1744 = add nuw nsw i64 %1714, 4
  %1745 = add i64 %1716, -4
  %1746 = icmp eq i64 %1745, 0
  br i1 %1746, label %1677, label %1713

1747:                                             ; preds = %1775, %1699
  %1748 = phi i64 [ undef, %1699 ], [ %1805, %1775 ]
  %1749 = phi i64 [ %1704, %1699 ], [ %1806, %1775 ]
  %1750 = phi i64 [ 1, %1699 ], [ %1805, %1775 ]
  %1751 = icmp eq i32 %1709, 0
  br i1 %1751, label %1765, label %1752

1752:                                             ; preds = %1747, %1752
  %1753 = phi i64 [ %1762, %1752 ], [ %1749, %1747 ]
  %1754 = phi i64 [ %1761, %1752 ], [ %1750, %1747 ]
  %1755 = phi i32 [ %1763, %1752 ], [ %1709, %1747 ]
  %1756 = getelementptr inbounds i32, i32* %1701, i64 %1753
  %1757 = getelementptr inbounds [5 x i32], [5 x i32]* %1702, i64 0, i64 %1753
  %1758 = select i1 %1664, i32* %1756, i32* %1757
  %1759 = load i32, i32* %1758, align 4
  %1760 = sext i32 %1759 to i64
  %1761 = mul nsw i64 %1754, %1760
  %1762 = add i64 %1753, 1
  %1763 = add i32 %1755, -1
  %1764 = icmp eq i32 %1763, 0
  br i1 %1764, label %1765, label %1752, !llvm.loop !43

1765:                                             ; preds = %1752, %1747
  %1766 = phi i64 [ %1748, %1747 ], [ %1761, %1752 ]
  %1767 = trunc i64 %1766 to i32
  br label %1768

1768:                                             ; preds = %1765, %1695
  %1769 = phi i32 [ 1, %1695 ], [ %1767, %1765 ]
  %1770 = icmp sgt i64 %1696, 0
  br i1 %1770, label %1771, label %1852

1771:                                             ; preds = %1768
  %1772 = sext i8 %1616 to i64
  %1773 = and i32 %1619, 65535
  %1774 = zext i32 %1773 to i64
  br label %1809

1775:                                             ; preds = %1775, %1711
  %1776 = phi i64 [ %1704, %1711 ], [ %1806, %1775 ]
  %1777 = phi i64 [ 1, %1711 ], [ %1805, %1775 ]
  %1778 = phi i32 [ %1712, %1711 ], [ %1807, %1775 ]
  %1779 = getelementptr inbounds i32, i32* %1701, i64 %1776
  %1780 = getelementptr inbounds [5 x i32], [5 x i32]* %1702, i64 0, i64 %1776
  %1781 = select i1 %1664, i32* %1779, i32* %1780
  %1782 = load i32, i32* %1781, align 4
  %1783 = sext i32 %1782 to i64
  %1784 = mul nsw i64 %1777, %1783
  %1785 = add i64 %1776, 1
  %1786 = getelementptr inbounds i32, i32* %1701, i64 %1785
  %1787 = getelementptr inbounds [5 x i32], [5 x i32]* %1702, i64 0, i64 %1785
  %1788 = select i1 %1664, i32* %1786, i32* %1787
  %1789 = load i32, i32* %1788, align 4
  %1790 = sext i32 %1789 to i64
  %1791 = mul nsw i64 %1784, %1790
  %1792 = add i64 %1776, 2
  %1793 = getelementptr inbounds i32, i32* %1701, i64 %1792
  %1794 = getelementptr inbounds [5 x i32], [5 x i32]* %1702, i64 0, i64 %1792
  %1795 = select i1 %1664, i32* %1793, i32* %1794
  %1796 = load i32, i32* %1795, align 4
  %1797 = sext i32 %1796 to i64
  %1798 = mul nsw i64 %1791, %1797
  %1799 = add i64 %1776, 3
  %1800 = getelementptr inbounds i32, i32* %1701, i64 %1799
  %1801 = getelementptr inbounds [5 x i32], [5 x i32]* %1702, i64 0, i64 %1799
  %1802 = select i1 %1664, i32* %1800, i32* %1801
  %1803 = load i32, i32* %1802, align 4
  %1804 = sext i32 %1803 to i64
  %1805 = mul nsw i64 %1798, %1804
  %1806 = add i64 %1776, 4
  %1807 = add i32 %1778, -4
  %1808 = icmp eq i32 %1807, 0
  br i1 %1808, label %1747, label %1775

1809:                                             ; preds = %1814, %1771
  %1810 = phi i64 [ 0, %1771 ], [ %1816, %1814 ]
  %1811 = phi i16* [ %1659, %1771 ], [ %1815, %1814 ]
  br i1 %1663, label %1814, label %1812

1812:                                             ; preds = %1809
  %1813 = trunc i64 %1810 to i32
  br label %1818

1814:                                             ; preds = %1834, %1809
  %1815 = phi i16* [ %1811, %1809 ], [ %1847, %1834 ]
  %1816 = add nuw nsw i64 %1810, 1
  %1817 = icmp eq i64 %1816, %1696
  br i1 %1817, label %1850, label %1809

1818:                                             ; preds = %1834, %1812
  %1819 = phi i64 [ 0, %1812 ], [ %1848, %1834 ]
  %1820 = phi i16* [ %1811, %1812 ], [ %1847, %1834 ]
  %1821 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %1622, i64 %1819
  %1822 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %1821, align 8
  %1823 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1822, i64 0, i32 0
  %1824 = load i32, i32* %1823, align 8
  %1825 = icmp sgt i32 %1824, 5
  %1826 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1822, i64 0, i32 1
  br i1 %1825, label %1827, label %1831

1827:                                             ; preds = %1818
  %1828 = getelementptr inbounds %union.anon, %union.anon* %1826, i64 0, i32 0
  %1829 = load i32*, i32** %1828, align 8
  %1830 = getelementptr inbounds i32, i32* %1829, i64 %1772
  br label %1834

1831:                                             ; preds = %1818
  %1832 = bitcast %union.anon* %1826 to [5 x i32]*
  %1833 = getelementptr inbounds [5 x i32], [5 x i32]* %1832, i64 0, i64 %1772
  br label %1834

1834:                                             ; preds = %1831, %1827
  %1835 = phi i32* [ %1830, %1827 ], [ %1833, %1831 ]
  %1836 = load i32, i32* %1835, align 4
  %1837 = mul i32 %1836, %1769
  %1838 = getelementptr inbounds i16*, i16** %1624, i64 %1819
  %1839 = load i16*, i16** %1838, align 8
  %1840 = mul nsw i32 %1837, %1813
  %1841 = sext i32 %1840 to i64
  %1842 = getelementptr inbounds i16, i16* %1839, i64 %1841
  %1843 = bitcast i16* %1820 to i8*
  %1844 = bitcast i16* %1842 to i8*
  %1845 = sext i32 %1837 to i64
  %1846 = shl nsw i64 %1845, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %1843, i8* align 2 %1844, i64 %1846, i1 false) #10
  %1847 = getelementptr inbounds i16, i16* %1820, i64 %1845
  %1848 = add nuw nsw i64 %1819, 1
  %1849 = icmp eq i64 %1848, %1774
  br i1 %1849, label %1814, label %1818

1850:                                             ; preds = %1814
  %1851 = load i32, i32* %1662, align 8
  br label %1852

1852:                                             ; preds = %1850, %1768
  %1853 = phi i32 [ %1851, %1850 ], [ %1658, %1768 ]
  %1854 = icmp sgt i32 %1853, 5
  br i1 %1854, label %1855, label %1861

1855:                                             ; preds = %1852
  %1856 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %1857 = load i32*, i32** %1856, align 8
  %1858 = icmp eq i32* %1857, null
  br i1 %1858, label %1861, label %1859

1859:                                             ; preds = %1855
  %1860 = bitcast i32* %1857 to i8*
  call void @_ZdaPv(i8* %1860) #11
  br label %1861

1861:                                             ; preds = %1852, %1855, %1859
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1625) #10
  %1862 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %1621, align 8
  %1863 = icmp eq %"class.tflite::RuntimeShape"** %1862, null
  br i1 %1863, label %1869, label %1864

1864:                                             ; preds = %1861
  %1865 = ptrtoint %"class.tflite::RuntimeShape"** %1862 to i64
  %1866 = getelementptr inbounds %"class.tflite::VectorOfTensors.70", %"class.tflite::VectorOfTensors.70"* %13, i64 0, i32 2, i32 0, i32 1
  %1867 = bitcast %"class.tflite::RuntimeShape"*** %1866 to i64*
  store i64 %1865, i64* %1867, align 8
  %1868 = bitcast %"class.tflite::RuntimeShape"** %1862 to i8*
  call void @_ZdlPv(i8* %1868) #11
  br label %1869

1869:                                             ; preds = %1864, %1861
  %1870 = getelementptr inbounds %"class.tflite::VectorOfTensors.70", %"class.tflite::VectorOfTensors.70"* %13, i64 0, i32 1
  %1871 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %1870, i64 0, i32 0, i32 0
  %1872 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %1871, align 8
  %1873 = icmp eq %"class.tflite::RuntimeShape"* %1872, null
  br i1 %1873, label %1898, label %1874

1874:                                             ; preds = %1869
  %1875 = bitcast %"class.tflite::RuntimeShape"* %1872 to i8*
  %1876 = getelementptr inbounds %"class.tflite::VectorOfTensors.70", %"class.tflite::VectorOfTensors.70"* %13, i64 0, i32 1, i32 0, i32 1
  %1877 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %1876, align 8
  %1878 = icmp eq %"class.tflite::RuntimeShape"* %1877, %1872
  br i1 %1878, label %1896, label %1879

1879:                                             ; preds = %1874, %1891
  %1880 = phi %"class.tflite::RuntimeShape"* [ %1881, %1891 ], [ %1877, %1874 ]
  %1881 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1880, i64 -1
  %1882 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1881, i64 0, i32 0
  %1883 = load i32, i32* %1882, align 8
  %1884 = icmp sgt i32 %1883, 5
  br i1 %1884, label %1885, label %1891

1885:                                             ; preds = %1879
  %1886 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1880, i64 -1, i32 1, i32 0
  %1887 = load i32*, i32** %1886, align 8
  %1888 = icmp eq i32* %1887, null
  br i1 %1888, label %1891, label %1889

1889:                                             ; preds = %1885
  %1890 = bitcast i32* %1887 to i8*
  call void @_ZdaPv(i8* %1890) #11
  br label %1891

1891:                                             ; preds = %1889, %1885, %1879
  %1892 = icmp eq %"class.tflite::RuntimeShape"* %1881, %1872
  br i1 %1892, label %1893, label %1879

1893:                                             ; preds = %1891
  %1894 = bitcast %"class.std::__1::vector.2"* %1870 to i8**
  %1895 = load i8*, i8** %1894, align 8
  br label %1896

1896:                                             ; preds = %1893, %1874
  %1897 = phi i8* [ %1895, %1893 ], [ %1875, %1874 ]
  store %"class.tflite::RuntimeShape"* %1872, %"class.tflite::RuntimeShape"** %1876, align 8
  call void @_ZdlPv(i8* %1897) #11
  br label %1898

1898:                                             ; preds = %1896, %1869
  %1899 = load i16**, i16*** %1623, align 8
  %1900 = icmp eq i16** %1899, null
  br i1 %1900, label %1906, label %1901

1901:                                             ; preds = %1898
  %1902 = ptrtoint i16** %1899 to i64
  %1903 = getelementptr inbounds %"class.tflite::VectorOfTensors.70", %"class.tflite::VectorOfTensors.70"* %13, i64 0, i32 0, i32 0, i32 1
  %1904 = bitcast i16*** %1903 to i64*
  store i64 %1902, i64* %1904, align 8
  %1905 = bitcast i16** %1899 to i8*
  call void @_ZdlPv(i8* %1905) #11
  br label %1906

1906:                                             ; preds = %1898, %1901
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1613) #10
  br label %1911

1907:                                             ; preds = %39
  %1908 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1909 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1908, align 8
  %1910 = tail call i8* @TfLiteTypeGetName(i32 %42) #10
  tail call void (%struct.TfLiteContext*, i8*, ...) %1909(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.29, i64 0, i64 0), i8* %1910) #10
  br label %1911

1911:                                             ; preds = %337, %631, %1024, %1316, %1611, %1906, %1907
  %1912 = phi i32 [ 1, %1907 ], [ 0, %1906 ], [ 0, %1611 ], [ 0, %1316 ], [ 0, %1024 ], [ 0, %631 ], [ 0, %337 ]
  ret i32 %1912
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin34Register_CONCATENATION_GENERIC_OPTEv() local_unnamed_addr #3 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin34Register_CONCATENATION_GENERIC_OPTEvE1r to %struct.TfLiteRegistration*)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin13concatenation4EvalILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) #0 comdat {
  %3 = alloca %"class.tflite::VectorOfTensors.24", align 8
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = alloca %"class.tflite::VectorOfTensors.32", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"class.tflite::VectorOfQuantizedTensors", align 8
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca %"class.tflite::VectorOfTensors", align 8
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"class.tflite::VectorOfTensors.62", align 8
  %12 = alloca %"class.tflite::RuntimeShape", align 8
  %13 = alloca %"class.tflite::VectorOfTensors.70", align 8
  %14 = alloca %"class.tflite::RuntimeShape", align 8
  %15 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %16 = bitcast i8** %15 to %struct.TfLiteConcatenationParams**
  %17 = load %struct.TfLiteConcatenationParams*, %struct.TfLiteConcatenationParams** %16, align 8
  %18 = getelementptr inbounds %struct.TfLiteConcatenationParams, %struct.TfLiteConcatenationParams* %17, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %21 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %20, align 8
  %22 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %21, i64 0, i32 1, i64 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp slt i32 %23, 0
  br i1 %24, label %30, label %25

25:                                               ; preds = %2
  %26 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %27 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %26, align 8
  %28 = sext i32 %23 to i64
  %29 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %27, i64 %28
  br label %30

30:                                               ; preds = %2, %25
  %31 = phi %struct.TfLiteTensor* [ %29, %25 ], [ null, %2 ]
  %32 = icmp slt i32 %19, 0
  br i1 %32, label %33, label %39

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %31, i64 0, i32 2
  %35 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %34, align 8
  %36 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %35, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = add nsw i32 %37, %19
  br label %39

39:                                               ; preds = %33, %30
  %40 = phi i32 [ %38, %33 ], [ %19, %30 ]
  %41 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %31, i64 0, i32 0
  %42 = load i32, i32* %41, align 8
  switch i32 %42, label %1907 [
    i32 1, label %43
    i32 2, label %338
    i32 3, label %632
    i32 9, label %1025
    i32 4, label %1317
    i32 7, label %1612
  ]

43:                                               ; preds = %39
  %44 = bitcast %"class.tflite::VectorOfTensors.24"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %44) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 72, i1 false)
  %45 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %46 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %45, align 8
  call void @_ZN6tflite15VectorOfTensorsIfEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors.24"* nonnull %3, %struct.TfLiteContext* dereferenceable(160) %0, %struct.TfLiteIntArray* dereferenceable(4) %46)
  %47 = trunc i32 %40 to i8
  %48 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %45, align 8
  %49 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %48, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = trunc i32 %50 to i16
  %52 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %3, i64 0, i32 2, i32 0, i32 0
  %53 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %52, align 8
  %54 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %3, i64 0, i32 0, i32 0, i32 0
  %55 = load float**, float*** %54, align 8
  %56 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %56) #10
  %57 = icmp eq %struct.TfLiteTensor* %31, null
  br i1 %57, label %58, label %60

58:                                               ; preds = %43
  %59 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %59, align 8, !alias.scope !44
  br label %88

60:                                               ; preds = %43
  %61 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %31, i64 0, i32 2
  %62 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %61, align 8, !noalias !44
  %63 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %62, i64 0, i32 0
  %64 = load i32, i32* %63, align 4, !noalias !44
  %65 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %62, i64 0, i32 1, i64 0
  %66 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %64, i32* %66, align 8, !alias.scope !44
  %67 = icmp sgt i32 %64, 5
  br i1 %67, label %68, label %75

68:                                               ; preds = %60
  %69 = sext i32 %64 to i64
  %70 = shl nsw i64 %69, 2
  %71 = call i8* @_Znam(i64 %70) #11, !noalias !44
  %72 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %73 = bitcast i32** %72 to i8**
  store i8* %71, i8** %73, align 8, !alias.scope !44
  %74 = bitcast i8* %71 to i32*
  br label %80

75:                                               ; preds = %60
  %76 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %77 = bitcast %union.anon* %76 to i32*
  %78 = sext i32 %64 to i64
  %79 = shl nsw i64 %78, 2
  br label %80

80:                                               ; preds = %75, %68
  %81 = phi i64 [ %70, %68 ], [ %79, %75 ]
  %82 = phi i32* [ %74, %68 ], [ %77, %75 ]
  %83 = bitcast i32* %82 to i8*
  %84 = bitcast i32* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %83, i8* align 4 %84, i64 %81, i1 false) #10
  %85 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %31, i64 0, i32 1
  %86 = bitcast %union.TfLitePtrUnion* %85 to float**
  %87 = load float*, float** %86, align 8
  br label %88

88:                                               ; preds = %58, %80
  %89 = phi i32 [ %64, %80 ], [ 0, %58 ]
  %90 = phi float* [ %87, %80 ], [ null, %58 ]
  %91 = shl i32 %40, 24
  %92 = ashr exact i32 %91, 24
  %93 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %94 = icmp eq i16 %51, 0
  %95 = icmp sgt i32 %89, 5
  %96 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %97 = icmp sgt i8 %47, 0
  br i1 %97, label %98, label %126

98:                                               ; preds = %88
  %99 = getelementptr inbounds %union.anon, %union.anon* %96, i64 0, i32 0
  %100 = load i32*, i32** %99, align 8
  %101 = bitcast %union.anon* %96 to [5 x i32]*
  %102 = zext i32 %92 to i64
  %103 = add nsw i64 %102, -1
  %104 = and i64 %102, 3
  %105 = icmp ult i64 %103, 3
  br i1 %105, label %108, label %106

106:                                              ; preds = %98
  %107 = sub nsw i64 %102, %104
  br label %144

108:                                              ; preds = %144, %98
  %109 = phi i64 [ undef, %98 ], [ %174, %144 ]
  %110 = phi i64 [ 0, %98 ], [ %175, %144 ]
  %111 = phi i64 [ 1, %98 ], [ %174, %144 ]
  %112 = icmp eq i64 %104, 0
  br i1 %112, label %126, label %113

113:                                              ; preds = %108, %113
  %114 = phi i64 [ %123, %113 ], [ %110, %108 ]
  %115 = phi i64 [ %122, %113 ], [ %111, %108 ]
  %116 = phi i64 [ %124, %113 ], [ %104, %108 ]
  %117 = getelementptr inbounds i32, i32* %100, i64 %114
  %118 = getelementptr inbounds [5 x i32], [5 x i32]* %101, i64 0, i64 %114
  %119 = select i1 %95, i32* %117, i32* %118
  %120 = load i32, i32* %119, align 4
  %121 = sext i32 %120 to i64
  %122 = mul nsw i64 %115, %121
  %123 = add nuw nsw i64 %114, 1
  %124 = add i64 %116, -1
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %126, label %113, !llvm.loop !47

126:                                              ; preds = %108, %113, %88
  %127 = phi i64 [ 1, %88 ], [ %109, %108 ], [ %122, %113 ]
  %128 = add nsw i32 %92, 1
  %129 = icmp slt i32 %128, %89
  br i1 %129, label %130, label %199

130:                                              ; preds = %126
  %131 = getelementptr inbounds %union.anon, %union.anon* %96, i64 0, i32 0
  %132 = load i32*, i32** %131, align 8
  %133 = bitcast %union.anon* %96 to [5 x i32]*
  %134 = sext i8 %47 to i64
  %135 = add nsw i64 %134, 1
  %136 = xor i32 %92, -1
  %137 = add i32 %89, %136
  %138 = add i32 %89, -2
  %139 = sub i32 %138, %92
  %140 = and i32 %137, 3
  %141 = icmp ult i32 %139, 3
  br i1 %141, label %178, label %142

142:                                              ; preds = %130
  %143 = sub i32 %137, %140
  br label %206

144:                                              ; preds = %144, %106
  %145 = phi i64 [ 0, %106 ], [ %175, %144 ]
  %146 = phi i64 [ 1, %106 ], [ %174, %144 ]
  %147 = phi i64 [ %107, %106 ], [ %176, %144 ]
  %148 = getelementptr inbounds i32, i32* %100, i64 %145
  %149 = getelementptr inbounds [5 x i32], [5 x i32]* %101, i64 0, i64 %145
  %150 = select i1 %95, i32* %148, i32* %149
  %151 = load i32, i32* %150, align 4
  %152 = sext i32 %151 to i64
  %153 = mul nsw i64 %146, %152
  %154 = or i64 %145, 1
  %155 = getelementptr inbounds i32, i32* %100, i64 %154
  %156 = getelementptr inbounds [5 x i32], [5 x i32]* %101, i64 0, i64 %154
  %157 = select i1 %95, i32* %155, i32* %156
  %158 = load i32, i32* %157, align 4
  %159 = sext i32 %158 to i64
  %160 = mul nsw i64 %153, %159
  %161 = or i64 %145, 2
  %162 = getelementptr inbounds i32, i32* %100, i64 %161
  %163 = getelementptr inbounds [5 x i32], [5 x i32]* %101, i64 0, i64 %161
  %164 = select i1 %95, i32* %162, i32* %163
  %165 = load i32, i32* %164, align 4
  %166 = sext i32 %165 to i64
  %167 = mul nsw i64 %160, %166
  %168 = or i64 %145, 3
  %169 = getelementptr inbounds i32, i32* %100, i64 %168
  %170 = getelementptr inbounds [5 x i32], [5 x i32]* %101, i64 0, i64 %168
  %171 = select i1 %95, i32* %169, i32* %170
  %172 = load i32, i32* %171, align 4
  %173 = sext i32 %172 to i64
  %174 = mul nsw i64 %167, %173
  %175 = add nuw nsw i64 %145, 4
  %176 = add i64 %147, -4
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %108, label %144

178:                                              ; preds = %206, %130
  %179 = phi i64 [ undef, %130 ], [ %236, %206 ]
  %180 = phi i64 [ %135, %130 ], [ %237, %206 ]
  %181 = phi i64 [ 1, %130 ], [ %236, %206 ]
  %182 = icmp eq i32 %140, 0
  br i1 %182, label %196, label %183

183:                                              ; preds = %178, %183
  %184 = phi i64 [ %193, %183 ], [ %180, %178 ]
  %185 = phi i64 [ %192, %183 ], [ %181, %178 ]
  %186 = phi i32 [ %194, %183 ], [ %140, %178 ]
  %187 = getelementptr inbounds i32, i32* %132, i64 %184
  %188 = getelementptr inbounds [5 x i32], [5 x i32]* %133, i64 0, i64 %184
  %189 = select i1 %95, i32* %187, i32* %188
  %190 = load i32, i32* %189, align 4
  %191 = sext i32 %190 to i64
  %192 = mul nsw i64 %185, %191
  %193 = add i64 %184, 1
  %194 = add i32 %186, -1
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %183, !llvm.loop !48

196:                                              ; preds = %183, %178
  %197 = phi i64 [ %179, %178 ], [ %192, %183 ]
  %198 = trunc i64 %197 to i32
  br label %199

199:                                              ; preds = %196, %126
  %200 = phi i32 [ 1, %126 ], [ %198, %196 ]
  %201 = icmp sgt i64 %127, 0
  br i1 %201, label %202, label %283

202:                                              ; preds = %199
  %203 = sext i8 %47 to i64
  %204 = and i32 %50, 65535
  %205 = zext i32 %204 to i64
  br label %240

206:                                              ; preds = %206, %142
  %207 = phi i64 [ %135, %142 ], [ %237, %206 ]
  %208 = phi i64 [ 1, %142 ], [ %236, %206 ]
  %209 = phi i32 [ %143, %142 ], [ %238, %206 ]
  %210 = getelementptr inbounds i32, i32* %132, i64 %207
  %211 = getelementptr inbounds [5 x i32], [5 x i32]* %133, i64 0, i64 %207
  %212 = select i1 %95, i32* %210, i32* %211
  %213 = load i32, i32* %212, align 4
  %214 = sext i32 %213 to i64
  %215 = mul nsw i64 %208, %214
  %216 = add i64 %207, 1
  %217 = getelementptr inbounds i32, i32* %132, i64 %216
  %218 = getelementptr inbounds [5 x i32], [5 x i32]* %133, i64 0, i64 %216
  %219 = select i1 %95, i32* %217, i32* %218
  %220 = load i32, i32* %219, align 4
  %221 = sext i32 %220 to i64
  %222 = mul nsw i64 %215, %221
  %223 = add i64 %207, 2
  %224 = getelementptr inbounds i32, i32* %132, i64 %223
  %225 = getelementptr inbounds [5 x i32], [5 x i32]* %133, i64 0, i64 %223
  %226 = select i1 %95, i32* %224, i32* %225
  %227 = load i32, i32* %226, align 4
  %228 = sext i32 %227 to i64
  %229 = mul nsw i64 %222, %228
  %230 = add i64 %207, 3
  %231 = getelementptr inbounds i32, i32* %132, i64 %230
  %232 = getelementptr inbounds [5 x i32], [5 x i32]* %133, i64 0, i64 %230
  %233 = select i1 %95, i32* %231, i32* %232
  %234 = load i32, i32* %233, align 4
  %235 = sext i32 %234 to i64
  %236 = mul nsw i64 %229, %235
  %237 = add i64 %207, 4
  %238 = add i32 %209, -4
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %178, label %206

240:                                              ; preds = %245, %202
  %241 = phi i64 [ 0, %202 ], [ %247, %245 ]
  %242 = phi float* [ %90, %202 ], [ %246, %245 ]
  br i1 %94, label %245, label %243

243:                                              ; preds = %240
  %244 = trunc i64 %241 to i32
  br label %249

245:                                              ; preds = %265, %240
  %246 = phi float* [ %242, %240 ], [ %278, %265 ]
  %247 = add nuw nsw i64 %241, 1
  %248 = icmp eq i64 %247, %127
  br i1 %248, label %281, label %240

249:                                              ; preds = %265, %243
  %250 = phi i64 [ 0, %243 ], [ %279, %265 ]
  %251 = phi float* [ %242, %243 ], [ %278, %265 ]
  %252 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %53, i64 %250
  %253 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %252, align 8
  %254 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %253, i64 0, i32 0
  %255 = load i32, i32* %254, align 8
  %256 = icmp sgt i32 %255, 5
  %257 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %253, i64 0, i32 1
  br i1 %256, label %258, label %262

258:                                              ; preds = %249
  %259 = getelementptr inbounds %union.anon, %union.anon* %257, i64 0, i32 0
  %260 = load i32*, i32** %259, align 8
  %261 = getelementptr inbounds i32, i32* %260, i64 %203
  br label %265

262:                                              ; preds = %249
  %263 = bitcast %union.anon* %257 to [5 x i32]*
  %264 = getelementptr inbounds [5 x i32], [5 x i32]* %263, i64 0, i64 %203
  br label %265

265:                                              ; preds = %262, %258
  %266 = phi i32* [ %261, %258 ], [ %264, %262 ]
  %267 = load i32, i32* %266, align 4
  %268 = mul i32 %267, %200
  %269 = getelementptr inbounds float*, float** %55, i64 %250
  %270 = load float*, float** %269, align 8
  %271 = mul nsw i32 %268, %244
  %272 = sext i32 %271 to i64
  %273 = getelementptr inbounds float, float* %270, i64 %272
  %274 = bitcast float* %251 to i8*
  %275 = bitcast float* %273 to i8*
  %276 = sext i32 %268 to i64
  %277 = shl nsw i64 %276, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %274, i8* align 4 %275, i64 %277, i1 false) #10
  %278 = getelementptr inbounds float, float* %251, i64 %276
  %279 = add nuw nsw i64 %250, 1
  %280 = icmp eq i64 %279, %205
  br i1 %280, label %245, label %249

281:                                              ; preds = %245
  %282 = load i32, i32* %93, align 8
  br label %283

283:                                              ; preds = %281, %199
  %284 = phi i32 [ %282, %281 ], [ %89, %199 ]
  %285 = icmp sgt i32 %284, 5
  br i1 %285, label %286, label %292

286:                                              ; preds = %283
  %287 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %288 = load i32*, i32** %287, align 8
  %289 = icmp eq i32* %288, null
  br i1 %289, label %292, label %290

290:                                              ; preds = %286
  %291 = bitcast i32* %288 to i8*
  call void @_ZdaPv(i8* %291) #11
  br label %292

292:                                              ; preds = %283, %286, %290
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %56) #10
  %293 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %52, align 8
  %294 = icmp eq %"class.tflite::RuntimeShape"** %293, null
  br i1 %294, label %300, label %295

295:                                              ; preds = %292
  %296 = ptrtoint %"class.tflite::RuntimeShape"** %293 to i64
  %297 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %3, i64 0, i32 2, i32 0, i32 1
  %298 = bitcast %"class.tflite::RuntimeShape"*** %297 to i64*
  store i64 %296, i64* %298, align 8
  %299 = bitcast %"class.tflite::RuntimeShape"** %293 to i8*
  call void @_ZdlPv(i8* %299) #11
  br label %300

300:                                              ; preds = %295, %292
  %301 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %3, i64 0, i32 1
  %302 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %301, i64 0, i32 0, i32 0
  %303 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %302, align 8
  %304 = icmp eq %"class.tflite::RuntimeShape"* %303, null
  br i1 %304, label %329, label %305

305:                                              ; preds = %300
  %306 = bitcast %"class.tflite::RuntimeShape"* %303 to i8*
  %307 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %3, i64 0, i32 1, i32 0, i32 1
  %308 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %307, align 8
  %309 = icmp eq %"class.tflite::RuntimeShape"* %308, %303
  br i1 %309, label %327, label %310

310:                                              ; preds = %305, %322
  %311 = phi %"class.tflite::RuntimeShape"* [ %312, %322 ], [ %308, %305 ]
  %312 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %311, i64 -1
  %313 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %312, i64 0, i32 0
  %314 = load i32, i32* %313, align 8
  %315 = icmp sgt i32 %314, 5
  br i1 %315, label %316, label %322

316:                                              ; preds = %310
  %317 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %311, i64 -1, i32 1, i32 0
  %318 = load i32*, i32** %317, align 8
  %319 = icmp eq i32* %318, null
  br i1 %319, label %322, label %320

320:                                              ; preds = %316
  %321 = bitcast i32* %318 to i8*
  call void @_ZdaPv(i8* %321) #11
  br label %322

322:                                              ; preds = %320, %316, %310
  %323 = icmp eq %"class.tflite::RuntimeShape"* %312, %303
  br i1 %323, label %324, label %310

324:                                              ; preds = %322
  %325 = bitcast %"class.std::__1::vector.2"* %301 to i8**
  %326 = load i8*, i8** %325, align 8
  br label %327

327:                                              ; preds = %324, %305
  %328 = phi i8* [ %326, %324 ], [ %306, %305 ]
  store %"class.tflite::RuntimeShape"* %303, %"class.tflite::RuntimeShape"** %307, align 8
  call void @_ZdlPv(i8* %328) #11
  br label %329

329:                                              ; preds = %327, %300
  %330 = load float**, float*** %54, align 8
  %331 = icmp eq float** %330, null
  br i1 %331, label %337, label %332

332:                                              ; preds = %329
  %333 = ptrtoint float** %330 to i64
  %334 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %3, i64 0, i32 0, i32 0, i32 1
  %335 = bitcast float*** %334 to i64*
  store i64 %333, i64* %335, align 8
  %336 = bitcast float** %330 to i8*
  call void @_ZdlPv(i8* %336) #11
  br label %337

337:                                              ; preds = %329, %332
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %44) #10
  br label %1911

338:                                              ; preds = %39
  %339 = bitcast %"class.tflite::VectorOfTensors.32"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %339) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %339, i8 -86, i64 72, i1 false)
  %340 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %341 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %340, align 8
  call void @_ZN6tflite15VectorOfTensorsIiEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors.32"* nonnull %5, %struct.TfLiteContext* dereferenceable(160) %0, %struct.TfLiteIntArray* dereferenceable(4) %341)
  %342 = trunc i32 %40 to i8
  %343 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %340, align 8
  %344 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %343, i64 0, i32 0
  %345 = load i32, i32* %344, align 4
  %346 = trunc i32 %345 to i16
  %347 = getelementptr inbounds %"class.tflite::VectorOfTensors.32", %"class.tflite::VectorOfTensors.32"* %5, i64 0, i32 2, i32 0, i32 0
  %348 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %347, align 8
  %349 = getelementptr inbounds %"class.tflite::VectorOfTensors.32", %"class.tflite::VectorOfTensors.32"* %5, i64 0, i32 0, i32 0, i32 0
  %350 = load i32**, i32*** %349, align 8
  %351 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %351) #10
  %352 = icmp eq %struct.TfLiteTensor* %31, null
  br i1 %352, label %353, label %355

353:                                              ; preds = %338
  %354 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %354, align 8, !alias.scope !49
  br label %382

355:                                              ; preds = %338
  %356 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %31, i64 0, i32 2
  %357 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %356, align 8, !noalias !49
  %358 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %357, i64 0, i32 0
  %359 = load i32, i32* %358, align 4, !noalias !49
  %360 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %357, i64 0, i32 1, i64 0
  %361 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %359, i32* %361, align 8, !alias.scope !49
  %362 = icmp sgt i32 %359, 5
  br i1 %362, label %363, label %370

363:                                              ; preds = %355
  %364 = sext i32 %359 to i64
  %365 = shl nsw i64 %364, 2
  %366 = call i8* @_Znam(i64 %365) #11, !noalias !49
  %367 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %368 = bitcast i32** %367 to i8**
  store i8* %366, i8** %368, align 8, !alias.scope !49
  %369 = bitcast i8* %366 to i32*
  br label %375

370:                                              ; preds = %355
  %371 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %372 = bitcast %union.anon* %371 to i32*
  %373 = sext i32 %359 to i64
  %374 = shl nsw i64 %373, 2
  br label %375

375:                                              ; preds = %370, %363
  %376 = phi i64 [ %365, %363 ], [ %374, %370 ]
  %377 = phi i32* [ %369, %363 ], [ %372, %370 ]
  %378 = bitcast i32* %377 to i8*
  %379 = bitcast i32* %360 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %378, i8* align 4 %379, i64 %376, i1 false) #10
  %380 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %31, i64 0, i32 1, i32 0
  %381 = load i32*, i32** %380, align 8
  br label %382

382:                                              ; preds = %353, %375
  %383 = phi i32 [ %359, %375 ], [ 0, %353 ]
  %384 = phi i32* [ %381, %375 ], [ null, %353 ]
  %385 = shl i32 %40, 24
  %386 = ashr exact i32 %385, 24
  %387 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %388 = icmp eq i16 %346, 0
  %389 = icmp sgt i32 %383, 5
  %390 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %391 = icmp sgt i8 %342, 0
  br i1 %391, label %392, label %420

392:                                              ; preds = %382
  %393 = getelementptr inbounds %union.anon, %union.anon* %390, i64 0, i32 0
  %394 = load i32*, i32** %393, align 8
  %395 = bitcast %union.anon* %390 to [5 x i32]*
  %396 = zext i32 %386 to i64
  %397 = add nsw i64 %396, -1
  %398 = and i64 %396, 3
  %399 = icmp ult i64 %397, 3
  br i1 %399, label %402, label %400

400:                                              ; preds = %392
  %401 = sub nsw i64 %396, %398
  br label %438

402:                                              ; preds = %438, %392
  %403 = phi i64 [ undef, %392 ], [ %468, %438 ]
  %404 = phi i64 [ 0, %392 ], [ %469, %438 ]
  %405 = phi i64 [ 1, %392 ], [ %468, %438 ]
  %406 = icmp eq i64 %398, 0
  br i1 %406, label %420, label %407

407:                                              ; preds = %402, %407
  %408 = phi i64 [ %417, %407 ], [ %404, %402 ]
  %409 = phi i64 [ %416, %407 ], [ %405, %402 ]
  %410 = phi i64 [ %418, %407 ], [ %398, %402 ]
  %411 = getelementptr inbounds i32, i32* %394, i64 %408
  %412 = getelementptr inbounds [5 x i32], [5 x i32]* %395, i64 0, i64 %408
  %413 = select i1 %389, i32* %411, i32* %412
  %414 = load i32, i32* %413, align 4
  %415 = sext i32 %414 to i64
  %416 = mul nsw i64 %409, %415
  %417 = add nuw nsw i64 %408, 1
  %418 = add i64 %410, -1
  %419 = icmp eq i64 %418, 0
  br i1 %419, label %420, label %407, !llvm.loop !52

420:                                              ; preds = %402, %407, %382
  %421 = phi i64 [ 1, %382 ], [ %403, %402 ], [ %416, %407 ]
  %422 = add nsw i32 %386, 1
  %423 = icmp slt i32 %422, %383
  br i1 %423, label %424, label %493

424:                                              ; preds = %420
  %425 = getelementptr inbounds %union.anon, %union.anon* %390, i64 0, i32 0
  %426 = load i32*, i32** %425, align 8
  %427 = bitcast %union.anon* %390 to [5 x i32]*
  %428 = sext i8 %342 to i64
  %429 = add nsw i64 %428, 1
  %430 = xor i32 %386, -1
  %431 = add i32 %383, %430
  %432 = add i32 %383, -2
  %433 = sub i32 %432, %386
  %434 = and i32 %431, 3
  %435 = icmp ult i32 %433, 3
  br i1 %435, label %472, label %436

436:                                              ; preds = %424
  %437 = sub i32 %431, %434
  br label %500

438:                                              ; preds = %438, %400
  %439 = phi i64 [ 0, %400 ], [ %469, %438 ]
  %440 = phi i64 [ 1, %400 ], [ %468, %438 ]
  %441 = phi i64 [ %401, %400 ], [ %470, %438 ]
  %442 = getelementptr inbounds i32, i32* %394, i64 %439
  %443 = getelementptr inbounds [5 x i32], [5 x i32]* %395, i64 0, i64 %439
  %444 = select i1 %389, i32* %442, i32* %443
  %445 = load i32, i32* %444, align 4
  %446 = sext i32 %445 to i64
  %447 = mul nsw i64 %440, %446
  %448 = or i64 %439, 1
  %449 = getelementptr inbounds i32, i32* %394, i64 %448
  %450 = getelementptr inbounds [5 x i32], [5 x i32]* %395, i64 0, i64 %448
  %451 = select i1 %389, i32* %449, i32* %450
  %452 = load i32, i32* %451, align 4
  %453 = sext i32 %452 to i64
  %454 = mul nsw i64 %447, %453
  %455 = or i64 %439, 2
  %456 = getelementptr inbounds i32, i32* %394, i64 %455
  %457 = getelementptr inbounds [5 x i32], [5 x i32]* %395, i64 0, i64 %455
  %458 = select i1 %389, i32* %456, i32* %457
  %459 = load i32, i32* %458, align 4
  %460 = sext i32 %459 to i64
  %461 = mul nsw i64 %454, %460
  %462 = or i64 %439, 3
  %463 = getelementptr inbounds i32, i32* %394, i64 %462
  %464 = getelementptr inbounds [5 x i32], [5 x i32]* %395, i64 0, i64 %462
  %465 = select i1 %389, i32* %463, i32* %464
  %466 = load i32, i32* %465, align 4
  %467 = sext i32 %466 to i64
  %468 = mul nsw i64 %461, %467
  %469 = add nuw nsw i64 %439, 4
  %470 = add i64 %441, -4
  %471 = icmp eq i64 %470, 0
  br i1 %471, label %402, label %438

472:                                              ; preds = %500, %424
  %473 = phi i64 [ undef, %424 ], [ %530, %500 ]
  %474 = phi i64 [ %429, %424 ], [ %531, %500 ]
  %475 = phi i64 [ 1, %424 ], [ %530, %500 ]
  %476 = icmp eq i32 %434, 0
  br i1 %476, label %490, label %477

477:                                              ; preds = %472, %477
  %478 = phi i64 [ %487, %477 ], [ %474, %472 ]
  %479 = phi i64 [ %486, %477 ], [ %475, %472 ]
  %480 = phi i32 [ %488, %477 ], [ %434, %472 ]
  %481 = getelementptr inbounds i32, i32* %426, i64 %478
  %482 = getelementptr inbounds [5 x i32], [5 x i32]* %427, i64 0, i64 %478
  %483 = select i1 %389, i32* %481, i32* %482
  %484 = load i32, i32* %483, align 4
  %485 = sext i32 %484 to i64
  %486 = mul nsw i64 %479, %485
  %487 = add i64 %478, 1
  %488 = add i32 %480, -1
  %489 = icmp eq i32 %488, 0
  br i1 %489, label %490, label %477, !llvm.loop !53

490:                                              ; preds = %477, %472
  %491 = phi i64 [ %473, %472 ], [ %486, %477 ]
  %492 = trunc i64 %491 to i32
  br label %493

493:                                              ; preds = %490, %420
  %494 = phi i32 [ 1, %420 ], [ %492, %490 ]
  %495 = icmp sgt i64 %421, 0
  br i1 %495, label %496, label %577

496:                                              ; preds = %493
  %497 = sext i8 %342 to i64
  %498 = and i32 %345, 65535
  %499 = zext i32 %498 to i64
  br label %534

500:                                              ; preds = %500, %436
  %501 = phi i64 [ %429, %436 ], [ %531, %500 ]
  %502 = phi i64 [ 1, %436 ], [ %530, %500 ]
  %503 = phi i32 [ %437, %436 ], [ %532, %500 ]
  %504 = getelementptr inbounds i32, i32* %426, i64 %501
  %505 = getelementptr inbounds [5 x i32], [5 x i32]* %427, i64 0, i64 %501
  %506 = select i1 %389, i32* %504, i32* %505
  %507 = load i32, i32* %506, align 4
  %508 = sext i32 %507 to i64
  %509 = mul nsw i64 %502, %508
  %510 = add i64 %501, 1
  %511 = getelementptr inbounds i32, i32* %426, i64 %510
  %512 = getelementptr inbounds [5 x i32], [5 x i32]* %427, i64 0, i64 %510
  %513 = select i1 %389, i32* %511, i32* %512
  %514 = load i32, i32* %513, align 4
  %515 = sext i32 %514 to i64
  %516 = mul nsw i64 %509, %515
  %517 = add i64 %501, 2
  %518 = getelementptr inbounds i32, i32* %426, i64 %517
  %519 = getelementptr inbounds [5 x i32], [5 x i32]* %427, i64 0, i64 %517
  %520 = select i1 %389, i32* %518, i32* %519
  %521 = load i32, i32* %520, align 4
  %522 = sext i32 %521 to i64
  %523 = mul nsw i64 %516, %522
  %524 = add i64 %501, 3
  %525 = getelementptr inbounds i32, i32* %426, i64 %524
  %526 = getelementptr inbounds [5 x i32], [5 x i32]* %427, i64 0, i64 %524
  %527 = select i1 %389, i32* %525, i32* %526
  %528 = load i32, i32* %527, align 4
  %529 = sext i32 %528 to i64
  %530 = mul nsw i64 %523, %529
  %531 = add i64 %501, 4
  %532 = add i32 %503, -4
  %533 = icmp eq i32 %532, 0
  br i1 %533, label %472, label %500

534:                                              ; preds = %539, %496
  %535 = phi i64 [ 0, %496 ], [ %541, %539 ]
  %536 = phi i32* [ %384, %496 ], [ %540, %539 ]
  br i1 %388, label %539, label %537

537:                                              ; preds = %534
  %538 = trunc i64 %535 to i32
  br label %543

539:                                              ; preds = %559, %534
  %540 = phi i32* [ %536, %534 ], [ %572, %559 ]
  %541 = add nuw nsw i64 %535, 1
  %542 = icmp eq i64 %541, %421
  br i1 %542, label %575, label %534

543:                                              ; preds = %559, %537
  %544 = phi i64 [ 0, %537 ], [ %573, %559 ]
  %545 = phi i32* [ %536, %537 ], [ %572, %559 ]
  %546 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %348, i64 %544
  %547 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %546, align 8
  %548 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %547, i64 0, i32 0
  %549 = load i32, i32* %548, align 8
  %550 = icmp sgt i32 %549, 5
  %551 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %547, i64 0, i32 1
  br i1 %550, label %552, label %556

552:                                              ; preds = %543
  %553 = getelementptr inbounds %union.anon, %union.anon* %551, i64 0, i32 0
  %554 = load i32*, i32** %553, align 8
  %555 = getelementptr inbounds i32, i32* %554, i64 %497
  br label %559

556:                                              ; preds = %543
  %557 = bitcast %union.anon* %551 to [5 x i32]*
  %558 = getelementptr inbounds [5 x i32], [5 x i32]* %557, i64 0, i64 %497
  br label %559

559:                                              ; preds = %556, %552
  %560 = phi i32* [ %555, %552 ], [ %558, %556 ]
  %561 = load i32, i32* %560, align 4
  %562 = mul i32 %561, %494
  %563 = getelementptr inbounds i32*, i32** %350, i64 %544
  %564 = load i32*, i32** %563, align 8
  %565 = mul nsw i32 %562, %538
  %566 = sext i32 %565 to i64
  %567 = getelementptr inbounds i32, i32* %564, i64 %566
  %568 = bitcast i32* %545 to i8*
  %569 = bitcast i32* %567 to i8*
  %570 = sext i32 %562 to i64
  %571 = shl nsw i64 %570, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %568, i8* align 4 %569, i64 %571, i1 false) #10
  %572 = getelementptr inbounds i32, i32* %545, i64 %570
  %573 = add nuw nsw i64 %544, 1
  %574 = icmp eq i64 %573, %499
  br i1 %574, label %539, label %543

575:                                              ; preds = %539
  %576 = load i32, i32* %387, align 8
  br label %577

577:                                              ; preds = %575, %493
  %578 = phi i32 [ %576, %575 ], [ %383, %493 ]
  %579 = icmp sgt i32 %578, 5
  br i1 %579, label %580, label %586

580:                                              ; preds = %577
  %581 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %582 = load i32*, i32** %581, align 8
  %583 = icmp eq i32* %582, null
  br i1 %583, label %586, label %584

584:                                              ; preds = %580
  %585 = bitcast i32* %582 to i8*
  call void @_ZdaPv(i8* %585) #11
  br label %586

586:                                              ; preds = %577, %580, %584
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %351) #10
  %587 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %347, align 8
  %588 = icmp eq %"class.tflite::RuntimeShape"** %587, null
  br i1 %588, label %594, label %589

589:                                              ; preds = %586
  %590 = ptrtoint %"class.tflite::RuntimeShape"** %587 to i64
  %591 = getelementptr inbounds %"class.tflite::VectorOfTensors.32", %"class.tflite::VectorOfTensors.32"* %5, i64 0, i32 2, i32 0, i32 1
  %592 = bitcast %"class.tflite::RuntimeShape"*** %591 to i64*
  store i64 %590, i64* %592, align 8
  %593 = bitcast %"class.tflite::RuntimeShape"** %587 to i8*
  call void @_ZdlPv(i8* %593) #11
  br label %594

594:                                              ; preds = %589, %586
  %595 = getelementptr inbounds %"class.tflite::VectorOfTensors.32", %"class.tflite::VectorOfTensors.32"* %5, i64 0, i32 1
  %596 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %595, i64 0, i32 0, i32 0
  %597 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %596, align 8
  %598 = icmp eq %"class.tflite::RuntimeShape"* %597, null
  br i1 %598, label %623, label %599

599:                                              ; preds = %594
  %600 = bitcast %"class.tflite::RuntimeShape"* %597 to i8*
  %601 = getelementptr inbounds %"class.tflite::VectorOfTensors.32", %"class.tflite::VectorOfTensors.32"* %5, i64 0, i32 1, i32 0, i32 1
  %602 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %601, align 8
  %603 = icmp eq %"class.tflite::RuntimeShape"* %602, %597
  br i1 %603, label %621, label %604

604:                                              ; preds = %599, %616
  %605 = phi %"class.tflite::RuntimeShape"* [ %606, %616 ], [ %602, %599 ]
  %606 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %605, i64 -1
  %607 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %606, i64 0, i32 0
  %608 = load i32, i32* %607, align 8
  %609 = icmp sgt i32 %608, 5
  br i1 %609, label %610, label %616

610:                                              ; preds = %604
  %611 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %605, i64 -1, i32 1, i32 0
  %612 = load i32*, i32** %611, align 8
  %613 = icmp eq i32* %612, null
  br i1 %613, label %616, label %614

614:                                              ; preds = %610
  %615 = bitcast i32* %612 to i8*
  call void @_ZdaPv(i8* %615) #11
  br label %616

616:                                              ; preds = %614, %610, %604
  %617 = icmp eq %"class.tflite::RuntimeShape"* %606, %597
  br i1 %617, label %618, label %604

618:                                              ; preds = %616
  %619 = bitcast %"class.std::__1::vector.2"* %595 to i8**
  %620 = load i8*, i8** %619, align 8
  br label %621

621:                                              ; preds = %618, %599
  %622 = phi i8* [ %620, %618 ], [ %600, %599 ]
  store %"class.tflite::RuntimeShape"* %597, %"class.tflite::RuntimeShape"** %601, align 8
  call void @_ZdlPv(i8* %622) #11
  br label %623

623:                                              ; preds = %621, %594
  %624 = load i32**, i32*** %349, align 8
  %625 = icmp eq i32** %624, null
  br i1 %625, label %631, label %626

626:                                              ; preds = %623
  %627 = ptrtoint i32** %624 to i64
  %628 = getelementptr inbounds %"class.tflite::VectorOfTensors.32", %"class.tflite::VectorOfTensors.32"* %5, i64 0, i32 0, i32 0, i32 1
  %629 = bitcast i32*** %628 to i64*
  store i64 %627, i64* %629, align 8
  %630 = bitcast i32** %624 to i8*
  call void @_ZdlPv(i8* %630) #11
  br label %631

631:                                              ; preds = %623, %626
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %339) #10
  br label %1911

632:                                              ; preds = %39
  %633 = bitcast %"class.tflite::VectorOfQuantizedTensors"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %633) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %633, i8 -86, i64 120, i1 false)
  %634 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %635 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %634, align 8
  call void @_ZN6tflite24VectorOfQuantizedTensorsC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfQuantizedTensors"* nonnull %7, %struct.TfLiteContext* dereferenceable(160) %0, %struct.TfLiteIntArray* dereferenceable(4) %635)
  %636 = trunc i32 %40 to i8
  %637 = getelementptr inbounds %"class.tflite::VectorOfQuantizedTensors", %"class.tflite::VectorOfQuantizedTensors"* %7, i64 0, i32 1, i32 0, i32 0
  %638 = load i32*, i32** %637, align 8
  %639 = getelementptr inbounds %"class.tflite::VectorOfQuantizedTensors", %"class.tflite::VectorOfQuantizedTensors"* %7, i64 0, i32 2, i32 0, i32 0
  %640 = load float*, float** %639, align 8
  %641 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %634, align 8
  %642 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %641, i64 0, i32 0
  %643 = load i32, i32* %642, align 4
  %644 = trunc i32 %643 to i16
  %645 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %31, i64 0, i32 3, i32 1
  %646 = load i32, i32* %645, align 4
  %647 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %31, i64 0, i32 3, i32 0
  %648 = load float, float* %647, align 8
  %649 = getelementptr inbounds %"class.tflite::VectorOfQuantizedTensors", %"class.tflite::VectorOfQuantizedTensors"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %650 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %649, align 8
  %651 = getelementptr inbounds %"class.tflite::VectorOfQuantizedTensors", %"class.tflite::VectorOfQuantizedTensors"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %652 = load i8**, i8*** %651, align 8
  %653 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %653) #10
  %654 = icmp eq %struct.TfLiteTensor* %31, null
  br i1 %654, label %655, label %657

655:                                              ; preds = %632
  %656 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %656, align 8, !alias.scope !54
  br label %685

657:                                              ; preds = %632
  %658 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %31, i64 0, i32 2
  %659 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %658, align 8, !noalias !54
  %660 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %659, i64 0, i32 0
  %661 = load i32, i32* %660, align 4, !noalias !54
  %662 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %659, i64 0, i32 1, i64 0
  %663 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 %661, i32* %663, align 8, !alias.scope !54
  %664 = icmp sgt i32 %661, 5
  br i1 %664, label %665, label %672

665:                                              ; preds = %657
  %666 = sext i32 %661 to i64
  %667 = shl nsw i64 %666, 2
  %668 = call i8* @_Znam(i64 %667) #11, !noalias !54
  %669 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %670 = bitcast i32** %669 to i8**
  store i8* %668, i8** %670, align 8, !alias.scope !54
  %671 = bitcast i8* %668 to i32*
  br label %677

672:                                              ; preds = %657
  %673 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %674 = bitcast %union.anon* %673 to i32*
  %675 = sext i32 %661 to i64
  %676 = shl nsw i64 %675, 2
  br label %677

677:                                              ; preds = %672, %665
  %678 = phi i64 [ %667, %665 ], [ %676, %672 ]
  %679 = phi i32* [ %671, %665 ], [ %674, %672 ]
  %680 = bitcast i32* %679 to i8*
  %681 = bitcast i32* %662 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %680, i8* align 4 %681, i64 %678, i1 false) #10
  %682 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %31, i64 0, i32 1
  %683 = bitcast %union.TfLitePtrUnion* %682 to i8**
  %684 = load i8*, i8** %683, align 8
  br label %685

685:                                              ; preds = %655, %677
  %686 = phi i32 [ %661, %677 ], [ 0, %655 ]
  %687 = phi i8* [ %684, %677 ], [ null, %655 ]
  %688 = shl i32 %40, 24
  %689 = ashr exact i32 %688, 24
  %690 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  %691 = icmp eq i16 %644, 0
  %692 = icmp sgt i32 %686, 5
  %693 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %694 = icmp sgt i8 %636, 0
  br i1 %694, label %695, label %723

695:                                              ; preds = %685
  %696 = getelementptr inbounds %union.anon, %union.anon* %693, i64 0, i32 0
  %697 = load i32*, i32** %696, align 8
  %698 = bitcast %union.anon* %693 to [5 x i32]*
  %699 = zext i32 %689 to i64
  %700 = add nsw i64 %699, -1
  %701 = and i64 %699, 3
  %702 = icmp ult i64 %700, 3
  br i1 %702, label %705, label %703

703:                                              ; preds = %695
  %704 = sub nsw i64 %699, %701
  br label %741

705:                                              ; preds = %741, %695
  %706 = phi i64 [ undef, %695 ], [ %771, %741 ]
  %707 = phi i64 [ 0, %695 ], [ %772, %741 ]
  %708 = phi i64 [ 1, %695 ], [ %771, %741 ]
  %709 = icmp eq i64 %701, 0
  br i1 %709, label %723, label %710

710:                                              ; preds = %705, %710
  %711 = phi i64 [ %720, %710 ], [ %707, %705 ]
  %712 = phi i64 [ %719, %710 ], [ %708, %705 ]
  %713 = phi i64 [ %721, %710 ], [ %701, %705 ]
  %714 = getelementptr inbounds i32, i32* %697, i64 %711
  %715 = getelementptr inbounds [5 x i32], [5 x i32]* %698, i64 0, i64 %711
  %716 = select i1 %692, i32* %714, i32* %715
  %717 = load i32, i32* %716, align 4
  %718 = sext i32 %717 to i64
  %719 = mul nsw i64 %712, %718
  %720 = add nuw nsw i64 %711, 1
  %721 = add i64 %713, -1
  %722 = icmp eq i64 %721, 0
  br i1 %722, label %723, label %710, !llvm.loop !57

723:                                              ; preds = %705, %710, %685
  %724 = phi i64 [ 1, %685 ], [ %706, %705 ], [ %719, %710 ]
  %725 = add nsw i32 %689, 1
  %726 = icmp slt i32 %725, %686
  br i1 %726, label %727, label %796

727:                                              ; preds = %723
  %728 = getelementptr inbounds %union.anon, %union.anon* %693, i64 0, i32 0
  %729 = load i32*, i32** %728, align 8
  %730 = bitcast %union.anon* %693 to [5 x i32]*
  %731 = sext i8 %636 to i64
  %732 = add nsw i64 %731, 1
  %733 = xor i32 %689, -1
  %734 = add i32 %686, %733
  %735 = add i32 %686, -2
  %736 = sub i32 %735, %689
  %737 = and i32 %734, 3
  %738 = icmp ult i32 %736, 3
  br i1 %738, label %775, label %739

739:                                              ; preds = %727
  %740 = sub i32 %734, %737
  br label %806

741:                                              ; preds = %741, %703
  %742 = phi i64 [ 0, %703 ], [ %772, %741 ]
  %743 = phi i64 [ 1, %703 ], [ %771, %741 ]
  %744 = phi i64 [ %704, %703 ], [ %773, %741 ]
  %745 = getelementptr inbounds i32, i32* %697, i64 %742
  %746 = getelementptr inbounds [5 x i32], [5 x i32]* %698, i64 0, i64 %742
  %747 = select i1 %692, i32* %745, i32* %746
  %748 = load i32, i32* %747, align 4
  %749 = sext i32 %748 to i64
  %750 = mul nsw i64 %743, %749
  %751 = or i64 %742, 1
  %752 = getelementptr inbounds i32, i32* %697, i64 %751
  %753 = getelementptr inbounds [5 x i32], [5 x i32]* %698, i64 0, i64 %751
  %754 = select i1 %692, i32* %752, i32* %753
  %755 = load i32, i32* %754, align 4
  %756 = sext i32 %755 to i64
  %757 = mul nsw i64 %750, %756
  %758 = or i64 %742, 2
  %759 = getelementptr inbounds i32, i32* %697, i64 %758
  %760 = getelementptr inbounds [5 x i32], [5 x i32]* %698, i64 0, i64 %758
  %761 = select i1 %692, i32* %759, i32* %760
  %762 = load i32, i32* %761, align 4
  %763 = sext i32 %762 to i64
  %764 = mul nsw i64 %757, %763
  %765 = or i64 %742, 3
  %766 = getelementptr inbounds i32, i32* %697, i64 %765
  %767 = getelementptr inbounds [5 x i32], [5 x i32]* %698, i64 0, i64 %765
  %768 = select i1 %692, i32* %766, i32* %767
  %769 = load i32, i32* %768, align 4
  %770 = sext i32 %769 to i64
  %771 = mul nsw i64 %764, %770
  %772 = add nuw nsw i64 %742, 4
  %773 = add i64 %744, -4
  %774 = icmp eq i64 %773, 0
  br i1 %774, label %705, label %741

775:                                              ; preds = %806, %727
  %776 = phi i64 [ undef, %727 ], [ %836, %806 ]
  %777 = phi i64 [ %732, %727 ], [ %837, %806 ]
  %778 = phi i64 [ 1, %727 ], [ %836, %806 ]
  %779 = icmp eq i32 %737, 0
  br i1 %779, label %793, label %780

780:                                              ; preds = %775, %780
  %781 = phi i64 [ %790, %780 ], [ %777, %775 ]
  %782 = phi i64 [ %789, %780 ], [ %778, %775 ]
  %783 = phi i32 [ %791, %780 ], [ %737, %775 ]
  %784 = getelementptr inbounds i32, i32* %729, i64 %781
  %785 = getelementptr inbounds [5 x i32], [5 x i32]* %730, i64 0, i64 %781
  %786 = select i1 %692, i32* %784, i32* %785
  %787 = load i32, i32* %786, align 4
  %788 = sext i32 %787 to i64
  %789 = mul nsw i64 %782, %788
  %790 = add i64 %781, 1
  %791 = add i32 %783, -1
  %792 = icmp eq i32 %791, 0
  br i1 %792, label %793, label %780, !llvm.loop !58

793:                                              ; preds = %780, %775
  %794 = phi i64 [ %776, %775 ], [ %789, %780 ]
  %795 = trunc i64 %794 to i32
  br label %796

796:                                              ; preds = %793, %723
  %797 = phi i32 [ 1, %723 ], [ %795, %793 ]
  %798 = fdiv float 1.000000e+00, %648
  %799 = icmp sgt i64 %724, 0
  br i1 %799, label %800, label %954

800:                                              ; preds = %796
  %801 = sext i8 %636 to i64
  %802 = and i32 %643, 65535
  %803 = zext i32 %802 to i64
  %804 = insertelement <16 x i32> undef, i32 %646, i32 0
  %805 = shufflevector <16 x i32> %804, <16 x i32> undef, <16 x i32> zeroinitializer
  br label %840

806:                                              ; preds = %806, %739
  %807 = phi i64 [ %732, %739 ], [ %837, %806 ]
  %808 = phi i64 [ 1, %739 ], [ %836, %806 ]
  %809 = phi i32 [ %740, %739 ], [ %838, %806 ]
  %810 = getelementptr inbounds i32, i32* %729, i64 %807
  %811 = getelementptr inbounds [5 x i32], [5 x i32]* %730, i64 0, i64 %807
  %812 = select i1 %692, i32* %810, i32* %811
  %813 = load i32, i32* %812, align 4
  %814 = sext i32 %813 to i64
  %815 = mul nsw i64 %808, %814
  %816 = add i64 %807, 1
  %817 = getelementptr inbounds i32, i32* %729, i64 %816
  %818 = getelementptr inbounds [5 x i32], [5 x i32]* %730, i64 0, i64 %816
  %819 = select i1 %692, i32* %817, i32* %818
  %820 = load i32, i32* %819, align 4
  %821 = sext i32 %820 to i64
  %822 = mul nsw i64 %815, %821
  %823 = add i64 %807, 2
  %824 = getelementptr inbounds i32, i32* %729, i64 %823
  %825 = getelementptr inbounds [5 x i32], [5 x i32]* %730, i64 0, i64 %823
  %826 = select i1 %692, i32* %824, i32* %825
  %827 = load i32, i32* %826, align 4
  %828 = sext i32 %827 to i64
  %829 = mul nsw i64 %822, %828
  %830 = add i64 %807, 3
  %831 = getelementptr inbounds i32, i32* %729, i64 %830
  %832 = getelementptr inbounds [5 x i32], [5 x i32]* %730, i64 0, i64 %830
  %833 = select i1 %692, i32* %831, i32* %832
  %834 = load i32, i32* %833, align 4
  %835 = sext i32 %834 to i64
  %836 = mul nsw i64 %829, %835
  %837 = add i64 %807, 4
  %838 = add i32 %809, -4
  %839 = icmp eq i32 %838, 0
  br i1 %839, label %775, label %806

840:                                              ; preds = %845, %800
  %841 = phi i64 [ 0, %800 ], [ %847, %845 ]
  %842 = phi i8* [ %687, %800 ], [ %846, %845 ]
  br i1 %691, label %845, label %843

843:                                              ; preds = %840
  %844 = trunc i64 %841 to i32
  br label %849

845:                                              ; preds = %947, %840
  %846 = phi i8* [ %842, %840 ], [ %949, %947 ]
  %847 = add nuw nsw i64 %841, 1
  %848 = icmp eq i64 %847, %724
  br i1 %848, label %952, label %840

849:                                              ; preds = %947, %843
  %850 = phi i64 [ 0, %843 ], [ %950, %947 ]
  %851 = phi i8* [ %842, %843 ], [ %949, %947 ]
  %852 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %650, i64 %850
  %853 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %852, align 8
  %854 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %853, i64 0, i32 0
  %855 = load i32, i32* %854, align 8
  %856 = icmp sgt i32 %855, 5
  %857 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %853, i64 0, i32 1
  br i1 %856, label %858, label %862

858:                                              ; preds = %849
  %859 = getelementptr inbounds %union.anon, %union.anon* %857, i64 0, i32 0
  %860 = load i32*, i32** %859, align 8
  %861 = getelementptr inbounds i32, i32* %860, i64 %801
  br label %865

862:                                              ; preds = %849
  %863 = bitcast %union.anon* %857 to [5 x i32]*
  %864 = getelementptr inbounds [5 x i32], [5 x i32]* %863, i64 0, i64 %801
  br label %865

865:                                              ; preds = %862, %858
  %866 = phi i32* [ %861, %858 ], [ %864, %862 ]
  %867 = load i32, i32* %866, align 4
  %868 = mul i32 %867, %797
  %869 = getelementptr inbounds i8*, i8** %652, i64 %850
  %870 = load i8*, i8** %869, align 8
  %871 = mul nsw i32 %868, %844
  %872 = sext i32 %871 to i64
  %873 = getelementptr inbounds i8, i8* %870, i64 %872
  %874 = getelementptr inbounds i32, i32* %638, i64 %850
  %875 = load i32, i32* %874, align 4
  %876 = icmp eq i32 %875, %646
  %877 = getelementptr inbounds float, float* %640, i64 %850
  %878 = load float, float* %877, align 4
  %879 = fcmp oeq float %878, %648
  %880 = and i1 %876, %879
  br i1 %880, label %881, label %883

881:                                              ; preds = %865
  %882 = sext i32 %868 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %851, i8* align 1 %873, i64 %882, i1 false) #10
  br label %947

883:                                              ; preds = %865
  %884 = fmul float %798, %878
  %885 = sub nsw i32 0, %875
  %886 = sitofp i32 %885 to float
  %887 = fmul float %884, %886
  %888 = icmp sgt i32 %868, 0
  br i1 %888, label %889, label %947

889:                                              ; preds = %883
  %890 = zext i32 %868 to i64
  %891 = icmp ult i32 %868, 16
  br i1 %891, label %927, label %892

892:                                              ; preds = %889
  %893 = getelementptr i8, i8* %851, i64 %890
  %894 = add nsw i64 %872, %890
  %895 = getelementptr i8, i8* %870, i64 %894
  %896 = icmp ult i8* %851, %895
  %897 = icmp ult i8* %873, %893
  %898 = and i1 %896, %897
  br i1 %898, label %927, label %899

899:                                              ; preds = %892
  %900 = and i64 %890, 4294967280
  %901 = insertelement <16 x float> undef, float %884, i32 0
  %902 = shufflevector <16 x float> %901, <16 x float> undef, <16 x i32> zeroinitializer
  %903 = insertelement <16 x float> undef, float %887, i32 0
  %904 = shufflevector <16 x float> %903, <16 x float> undef, <16 x i32> zeroinitializer
  br label %905

905:                                              ; preds = %905, %899
  %906 = phi i64 [ 0, %899 ], [ %923, %905 ]
  %907 = getelementptr inbounds i8, i8* %873, i64 %906
  %908 = bitcast i8* %907 to <16 x i8>*
  %909 = load <16 x i8>, <16 x i8>* %908, align 1, !alias.scope !59
  %910 = uitofp <16 x i8> %909 to <16 x float>
  %911 = fmul <16 x float> %902, %910
  %912 = fadd <16 x float> %904, %911
  %913 = call <16 x float> @llvm.round.v16f32(<16 x float> %912)
  %914 = fptosi <16 x float> %913 to <16 x i32>
  %915 = add nsw <16 x i32> %805, %914
  %916 = icmp slt <16 x i32> %915, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %917 = select <16 x i1> %916, <16 x i32> %915, <16 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %918 = icmp sgt <16 x i32> %917, zeroinitializer
  %919 = select <16 x i1> %918, <16 x i32> %917, <16 x i32> zeroinitializer
  %920 = trunc <16 x i32> %919 to <16 x i8>
  %921 = getelementptr inbounds i8, i8* %851, i64 %906
  %922 = bitcast i8* %921 to <16 x i8>*
  store <16 x i8> %920, <16 x i8>* %922, align 1, !alias.scope !62, !noalias !59
  %923 = add i64 %906, 16
  %924 = icmp eq i64 %923, %900
  br i1 %924, label %925, label %905, !llvm.loop !64

925:                                              ; preds = %905
  %926 = icmp eq i64 %900, %890
  br i1 %926, label %947, label %927

927:                                              ; preds = %925, %892, %889
  %928 = phi i64 [ 0, %892 ], [ 0, %889 ], [ %900, %925 ]
  br label %929

929:                                              ; preds = %927, %929
  %930 = phi i64 [ %945, %929 ], [ %928, %927 ]
  %931 = getelementptr inbounds i8, i8* %873, i64 %930
  %932 = load i8, i8* %931, align 1
  %933 = uitofp i8 %932 to float
  %934 = fmul float %884, %933
  %935 = fadd float %887, %934
  %936 = call float @llvm.round.f32(float %935) #10
  %937 = fptosi float %936 to i32
  %938 = add nsw i32 %646, %937
  %939 = icmp slt i32 %938, 255
  %940 = select i1 %939, i32 %938, i32 255
  %941 = icmp sgt i32 %940, 0
  %942 = select i1 %941, i32 %940, i32 0
  %943 = trunc i32 %942 to i8
  %944 = getelementptr inbounds i8, i8* %851, i64 %930
  store i8 %943, i8* %944, align 1
  %945 = add nuw nsw i64 %930, 1
  %946 = icmp eq i64 %945, %890
  br i1 %946, label %947, label %929, !llvm.loop !65

947:                                              ; preds = %929, %925, %883, %881
  %948 = sext i32 %868 to i64
  %949 = getelementptr inbounds i8, i8* %851, i64 %948
  %950 = add nuw nsw i64 %850, 1
  %951 = icmp eq i64 %950, %803
  br i1 %951, label %845, label %849

952:                                              ; preds = %845
  %953 = load i32, i32* %690, align 8
  br label %954

954:                                              ; preds = %952, %796
  %955 = phi i32 [ %953, %952 ], [ %686, %796 ]
  %956 = icmp sgt i32 %955, 5
  br i1 %956, label %957, label %963

957:                                              ; preds = %954
  %958 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %959 = load i32*, i32** %958, align 8
  %960 = icmp eq i32* %959, null
  br i1 %960, label %963, label %961

961:                                              ; preds = %957
  %962 = bitcast i32* %959 to i8*
  call void @_ZdaPv(i8* %962) #11
  br label %963

963:                                              ; preds = %954, %957, %961
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %653) #10
  %964 = load float*, float** %639, align 8
  %965 = icmp eq float* %964, null
  br i1 %965, label %971, label %966

966:                                              ; preds = %963
  %967 = ptrtoint float* %964 to i64
  %968 = getelementptr inbounds %"class.tflite::VectorOfQuantizedTensors", %"class.tflite::VectorOfQuantizedTensors"* %7, i64 0, i32 2, i32 0, i32 1
  %969 = bitcast float** %968 to i64*
  store i64 %967, i64* %969, align 8
  %970 = bitcast float* %964 to i8*
  call void @_ZdlPv(i8* %970) #11
  br label %971

971:                                              ; preds = %966, %963
  %972 = load i32*, i32** %637, align 8
  %973 = icmp eq i32* %972, null
  br i1 %973, label %979, label %974

974:                                              ; preds = %971
  %975 = ptrtoint i32* %972 to i64
  %976 = getelementptr inbounds %"class.tflite::VectorOfQuantizedTensors", %"class.tflite::VectorOfQuantizedTensors"* %7, i64 0, i32 1, i32 0, i32 1
  %977 = bitcast i32** %976 to i64*
  store i64 %975, i64* %977, align 8
  %978 = bitcast i32* %972 to i8*
  call void @_ZdlPv(i8* %978) #11
  br label %979

979:                                              ; preds = %971, %974
  %980 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %649, align 8
  %981 = icmp eq %"class.tflite::RuntimeShape"** %980, null
  br i1 %981, label %987, label %982

982:                                              ; preds = %979
  %983 = ptrtoint %"class.tflite::RuntimeShape"** %980 to i64
  %984 = getelementptr inbounds %"class.tflite::VectorOfQuantizedTensors", %"class.tflite::VectorOfQuantizedTensors"* %7, i64 0, i32 0, i32 2, i32 0, i32 1
  %985 = bitcast %"class.tflite::RuntimeShape"*** %984 to i64*
  store i64 %983, i64* %985, align 8
  %986 = bitcast %"class.tflite::RuntimeShape"** %980 to i8*
  call void @_ZdlPv(i8* %986) #11
  br label %987

987:                                              ; preds = %982, %979
  %988 = getelementptr inbounds %"class.tflite::VectorOfQuantizedTensors", %"class.tflite::VectorOfQuantizedTensors"* %7, i64 0, i32 0, i32 1
  %989 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %988, i64 0, i32 0, i32 0
  %990 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %989, align 8
  %991 = icmp eq %"class.tflite::RuntimeShape"* %990, null
  br i1 %991, label %1016, label %992

992:                                              ; preds = %987
  %993 = bitcast %"class.tflite::RuntimeShape"* %990 to i8*
  %994 = getelementptr inbounds %"class.tflite::VectorOfQuantizedTensors", %"class.tflite::VectorOfQuantizedTensors"* %7, i64 0, i32 0, i32 1, i32 0, i32 1
  %995 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %994, align 8
  %996 = icmp eq %"class.tflite::RuntimeShape"* %995, %990
  br i1 %996, label %1014, label %997

997:                                              ; preds = %992, %1009
  %998 = phi %"class.tflite::RuntimeShape"* [ %999, %1009 ], [ %995, %992 ]
  %999 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %998, i64 -1
  %1000 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %999, i64 0, i32 0
  %1001 = load i32, i32* %1000, align 8
  %1002 = icmp sgt i32 %1001, 5
  br i1 %1002, label %1003, label %1009

1003:                                             ; preds = %997
  %1004 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %998, i64 -1, i32 1, i32 0
  %1005 = load i32*, i32** %1004, align 8
  %1006 = icmp eq i32* %1005, null
  br i1 %1006, label %1009, label %1007

1007:                                             ; preds = %1003
  %1008 = bitcast i32* %1005 to i8*
  call void @_ZdaPv(i8* %1008) #11
  br label %1009

1009:                                             ; preds = %1007, %1003, %997
  %1010 = icmp eq %"class.tflite::RuntimeShape"* %999, %990
  br i1 %1010, label %1011, label %997

1011:                                             ; preds = %1009
  %1012 = bitcast %"class.std::__1::vector.2"* %988 to i8**
  %1013 = load i8*, i8** %1012, align 8
  br label %1014

1014:                                             ; preds = %1011, %992
  %1015 = phi i8* [ %1013, %1011 ], [ %993, %992 ]
  store %"class.tflite::RuntimeShape"* %990, %"class.tflite::RuntimeShape"** %994, align 8
  call void @_ZdlPv(i8* %1015) #11
  br label %1016

1016:                                             ; preds = %1014, %987
  %1017 = load i8**, i8*** %651, align 8
  %1018 = icmp eq i8** %1017, null
  br i1 %1018, label %1024, label %1019

1019:                                             ; preds = %1016
  %1020 = ptrtoint i8** %1017 to i64
  %1021 = getelementptr inbounds %"class.tflite::VectorOfQuantizedTensors", %"class.tflite::VectorOfQuantizedTensors"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %1022 = bitcast i8*** %1021 to i64*
  store i64 %1020, i64* %1022, align 8
  %1023 = bitcast i8** %1017 to i8*
  call void @_ZdlPv(i8* %1023) #11
  br label %1024

1024:                                             ; preds = %1016, %1019
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %633) #10
  br label %1911

1025:                                             ; preds = %39
  %1026 = bitcast %"class.tflite::VectorOfTensors"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %1026) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1026, i8 -86, i64 72, i1 false)
  %1027 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %1028 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1027, align 8
  call void @_ZN6tflite15VectorOfTensorsIaEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors"* nonnull %9, %struct.TfLiteContext* dereferenceable(160) %0, %struct.TfLiteIntArray* dereferenceable(4) %1028)
  %1029 = trunc i32 %40 to i8
  %1030 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1027, align 8
  %1031 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1030, i64 0, i32 0
  %1032 = load i32, i32* %1031, align 4
  %1033 = trunc i32 %1032 to i16
  %1034 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %9, i64 0, i32 2, i32 0, i32 0
  %1035 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %1034, align 8
  %1036 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %9, i64 0, i32 0, i32 0, i32 0
  %1037 = load i8**, i8*** %1036, align 8
  %1038 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1038) #10
  %1039 = icmp eq %struct.TfLiteTensor* %31, null
  br i1 %1039, label %1040, label %1042

1040:                                             ; preds = %1025
  %1041 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %1041, align 8, !alias.scope !66
  br label %1070

1042:                                             ; preds = %1025
  %1043 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %31, i64 0, i32 2
  %1044 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1043, align 8, !noalias !66
  %1045 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1044, i64 0, i32 0
  %1046 = load i32, i32* %1045, align 4, !noalias !66
  %1047 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1044, i64 0, i32 1, i64 0
  %1048 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 %1046, i32* %1048, align 8, !alias.scope !66
  %1049 = icmp sgt i32 %1046, 5
  br i1 %1049, label %1050, label %1057

1050:                                             ; preds = %1042
  %1051 = sext i32 %1046 to i64
  %1052 = shl nsw i64 %1051, 2
  %1053 = call i8* @_Znam(i64 %1052) #11, !noalias !66
  %1054 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %1055 = bitcast i32** %1054 to i8**
  store i8* %1053, i8** %1055, align 8, !alias.scope !66
  %1056 = bitcast i8* %1053 to i32*
  br label %1062

1057:                                             ; preds = %1042
  %1058 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %1059 = bitcast %union.anon* %1058 to i32*
  %1060 = sext i32 %1046 to i64
  %1061 = shl nsw i64 %1060, 2
  br label %1062

1062:                                             ; preds = %1057, %1050
  %1063 = phi i64 [ %1052, %1050 ], [ %1061, %1057 ]
  %1064 = phi i32* [ %1056, %1050 ], [ %1059, %1057 ]
  %1065 = bitcast i32* %1064 to i8*
  %1066 = bitcast i32* %1047 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1065, i8* align 4 %1066, i64 %1063, i1 false) #10
  %1067 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %31, i64 0, i32 1
  %1068 = bitcast %union.TfLitePtrUnion* %1067 to i8**
  %1069 = load i8*, i8** %1068, align 8
  br label %1070

1070:                                             ; preds = %1040, %1062
  %1071 = phi i32 [ %1046, %1062 ], [ 0, %1040 ]
  %1072 = phi i8* [ %1069, %1062 ], [ null, %1040 ]
  %1073 = shl i32 %40, 24
  %1074 = ashr exact i32 %1073, 24
  %1075 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  %1076 = icmp eq i16 %1033, 0
  %1077 = icmp sgt i32 %1071, 5
  %1078 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %1079 = icmp sgt i8 %1029, 0
  br i1 %1079, label %1080, label %1108

1080:                                             ; preds = %1070
  %1081 = getelementptr inbounds %union.anon, %union.anon* %1078, i64 0, i32 0
  %1082 = load i32*, i32** %1081, align 8
  %1083 = bitcast %union.anon* %1078 to [5 x i32]*
  %1084 = zext i32 %1074 to i64
  %1085 = add nsw i64 %1084, -1
  %1086 = and i64 %1084, 3
  %1087 = icmp ult i64 %1085, 3
  br i1 %1087, label %1090, label %1088

1088:                                             ; preds = %1080
  %1089 = sub nsw i64 %1084, %1086
  br label %1126

1090:                                             ; preds = %1126, %1080
  %1091 = phi i64 [ undef, %1080 ], [ %1156, %1126 ]
  %1092 = phi i64 [ 0, %1080 ], [ %1157, %1126 ]
  %1093 = phi i64 [ 1, %1080 ], [ %1156, %1126 ]
  %1094 = icmp eq i64 %1086, 0
  br i1 %1094, label %1108, label %1095

1095:                                             ; preds = %1090, %1095
  %1096 = phi i64 [ %1105, %1095 ], [ %1092, %1090 ]
  %1097 = phi i64 [ %1104, %1095 ], [ %1093, %1090 ]
  %1098 = phi i64 [ %1106, %1095 ], [ %1086, %1090 ]
  %1099 = getelementptr inbounds i32, i32* %1082, i64 %1096
  %1100 = getelementptr inbounds [5 x i32], [5 x i32]* %1083, i64 0, i64 %1096
  %1101 = select i1 %1077, i32* %1099, i32* %1100
  %1102 = load i32, i32* %1101, align 4
  %1103 = sext i32 %1102 to i64
  %1104 = mul nsw i64 %1097, %1103
  %1105 = add nuw nsw i64 %1096, 1
  %1106 = add i64 %1098, -1
  %1107 = icmp eq i64 %1106, 0
  br i1 %1107, label %1108, label %1095, !llvm.loop !69

1108:                                             ; preds = %1090, %1095, %1070
  %1109 = phi i64 [ 1, %1070 ], [ %1091, %1090 ], [ %1104, %1095 ]
  %1110 = add nsw i32 %1074, 1
  %1111 = icmp slt i32 %1110, %1071
  br i1 %1111, label %1112, label %1181

1112:                                             ; preds = %1108
  %1113 = getelementptr inbounds %union.anon, %union.anon* %1078, i64 0, i32 0
  %1114 = load i32*, i32** %1113, align 8
  %1115 = bitcast %union.anon* %1078 to [5 x i32]*
  %1116 = sext i8 %1029 to i64
  %1117 = add nsw i64 %1116, 1
  %1118 = xor i32 %1074, -1
  %1119 = add i32 %1071, %1118
  %1120 = add i32 %1071, -2
  %1121 = sub i32 %1120, %1074
  %1122 = and i32 %1119, 3
  %1123 = icmp ult i32 %1121, 3
  br i1 %1123, label %1160, label %1124

1124:                                             ; preds = %1112
  %1125 = sub i32 %1119, %1122
  br label %1188

1126:                                             ; preds = %1126, %1088
  %1127 = phi i64 [ 0, %1088 ], [ %1157, %1126 ]
  %1128 = phi i64 [ 1, %1088 ], [ %1156, %1126 ]
  %1129 = phi i64 [ %1089, %1088 ], [ %1158, %1126 ]
  %1130 = getelementptr inbounds i32, i32* %1082, i64 %1127
  %1131 = getelementptr inbounds [5 x i32], [5 x i32]* %1083, i64 0, i64 %1127
  %1132 = select i1 %1077, i32* %1130, i32* %1131
  %1133 = load i32, i32* %1132, align 4
  %1134 = sext i32 %1133 to i64
  %1135 = mul nsw i64 %1128, %1134
  %1136 = or i64 %1127, 1
  %1137 = getelementptr inbounds i32, i32* %1082, i64 %1136
  %1138 = getelementptr inbounds [5 x i32], [5 x i32]* %1083, i64 0, i64 %1136
  %1139 = select i1 %1077, i32* %1137, i32* %1138
  %1140 = load i32, i32* %1139, align 4
  %1141 = sext i32 %1140 to i64
  %1142 = mul nsw i64 %1135, %1141
  %1143 = or i64 %1127, 2
  %1144 = getelementptr inbounds i32, i32* %1082, i64 %1143
  %1145 = getelementptr inbounds [5 x i32], [5 x i32]* %1083, i64 0, i64 %1143
  %1146 = select i1 %1077, i32* %1144, i32* %1145
  %1147 = load i32, i32* %1146, align 4
  %1148 = sext i32 %1147 to i64
  %1149 = mul nsw i64 %1142, %1148
  %1150 = or i64 %1127, 3
  %1151 = getelementptr inbounds i32, i32* %1082, i64 %1150
  %1152 = getelementptr inbounds [5 x i32], [5 x i32]* %1083, i64 0, i64 %1150
  %1153 = select i1 %1077, i32* %1151, i32* %1152
  %1154 = load i32, i32* %1153, align 4
  %1155 = sext i32 %1154 to i64
  %1156 = mul nsw i64 %1149, %1155
  %1157 = add nuw nsw i64 %1127, 4
  %1158 = add i64 %1129, -4
  %1159 = icmp eq i64 %1158, 0
  br i1 %1159, label %1090, label %1126

1160:                                             ; preds = %1188, %1112
  %1161 = phi i64 [ undef, %1112 ], [ %1218, %1188 ]
  %1162 = phi i64 [ %1117, %1112 ], [ %1219, %1188 ]
  %1163 = phi i64 [ 1, %1112 ], [ %1218, %1188 ]
  %1164 = icmp eq i32 %1122, 0
  br i1 %1164, label %1178, label %1165

1165:                                             ; preds = %1160, %1165
  %1166 = phi i64 [ %1175, %1165 ], [ %1162, %1160 ]
  %1167 = phi i64 [ %1174, %1165 ], [ %1163, %1160 ]
  %1168 = phi i32 [ %1176, %1165 ], [ %1122, %1160 ]
  %1169 = getelementptr inbounds i32, i32* %1114, i64 %1166
  %1170 = getelementptr inbounds [5 x i32], [5 x i32]* %1115, i64 0, i64 %1166
  %1171 = select i1 %1077, i32* %1169, i32* %1170
  %1172 = load i32, i32* %1171, align 4
  %1173 = sext i32 %1172 to i64
  %1174 = mul nsw i64 %1167, %1173
  %1175 = add i64 %1166, 1
  %1176 = add i32 %1168, -1
  %1177 = icmp eq i32 %1176, 0
  br i1 %1177, label %1178, label %1165, !llvm.loop !70

1178:                                             ; preds = %1165, %1160
  %1179 = phi i64 [ %1161, %1160 ], [ %1174, %1165 ]
  %1180 = trunc i64 %1179 to i32
  br label %1181

1181:                                             ; preds = %1178, %1108
  %1182 = phi i32 [ 1, %1108 ], [ %1180, %1178 ]
  %1183 = icmp sgt i64 %1109, 0
  br i1 %1183, label %1184, label %1262

1184:                                             ; preds = %1181
  %1185 = sext i8 %1029 to i64
  %1186 = and i32 %1032, 65535
  %1187 = zext i32 %1186 to i64
  br label %1222

1188:                                             ; preds = %1188, %1124
  %1189 = phi i64 [ %1117, %1124 ], [ %1219, %1188 ]
  %1190 = phi i64 [ 1, %1124 ], [ %1218, %1188 ]
  %1191 = phi i32 [ %1125, %1124 ], [ %1220, %1188 ]
  %1192 = getelementptr inbounds i32, i32* %1114, i64 %1189
  %1193 = getelementptr inbounds [5 x i32], [5 x i32]* %1115, i64 0, i64 %1189
  %1194 = select i1 %1077, i32* %1192, i32* %1193
  %1195 = load i32, i32* %1194, align 4
  %1196 = sext i32 %1195 to i64
  %1197 = mul nsw i64 %1190, %1196
  %1198 = add i64 %1189, 1
  %1199 = getelementptr inbounds i32, i32* %1114, i64 %1198
  %1200 = getelementptr inbounds [5 x i32], [5 x i32]* %1115, i64 0, i64 %1198
  %1201 = select i1 %1077, i32* %1199, i32* %1200
  %1202 = load i32, i32* %1201, align 4
  %1203 = sext i32 %1202 to i64
  %1204 = mul nsw i64 %1197, %1203
  %1205 = add i64 %1189, 2
  %1206 = getelementptr inbounds i32, i32* %1114, i64 %1205
  %1207 = getelementptr inbounds [5 x i32], [5 x i32]* %1115, i64 0, i64 %1205
  %1208 = select i1 %1077, i32* %1206, i32* %1207
  %1209 = load i32, i32* %1208, align 4
  %1210 = sext i32 %1209 to i64
  %1211 = mul nsw i64 %1204, %1210
  %1212 = add i64 %1189, 3
  %1213 = getelementptr inbounds i32, i32* %1114, i64 %1212
  %1214 = getelementptr inbounds [5 x i32], [5 x i32]* %1115, i64 0, i64 %1212
  %1215 = select i1 %1077, i32* %1213, i32* %1214
  %1216 = load i32, i32* %1215, align 4
  %1217 = sext i32 %1216 to i64
  %1218 = mul nsw i64 %1211, %1217
  %1219 = add i64 %1189, 4
  %1220 = add i32 %1191, -4
  %1221 = icmp eq i32 %1220, 0
  br i1 %1221, label %1160, label %1188

1222:                                             ; preds = %1227, %1184
  %1223 = phi i64 [ 0, %1184 ], [ %1229, %1227 ]
  %1224 = phi i8* [ %1072, %1184 ], [ %1228, %1227 ]
  br i1 %1076, label %1227, label %1225

1225:                                             ; preds = %1222
  %1226 = trunc i64 %1223 to i32
  br label %1231

1227:                                             ; preds = %1247, %1222
  %1228 = phi i8* [ %1224, %1222 ], [ %1257, %1247 ]
  %1229 = add nuw nsw i64 %1223, 1
  %1230 = icmp eq i64 %1229, %1109
  br i1 %1230, label %1260, label %1222

1231:                                             ; preds = %1247, %1225
  %1232 = phi i64 [ 0, %1225 ], [ %1258, %1247 ]
  %1233 = phi i8* [ %1224, %1225 ], [ %1257, %1247 ]
  %1234 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %1035, i64 %1232
  %1235 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %1234, align 8
  %1236 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1235, i64 0, i32 0
  %1237 = load i32, i32* %1236, align 8
  %1238 = icmp sgt i32 %1237, 5
  %1239 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1235, i64 0, i32 1
  br i1 %1238, label %1240, label %1244

1240:                                             ; preds = %1231
  %1241 = getelementptr inbounds %union.anon, %union.anon* %1239, i64 0, i32 0
  %1242 = load i32*, i32** %1241, align 8
  %1243 = getelementptr inbounds i32, i32* %1242, i64 %1185
  br label %1247

1244:                                             ; preds = %1231
  %1245 = bitcast %union.anon* %1239 to [5 x i32]*
  %1246 = getelementptr inbounds [5 x i32], [5 x i32]* %1245, i64 0, i64 %1185
  br label %1247

1247:                                             ; preds = %1244, %1240
  %1248 = phi i32* [ %1243, %1240 ], [ %1246, %1244 ]
  %1249 = load i32, i32* %1248, align 4
  %1250 = mul i32 %1249, %1182
  %1251 = getelementptr inbounds i8*, i8** %1037, i64 %1232
  %1252 = load i8*, i8** %1251, align 8
  %1253 = mul nsw i32 %1250, %1226
  %1254 = sext i32 %1253 to i64
  %1255 = getelementptr inbounds i8, i8* %1252, i64 %1254
  %1256 = sext i32 %1250 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1233, i8* align 1 %1255, i64 %1256, i1 false) #10
  %1257 = getelementptr inbounds i8, i8* %1233, i64 %1256
  %1258 = add nuw nsw i64 %1232, 1
  %1259 = icmp eq i64 %1258, %1187
  br i1 %1259, label %1227, label %1231

1260:                                             ; preds = %1227
  %1261 = load i32, i32* %1075, align 8
  br label %1262

1262:                                             ; preds = %1260, %1181
  %1263 = phi i32 [ %1261, %1260 ], [ %1071, %1181 ]
  %1264 = icmp sgt i32 %1263, 5
  br i1 %1264, label %1265, label %1271

1265:                                             ; preds = %1262
  %1266 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %1267 = load i32*, i32** %1266, align 8
  %1268 = icmp eq i32* %1267, null
  br i1 %1268, label %1271, label %1269

1269:                                             ; preds = %1265
  %1270 = bitcast i32* %1267 to i8*
  call void @_ZdaPv(i8* %1270) #11
  br label %1271

1271:                                             ; preds = %1262, %1265, %1269
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1038) #10
  %1272 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %1034, align 8
  %1273 = icmp eq %"class.tflite::RuntimeShape"** %1272, null
  br i1 %1273, label %1279, label %1274

1274:                                             ; preds = %1271
  %1275 = ptrtoint %"class.tflite::RuntimeShape"** %1272 to i64
  %1276 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %9, i64 0, i32 2, i32 0, i32 1
  %1277 = bitcast %"class.tflite::RuntimeShape"*** %1276 to i64*
  store i64 %1275, i64* %1277, align 8
  %1278 = bitcast %"class.tflite::RuntimeShape"** %1272 to i8*
  call void @_ZdlPv(i8* %1278) #11
  br label %1279

1279:                                             ; preds = %1274, %1271
  %1280 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %9, i64 0, i32 1
  %1281 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %1280, i64 0, i32 0, i32 0
  %1282 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %1281, align 8
  %1283 = icmp eq %"class.tflite::RuntimeShape"* %1282, null
  br i1 %1283, label %1308, label %1284

1284:                                             ; preds = %1279
  %1285 = bitcast %"class.tflite::RuntimeShape"* %1282 to i8*
  %1286 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %9, i64 0, i32 1, i32 0, i32 1
  %1287 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %1286, align 8
  %1288 = icmp eq %"class.tflite::RuntimeShape"* %1287, %1282
  br i1 %1288, label %1306, label %1289

1289:                                             ; preds = %1284, %1301
  %1290 = phi %"class.tflite::RuntimeShape"* [ %1291, %1301 ], [ %1287, %1284 ]
  %1291 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1290, i64 -1
  %1292 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1291, i64 0, i32 0
  %1293 = load i32, i32* %1292, align 8
  %1294 = icmp sgt i32 %1293, 5
  br i1 %1294, label %1295, label %1301

1295:                                             ; preds = %1289
  %1296 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1290, i64 -1, i32 1, i32 0
  %1297 = load i32*, i32** %1296, align 8
  %1298 = icmp eq i32* %1297, null
  br i1 %1298, label %1301, label %1299

1299:                                             ; preds = %1295
  %1300 = bitcast i32* %1297 to i8*
  call void @_ZdaPv(i8* %1300) #11
  br label %1301

1301:                                             ; preds = %1299, %1295, %1289
  %1302 = icmp eq %"class.tflite::RuntimeShape"* %1291, %1282
  br i1 %1302, label %1303, label %1289

1303:                                             ; preds = %1301
  %1304 = bitcast %"class.std::__1::vector.2"* %1280 to i8**
  %1305 = load i8*, i8** %1304, align 8
  br label %1306

1306:                                             ; preds = %1303, %1284
  %1307 = phi i8* [ %1305, %1303 ], [ %1285, %1284 ]
  store %"class.tflite::RuntimeShape"* %1282, %"class.tflite::RuntimeShape"** %1286, align 8
  call void @_ZdlPv(i8* %1307) #11
  br label %1308

1308:                                             ; preds = %1306, %1279
  %1309 = load i8**, i8*** %1036, align 8
  %1310 = icmp eq i8** %1309, null
  br i1 %1310, label %1316, label %1311

1311:                                             ; preds = %1308
  %1312 = ptrtoint i8** %1309 to i64
  %1313 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %9, i64 0, i32 0, i32 0, i32 1
  %1314 = bitcast i8*** %1313 to i64*
  store i64 %1312, i64* %1314, align 8
  %1315 = bitcast i8** %1309 to i8*
  call void @_ZdlPv(i8* %1315) #11
  br label %1316

1316:                                             ; preds = %1308, %1311
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1026) #10
  br label %1911

1317:                                             ; preds = %39
  %1318 = bitcast %"class.tflite::VectorOfTensors.62"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %1318) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1318, i8 -86, i64 72, i1 false)
  %1319 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %1320 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1319, align 8
  call void @_ZN6tflite15VectorOfTensorsIlEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors.62"* nonnull %11, %struct.TfLiteContext* dereferenceable(160) %0, %struct.TfLiteIntArray* dereferenceable(4) %1320)
  %1321 = trunc i32 %40 to i8
  %1322 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1319, align 8
  %1323 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1322, i64 0, i32 0
  %1324 = load i32, i32* %1323, align 4
  %1325 = trunc i32 %1324 to i16
  %1326 = getelementptr inbounds %"class.tflite::VectorOfTensors.62", %"class.tflite::VectorOfTensors.62"* %11, i64 0, i32 2, i32 0, i32 0
  %1327 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %1326, align 8
  %1328 = getelementptr inbounds %"class.tflite::VectorOfTensors.62", %"class.tflite::VectorOfTensors.62"* %11, i64 0, i32 0, i32 0, i32 0
  %1329 = load i64**, i64*** %1328, align 8
  %1330 = bitcast %"class.tflite::RuntimeShape"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1330) #10
  %1331 = icmp eq %struct.TfLiteTensor* %31, null
  br i1 %1331, label %1332, label %1334

1332:                                             ; preds = %1317
  %1333 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 0, i32* %1333, align 8, !alias.scope !71
  br label %1362

1334:                                             ; preds = %1317
  %1335 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %31, i64 0, i32 2
  %1336 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1335, align 8, !noalias !71
  %1337 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1336, i64 0, i32 0
  %1338 = load i32, i32* %1337, align 4, !noalias !71
  %1339 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1336, i64 0, i32 1, i64 0
  %1340 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 %1338, i32* %1340, align 8, !alias.scope !71
  %1341 = icmp sgt i32 %1338, 5
  br i1 %1341, label %1342, label %1349

1342:                                             ; preds = %1334
  %1343 = sext i32 %1338 to i64
  %1344 = shl nsw i64 %1343, 2
  %1345 = call i8* @_Znam(i64 %1344) #11, !noalias !71
  %1346 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %1347 = bitcast i32** %1346 to i8**
  store i8* %1345, i8** %1347, align 8, !alias.scope !71
  %1348 = bitcast i8* %1345 to i32*
  br label %1354

1349:                                             ; preds = %1334
  %1350 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %1351 = bitcast %union.anon* %1350 to i32*
  %1352 = sext i32 %1338 to i64
  %1353 = shl nsw i64 %1352, 2
  br label %1354

1354:                                             ; preds = %1349, %1342
  %1355 = phi i64 [ %1344, %1342 ], [ %1353, %1349 ]
  %1356 = phi i32* [ %1348, %1342 ], [ %1351, %1349 ]
  %1357 = bitcast i32* %1356 to i8*
  %1358 = bitcast i32* %1339 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1357, i8* align 4 %1358, i64 %1355, i1 false) #10
  %1359 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %31, i64 0, i32 1
  %1360 = bitcast %union.TfLitePtrUnion* %1359 to i64**
  %1361 = load i64*, i64** %1360, align 8
  br label %1362

1362:                                             ; preds = %1332, %1354
  %1363 = phi i32 [ %1338, %1354 ], [ 0, %1332 ]
  %1364 = phi i64* [ %1361, %1354 ], [ null, %1332 ]
  %1365 = shl i32 %40, 24
  %1366 = ashr exact i32 %1365, 24
  %1367 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  %1368 = icmp eq i16 %1325, 0
  %1369 = icmp sgt i32 %1363, 5
  %1370 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %1371 = icmp sgt i8 %1321, 0
  br i1 %1371, label %1372, label %1400

1372:                                             ; preds = %1362
  %1373 = getelementptr inbounds %union.anon, %union.anon* %1370, i64 0, i32 0
  %1374 = load i32*, i32** %1373, align 8
  %1375 = bitcast %union.anon* %1370 to [5 x i32]*
  %1376 = zext i32 %1366 to i64
  %1377 = add nsw i64 %1376, -1
  %1378 = and i64 %1376, 3
  %1379 = icmp ult i64 %1377, 3
  br i1 %1379, label %1382, label %1380

1380:                                             ; preds = %1372
  %1381 = sub nsw i64 %1376, %1378
  br label %1418

1382:                                             ; preds = %1418, %1372
  %1383 = phi i64 [ undef, %1372 ], [ %1448, %1418 ]
  %1384 = phi i64 [ 0, %1372 ], [ %1449, %1418 ]
  %1385 = phi i64 [ 1, %1372 ], [ %1448, %1418 ]
  %1386 = icmp eq i64 %1378, 0
  br i1 %1386, label %1400, label %1387

1387:                                             ; preds = %1382, %1387
  %1388 = phi i64 [ %1397, %1387 ], [ %1384, %1382 ]
  %1389 = phi i64 [ %1396, %1387 ], [ %1385, %1382 ]
  %1390 = phi i64 [ %1398, %1387 ], [ %1378, %1382 ]
  %1391 = getelementptr inbounds i32, i32* %1374, i64 %1388
  %1392 = getelementptr inbounds [5 x i32], [5 x i32]* %1375, i64 0, i64 %1388
  %1393 = select i1 %1369, i32* %1391, i32* %1392
  %1394 = load i32, i32* %1393, align 4
  %1395 = sext i32 %1394 to i64
  %1396 = mul nsw i64 %1389, %1395
  %1397 = add nuw nsw i64 %1388, 1
  %1398 = add i64 %1390, -1
  %1399 = icmp eq i64 %1398, 0
  br i1 %1399, label %1400, label %1387, !llvm.loop !74

1400:                                             ; preds = %1382, %1387, %1362
  %1401 = phi i64 [ 1, %1362 ], [ %1383, %1382 ], [ %1396, %1387 ]
  %1402 = add nsw i32 %1366, 1
  %1403 = icmp slt i32 %1402, %1363
  br i1 %1403, label %1404, label %1473

1404:                                             ; preds = %1400
  %1405 = getelementptr inbounds %union.anon, %union.anon* %1370, i64 0, i32 0
  %1406 = load i32*, i32** %1405, align 8
  %1407 = bitcast %union.anon* %1370 to [5 x i32]*
  %1408 = sext i8 %1321 to i64
  %1409 = add nsw i64 %1408, 1
  %1410 = xor i32 %1366, -1
  %1411 = add i32 %1363, %1410
  %1412 = add i32 %1363, -2
  %1413 = sub i32 %1412, %1366
  %1414 = and i32 %1411, 3
  %1415 = icmp ult i32 %1413, 3
  br i1 %1415, label %1452, label %1416

1416:                                             ; preds = %1404
  %1417 = sub i32 %1411, %1414
  br label %1480

1418:                                             ; preds = %1418, %1380
  %1419 = phi i64 [ 0, %1380 ], [ %1449, %1418 ]
  %1420 = phi i64 [ 1, %1380 ], [ %1448, %1418 ]
  %1421 = phi i64 [ %1381, %1380 ], [ %1450, %1418 ]
  %1422 = getelementptr inbounds i32, i32* %1374, i64 %1419
  %1423 = getelementptr inbounds [5 x i32], [5 x i32]* %1375, i64 0, i64 %1419
  %1424 = select i1 %1369, i32* %1422, i32* %1423
  %1425 = load i32, i32* %1424, align 4
  %1426 = sext i32 %1425 to i64
  %1427 = mul nsw i64 %1420, %1426
  %1428 = or i64 %1419, 1
  %1429 = getelementptr inbounds i32, i32* %1374, i64 %1428
  %1430 = getelementptr inbounds [5 x i32], [5 x i32]* %1375, i64 0, i64 %1428
  %1431 = select i1 %1369, i32* %1429, i32* %1430
  %1432 = load i32, i32* %1431, align 4
  %1433 = sext i32 %1432 to i64
  %1434 = mul nsw i64 %1427, %1433
  %1435 = or i64 %1419, 2
  %1436 = getelementptr inbounds i32, i32* %1374, i64 %1435
  %1437 = getelementptr inbounds [5 x i32], [5 x i32]* %1375, i64 0, i64 %1435
  %1438 = select i1 %1369, i32* %1436, i32* %1437
  %1439 = load i32, i32* %1438, align 4
  %1440 = sext i32 %1439 to i64
  %1441 = mul nsw i64 %1434, %1440
  %1442 = or i64 %1419, 3
  %1443 = getelementptr inbounds i32, i32* %1374, i64 %1442
  %1444 = getelementptr inbounds [5 x i32], [5 x i32]* %1375, i64 0, i64 %1442
  %1445 = select i1 %1369, i32* %1443, i32* %1444
  %1446 = load i32, i32* %1445, align 4
  %1447 = sext i32 %1446 to i64
  %1448 = mul nsw i64 %1441, %1447
  %1449 = add nuw nsw i64 %1419, 4
  %1450 = add i64 %1421, -4
  %1451 = icmp eq i64 %1450, 0
  br i1 %1451, label %1382, label %1418

1452:                                             ; preds = %1480, %1404
  %1453 = phi i64 [ undef, %1404 ], [ %1510, %1480 ]
  %1454 = phi i64 [ %1409, %1404 ], [ %1511, %1480 ]
  %1455 = phi i64 [ 1, %1404 ], [ %1510, %1480 ]
  %1456 = icmp eq i32 %1414, 0
  br i1 %1456, label %1470, label %1457

1457:                                             ; preds = %1452, %1457
  %1458 = phi i64 [ %1467, %1457 ], [ %1454, %1452 ]
  %1459 = phi i64 [ %1466, %1457 ], [ %1455, %1452 ]
  %1460 = phi i32 [ %1468, %1457 ], [ %1414, %1452 ]
  %1461 = getelementptr inbounds i32, i32* %1406, i64 %1458
  %1462 = getelementptr inbounds [5 x i32], [5 x i32]* %1407, i64 0, i64 %1458
  %1463 = select i1 %1369, i32* %1461, i32* %1462
  %1464 = load i32, i32* %1463, align 4
  %1465 = sext i32 %1464 to i64
  %1466 = mul nsw i64 %1459, %1465
  %1467 = add i64 %1458, 1
  %1468 = add i32 %1460, -1
  %1469 = icmp eq i32 %1468, 0
  br i1 %1469, label %1470, label %1457, !llvm.loop !75

1470:                                             ; preds = %1457, %1452
  %1471 = phi i64 [ %1453, %1452 ], [ %1466, %1457 ]
  %1472 = trunc i64 %1471 to i32
  br label %1473

1473:                                             ; preds = %1470, %1400
  %1474 = phi i32 [ 1, %1400 ], [ %1472, %1470 ]
  %1475 = icmp sgt i64 %1401, 0
  br i1 %1475, label %1476, label %1557

1476:                                             ; preds = %1473
  %1477 = sext i8 %1321 to i64
  %1478 = and i32 %1324, 65535
  %1479 = zext i32 %1478 to i64
  br label %1514

1480:                                             ; preds = %1480, %1416
  %1481 = phi i64 [ %1409, %1416 ], [ %1511, %1480 ]
  %1482 = phi i64 [ 1, %1416 ], [ %1510, %1480 ]
  %1483 = phi i32 [ %1417, %1416 ], [ %1512, %1480 ]
  %1484 = getelementptr inbounds i32, i32* %1406, i64 %1481
  %1485 = getelementptr inbounds [5 x i32], [5 x i32]* %1407, i64 0, i64 %1481
  %1486 = select i1 %1369, i32* %1484, i32* %1485
  %1487 = load i32, i32* %1486, align 4
  %1488 = sext i32 %1487 to i64
  %1489 = mul nsw i64 %1482, %1488
  %1490 = add i64 %1481, 1
  %1491 = getelementptr inbounds i32, i32* %1406, i64 %1490
  %1492 = getelementptr inbounds [5 x i32], [5 x i32]* %1407, i64 0, i64 %1490
  %1493 = select i1 %1369, i32* %1491, i32* %1492
  %1494 = load i32, i32* %1493, align 4
  %1495 = sext i32 %1494 to i64
  %1496 = mul nsw i64 %1489, %1495
  %1497 = add i64 %1481, 2
  %1498 = getelementptr inbounds i32, i32* %1406, i64 %1497
  %1499 = getelementptr inbounds [5 x i32], [5 x i32]* %1407, i64 0, i64 %1497
  %1500 = select i1 %1369, i32* %1498, i32* %1499
  %1501 = load i32, i32* %1500, align 4
  %1502 = sext i32 %1501 to i64
  %1503 = mul nsw i64 %1496, %1502
  %1504 = add i64 %1481, 3
  %1505 = getelementptr inbounds i32, i32* %1406, i64 %1504
  %1506 = getelementptr inbounds [5 x i32], [5 x i32]* %1407, i64 0, i64 %1504
  %1507 = select i1 %1369, i32* %1505, i32* %1506
  %1508 = load i32, i32* %1507, align 4
  %1509 = sext i32 %1508 to i64
  %1510 = mul nsw i64 %1503, %1509
  %1511 = add i64 %1481, 4
  %1512 = add i32 %1483, -4
  %1513 = icmp eq i32 %1512, 0
  br i1 %1513, label %1452, label %1480

1514:                                             ; preds = %1519, %1476
  %1515 = phi i64 [ 0, %1476 ], [ %1521, %1519 ]
  %1516 = phi i64* [ %1364, %1476 ], [ %1520, %1519 ]
  br i1 %1368, label %1519, label %1517

1517:                                             ; preds = %1514
  %1518 = trunc i64 %1515 to i32
  br label %1523

1519:                                             ; preds = %1539, %1514
  %1520 = phi i64* [ %1516, %1514 ], [ %1552, %1539 ]
  %1521 = add nuw nsw i64 %1515, 1
  %1522 = icmp eq i64 %1521, %1401
  br i1 %1522, label %1555, label %1514

1523:                                             ; preds = %1539, %1517
  %1524 = phi i64 [ 0, %1517 ], [ %1553, %1539 ]
  %1525 = phi i64* [ %1516, %1517 ], [ %1552, %1539 ]
  %1526 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %1327, i64 %1524
  %1527 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %1526, align 8
  %1528 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1527, i64 0, i32 0
  %1529 = load i32, i32* %1528, align 8
  %1530 = icmp sgt i32 %1529, 5
  %1531 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1527, i64 0, i32 1
  br i1 %1530, label %1532, label %1536

1532:                                             ; preds = %1523
  %1533 = getelementptr inbounds %union.anon, %union.anon* %1531, i64 0, i32 0
  %1534 = load i32*, i32** %1533, align 8
  %1535 = getelementptr inbounds i32, i32* %1534, i64 %1477
  br label %1539

1536:                                             ; preds = %1523
  %1537 = bitcast %union.anon* %1531 to [5 x i32]*
  %1538 = getelementptr inbounds [5 x i32], [5 x i32]* %1537, i64 0, i64 %1477
  br label %1539

1539:                                             ; preds = %1536, %1532
  %1540 = phi i32* [ %1535, %1532 ], [ %1538, %1536 ]
  %1541 = load i32, i32* %1540, align 4
  %1542 = mul i32 %1541, %1474
  %1543 = getelementptr inbounds i64*, i64** %1329, i64 %1524
  %1544 = load i64*, i64** %1543, align 8
  %1545 = mul nsw i32 %1542, %1518
  %1546 = sext i32 %1545 to i64
  %1547 = getelementptr inbounds i64, i64* %1544, i64 %1546
  %1548 = bitcast i64* %1525 to i8*
  %1549 = bitcast i64* %1547 to i8*
  %1550 = sext i32 %1542 to i64
  %1551 = shl nsw i64 %1550, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1548, i8* align 8 %1549, i64 %1551, i1 false) #10
  %1552 = getelementptr inbounds i64, i64* %1525, i64 %1550
  %1553 = add nuw nsw i64 %1524, 1
  %1554 = icmp eq i64 %1553, %1479
  br i1 %1554, label %1519, label %1523

1555:                                             ; preds = %1519
  %1556 = load i32, i32* %1367, align 8
  br label %1557

1557:                                             ; preds = %1555, %1473
  %1558 = phi i32 [ %1556, %1555 ], [ %1363, %1473 ]
  %1559 = icmp sgt i32 %1558, 5
  br i1 %1559, label %1560, label %1566

1560:                                             ; preds = %1557
  %1561 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %1562 = load i32*, i32** %1561, align 8
  %1563 = icmp eq i32* %1562, null
  br i1 %1563, label %1566, label %1564

1564:                                             ; preds = %1560
  %1565 = bitcast i32* %1562 to i8*
  call void @_ZdaPv(i8* %1565) #11
  br label %1566

1566:                                             ; preds = %1557, %1560, %1564
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1330) #10
  %1567 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %1326, align 8
  %1568 = icmp eq %"class.tflite::RuntimeShape"** %1567, null
  br i1 %1568, label %1574, label %1569

1569:                                             ; preds = %1566
  %1570 = ptrtoint %"class.tflite::RuntimeShape"** %1567 to i64
  %1571 = getelementptr inbounds %"class.tflite::VectorOfTensors.62", %"class.tflite::VectorOfTensors.62"* %11, i64 0, i32 2, i32 0, i32 1
  %1572 = bitcast %"class.tflite::RuntimeShape"*** %1571 to i64*
  store i64 %1570, i64* %1572, align 8
  %1573 = bitcast %"class.tflite::RuntimeShape"** %1567 to i8*
  call void @_ZdlPv(i8* %1573) #11
  br label %1574

1574:                                             ; preds = %1569, %1566
  %1575 = getelementptr inbounds %"class.tflite::VectorOfTensors.62", %"class.tflite::VectorOfTensors.62"* %11, i64 0, i32 1
  %1576 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %1575, i64 0, i32 0, i32 0
  %1577 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %1576, align 8
  %1578 = icmp eq %"class.tflite::RuntimeShape"* %1577, null
  br i1 %1578, label %1603, label %1579

1579:                                             ; preds = %1574
  %1580 = bitcast %"class.tflite::RuntimeShape"* %1577 to i8*
  %1581 = getelementptr inbounds %"class.tflite::VectorOfTensors.62", %"class.tflite::VectorOfTensors.62"* %11, i64 0, i32 1, i32 0, i32 1
  %1582 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %1581, align 8
  %1583 = icmp eq %"class.tflite::RuntimeShape"* %1582, %1577
  br i1 %1583, label %1601, label %1584

1584:                                             ; preds = %1579, %1596
  %1585 = phi %"class.tflite::RuntimeShape"* [ %1586, %1596 ], [ %1582, %1579 ]
  %1586 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1585, i64 -1
  %1587 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1586, i64 0, i32 0
  %1588 = load i32, i32* %1587, align 8
  %1589 = icmp sgt i32 %1588, 5
  br i1 %1589, label %1590, label %1596

1590:                                             ; preds = %1584
  %1591 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1585, i64 -1, i32 1, i32 0
  %1592 = load i32*, i32** %1591, align 8
  %1593 = icmp eq i32* %1592, null
  br i1 %1593, label %1596, label %1594

1594:                                             ; preds = %1590
  %1595 = bitcast i32* %1592 to i8*
  call void @_ZdaPv(i8* %1595) #11
  br label %1596

1596:                                             ; preds = %1594, %1590, %1584
  %1597 = icmp eq %"class.tflite::RuntimeShape"* %1586, %1577
  br i1 %1597, label %1598, label %1584

1598:                                             ; preds = %1596
  %1599 = bitcast %"class.std::__1::vector.2"* %1575 to i8**
  %1600 = load i8*, i8** %1599, align 8
  br label %1601

1601:                                             ; preds = %1598, %1579
  %1602 = phi i8* [ %1600, %1598 ], [ %1580, %1579 ]
  store %"class.tflite::RuntimeShape"* %1577, %"class.tflite::RuntimeShape"** %1581, align 8
  call void @_ZdlPv(i8* %1602) #11
  br label %1603

1603:                                             ; preds = %1601, %1574
  %1604 = load i64**, i64*** %1328, align 8
  %1605 = icmp eq i64** %1604, null
  br i1 %1605, label %1611, label %1606

1606:                                             ; preds = %1603
  %1607 = ptrtoint i64** %1604 to i64
  %1608 = getelementptr inbounds %"class.tflite::VectorOfTensors.62", %"class.tflite::VectorOfTensors.62"* %11, i64 0, i32 0, i32 0, i32 1
  %1609 = bitcast i64*** %1608 to i64*
  store i64 %1607, i64* %1609, align 8
  %1610 = bitcast i64** %1604 to i8*
  call void @_ZdlPv(i8* %1610) #11
  br label %1611

1611:                                             ; preds = %1603, %1606
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1318) #10
  br label %1911

1612:                                             ; preds = %39
  %1613 = bitcast %"class.tflite::VectorOfTensors.70"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %1613) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1613, i8 -86, i64 72, i1 false)
  %1614 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %1615 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1614, align 8
  call void @_ZN6tflite15VectorOfTensorsIsEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors.70"* nonnull %13, %struct.TfLiteContext* dereferenceable(160) %0, %struct.TfLiteIntArray* dereferenceable(4) %1615)
  %1616 = trunc i32 %40 to i8
  %1617 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1614, align 8
  %1618 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1617, i64 0, i32 0
  %1619 = load i32, i32* %1618, align 4
  %1620 = trunc i32 %1619 to i16
  %1621 = getelementptr inbounds %"class.tflite::VectorOfTensors.70", %"class.tflite::VectorOfTensors.70"* %13, i64 0, i32 2, i32 0, i32 0
  %1622 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %1621, align 8
  %1623 = getelementptr inbounds %"class.tflite::VectorOfTensors.70", %"class.tflite::VectorOfTensors.70"* %13, i64 0, i32 0, i32 0, i32 0
  %1624 = load i16**, i16*** %1623, align 8
  %1625 = bitcast %"class.tflite::RuntimeShape"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1625) #10
  %1626 = icmp eq %struct.TfLiteTensor* %31, null
  br i1 %1626, label %1627, label %1629

1627:                                             ; preds = %1612
  %1628 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 0, i32* %1628, align 8, !alias.scope !76
  br label %1657

1629:                                             ; preds = %1612
  %1630 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %31, i64 0, i32 2
  %1631 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1630, align 8, !noalias !76
  %1632 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1631, i64 0, i32 0
  %1633 = load i32, i32* %1632, align 4, !noalias !76
  %1634 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1631, i64 0, i32 1, i64 0
  %1635 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 %1633, i32* %1635, align 8, !alias.scope !76
  %1636 = icmp sgt i32 %1633, 5
  br i1 %1636, label %1637, label %1644

1637:                                             ; preds = %1629
  %1638 = sext i32 %1633 to i64
  %1639 = shl nsw i64 %1638, 2
  %1640 = call i8* @_Znam(i64 %1639) #11, !noalias !76
  %1641 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %1642 = bitcast i32** %1641 to i8**
  store i8* %1640, i8** %1642, align 8, !alias.scope !76
  %1643 = bitcast i8* %1640 to i32*
  br label %1649

1644:                                             ; preds = %1629
  %1645 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %1646 = bitcast %union.anon* %1645 to i32*
  %1647 = sext i32 %1633 to i64
  %1648 = shl nsw i64 %1647, 2
  br label %1649

1649:                                             ; preds = %1644, %1637
  %1650 = phi i64 [ %1639, %1637 ], [ %1648, %1644 ]
  %1651 = phi i32* [ %1643, %1637 ], [ %1646, %1644 ]
  %1652 = bitcast i32* %1651 to i8*
  %1653 = bitcast i32* %1634 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1652, i8* align 4 %1653, i64 %1650, i1 false) #10
  %1654 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %31, i64 0, i32 1
  %1655 = bitcast %union.TfLitePtrUnion* %1654 to i16**
  %1656 = load i16*, i16** %1655, align 8
  br label %1657

1657:                                             ; preds = %1627, %1649
  %1658 = phi i32 [ %1633, %1649 ], [ 0, %1627 ]
  %1659 = phi i16* [ %1656, %1649 ], [ null, %1627 ]
  %1660 = shl i32 %40, 24
  %1661 = ashr exact i32 %1660, 24
  %1662 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  %1663 = icmp eq i16 %1620, 0
  %1664 = icmp sgt i32 %1658, 5
  %1665 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %1666 = icmp sgt i8 %1616, 0
  br i1 %1666, label %1667, label %1695

1667:                                             ; preds = %1657
  %1668 = getelementptr inbounds %union.anon, %union.anon* %1665, i64 0, i32 0
  %1669 = load i32*, i32** %1668, align 8
  %1670 = bitcast %union.anon* %1665 to [5 x i32]*
  %1671 = zext i32 %1661 to i64
  %1672 = add nsw i64 %1671, -1
  %1673 = and i64 %1671, 3
  %1674 = icmp ult i64 %1672, 3
  br i1 %1674, label %1677, label %1675

1675:                                             ; preds = %1667
  %1676 = sub nsw i64 %1671, %1673
  br label %1713

1677:                                             ; preds = %1713, %1667
  %1678 = phi i64 [ undef, %1667 ], [ %1743, %1713 ]
  %1679 = phi i64 [ 0, %1667 ], [ %1744, %1713 ]
  %1680 = phi i64 [ 1, %1667 ], [ %1743, %1713 ]
  %1681 = icmp eq i64 %1673, 0
  br i1 %1681, label %1695, label %1682

1682:                                             ; preds = %1677, %1682
  %1683 = phi i64 [ %1692, %1682 ], [ %1679, %1677 ]
  %1684 = phi i64 [ %1691, %1682 ], [ %1680, %1677 ]
  %1685 = phi i64 [ %1693, %1682 ], [ %1673, %1677 ]
  %1686 = getelementptr inbounds i32, i32* %1669, i64 %1683
  %1687 = getelementptr inbounds [5 x i32], [5 x i32]* %1670, i64 0, i64 %1683
  %1688 = select i1 %1664, i32* %1686, i32* %1687
  %1689 = load i32, i32* %1688, align 4
  %1690 = sext i32 %1689 to i64
  %1691 = mul nsw i64 %1684, %1690
  %1692 = add nuw nsw i64 %1683, 1
  %1693 = add i64 %1685, -1
  %1694 = icmp eq i64 %1693, 0
  br i1 %1694, label %1695, label %1682, !llvm.loop !79

1695:                                             ; preds = %1677, %1682, %1657
  %1696 = phi i64 [ 1, %1657 ], [ %1678, %1677 ], [ %1691, %1682 ]
  %1697 = add nsw i32 %1661, 1
  %1698 = icmp slt i32 %1697, %1658
  br i1 %1698, label %1699, label %1768

1699:                                             ; preds = %1695
  %1700 = getelementptr inbounds %union.anon, %union.anon* %1665, i64 0, i32 0
  %1701 = load i32*, i32** %1700, align 8
  %1702 = bitcast %union.anon* %1665 to [5 x i32]*
  %1703 = sext i8 %1616 to i64
  %1704 = add nsw i64 %1703, 1
  %1705 = xor i32 %1661, -1
  %1706 = add i32 %1658, %1705
  %1707 = add i32 %1658, -2
  %1708 = sub i32 %1707, %1661
  %1709 = and i32 %1706, 3
  %1710 = icmp ult i32 %1708, 3
  br i1 %1710, label %1747, label %1711

1711:                                             ; preds = %1699
  %1712 = sub i32 %1706, %1709
  br label %1775

1713:                                             ; preds = %1713, %1675
  %1714 = phi i64 [ 0, %1675 ], [ %1744, %1713 ]
  %1715 = phi i64 [ 1, %1675 ], [ %1743, %1713 ]
  %1716 = phi i64 [ %1676, %1675 ], [ %1745, %1713 ]
  %1717 = getelementptr inbounds i32, i32* %1669, i64 %1714
  %1718 = getelementptr inbounds [5 x i32], [5 x i32]* %1670, i64 0, i64 %1714
  %1719 = select i1 %1664, i32* %1717, i32* %1718
  %1720 = load i32, i32* %1719, align 4
  %1721 = sext i32 %1720 to i64
  %1722 = mul nsw i64 %1715, %1721
  %1723 = or i64 %1714, 1
  %1724 = getelementptr inbounds i32, i32* %1669, i64 %1723
  %1725 = getelementptr inbounds [5 x i32], [5 x i32]* %1670, i64 0, i64 %1723
  %1726 = select i1 %1664, i32* %1724, i32* %1725
  %1727 = load i32, i32* %1726, align 4
  %1728 = sext i32 %1727 to i64
  %1729 = mul nsw i64 %1722, %1728
  %1730 = or i64 %1714, 2
  %1731 = getelementptr inbounds i32, i32* %1669, i64 %1730
  %1732 = getelementptr inbounds [5 x i32], [5 x i32]* %1670, i64 0, i64 %1730
  %1733 = select i1 %1664, i32* %1731, i32* %1732
  %1734 = load i32, i32* %1733, align 4
  %1735 = sext i32 %1734 to i64
  %1736 = mul nsw i64 %1729, %1735
  %1737 = or i64 %1714, 3
  %1738 = getelementptr inbounds i32, i32* %1669, i64 %1737
  %1739 = getelementptr inbounds [5 x i32], [5 x i32]* %1670, i64 0, i64 %1737
  %1740 = select i1 %1664, i32* %1738, i32* %1739
  %1741 = load i32, i32* %1740, align 4
  %1742 = sext i32 %1741 to i64
  %1743 = mul nsw i64 %1736, %1742
  %1744 = add nuw nsw i64 %1714, 4
  %1745 = add i64 %1716, -4
  %1746 = icmp eq i64 %1745, 0
  br i1 %1746, label %1677, label %1713

1747:                                             ; preds = %1775, %1699
  %1748 = phi i64 [ undef, %1699 ], [ %1805, %1775 ]
  %1749 = phi i64 [ %1704, %1699 ], [ %1806, %1775 ]
  %1750 = phi i64 [ 1, %1699 ], [ %1805, %1775 ]
  %1751 = icmp eq i32 %1709, 0
  br i1 %1751, label %1765, label %1752

1752:                                             ; preds = %1747, %1752
  %1753 = phi i64 [ %1762, %1752 ], [ %1749, %1747 ]
  %1754 = phi i64 [ %1761, %1752 ], [ %1750, %1747 ]
  %1755 = phi i32 [ %1763, %1752 ], [ %1709, %1747 ]
  %1756 = getelementptr inbounds i32, i32* %1701, i64 %1753
  %1757 = getelementptr inbounds [5 x i32], [5 x i32]* %1702, i64 0, i64 %1753
  %1758 = select i1 %1664, i32* %1756, i32* %1757
  %1759 = load i32, i32* %1758, align 4
  %1760 = sext i32 %1759 to i64
  %1761 = mul nsw i64 %1754, %1760
  %1762 = add i64 %1753, 1
  %1763 = add i32 %1755, -1
  %1764 = icmp eq i32 %1763, 0
  br i1 %1764, label %1765, label %1752, !llvm.loop !80

1765:                                             ; preds = %1752, %1747
  %1766 = phi i64 [ %1748, %1747 ], [ %1761, %1752 ]
  %1767 = trunc i64 %1766 to i32
  br label %1768

1768:                                             ; preds = %1765, %1695
  %1769 = phi i32 [ 1, %1695 ], [ %1767, %1765 ]
  %1770 = icmp sgt i64 %1696, 0
  br i1 %1770, label %1771, label %1852

1771:                                             ; preds = %1768
  %1772 = sext i8 %1616 to i64
  %1773 = and i32 %1619, 65535
  %1774 = zext i32 %1773 to i64
  br label %1809

1775:                                             ; preds = %1775, %1711
  %1776 = phi i64 [ %1704, %1711 ], [ %1806, %1775 ]
  %1777 = phi i64 [ 1, %1711 ], [ %1805, %1775 ]
  %1778 = phi i32 [ %1712, %1711 ], [ %1807, %1775 ]
  %1779 = getelementptr inbounds i32, i32* %1701, i64 %1776
  %1780 = getelementptr inbounds [5 x i32], [5 x i32]* %1702, i64 0, i64 %1776
  %1781 = select i1 %1664, i32* %1779, i32* %1780
  %1782 = load i32, i32* %1781, align 4
  %1783 = sext i32 %1782 to i64
  %1784 = mul nsw i64 %1777, %1783
  %1785 = add i64 %1776, 1
  %1786 = getelementptr inbounds i32, i32* %1701, i64 %1785
  %1787 = getelementptr inbounds [5 x i32], [5 x i32]* %1702, i64 0, i64 %1785
  %1788 = select i1 %1664, i32* %1786, i32* %1787
  %1789 = load i32, i32* %1788, align 4
  %1790 = sext i32 %1789 to i64
  %1791 = mul nsw i64 %1784, %1790
  %1792 = add i64 %1776, 2
  %1793 = getelementptr inbounds i32, i32* %1701, i64 %1792
  %1794 = getelementptr inbounds [5 x i32], [5 x i32]* %1702, i64 0, i64 %1792
  %1795 = select i1 %1664, i32* %1793, i32* %1794
  %1796 = load i32, i32* %1795, align 4
  %1797 = sext i32 %1796 to i64
  %1798 = mul nsw i64 %1791, %1797
  %1799 = add i64 %1776, 3
  %1800 = getelementptr inbounds i32, i32* %1701, i64 %1799
  %1801 = getelementptr inbounds [5 x i32], [5 x i32]* %1702, i64 0, i64 %1799
  %1802 = select i1 %1664, i32* %1800, i32* %1801
  %1803 = load i32, i32* %1802, align 4
  %1804 = sext i32 %1803 to i64
  %1805 = mul nsw i64 %1798, %1804
  %1806 = add i64 %1776, 4
  %1807 = add i32 %1778, -4
  %1808 = icmp eq i32 %1807, 0
  br i1 %1808, label %1747, label %1775

1809:                                             ; preds = %1814, %1771
  %1810 = phi i64 [ 0, %1771 ], [ %1816, %1814 ]
  %1811 = phi i16* [ %1659, %1771 ], [ %1815, %1814 ]
  br i1 %1663, label %1814, label %1812

1812:                                             ; preds = %1809
  %1813 = trunc i64 %1810 to i32
  br label %1818

1814:                                             ; preds = %1834, %1809
  %1815 = phi i16* [ %1811, %1809 ], [ %1847, %1834 ]
  %1816 = add nuw nsw i64 %1810, 1
  %1817 = icmp eq i64 %1816, %1696
  br i1 %1817, label %1850, label %1809

1818:                                             ; preds = %1834, %1812
  %1819 = phi i64 [ 0, %1812 ], [ %1848, %1834 ]
  %1820 = phi i16* [ %1811, %1812 ], [ %1847, %1834 ]
  %1821 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %1622, i64 %1819
  %1822 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %1821, align 8
  %1823 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1822, i64 0, i32 0
  %1824 = load i32, i32* %1823, align 8
  %1825 = icmp sgt i32 %1824, 5
  %1826 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1822, i64 0, i32 1
  br i1 %1825, label %1827, label %1831

1827:                                             ; preds = %1818
  %1828 = getelementptr inbounds %union.anon, %union.anon* %1826, i64 0, i32 0
  %1829 = load i32*, i32** %1828, align 8
  %1830 = getelementptr inbounds i32, i32* %1829, i64 %1772
  br label %1834

1831:                                             ; preds = %1818
  %1832 = bitcast %union.anon* %1826 to [5 x i32]*
  %1833 = getelementptr inbounds [5 x i32], [5 x i32]* %1832, i64 0, i64 %1772
  br label %1834

1834:                                             ; preds = %1831, %1827
  %1835 = phi i32* [ %1830, %1827 ], [ %1833, %1831 ]
  %1836 = load i32, i32* %1835, align 4
  %1837 = mul i32 %1836, %1769
  %1838 = getelementptr inbounds i16*, i16** %1624, i64 %1819
  %1839 = load i16*, i16** %1838, align 8
  %1840 = mul nsw i32 %1837, %1813
  %1841 = sext i32 %1840 to i64
  %1842 = getelementptr inbounds i16, i16* %1839, i64 %1841
  %1843 = bitcast i16* %1820 to i8*
  %1844 = bitcast i16* %1842 to i8*
  %1845 = sext i32 %1837 to i64
  %1846 = shl nsw i64 %1845, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %1843, i8* align 2 %1844, i64 %1846, i1 false) #10
  %1847 = getelementptr inbounds i16, i16* %1820, i64 %1845
  %1848 = add nuw nsw i64 %1819, 1
  %1849 = icmp eq i64 %1848, %1774
  br i1 %1849, label %1814, label %1818

1850:                                             ; preds = %1814
  %1851 = load i32, i32* %1662, align 8
  br label %1852

1852:                                             ; preds = %1850, %1768
  %1853 = phi i32 [ %1851, %1850 ], [ %1658, %1768 ]
  %1854 = icmp sgt i32 %1853, 5
  br i1 %1854, label %1855, label %1861

1855:                                             ; preds = %1852
  %1856 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %1857 = load i32*, i32** %1856, align 8
  %1858 = icmp eq i32* %1857, null
  br i1 %1858, label %1861, label %1859

1859:                                             ; preds = %1855
  %1860 = bitcast i32* %1857 to i8*
  call void @_ZdaPv(i8* %1860) #11
  br label %1861

1861:                                             ; preds = %1852, %1855, %1859
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1625) #10
  %1862 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %1621, align 8
  %1863 = icmp eq %"class.tflite::RuntimeShape"** %1862, null
  br i1 %1863, label %1869, label %1864

1864:                                             ; preds = %1861
  %1865 = ptrtoint %"class.tflite::RuntimeShape"** %1862 to i64
  %1866 = getelementptr inbounds %"class.tflite::VectorOfTensors.70", %"class.tflite::VectorOfTensors.70"* %13, i64 0, i32 2, i32 0, i32 1
  %1867 = bitcast %"class.tflite::RuntimeShape"*** %1866 to i64*
  store i64 %1865, i64* %1867, align 8
  %1868 = bitcast %"class.tflite::RuntimeShape"** %1862 to i8*
  call void @_ZdlPv(i8* %1868) #11
  br label %1869

1869:                                             ; preds = %1864, %1861
  %1870 = getelementptr inbounds %"class.tflite::VectorOfTensors.70", %"class.tflite::VectorOfTensors.70"* %13, i64 0, i32 1
  %1871 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %1870, i64 0, i32 0, i32 0
  %1872 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %1871, align 8
  %1873 = icmp eq %"class.tflite::RuntimeShape"* %1872, null
  br i1 %1873, label %1898, label %1874

1874:                                             ; preds = %1869
  %1875 = bitcast %"class.tflite::RuntimeShape"* %1872 to i8*
  %1876 = getelementptr inbounds %"class.tflite::VectorOfTensors.70", %"class.tflite::VectorOfTensors.70"* %13, i64 0, i32 1, i32 0, i32 1
  %1877 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %1876, align 8
  %1878 = icmp eq %"class.tflite::RuntimeShape"* %1877, %1872
  br i1 %1878, label %1896, label %1879

1879:                                             ; preds = %1874, %1891
  %1880 = phi %"class.tflite::RuntimeShape"* [ %1881, %1891 ], [ %1877, %1874 ]
  %1881 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1880, i64 -1
  %1882 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1881, i64 0, i32 0
  %1883 = load i32, i32* %1882, align 8
  %1884 = icmp sgt i32 %1883, 5
  br i1 %1884, label %1885, label %1891

1885:                                             ; preds = %1879
  %1886 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1880, i64 -1, i32 1, i32 0
  %1887 = load i32*, i32** %1886, align 8
  %1888 = icmp eq i32* %1887, null
  br i1 %1888, label %1891, label %1889

1889:                                             ; preds = %1885
  %1890 = bitcast i32* %1887 to i8*
  call void @_ZdaPv(i8* %1890) #11
  br label %1891

1891:                                             ; preds = %1889, %1885, %1879
  %1892 = icmp eq %"class.tflite::RuntimeShape"* %1881, %1872
  br i1 %1892, label %1893, label %1879

1893:                                             ; preds = %1891
  %1894 = bitcast %"class.std::__1::vector.2"* %1870 to i8**
  %1895 = load i8*, i8** %1894, align 8
  br label %1896

1896:                                             ; preds = %1893, %1874
  %1897 = phi i8* [ %1895, %1893 ], [ %1875, %1874 ]
  store %"class.tflite::RuntimeShape"* %1872, %"class.tflite::RuntimeShape"** %1876, align 8
  call void @_ZdlPv(i8* %1897) #11
  br label %1898

1898:                                             ; preds = %1896, %1869
  %1899 = load i16**, i16*** %1623, align 8
  %1900 = icmp eq i16** %1899, null
  br i1 %1900, label %1906, label %1901

1901:                                             ; preds = %1898
  %1902 = ptrtoint i16** %1899 to i64
  %1903 = getelementptr inbounds %"class.tflite::VectorOfTensors.70", %"class.tflite::VectorOfTensors.70"* %13, i64 0, i32 0, i32 0, i32 1
  %1904 = bitcast i16*** %1903 to i64*
  store i64 %1902, i64* %1904, align 8
  %1905 = bitcast i16** %1899 to i8*
  call void @_ZdlPv(i8* %1905) #11
  br label %1906

1906:                                             ; preds = %1898, %1901
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1613) #10
  br label %1911

1907:                                             ; preds = %39
  %1908 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1909 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1908, align 8
  %1910 = tail call i8* @TfLiteTypeGetName(i32 %42) #10
  tail call void (%struct.TfLiteContext*, i8*, ...) %1909(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.29, i64 0, i64 0), i8* %1910) #10
  br label %1911

1911:                                             ; preds = %337, %631, %1024, %1316, %1611, %1906, %1907
  %1912 = phi i32 [ 1, %1907 ], [ 0, %1906 ], [ 0, %1611 ], [ 0, %1316 ], [ 0, %1024 ], [ 0, %631 ], [ 0, %337 ]
  ret i32 %1912
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin22Register_CONCATENATIONEv() local_unnamed_addr #3 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin34Register_CONCATENATION_GENERIC_OPTEvE1r to %struct.TfLiteRegistration*)
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.2"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.tflite::RuntimeShape"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.2"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"class.tflite::RuntimeShape"*
  br i1 %10, label %12, label %93

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.tflite::RuntimeShape"** %13 to i64*
  %15 = icmp ugt i64 %1, 576460752303423487
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #12
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = ashr exact i64 %19, 5
  %21 = shl i64 %1, 5
  %22 = tail call i8* @_Znwm(i64 %21) #11
  %23 = bitcast i8* %22 to %"class.tflite::RuntimeShape"*
  %24 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 %20
  %25 = ptrtoint %"class.tflite::RuntimeShape"* %24 to i64
  %26 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 %1
  %27 = ptrtoint %"class.tflite::RuntimeShape"* %26 to i64
  %28 = inttoptr i64 %18 to %"class.tflite::RuntimeShape"*
  %29 = icmp eq %"class.tflite::RuntimeShape"* %28, %11
  br i1 %29, label %69, label %30

30:                                               ; preds = %17, %50
  %31 = phi %"class.tflite::RuntimeShape"* [ %62, %50 ], [ %24, %17 ]
  %32 = phi %"class.tflite::RuntimeShape"* [ %33, %50 ], [ %28, %17 ]
  %33 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 -1
  %34 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 -1, i32 0
  %35 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %33, i64 0, i32 0
  %36 = load i32, i32* %35, align 8
  store i32 %36, i32* %34, align 8
  %37 = icmp sgt i32 %36, 5
  br i1 %37, label %38, label %45

38:                                               ; preds = %30
  %39 = sext i32 %36 to i64
  %40 = shl nsw i64 %39, 2
  %41 = tail call i8* @_Znam(i64 %40) #11
  %42 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 -1, i32 1, i32 0
  %43 = bitcast i32** %42 to i8**
  store i8* %41, i8** %43, align 8
  %44 = bitcast i8* %41 to i32*
  br label %50

45:                                               ; preds = %30
  %46 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 -1, i32 1
  %47 = bitcast %union.anon* %46 to i32*
  %48 = sext i32 %36 to i64
  %49 = shl nsw i64 %48, 2
  br label %50

50:                                               ; preds = %45, %38
  %51 = phi i64 [ %40, %38 ], [ %49, %45 ]
  %52 = phi i32* [ %44, %38 ], [ %47, %45 ]
  %53 = bitcast i32* %52 to i8*
  %54 = load i32, i32* %35, align 8
  %55 = icmp sgt i32 %54, 5
  %56 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 -1, i32 1
  %57 = getelementptr inbounds %union.anon, %union.anon* %56, i64 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = bitcast %union.anon* %56 to i32*
  %60 = select i1 %55, i32* %58, i32* %59
  %61 = bitcast i32* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %53, i8* align 4 %61, i64 %51, i1 false) #10
  %62 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 -1
  %63 = icmp eq %"class.tflite::RuntimeShape"* %33, %11
  br i1 %63, label %64, label %30

64:                                               ; preds = %50
  %65 = ptrtoint %"class.tflite::RuntimeShape"* %62 to i64
  %66 = load i64, i64* %6, align 8
  %67 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %13, align 8
  %68 = inttoptr i64 %66 to %"class.tflite::RuntimeShape"*
  br label %69

69:                                               ; preds = %17, %64
  %70 = phi %"class.tflite::RuntimeShape"* [ %68, %64 ], [ %28, %17 ]
  %71 = phi %"class.tflite::RuntimeShape"* [ %67, %64 ], [ %11, %17 ]
  %72 = phi i64 [ %65, %64 ], [ %25, %17 ]
  %73 = phi i64 [ %66, %64 ], [ %18, %17 ]
  store i64 %72, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %74 = icmp eq %"class.tflite::RuntimeShape"* %71, %70
  br i1 %74, label %89, label %75

75:                                               ; preds = %69, %87
  %76 = phi %"class.tflite::RuntimeShape"* [ %77, %87 ], [ %71, %69 ]
  %77 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %76, i64 -1
  %78 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %77, i64 0, i32 0
  %79 = load i32, i32* %78, align 8
  %80 = icmp sgt i32 %79, 5
  br i1 %80, label %81, label %87

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %76, i64 -1, i32 1, i32 0
  %83 = load i32*, i32** %82, align 8
  %84 = icmp eq i32* %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %81
  %86 = bitcast i32* %83 to i8*
  tail call void @_ZdaPv(i8* %86) #11
  br label %87

87:                                               ; preds = %85, %81, %75
  %88 = icmp eq %"class.tflite::RuntimeShape"* %77, %70
  br i1 %88, label %89, label %75

89:                                               ; preds = %87, %69
  %90 = icmp eq i64 %73, 0
  br i1 %90, label %93, label %91

91:                                               ; preds = %89
  %92 = inttoptr i64 %73 to i8*
  tail call void @_ZdlPv(i8* %92) #11
  br label %93

93:                                               ; preds = %91, %89, %2
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.2"*, %"class.tflite::RuntimeShape"* dereferenceable(32)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.tflite::RuntimeShape"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.2"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.2"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.tflite::RuntimeShape"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #12
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #11
  %33 = bitcast i8* %32 to %"class.tflite::RuntimeShape"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.tflite::RuntimeShape"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %36, i64 %9
  %38 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %36, i64 %35
  %39 = ptrtoint %"class.tflite::RuntimeShape"* %38 to i64
  %40 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %37, i64 0, i32 0
  %41 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %42 = load i32, i32* %41, align 8
  store i32 %42, i32* %40, align 8
  %43 = icmp sgt i32 %42, 5
  br i1 %43, label %44, label %51

44:                                               ; preds = %34
  %45 = sext i32 %42 to i64
  %46 = shl nsw i64 %45, 2
  %47 = tail call i8* @_Znam(i64 %46) #11
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %36, i64 %9, i32 1, i32 0
  %49 = bitcast i32** %48 to i8**
  store i8* %47, i8** %49, align 8
  %50 = bitcast i8* %47 to i32*
  br label %56

51:                                               ; preds = %34
  %52 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %36, i64 %9, i32 1
  %53 = bitcast %union.anon* %52 to i32*
  %54 = sext i32 %42 to i64
  %55 = shl nsw i64 %54, 2
  br label %56

56:                                               ; preds = %44, %51
  %57 = phi i64 [ %46, %44 ], [ %55, %51 ]
  %58 = phi i32* [ %50, %44 ], [ %53, %51 ]
  %59 = bitcast i32* %58 to i8*
  %60 = load i32, i32* %41, align 8
  %61 = icmp sgt i32 %60, 5
  %62 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %63 = getelementptr inbounds %union.anon, %union.anon* %62, i64 0, i32 0
  %64 = load i32*, i32** %63, align 8
  %65 = bitcast %union.anon* %62 to i32*
  %66 = select i1 %61, i32* %64, i32* %65
  %67 = bitcast i32* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %59, i8* align 4 %67, i64 %57, i1 false) #10
  %68 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %37, i64 1
  %69 = ptrtoint %"class.tflite::RuntimeShape"* %68 to i64
  %70 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 0
  %71 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %70, align 8
  %72 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %3, align 8
  %73 = icmp eq %"class.tflite::RuntimeShape"* %72, %71
  br i1 %73, label %74, label %76

74:                                               ; preds = %56
  %75 = ptrtoint %"class.tflite::RuntimeShape"* %71 to i64
  br label %113

76:                                               ; preds = %56, %96
  %77 = phi %"class.tflite::RuntimeShape"* [ %108, %96 ], [ %37, %56 ]
  %78 = phi %"class.tflite::RuntimeShape"* [ %79, %96 ], [ %72, %56 ]
  %79 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %78, i64 -1
  %80 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %77, i64 -1, i32 0
  %81 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %79, i64 0, i32 0
  %82 = load i32, i32* %81, align 8
  store i32 %82, i32* %80, align 8
  %83 = icmp sgt i32 %82, 5
  br i1 %83, label %84, label %91

84:                                               ; preds = %76
  %85 = sext i32 %82 to i64
  %86 = shl nsw i64 %85, 2
  %87 = tail call i8* @_Znam(i64 %86) #11
  %88 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %77, i64 -1, i32 1, i32 0
  %89 = bitcast i32** %88 to i8**
  store i8* %87, i8** %89, align 8
  %90 = bitcast i8* %87 to i32*
  br label %96

91:                                               ; preds = %76
  %92 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %77, i64 -1, i32 1
  %93 = bitcast %union.anon* %92 to i32*
  %94 = sext i32 %82 to i64
  %95 = shl nsw i64 %94, 2
  br label %96

96:                                               ; preds = %91, %84
  %97 = phi i64 [ %86, %84 ], [ %95, %91 ]
  %98 = phi i32* [ %90, %84 ], [ %93, %91 ]
  %99 = bitcast i32* %98 to i8*
  %100 = load i32, i32* %81, align 8
  %101 = icmp sgt i32 %100, 5
  %102 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %78, i64 -1, i32 1
  %103 = getelementptr inbounds %union.anon, %union.anon* %102, i64 0, i32 0
  %104 = load i32*, i32** %103, align 8
  %105 = bitcast %union.anon* %102 to i32*
  %106 = select i1 %101, i32* %104, i32* %105
  %107 = bitcast i32* %106 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %99, i8* align 4 %107, i64 %97, i1 false) #10
  %108 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %77, i64 -1
  %109 = icmp eq %"class.tflite::RuntimeShape"* %79, %71
  br i1 %109, label %110, label %76

110:                                              ; preds = %96
  %111 = load i64, i64* %6, align 8
  %112 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %3, align 8
  br label %113

113:                                              ; preds = %74, %110
  %114 = phi %"class.tflite::RuntimeShape"* [ %71, %74 ], [ %112, %110 ]
  %115 = phi %"class.tflite::RuntimeShape"* [ %37, %74 ], [ %108, %110 ]
  %116 = phi i64 [ %75, %74 ], [ %111, %110 ]
  %117 = ptrtoint %"class.tflite::RuntimeShape"* %115 to i64
  store i64 %117, i64* %6, align 8
  store i64 %69, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %118 = inttoptr i64 %116 to %"class.tflite::RuntimeShape"*
  %119 = icmp eq %"class.tflite::RuntimeShape"* %114, %118
  br i1 %119, label %134, label %120

120:                                              ; preds = %113, %132
  %121 = phi %"class.tflite::RuntimeShape"* [ %122, %132 ], [ %114, %113 ]
  %122 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %121, i64 -1
  %123 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %122, i64 0, i32 0
  %124 = load i32, i32* %123, align 8
  %125 = icmp sgt i32 %124, 5
  br i1 %125, label %126, label %132

126:                                              ; preds = %120
  %127 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %121, i64 -1, i32 1, i32 0
  %128 = load i32*, i32** %127, align 8
  %129 = icmp eq i32* %128, null
  br i1 %129, label %132, label %130

130:                                              ; preds = %126
  %131 = bitcast i32* %128 to i8*
  tail call void @_ZdaPv(i8* %131) #11
  br label %132

132:                                              ; preds = %130, %126, %120
  %133 = icmp eq %"class.tflite::RuntimeShape"* %122, %118
  br i1 %133, label %134, label %120

134:                                              ; preds = %132, %113
  %135 = icmp eq i64 %116, 0
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = inttoptr i64 %116 to i8*
  tail call void @_ZdlPv(i8* %137) #11
  br label %138

138:                                              ; preds = %134, %136
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite15VectorOfTensorsIfEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors.24"*, %struct.TfLiteContext* dereferenceable(160), %struct.TfLiteIntArray* dereferenceable(4)) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2, i64 0, i32 0
  %8 = bitcast %"class.tflite::VectorOfTensors.24"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 72, i1 false)
  %9 = load i32, i32* %7, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %12 = bitcast float*** %11 to i64*
  %13 = bitcast %"class.tflite::VectorOfTensors.24"* %0 to i64*
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %3
  %16 = icmp slt i32 %9, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %15
  tail call void @abort() #12
  unreachable

18:                                               ; preds = %15
  %19 = shl nsw i64 %10, 3
  %20 = tail call i8* @_Znwm(i64 %19) #11
  %21 = bitcast i8* %20 to float**
  %22 = getelementptr inbounds float*, float** %21, i64 %10
  %23 = ptrtoint float** %22 to i64
  %24 = insertelement <2 x i8*> undef, i8* %20, i32 0
  %25 = shufflevector <2 x i8*> %24, <2 x i8*> undef, <2 x i32> zeroinitializer
  %26 = ptrtoint <2 x i8*> %25 to <2 x i64>
  %27 = bitcast %"class.tflite::VectorOfTensors.24"* %0 to <2 x i64>*
  store <2 x i64> %26, <2 x i64>* %27, align 8
  store i64 %23, i64* %12, align 8
  br label %28

28:                                               ; preds = %18, %3
  tail call void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.2"* %5, i64 %10)
  %29 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast %"class.tflite::RuntimeShape"*** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector.9"* %6 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %31, %33
  %35 = ashr exact i64 %34, 3
  %36 = icmp ult i64 %35, %10
  br i1 %36, label %37, label %58

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %0, i64 0, i32 2, i32 0, i32 1
  %39 = bitcast %"class.tflite::RuntimeShape"*** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %40, %33
  %42 = ashr exact i64 %41, 3
  %43 = shl nsw i64 %10, 3
  %44 = tail call i8* @_Znwm(i64 %43) #11
  %45 = bitcast i8* %44 to %"class.tflite::RuntimeShape"**
  %46 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %45, i64 %42
  %47 = ptrtoint %"class.tflite::RuntimeShape"** %46 to i64
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %45, i64 %10
  %49 = ptrtoint %"class.tflite::RuntimeShape"** %48 to i64
  %50 = ptrtoint i8* %44 to i64
  %51 = icmp sgt i64 %41, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %37
  %53 = inttoptr i64 %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* align 8 %53, i64 %41, i1 false) #10
  br label %54

54:                                               ; preds = %52, %37
  store i64 %50, i64* %32, align 8
  store i64 %47, i64* %39, align 8
  store i64 %49, i64* %30, align 8
  %55 = icmp eq i64 %33, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = inttoptr i64 %33 to i8*
  tail call void @_ZdlPv(i8* %57) #11
  br label %58

58:                                               ; preds = %28, %54, %56
  %59 = icmp sgt i32 %9, 0
  br i1 %59, label %60, label %221

60:                                               ; preds = %58
  %61 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %1, i64 0, i32 2
  %62 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %0, i64 0, i32 0, i32 0, i32 1
  %63 = bitcast float*** %62 to i64*
  %64 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %0, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  %66 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %67 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %68 = bitcast %union.anon* %67 to i32*
  %69 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %70 = bitcast i32** %69 to i8**
  %71 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %0, i64 0, i32 1, i32 0, i32 1
  %72 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %73 = getelementptr inbounds %union.anon, %union.anon* %67, i64 0, i32 0
  %74 = bitcast %"class.tflite::RuntimeShape"** %71 to i64*
  %75 = zext i32 %9 to i64
  br label %83

76:                                               ; preds = %218
  br i1 %59, label %77, label %221

77:                                               ; preds = %76
  %78 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %5, i64 0, i32 0, i32 0
  %79 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %0, i64 0, i32 2, i32 0, i32 1
  %80 = bitcast %"class.tflite::RuntimeShape"*** %79 to i64*
  %81 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %6, i64 0, i32 0, i32 0
  %82 = zext i32 %9 to i64
  br label %222

83:                                               ; preds = %218, %60
  %84 = phi i64 [ 0, %60 ], [ %219, %218 ]
  %85 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %61, align 8
  %86 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2, i64 0, i32 1, i64 %84
  %87 = load i32, i32* %86, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88
  %90 = icmp eq %struct.TfLiteTensor* %89, null
  br i1 %90, label %95, label %91

91:                                               ; preds = %83
  %92 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88, i32 1
  %93 = bitcast %union.TfLitePtrUnion* %92 to float**
  %94 = load float*, float** %93, align 8
  br label %95

95:                                               ; preds = %83, %91
  %96 = phi float* [ %94, %91 ], [ null, %83 ]
  %97 = ptrtoint float* %96 to i64
  %98 = load float**, float*** %62, align 8
  %99 = load float**, float*** %11, align 8
  %100 = icmp ult float** %98, %99
  %101 = ptrtoint float** %99 to i64
  br i1 %100, label %102, label %106

102:                                              ; preds = %95
  %103 = bitcast float** %98 to i64*
  store i64 %97, i64* %103, align 8
  %104 = getelementptr inbounds float*, float** %98, i64 1
  %105 = ptrtoint float** %104 to i64
  store i64 %105, i64* %63, align 8
  br label %159

106:                                              ; preds = %95
  %107 = ptrtoint float** %98 to i64
  %108 = load i64, i64* %13, align 8
  %109 = sub i64 %107, %108
  %110 = ashr exact i64 %109, 3
  %111 = add nsw i64 %110, 1
  %112 = icmp ugt i64 %111, 2305843009213693951
  br i1 %112, label %113, label %115

113:                                              ; preds = %106
  %114 = bitcast %"class.tflite::VectorOfTensors.24"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %114) #12
  unreachable

115:                                              ; preds = %106
  %116 = sub i64 %101, %108
  %117 = ashr exact i64 %116, 3
  %118 = icmp ult i64 %117, 1152921504606846975
  br i1 %118, label %119, label %127

119:                                              ; preds = %115
  %120 = ashr exact i64 %116, 2
  %121 = icmp ult i64 %120, %111
  %122 = select i1 %121, i64 %111, i64 %120
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %132, label %124

124:                                              ; preds = %119
  %125 = icmp ugt i64 %122, 2305843009213693951
  br i1 %125, label %126, label %127

126:                                              ; preds = %124
  call void @abort() #12
  unreachable

127:                                              ; preds = %124, %115
  %128 = phi i64 [ %122, %124 ], [ 2305843009213693951, %115 ]
  %129 = shl i64 %128, 3
  %130 = call i8* @_Znwm(i64 %129) #11
  %131 = bitcast i8* %130 to float**
  br label %132

132:                                              ; preds = %127, %119
  %133 = phi i64 [ %128, %127 ], [ 0, %119 ]
  %134 = phi float** [ %131, %127 ], [ null, %119 ]
  %135 = getelementptr inbounds float*, float** %134, i64 %110
  %136 = getelementptr inbounds float*, float** %134, i64 %133
  %137 = ptrtoint float** %136 to i64
  %138 = bitcast float** %135 to i64*
  store i64 %97, i64* %138, align 8
  %139 = getelementptr inbounds float*, float** %135, i64 1
  %140 = ptrtoint float** %139 to i64
  %141 = load float**, float*** %64, align 8
  %142 = load i64, i64* %63, align 8
  %143 = ptrtoint float** %141 to i64
  %144 = sub i64 %142, %143
  %145 = ashr exact i64 %144, 3
  %146 = sub nsw i64 0, %145
  %147 = getelementptr inbounds float*, float** %135, i64 %146
  %148 = ptrtoint float** %147 to i64
  %149 = icmp sgt i64 %144, 0
  br i1 %149, label %150, label %154

150:                                              ; preds = %132
  %151 = bitcast float** %147 to i8*
  %152 = bitcast float** %141 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %152, i64 %144, i1 false) #10
  %153 = load float**, float*** %64, align 8
  br label %154

154:                                              ; preds = %150, %132
  %155 = phi float** [ %141, %132 ], [ %153, %150 ]
  store i64 %148, i64* %13, align 8
  store i64 %140, i64* %63, align 8
  store i64 %137, i64* %12, align 8
  %156 = icmp eq float** %155, null
  br i1 %156, label %159, label %157

157:                                              ; preds = %154
  %158 = bitcast float** %155 to i8*
  call void @_ZdlPv(i8* %158) #11
  br label %159

159:                                              ; preds = %102, %154, %157
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %65) #10
  br i1 %90, label %160, label %161

160:                                              ; preds = %159
  store i32 0, i32* %66, align 8, !alias.scope !81
  br label %177

161:                                              ; preds = %159
  %162 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88, i32 2
  %163 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %162, align 8, !noalias !81
  %164 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 0
  %165 = load i32, i32* %164, align 4, !noalias !81
  %166 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 1, i64 0
  store i32 %165, i32* %66, align 8, !alias.scope !81
  %167 = icmp sgt i32 %165, 5
  %168 = sext i32 %165 to i64
  %169 = shl nsw i64 %168, 2
  br i1 %167, label %170, label %173

170:                                              ; preds = %161
  %171 = call i8* @_Znam(i64 %169) #11, !noalias !81
  store i8* %171, i8** %70, align 8, !alias.scope !81
  %172 = bitcast i8* %171 to i32*
  br label %173

173:                                              ; preds = %161, %170
  %174 = phi i32* [ %172, %170 ], [ %68, %161 ]
  %175 = bitcast i32* %174 to i8*
  %176 = bitcast i32* %166 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %175, i8* align 4 %176, i64 %169, i1 false) #10
  br label %177

177:                                              ; preds = %160, %173
  %178 = phi i32 [ 0, %160 ], [ %165, %173 ]
  %179 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %71, align 8
  %180 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %72, align 8
  %181 = icmp ult %"class.tflite::RuntimeShape"* %179, %180
  br i1 %181, label %182, label %208

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 0
  store i32 %178, i32* %183, align 8
  %184 = icmp sgt i32 %178, 5
  br i1 %184, label %185, label %192

185:                                              ; preds = %182
  %186 = sext i32 %178 to i64
  %187 = shl nsw i64 %186, 2
  %188 = call i8* @_Znam(i64 %187) #11
  %189 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 1, i32 0
  %190 = bitcast i32** %189 to i8**
  store i8* %188, i8** %190, align 8
  %191 = bitcast i8* %188 to i32*
  br label %197

192:                                              ; preds = %182
  %193 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 1
  %194 = bitcast %union.anon* %193 to i32*
  %195 = sext i32 %178 to i64
  %196 = shl nsw i64 %195, 2
  br label %197

197:                                              ; preds = %192, %185
  %198 = phi i64 [ %187, %185 ], [ %196, %192 ]
  %199 = phi i32* [ %191, %185 ], [ %194, %192 ]
  %200 = bitcast i32* %199 to i8*
  %201 = load i32, i32* %66, align 8
  %202 = icmp sgt i32 %201, 5
  %203 = load i32*, i32** %73, align 8
  %204 = select i1 %202, i32* %203, i32* %68
  %205 = bitcast i32* %204 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %200, i8* align 4 %205, i64 %198, i1 false) #10
  %206 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 1
  %207 = ptrtoint %"class.tflite::RuntimeShape"* %206 to i64
  store i64 %207, i64* %74, align 8
  br label %210

208:                                              ; preds = %177
  call void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.2"* %5, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4) #10
  %209 = load i32, i32* %66, align 8
  br label %210

210:                                              ; preds = %197, %208
  %211 = phi i32 [ %201, %197 ], [ %209, %208 ]
  %212 = icmp sgt i32 %211, 5
  br i1 %212, label %213, label %218

213:                                              ; preds = %210
  %214 = load i32*, i32** %69, align 8
  %215 = icmp eq i32* %214, null
  br i1 %215, label %218, label %216

216:                                              ; preds = %213
  %217 = bitcast i32* %214 to i8*
  call void @_ZdaPv(i8* %217) #11
  br label %218

218:                                              ; preds = %210, %213, %216
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %65) #10
  %219 = add nuw nsw i64 %84, 1
  %220 = icmp eq i64 %219, %75
  br i1 %220, label %76, label %83

221:                                              ; preds = %288, %58, %76
  ret void

222:                                              ; preds = %288, %77
  %223 = phi i64 [ 0, %77 ], [ %289, %288 ]
  %224 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %78, align 8
  %225 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %224, i64 %223
  %226 = ptrtoint %"class.tflite::RuntimeShape"* %225 to i64
  %227 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %79, align 8
  %228 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %29, align 8
  %229 = icmp ult %"class.tflite::RuntimeShape"** %227, %228
  %230 = ptrtoint %"class.tflite::RuntimeShape"** %228 to i64
  br i1 %229, label %231, label %235

231:                                              ; preds = %222
  %232 = bitcast %"class.tflite::RuntimeShape"** %227 to i64*
  store i64 %226, i64* %232, align 8
  %233 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %227, i64 1
  %234 = ptrtoint %"class.tflite::RuntimeShape"** %233 to i64
  store i64 %234, i64* %80, align 8
  br label %288

235:                                              ; preds = %222
  %236 = ptrtoint %"class.tflite::RuntimeShape"** %227 to i64
  %237 = load i64, i64* %32, align 8
  %238 = sub i64 %236, %237
  %239 = ashr exact i64 %238, 3
  %240 = add nsw i64 %239, 1
  %241 = icmp ugt i64 %240, 2305843009213693951
  br i1 %241, label %242, label %244

242:                                              ; preds = %235
  %243 = bitcast %"class.std::__1::vector.9"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %243) #12
  unreachable

244:                                              ; preds = %235
  %245 = sub i64 %230, %237
  %246 = ashr exact i64 %245, 3
  %247 = icmp ult i64 %246, 1152921504606846975
  br i1 %247, label %248, label %256

248:                                              ; preds = %244
  %249 = ashr exact i64 %245, 2
  %250 = icmp ult i64 %249, %240
  %251 = select i1 %250, i64 %240, i64 %249
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %261, label %253

253:                                              ; preds = %248
  %254 = icmp ugt i64 %251, 2305843009213693951
  br i1 %254, label %255, label %256

255:                                              ; preds = %253
  call void @abort() #12
  unreachable

256:                                              ; preds = %253, %244
  %257 = phi i64 [ %251, %253 ], [ 2305843009213693951, %244 ]
  %258 = shl i64 %257, 3
  %259 = call i8* @_Znwm(i64 %258) #11
  %260 = bitcast i8* %259 to %"class.tflite::RuntimeShape"**
  br label %261

261:                                              ; preds = %256, %248
  %262 = phi i64 [ %257, %256 ], [ 0, %248 ]
  %263 = phi %"class.tflite::RuntimeShape"** [ %260, %256 ], [ null, %248 ]
  %264 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %263, i64 %239
  %265 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %263, i64 %262
  %266 = ptrtoint %"class.tflite::RuntimeShape"** %265 to i64
  %267 = bitcast %"class.tflite::RuntimeShape"** %264 to i64*
  store i64 %226, i64* %267, align 8
  %268 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %264, i64 1
  %269 = ptrtoint %"class.tflite::RuntimeShape"** %268 to i64
  %270 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %81, align 8
  %271 = load i64, i64* %80, align 8
  %272 = ptrtoint %"class.tflite::RuntimeShape"** %270 to i64
  %273 = sub i64 %271, %272
  %274 = ashr exact i64 %273, 3
  %275 = sub nsw i64 0, %274
  %276 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %264, i64 %275
  %277 = ptrtoint %"class.tflite::RuntimeShape"** %276 to i64
  %278 = icmp sgt i64 %273, 0
  br i1 %278, label %279, label %283

279:                                              ; preds = %261
  %280 = bitcast %"class.tflite::RuntimeShape"** %276 to i8*
  %281 = bitcast %"class.tflite::RuntimeShape"** %270 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %280, i8* align 8 %281, i64 %273, i1 false) #10
  %282 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %81, align 8
  br label %283

283:                                              ; preds = %279, %261
  %284 = phi %"class.tflite::RuntimeShape"** [ %270, %261 ], [ %282, %279 ]
  store i64 %277, i64* %32, align 8
  store i64 %269, i64* %80, align 8
  store i64 %266, i64* %30, align 8
  %285 = icmp eq %"class.tflite::RuntimeShape"** %284, null
  br i1 %285, label %288, label %286

286:                                              ; preds = %283
  %287 = bitcast %"class.tflite::RuntimeShape"** %284 to i8*
  call void @_ZdlPv(i8* %287) #11
  br label %288

288:                                              ; preds = %231, %283, %286
  %289 = add nuw nsw i64 %223, 1
  %290 = icmp eq i64 %289, %82
  br i1 %290, label %221, label %222
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite15VectorOfTensorsIiEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors.32"*, %struct.TfLiteContext* dereferenceable(160), %struct.TfLiteIntArray* dereferenceable(4)) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = getelementptr inbounds %"class.tflite::VectorOfTensors.32", %"class.tflite::VectorOfTensors.32"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.tflite::VectorOfTensors.32", %"class.tflite::VectorOfTensors.32"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2, i64 0, i32 0
  %8 = bitcast %"class.tflite::VectorOfTensors.32"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 72, i1 false)
  %9 = load i32, i32* %7, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %"class.tflite::VectorOfTensors.32", %"class.tflite::VectorOfTensors.32"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %12 = bitcast i32*** %11 to i64*
  %13 = bitcast %"class.tflite::VectorOfTensors.32"* %0 to i64*
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %3
  %16 = icmp slt i32 %9, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %15
  tail call void @abort() #12
  unreachable

18:                                               ; preds = %15
  %19 = shl nsw i64 %10, 3
  %20 = tail call i8* @_Znwm(i64 %19) #11
  %21 = bitcast i8* %20 to i32**
  %22 = getelementptr inbounds i32*, i32** %21, i64 %10
  %23 = ptrtoint i32** %22 to i64
  %24 = insertelement <2 x i8*> undef, i8* %20, i32 0
  %25 = shufflevector <2 x i8*> %24, <2 x i8*> undef, <2 x i32> zeroinitializer
  %26 = ptrtoint <2 x i8*> %25 to <2 x i64>
  %27 = bitcast %"class.tflite::VectorOfTensors.32"* %0 to <2 x i64>*
  store <2 x i64> %26, <2 x i64>* %27, align 8
  store i64 %23, i64* %12, align 8
  br label %28

28:                                               ; preds = %18, %3
  tail call void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.2"* %5, i64 %10)
  %29 = getelementptr inbounds %"class.tflite::VectorOfTensors.32", %"class.tflite::VectorOfTensors.32"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast %"class.tflite::RuntimeShape"*** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector.9"* %6 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %31, %33
  %35 = ashr exact i64 %34, 3
  %36 = icmp ult i64 %35, %10
  br i1 %36, label %37, label %58

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.tflite::VectorOfTensors.32", %"class.tflite::VectorOfTensors.32"* %0, i64 0, i32 2, i32 0, i32 1
  %39 = bitcast %"class.tflite::RuntimeShape"*** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %40, %33
  %42 = ashr exact i64 %41, 3
  %43 = shl nsw i64 %10, 3
  %44 = tail call i8* @_Znwm(i64 %43) #11
  %45 = bitcast i8* %44 to %"class.tflite::RuntimeShape"**
  %46 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %45, i64 %42
  %47 = ptrtoint %"class.tflite::RuntimeShape"** %46 to i64
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %45, i64 %10
  %49 = ptrtoint %"class.tflite::RuntimeShape"** %48 to i64
  %50 = ptrtoint i8* %44 to i64
  %51 = icmp sgt i64 %41, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %37
  %53 = inttoptr i64 %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* align 8 %53, i64 %41, i1 false) #10
  br label %54

54:                                               ; preds = %52, %37
  store i64 %50, i64* %32, align 8
  store i64 %47, i64* %39, align 8
  store i64 %49, i64* %30, align 8
  %55 = icmp eq i64 %33, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = inttoptr i64 %33 to i8*
  tail call void @_ZdlPv(i8* %57) #11
  br label %58

58:                                               ; preds = %28, %54, %56
  %59 = icmp sgt i32 %9, 0
  br i1 %59, label %60, label %220

60:                                               ; preds = %58
  %61 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %1, i64 0, i32 2
  %62 = getelementptr inbounds %"class.tflite::VectorOfTensors.32", %"class.tflite::VectorOfTensors.32"* %0, i64 0, i32 0, i32 0, i32 1
  %63 = bitcast i32*** %62 to i64*
  %64 = getelementptr inbounds %"class.tflite::VectorOfTensors.32", %"class.tflite::VectorOfTensors.32"* %0, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  %66 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %67 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %68 = bitcast %union.anon* %67 to i32*
  %69 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %70 = bitcast i32** %69 to i8**
  %71 = getelementptr inbounds %"class.tflite::VectorOfTensors.32", %"class.tflite::VectorOfTensors.32"* %0, i64 0, i32 1, i32 0, i32 1
  %72 = getelementptr inbounds %"class.tflite::VectorOfTensors.32", %"class.tflite::VectorOfTensors.32"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %73 = getelementptr inbounds %union.anon, %union.anon* %67, i64 0, i32 0
  %74 = bitcast %"class.tflite::RuntimeShape"** %71 to i64*
  %75 = zext i32 %9 to i64
  br label %83

76:                                               ; preds = %217
  br i1 %59, label %77, label %220

77:                                               ; preds = %76
  %78 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %5, i64 0, i32 0, i32 0
  %79 = getelementptr inbounds %"class.tflite::VectorOfTensors.32", %"class.tflite::VectorOfTensors.32"* %0, i64 0, i32 2, i32 0, i32 1
  %80 = bitcast %"class.tflite::RuntimeShape"*** %79 to i64*
  %81 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %6, i64 0, i32 0, i32 0
  %82 = zext i32 %9 to i64
  br label %221

83:                                               ; preds = %217, %60
  %84 = phi i64 [ 0, %60 ], [ %218, %217 ]
  %85 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %61, align 8
  %86 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2, i64 0, i32 1, i64 %84
  %87 = load i32, i32* %86, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88
  %90 = icmp eq %struct.TfLiteTensor* %89, null
  br i1 %90, label %94, label %91

91:                                               ; preds = %83
  %92 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88, i32 1, i32 0
  %93 = load i32*, i32** %92, align 8
  br label %94

94:                                               ; preds = %83, %91
  %95 = phi i32* [ %93, %91 ], [ null, %83 ]
  %96 = ptrtoint i32* %95 to i64
  %97 = load i32**, i32*** %62, align 8
  %98 = load i32**, i32*** %11, align 8
  %99 = icmp ult i32** %97, %98
  %100 = ptrtoint i32** %98 to i64
  br i1 %99, label %101, label %105

101:                                              ; preds = %94
  %102 = bitcast i32** %97 to i64*
  store i64 %96, i64* %102, align 8
  %103 = getelementptr inbounds i32*, i32** %97, i64 1
  %104 = ptrtoint i32** %103 to i64
  store i64 %104, i64* %63, align 8
  br label %158

105:                                              ; preds = %94
  %106 = ptrtoint i32** %97 to i64
  %107 = load i64, i64* %13, align 8
  %108 = sub i64 %106, %107
  %109 = ashr exact i64 %108, 3
  %110 = add nsw i64 %109, 1
  %111 = icmp ugt i64 %110, 2305843009213693951
  br i1 %111, label %112, label %114

112:                                              ; preds = %105
  %113 = bitcast %"class.tflite::VectorOfTensors.32"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %113) #12
  unreachable

114:                                              ; preds = %105
  %115 = sub i64 %100, %107
  %116 = ashr exact i64 %115, 3
  %117 = icmp ult i64 %116, 1152921504606846975
  br i1 %117, label %118, label %126

118:                                              ; preds = %114
  %119 = ashr exact i64 %115, 2
  %120 = icmp ult i64 %119, %110
  %121 = select i1 %120, i64 %110, i64 %119
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %131, label %123

123:                                              ; preds = %118
  %124 = icmp ugt i64 %121, 2305843009213693951
  br i1 %124, label %125, label %126

125:                                              ; preds = %123
  call void @abort() #12
  unreachable

126:                                              ; preds = %123, %114
  %127 = phi i64 [ %121, %123 ], [ 2305843009213693951, %114 ]
  %128 = shl i64 %127, 3
  %129 = call i8* @_Znwm(i64 %128) #11
  %130 = bitcast i8* %129 to i32**
  br label %131

131:                                              ; preds = %126, %118
  %132 = phi i64 [ %127, %126 ], [ 0, %118 ]
  %133 = phi i32** [ %130, %126 ], [ null, %118 ]
  %134 = getelementptr inbounds i32*, i32** %133, i64 %109
  %135 = getelementptr inbounds i32*, i32** %133, i64 %132
  %136 = ptrtoint i32** %135 to i64
  %137 = bitcast i32** %134 to i64*
  store i64 %96, i64* %137, align 8
  %138 = getelementptr inbounds i32*, i32** %134, i64 1
  %139 = ptrtoint i32** %138 to i64
  %140 = load i32**, i32*** %64, align 8
  %141 = load i64, i64* %63, align 8
  %142 = ptrtoint i32** %140 to i64
  %143 = sub i64 %141, %142
  %144 = ashr exact i64 %143, 3
  %145 = sub nsw i64 0, %144
  %146 = getelementptr inbounds i32*, i32** %134, i64 %145
  %147 = ptrtoint i32** %146 to i64
  %148 = icmp sgt i64 %143, 0
  br i1 %148, label %149, label %153

149:                                              ; preds = %131
  %150 = bitcast i32** %146 to i8*
  %151 = bitcast i32** %140 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %150, i8* align 8 %151, i64 %143, i1 false) #10
  %152 = load i32**, i32*** %64, align 8
  br label %153

153:                                              ; preds = %149, %131
  %154 = phi i32** [ %140, %131 ], [ %152, %149 ]
  store i64 %147, i64* %13, align 8
  store i64 %139, i64* %63, align 8
  store i64 %136, i64* %12, align 8
  %155 = icmp eq i32** %154, null
  br i1 %155, label %158, label %156

156:                                              ; preds = %153
  %157 = bitcast i32** %154 to i8*
  call void @_ZdlPv(i8* %157) #11
  br label %158

158:                                              ; preds = %101, %153, %156
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %65) #10
  br i1 %90, label %159, label %160

159:                                              ; preds = %158
  store i32 0, i32* %66, align 8, !alias.scope !84
  br label %176

160:                                              ; preds = %158
  %161 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88, i32 2
  %162 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %161, align 8, !noalias !84
  %163 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %162, i64 0, i32 0
  %164 = load i32, i32* %163, align 4, !noalias !84
  %165 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %162, i64 0, i32 1, i64 0
  store i32 %164, i32* %66, align 8, !alias.scope !84
  %166 = icmp sgt i32 %164, 5
  %167 = sext i32 %164 to i64
  %168 = shl nsw i64 %167, 2
  br i1 %166, label %169, label %172

169:                                              ; preds = %160
  %170 = call i8* @_Znam(i64 %168) #11, !noalias !84
  store i8* %170, i8** %70, align 8, !alias.scope !84
  %171 = bitcast i8* %170 to i32*
  br label %172

172:                                              ; preds = %160, %169
  %173 = phi i32* [ %171, %169 ], [ %68, %160 ]
  %174 = bitcast i32* %173 to i8*
  %175 = bitcast i32* %165 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %174, i8* align 4 %175, i64 %168, i1 false) #10
  br label %176

176:                                              ; preds = %159, %172
  %177 = phi i32 [ 0, %159 ], [ %164, %172 ]
  %178 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %71, align 8
  %179 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %72, align 8
  %180 = icmp ult %"class.tflite::RuntimeShape"* %178, %179
  br i1 %180, label %181, label %207

181:                                              ; preds = %176
  %182 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %178, i64 0, i32 0
  store i32 %177, i32* %182, align 8
  %183 = icmp sgt i32 %177, 5
  br i1 %183, label %184, label %191

184:                                              ; preds = %181
  %185 = sext i32 %177 to i64
  %186 = shl nsw i64 %185, 2
  %187 = call i8* @_Znam(i64 %186) #11
  %188 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %178, i64 0, i32 1, i32 0
  %189 = bitcast i32** %188 to i8**
  store i8* %187, i8** %189, align 8
  %190 = bitcast i8* %187 to i32*
  br label %196

191:                                              ; preds = %181
  %192 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %178, i64 0, i32 1
  %193 = bitcast %union.anon* %192 to i32*
  %194 = sext i32 %177 to i64
  %195 = shl nsw i64 %194, 2
  br label %196

196:                                              ; preds = %191, %184
  %197 = phi i64 [ %186, %184 ], [ %195, %191 ]
  %198 = phi i32* [ %190, %184 ], [ %193, %191 ]
  %199 = bitcast i32* %198 to i8*
  %200 = load i32, i32* %66, align 8
  %201 = icmp sgt i32 %200, 5
  %202 = load i32*, i32** %73, align 8
  %203 = select i1 %201, i32* %202, i32* %68
  %204 = bitcast i32* %203 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %199, i8* align 4 %204, i64 %197, i1 false) #10
  %205 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %178, i64 1
  %206 = ptrtoint %"class.tflite::RuntimeShape"* %205 to i64
  store i64 %206, i64* %74, align 8
  br label %209

207:                                              ; preds = %176
  call void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.2"* %5, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4) #10
  %208 = load i32, i32* %66, align 8
  br label %209

209:                                              ; preds = %196, %207
  %210 = phi i32 [ %200, %196 ], [ %208, %207 ]
  %211 = icmp sgt i32 %210, 5
  br i1 %211, label %212, label %217

212:                                              ; preds = %209
  %213 = load i32*, i32** %69, align 8
  %214 = icmp eq i32* %213, null
  br i1 %214, label %217, label %215

215:                                              ; preds = %212
  %216 = bitcast i32* %213 to i8*
  call void @_ZdaPv(i8* %216) #11
  br label %217

217:                                              ; preds = %209, %212, %215
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %65) #10
  %218 = add nuw nsw i64 %84, 1
  %219 = icmp eq i64 %218, %75
  br i1 %219, label %76, label %83

220:                                              ; preds = %287, %58, %76
  ret void

221:                                              ; preds = %287, %77
  %222 = phi i64 [ 0, %77 ], [ %288, %287 ]
  %223 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %78, align 8
  %224 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %223, i64 %222
  %225 = ptrtoint %"class.tflite::RuntimeShape"* %224 to i64
  %226 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %79, align 8
  %227 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %29, align 8
  %228 = icmp ult %"class.tflite::RuntimeShape"** %226, %227
  %229 = ptrtoint %"class.tflite::RuntimeShape"** %227 to i64
  br i1 %228, label %230, label %234

230:                                              ; preds = %221
  %231 = bitcast %"class.tflite::RuntimeShape"** %226 to i64*
  store i64 %225, i64* %231, align 8
  %232 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %226, i64 1
  %233 = ptrtoint %"class.tflite::RuntimeShape"** %232 to i64
  store i64 %233, i64* %80, align 8
  br label %287

234:                                              ; preds = %221
  %235 = ptrtoint %"class.tflite::RuntimeShape"** %226 to i64
  %236 = load i64, i64* %32, align 8
  %237 = sub i64 %235, %236
  %238 = ashr exact i64 %237, 3
  %239 = add nsw i64 %238, 1
  %240 = icmp ugt i64 %239, 2305843009213693951
  br i1 %240, label %241, label %243

241:                                              ; preds = %234
  %242 = bitcast %"class.std::__1::vector.9"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %242) #12
  unreachable

243:                                              ; preds = %234
  %244 = sub i64 %229, %236
  %245 = ashr exact i64 %244, 3
  %246 = icmp ult i64 %245, 1152921504606846975
  br i1 %246, label %247, label %255

247:                                              ; preds = %243
  %248 = ashr exact i64 %244, 2
  %249 = icmp ult i64 %248, %239
  %250 = select i1 %249, i64 %239, i64 %248
  %251 = icmp eq i64 %250, 0
  br i1 %251, label %260, label %252

252:                                              ; preds = %247
  %253 = icmp ugt i64 %250, 2305843009213693951
  br i1 %253, label %254, label %255

254:                                              ; preds = %252
  call void @abort() #12
  unreachable

255:                                              ; preds = %252, %243
  %256 = phi i64 [ %250, %252 ], [ 2305843009213693951, %243 ]
  %257 = shl i64 %256, 3
  %258 = call i8* @_Znwm(i64 %257) #11
  %259 = bitcast i8* %258 to %"class.tflite::RuntimeShape"**
  br label %260

260:                                              ; preds = %255, %247
  %261 = phi i64 [ %256, %255 ], [ 0, %247 ]
  %262 = phi %"class.tflite::RuntimeShape"** [ %259, %255 ], [ null, %247 ]
  %263 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %262, i64 %238
  %264 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %262, i64 %261
  %265 = ptrtoint %"class.tflite::RuntimeShape"** %264 to i64
  %266 = bitcast %"class.tflite::RuntimeShape"** %263 to i64*
  store i64 %225, i64* %266, align 8
  %267 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %263, i64 1
  %268 = ptrtoint %"class.tflite::RuntimeShape"** %267 to i64
  %269 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %81, align 8
  %270 = load i64, i64* %80, align 8
  %271 = ptrtoint %"class.tflite::RuntimeShape"** %269 to i64
  %272 = sub i64 %270, %271
  %273 = ashr exact i64 %272, 3
  %274 = sub nsw i64 0, %273
  %275 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %263, i64 %274
  %276 = ptrtoint %"class.tflite::RuntimeShape"** %275 to i64
  %277 = icmp sgt i64 %272, 0
  br i1 %277, label %278, label %282

278:                                              ; preds = %260
  %279 = bitcast %"class.tflite::RuntimeShape"** %275 to i8*
  %280 = bitcast %"class.tflite::RuntimeShape"** %269 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %279, i8* align 8 %280, i64 %272, i1 false) #10
  %281 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %81, align 8
  br label %282

282:                                              ; preds = %278, %260
  %283 = phi %"class.tflite::RuntimeShape"** [ %269, %260 ], [ %281, %278 ]
  store i64 %276, i64* %32, align 8
  store i64 %268, i64* %80, align 8
  store i64 %265, i64* %30, align 8
  %284 = icmp eq %"class.tflite::RuntimeShape"** %283, null
  br i1 %284, label %287, label %285

285:                                              ; preds = %282
  %286 = bitcast %"class.tflite::RuntimeShape"** %283 to i8*
  call void @_ZdlPv(i8* %286) #11
  br label %287

287:                                              ; preds = %230, %282, %285
  %288 = add nuw nsw i64 %222, 1
  %289 = icmp eq i64 %288, %82
  br i1 %289, label %220, label %221
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite24VectorOfQuantizedTensorsC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfQuantizedTensors"*, %struct.TfLiteContext* dereferenceable(160), %struct.TfLiteIntArray* dereferenceable(4)) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.tflite::VectorOfQuantizedTensors", %"class.tflite::VectorOfQuantizedTensors"* %0, i64 0, i32 0
  tail call void @_ZN6tflite15VectorOfTensorsIhEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors.40"* %4, %struct.TfLiteContext* dereferenceable(160) %1, %struct.TfLiteIntArray* dereferenceable(4) %2)
  %5 = getelementptr inbounds %"class.tflite::VectorOfQuantizedTensors", %"class.tflite::VectorOfQuantizedTensors"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.tflite::VectorOfQuantizedTensors", %"class.tflite::VectorOfQuantizedTensors"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2, i64 0, i32 0
  %8 = bitcast %"class.std::__1::vector.48"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 48, i1 false)
  %9 = load i32, i32* %7, align 4
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %25

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %1, i64 0, i32 2
  %13 = getelementptr inbounds %"class.tflite::VectorOfQuantizedTensors", %"class.tflite::VectorOfQuantizedTensors"* %0, i64 0, i32 1, i32 0, i32 1
  %14 = getelementptr inbounds %"class.tflite::VectorOfQuantizedTensors", %"class.tflite::VectorOfQuantizedTensors"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast i32** %13 to i64*
  %16 = bitcast %"class.std::__1::vector.48"* %5 to i64*
  %17 = bitcast i32** %14 to i64*
  %18 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %5, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.tflite::VectorOfQuantizedTensors", %"class.tflite::VectorOfQuantizedTensors"* %0, i64 0, i32 2, i32 0, i32 1
  %20 = getelementptr inbounds %"class.tflite::VectorOfQuantizedTensors", %"class.tflite::VectorOfQuantizedTensors"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %21 = bitcast float** %19 to i64*
  %22 = bitcast %"class.std::__1::vector.55"* %6 to i64*
  %23 = bitcast float** %20 to i64*
  %24 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %6, i64 0, i32 0, i32 0
  br label %26

25:                                               ; preds = %158, %3
  ret void

26:                                               ; preds = %163, %11
  %27 = phi i32* [ null, %11 ], [ %165, %163 ]
  %28 = phi i32* [ null, %11 ], [ %164, %163 ]
  %29 = phi i64 [ 0, %11 ], [ %159, %163 ]
  %30 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %12, align 8
  %31 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2, i64 0, i32 1, i64 %29
  %32 = load i32, i32* %31, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 %33, i32 3, i32 1
  %35 = icmp eq i32* %28, %27
  br i1 %35, label %40, label %36

36:                                               ; preds = %26
  %37 = load i32, i32* %34, align 4
  store i32 %37, i32* %28, align 4
  %38 = getelementptr inbounds i32, i32* %28, i64 1
  %39 = ptrtoint i32* %38 to i64
  store i64 %39, i64* %15, align 8
  br label %91

40:                                               ; preds = %26
  %41 = ptrtoint i32* %27 to i64
  %42 = load i64, i64* %16, align 8
  %43 = sub i64 %41, %42
  %44 = ashr exact i64 %43, 2
  %45 = add nsw i64 %44, 1
  %46 = icmp ugt i64 %45, 4611686018427387903
  br i1 %46, label %47, label %49

47:                                               ; preds = %40
  %48 = bitcast %"class.std::__1::vector.48"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %48) #12
  unreachable

49:                                               ; preds = %40
  %50 = icmp ult i64 %44, 2305843009213693951
  br i1 %50, label %51, label %59

51:                                               ; preds = %49
  %52 = ashr exact i64 %43, 1
  %53 = icmp ult i64 %52, %45
  %54 = select i1 %53, i64 %45, i64 %52
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %64, label %56

56:                                               ; preds = %51
  %57 = icmp ugt i64 %54, 4611686018427387903
  br i1 %57, label %58, label %59

58:                                               ; preds = %56
  tail call void @abort() #12
  unreachable

59:                                               ; preds = %56, %49
  %60 = phi i64 [ %54, %56 ], [ 4611686018427387903, %49 ]
  %61 = shl i64 %60, 2
  %62 = tail call i8* @_Znwm(i64 %61) #11
  %63 = bitcast i8* %62 to i32*
  br label %64

64:                                               ; preds = %59, %51
  %65 = phi i64 [ %60, %59 ], [ 0, %51 ]
  %66 = phi i32* [ %63, %59 ], [ null, %51 ]
  %67 = getelementptr inbounds i32, i32* %66, i64 %44
  %68 = getelementptr inbounds i32, i32* %66, i64 %65
  %69 = ptrtoint i32* %68 to i64
  %70 = load i32, i32* %34, align 4
  store i32 %70, i32* %67, align 4
  %71 = getelementptr inbounds i32, i32* %67, i64 1
  %72 = ptrtoint i32* %71 to i64
  %73 = load i32*, i32** %18, align 8
  %74 = load i64, i64* %15, align 8
  %75 = ptrtoint i32* %73 to i64
  %76 = sub i64 %74, %75
  %77 = ashr exact i64 %76, 2
  %78 = sub nsw i64 0, %77
  %79 = getelementptr inbounds i32, i32* %67, i64 %78
  %80 = ptrtoint i32* %79 to i64
  %81 = icmp sgt i64 %76, 0
  br i1 %81, label %82, label %86

82:                                               ; preds = %64
  %83 = bitcast i32* %79 to i8*
  %84 = bitcast i32* %73 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %83, i8* align 4 %84, i64 %76, i1 false) #10
  %85 = load i32*, i32** %18, align 8
  br label %86

86:                                               ; preds = %82, %64
  %87 = phi i32* [ %73, %64 ], [ %85, %82 ]
  store i64 %80, i64* %16, align 8
  store i64 %72, i64* %15, align 8
  store i64 %69, i64* %17, align 8
  %88 = icmp eq i32* %87, null
  br i1 %88, label %91, label %89

89:                                               ; preds = %86
  %90 = bitcast i32* %87 to i8*
  tail call void @_ZdlPv(i8* %90) #11
  br label %91

91:                                               ; preds = %36, %86, %89
  %92 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 %33, i32 3, i32 0
  %93 = load float*, float** %19, align 8
  %94 = load float*, float** %20, align 8
  %95 = icmp eq float* %93, %94
  %96 = ptrtoint float* %94 to i64
  br i1 %95, label %103, label %97

97:                                               ; preds = %91
  %98 = bitcast float* %92 to i32*
  %99 = load i32, i32* %98, align 4
  %100 = bitcast float* %93 to i32*
  store i32 %99, i32* %100, align 4
  %101 = getelementptr inbounds float, float* %93, i64 1
  %102 = ptrtoint float* %101 to i64
  store i64 %102, i64* %21, align 8
  br label %158

103:                                              ; preds = %91
  %104 = ptrtoint float* %93 to i64
  %105 = load i64, i64* %22, align 8
  %106 = sub i64 %104, %105
  %107 = ashr exact i64 %106, 2
  %108 = add nsw i64 %107, 1
  %109 = icmp ugt i64 %108, 4611686018427387903
  br i1 %109, label %110, label %112

110:                                              ; preds = %103
  %111 = bitcast %"class.std::__1::vector.55"* %6 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %111) #12
  unreachable

112:                                              ; preds = %103
  %113 = sub i64 %96, %105
  %114 = ashr exact i64 %113, 2
  %115 = icmp ult i64 %114, 2305843009213693951
  br i1 %115, label %116, label %124

116:                                              ; preds = %112
  %117 = ashr exact i64 %113, 1
  %118 = icmp ult i64 %117, %108
  %119 = select i1 %118, i64 %108, i64 %117
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %129, label %121

121:                                              ; preds = %116
  %122 = icmp ugt i64 %119, 4611686018427387903
  br i1 %122, label %123, label %124

123:                                              ; preds = %121
  tail call void @abort() #12
  unreachable

124:                                              ; preds = %121, %112
  %125 = phi i64 [ %119, %121 ], [ 4611686018427387903, %112 ]
  %126 = shl i64 %125, 2
  %127 = tail call i8* @_Znwm(i64 %126) #11
  %128 = bitcast i8* %127 to float*
  br label %129

129:                                              ; preds = %124, %116
  %130 = phi i64 [ %125, %124 ], [ 0, %116 ]
  %131 = phi float* [ %128, %124 ], [ null, %116 ]
  %132 = getelementptr inbounds float, float* %131, i64 %107
  %133 = getelementptr inbounds float, float* %131, i64 %130
  %134 = ptrtoint float* %133 to i64
  %135 = bitcast float* %92 to i32*
  %136 = load i32, i32* %135, align 4
  %137 = bitcast float* %132 to i32*
  store i32 %136, i32* %137, align 4
  %138 = getelementptr inbounds float, float* %132, i64 1
  %139 = ptrtoint float* %138 to i64
  %140 = load float*, float** %24, align 8
  %141 = load i64, i64* %21, align 8
  %142 = ptrtoint float* %140 to i64
  %143 = sub i64 %141, %142
  %144 = ashr exact i64 %143, 2
  %145 = sub nsw i64 0, %144
  %146 = getelementptr inbounds float, float* %132, i64 %145
  %147 = ptrtoint float* %146 to i64
  %148 = icmp sgt i64 %143, 0
  br i1 %148, label %149, label %153

149:                                              ; preds = %129
  %150 = bitcast float* %146 to i8*
  %151 = bitcast float* %140 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %150, i8* align 4 %151, i64 %143, i1 false) #10
  %152 = load float*, float** %24, align 8
  br label %153

153:                                              ; preds = %149, %129
  %154 = phi float* [ %140, %129 ], [ %152, %149 ]
  store i64 %147, i64* %22, align 8
  store i64 %139, i64* %21, align 8
  store i64 %134, i64* %23, align 8
  %155 = icmp eq float* %154, null
  br i1 %155, label %158, label %156

156:                                              ; preds = %153
  %157 = bitcast float* %154 to i8*
  tail call void @_ZdlPv(i8* %157) #11
  br label %158

158:                                              ; preds = %97, %153, %156
  %159 = add nuw nsw i64 %29, 1
  %160 = load i32, i32* %7, align 4
  %161 = sext i32 %160 to i64
  %162 = icmp slt i64 %159, %161
  br i1 %162, label %163, label %25

163:                                              ; preds = %158
  %164 = load i32*, i32** %13, align 8
  %165 = load i32*, i32** %14, align 8
  br label %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite15VectorOfTensorsIlEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors.62"*, %struct.TfLiteContext* dereferenceable(160), %struct.TfLiteIntArray* dereferenceable(4)) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = getelementptr inbounds %"class.tflite::VectorOfTensors.62", %"class.tflite::VectorOfTensors.62"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.tflite::VectorOfTensors.62", %"class.tflite::VectorOfTensors.62"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2, i64 0, i32 0
  %8 = bitcast %"class.tflite::VectorOfTensors.62"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 72, i1 false)
  %9 = load i32, i32* %7, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %"class.tflite::VectorOfTensors.62", %"class.tflite::VectorOfTensors.62"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %12 = bitcast i64*** %11 to i64*
  %13 = bitcast %"class.tflite::VectorOfTensors.62"* %0 to i64*
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %3
  %16 = icmp slt i32 %9, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %15
  tail call void @abort() #12
  unreachable

18:                                               ; preds = %15
  %19 = shl nsw i64 %10, 3
  %20 = tail call i8* @_Znwm(i64 %19) #11
  %21 = bitcast i8* %20 to i64**
  %22 = getelementptr inbounds i64*, i64** %21, i64 %10
  %23 = ptrtoint i64** %22 to i64
  %24 = insertelement <2 x i8*> undef, i8* %20, i32 0
  %25 = shufflevector <2 x i8*> %24, <2 x i8*> undef, <2 x i32> zeroinitializer
  %26 = ptrtoint <2 x i8*> %25 to <2 x i64>
  %27 = bitcast %"class.tflite::VectorOfTensors.62"* %0 to <2 x i64>*
  store <2 x i64> %26, <2 x i64>* %27, align 8
  store i64 %23, i64* %12, align 8
  br label %28

28:                                               ; preds = %18, %3
  tail call void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.2"* %5, i64 %10)
  %29 = getelementptr inbounds %"class.tflite::VectorOfTensors.62", %"class.tflite::VectorOfTensors.62"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast %"class.tflite::RuntimeShape"*** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector.9"* %6 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %31, %33
  %35 = ashr exact i64 %34, 3
  %36 = icmp ult i64 %35, %10
  br i1 %36, label %37, label %58

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.tflite::VectorOfTensors.62", %"class.tflite::VectorOfTensors.62"* %0, i64 0, i32 2, i32 0, i32 1
  %39 = bitcast %"class.tflite::RuntimeShape"*** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %40, %33
  %42 = ashr exact i64 %41, 3
  %43 = shl nsw i64 %10, 3
  %44 = tail call i8* @_Znwm(i64 %43) #11
  %45 = bitcast i8* %44 to %"class.tflite::RuntimeShape"**
  %46 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %45, i64 %42
  %47 = ptrtoint %"class.tflite::RuntimeShape"** %46 to i64
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %45, i64 %10
  %49 = ptrtoint %"class.tflite::RuntimeShape"** %48 to i64
  %50 = ptrtoint i8* %44 to i64
  %51 = icmp sgt i64 %41, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %37
  %53 = inttoptr i64 %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* align 8 %53, i64 %41, i1 false) #10
  br label %54

54:                                               ; preds = %52, %37
  store i64 %50, i64* %32, align 8
  store i64 %47, i64* %39, align 8
  store i64 %49, i64* %30, align 8
  %55 = icmp eq i64 %33, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = inttoptr i64 %33 to i8*
  tail call void @_ZdlPv(i8* %57) #11
  br label %58

58:                                               ; preds = %28, %54, %56
  %59 = icmp sgt i32 %9, 0
  br i1 %59, label %60, label %221

60:                                               ; preds = %58
  %61 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %1, i64 0, i32 2
  %62 = getelementptr inbounds %"class.tflite::VectorOfTensors.62", %"class.tflite::VectorOfTensors.62"* %0, i64 0, i32 0, i32 0, i32 1
  %63 = bitcast i64*** %62 to i64*
  %64 = getelementptr inbounds %"class.tflite::VectorOfTensors.62", %"class.tflite::VectorOfTensors.62"* %0, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  %66 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %67 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %68 = bitcast %union.anon* %67 to i32*
  %69 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %70 = bitcast i32** %69 to i8**
  %71 = getelementptr inbounds %"class.tflite::VectorOfTensors.62", %"class.tflite::VectorOfTensors.62"* %0, i64 0, i32 1, i32 0, i32 1
  %72 = getelementptr inbounds %"class.tflite::VectorOfTensors.62", %"class.tflite::VectorOfTensors.62"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %73 = getelementptr inbounds %union.anon, %union.anon* %67, i64 0, i32 0
  %74 = bitcast %"class.tflite::RuntimeShape"** %71 to i64*
  %75 = zext i32 %9 to i64
  br label %83

76:                                               ; preds = %218
  br i1 %59, label %77, label %221

77:                                               ; preds = %76
  %78 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %5, i64 0, i32 0, i32 0
  %79 = getelementptr inbounds %"class.tflite::VectorOfTensors.62", %"class.tflite::VectorOfTensors.62"* %0, i64 0, i32 2, i32 0, i32 1
  %80 = bitcast %"class.tflite::RuntimeShape"*** %79 to i64*
  %81 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %6, i64 0, i32 0, i32 0
  %82 = zext i32 %9 to i64
  br label %222

83:                                               ; preds = %218, %60
  %84 = phi i64 [ 0, %60 ], [ %219, %218 ]
  %85 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %61, align 8
  %86 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2, i64 0, i32 1, i64 %84
  %87 = load i32, i32* %86, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88
  %90 = icmp eq %struct.TfLiteTensor* %89, null
  br i1 %90, label %95, label %91

91:                                               ; preds = %83
  %92 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88, i32 1
  %93 = bitcast %union.TfLitePtrUnion* %92 to i64**
  %94 = load i64*, i64** %93, align 8
  br label %95

95:                                               ; preds = %83, %91
  %96 = phi i64* [ %94, %91 ], [ null, %83 ]
  %97 = ptrtoint i64* %96 to i64
  %98 = load i64**, i64*** %62, align 8
  %99 = load i64**, i64*** %11, align 8
  %100 = icmp ult i64** %98, %99
  %101 = ptrtoint i64** %99 to i64
  br i1 %100, label %102, label %106

102:                                              ; preds = %95
  %103 = bitcast i64** %98 to i64*
  store i64 %97, i64* %103, align 8
  %104 = getelementptr inbounds i64*, i64** %98, i64 1
  %105 = ptrtoint i64** %104 to i64
  store i64 %105, i64* %63, align 8
  br label %159

106:                                              ; preds = %95
  %107 = ptrtoint i64** %98 to i64
  %108 = load i64, i64* %13, align 8
  %109 = sub i64 %107, %108
  %110 = ashr exact i64 %109, 3
  %111 = add nsw i64 %110, 1
  %112 = icmp ugt i64 %111, 2305843009213693951
  br i1 %112, label %113, label %115

113:                                              ; preds = %106
  %114 = bitcast %"class.tflite::VectorOfTensors.62"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %114) #12
  unreachable

115:                                              ; preds = %106
  %116 = sub i64 %101, %108
  %117 = ashr exact i64 %116, 3
  %118 = icmp ult i64 %117, 1152921504606846975
  br i1 %118, label %119, label %127

119:                                              ; preds = %115
  %120 = ashr exact i64 %116, 2
  %121 = icmp ult i64 %120, %111
  %122 = select i1 %121, i64 %111, i64 %120
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %132, label %124

124:                                              ; preds = %119
  %125 = icmp ugt i64 %122, 2305843009213693951
  br i1 %125, label %126, label %127

126:                                              ; preds = %124
  call void @abort() #12
  unreachable

127:                                              ; preds = %124, %115
  %128 = phi i64 [ %122, %124 ], [ 2305843009213693951, %115 ]
  %129 = shl i64 %128, 3
  %130 = call i8* @_Znwm(i64 %129) #11
  %131 = bitcast i8* %130 to i64**
  br label %132

132:                                              ; preds = %127, %119
  %133 = phi i64 [ %128, %127 ], [ 0, %119 ]
  %134 = phi i64** [ %131, %127 ], [ null, %119 ]
  %135 = getelementptr inbounds i64*, i64** %134, i64 %110
  %136 = getelementptr inbounds i64*, i64** %134, i64 %133
  %137 = ptrtoint i64** %136 to i64
  %138 = bitcast i64** %135 to i64*
  store i64 %97, i64* %138, align 8
  %139 = getelementptr inbounds i64*, i64** %135, i64 1
  %140 = ptrtoint i64** %139 to i64
  %141 = load i64**, i64*** %64, align 8
  %142 = load i64, i64* %63, align 8
  %143 = ptrtoint i64** %141 to i64
  %144 = sub i64 %142, %143
  %145 = ashr exact i64 %144, 3
  %146 = sub nsw i64 0, %145
  %147 = getelementptr inbounds i64*, i64** %135, i64 %146
  %148 = ptrtoint i64** %147 to i64
  %149 = icmp sgt i64 %144, 0
  br i1 %149, label %150, label %154

150:                                              ; preds = %132
  %151 = bitcast i64** %147 to i8*
  %152 = bitcast i64** %141 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %152, i64 %144, i1 false) #10
  %153 = load i64**, i64*** %64, align 8
  br label %154

154:                                              ; preds = %150, %132
  %155 = phi i64** [ %141, %132 ], [ %153, %150 ]
  store i64 %148, i64* %13, align 8
  store i64 %140, i64* %63, align 8
  store i64 %137, i64* %12, align 8
  %156 = icmp eq i64** %155, null
  br i1 %156, label %159, label %157

157:                                              ; preds = %154
  %158 = bitcast i64** %155 to i8*
  call void @_ZdlPv(i8* %158) #11
  br label %159

159:                                              ; preds = %102, %154, %157
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %65) #10
  br i1 %90, label %160, label %161

160:                                              ; preds = %159
  store i32 0, i32* %66, align 8, !alias.scope !87
  br label %177

161:                                              ; preds = %159
  %162 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88, i32 2
  %163 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %162, align 8, !noalias !87
  %164 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 0
  %165 = load i32, i32* %164, align 4, !noalias !87
  %166 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 1, i64 0
  store i32 %165, i32* %66, align 8, !alias.scope !87
  %167 = icmp sgt i32 %165, 5
  %168 = sext i32 %165 to i64
  %169 = shl nsw i64 %168, 2
  br i1 %167, label %170, label %173

170:                                              ; preds = %161
  %171 = call i8* @_Znam(i64 %169) #11, !noalias !87
  store i8* %171, i8** %70, align 8, !alias.scope !87
  %172 = bitcast i8* %171 to i32*
  br label %173

173:                                              ; preds = %161, %170
  %174 = phi i32* [ %172, %170 ], [ %68, %161 ]
  %175 = bitcast i32* %174 to i8*
  %176 = bitcast i32* %166 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %175, i8* align 4 %176, i64 %169, i1 false) #10
  br label %177

177:                                              ; preds = %160, %173
  %178 = phi i32 [ 0, %160 ], [ %165, %173 ]
  %179 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %71, align 8
  %180 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %72, align 8
  %181 = icmp ult %"class.tflite::RuntimeShape"* %179, %180
  br i1 %181, label %182, label %208

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 0
  store i32 %178, i32* %183, align 8
  %184 = icmp sgt i32 %178, 5
  br i1 %184, label %185, label %192

185:                                              ; preds = %182
  %186 = sext i32 %178 to i64
  %187 = shl nsw i64 %186, 2
  %188 = call i8* @_Znam(i64 %187) #11
  %189 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 1, i32 0
  %190 = bitcast i32** %189 to i8**
  store i8* %188, i8** %190, align 8
  %191 = bitcast i8* %188 to i32*
  br label %197

192:                                              ; preds = %182
  %193 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 1
  %194 = bitcast %union.anon* %193 to i32*
  %195 = sext i32 %178 to i64
  %196 = shl nsw i64 %195, 2
  br label %197

197:                                              ; preds = %192, %185
  %198 = phi i64 [ %187, %185 ], [ %196, %192 ]
  %199 = phi i32* [ %191, %185 ], [ %194, %192 ]
  %200 = bitcast i32* %199 to i8*
  %201 = load i32, i32* %66, align 8
  %202 = icmp sgt i32 %201, 5
  %203 = load i32*, i32** %73, align 8
  %204 = select i1 %202, i32* %203, i32* %68
  %205 = bitcast i32* %204 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %200, i8* align 4 %205, i64 %198, i1 false) #10
  %206 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 1
  %207 = ptrtoint %"class.tflite::RuntimeShape"* %206 to i64
  store i64 %207, i64* %74, align 8
  br label %210

208:                                              ; preds = %177
  call void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.2"* %5, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4) #10
  %209 = load i32, i32* %66, align 8
  br label %210

210:                                              ; preds = %197, %208
  %211 = phi i32 [ %201, %197 ], [ %209, %208 ]
  %212 = icmp sgt i32 %211, 5
  br i1 %212, label %213, label %218

213:                                              ; preds = %210
  %214 = load i32*, i32** %69, align 8
  %215 = icmp eq i32* %214, null
  br i1 %215, label %218, label %216

216:                                              ; preds = %213
  %217 = bitcast i32* %214 to i8*
  call void @_ZdaPv(i8* %217) #11
  br label %218

218:                                              ; preds = %210, %213, %216
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %65) #10
  %219 = add nuw nsw i64 %84, 1
  %220 = icmp eq i64 %219, %75
  br i1 %220, label %76, label %83

221:                                              ; preds = %288, %58, %76
  ret void

222:                                              ; preds = %288, %77
  %223 = phi i64 [ 0, %77 ], [ %289, %288 ]
  %224 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %78, align 8
  %225 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %224, i64 %223
  %226 = ptrtoint %"class.tflite::RuntimeShape"* %225 to i64
  %227 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %79, align 8
  %228 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %29, align 8
  %229 = icmp ult %"class.tflite::RuntimeShape"** %227, %228
  %230 = ptrtoint %"class.tflite::RuntimeShape"** %228 to i64
  br i1 %229, label %231, label %235

231:                                              ; preds = %222
  %232 = bitcast %"class.tflite::RuntimeShape"** %227 to i64*
  store i64 %226, i64* %232, align 8
  %233 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %227, i64 1
  %234 = ptrtoint %"class.tflite::RuntimeShape"** %233 to i64
  store i64 %234, i64* %80, align 8
  br label %288

235:                                              ; preds = %222
  %236 = ptrtoint %"class.tflite::RuntimeShape"** %227 to i64
  %237 = load i64, i64* %32, align 8
  %238 = sub i64 %236, %237
  %239 = ashr exact i64 %238, 3
  %240 = add nsw i64 %239, 1
  %241 = icmp ugt i64 %240, 2305843009213693951
  br i1 %241, label %242, label %244

242:                                              ; preds = %235
  %243 = bitcast %"class.std::__1::vector.9"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %243) #12
  unreachable

244:                                              ; preds = %235
  %245 = sub i64 %230, %237
  %246 = ashr exact i64 %245, 3
  %247 = icmp ult i64 %246, 1152921504606846975
  br i1 %247, label %248, label %256

248:                                              ; preds = %244
  %249 = ashr exact i64 %245, 2
  %250 = icmp ult i64 %249, %240
  %251 = select i1 %250, i64 %240, i64 %249
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %261, label %253

253:                                              ; preds = %248
  %254 = icmp ugt i64 %251, 2305843009213693951
  br i1 %254, label %255, label %256

255:                                              ; preds = %253
  call void @abort() #12
  unreachable

256:                                              ; preds = %253, %244
  %257 = phi i64 [ %251, %253 ], [ 2305843009213693951, %244 ]
  %258 = shl i64 %257, 3
  %259 = call i8* @_Znwm(i64 %258) #11
  %260 = bitcast i8* %259 to %"class.tflite::RuntimeShape"**
  br label %261

261:                                              ; preds = %256, %248
  %262 = phi i64 [ %257, %256 ], [ 0, %248 ]
  %263 = phi %"class.tflite::RuntimeShape"** [ %260, %256 ], [ null, %248 ]
  %264 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %263, i64 %239
  %265 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %263, i64 %262
  %266 = ptrtoint %"class.tflite::RuntimeShape"** %265 to i64
  %267 = bitcast %"class.tflite::RuntimeShape"** %264 to i64*
  store i64 %226, i64* %267, align 8
  %268 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %264, i64 1
  %269 = ptrtoint %"class.tflite::RuntimeShape"** %268 to i64
  %270 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %81, align 8
  %271 = load i64, i64* %80, align 8
  %272 = ptrtoint %"class.tflite::RuntimeShape"** %270 to i64
  %273 = sub i64 %271, %272
  %274 = ashr exact i64 %273, 3
  %275 = sub nsw i64 0, %274
  %276 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %264, i64 %275
  %277 = ptrtoint %"class.tflite::RuntimeShape"** %276 to i64
  %278 = icmp sgt i64 %273, 0
  br i1 %278, label %279, label %283

279:                                              ; preds = %261
  %280 = bitcast %"class.tflite::RuntimeShape"** %276 to i8*
  %281 = bitcast %"class.tflite::RuntimeShape"** %270 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %280, i8* align 8 %281, i64 %273, i1 false) #10
  %282 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %81, align 8
  br label %283

283:                                              ; preds = %279, %261
  %284 = phi %"class.tflite::RuntimeShape"** [ %270, %261 ], [ %282, %279 ]
  store i64 %277, i64* %32, align 8
  store i64 %269, i64* %80, align 8
  store i64 %266, i64* %30, align 8
  %285 = icmp eq %"class.tflite::RuntimeShape"** %284, null
  br i1 %285, label %288, label %286

286:                                              ; preds = %283
  %287 = bitcast %"class.tflite::RuntimeShape"** %284 to i8*
  call void @_ZdlPv(i8* %287) #11
  br label %288

288:                                              ; preds = %231, %283, %286
  %289 = add nuw nsw i64 %223, 1
  %290 = icmp eq i64 %289, %82
  br i1 %290, label %221, label %222
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite15VectorOfTensorsIsEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors.70"*, %struct.TfLiteContext* dereferenceable(160), %struct.TfLiteIntArray* dereferenceable(4)) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = getelementptr inbounds %"class.tflite::VectorOfTensors.70", %"class.tflite::VectorOfTensors.70"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.tflite::VectorOfTensors.70", %"class.tflite::VectorOfTensors.70"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2, i64 0, i32 0
  %8 = bitcast %"class.tflite::VectorOfTensors.70"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 72, i1 false)
  %9 = load i32, i32* %7, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %"class.tflite::VectorOfTensors.70", %"class.tflite::VectorOfTensors.70"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %12 = bitcast i16*** %11 to i64*
  %13 = bitcast %"class.tflite::VectorOfTensors.70"* %0 to i64*
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %3
  %16 = icmp slt i32 %9, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %15
  tail call void @abort() #12
  unreachable

18:                                               ; preds = %15
  %19 = shl nsw i64 %10, 3
  %20 = tail call i8* @_Znwm(i64 %19) #11
  %21 = bitcast i8* %20 to i16**
  %22 = getelementptr inbounds i16*, i16** %21, i64 %10
  %23 = ptrtoint i16** %22 to i64
  %24 = insertelement <2 x i8*> undef, i8* %20, i32 0
  %25 = shufflevector <2 x i8*> %24, <2 x i8*> undef, <2 x i32> zeroinitializer
  %26 = ptrtoint <2 x i8*> %25 to <2 x i64>
  %27 = bitcast %"class.tflite::VectorOfTensors.70"* %0 to <2 x i64>*
  store <2 x i64> %26, <2 x i64>* %27, align 8
  store i64 %23, i64* %12, align 8
  br label %28

28:                                               ; preds = %18, %3
  tail call void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.2"* %5, i64 %10)
  %29 = getelementptr inbounds %"class.tflite::VectorOfTensors.70", %"class.tflite::VectorOfTensors.70"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast %"class.tflite::RuntimeShape"*** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector.9"* %6 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %31, %33
  %35 = ashr exact i64 %34, 3
  %36 = icmp ult i64 %35, %10
  br i1 %36, label %37, label %58

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.tflite::VectorOfTensors.70", %"class.tflite::VectorOfTensors.70"* %0, i64 0, i32 2, i32 0, i32 1
  %39 = bitcast %"class.tflite::RuntimeShape"*** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %40, %33
  %42 = ashr exact i64 %41, 3
  %43 = shl nsw i64 %10, 3
  %44 = tail call i8* @_Znwm(i64 %43) #11
  %45 = bitcast i8* %44 to %"class.tflite::RuntimeShape"**
  %46 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %45, i64 %42
  %47 = ptrtoint %"class.tflite::RuntimeShape"** %46 to i64
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %45, i64 %10
  %49 = ptrtoint %"class.tflite::RuntimeShape"** %48 to i64
  %50 = ptrtoint i8* %44 to i64
  %51 = icmp sgt i64 %41, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %37
  %53 = inttoptr i64 %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* align 8 %53, i64 %41, i1 false) #10
  br label %54

54:                                               ; preds = %52, %37
  store i64 %50, i64* %32, align 8
  store i64 %47, i64* %39, align 8
  store i64 %49, i64* %30, align 8
  %55 = icmp eq i64 %33, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = inttoptr i64 %33 to i8*
  tail call void @_ZdlPv(i8* %57) #11
  br label %58

58:                                               ; preds = %28, %54, %56
  %59 = icmp sgt i32 %9, 0
  br i1 %59, label %60, label %221

60:                                               ; preds = %58
  %61 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %1, i64 0, i32 2
  %62 = getelementptr inbounds %"class.tflite::VectorOfTensors.70", %"class.tflite::VectorOfTensors.70"* %0, i64 0, i32 0, i32 0, i32 1
  %63 = bitcast i16*** %62 to i64*
  %64 = getelementptr inbounds %"class.tflite::VectorOfTensors.70", %"class.tflite::VectorOfTensors.70"* %0, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  %66 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %67 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %68 = bitcast %union.anon* %67 to i32*
  %69 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %70 = bitcast i32** %69 to i8**
  %71 = getelementptr inbounds %"class.tflite::VectorOfTensors.70", %"class.tflite::VectorOfTensors.70"* %0, i64 0, i32 1, i32 0, i32 1
  %72 = getelementptr inbounds %"class.tflite::VectorOfTensors.70", %"class.tflite::VectorOfTensors.70"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %73 = getelementptr inbounds %union.anon, %union.anon* %67, i64 0, i32 0
  %74 = bitcast %"class.tflite::RuntimeShape"** %71 to i64*
  %75 = zext i32 %9 to i64
  br label %83

76:                                               ; preds = %218
  br i1 %59, label %77, label %221

77:                                               ; preds = %76
  %78 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %5, i64 0, i32 0, i32 0
  %79 = getelementptr inbounds %"class.tflite::VectorOfTensors.70", %"class.tflite::VectorOfTensors.70"* %0, i64 0, i32 2, i32 0, i32 1
  %80 = bitcast %"class.tflite::RuntimeShape"*** %79 to i64*
  %81 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %6, i64 0, i32 0, i32 0
  %82 = zext i32 %9 to i64
  br label %222

83:                                               ; preds = %218, %60
  %84 = phi i64 [ 0, %60 ], [ %219, %218 ]
  %85 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %61, align 8
  %86 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2, i64 0, i32 1, i64 %84
  %87 = load i32, i32* %86, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88
  %90 = icmp eq %struct.TfLiteTensor* %89, null
  br i1 %90, label %95, label %91

91:                                               ; preds = %83
  %92 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88, i32 1
  %93 = bitcast %union.TfLitePtrUnion* %92 to i16**
  %94 = load i16*, i16** %93, align 8
  br label %95

95:                                               ; preds = %83, %91
  %96 = phi i16* [ %94, %91 ], [ null, %83 ]
  %97 = ptrtoint i16* %96 to i64
  %98 = load i16**, i16*** %62, align 8
  %99 = load i16**, i16*** %11, align 8
  %100 = icmp ult i16** %98, %99
  %101 = ptrtoint i16** %99 to i64
  br i1 %100, label %102, label %106

102:                                              ; preds = %95
  %103 = bitcast i16** %98 to i64*
  store i64 %97, i64* %103, align 8
  %104 = getelementptr inbounds i16*, i16** %98, i64 1
  %105 = ptrtoint i16** %104 to i64
  store i64 %105, i64* %63, align 8
  br label %159

106:                                              ; preds = %95
  %107 = ptrtoint i16** %98 to i64
  %108 = load i64, i64* %13, align 8
  %109 = sub i64 %107, %108
  %110 = ashr exact i64 %109, 3
  %111 = add nsw i64 %110, 1
  %112 = icmp ugt i64 %111, 2305843009213693951
  br i1 %112, label %113, label %115

113:                                              ; preds = %106
  %114 = bitcast %"class.tflite::VectorOfTensors.70"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %114) #12
  unreachable

115:                                              ; preds = %106
  %116 = sub i64 %101, %108
  %117 = ashr exact i64 %116, 3
  %118 = icmp ult i64 %117, 1152921504606846975
  br i1 %118, label %119, label %127

119:                                              ; preds = %115
  %120 = ashr exact i64 %116, 2
  %121 = icmp ult i64 %120, %111
  %122 = select i1 %121, i64 %111, i64 %120
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %132, label %124

124:                                              ; preds = %119
  %125 = icmp ugt i64 %122, 2305843009213693951
  br i1 %125, label %126, label %127

126:                                              ; preds = %124
  call void @abort() #12
  unreachable

127:                                              ; preds = %124, %115
  %128 = phi i64 [ %122, %124 ], [ 2305843009213693951, %115 ]
  %129 = shl i64 %128, 3
  %130 = call i8* @_Znwm(i64 %129) #11
  %131 = bitcast i8* %130 to i16**
  br label %132

132:                                              ; preds = %127, %119
  %133 = phi i64 [ %128, %127 ], [ 0, %119 ]
  %134 = phi i16** [ %131, %127 ], [ null, %119 ]
  %135 = getelementptr inbounds i16*, i16** %134, i64 %110
  %136 = getelementptr inbounds i16*, i16** %134, i64 %133
  %137 = ptrtoint i16** %136 to i64
  %138 = bitcast i16** %135 to i64*
  store i64 %97, i64* %138, align 8
  %139 = getelementptr inbounds i16*, i16** %135, i64 1
  %140 = ptrtoint i16** %139 to i64
  %141 = load i16**, i16*** %64, align 8
  %142 = load i64, i64* %63, align 8
  %143 = ptrtoint i16** %141 to i64
  %144 = sub i64 %142, %143
  %145 = ashr exact i64 %144, 3
  %146 = sub nsw i64 0, %145
  %147 = getelementptr inbounds i16*, i16** %135, i64 %146
  %148 = ptrtoint i16** %147 to i64
  %149 = icmp sgt i64 %144, 0
  br i1 %149, label %150, label %154

150:                                              ; preds = %132
  %151 = bitcast i16** %147 to i8*
  %152 = bitcast i16** %141 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %152, i64 %144, i1 false) #10
  %153 = load i16**, i16*** %64, align 8
  br label %154

154:                                              ; preds = %150, %132
  %155 = phi i16** [ %141, %132 ], [ %153, %150 ]
  store i64 %148, i64* %13, align 8
  store i64 %140, i64* %63, align 8
  store i64 %137, i64* %12, align 8
  %156 = icmp eq i16** %155, null
  br i1 %156, label %159, label %157

157:                                              ; preds = %154
  %158 = bitcast i16** %155 to i8*
  call void @_ZdlPv(i8* %158) #11
  br label %159

159:                                              ; preds = %102, %154, %157
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %65) #10
  br i1 %90, label %160, label %161

160:                                              ; preds = %159
  store i32 0, i32* %66, align 8, !alias.scope !90
  br label %177

161:                                              ; preds = %159
  %162 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88, i32 2
  %163 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %162, align 8, !noalias !90
  %164 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 0
  %165 = load i32, i32* %164, align 4, !noalias !90
  %166 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 1, i64 0
  store i32 %165, i32* %66, align 8, !alias.scope !90
  %167 = icmp sgt i32 %165, 5
  %168 = sext i32 %165 to i64
  %169 = shl nsw i64 %168, 2
  br i1 %167, label %170, label %173

170:                                              ; preds = %161
  %171 = call i8* @_Znam(i64 %169) #11, !noalias !90
  store i8* %171, i8** %70, align 8, !alias.scope !90
  %172 = bitcast i8* %171 to i32*
  br label %173

173:                                              ; preds = %161, %170
  %174 = phi i32* [ %172, %170 ], [ %68, %161 ]
  %175 = bitcast i32* %174 to i8*
  %176 = bitcast i32* %166 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %175, i8* align 4 %176, i64 %169, i1 false) #10
  br label %177

177:                                              ; preds = %160, %173
  %178 = phi i32 [ 0, %160 ], [ %165, %173 ]
  %179 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %71, align 8
  %180 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %72, align 8
  %181 = icmp ult %"class.tflite::RuntimeShape"* %179, %180
  br i1 %181, label %182, label %208

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 0
  store i32 %178, i32* %183, align 8
  %184 = icmp sgt i32 %178, 5
  br i1 %184, label %185, label %192

185:                                              ; preds = %182
  %186 = sext i32 %178 to i64
  %187 = shl nsw i64 %186, 2
  %188 = call i8* @_Znam(i64 %187) #11
  %189 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 1, i32 0
  %190 = bitcast i32** %189 to i8**
  store i8* %188, i8** %190, align 8
  %191 = bitcast i8* %188 to i32*
  br label %197

192:                                              ; preds = %182
  %193 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 1
  %194 = bitcast %union.anon* %193 to i32*
  %195 = sext i32 %178 to i64
  %196 = shl nsw i64 %195, 2
  br label %197

197:                                              ; preds = %192, %185
  %198 = phi i64 [ %187, %185 ], [ %196, %192 ]
  %199 = phi i32* [ %191, %185 ], [ %194, %192 ]
  %200 = bitcast i32* %199 to i8*
  %201 = load i32, i32* %66, align 8
  %202 = icmp sgt i32 %201, 5
  %203 = load i32*, i32** %73, align 8
  %204 = select i1 %202, i32* %203, i32* %68
  %205 = bitcast i32* %204 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %200, i8* align 4 %205, i64 %198, i1 false) #10
  %206 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 1
  %207 = ptrtoint %"class.tflite::RuntimeShape"* %206 to i64
  store i64 %207, i64* %74, align 8
  br label %210

208:                                              ; preds = %177
  call void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.2"* %5, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4) #10
  %209 = load i32, i32* %66, align 8
  br label %210

210:                                              ; preds = %197, %208
  %211 = phi i32 [ %201, %197 ], [ %209, %208 ]
  %212 = icmp sgt i32 %211, 5
  br i1 %212, label %213, label %218

213:                                              ; preds = %210
  %214 = load i32*, i32** %69, align 8
  %215 = icmp eq i32* %214, null
  br i1 %215, label %218, label %216

216:                                              ; preds = %213
  %217 = bitcast i32* %214 to i8*
  call void @_ZdaPv(i8* %217) #11
  br label %218

218:                                              ; preds = %210, %213, %216
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %65) #10
  %219 = add nuw nsw i64 %84, 1
  %220 = icmp eq i64 %219, %75
  br i1 %220, label %76, label %83

221:                                              ; preds = %288, %58, %76
  ret void

222:                                              ; preds = %288, %77
  %223 = phi i64 [ 0, %77 ], [ %289, %288 ]
  %224 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %78, align 8
  %225 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %224, i64 %223
  %226 = ptrtoint %"class.tflite::RuntimeShape"* %225 to i64
  %227 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %79, align 8
  %228 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %29, align 8
  %229 = icmp ult %"class.tflite::RuntimeShape"** %227, %228
  %230 = ptrtoint %"class.tflite::RuntimeShape"** %228 to i64
  br i1 %229, label %231, label %235

231:                                              ; preds = %222
  %232 = bitcast %"class.tflite::RuntimeShape"** %227 to i64*
  store i64 %226, i64* %232, align 8
  %233 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %227, i64 1
  %234 = ptrtoint %"class.tflite::RuntimeShape"** %233 to i64
  store i64 %234, i64* %80, align 8
  br label %288

235:                                              ; preds = %222
  %236 = ptrtoint %"class.tflite::RuntimeShape"** %227 to i64
  %237 = load i64, i64* %32, align 8
  %238 = sub i64 %236, %237
  %239 = ashr exact i64 %238, 3
  %240 = add nsw i64 %239, 1
  %241 = icmp ugt i64 %240, 2305843009213693951
  br i1 %241, label %242, label %244

242:                                              ; preds = %235
  %243 = bitcast %"class.std::__1::vector.9"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %243) #12
  unreachable

244:                                              ; preds = %235
  %245 = sub i64 %230, %237
  %246 = ashr exact i64 %245, 3
  %247 = icmp ult i64 %246, 1152921504606846975
  br i1 %247, label %248, label %256

248:                                              ; preds = %244
  %249 = ashr exact i64 %245, 2
  %250 = icmp ult i64 %249, %240
  %251 = select i1 %250, i64 %240, i64 %249
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %261, label %253

253:                                              ; preds = %248
  %254 = icmp ugt i64 %251, 2305843009213693951
  br i1 %254, label %255, label %256

255:                                              ; preds = %253
  call void @abort() #12
  unreachable

256:                                              ; preds = %253, %244
  %257 = phi i64 [ %251, %253 ], [ 2305843009213693951, %244 ]
  %258 = shl i64 %257, 3
  %259 = call i8* @_Znwm(i64 %258) #11
  %260 = bitcast i8* %259 to %"class.tflite::RuntimeShape"**
  br label %261

261:                                              ; preds = %256, %248
  %262 = phi i64 [ %257, %256 ], [ 0, %248 ]
  %263 = phi %"class.tflite::RuntimeShape"** [ %260, %256 ], [ null, %248 ]
  %264 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %263, i64 %239
  %265 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %263, i64 %262
  %266 = ptrtoint %"class.tflite::RuntimeShape"** %265 to i64
  %267 = bitcast %"class.tflite::RuntimeShape"** %264 to i64*
  store i64 %226, i64* %267, align 8
  %268 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %264, i64 1
  %269 = ptrtoint %"class.tflite::RuntimeShape"** %268 to i64
  %270 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %81, align 8
  %271 = load i64, i64* %80, align 8
  %272 = ptrtoint %"class.tflite::RuntimeShape"** %270 to i64
  %273 = sub i64 %271, %272
  %274 = ashr exact i64 %273, 3
  %275 = sub nsw i64 0, %274
  %276 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %264, i64 %275
  %277 = ptrtoint %"class.tflite::RuntimeShape"** %276 to i64
  %278 = icmp sgt i64 %273, 0
  br i1 %278, label %279, label %283

279:                                              ; preds = %261
  %280 = bitcast %"class.tflite::RuntimeShape"** %276 to i8*
  %281 = bitcast %"class.tflite::RuntimeShape"** %270 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %280, i8* align 8 %281, i64 %273, i1 false) #10
  %282 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %81, align 8
  br label %283

283:                                              ; preds = %279, %261
  %284 = phi %"class.tflite::RuntimeShape"** [ %270, %261 ], [ %282, %279 ]
  store i64 %277, i64* %32, align 8
  store i64 %269, i64* %80, align 8
  store i64 %266, i64* %30, align 8
  %285 = icmp eq %"class.tflite::RuntimeShape"** %284, null
  br i1 %285, label %288, label %286

286:                                              ; preds = %283
  %287 = bitcast %"class.tflite::RuntimeShape"** %284 to i8*
  call void @_ZdlPv(i8* %287) #11
  br label %288

288:                                              ; preds = %231, %283, %286
  %289 = add nuw nsw i64 %223, 1
  %290 = icmp eq i64 %289, %82
  br i1 %290, label %221, label %222
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite15VectorOfTensorsIhEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors.40"*, %struct.TfLiteContext* dereferenceable(160), %struct.TfLiteIntArray* dereferenceable(4)) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = getelementptr inbounds %"class.tflite::VectorOfTensors.40", %"class.tflite::VectorOfTensors.40"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.tflite::VectorOfTensors.40", %"class.tflite::VectorOfTensors.40"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2, i64 0, i32 0
  %8 = bitcast %"class.tflite::VectorOfTensors.40"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 72, i1 false)
  %9 = load i32, i32* %7, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %"class.tflite::VectorOfTensors.40", %"class.tflite::VectorOfTensors.40"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %12 = bitcast i8*** %11 to i64*
  %13 = bitcast %"class.tflite::VectorOfTensors.40"* %0 to i64*
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %3
  %16 = icmp slt i32 %9, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %15
  tail call void @abort() #12
  unreachable

18:                                               ; preds = %15
  %19 = shl nsw i64 %10, 3
  %20 = tail call i8* @_Znwm(i64 %19) #11
  %21 = bitcast i8* %20 to i8**
  %22 = getelementptr inbounds i8*, i8** %21, i64 %10
  %23 = ptrtoint i8** %22 to i64
  %24 = insertelement <2 x i8*> undef, i8* %20, i32 0
  %25 = shufflevector <2 x i8*> %24, <2 x i8*> undef, <2 x i32> zeroinitializer
  %26 = ptrtoint <2 x i8*> %25 to <2 x i64>
  %27 = bitcast %"class.tflite::VectorOfTensors.40"* %0 to <2 x i64>*
  store <2 x i64> %26, <2 x i64>* %27, align 8
  store i64 %23, i64* %12, align 8
  br label %28

28:                                               ; preds = %18, %3
  tail call void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.2"* %5, i64 %10)
  %29 = getelementptr inbounds %"class.tflite::VectorOfTensors.40", %"class.tflite::VectorOfTensors.40"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast %"class.tflite::RuntimeShape"*** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector.9"* %6 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %31, %33
  %35 = ashr exact i64 %34, 3
  %36 = icmp ult i64 %35, %10
  br i1 %36, label %37, label %58

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.tflite::VectorOfTensors.40", %"class.tflite::VectorOfTensors.40"* %0, i64 0, i32 2, i32 0, i32 1
  %39 = bitcast %"class.tflite::RuntimeShape"*** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %40, %33
  %42 = ashr exact i64 %41, 3
  %43 = shl nsw i64 %10, 3
  %44 = tail call i8* @_Znwm(i64 %43) #11
  %45 = bitcast i8* %44 to %"class.tflite::RuntimeShape"**
  %46 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %45, i64 %42
  %47 = ptrtoint %"class.tflite::RuntimeShape"** %46 to i64
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %45, i64 %10
  %49 = ptrtoint %"class.tflite::RuntimeShape"** %48 to i64
  %50 = ptrtoint i8* %44 to i64
  %51 = icmp sgt i64 %41, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %37
  %53 = inttoptr i64 %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* align 8 %53, i64 %41, i1 false) #10
  br label %54

54:                                               ; preds = %52, %37
  store i64 %50, i64* %32, align 8
  store i64 %47, i64* %39, align 8
  store i64 %49, i64* %30, align 8
  %55 = icmp eq i64 %33, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = inttoptr i64 %33 to i8*
  tail call void @_ZdlPv(i8* %57) #11
  br label %58

58:                                               ; preds = %28, %54, %56
  %59 = icmp sgt i32 %9, 0
  br i1 %59, label %60, label %221

60:                                               ; preds = %58
  %61 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %1, i64 0, i32 2
  %62 = getelementptr inbounds %"class.tflite::VectorOfTensors.40", %"class.tflite::VectorOfTensors.40"* %0, i64 0, i32 0, i32 0, i32 1
  %63 = bitcast i8*** %62 to i64*
  %64 = getelementptr inbounds %"class.tflite::VectorOfTensors.40", %"class.tflite::VectorOfTensors.40"* %0, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  %66 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %67 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %68 = bitcast %union.anon* %67 to i32*
  %69 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %70 = bitcast i32** %69 to i8**
  %71 = getelementptr inbounds %"class.tflite::VectorOfTensors.40", %"class.tflite::VectorOfTensors.40"* %0, i64 0, i32 1, i32 0, i32 1
  %72 = getelementptr inbounds %"class.tflite::VectorOfTensors.40", %"class.tflite::VectorOfTensors.40"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %73 = getelementptr inbounds %union.anon, %union.anon* %67, i64 0, i32 0
  %74 = bitcast %"class.tflite::RuntimeShape"** %71 to i64*
  %75 = zext i32 %9 to i64
  br label %83

76:                                               ; preds = %218
  br i1 %59, label %77, label %221

77:                                               ; preds = %76
  %78 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %5, i64 0, i32 0, i32 0
  %79 = getelementptr inbounds %"class.tflite::VectorOfTensors.40", %"class.tflite::VectorOfTensors.40"* %0, i64 0, i32 2, i32 0, i32 1
  %80 = bitcast %"class.tflite::RuntimeShape"*** %79 to i64*
  %81 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %6, i64 0, i32 0, i32 0
  %82 = zext i32 %9 to i64
  br label %222

83:                                               ; preds = %218, %60
  %84 = phi i64 [ 0, %60 ], [ %219, %218 ]
  %85 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %61, align 8
  %86 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2, i64 0, i32 1, i64 %84
  %87 = load i32, i32* %86, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88
  %90 = icmp eq %struct.TfLiteTensor* %89, null
  br i1 %90, label %95, label %91

91:                                               ; preds = %83
  %92 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88, i32 1
  %93 = bitcast %union.TfLitePtrUnion* %92 to i8**
  %94 = load i8*, i8** %93, align 8
  br label %95

95:                                               ; preds = %83, %91
  %96 = phi i8* [ %94, %91 ], [ null, %83 ]
  %97 = ptrtoint i8* %96 to i64
  %98 = load i8**, i8*** %62, align 8
  %99 = load i8**, i8*** %11, align 8
  %100 = icmp ult i8** %98, %99
  %101 = ptrtoint i8** %99 to i64
  br i1 %100, label %102, label %106

102:                                              ; preds = %95
  %103 = bitcast i8** %98 to i64*
  store i64 %97, i64* %103, align 8
  %104 = getelementptr inbounds i8*, i8** %98, i64 1
  %105 = ptrtoint i8** %104 to i64
  store i64 %105, i64* %63, align 8
  br label %159

106:                                              ; preds = %95
  %107 = ptrtoint i8** %98 to i64
  %108 = load i64, i64* %13, align 8
  %109 = sub i64 %107, %108
  %110 = ashr exact i64 %109, 3
  %111 = add nsw i64 %110, 1
  %112 = icmp ugt i64 %111, 2305843009213693951
  br i1 %112, label %113, label %115

113:                                              ; preds = %106
  %114 = bitcast %"class.tflite::VectorOfTensors.40"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %114) #12
  unreachable

115:                                              ; preds = %106
  %116 = sub i64 %101, %108
  %117 = ashr exact i64 %116, 3
  %118 = icmp ult i64 %117, 1152921504606846975
  br i1 %118, label %119, label %127

119:                                              ; preds = %115
  %120 = ashr exact i64 %116, 2
  %121 = icmp ult i64 %120, %111
  %122 = select i1 %121, i64 %111, i64 %120
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %132, label %124

124:                                              ; preds = %119
  %125 = icmp ugt i64 %122, 2305843009213693951
  br i1 %125, label %126, label %127

126:                                              ; preds = %124
  call void @abort() #12
  unreachable

127:                                              ; preds = %124, %115
  %128 = phi i64 [ %122, %124 ], [ 2305843009213693951, %115 ]
  %129 = shl i64 %128, 3
  %130 = call i8* @_Znwm(i64 %129) #11
  %131 = bitcast i8* %130 to i8**
  br label %132

132:                                              ; preds = %127, %119
  %133 = phi i64 [ %128, %127 ], [ 0, %119 ]
  %134 = phi i8** [ %131, %127 ], [ null, %119 ]
  %135 = getelementptr inbounds i8*, i8** %134, i64 %110
  %136 = getelementptr inbounds i8*, i8** %134, i64 %133
  %137 = ptrtoint i8** %136 to i64
  %138 = bitcast i8** %135 to i64*
  store i64 %97, i64* %138, align 8
  %139 = getelementptr inbounds i8*, i8** %135, i64 1
  %140 = ptrtoint i8** %139 to i64
  %141 = load i8**, i8*** %64, align 8
  %142 = load i64, i64* %63, align 8
  %143 = ptrtoint i8** %141 to i64
  %144 = sub i64 %142, %143
  %145 = ashr exact i64 %144, 3
  %146 = sub nsw i64 0, %145
  %147 = getelementptr inbounds i8*, i8** %135, i64 %146
  %148 = ptrtoint i8** %147 to i64
  %149 = icmp sgt i64 %144, 0
  br i1 %149, label %150, label %154

150:                                              ; preds = %132
  %151 = bitcast i8** %147 to i8*
  %152 = bitcast i8** %141 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %152, i64 %144, i1 false) #10
  %153 = load i8**, i8*** %64, align 8
  br label %154

154:                                              ; preds = %150, %132
  %155 = phi i8** [ %141, %132 ], [ %153, %150 ]
  store i64 %148, i64* %13, align 8
  store i64 %140, i64* %63, align 8
  store i64 %137, i64* %12, align 8
  %156 = icmp eq i8** %155, null
  br i1 %156, label %159, label %157

157:                                              ; preds = %154
  %158 = bitcast i8** %155 to i8*
  call void @_ZdlPv(i8* %158) #11
  br label %159

159:                                              ; preds = %102, %154, %157
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %65) #10
  br i1 %90, label %160, label %161

160:                                              ; preds = %159
  store i32 0, i32* %66, align 8, !alias.scope !93
  br label %177

161:                                              ; preds = %159
  %162 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88, i32 2
  %163 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %162, align 8, !noalias !93
  %164 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 0
  %165 = load i32, i32* %164, align 4, !noalias !93
  %166 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 1, i64 0
  store i32 %165, i32* %66, align 8, !alias.scope !93
  %167 = icmp sgt i32 %165, 5
  %168 = sext i32 %165 to i64
  %169 = shl nsw i64 %168, 2
  br i1 %167, label %170, label %173

170:                                              ; preds = %161
  %171 = call i8* @_Znam(i64 %169) #11, !noalias !93
  store i8* %171, i8** %70, align 8, !alias.scope !93
  %172 = bitcast i8* %171 to i32*
  br label %173

173:                                              ; preds = %161, %170
  %174 = phi i32* [ %172, %170 ], [ %68, %161 ]
  %175 = bitcast i32* %174 to i8*
  %176 = bitcast i32* %166 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %175, i8* align 4 %176, i64 %169, i1 false) #10
  br label %177

177:                                              ; preds = %160, %173
  %178 = phi i32 [ 0, %160 ], [ %165, %173 ]
  %179 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %71, align 8
  %180 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %72, align 8
  %181 = icmp ult %"class.tflite::RuntimeShape"* %179, %180
  br i1 %181, label %182, label %208

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 0
  store i32 %178, i32* %183, align 8
  %184 = icmp sgt i32 %178, 5
  br i1 %184, label %185, label %192

185:                                              ; preds = %182
  %186 = sext i32 %178 to i64
  %187 = shl nsw i64 %186, 2
  %188 = call i8* @_Znam(i64 %187) #11
  %189 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 1, i32 0
  %190 = bitcast i32** %189 to i8**
  store i8* %188, i8** %190, align 8
  %191 = bitcast i8* %188 to i32*
  br label %197

192:                                              ; preds = %182
  %193 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 1
  %194 = bitcast %union.anon* %193 to i32*
  %195 = sext i32 %178 to i64
  %196 = shl nsw i64 %195, 2
  br label %197

197:                                              ; preds = %192, %185
  %198 = phi i64 [ %187, %185 ], [ %196, %192 ]
  %199 = phi i32* [ %191, %185 ], [ %194, %192 ]
  %200 = bitcast i32* %199 to i8*
  %201 = load i32, i32* %66, align 8
  %202 = icmp sgt i32 %201, 5
  %203 = load i32*, i32** %73, align 8
  %204 = select i1 %202, i32* %203, i32* %68
  %205 = bitcast i32* %204 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %200, i8* align 4 %205, i64 %198, i1 false) #10
  %206 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 1
  %207 = ptrtoint %"class.tflite::RuntimeShape"* %206 to i64
  store i64 %207, i64* %74, align 8
  br label %210

208:                                              ; preds = %177
  call void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.2"* %5, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4) #10
  %209 = load i32, i32* %66, align 8
  br label %210

210:                                              ; preds = %197, %208
  %211 = phi i32 [ %201, %197 ], [ %209, %208 ]
  %212 = icmp sgt i32 %211, 5
  br i1 %212, label %213, label %218

213:                                              ; preds = %210
  %214 = load i32*, i32** %69, align 8
  %215 = icmp eq i32* %214, null
  br i1 %215, label %218, label %216

216:                                              ; preds = %213
  %217 = bitcast i32* %214 to i8*
  call void @_ZdaPv(i8* %217) #11
  br label %218

218:                                              ; preds = %210, %213, %216
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %65) #10
  %219 = add nuw nsw i64 %84, 1
  %220 = icmp eq i64 %219, %75
  br i1 %220, label %76, label %83

221:                                              ; preds = %288, %58, %76
  ret void

222:                                              ; preds = %288, %77
  %223 = phi i64 [ 0, %77 ], [ %289, %288 ]
  %224 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %78, align 8
  %225 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %224, i64 %223
  %226 = ptrtoint %"class.tflite::RuntimeShape"* %225 to i64
  %227 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %79, align 8
  %228 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %29, align 8
  %229 = icmp ult %"class.tflite::RuntimeShape"** %227, %228
  %230 = ptrtoint %"class.tflite::RuntimeShape"** %228 to i64
  br i1 %229, label %231, label %235

231:                                              ; preds = %222
  %232 = bitcast %"class.tflite::RuntimeShape"** %227 to i64*
  store i64 %226, i64* %232, align 8
  %233 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %227, i64 1
  %234 = ptrtoint %"class.tflite::RuntimeShape"** %233 to i64
  store i64 %234, i64* %80, align 8
  br label %288

235:                                              ; preds = %222
  %236 = ptrtoint %"class.tflite::RuntimeShape"** %227 to i64
  %237 = load i64, i64* %32, align 8
  %238 = sub i64 %236, %237
  %239 = ashr exact i64 %238, 3
  %240 = add nsw i64 %239, 1
  %241 = icmp ugt i64 %240, 2305843009213693951
  br i1 %241, label %242, label %244

242:                                              ; preds = %235
  %243 = bitcast %"class.std::__1::vector.9"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %243) #12
  unreachable

244:                                              ; preds = %235
  %245 = sub i64 %230, %237
  %246 = ashr exact i64 %245, 3
  %247 = icmp ult i64 %246, 1152921504606846975
  br i1 %247, label %248, label %256

248:                                              ; preds = %244
  %249 = ashr exact i64 %245, 2
  %250 = icmp ult i64 %249, %240
  %251 = select i1 %250, i64 %240, i64 %249
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %261, label %253

253:                                              ; preds = %248
  %254 = icmp ugt i64 %251, 2305843009213693951
  br i1 %254, label %255, label %256

255:                                              ; preds = %253
  call void @abort() #12
  unreachable

256:                                              ; preds = %253, %244
  %257 = phi i64 [ %251, %253 ], [ 2305843009213693951, %244 ]
  %258 = shl i64 %257, 3
  %259 = call i8* @_Znwm(i64 %258) #11
  %260 = bitcast i8* %259 to %"class.tflite::RuntimeShape"**
  br label %261

261:                                              ; preds = %256, %248
  %262 = phi i64 [ %257, %256 ], [ 0, %248 ]
  %263 = phi %"class.tflite::RuntimeShape"** [ %260, %256 ], [ null, %248 ]
  %264 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %263, i64 %239
  %265 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %263, i64 %262
  %266 = ptrtoint %"class.tflite::RuntimeShape"** %265 to i64
  %267 = bitcast %"class.tflite::RuntimeShape"** %264 to i64*
  store i64 %226, i64* %267, align 8
  %268 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %264, i64 1
  %269 = ptrtoint %"class.tflite::RuntimeShape"** %268 to i64
  %270 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %81, align 8
  %271 = load i64, i64* %80, align 8
  %272 = ptrtoint %"class.tflite::RuntimeShape"** %270 to i64
  %273 = sub i64 %271, %272
  %274 = ashr exact i64 %273, 3
  %275 = sub nsw i64 0, %274
  %276 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %264, i64 %275
  %277 = ptrtoint %"class.tflite::RuntimeShape"** %276 to i64
  %278 = icmp sgt i64 %273, 0
  br i1 %278, label %279, label %283

279:                                              ; preds = %261
  %280 = bitcast %"class.tflite::RuntimeShape"** %276 to i8*
  %281 = bitcast %"class.tflite::RuntimeShape"** %270 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %280, i8* align 8 %281, i64 %273, i1 false) #10
  %282 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %81, align 8
  br label %283

283:                                              ; preds = %279, %261
  %284 = phi %"class.tflite::RuntimeShape"** [ %270, %261 ], [ %282, %279 ]
  store i64 %277, i64* %32, align 8
  store i64 %269, i64* %80, align 8
  store i64 %266, i64* %30, align 8
  %285 = icmp eq %"class.tflite::RuntimeShape"** %284, null
  br i1 %285, label %288, label %286

286:                                              ; preds = %283
  %287 = bitcast %"class.tflite::RuntimeShape"** %284 to i8*
  call void @_ZdlPv(i8* %287) #11
  br label %288

288:                                              ; preds = %231, %283, %286
  %289 = add nuw nsw i64 %223, 1
  %290 = icmp eq i64 %289, %82
  br i1 %290, label %221, label %222
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.round.f32(float) #9

; Function Attrs: nounwind readnone speculatable
declare <16 x float> @llvm.round.v16f32(<16 x float>) #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!4 = distinct !{!4, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!7 = distinct !{!7, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.unroll.disable"}
!10 = distinct !{!10, !9}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!13 = distinct !{!13, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!14 = distinct !{!14, !9}
!15 = distinct !{!15, !9}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!18 = distinct !{!18, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!19 = distinct !{!19, !9}
!20 = distinct !{!20, !9}
!21 = !{!22}
!22 = distinct !{!22, !23}
!23 = distinct !{!23, !"LVerDomain"}
!24 = !{!25}
!25 = distinct !{!25, !23}
!26 = distinct !{!26, !27}
!27 = !{!"llvm.loop.isvectorized", i32 1}
!28 = distinct !{!28, !27}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!31 = distinct !{!31, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!32 = distinct !{!32, !9}
!33 = distinct !{!33, !9}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!36 = distinct !{!36, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!37 = distinct !{!37, !9}
!38 = distinct !{!38, !9}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!41 = distinct !{!41, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!42 = distinct !{!42, !9}
!43 = distinct !{!43, !9}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!46 = distinct !{!46, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!47 = distinct !{!47, !9}
!48 = distinct !{!48, !9}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!51 = distinct !{!51, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!52 = distinct !{!52, !9}
!53 = distinct !{!53, !9}
!54 = !{!55}
!55 = distinct !{!55, !56, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!56 = distinct !{!56, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!57 = distinct !{!57, !9}
!58 = distinct !{!58, !9}
!59 = !{!60}
!60 = distinct !{!60, !61}
!61 = distinct !{!61, !"LVerDomain"}
!62 = !{!63}
!63 = distinct !{!63, !61}
!64 = distinct !{!64, !27}
!65 = distinct !{!65, !27}
!66 = !{!67}
!67 = distinct !{!67, !68, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!68 = distinct !{!68, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!69 = distinct !{!69, !9}
!70 = distinct !{!70, !9}
!71 = !{!72}
!72 = distinct !{!72, !73, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!73 = distinct !{!73, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!74 = distinct !{!74, !9}
!75 = distinct !{!75, !9}
!76 = !{!77}
!77 = distinct !{!77, !78, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!78 = distinct !{!78, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!79 = distinct !{!79, !9}
!80 = distinct !{!80, !9}
!81 = !{!82}
!82 = distinct !{!82, !83, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!83 = distinct !{!83, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!84 = !{!85}
!85 = distinct !{!85, !86, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!86 = distinct !{!86, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!87 = !{!88}
!88 = distinct !{!88, !89, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!89 = distinct !{!89, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!90 = !{!91}
!91 = distinct !{!91, !92, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!92 = distinct !{!92, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!93 = !{!94}
!94 = distinct !{!94, !95, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!95 = distinct !{!95, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
