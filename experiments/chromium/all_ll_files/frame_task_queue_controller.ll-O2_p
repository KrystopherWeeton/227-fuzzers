; ModuleID = '../../third_party/blink/renderer/platform/scheduler/main_thread/frame_task_queue_controller.cc'
source_filename = "../../third_party/blink/renderer/platform/scheduler/main_thread/frame_task_queue_controller.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::scheduler::FrameTaskQueueController" = type { %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameTaskQueueController::Delegate"*, %"class.WTF::HashMap.417", %"class.WTF::HashSet.422", %"class.WTF::HashMap.426", %"class.WTF::Vector.437" }
%"class.WTF::HashMap.417" = type { %"class.WTF::HashTable.418" }
%"class.WTF::HashTable.418" = type <{ %"struct.WTF::KeyValuePair.421"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.421" = type { i32, %class.scoped_refptr.19 }
%class.scoped_refptr.19 = type { %"class.blink::scheduler::MainThreadTaskQueue"* }
%"class.blink::scheduler::MainThreadTaskQueue" = type { %"class.base::RefCountedThreadSafe.20", %class.scoped_refptr.21, i32, %"struct.blink::scheduler::MainThreadTaskQueue::QueueTraits", i8, %"class.absl::optional.109", %"class.absl::optional.114", %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::AgentGroupSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.base::WeakPtrFactory.176" }
%"class.base::RefCountedThreadSafe.20" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.21 = type { %"class.base::sequence_manager::TaskQueue"* }
%"class.base::sequence_manager::TaskQueue" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.22", %"class.base::internal::CheckedLock", %"class.std::__1::unique_ptr.23", %"class.base::WeakPtr", %class.scoped_refptr.26, %class.scoped_refptr, i32, i32, i8*, %"class.base::WeakPtrFactory.108" }
%"class.base::RefCountedThreadSafe.22" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::CheckedLock" = type { %"class.base::Lock" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.base::sequence_manager::internal::TaskQueueImpl"* }
%"class.base::sequence_manager::internal::TaskQueueImpl" = type <{ i8*, %"class.base::sequence_manager::internal::SequenceManagerImpl"*, %class.scoped_refptr.26, %class.scoped_refptr.28, %"class.base::internal::CheckedLock", %"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread", %"struct.base::sequence_manager::internal::TaskQueueImpl::MainThreadOnly", %"class.base::sequence_manager::internal::AtomicFlagSet::AtomicFlag", i8, i8, i8, [5 x i8] }>
%"class.base::sequence_manager::internal::SequenceManagerImpl" = type opaque
%class.scoped_refptr.28 = type { %"class.base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster"* }
%"class.base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster" = type { %"class.base::RefCountedThreadSafe.29", [4 x i8], %"class.base::internal::OperationsController", %"class.base::sequence_manager::internal::TaskQueueImpl"* }
%"class.base::RefCountedThreadSafe.29" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::OperationsController" = type { %"struct.std::__1::atomic.30", [4 x i8], %"class.base::WaitableEvent" }
%"struct.std::__1::atomic.30" = type { %"struct.std::__1::__atomic_base.31" }
%"struct.std::__1::__atomic_base.31" = type { %"struct.std::__1::__atomic_base.32" }
%"struct.std::__1::__atomic_base.32" = type { %"struct.std::__1::__cxx_atomic_impl.33" }
%"struct.std::__1::__cxx_atomic_impl.33" = type { %"struct.std::__1::__cxx_atomic_base_impl.34" }
%"struct.std::__1::__cxx_atomic_base_impl.34" = type { i32 }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.35, i8, [7 x i8] }>
%class.scoped_refptr.35 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.36", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.36" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.37" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread" = type { %"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::TaskQueue::Observer"*, %"class.base::sequence_manager::internal::LazilyDeallocatedDeque", i8, i8, i8, %"class.base::RepeatingCallback", %"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread::TracingOnly" }
%"class.base::sequence_manager::TimeDomain" = type { i32 (...)**, %"class.base::sequence_manager::internal::SequenceManagerImpl"*, %"class.base::internal::IntrusiveHeap", i32, %class.scoped_refptr.26 }
%"class.base::internal::IntrusiveHeap" = type { %"class.base::IntrusiveHeap" }
%"class.base::IntrusiveHeap" = type { %"struct.base::IntrusiveHeap<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp, base::internal::IntrusiveHeapImpl<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp>::GreaterUsingLessEqual, base::DefaultHeapHandleAccessor<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp> >::Impl" }
%"struct.base::IntrusiveHeap<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp, base::internal::IntrusiveHeapImpl<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp>::GreaterUsingLessEqual, base::DefaultHeapHandleAccessor<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp> >::Impl" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"class.std::__1::__compressed_pair.41" }
%"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp" = type { %"struct.base::sequence_manager::internal::DelayedWakeUp", %"class.base::sequence_manager::internal::TaskQueueImpl"* }
%"struct.base::sequence_manager::internal::DelayedWakeUp" = type { %"class.base::TimeTicks", i32, i32 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* }
%"class.base::sequence_manager::TaskQueue::Observer" = type { i32 (...)** }
%"class.base::sequence_manager::internal::LazilyDeallocatedDeque" = type { %"class.std::__1::unique_ptr.46", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, i64, i64, %"class.base::TimeTicks" }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* }
%"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.52 }
%class.scoped_refptr.52 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.53", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.53" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread::TracingOnly" = type <{ i8, [7 x i8], %"class.absl::optional.54", i8, [7 x i8] }>
%"class.absl::optional.54" = type { %"class.absl::optional_internal::optional_data.55" }
%"class.absl::optional_internal::optional_data.55" = type { %"class.absl::optional_internal::optional_data_base.56" }
%"class.absl::optional_internal::optional_data_base.56" = type { %"class.absl::optional_internal::optional_data_dtor_base.57" }
%"class.absl::optional_internal::optional_data_dtor_base.57" = type { i8, %union.anon.58 }
%union.anon.58 = type { %"class.base::TimeTicks" }
%"struct.base::sequence_manager::internal::TaskQueueImpl::MainThreadOnly" = type <{ %"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::TaskQueue::Observer"*, %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue", %"class.base::ObserverList", %"class.base::HeapHandle", i8, [7 x i8], %"class.base::trace_event::BlameContext"*, %"class.base::sequence_manager::EnqueueOrder", %"class.absl::optional.54", %"class.base::sequence_manager::EnqueueOrder", %"class.base::sequence_manager::EnqueueOrder", %"class.base::RepeatingCallback.91", %"class.base::RepeatingCallback.92", %"class.absl::optional.93", i8, [7 x i8], %"class.absl::optional.54", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.base::sequence_manager::internal::WorkQueue"* }
%"class.base::sequence_manager::internal::WorkQueue" = type opaque
%"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue" = type { %"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue::PQueue", i32, [4 x i8] }
%"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue::PQueue" = type { %"class.std::__1::priority_queue.base", [7 x i8] }
%"class.std::__1::priority_queue.base" = type <{ %"class.std::__1::vector.67", %"struct.std::__1::less" }>
%"class.std::__1::vector.67" = type { %"class.std::__1::__vector_base.68" }
%"class.std::__1::__vector_base.68" = type { %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"*, %"class.std::__1::__compressed_pair.71" }
%"struct.base::sequence_manager::Task" = type { %"struct.base::PendingTask.base", i8, i8, i8, %class.scoped_refptr.70, %"class.base::sequence_manager::EnqueueOrder" }
%"struct.base::PendingTask.base" = type <{ %"class.base::OnceCallback", %"class.base::Location", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.std::__1::array.69", i32, [4 x i8], i8*, i32, i8 }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"struct.std::__1::array.69" = type { [4 x i8*] }
%class.scoped_refptr.70 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"struct.base::sequence_manager::Task"* }
%"struct.std::__1::less" = type { i8 }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.77", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.79" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::HeapHandle" = type { i64 }
%"class.base::trace_event::BlameContext" = type { %"class.base::trace_event::TraceLog::AsyncEnabledStateObserver", i8*, i8*, i8*, i8*, i64, i8*, i64, i8*, %"class.base::ThreadChecker", %"class.base::WeakPtrFactory" }
%"class.base::trace_event::TraceLog::AsyncEnabledStateObserver" = type { i32 (...)** }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.84 }
%class.scoped_refptr.84 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.85", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.85" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.86" }
%"struct.std::__1::atomic.86" = type { %"struct.std::__1::__atomic_base.87" }
%"struct.std::__1::__atomic_base.87" = type { %"struct.std::__1::__atomic_base.88" }
%"struct.std::__1::__atomic_base.88" = type { %"struct.std::__1::__cxx_atomic_impl.89" }
%"struct.std::__1::__cxx_atomic_impl.89" = type { %"struct.std::__1::__cxx_atomic_base_impl.90" }
%"struct.std::__1::__cxx_atomic_base_impl.90" = type { i8 }
%"class.base::sequence_manager::EnqueueOrder" = type { i64 }
%"class.base::RepeatingCallback.91" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.92" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.absl::optional.93" = type { %"class.absl::optional_internal::optional_data.94" }
%"class.absl::optional_internal::optional_data.94" = type { %"class.absl::optional_internal::optional_data_base.95" }
%"class.absl::optional_internal::optional_data_base.95" = type { %"class.absl::optional_internal::optional_data_dtor_base.96" }
%"class.absl::optional_internal::optional_data_dtor_base.96" = type { i8, %union.anon.97 }
%union.anon.97 = type { %"struct.base::sequence_manager::internal::DelayedWakeUp" }
%"class.base::sequence_manager::internal::AtomicFlagSet::AtomicFlag" = type { %"class.base::sequence_manager::internal::AtomicFlagSet"*, %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, i64 }
%"class.base::sequence_manager::internal::AtomicFlagSet" = type { %class.scoped_refptr.26, %"class.std::__1::unique_ptr.98", %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"struct.base::sequence_manager::internal::AtomicFlagSet::Group" = type { %"struct.std::__1::atomic.622", i64, [64 x %"class.base::RepeatingCallback.144"], %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, %"class.std::__1::unique_ptr.98", %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"struct.std::__1::atomic.622" = type { %"struct.std::__1::__atomic_base.623" }
%"struct.std::__1::__atomic_base.623" = type { %"struct.std::__1::__atomic_base.624" }
%"struct.std::__1::__atomic_base.624" = type { %"struct.std::__1::__cxx_atomic_impl.625" }
%"struct.std::__1::__cxx_atomic_impl.625" = type { %"struct.std::__1::__cxx_atomic_base_impl.626" }
%"struct.std::__1::__cxx_atomic_base_impl.626" = type { i64 }
%"class.base::RepeatingCallback.144" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.107 }
%class.scoped_refptr.107 = type { %"class.base::internal::WeakReference::Flag"* }
%class.scoped_refptr.26 = type { %"class.base::sequence_manager::internal::AssociatedThreadId"* }
%"class.base::sequence_manager::internal::AssociatedThreadId" = type { %"class.base::RefCountedThreadSafe.27", %"struct.std::__1::atomic" }
%"class.base::RefCountedThreadSafe.27" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory.108" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.blink::scheduler::MainThreadTaskQueue::QueueTraits" = type { i8, i32 }
%"class.absl::optional.109" = type { %"class.absl::optional_internal::optional_data.110" }
%"class.absl::optional_internal::optional_data.110" = type { %"class.absl::optional_internal::optional_data_base.111" }
%"class.absl::optional_internal::optional_data_base.111" = type { %"class.absl::optional_internal::optional_data_dtor_base.112" }
%"class.absl::optional_internal::optional_data_dtor_base.112" = type { i8, %union.anon.113 }
%union.anon.113 = type { i32 }
%"class.absl::optional.114" = type { %"class.absl::optional_internal::optional_data.115" }
%"class.absl::optional_internal::optional_data.115" = type { %"class.absl::optional_internal::optional_data_base.116" }
%"class.absl::optional_internal::optional_data_base.116" = type { %"class.absl::optional_internal::optional_data_dtor_base.117" }
%"class.absl::optional_internal::optional_data_dtor_base.117" = type { i8, %union.anon.118 }
%union.anon.118 = type { i32 }
%"class.blink::scheduler::AgentGroupSchedulerImpl" = type { %"class.blink::AgentGroupScheduler", %class.scoped_refptr.19, %class.scoped_refptr, %class.scoped_refptr.19, %class.scoped_refptr, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::BrowserInterfaceBrokerProxy" }
%"class.blink::AgentGroupScheduler" = type { %"class.blink::scheduler::WebAgentGroupScheduler" }
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::BrowserInterfaceBrokerProxy" = type { %"class.mojo::Remote", %"class.std::__1::map.610" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.604" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.443, %"class.std::__1::unique_ptr.561", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.70, i32 }>
%class.scoped_refptr.443 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.70, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.525", %"class.absl::optional.530", %"class.absl::optional.484", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque.549", %"class.std::__1::map.552", i8, [7 x i8], %class.scoped_refptr.70, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.444" }>
%"class.base::RefCountedThreadSafe.444" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.445" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.446" }
%"struct.std::__1::__compressed_pair_elem.446" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.447 }
%union.anon.447 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.451", %"class.std::__1::unique_ptr.457", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.463" }
%"class.std::__1::unique_ptr.451" = type { %"class.std::__1::__compressed_pair.452" }
%"class.std::__1::__compressed_pair.452" = type { %"struct.std::__1::__compressed_pair_elem.453" }
%"struct.std::__1::__compressed_pair_elem.453" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.457" = type { %"class.std::__1::__compressed_pair.458" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.459" }
%"struct.std::__1::__compressed_pair_elem.459" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.463" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.70, %"class.std::__1::unique_ptr.464", %"class.absl::optional.474", %"struct.std::__1::atomic.480", i8, i8, i8, i8, i32, i32, %"class.absl::optional.484", %"class.std::__1::unique_ptr.489", i8, i64, %class.scoped_refptr.521, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.523", %"class.base::WeakPtrFactory.524" }
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.70, i8, %"class.mojo::ScopedHandleBase.467", %class.scoped_refptr.468, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.469", i8*, %"class.base::WeakPtrFactory.470" }
%"class.mojo::ScopedHandleBase.467" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.468 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.469" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.470" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.474" = type { %"class.absl::optional_internal::optional_data.475" }
%"class.absl::optional_internal::optional_data.475" = type { %"class.absl::optional_internal::optional_data_base.476" }
%"class.absl::optional_internal::optional_data_base.476" = type { %"class.absl::optional_internal::optional_data_dtor_base.477" }
%"class.absl::optional_internal::optional_data_dtor_base.477" = type { i8, %union.anon.478 }
%union.anon.478 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.479", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.479" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"struct.std::__1::atomic.480" = type { %"struct.std::__1::__atomic_base.481" }
%"struct.std::__1::__atomic_base.481" = type { %"struct.std::__1::__cxx_atomic_impl.482" }
%"struct.std::__1::__cxx_atomic_impl.482" = type { %"struct.std::__1::__cxx_atomic_base_impl.483" }
%"struct.std::__1::__cxx_atomic_base_impl.483" = type { i8 }
%"class.std::__1::unique_ptr.489" = type { %"class.std::__1::__compressed_pair.490" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.491" }
%"struct.std::__1::__compressed_pair_elem.491" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.492", i8, i64, %class.scoped_refptr.493, %class.scoped_refptr.517 }
%"class.base::RepeatingCallback.492" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.493 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.495", %"class.std::__1::map.506", i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.494 }
%class.scoped_refptr.494 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.495" = type { %"class.std::__1::__tree.496" }
%"class.std::__1::__tree.496" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.497", %"class.std::__1::__compressed_pair.501" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.497" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.501" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.506" = type { %"class.std::__1::__tree.507" }
%"class.std::__1::__tree.507" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.508", %"class.std::__1::__compressed_pair.512" }
%"class.std::__1::__compressed_pair.508" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"class.std::__1::__compressed_pair.512" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%class.scoped_refptr.517 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.521 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.621", [4 x i8], %"class.base::RepeatingCallback.144", %class.scoped_refptr.70, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.30", [4 x i8] }>
%"class.base::RefCountedThreadSafe.621" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtr.523" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.524" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.525" = type { %"class.absl::optional_internal::optional_data.526" }
%"class.absl::optional_internal::optional_data.526" = type { %"class.absl::optional_internal::optional_data_base.527" }
%"class.absl::optional_internal::optional_data_base.527" = type { %"class.absl::optional_internal::optional_data_dtor_base.528" }
%"class.absl::optional_internal::optional_data_dtor_base.528" = type { i8, %union.anon.529 }
%union.anon.529 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.530" = type { %"class.absl::optional_internal::optional_data.531" }
%"class.absl::optional_internal::optional_data.531" = type { %"class.absl::optional_internal::optional_data_base.532" }
%"class.absl::optional_internal::optional_data_base.532" = type { %"class.absl::optional_internal::optional_data_dtor_base.533" }
%"class.absl::optional_internal::optional_data_dtor_base.533" = type { i8, [7 x i8], %union.anon.534 }
%union.anon.534 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.484" = type { %"class.absl::optional_internal::optional_data.485" }
%"class.absl::optional_internal::optional_data.485" = type { %"class.absl::optional_internal::optional_data_base.486" }
%"class.absl::optional_internal::optional_data_base.486" = type { %"class.absl::optional_internal::optional_data_dtor_base.487" }
%"class.absl::optional_internal::optional_data_dtor_base.487" = type { i8, %union.anon.488 }
%union.anon.488 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.535 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.535 = type { %"class.std::__1::map.538" }
%"class.std::__1::map.538" = type { %"class.std::__1::__tree.539" }
%"class.std::__1::__tree.539" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.540", %"class.std::__1::__compressed_pair.544" }
%"class.std::__1::__compressed_pair.540" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::circular_deque.549" = type { %"class.base::internal::VectorBuffer.550", i64, i64 }
%"class.base::internal::VectorBuffer.550" = type { %"class.std::__1::unique_ptr.551"*, i64 }
%"class.std::__1::unique_ptr.551" = type opaque
%"class.std::__1::map.552" = type { %"class.std::__1::__tree.553" }
%"class.std::__1::__tree.553" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.554", %"class.std::__1::__compressed_pair.558" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"class.std::__1::__compressed_pair.558" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.561" = type { %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.563" }
%"struct.std::__1::__compressed_pair_elem.563" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.144", %"class.base::OnceCallback.564", %"class.absl::optional.138", %"class.absl::optional.565", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.571", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.579", %"class.std::__1::map.590", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.599", i8, %class.scoped_refptr.70, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.600" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.564" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.138" = type { %"class.absl::optional_internal::optional_data.139" }
%"class.absl::optional_internal::optional_data.139" = type { %"class.absl::optional_internal::optional_data_base.140" }
%"class.absl::optional_internal::optional_data_base.140" = type { %"class.absl::optional_internal::optional_data_dtor_base.141" }
%"class.absl::optional_internal::optional_data_dtor_base.141" = type { i8, %union.anon.142 }
%union.anon.142 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.565" = type { %"class.absl::optional_internal::optional_data.566" }
%"class.absl::optional_internal::optional_data.566" = type { %"class.absl::optional_internal::optional_data_base.567" }
%"class.absl::optional_internal::optional_data_base.567" = type { %"class.absl::optional_internal::optional_data_dtor_base.568" }
%"class.absl::optional_internal::optional_data_dtor_base.568" = type { i8, %union.anon.569 }
%union.anon.569 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.70, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.238" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.238" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.570 }
%class.scoped_refptr.570 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.571" = type { %"class.std::__1::__compressed_pair.572" }
%"class.std::__1::__compressed_pair.572" = type { %"struct.std::__1::__compressed_pair_elem.573" }
%"struct.std::__1::__compressed_pair_elem.573" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.574", %class.scoped_refptr.575 }
%"class.base::RepeatingCallback.574" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.575 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.444", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.579" = type { %"class.std::__1::__tree.580" }
%"class.std::__1::__tree.580" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.581", %"class.std::__1::__compressed_pair.585" }
%"class.std::__1::__compressed_pair.581" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"class.std::__1::__compressed_pair.585" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.590" = type { %"class.std::__1::__tree.591" }
%"class.std::__1::__tree.591" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.592", %"class.std::__1::__compressed_pair.596" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"class.std::__1::__compressed_pair.596" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::OnceCallback.599" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.600" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.604" = type { %"class.std::__1::__compressed_pair.605" }
%"class.std::__1::__compressed_pair.605" = type { %"struct.std::__1::__compressed_pair_elem.606" }
%"struct.std::__1::__compressed_pair_elem.606" = type { %"class.blink::mojom::BrowserInterfaceBrokerProxy"* }
%"class.blink::mojom::BrowserInterfaceBrokerProxy" = type { %"class.blink::mojom::BrowserInterfaceBroker", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::BrowserInterfaceBroker" = type { i32 (...)** }
%"class.std::__1::map.610" = type { %"class.std::__1::__tree.611" }
%"class.std::__1::__tree.611" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.612", %"class.std::__1::__compressed_pair.616" }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::WeakPtrFactory.176" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.WTF::HashSet.422" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %class.scoped_refptr.19*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.426" = type { %"class.WTF::HashTable.427" }
%"class.WTF::HashTable.427" = type <{ %"struct.WTF::KeyValuePair.430"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.430" = type { %class.scoped_refptr.19, %"class.std::__1::unique_ptr.431" }
%"class.std::__1::unique_ptr.431" = type { %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.433" }
%"struct.std::__1::__compressed_pair_elem.433" = type { %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* }
%"class.base::sequence_manager::TaskQueue::QueueEnabledVoter" = type <{ %class.scoped_refptr.21, i8, [7 x i8] }>
%"class.WTF::Vector.437" = type { %"class.WTF::VectorBuffer.438" }
%"class.WTF::VectorBuffer.438" = type { %"class.WTF::VectorBufferBase.439" }
%"class.WTF::VectorBufferBase.439" = type { %"struct.std::__1::pair.440"*, i32, i32 }
%"struct.std::__1::pair.440" = type { %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type { %"class.blink::scheduler::ThreadSchedulerImpl", %"class.blink::scheduler::AgentSchedulingStrategy::Delegate", %"class.blink::scheduler::IdleHelper::Delegate", %"class.blink::scheduler::SchedulerHelper::Observer", %"class.blink::scheduler::RenderWidgetSignals::Observer", %"class.base::trace_event::TraceLog::AsyncEnabledStateObserver", i8, i8, [6 x i8], %"class.blink::scheduler::TraceableVariableController", %"struct.blink::scheduler::MainThreadSchedulerImpl::SchedulingSettings", %"class.std::__1::unique_ptr.14", %"class.blink::scheduler::MainThreadSchedulerHelper", %class.scoped_refptr.19, %"class.blink::scheduler::IdleHelper", %"class.std::__1::unique_ptr.192", %"class.blink::scheduler::RenderWidgetSignals", %"class.std::__1::unique_ptr.216", %class.scoped_refptr.19, %class.scoped_refptr.19, %class.scoped_refptr.19, %class.scoped_refptr.19, %"class.std::__1::map", %class.scoped_refptr.19, %class.scoped_refptr.19, %class.scoped_refptr.19, %class.scoped_refptr, %class.scoped_refptr, %class.scoped_refptr, %class.scoped_refptr, %class.scoped_refptr, %"class.blink::MemoryPurgeManager", %"class.std::__1::unique_ptr.239", %"class.blink::scheduler::NonWakingTimeDomain", %"class.base::RepeatingCallback.144", %"class.blink::scheduler::DeadlineTaskRunner", %"class.blink::scheduler::CancelableClosureHolder", %"class.base::RepeatingCallback.144", %"class.base::RepeatingCallback.252", %"class.std::__1::unique_ptr.253", %"struct.blink::scheduler::MainThreadSchedulerImpl::MainThreadOnly", %"class.base::Lock", %"struct.blink::scheduler::MainThreadSchedulerImpl::AnyThread", %"struct.blink::scheduler::MainThreadSchedulerImpl::CompositorThreadOnly", %class.PollableThreadSafeFlag, %class.PollableThreadSafeFlag, %"class.WTF::HashSet.412", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.base::WeakPtrFactory.416" }
%"class.blink::scheduler::ThreadSchedulerImpl" = type { %"class.blink::ThreadScheduler", %"class.blink::scheduler::WebThreadScheduler", %"class.v8::Isolate"* }
%"class.blink::ThreadScheduler" = type { i32 (...)** }
%"class.blink::scheduler::WebThreadScheduler" = type { i32 (...)** }
%"class.v8::Isolate" = type opaque
%"class.blink::scheduler::AgentSchedulingStrategy::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::IdleHelper::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::SchedulerHelper::Observer" = type { i32 (...)** }
%"class.blink::scheduler::RenderWidgetSignals::Observer" = type { i32 (...)** }
%"class.blink::scheduler::TraceableVariableController" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.11", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { float }
%"struct.blink::scheduler::MainThreadSchedulerImpl::SchedulingSettings" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.std::__1::array", i8, i8 }
%"struct.std::__1::array" = type { [6 x i8] }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.base::sequence_manager::SequenceManager"* }
%"class.base::sequence_manager::SequenceManager" = type { i32 (...)** }
%"class.blink::scheduler::MainThreadSchedulerHelper" = type { %"class.blink::scheduler::SchedulerHelper", %"class.blink::scheduler::MainThreadSchedulerImpl"*, %class.scoped_refptr.19, %class.scoped_refptr.19 }
%"class.blink::scheduler::SchedulerHelper" = type { %"class.base::sequence_manager::SequenceManager::Observer", %"class.base::sequence_manager::SequenceManager"*, %class.scoped_refptr, %"class.blink::scheduler::SchedulerHelper::Observer"*, %"class.blink::scheduler::UkmTaskSampler", %"class.absl::optional" }
%"class.base::sequence_manager::SequenceManager::Observer" = type { i32 (...)** }
%"class.blink::scheduler::UkmTaskSampler" = type { double, double, %"class.std::__1::mersenne_twister_engine" }
%"class.std::__1::mersenne_twister_engine" = type { [312 x i64], i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::SimpleTaskExecutor" }
%"class.base::SimpleTaskExecutor" = type { %"class.base::TaskExecutor", %class.scoped_refptr, %"class.base::TaskExecutor"* }
%"class.base::TaskExecutor" = type { i32 (...)** }
%"class.blink::scheduler::IdleHelper" = type { %"class.base::TaskObserver", %"class.blink::scheduler::SingleThreadIdleTaskRunner::Delegate", %"class.blink::scheduler::SchedulerHelper"*, %"class.blink::scheduler::IdleHelper::Delegate"*, %class.scoped_refptr.21, %class.scoped_refptr.177, %"class.blink::scheduler::CancelableClosureHolder", %"class.blink::scheduler::CancelableClosureHolder", %"class.blink::scheduler::IdleHelper::State", %"class.base::TimeDelta", i8, %"class.base::WeakPtr.190", %"class.base::WeakPtrFactory.191" }
%"class.base::TaskObserver" = type { i32 (...)** }
%"class.blink::scheduler::SingleThreadIdleTaskRunner::Delegate" = type { i32 (...)** }
%class.scoped_refptr.177 = type { %"class.blink::scheduler::SingleThreadIdleTaskRunner"* }
%"class.blink::scheduler::SingleThreadIdleTaskRunner" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.178", %class.scoped_refptr, %"class.std::__1::multimap", %"class.blink::scheduler::SingleThreadIdleTaskRunner::Delegate"*, %"class.base::trace_event::BlameContext"*, %"class.base::WeakPtr.188", %"class.base::WeakPtrFactory.189" }
%"class.base::RefCountedThreadSafe.178" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.179", %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::WeakPtr.188" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.189" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::scheduler::IdleHelper::State" = type { i32 (...)**, %"class.blink::scheduler::SchedulerHelper"*, %"class.blink::scheduler::IdleHelper::Delegate"*, i32, %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i8, i8*, i8* }
%"class.base::WeakPtr.190" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.191" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.blink::scheduler::TaskQueueThrottler"* }
%"class.blink::scheduler::TaskQueueThrottler" = type { %"class.blink::scheduler::BudgetPoolController", %"class.WTF::HashMap.195", %"class.base::RepeatingCallback.200", %class.scoped_refptr, %"class.blink::scheduler::ThreadSchedulerImpl"*, %"class.blink::scheduler::TraceableVariableController"*, %"class.base::TickClock"*, %"class.std::__1::unique_ptr.201", %"class.blink::scheduler::CancelableClosureHolder", %"class.absl::optional.54", i8, [7 x i8], %"class.WTF::HashMap.207", %"class.base::WeakPtrFactory.212" }
%"class.blink::scheduler::BudgetPoolController" = type { i32 (...)** }
%"class.WTF::HashMap.195" = type { %"class.WTF::HashTable.196" }
%"class.WTF::HashTable.196" = type <{ %"struct.WTF::KeyValuePair.199"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.199" = type opaque
%"class.base::RepeatingCallback.200" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.201" = type { %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"class.blink::scheduler::ThrottledTimeDomain"* }
%"class.blink::scheduler::ThrottledTimeDomain" = type opaque
%"class.WTF::HashMap.207" = type { %"class.WTF::HashTable.208" }
%"class.WTF::HashTable.208" = type <{ %"struct.WTF::KeyValuePair.211"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.211" = type opaque
%"class.base::WeakPtrFactory.212" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::scheduler::RenderWidgetSignals" = type { %"class.blink::scheduler::RenderWidgetSignals::Observer"*, i32, i32 }
%"class.std::__1::unique_ptr.216" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.blink::scheduler::FindInPageBudgetPoolController"* }
%"class.blink::scheduler::FindInPageBudgetPoolController" = type <{ %"class.blink::scheduler::BudgetPoolController", %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.std::__1::unique_ptr.219", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::scheduler::CPUTimeBudgetPool"* }
%"class.blink::scheduler::CPUTimeBudgetPool" = type { %"class.blink::scheduler::BudgetPool.base", %"class.absl::optional.138", %"class.absl::optional.138", %"class.base::TimeDelta", %"class.blink::scheduler::TraceableCounter", %"class.base::TimeTicks", double, %"class.base::RepeatingCallback.143" }
%"class.blink::scheduler::BudgetPool.base" = type <{ i32 (...)**, i8*, %"class.blink::scheduler::BudgetPoolController"*, %"class.WTF::HashSet.134", i8 }>
%"class.WTF::HashSet.134" = type { %"class.WTF::HashTable.135" }
%"class.WTF::HashTable.135" = type <{ %"class.base::sequence_manager::TaskQueue"**, i32, i32, i32, [4 x i8] }>
%"class.blink::scheduler::TraceableCounter" = type { %"class.blink::scheduler::TraceableVariable", i8*, double (%"class.base::TimeDelta"*)*, %"class.base::TimeDelta" }
%"class.blink::scheduler::TraceableVariable" = type { i32 (...)**, %"class.blink::scheduler::TraceableVariableController"* }
%"class.base::RepeatingCallback.143" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.228" }
%"class.std::__1::__tree.228" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.229", %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.blink::MemoryPurgeManager" = type { i8, i8, i32, i32, %"class.base::OneShotTimer" }
%"class.std::__1::unique_ptr.239" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* }
%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain" = type { %"class.base::sequence_manager::TimeDomain", %"class.base::TaskObserver", i32, i32, i8, %"class.blink::scheduler::SchedulerHelper"*, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::Lock", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::Time", %"class.base::Time", %"class.std::__1::unique_ptr.243" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.242" }
%"class.base::time_internal::TimeBase.242" = type { i64 }
%"class.std::__1::unique_ptr.243" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"class.base::subtle::ScopedTimeClockOverrides"* }
%"class.base::subtle::ScopedTimeClockOverrides" = type { i8 }
%"class.blink::scheduler::NonWakingTimeDomain" = type { %"class.base::sequence_manager::TimeDomain", %"class.base::TickClock"* }
%"class.blink::scheduler::DeadlineTaskRunner" = type { %"class.blink::scheduler::CancelableClosureHolder", %"class.base::RepeatingCallback.144", %"class.base::TimeTicks", %class.scoped_refptr }
%"class.blink::scheduler::CancelableClosureHolder" = type { %"class.base::RepeatingCallback.144", %"class.base::internal::CancelableCallbackImpl" }
%"class.base::internal::CancelableCallbackImpl" = type { %"class.base::RepeatingCallback.144", %"class.base::WeakPtrFactory.145" }
%"class.base::WeakPtrFactory.145" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::RepeatingCallback.252" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.blink::scheduler::AgentSchedulingStrategy"* }
%"class.blink::scheduler::AgentSchedulingStrategy" = type { i32 (...)** }
%"struct.blink::scheduler::MainThreadSchedulerImpl::MainThreadOnly" = type { %"class.blink::scheduler::IdleTimeEstimator", %"class.blink::scheduler::TraceableState.278", %"class.blink::scheduler::MainThreadSchedulerImpl::Policy", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.blink::scheduler::TraceableCounter.282", %"class.blink::scheduler::TraceableCounter.283", %"class.blink::scheduler::TraceableObjectState", %"class.blink::scheduler::TraceableState.291", %"class.absl::optional.295", %"class.blink::scheduler::TraceableState.291", %"class.blink::scheduler::TraceableState.307", %"class.blink::scheduler::TraceableState.307", %"class.blink::scheduler::TraceableState.309", %"class.blink::scheduler::TraceableState.309", %"class.blink::scheduler::TraceableState.309", %"class.blink::scheduler::TraceableState.309", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState.291", %"class.blink::scheduler::TraceableState.309", %"class.blink::scheduler::TraceableState.309", %"class.blink::scheduler::TraceableState.309", %"class.base::TimeTicks", %"class.WTF::HashSet.313", %"class.base::ObserverList.317", %"class.blink::scheduler::MainThreadMetricsHelper", %"class.blink::scheduler::TraceableState.338", %"class.blink::scheduler::TraceableState.340", %"class.blink::scheduler::TraceableState.351", %"class.base::Time", %"class.base::TimeTicks", %"class.base::TimeDelta", i32, i32, i32, i8, %"class.std::__1::stack", i32, [4 x i8], %"class.blink::scheduler::TraceableState.307", %"class.WTF::Vector.365", %"class.blink::scheduler::CompositorPriorityExperiments", i8, [7 x i8], %"class.blink::scheduler::TraceableState.376", %"class.WTF::Vector.378", %"class.std::__1::unique_ptr.169" }
%"class.blink::scheduler::IdleTimeEstimator" = type <{ %"class.base::TaskObserver", %"class.cc::RollingTimeDeltaHistory", %"class.base::TickClock"*, double, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", i32, i8, [3 x i8] }>
%"class.cc::RollingTimeDeltaHistory" = type { %"class.std::__1::multiset", %"class.base::circular_deque", i64, %"class.base::flat_map.268" }
%"class.std::__1::multiset" = type { %"class.std::__1::__tree.259" }
%"class.std::__1::__tree.259" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.260", %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::__tree_const_iterator"*, i64 }
%"class.std::__1::__tree_const_iterator" = type opaque
%"class.base::flat_map.268" = type { %"class.base::internal::flat_tree.269" }
%"class.base::internal::flat_tree.269" = type { %"class.std::__1::vector.270" }
%"class.std::__1::vector.270" = type { %"class.std::__1::__vector_base.271" }
%"class.std::__1::__vector_base.271" = type { %"struct.std::__1::pair.272"*, %"struct.std::__1::pair.272"*, %"class.std::__1::__compressed_pair.273" }
%"struct.std::__1::pair.272" = type opaque
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.274" }
%"struct.std::__1::__compressed_pair_elem.274" = type { %"struct.std::__1::pair.272"* }
%"class.blink::scheduler::TraceableState.278" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base.280", [7 x i8], void (i8*)*, i8* (i32)*, i32, [4 x i8] }>
%"class.blink::scheduler::StateTracer.base.280" = type <{ i8*, i8 }>
%"class.blink::scheduler::MainThreadSchedulerImpl::Policy" = type { i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32 }
%"class.blink::scheduler::TraceableCounter.282" = type { %"class.blink::scheduler::TraceableVariable", i8*, double (%"class.base::TimeDelta"*)*, %"class.base::TimeDelta" }
%"class.blink::scheduler::TraceableCounter.283" = type <{ %"class.blink::scheduler::TraceableVariable", i8*, double (i32*)*, i32, [4 x i8] }>
%"class.blink::scheduler::TraceableObjectState" = type { %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::ProtoStateTracer.base", i32, void (%"class.perfetto::protos::pbzero::TrackEvent"*, i32)* }
%"class.blink::scheduler::ProtoStateTracer.base" = type <{ i8*, i8 }>
%"class.perfetto::protos::pbzero::TrackEvent" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list.284" }
%"class.std::__1::list.284" = type { %"class.std::__1::__list_imp.285" }
%"class.std::__1::__list_imp.285" = type { %"struct.std::__1::__list_node_base.286", %"class.std::__1::__compressed_pair.287" }
%"struct.std::__1::__list_node_base.286" = type { %"struct.std::__1::__list_node_base.286"*, %"struct.std::__1::__list_node_base.286"* }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.absl::optional.295" = type { %"class.absl::optional_internal::optional_data.296" }
%"class.absl::optional_internal::optional_data.296" = type { %"class.absl::optional_internal::optional_data_base.297" }
%"class.absl::optional_internal::optional_data_base.297" = type { %"class.absl::optional_internal::optional_data_dtor_base.298" }
%"class.absl::optional_internal::optional_data_dtor_base.298" = type { i8, %union.anon.299 }
%union.anon.299 = type { %"class.base::ScopedSampleMetadata" }
%"class.base::ScopedSampleMetadata" = type { i64, %"class.absl::optional.300" }
%"class.absl::optional.300" = type { %"class.absl::optional_internal::optional_data.301" }
%"class.absl::optional_internal::optional_data.301" = type { %"class.absl::optional_internal::optional_data_base.302" }
%"class.absl::optional_internal::optional_data_base.302" = type { %"class.absl::optional_internal::optional_data_dtor_base.303" }
%"class.absl::optional_internal::optional_data_dtor_base.303" = type { i8, %union.anon.304 }
%union.anon.304 = type { i64 }
%"class.blink::scheduler::TraceableState" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base", [7 x i8], void (i8*)*, i8* (i1)*, i8, [7 x i8] }>
%"class.blink::scheduler::StateTracer.base" = type <{ i8*, i8 }>
%"class.blink::scheduler::TraceableState.291" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base.293", [7 x i8], void (i8*)*, i8* (i1)*, i8, [7 x i8] }>
%"class.blink::scheduler::StateTracer.base.293" = type <{ i8*, i8 }>
%"class.blink::scheduler::TraceableState.309" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base.311", [7 x i8], void (i8*)*, i8* (i1)*, i8, [7 x i8] }>
%"class.blink::scheduler::StateTracer.base.311" = type <{ i8*, i8 }>
%"class.WTF::HashSet.313" = type { %"class.WTF::HashTable.314" }
%"class.WTF::HashTable.314" = type <{ %"class.blink::scheduler::PageSchedulerImpl"**, i32, i32, i32, [4 x i8] }>
%"class.blink::scheduler::PageSchedulerImpl" = type { %"class.blink::PageScheduler", i8, [7 x i8], %"class.blink::scheduler::TraceableVariableController", %"class.WTF::HashSet", %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::AgentGroupSchedulerImpl"*, i32, %"class.base::TimeTicks", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::scheduler::CPUTimeBudgetPool"*, %"class.blink::scheduler::WakeUpBudgetPool"*, %"class.blink::scheduler::WakeUpBudgetPool"*, %"class.blink::scheduler::WakeUpBudgetPool"*, %"class.blink::PageScheduler::Delegate"*, %"class.blink::scheduler::CancelableClosureHolder", %"class.blink::scheduler::CancelableClosureHolder", %"class.blink::scheduler::CancelableClosureHolder", %"class.blink::scheduler::CancelableClosureHolder", %"class.blink::scheduler::CancelableClosureHolder", %"class.base::TimeDelta", i8, %"class.base::TimeDelta", i8, %"class.blink::TaskHandle", %"class.base::TimeTicks", %"class.std::__1::unique_ptr.147", %"class.base::WeakPtrFactory.153" }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.131" }
%"class.WTF::HashTable.131" = type <{ %"class.blink::scheduler::FrameSchedulerImpl"**, i32, i32, i32, [4 x i8] }>
%"class.blink::scheduler::WakeUpBudgetPool" = type { %"class.blink::scheduler::BudgetPool.base", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, %"class.absl::optional.54" }
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.146 }
%class.scoped_refptr.146 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.blink::scheduler::PageSchedulerImpl::PageLifecycleStateTracker"* }
%"class.blink::scheduler::PageSchedulerImpl::PageLifecycleStateTracker" = type <{ %"class.blink::scheduler::PageSchedulerImpl"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.153" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::ObserverList.317" = type <{ %"class.std::__1::vector.77", %"class.base::LinkedList.318", i64, i32, [4 x i8] }>
%"class.base::LinkedList.318" = type { %"class.base::LinkNode.319" }
%"class.base::LinkNode.319" = type { %"class.base::internal::LinkNodeBase" }
%"class.blink::scheduler::MainThreadMetricsHelper" = type <{ %"class.blink::scheduler::MetricsHelper", %"class.blink::scheduler::MainThreadSchedulerImpl"*, i8, [7 x i8], %"class.absl::optional.54", %"class.blink::scheduler::ThreadLoadTracker", %"class.blink::scheduler::ThreadLoadTracker", %"class.blink::scheduler::ThreadLoadTracker", %"class.scheduling_metrics::TaskDurationMetricReporter.337", %"class.scheduling_metrics::TaskDurationMetricReporter.337", %"class.scheduling_metrics::TaskDurationMetricReporter.337", %"class.scheduling_metrics::TaskDurationMetricReporter.337", %"class.scheduling_metrics::TaskDurationMetricReporter.337", %"class.scheduling_metrics::TaskDurationMetricReporter.337", %"class.scheduling_metrics::TaskDurationMetricReporter.337", %"class.scheduling_metrics::TaskDurationMetricReporter.337", %"class.scheduling_metrics::TotalDurationMetricReporter", i32, [4 x i8], %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.blink::scheduler::MetricsHelper" = type { i32, %"class.scheduling_metrics::ThreadMetrics", %"class.scheduling_metrics::TaskDurationMetricReporter.335", %"class.scheduling_metrics::TaskDurationMetricReporter.335", %"class.scheduling_metrics::TaskDurationMetricReporter.335", %"class.scheduling_metrics::TaskDurationMetricReporter.335", %"class.scheduling_metrics::TaskDurationMetricReporter.335", %"class.scheduling_metrics::TaskDurationMetricReporter.335" }
%"class.scheduling_metrics::ThreadMetrics" = type { i32, i8, %"class.base::ThreadTicks", %"class.scheduling_metrics::TaskDurationMetricReporter", %"class.scheduling_metrics::TaskDurationMetricReporter", %"class.scheduling_metrics::TaskDurationMetricReporter", %"class.scheduling_metrics::TaskDurationMetricReporter" }
%"class.base::ThreadTicks" = type { %"class.base::time_internal::TimeBase.321" }
%"class.base::time_internal::TimeBase.321" = type { i64 }
%"class.scheduling_metrics::TaskDurationMetricReporter" = type { %"class.std::__1::unique_ptr.322" }
%"class.std::__1::unique_ptr.322" = type { %"class.std::__1::__compressed_pair.323" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"class.base::ScaledLinearHistogram"* }
%"class.base::ScaledLinearHistogram" = type { %"class.base::HistogramBase"*, i32, %"class.std::__1::vector.325" }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.30", [4 x i8] }>
%"class.std::__1::vector.325" = type { %"class.std::__1::__vector_base.326" }
%"class.std::__1::__vector_base.326" = type { i32*, i32*, %"class.std::__1::__compressed_pair.327" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.328" = type { i32* }
%"class.scheduling_metrics::TaskDurationMetricReporter.335" = type { %"class.std::__1::unique_ptr.322" }
%"class.blink::scheduler::ThreadLoadTracker" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", i32, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::RepeatingCallback.336" }
%"class.base::RepeatingCallback.336" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.scheduling_metrics::TaskDurationMetricReporter.337" = type { %"class.std::__1::unique_ptr.322" }
%"class.scheduling_metrics::TotalDurationMetricReporter" = type { %"class.absl::optional.138", %"class.base::HistogramBase"*, %"class.base::HistogramBase"* }
%"class.blink::scheduler::TraceableState.338" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base.293", [7 x i8], void (i8*)*, i8* (i32)*, i32, [4 x i8] }>
%"class.blink::scheduler::TraceableState.340" = type { %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base", void (i8*)*, i8* (i64, i64)*, %"class.absl::optional.341" }
%"class.absl::optional.341" = type { %"class.absl::optional_internal::optional_data.342" }
%"class.absl::optional_internal::optional_data.342" = type { %"class.absl::optional_internal::optional_data_base.343" }
%"class.absl::optional_internal::optional_data_base.343" = type { %"class.absl::optional_internal::optional_data_dtor_base.344" }
%"class.absl::optional_internal::optional_data_dtor_base.344" = type { i8, %union.anon.345 }
%union.anon.345 = type { %"struct.blink::scheduler::MainThreadSchedulerImpl::TaskDescriptionForTracing" }
%"struct.blink::scheduler::MainThreadSchedulerImpl::TaskDescriptionForTracing" = type { i8, %"class.absl::optional.346" }
%"class.absl::optional.346" = type { %"class.absl::optional_internal::optional_data.347" }
%"class.absl::optional_internal::optional_data.347" = type { %"class.absl::optional_internal::optional_data_base.348" }
%"class.absl::optional_internal::optional_data_base.348" = type { %"class.absl::optional_internal::optional_data_dtor_base.349" }
%"class.absl::optional_internal::optional_data_dtor_base.349" = type { i8, %union.anon.350 }
%union.anon.350 = type { i32 }
%"class.blink::scheduler::TraceableState.351" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base", [7 x i8], void (i8*)*, i8* (i16)*, %"class.absl::optional.352", [6 x i8] }>
%"class.absl::optional.352" = type { %"class.absl::optional_internal::optional_data.353" }
%"class.absl::optional_internal::optional_data.353" = type { %"class.absl::optional_internal::optional_data_base.354" }
%"class.absl::optional_internal::optional_data_base.354" = type { %"class.absl::optional_internal::optional_data_dtor_base.355" }
%"class.absl::optional_internal::optional_data_dtor_base.355" = type { i8, %union.anon.356 }
%union.anon.356 = type { i8 }
%"class.std::__1::stack" = type { %"class.std::__1::vector.358" }
%"class.std::__1::vector.358" = type { %"class.std::__1::__vector_base.359" }
%"class.std::__1::__vector_base.359" = type { %class.scoped_refptr.19*, %class.scoped_refptr.19*, %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %class.scoped_refptr.19* }
%"class.blink::scheduler::TraceableState.307" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base.280", [7 x i8], void (i8*)*, i8* (i1)*, i8, [7 x i8] }>
%"class.WTF::Vector.365" = type { %"class.WTF::VectorBuffer.366" }
%"class.WTF::VectorBuffer.366" = type { %"class.WTF::VectorBufferBase.367" }
%"class.WTF::VectorBufferBase.367" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.blink::scheduler::CompositorPriorityExperiments" = type <{ %"class.blink::scheduler::MainThreadSchedulerImpl"*, i32, i8, i8, [2 x i8], %"class.base::TimeTicks", %"class.base::TimeDelta", i8, [7 x i8], %"class.std::__1::unique_ptr.370", i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.370" = type { %"class.std::__1::__compressed_pair.371" }
%"class.std::__1::__compressed_pair.371" = type { %"struct.std::__1::__compressed_pair_elem.372" }
%"struct.std::__1::__compressed_pair_elem.372" = type { %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"* }
%"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController" = type <{ %"class.blink::scheduler::BudgetPoolController", %"class.blink::scheduler::CompositorPriorityExperiments"*, %"class.std::__1::unique_ptr.219", i8, [7 x i8] }>
%"class.blink::scheduler::TraceableState.376" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base.280", [7 x i8], void (i8*)*, i8* (i8)*, i8, [7 x i8] }>
%"class.WTF::Vector.378" = type { %"class.WTF::VectorBuffer.379" }
%"class.WTF::VectorBuffer.379" = type { %"class.WTF::VectorBufferBase.380" }
%"class.WTF::VectorBufferBase.380" = type { %"struct.blink::scheduler::MainThreadSchedulerImpl::AgentGroupSchedulerScope"*, i32, i32 }
%"struct.blink::scheduler::MainThreadSchedulerImpl::AgentGroupSchedulerScope" = type { %"class.std::__1::unique_ptr.381", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::scheduler::WebAgentGroupScheduler"*, %class.scoped_refptr, %class.scoped_refptr, i8*, i8* }
%"class.std::__1::unique_ptr.381" = type { %"class.std::__1::__compressed_pair.382" }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.383" }
%"struct.std::__1::__compressed_pair_elem.383" = type { %"class.base::ThreadTaskRunnerHandleOverride"* }
%"class.base::ThreadTaskRunnerHandleOverride" = type <{ %"class.absl::optional.384", %class.scoped_refptr, %"class.absl::optional.389", [6 x i8] }>
%"class.absl::optional.384" = type { %"class.absl::optional_internal::optional_data.385" }
%"class.absl::optional_internal::optional_data.385" = type { %"class.absl::optional_internal::optional_data_base.386" }
%"class.absl::optional_internal::optional_data_base.386" = type { %"class.absl::optional_internal::optional_data_dtor_base.387" }
%"class.absl::optional_internal::optional_data_dtor_base.387" = type { i8, %union.anon.388 }
%union.anon.388 = type { %"class.base::ThreadTaskRunnerHandle" }
%"class.base::ThreadTaskRunnerHandle" = type { %class.scoped_refptr, %"class.base::SequencedTaskRunnerHandle" }
%"class.base::SequencedTaskRunnerHandle" = type { %class.scoped_refptr.70 }
%"class.absl::optional.389" = type { %"class.absl::optional_internal::optional_data.390" }
%"class.absl::optional_internal::optional_data.390" = type { %"class.absl::optional_internal::optional_data_base.391" }
%"class.absl::optional_internal::optional_data_base.391" = type { %"class.absl::optional_internal::optional_data_dtor_base.392" }
%"class.absl::optional_internal::optional_data_dtor_base.392" = type { i8, %union.anon.393 }
%union.anon.393 = type { %"class.base::RunLoop::ScopedDisallowRunning" }
%"class.base::RunLoop::ScopedDisallowRunning" = type { i8 }
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.power_scheduler::PowerModeVoter"* }
%"class.power_scheduler::PowerModeVoter" = type { %"class.power_scheduler::PowerModeVoter::Delegate"* }
%"class.power_scheduler::PowerModeVoter::Delegate" = type { i32 (...)** }
%"struct.blink::scheduler::MainThreadSchedulerImpl::AnyThread" = type { %"class.blink::scheduler::PendingUserInput::Monitor", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::scheduler::UserModel", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableCounter.404" }
%"class.blink::scheduler::PendingUserInput::Monitor" = type { %"class.WTF::HashMap.399" }
%"class.WTF::HashMap.399" = type { %"class.WTF::HashTable.400" }
%"class.WTF::HashTable.400" = type <{ %"struct.WTF::KeyValuePair.403"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.403" = type opaque
%"class.blink::scheduler::UserModel" = type <{ i32, [4 x i8], %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.blink::scheduler::TraceableCounter.404" = type <{ %"class.blink::scheduler::TraceableVariable", i8*, double (i32*)*, i32, [4 x i8] }>
%"struct.blink::scheduler::MainThreadSchedulerImpl::CompositorThreadOnly" = type { i32, %"class.std::__1::unique_ptr.406" }
%"class.std::__1::unique_ptr.406" = type { %"class.std::__1::__compressed_pair.407" }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"class.base::ThreadChecker"* }
%class.PollableThreadSafeFlag = type { i32, %"class.base::Lock"* }
%"class.WTF::HashSet.412" = type { %"class.WTF::HashTable.413" }
%"class.WTF::HashTable.413" = type <{ %"class.blink::scheduler::AgentGroupSchedulerImpl"**, i32, i32, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.416" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::scheduler::FrameSchedulerImpl" = type { %"class.blink::FrameScheduler", %"class.blink::scheduler::FrameTaskQueueController::Delegate", i32, i8, %"class.base::TimeDelta", %"class.blink::scheduler::TraceableVariableController", %"class.std::__1::unique_ptr.120", %"class.WTF::HashMap.126", %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::PageSchedulerImpl"*, %"class.blink::FrameScheduler::Delegate"*, %"class.base::trace_event::BlameContext"*, i32, [4 x i8], %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState.154", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::StateTracer", %"class.blink::scheduler::TraceableState", %"class.WTF::Vector", %"class.blink::scheduler::TraceableState", i32, [4 x i8], %"class.blink::scheduler::TraceableState", i64, %"class.base::flat_map", %"class.std::__1::bitset", %"class.blink::scheduler::TraceableState", i64, i8, i8, [6 x i8], %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState.167", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.std::__1::unique_ptr.169", %"class.base::WeakPtrFactory.175", %"class.base::WeakPtrFactory.175", %"class.base::WeakPtrFactory.175" }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap", %"class.base::WeakPtrFactory.119" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.base::WeakPtrFactory.119" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::scheduler::FrameTaskQueueController::Delegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.blink::scheduler::FrameTaskQueueController"* }
%"class.WTF::HashMap.126" = type { %"class.WTF::HashTable.127" }
%"class.WTF::HashTable.127" = type <{ %"struct.WTF::KeyValuePair.130"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.130" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::TraceableState.154" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base", [7 x i8], void (i8*)*, i8* (i32)*, i32, [4 x i8] }>
%"class.blink::scheduler::StateTracer" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::scheduler::MainThreadTaskQueue::ThrottleHandle"*, i32, i32 }
%"class.blink::scheduler::MainThreadTaskQueue::ThrottleHandle" = type { %"class.base::WeakPtr.156", %"class.base::WeakPtr.157" }
%"class.base::WeakPtr.156" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtr.157" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.160" }
%"class.std::__1::vector.160" = type { %"class.std::__1::__vector_base.161" }
%"class.std::__1::__vector_base.161" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.162" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"struct.std::__1::pair"* }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.blink::scheduler::TraceableState.167" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base", [7 x i8], void (i8*)*, i8* (i32)*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.175" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams" = type <{ i32, [4 x i8], %"struct.base::sequence_manager::TaskQueue::Spec", %"class.blink::scheduler::AgentGroupSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"*, %"struct.blink::scheduler::MainThreadTaskQueue::QueueTraits", i8, [3 x i8], %"class.absl::optional.114", [4 x i8] }>
%"struct.base::sequence_manager::TaskQueue::Spec" = type <{ i8*, i8, [7 x i8], %"class.base::sequence_manager::TimeDomain"*, i8, i8, [6 x i8] }>
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.perfetto::TracedDictionary" = type <{ %"class.protozero::Message"*, i32, %"class.perfetto::internal::CheckedScope", [3 x i8] }>
%"class.WTF::HashMap<int, scoped_refptr<blink::scheduler::MainThreadTaskQueue>, WTF::IntHash<int>, WTF::HashTraits<int>, WTF::HashTraits<scoped_refptr<blink::scheduler::MainThreadTaskQueue> >, WTF::PartitionAllocator>::HashMapValuesProxy" = type { %"class.WTF::HashMap.417" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.perfetto::TracedArray" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>

$_ZN3WTF9HashTableI13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEENS_12KeyValuePairIS5_NSt3__110unique_ptrIN4base16sequence_manager9TaskQueue17QueueEnabledVoterENS7_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSL_ISF_EEEESM_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPSG_j = comdat any

$_ZN3WTF9HashTableI13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEES5_NS_17IdentityExtractorENS_10RefPtrHashIS4_EENS_10HashTraitsIS5_EESA_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS8_SA_SB_EERKS5_RS5_EENS_18HashTableAddResultISC_S5_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableI13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEES5_NS_17IdentityExtractorENS_10RefPtrHashIS4_EENS_10HashTraitsIS5_EESA_NS_18PartitionAllocatorEE6ExpandEPS5_ = comdat any

$_ZN3WTF9HashTableI13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEES5_NS_17IdentityExtractorENS_10RefPtrHashIS4_EENS_10HashTraitsIS5_EESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSD_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIi13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISF_SA_SG_EEiRS6_EENS_18HashTableAddResultISH_S7_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIi13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6ExpandEPS7_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIi13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSC_IS6_EEEESD_NS_18PartitionAllocatorEE8RehashToEPS7_jSI_ = comdat any

$_ZN3WTF6VectorINSt3__14pairIPN5blink9scheduler19MainThreadTaskQueueEPN4base16sequence_manager9TaskQueue17QueueEnabledVoterEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseISC_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPN5blink9scheduler19MainThreadTaskQueueEPN4base16sequence_manager9TaskQueue17QueueEnabledVoterEEEEEmm = comdat any

$_ZN3WTF9HashTableI13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEENS_12KeyValuePairIS5_NSt3__110unique_ptrIN4base16sequence_manager9TaskQueue17QueueEnabledVoterENS7_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSL_ISF_EEEESM_NS_18PartitionAllocatorEE4findENSM_17RefPtrValuePeekerE = comdat any

$_ZN3WTF9HashTableI13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEENS_12KeyValuePairIS5_NSt3__110unique_ptrIN4base16sequence_manager9TaskQueue17QueueEnabledVoterENS7_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSL_ISF_EEEESM_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISO_SJ_SP_EERKS5_SF_EENS_18HashTableAddResultISQ_SG_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableI13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEENS_12KeyValuePairIS5_NSt3__110unique_ptrIN4base16sequence_manager9TaskQueue17QueueEnabledVoterENS7_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSL_ISF_EEEESM_NS_18PartitionAllocatorEE6ExpandEPSG_ = comdat any

$_ZN3WTF9HashTableI13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEENS_12KeyValuePairIS5_NSt3__110unique_ptrIN4base16sequence_manager9TaskQueue17QueueEnabledVoterENS7_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSL_ISF_EEEESM_NS_18PartitionAllocatorEE8RehashToEPSG_jSR_ = comdat any

$_ZN3WTF9HashTableI13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEENS_12KeyValuePairIS5_NSt3__110unique_ptrIN4base16sequence_manager9TaskQueue17QueueEnabledVoterENS7_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSL_ISF_EEEESM_NS_18PartitionAllocatorEE8ReinsertEOSG_ = comdat any

$_ZN3WTF9HashTableI13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEENS_12KeyValuePairIS5_NSt3__110unique_ptrIN4base16sequence_manager9TaskQueue17QueueEnabledVoterENS7_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSL_ISF_EEEESM_NS_18PartitionAllocatorEE16LookupForWritingERKS5_ = comdat any

$_ZN3WTF9HashTableI13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEES5_NS_17IdentityExtractorENS_10RefPtrHashIS4_EENS_10HashTraitsIS5_EESA_NS_18PartitionAllocatorEE5eraseEPKS5_ = comdat any

$_ZN3WTF9HashTableI13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEENS_12KeyValuePairIS5_NSt3__110unique_ptrIN4base16sequence_manager9TaskQueue17QueueEnabledVoterENS7_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSL_ISF_EEEESM_NS_18PartitionAllocatorEE5eraseEPKSG_ = comdat any

$_ZN3WTF6VectorINSt3__14pairIPN5blink9scheduler19MainThreadTaskQueueEPN4base16sequence_manager9TaskQueue17QueueEnabledVoterEEELj0ENS_18PartitionAllocatorEE7EraseAtEj = comdat any

$_ZN8perfetto8internal9WriteImplIRKN3WTF7HashMapIi13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEENS2_7IntHashIiEENS2_10HashTraitsIiEENSB_IS8_EENS2_18PartitionAllocatorEE18HashMapValuesProxyEEENS_26check_traced_value_supportIDTdeclsr3stdE5beginclsr3stdE7declvalIRT_EEEEvvE4typeENS_4base12priority_tagILm1EEENS_11TracedValueEOSK_ = comdat any

$_ZN8perfetto8internal9WriteImplIRKN3WTF7HashSetI13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEENS2_10RefPtrHashIS7_EENS2_10HashTraitsIS8_EENS2_18PartitionAllocatorEEEEENS_26check_traced_value_supportIDTdeclsr3stdE5beginclsr3stdE7declvalIRT_EEEEvvE4typeENS_4base12priority_tagILm1EEENS_11TracedValueEOSI_ = comdat any

@.str = private unnamed_addr constant [12 x i8] c"task_queues\00", align 1
@.str.1 = private unnamed_addr constant [29 x i8] c"resource_loading_task_queues\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.3 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEEEEPKcv = private unnamed_addr constant [100 x i8] c"const char *WTF::GetStringWithTypeName() [T = scoped_refptr<blink::scheduler::MainThreadTaskQueue>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIi13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEEEEEEPKcv = private unnamed_addr constant [125 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<int, scoped_refptr<blink::scheduler::MainThreadTaskQueue> >]\00", align 1
@.str.4 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.6 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.7 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIPN5blink9scheduler19MainThreadTaskQueueEPN4base16sequence_manager9TaskQueue17QueueEnabledVoterEEEEEPKcv = private unnamed_addr constant [159 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::pair<blink::scheduler::MainThreadTaskQueue *, base::sequence_manager::TaskQueue::QueueEnabledVoter *>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairI13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEENSt3__110unique_ptrIN4base16sequence_manager9TaskQueue17QueueEnabledVoterENS7_14default_deleteISC_EEEEEEEEPKcv = private unnamed_addr constant [277 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<scoped_refptr<blink::scheduler::MainThreadTaskQueue>, std::__1::unique_ptr<base::sequence_manager::TaskQueue::QueueEnabledVoter, std::__1::default_delete<base::sequence_manager::TaskQueue::QueueEnabledVoter> > >]\00", align 1
@.str.8 = private unnamed_addr constant [18 x i8] c"position < size()\00", align 1

@_ZN5blink9scheduler24FrameTaskQueueControllerC1EPNS0_23MainThreadSchedulerImplEPNS0_18FrameSchedulerImplEPNS1_8DelegateE = hidden unnamed_addr alias void (%"class.blink::scheduler::FrameTaskQueueController"*, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameTaskQueueController::Delegate"*), void (%"class.blink::scheduler::FrameTaskQueueController"*, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameTaskQueueController::Delegate"*)* @_ZN5blink9scheduler24FrameTaskQueueControllerC2EPNS0_23MainThreadSchedulerImplEPNS0_18FrameSchedulerImplEPNS1_8DelegateE
@_ZN5blink9scheduler24FrameTaskQueueControllerD1Ev = hidden unnamed_addr alias void (%"class.blink::scheduler::FrameTaskQueueController"*), void (%"class.blink::scheduler::FrameTaskQueueController"*)* @_ZN5blink9scheduler24FrameTaskQueueControllerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler24FrameTaskQueueControllerC2EPNS0_23MainThreadSchedulerImplEPNS0_18FrameSchedulerImplEPNS1_8DelegateE(%"class.blink::scheduler::FrameTaskQueueController"* nocapture, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameTaskQueueController::Delegate"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::scheduler::FrameTaskQueueController", %"class.blink::scheduler::FrameTaskQueueController"* %0, i64 0, i32 0
  store %"class.blink::scheduler::MainThreadSchedulerImpl"* %1, %"class.blink::scheduler::MainThreadSchedulerImpl"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::scheduler::FrameTaskQueueController", %"class.blink::scheduler::FrameTaskQueueController"* %0, i64 0, i32 1
  store %"class.blink::scheduler::FrameSchedulerImpl"* %2, %"class.blink::scheduler::FrameSchedulerImpl"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::scheduler::FrameTaskQueueController", %"class.blink::scheduler::FrameTaskQueueController"* %0, i64 0, i32 2
  store %"class.blink::scheduler::FrameTaskQueueController::Delegate"* %3, %"class.blink::scheduler::FrameTaskQueueController::Delegate"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::scheduler::FrameTaskQueueController", %"class.blink::scheduler::FrameTaskQueueController"* %0, i64 0, i32 3
  %9 = bitcast %"class.WTF::HashMap.417"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 20, i1 false) #8
  %10 = getelementptr inbounds %"class.blink::scheduler::FrameTaskQueueController", %"class.blink::scheduler::FrameTaskQueueController"* %0, i64 0, i32 4
  %11 = bitcast %"class.WTF::HashSet.422"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 20, i1 false) #8
  %12 = getelementptr inbounds %"class.blink::scheduler::FrameTaskQueueController", %"class.blink::scheduler::FrameTaskQueueController"* %0, i64 0, i32 5
  %13 = bitcast %"class.WTF::HashMap.426"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 20, i1 false) #8
  %14 = getelementptr inbounds %"class.blink::scheduler::FrameTaskQueueController", %"class.blink::scheduler::FrameTaskQueueController"* %0, i64 0, i32 6
  %15 = bitcast %"class.WTF::Vector.437"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler24FrameTaskQueueControllerD2Ev(%"class.blink::scheduler::FrameTaskQueueController"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::FrameTaskQueueController", %"class.blink::scheduler::FrameTaskQueueController"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::pair.440"*, %"struct.std::__1::pair.440"** %2, align 8
  %4 = icmp eq %"struct.std::__1::pair.440"* %3, null
  %5 = bitcast %"struct.std::__1::pair.440"* %3 to i8*
  br i1 %4, label %12, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::scheduler::FrameTaskQueueController", %"class.blink::scheduler::FrameTaskQueueController"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10, !prof !3

10:                                               ; preds = %6
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %10, %6
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %5) #8
  store %"struct.std::__1::pair.440"* null, %"struct.std::__1::pair.440"** %2, align 8
  br label %12

12:                                               ; preds = %1, %11
  %13 = getelementptr inbounds %"class.blink::scheduler::FrameTaskQueueController", %"class.blink::scheduler::FrameTaskQueueController"* %0, i64 0, i32 5, i32 0, i32 0
  %14 = load %"struct.WTF::KeyValuePair.430"*, %"struct.WTF::KeyValuePair.430"** %13, align 8
  %15 = icmp eq %"struct.WTF::KeyValuePair.430"* %14, null
  br i1 %15, label %19, label %16, !prof !2

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::scheduler::FrameTaskQueueController", %"class.blink::scheduler::FrameTaskQueueController"* %0, i64 0, i32 5, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  tail call void @_ZN3WTF9HashTableI13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEENS_12KeyValuePairIS5_NSt3__110unique_ptrIN4base16sequence_manager9TaskQueue17QueueEnabledVoterENS7_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSL_ISF_EEEESM_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPSG_j(%"struct.WTF::KeyValuePair.430"* nonnull %14, i32 %18) #8
  store %"struct.WTF::KeyValuePair.430"* null, %"struct.WTF::KeyValuePair.430"** %13, align 8
  br label %19

19:                                               ; preds = %12, %16
  %20 = getelementptr inbounds %"class.blink::scheduler::FrameTaskQueueController", %"class.blink::scheduler::FrameTaskQueueController"* %0, i64 0, i32 4, i32 0, i32 0
  %21 = load %class.scoped_refptr.19*, %class.scoped_refptr.19** %20, align 8
  %22 = icmp eq %class.scoped_refptr.19* %21, null
  br i1 %22, label %46, label %23, !prof !2

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::scheduler::FrameTaskQueueController", %"class.blink::scheduler::FrameTaskQueueController"* %0, i64 0, i32 4, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %44, label %27

27:                                               ; preds = %23
  %28 = zext i32 %25 to i64
  br label %29

29:                                               ; preds = %41, %27
  %30 = phi i64 [ 0, %27 ], [ %42, %41 ]
  %31 = getelementptr inbounds %class.scoped_refptr.19, %class.scoped_refptr.19* %21, i64 %30
  %32 = bitcast %class.scoped_refptr.19* %31 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = bitcast i8* %33 to %"class.blink::scheduler::MainThreadTaskQueue"*
  %35 = ptrtoint i8* %33 to i64
  switch i64 %35, label %36 [
    i64 -1, label %41
    i64 0, label %41
  ]

36:                                               ; preds = %29
  %37 = bitcast i8* %33 to i32*
  %38 = atomicrmw sub i32* %37, i32 1 acq_rel
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %41

40:                                               ; preds = %36
  tail call void @_ZN5blink9scheduler19MainThreadTaskQueueD1Ev(%"class.blink::scheduler::MainThreadTaskQueue"* nonnull %34) #8
  tail call void @_ZdlPv(i8* nonnull %33) #9
  br label %41

41:                                               ; preds = %40, %36, %29, %29
  %42 = add nuw nsw i64 %30, 1
  %43 = icmp eq i64 %42, %28
  br i1 %43, label %44, label %29

44:                                               ; preds = %41, %23
  %45 = bitcast %class.scoped_refptr.19* %21 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %45) #8
  store %class.scoped_refptr.19* null, %class.scoped_refptr.19** %20, align 8
  br label %46

46:                                               ; preds = %19, %44
  %47 = getelementptr inbounds %"class.blink::scheduler::FrameTaskQueueController", %"class.blink::scheduler::FrameTaskQueueController"* %0, i64 0, i32 3, i32 0, i32 0
  %48 = load %"struct.WTF::KeyValuePair.421"*, %"struct.WTF::KeyValuePair.421"** %47, align 8
  %49 = icmp eq %"struct.WTF::KeyValuePair.421"* %48, null
  br i1 %49, label %76, label %50, !prof !2

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.blink::scheduler::FrameTaskQueueController", %"class.blink::scheduler::FrameTaskQueueController"* %0, i64 0, i32 3, i32 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %74, label %54

54:                                               ; preds = %50
  %55 = zext i32 %52 to i64
  br label %56

56:                                               ; preds = %71, %54
  %57 = phi i64 [ 0, %54 ], [ %72, %71 ]
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.421", %"struct.WTF::KeyValuePair.421"* %48, i64 %57, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, -1
  br i1 %60, label %71, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.421", %"struct.WTF::KeyValuePair.421"* %48, i64 %57, i32 1, i32 0
  %63 = load %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.blink::scheduler::MainThreadTaskQueue"** %62, align 8
  %64 = icmp eq %"class.blink::scheduler::MainThreadTaskQueue"* %63, null
  br i1 %64, label %71, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::scheduler::MainThreadTaskQueue", %"class.blink::scheduler::MainThreadTaskQueue"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = atomicrmw sub i32* %66, i32 1 acq_rel
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %69, label %71

69:                                               ; preds = %65
  tail call void @_ZN5blink9scheduler19MainThreadTaskQueueD1Ev(%"class.blink::scheduler::MainThreadTaskQueue"* nonnull %63) #8
  %70 = bitcast %"class.blink::scheduler::MainThreadTaskQueue"* %63 to i8*
  tail call void @_ZdlPv(i8* %70) #9
  br label %71

71:                                               ; preds = %69, %65, %61, %56
  %72 = add nuw nsw i64 %57, 1
  %73 = icmp eq i64 %72, %55
  br i1 %73, label %74, label %56

74:                                               ; preds = %71, %50
  %75 = bitcast %"struct.WTF::KeyValuePair.421"* %48 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %75) #8
  store %"struct.WTF::KeyValuePair.421"* null, %"struct.WTF::KeyValuePair.421"** %47, align 8
  br label %76

76:                                               ; preds = %46, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::scheduler::MainThreadTaskQueue"* @_ZN5blink9scheduler24FrameTaskQueueController12GetTaskQueueENS0_19MainThreadTaskQueue11QueueTraitsE(%"class.blink::scheduler::FrameTaskQueueController"*, i64) local_unnamed_addr #0 align 2 {
  %3 = trunc i64 %1 to i8
  %4 = lshr i64 %1, 32
  %5 = shl i8 %3, 1
  %6 = and i8 %5, 126
  %7 = lshr i8 %3, 6
  %8 = shl i8 %7, 7
  %9 = or i8 %6, %8
  %10 = or i8 %9, 1
  %11 = zext i8 %10 to i32
  %12 = lshr i8 %3, 7
  %13 = zext i8 %12 to i32
  %14 = shl nuw nsw i32 %13, 8
  %15 = shl nuw nsw i64 %4, 9
  %16 = trunc i64 %15 to i32
  %17 = or i32 %14, %16
  %18 = or i32 %17, %11
  %19 = getelementptr inbounds %"class.blink::scheduler::FrameTaskQueueController", %"class.blink::scheduler::FrameTaskQueueController"* %0, i64 0, i32 3, i32 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair.421"*, %"struct.WTF::KeyValuePair.421"** %19, align 8
  %21 = icmp eq %"struct.WTF::KeyValuePair.421"* %20, null
  br i1 %21, label %77, label %22

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.blink::scheduler::FrameTaskQueueController", %"class.blink::scheduler::FrameTaskQueueController"* %0, i64 0, i32 3, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = add i32 %24, -1
  %26 = zext i32 %25 to i64
  %27 = shl i32 %18, 15
  %28 = xor i32 %27, -1
  %29 = add i32 %18, %28
  %30 = lshr i32 %29, 10
  %31 = xor i32 %30, %29
  %32 = mul i32 %31, 9
  %33 = lshr i32 %32, 6
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 11
  %36 = xor i32 %35, -1
  %37 = add i32 %34, %36
  %38 = lshr i32 %37, 16
  %39 = xor i32 %38, %37
  %40 = and i32 %25, %39
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair.421", %"struct.WTF::KeyValuePair.421"* %20, i64 %41
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.421", %"struct.WTF::KeyValuePair.421"* %42, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, %18
  br i1 %45, label %74, label %46

46:                                               ; preds = %22
  %47 = xor i32 %39, -1
  %48 = lshr i32 %37, 23
  %49 = add i32 %48, %47
  %50 = shl i32 %49, 12
  %51 = xor i32 %50, %49
  %52 = lshr i32 %51, 7
  %53 = xor i32 %52, %51
  %54 = shl i32 %53, 2
  %55 = xor i32 %54, %53
  %56 = lshr i32 %55, 20
  %57 = xor i32 %56, %55
  %58 = or i32 %57, 1
  %59 = zext i32 %58 to i64
  br label %60

60:                                               ; preds = %65, %46
  %61 = phi i32 [ %44, %46 ], [ %72, %65 ]
  %62 = phi i64 [ %41, %46 ], [ %69, %65 ]
  %63 = phi i64 [ 0, %46 ], [ %67, %65 ]
  %64 = icmp eq i32 %61, 0
  br i1 %64, label %77, label %65

65:                                               ; preds = %60
  %66 = icmp eq i64 %63, 0
  %67 = select i1 %66, i64 %59, i64 %63
  %68 = add i64 %67, %62
  %69 = and i64 %68, %26
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair.421", %"struct.WTF::KeyValuePair.421"* %20, i64 %69
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.421", %"struct.WTF::KeyValuePair.421"* %70, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, %18
  br i1 %73, label %74, label %60

74:                                               ; preds = %65, %22
  %75 = phi %"struct.WTF::KeyValuePair.421"* [ %42, %22 ], [ %70, %65 ]
  %76 = icmp eq %"struct.WTF::KeyValuePair.421"* %75, null
  br i1 %76, label %77, label %81

77:                                               ; preds = %60, %74, %2
  tail call void @_ZN5blink9scheduler24FrameTaskQueueController15CreateTaskQueueENS0_19MainThreadTaskQueue11QueueTraitsE(%"class.blink::scheduler::FrameTaskQueueController"* %0, i64 %1)
  %78 = load %"struct.WTF::KeyValuePair.421"*, %"struct.WTF::KeyValuePair.421"** %19, align 8
  %79 = getelementptr inbounds %"class.blink::scheduler::FrameTaskQueueController", %"class.blink::scheduler::FrameTaskQueueController"* %0, i64 0, i32 3, i32 0, i32 1
  %80 = load i32, i32* %79, align 8
  br label %81

81:                                               ; preds = %74, %77
  %82 = phi i32 [ %24, %74 ], [ %80, %77 ]
  %83 = phi %"struct.WTF::KeyValuePair.421"* [ %20, %74 ], [ %78, %77 ]
  %84 = icmp eq %"struct.WTF::KeyValuePair.421"* %83, null
  br i1 %84, label %138, label %85

85:                                               ; preds = %81
  %86 = add i32 %82, -1
  %87 = zext i32 %86 to i64
  %88 = shl i32 %18, 15
  %89 = xor i32 %88, -1
  %90 = add i32 %18, %89
  %91 = lshr i32 %90, 10
  %92 = xor i32 %91, %90
  %93 = mul i32 %92, 9
  %94 = lshr i32 %93, 6
  %95 = xor i32 %94, %93
  %96 = shl i32 %95, 11
  %97 = xor i32 %96, -1
  %98 = add i32 %95, %97
  %99 = lshr i32 %98, 16
  %100 = xor i32 %99, %98
  %101 = and i32 %86, %100
  %102 = zext i32 %101 to i64
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair.421", %"struct.WTF::KeyValuePair.421"* %83, i64 %102
  %104 = getelementptr inbounds %"struct.WTF::KeyValuePair.421", %"struct.WTF::KeyValuePair.421"* %103, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  %106 = icmp eq i32 %105, %18
  br i1 %106, label %135, label %107

107:                                              ; preds = %85
  %108 = xor i32 %100, -1
  %109 = lshr i32 %98, 23
  %110 = add i32 %109, %108
  %111 = shl i32 %110, 12
  %112 = xor i32 %111, %110
  %113 = lshr i32 %112, 7
  %114 = xor i32 %113, %112
  %115 = shl i32 %114, 2
  %116 = xor i32 %115, %114
  %117 = lshr i32 %116, 20
  %118 = xor i32 %117, %116
  %119 = or i32 %118, 1
  %120 = zext i32 %119 to i64
  br label %121

121:                                              ; preds = %126, %107
  %122 = phi i32 [ %105, %107 ], [ %133, %126 ]
  %123 = phi i64 [ %102, %107 ], [ %130, %126 ]
  %124 = phi i64 [ 0, %107 ], [ %128, %126 ]
  %125 = icmp eq i32 %122, 0
  br i1 %125, label %138, label %126

126:                                              ; preds = %121
  %127 = icmp eq i64 %124, 0
  %128 = select i1 %127, i64 %120, i64 %124
  %129 = add i64 %128, %123
  %130 = and i64 %129, %87
  %131 = getelementptr inbounds %"struct.WTF::KeyValuePair.421", %"struct.WTF::KeyValuePair.421"* %83, i64 %130
  %132 = getelementptr inbounds %"struct.WTF::KeyValuePair.421", %"struct.WTF::KeyValuePair.421"* %131, i64 0, i32 0
  %133 = load i32, i32* %132, align 4
  %134 = icmp eq i32 %133, %18
  br i1 %134, label %135, label %121

135:                                              ; preds = %126, %85
  %136 = phi %"struct.WTF::KeyValuePair.421"* [ %103, %85 ], [ %131, %126 ]
  %137 = icmp eq %"struct.WTF::KeyValuePair.421"* %136, null
  br i1 %137, label %138, label %141

138:                                              ; preds = %121, %135, %81
  %139 = zext i32 %82 to i64
  %140 = getelementptr inbounds %"struct.WTF::KeyValuePair.421", %"struct.WTF::KeyValuePair.421"* %83, i64 %139
  br label %141

141:                                              ; preds = %135, %138
  %142 = phi %"struct.WTF::KeyValuePair.421"* [ %140, %138 ], [ %136, %135 ]
  %143 = getelementptr inbounds %"struct.WTF::KeyValuePair.421", %"struct.WTF::KeyValuePair.421"* %142, i64 0, i32 1, i32 0
  %144 = load %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.blink::scheduler::MainThreadTaskQueue"** %143, align 8
  %145 = icmp eq %"class.blink::scheduler::MainThreadTaskQueue"* %144, null
  br i1 %145, label %149, label %146

146:                                              ; preds = %141
  %147 = getelementptr inbounds %"class.blink::scheduler::MainThreadTaskQueue", %"class.blink::scheduler::MainThreadTaskQueue"* %144, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = atomicrmw add i32* %147, i32 1 monotonic
  br label %149

149:                                              ; preds = %141, %146
  ret %"class.blink::scheduler::MainThreadTaskQueue"* %144
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler24FrameTaskQueueController15CreateTaskQueueENS0_19MainThreadTaskQueue11QueueTraitsE(%"class.blink::scheduler::FrameTaskQueueController"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams", align 8
  %4 = alloca %class.scoped_refptr.19, align 8
  %5 = alloca i32, align 4
  %6 = trunc i64 %1 to i8
  %7 = lshr i64 %1, 32
  %8 = trunc i64 %7 to i32
  %9 = bitcast %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %9) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 80, i1 false)
  switch i32 %8, label %11 [
    i32 3, label %21
    i32 4, label %10
  ]

10:                                               ; preds = %2
  br label %21

11:                                               ; preds = %2
  %12 = and i8 %6, 2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %21

14:                                               ; preds = %11
  %15 = and i64 %1, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %21

17:                                               ; preds = %14
  %18 = and i8 %6, 8
  %19 = icmp eq i8 %18, 0
  %20 = select i1 %19, i32 15, i32 14
  br label %21

21:                                               ; preds = %2, %10, %11, %14, %17
  %22 = phi i32 [ 11, %10 ], [ 5, %2 ], [ 12, %11 ], [ 13, %14 ], [ %20, %17 ]
  %23 = getelementptr inbounds %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams", %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams"* %3, i64 0, i32 0
  store i32 %22, i32* %23, align 8
  %24 = tail call i8* @_ZN5blink9scheduler19MainThreadTaskQueue16NameForQueueTypeENS1_9QueueTypeE(i32 %22) #8
  %25 = getelementptr inbounds %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams", %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams"* %3, i64 0, i32 2, i32 0
  store i8* %24, i8** %25, align 8
  %26 = getelementptr inbounds %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams", %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams"* %3, i64 0, i32 2, i32 1
  store i8 0, i8* %26, align 8
  %27 = getelementptr inbounds %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams", %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams"* %3, i64 0, i32 2, i32 3
  store %"class.base::sequence_manager::TimeDomain"* null, %"class.base::sequence_manager::TimeDomain"** %27, align 8
  %28 = getelementptr inbounds %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams", %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams"* %3, i64 0, i32 2, i32 4
  store i8 1, i8* %28, align 8
  %29 = getelementptr inbounds %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams", %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams"* %3, i64 0, i32 2, i32 5
  %30 = getelementptr inbounds %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams", %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams"* %3, i64 0, i32 3
  %31 = getelementptr inbounds %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams", %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams"* %3, i64 0, i32 5, i32 0
  %32 = bitcast %"class.blink::scheduler::AgentGroupSchedulerImpl"** %30 to i64*
  store i64 0, i64* %32, align 8
  %33 = getelementptr inbounds %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams", %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams"* %3, i64 0, i32 6
  %34 = getelementptr inbounds %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams", %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams"* %3, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %34, align 4
  %35 = lshr i8 %6, 1
  %36 = and i8 %35, 1
  store i8 %36, i8* %29, align 1, !noalias !4
  %37 = getelementptr inbounds %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams", %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams"* %3, i64 0, i32 4
  %38 = bitcast i8* %31 to i64*
  %39 = getelementptr inbounds %"class.blink::scheduler::FrameTaskQueueController", %"class.blink::scheduler::FrameTaskQueueController"* %0, i64 0, i32 1
  %40 = bitcast %"class.blink::scheduler::FrameSchedulerImpl"** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.blink::scheduler::FrameSchedulerImpl"** %37 to i64*
  store i64 %41, i64* %42, align 8
  store i64 %1, i64* %38, align 8
  store i8 %36, i8* %33, align 8
  %43 = bitcast %class.scoped_refptr.19* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #8
  %44 = getelementptr inbounds %class.scoped_refptr.19, %class.scoped_refptr.19* %4, i64 0, i32 0
  %45 = getelementptr inbounds %"class.blink::scheduler::FrameTaskQueueController", %"class.blink::scheduler::FrameTaskQueueController"* %0, i64 0, i32 0
  %46 = load %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::MainThreadSchedulerImpl"** %45, align 8
  %47 = call %"class.blink::scheduler::MainThreadTaskQueue"* @_ZN5blink9scheduler23MainThreadSchedulerImpl12NewTaskQueueERKNS0_19MainThreadTaskQueue19QueueCreationParamsE(%"class.blink::scheduler::MainThreadSchedulerImpl"* %46, %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams"* nonnull dereferenceable(80) %3) #8
  store %"class.blink::scheduler::MainThreadTaskQueue"* %47, %"class.blink::scheduler::MainThreadTaskQueue"** %44, align 8
  call void @_ZN5blink9scheduler24FrameTaskQueueController16TaskQueueCreatedERK13scoped_refptrINS0_19MainThreadTaskQueueEE(%"class.blink::scheduler::FrameTaskQueueController"* %0, %class.scoped_refptr.19* nonnull dereferenceable(8) %4)
  %48 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %48) #8
  %49 = shl i8 %6, 1
  %50 = and i8 %49, 126
  %51 = lshr i8 %6, 6
  %52 = shl i8 %51, 7
  %53 = or i8 %50, %52
  %54 = or i8 %53, 1
  %55 = zext i8 %54 to i32
  %56 = lshr i8 %6, 7
  %57 = zext i8 %56 to i32
  %58 = shl nuw nsw i32 %57, 8
  %59 = shl nuw nsw i64 %7, 9
  %60 = trunc i64 %59 to i32
  %61 = or i32 %58, %60
  %62 = or i32 %61, %55
  store i32 %62, i32* %5, align 4
  %63 = getelementptr inbounds %"class.blink::scheduler::FrameTaskQueueController", %"class.blink::scheduler::FrameTaskQueueController"* %0, i64 0, i32 3, i32 0
  %64 = call { %"struct.WTF::KeyValuePair.421"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIi13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISF_SA_SG_EEiRS6_EENS_18HashTableAddResultISH_S7_EEOT0_OT1_(%"class.WTF::HashTable.418"* %63, i32* nonnull dereferenceable(4) %5, %class.scoped_refptr.19* nonnull dereferenceable(8) %4) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %48) #8
  %65 = load %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.blink::scheduler::MainThreadTaskQueue"** %44, align 8
  %66 = icmp eq %"class.blink::scheduler::MainThreadTaskQueue"* %65, null
  br i1 %66, label %73, label %67

67:                                               ; preds = %21
  %68 = getelementptr inbounds %"class.blink::scheduler::MainThreadTaskQueue", %"class.blink::scheduler::MainThreadTaskQueue"* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = atomicrmw sub i32* %68, i32 1 acq_rel
  %70 = icmp eq i32 %69, 1
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  call void @_ZN5blink9scheduler19MainThreadTaskQueueD1Ev(%"class.blink::scheduler::MainThreadTaskQueue"* nonnull %65) #8
  %72 = bitcast %"class.blink::scheduler::MainThreadTaskQueue"* %65 to i8*
  call void @_ZdlPv(i8* %72) #9
  br label %73

73:                                               ; preds = %21, %67, %71
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %9) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(16) %"class.WTF::Vector.437"* @_ZNK5blink9scheduler24FrameTaskQueueController25GetAllTaskQueuesAndVotersEv(%"class.blink::scheduler::FrameTaskQueueController"* readnone) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::FrameTaskQueueController", %"class.blink::scheduler::FrameTaskQueueController"* %0, i64 0, i32 6
  ret %"class.WTF::Vector.437"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::scheduler::MainThreadTaskQueue"* @_ZN5blink9scheduler24FrameTaskQueueController27NewResourceLoadingTaskQueueEv(%"class.blink::scheduler::FrameTaskQueueController"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.scoped_refptr.19, align 8
  %3 = getelementptr inbounds %class.scoped_refptr.19, %class.scoped_refptr.19* %2, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::scheduler::FrameTaskQueueController", %"class.blink::scheduler::FrameTaskQueueController"* %0, i64 0, i32 0
  %5 = load %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::MainThreadSchedulerImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::scheduler::FrameTaskQueueController", %"class.blink::scheduler::FrameTaskQueueController"* %0, i64 0, i32 1
  %7 = load %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"** %6, align 8
  %8 = tail call %"class.blink::scheduler::MainThreadTaskQueue"* @_ZN5blink9scheduler23MainThreadSchedulerImpl19NewLoadingTaskQueueENS0_19MainThreadTaskQueue9QueueTypeEPNS0_18FrameSchedulerImplE(%"class.blink::scheduler::MainThreadSchedulerImpl"* %5, i32 5, %"class.blink::scheduler::FrameSchedulerImpl"* %7) #8
  store %"class.blink::scheduler::MainThreadTaskQueue"* %8, %"class.blink::scheduler::MainThreadTaskQueue"** %3, align 8
  call void @_ZN5blink9scheduler24FrameTaskQueueController16TaskQueueCreatedERK13scoped_refptrINS0_19MainThreadTaskQueueEE(%"class.blink::scheduler::FrameTaskQueueController"* %0, %class.scoped_refptr.19* nonnull dereferenceable(8) %2)
  %9 = getelementptr inbounds %"class.blink::scheduler::FrameTaskQueueController", %"class.blink::scheduler::FrameTaskQueueController"* %0, i64 0, i32 4, i32 0
  %10 = call { %class.scoped_refptr.19*, i8 } @_ZN3WTF9HashTableI13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEES5_NS_17IdentityExtractorENS_10RefPtrHashIS4_EENS_10HashTraitsIS5_EESA_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS8_SA_SB_EERKS5_RS5_EENS_18HashTableAddResultISC_S5_EEOT0_OT1_(%"class.WTF::HashTable.423"* %9, %class.scoped_refptr.19* nonnull dereferenceable(8) %2, %class.scoped_refptr.19* nonnull dereferenceable(8) %2) #8
  %11 = load %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.blink::scheduler::MainThreadTaskQueue"** %3, align 8
  ret %"class.blink::scheduler::MainThreadTaskQueue"* %11
}

declare %"class.blink::scheduler::MainThreadTaskQueue"* @_ZN5blink9scheduler23MainThreadSchedulerImpl19NewLoadingTaskQueueENS0_19MainThreadTaskQueue9QueueTypeEPNS0_18FrameSchedulerImplE(%"class.blink::scheduler::MainThreadSchedulerImpl"*, i32, %"class.blink::scheduler::FrameSchedulerImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler24FrameTaskQueueController16TaskQueueCreatedERK13scoped_refptrINS0_19MainThreadTaskQueueEE(%"class.blink::scheduler::FrameTaskQueueController"*, %class.scoped_refptr.19* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.431", align 8
  %4 = alloca %"struct.std::__1::pair.440", align 8
  %5 = bitcast %"class.std::__1::unique_ptr.431"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.std::__1::unique_ptr.431", %"class.std::__1::unique_ptr.431"* %3, i64 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %class.scoped_refptr.19, %class.scoped_refptr.19* %1, i64 0, i32 0
  %8 = load %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.blink::scheduler::MainThreadTaskQueue"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::scheduler::MainThreadTaskQueue", %"class.blink::scheduler::MainThreadTaskQueue"* %8, i64 0, i32 1, i32 0
  %10 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %9, align 8
  %11 = tail call %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* @_ZN4base16sequence_manager9TaskQueue23CreateQueueEnabledVoterEv(%"class.base::sequence_manager::TaskQueue"* %10) #8
  store %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* %11, %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"** %6, align 8
  %12 = getelementptr inbounds %"class.blink::scheduler::FrameTaskQueueController", %"class.blink::scheduler::FrameTaskQueueController"* %0, i64 0, i32 2
  %13 = load %"class.blink::scheduler::FrameTaskQueueController::Delegate"*, %"class.blink::scheduler::FrameTaskQueueController::Delegate"** %12, align 8
  %14 = load %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.blink::scheduler::MainThreadTaskQueue"** %7, align 8
  %15 = bitcast %"class.blink::scheduler::FrameTaskQueueController::Delegate"* %13 to void (%"class.blink::scheduler::FrameTaskQueueController::Delegate"*, %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"*)***
  %16 = load void (%"class.blink::scheduler::FrameTaskQueueController::Delegate"*, %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"*)**, void (%"class.blink::scheduler::FrameTaskQueueController::Delegate"*, %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::scheduler::FrameTaskQueueController::Delegate"*, %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"*)*, void (%"class.blink::scheduler::FrameTaskQueueController::Delegate"*, %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"*)** %16, i64 2
  %18 = load void (%"class.blink::scheduler::FrameTaskQueueController::Delegate"*, %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"*)*, void (%"class.blink::scheduler::FrameTaskQueueController::Delegate"*, %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"*)** %17, align 8
  tail call void %18(%"class.blink::scheduler::FrameTaskQueueController::Delegate"* %13, %"class.blink::scheduler::MainThreadTaskQueue"* %14, %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* %11) #8
  %19 = getelementptr inbounds %"class.blink::scheduler::FrameTaskQueueController", %"class.blink::scheduler::FrameTaskQueueController"* %0, i64 0, i32 6
  %20 = bitcast %"struct.std::__1::pair.440"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #8
  %21 = bitcast %class.scoped_refptr.19* %1 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = ptrtoint %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* %11 to i64
  %24 = bitcast %"struct.std::__1::pair.440"* %4 to i64*
  store i64 %22, i64* %24, align 8
  %25 = getelementptr inbounds %"struct.std::__1::pair.440", %"struct.std::__1::pair.440"* %4, i64 0, i32 1
  %26 = bitcast %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"** %25 to i64*
  store i64 %23, i64* %26, align 8
  %27 = getelementptr inbounds %"class.blink::scheduler::FrameTaskQueueController", %"class.blink::scheduler::FrameTaskQueueController"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.blink::scheduler::FrameTaskQueueController", %"class.blink::scheduler::FrameTaskQueueController"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %28, %30
  br i1 %31, label %40, label %32, !prof !3

32:                                               ; preds = %2
  %33 = getelementptr inbounds %"class.WTF::Vector.437", %"class.WTF::Vector.437"* %19, i64 0, i32 0, i32 0, i32 0
  %34 = load %"struct.std::__1::pair.440"*, %"struct.std::__1::pair.440"** %33, align 8
  %35 = zext i32 %28 to i64
  %36 = getelementptr inbounds %"struct.std::__1::pair.440", %"struct.std::__1::pair.440"* %34, i64 %35
  %37 = bitcast %"struct.std::__1::pair.440"* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* nonnull align 8 %20, i64 16, i1 false) #8
  %38 = load i32, i32* %27, align 4
  %39 = add i32 %38, 1
  store i32 %39, i32* %27, align 4
  br label %42

40:                                               ; preds = %2
  call void @_ZN3WTF6VectorINSt3__14pairIPN5blink9scheduler19MainThreadTaskQueueEPN4base16sequence_manager9TaskQueue17QueueEnabledVoterEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseISC_EEvOT_(%"class.WTF::Vector.437"* %19, %"struct.std::__1::pair.440"* nonnull dereferenceable(16) %4) #8
  %41 = load %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"*, %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"** %6, align 8
  br label %42

42:                                               ; preds = %32, %40
  %43 = phi %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* [ %11, %32 ], [ %41, %40 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #8
  %44 = icmp eq %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* %43, null
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  store %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* null, %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"** %6, align 8
  br label %53

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.blink::scheduler::FrameTaskQueueController", %"class.blink::scheduler::FrameTaskQueueController"* %0, i64 0, i32 5, i32 0
  %48 = call { %"struct.WTF::KeyValuePair.430"*, i8 } @_ZN3WTF9HashTableI13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEENS_12KeyValuePairIS5_NSt3__110unique_ptrIN4base16sequence_manager9TaskQueue17QueueEnabledVoterENS7_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSL_ISF_EEEESM_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISO_SJ_SP_EERKS5_SF_EENS_18HashTableAddResultISQ_SG_EEOT0_OT1_(%"class.WTF::HashTable.427"* %47, %class.scoped_refptr.19* dereferenceable(8) %1, %"class.std::__1::unique_ptr.431"* nonnull dereferenceable(8) %3) #8
  %49 = load %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"*, %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"** %6, align 8
  store %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* null, %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"** %6, align 8
  %50 = icmp eq %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* %49, null
  br i1 %50, label %53, label %51

51:                                               ; preds = %46
  call void @_ZN4base16sequence_manager9TaskQueue17QueueEnabledVoterD1Ev(%"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* nonnull %49) #8
  %52 = bitcast %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* %49 to i8*
  call void @_ZdlPv(i8* %52) #9
  br label %53

53:                                               ; preds = %45, %46, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::scheduler::MainThreadTaskQueue"* @_ZN5blink9scheduler24FrameTaskQueueController25NewWebSchedulingTaskQueueENS0_19MainThreadTaskQueue11QueueTraitsENS_21WebSchedulingPriorityE(%"class.blink::scheduler::FrameTaskQueueController"*, i64, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.scoped_refptr.19, align 8
  %5 = alloca %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams", align 8
  %6 = alloca [14 x i8], align 2
  %7 = getelementptr inbounds %class.scoped_refptr.19, %class.scoped_refptr.19* %4, i64 0, i32 0
  %8 = getelementptr inbounds %"class.blink::scheduler::FrameTaskQueueController", %"class.blink::scheduler::FrameTaskQueueController"* %0, i64 0, i32 0
  %9 = load %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::MainThreadSchedulerImpl"** %8, align 8
  %10 = bitcast %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %10) #8
  %11 = getelementptr inbounds [14 x i8], [14 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 14, i8* nonnull %11)
  %12 = tail call i8* @_ZN5blink9scheduler19MainThreadTaskQueue16NameForQueueTypeENS1_9QueueTypeE(i32 24) #8
  %13 = getelementptr inbounds [14 x i8], [14 x i8]* %6, i64 0, i64 6
  %14 = bitcast i8* %13 to i64*
  store i64 0, i64* %14, align 2
  %15 = trunc i64 %1 to i8
  %16 = lshr i8 %15, 1
  %17 = and i8 %16, 1
  %18 = zext i32 %2 to i64
  %19 = shl nuw i64 %18, 32
  %20 = or i64 %19, 1
  %21 = getelementptr inbounds %"class.blink::scheduler::FrameTaskQueueController", %"class.blink::scheduler::FrameTaskQueueController"* %0, i64 0, i32 1
  %22 = bitcast %"class.blink::scheduler::FrameSchedulerImpl"** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams", %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams"* %5, i64 0, i32 0
  store i32 24, i32* %24, align 8
  %25 = getelementptr inbounds %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams", %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams"* %5, i64 0, i32 2, i32 0
  store i8* %12, i8** %25, align 8
  %26 = getelementptr inbounds %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams", %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams"* %5, i64 0, i32 2, i32 1
  store i8 0, i8* %26, align 8
  %27 = getelementptr inbounds %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams", %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams"* %5, i64 0, i32 2, i32 3
  store %"class.base::sequence_manager::TimeDomain"* null, %"class.base::sequence_manager::TimeDomain"** %27, align 8
  %28 = getelementptr inbounds %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams", %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams"* %5, i64 0, i32 2, i32 4
  store i8 1, i8* %28, align 8
  %29 = getelementptr inbounds %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams", %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams"* %5, i64 0, i32 2, i32 5
  store i8 %17, i8* %29, align 1
  %30 = getelementptr inbounds %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams", %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams"* %5, i64 0, i32 2, i32 6, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %30, i8* nonnull align 2 %11, i64 14, i1 false)
  %31 = getelementptr inbounds %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams", %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams"* %5, i64 0, i32 4
  %32 = bitcast %"class.blink::scheduler::FrameSchedulerImpl"** %31 to i64*
  store i64 %23, i64* %32, align 8
  %33 = getelementptr inbounds %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams", %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams"* %5, i64 0, i32 5
  %34 = bitcast %"struct.blink::scheduler::MainThreadTaskQueue::QueueTraits"* %33 to i64*
  store i64 %1, i64* %34, align 8
  %35 = getelementptr inbounds %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams", %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams"* %5, i64 0, i32 6
  store i8 0, i8* %35, align 8
  %36 = getelementptr inbounds %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams", %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams"* %5, i64 0, i32 8
  %37 = bitcast %"class.absl::optional.114"* %36 to i64*
  store i64 %20, i64* %37, align 4
  %38 = call %"class.blink::scheduler::MainThreadTaskQueue"* @_ZN5blink9scheduler23MainThreadSchedulerImpl12NewTaskQueueERKNS0_19MainThreadTaskQueue19QueueCreationParamsE(%"class.blink::scheduler::MainThreadSchedulerImpl"* %9, %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams"* nonnull dereferenceable(80) %5) #8
  store %"class.blink::scheduler::MainThreadTaskQueue"* %38, %"class.blink::scheduler::MainThreadTaskQueue"** %7, align 8
  call void @llvm.lifetime.end.p0i8(i64 14, i8* nonnull %11)
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %10) #8
  call void @_ZN5blink9scheduler24FrameTaskQueueController16TaskQueueCreatedERK13scoped_refptrINS0_19MainThreadTaskQueueEE(%"class.blink::scheduler::FrameTaskQueueController"* %0, %class.scoped_refptr.19* nonnull dereferenceable(8) %4)
  %39 = load %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.blink::scheduler::MainThreadTaskQueue"** %7, align 8
  ret %"class.blink::scheduler::MainThreadTaskQueue"* %39
}

declare %"class.blink::scheduler::MainThreadTaskQueue"* @_ZN5blink9scheduler23MainThreadSchedulerImpl12NewTaskQueueERKNS0_19MainThreadTaskQueue19QueueCreationParamsE(%"class.blink::scheduler::MainThreadSchedulerImpl"*, %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams"* dereferenceable(80)) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5blink9scheduler24FrameTaskQueueController24QueueTypeFromQueueTraitsENS0_19MainThreadTaskQueue11QueueTraitsE(i64) local_unnamed_addr #2 align 2 {
  %2 = trunc i64 %0 to i8
  %3 = lshr i64 %0, 32
  %4 = trunc i64 %3 to i32
  switch i32 %4, label %6 [
    i32 3, label %16
    i32 4, label %5
  ]

5:                                                ; preds = %1
  br label %16

6:                                                ; preds = %1
  %7 = and i8 %2, 2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %16

9:                                                ; preds = %6
  %10 = and i64 %0, 1
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %12, label %16

12:                                               ; preds = %9
  %13 = and i8 %2, 8
  %14 = icmp eq i8 %13, 0
  %15 = select i1 %14, i32 15, i32 14
  br label %16

16:                                               ; preds = %12, %9, %6, %1, %5
  %17 = phi i32 [ 11, %5 ], [ 5, %1 ], [ 12, %6 ], [ 13, %9 ], [ %15, %12 ]
  ret i32 %17
}

declare %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* @_ZN4base16sequence_manager9TaskQueue23CreateQueueEnabledVoterEv(%"class.base::sequence_manager::TaskQueue"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* @_ZN5blink9scheduler24FrameTaskQueueController20GetQueueEnabledVoterERK13scoped_refptrINS0_19MainThreadTaskQueueEE(%"class.blink::scheduler::FrameTaskQueueController"*, %class.scoped_refptr.19* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::scheduler::FrameTaskQueueController", %"class.blink::scheduler::FrameTaskQueueController"* %0, i64 0, i32 5
  %4 = getelementptr inbounds %class.scoped_refptr.19, %class.scoped_refptr.19* %1, i64 0, i32 0
  %5 = load %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.blink::scheduler::MainThreadTaskQueue"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::HashMap.426", %"class.WTF::HashMap.426"* %3, i64 0, i32 0
  %7 = tail call { %"struct.WTF::KeyValuePair.430"*, %"struct.WTF::KeyValuePair.430"* } @_ZN3WTF9HashTableI13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEENS_12KeyValuePairIS5_NSt3__110unique_ptrIN4base16sequence_manager9TaskQueue17QueueEnabledVoterENS7_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSL_ISF_EEEESM_NS_18PartitionAllocatorEE4findENSM_17RefPtrValuePeekerE(%"class.WTF::HashTable.427"* %6, %"class.blink::scheduler::MainThreadTaskQueue"* %5) #8
  %8 = extractvalue { %"struct.WTF::KeyValuePair.430"*, %"struct.WTF::KeyValuePair.430"* } %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashMap.426", %"class.WTF::HashMap.426"* %3, i64 0, i32 0, i32 0
  %10 = load %"struct.WTF::KeyValuePair.430"*, %"struct.WTF::KeyValuePair.430"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::scheduler::FrameTaskQueueController", %"class.blink::scheduler::FrameTaskQueueController"* %0, i64 0, i32 5, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.430", %"struct.WTF::KeyValuePair.430"* %10, i64 %13
  %15 = icmp eq %"struct.WTF::KeyValuePair.430"* %8, %14
  br i1 %15, label %19, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair.430", %"struct.WTF::KeyValuePair.430"* %8, i64 0, i32 1, i32 0, i32 0, i32 0
  %18 = load %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"*, %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"** %17, align 8
  br label %19

19:                                               ; preds = %2, %16
  %20 = phi %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* [ %18, %16 ], [ null, %2 ]
  ret %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* %20
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink9scheduler24FrameTaskQueueController30RemoveResourceLoadingTaskQueueERK13scoped_refptrINS0_19MainThreadTaskQueueEE(%"class.blink::scheduler::FrameTaskQueueController"*, %class.scoped_refptr.19* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::scheduler::FrameTaskQueueController", %"class.blink::scheduler::FrameTaskQueueController"* %0, i64 0, i32 4
  %4 = bitcast %class.scoped_refptr.19* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = inttoptr i64 %5 to %"class.blink::scheduler::MainThreadTaskQueue"*
  %7 = getelementptr inbounds %"class.WTF::HashSet.422", %"class.WTF::HashSet.422"* %3, i64 0, i32 0, i32 0
  %8 = load %class.scoped_refptr.19*, %class.scoped_refptr.19** %7, align 8
  %9 = icmp eq %class.scoped_refptr.19* %8, null
  br i1 %9, label %157, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::scheduler::FrameTaskQueueController", %"class.blink::scheduler::FrameTaskQueueController"* %0, i64 0, i32 4, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = add i32 %12, -1
  %14 = zext i32 %13 to i64
  %15 = shl i64 %5, 32
  %16 = xor i64 %15, -1
  %17 = add i64 %5, %16
  %18 = lshr i64 %17, 22
  %19 = xor i64 %18, %17
  %20 = shl i64 %19, 13
  %21 = xor i64 %20, -1
  %22 = add i64 %19, %21
  %23 = lshr i64 %22, 8
  %24 = xor i64 %23, %22
  %25 = mul i64 %24, 9
  %26 = lshr i64 %25, 15
  %27 = xor i64 %26, %25
  %28 = shl i64 %27, 27
  %29 = xor i64 %28, -1
  %30 = add i64 %27, %29
  %31 = lshr i64 %30, 31
  %32 = xor i64 %31, %30
  %33 = trunc i64 %32 to i32
  %34 = and i32 %13, %33
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds %class.scoped_refptr.19, %class.scoped_refptr.19* %8, i64 %35
  %37 = getelementptr inbounds %class.scoped_refptr.19, %class.scoped_refptr.19* %36, i64 0, i32 0
  %38 = load %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.blink::scheduler::MainThreadTaskQueue"** %37, align 8
  %39 = icmp eq %"class.blink::scheduler::MainThreadTaskQueue"* %38, %6
  br i1 %39, label %68, label %40

40:                                               ; preds = %10
  %41 = xor i32 %33, -1
  %42 = lshr i32 %33, 23
  %43 = add i32 %42, %41
  %44 = shl i32 %43, 12
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 7
  %47 = xor i32 %46, %45
  %48 = shl i32 %47, 2
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 20
  %51 = xor i32 %50, %49
  %52 = or i32 %51, 1
  %53 = zext i32 %52 to i64
  br label %54

54:                                               ; preds = %59, %40
  %55 = phi %"class.blink::scheduler::MainThreadTaskQueue"* [ %38, %40 ], [ %66, %59 ]
  %56 = phi i64 [ %35, %40 ], [ %63, %59 ]
  %57 = phi i64 [ 0, %40 ], [ %61, %59 ]
  %58 = icmp eq %"class.blink::scheduler::MainThreadTaskQueue"* %55, null
  br i1 %58, label %157, label %59

59:                                               ; preds = %54
  %60 = icmp eq i64 %57, 0
  %61 = select i1 %60, i64 %53, i64 %57
  %62 = add i64 %61, %56
  %63 = and i64 %62, %14
  %64 = getelementptr inbounds %class.scoped_refptr.19, %class.scoped_refptr.19* %8, i64 %63
  %65 = getelementptr inbounds %class.scoped_refptr.19, %class.scoped_refptr.19* %64, i64 0, i32 0
  %66 = load %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.blink::scheduler::MainThreadTaskQueue"** %65, align 8
  %67 = icmp eq %"class.blink::scheduler::MainThreadTaskQueue"* %66, %6
  br i1 %67, label %68, label %54

68:                                               ; preds = %59, %10
  %69 = phi %class.scoped_refptr.19* [ %36, %10 ], [ %64, %59 ]
  %70 = icmp eq %class.scoped_refptr.19* %69, null
  br i1 %70, label %157, label %71

71:                                               ; preds = %68
  br i1 %39, label %100, label %72

72:                                               ; preds = %71
  %73 = xor i32 %33, -1
  %74 = lshr i32 %33, 23
  %75 = add i32 %74, %73
  %76 = shl i32 %75, 12
  %77 = xor i32 %76, %75
  %78 = lshr i32 %77, 7
  %79 = xor i32 %78, %77
  %80 = shl i32 %79, 2
  %81 = xor i32 %80, %79
  %82 = lshr i32 %81, 20
  %83 = xor i32 %82, %81
  %84 = or i32 %83, 1
  %85 = zext i32 %84 to i64
  br label %86

86:                                               ; preds = %91, %72
  %87 = phi %"class.blink::scheduler::MainThreadTaskQueue"* [ %38, %72 ], [ %98, %91 ]
  %88 = phi i64 [ %35, %72 ], [ %95, %91 ]
  %89 = phi i64 [ 0, %72 ], [ %93, %91 ]
  %90 = icmp eq %"class.blink::scheduler::MainThreadTaskQueue"* %87, null
  br i1 %90, label %105, label %91

91:                                               ; preds = %86
  %92 = icmp eq i64 %89, 0
  %93 = select i1 %92, i64 %85, i64 %89
  %94 = add i64 %93, %88
  %95 = and i64 %94, %14
  %96 = getelementptr inbounds %class.scoped_refptr.19, %class.scoped_refptr.19* %8, i64 %95
  %97 = getelementptr inbounds %class.scoped_refptr.19, %class.scoped_refptr.19* %96, i64 0, i32 0
  %98 = load %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.blink::scheduler::MainThreadTaskQueue"** %97, align 8
  %99 = icmp eq %"class.blink::scheduler::MainThreadTaskQueue"* %98, %6
  br i1 %99, label %100, label %86

100:                                              ; preds = %91, %71
  %101 = phi %class.scoped_refptr.19* [ %36, %71 ], [ %96, %91 ]
  %102 = icmp eq %class.scoped_refptr.19* %101, null
  br i1 %102, label %105, label %103

103:                                              ; preds = %100
  %104 = zext i32 %12 to i64
  br label %108

105:                                              ; preds = %86, %100
  %106 = zext i32 %12 to i64
  %107 = getelementptr inbounds %class.scoped_refptr.19, %class.scoped_refptr.19* %8, i64 %106
  br label %108

108:                                              ; preds = %105, %103
  %109 = phi i64 [ %104, %103 ], [ %106, %105 ]
  %110 = phi %class.scoped_refptr.19* [ %101, %103 ], [ %107, %105 ]
  %111 = getelementptr inbounds %class.scoped_refptr.19, %class.scoped_refptr.19* %8, i64 %109
  %112 = icmp eq %class.scoped_refptr.19* %111, %110
  br i1 %112, label %117, label %113

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.WTF::HashSet.422", %"class.WTF::HashSet.422"* %3, i64 0, i32 0
  tail call void @_ZN3WTF9HashTableI13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEES5_NS_17IdentityExtractorENS_10RefPtrHashIS4_EENS_10HashTraitsIS5_EESA_NS_18PartitionAllocatorEE5eraseEPKS5_(%"class.WTF::HashTable.423"* %114, %class.scoped_refptr.19* %110) #8
  %115 = getelementptr inbounds %class.scoped_refptr.19, %class.scoped_refptr.19* %1, i64 0, i32 0
  %116 = load %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.blink::scheduler::MainThreadTaskQueue"** %115, align 8
  br label %117

117:                                              ; preds = %108, %113
  %118 = phi %"class.blink::scheduler::MainThreadTaskQueue"* [ %6, %108 ], [ %116, %113 ]
  %119 = getelementptr inbounds %"class.blink::scheduler::FrameTaskQueueController", %"class.blink::scheduler::FrameTaskQueueController"* %0, i64 0, i32 5
  %120 = getelementptr inbounds %class.scoped_refptr.19, %class.scoped_refptr.19* %1, i64 0, i32 0
  %121 = getelementptr inbounds %"class.WTF::HashMap.426", %"class.WTF::HashMap.426"* %119, i64 0, i32 0
  %122 = tail call { %"struct.WTF::KeyValuePair.430"*, %"struct.WTF::KeyValuePair.430"* } @_ZN3WTF9HashTableI13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEENS_12KeyValuePairIS5_NSt3__110unique_ptrIN4base16sequence_manager9TaskQueue17QueueEnabledVoterENS7_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSL_ISF_EEEESM_NS_18PartitionAllocatorEE4findENSM_17RefPtrValuePeekerE(%"class.WTF::HashTable.427"* %121, %"class.blink::scheduler::MainThreadTaskQueue"* %118) #8
  %123 = extractvalue { %"struct.WTF::KeyValuePair.430"*, %"struct.WTF::KeyValuePair.430"* } %122, 0
  %124 = getelementptr inbounds %"class.WTF::HashMap.426", %"class.WTF::HashMap.426"* %119, i64 0, i32 0, i32 0
  %125 = load %"struct.WTF::KeyValuePair.430"*, %"struct.WTF::KeyValuePair.430"** %124, align 8
  %126 = getelementptr inbounds %"class.blink::scheduler::FrameTaskQueueController", %"class.blink::scheduler::FrameTaskQueueController"* %0, i64 0, i32 5, i32 0, i32 1
  %127 = load i32, i32* %126, align 8
  %128 = zext i32 %127 to i64
  %129 = getelementptr inbounds %"struct.WTF::KeyValuePair.430", %"struct.WTF::KeyValuePair.430"* %125, i64 %128
  %130 = icmp eq %"struct.WTF::KeyValuePair.430"* %129, %123
  br i1 %130, label %132, label %131

131:                                              ; preds = %117
  tail call void @_ZN3WTF9HashTableI13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEENS_12KeyValuePairIS5_NSt3__110unique_ptrIN4base16sequence_manager9TaskQueue17QueueEnabledVoterENS7_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSL_ISF_EEEESM_NS_18PartitionAllocatorEE5eraseEPKSG_(%"class.WTF::HashTable.427"* %121, %"struct.WTF::KeyValuePair.430"* %123) #8
  br label %132

132:                                              ; preds = %117, %131
  %133 = getelementptr inbounds %"class.blink::scheduler::FrameTaskQueueController", %"class.blink::scheduler::FrameTaskQueueController"* %0, i64 0, i32 6
  %134 = getelementptr inbounds %"class.WTF::Vector.437", %"class.WTF::Vector.437"* %133, i64 0, i32 0, i32 0, i32 0
  %135 = load %"struct.std::__1::pair.440"*, %"struct.std::__1::pair.440"** %134, align 8
  %136 = getelementptr inbounds %"class.blink::scheduler::FrameTaskQueueController", %"class.blink::scheduler::FrameTaskQueueController"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %137 = load i32, i32* %136, align 4
  %138 = icmp eq i32 %137, 0
  %139 = ptrtoint %"struct.std::__1::pair.440"* %135 to i64
  br i1 %138, label %157, label %140

140:                                              ; preds = %132
  %141 = load %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.blink::scheduler::MainThreadTaskQueue"** %120, align 8
  %142 = zext i32 %137 to i64
  %143 = getelementptr inbounds %"struct.std::__1::pair.440", %"struct.std::__1::pair.440"* %135, i64 %142
  br label %144

144:                                              ; preds = %140, %154
  %145 = phi %"struct.std::__1::pair.440"* [ %135, %140 ], [ %155, %154 ]
  %146 = getelementptr inbounds %"struct.std::__1::pair.440", %"struct.std::__1::pair.440"* %145, i64 0, i32 0
  %147 = load %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.blink::scheduler::MainThreadTaskQueue"** %146, align 8
  %148 = icmp eq %"class.blink::scheduler::MainThreadTaskQueue"* %147, %141
  br i1 %148, label %149, label %154

149:                                              ; preds = %144
  %150 = ptrtoint %"struct.std::__1::pair.440"* %145 to i64
  %151 = sub i64 %150, %139
  %152 = lshr exact i64 %151, 4
  %153 = trunc i64 %152 to i32
  tail call void @_ZN3WTF6VectorINSt3__14pairIPN5blink9scheduler19MainThreadTaskQueueEPN4base16sequence_manager9TaskQueue17QueueEnabledVoterEEELj0ENS_18PartitionAllocatorEE7EraseAtEj(%"class.WTF::Vector.437"* %133, i32 %153) #8
  br label %157

154:                                              ; preds = %144
  %155 = getelementptr inbounds %"struct.std::__1::pair.440", %"struct.std::__1::pair.440"* %145, i64 1
  %156 = icmp eq %"struct.std::__1::pair.440"* %155, %143
  br i1 %156, label %157, label %144

157:                                              ; preds = %54, %154, %132, %68, %2, %149
  %158 = phi i1 [ false, %68 ], [ true, %149 ], [ false, %2 ], [ true, %132 ], [ true, %154 ], [ false, %54 ]
  ret i1 %158
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9scheduler24FrameTaskQueueController14WriteIntoTraceEN8perfetto11TracedValueE(%"class.blink::scheduler::FrameTaskQueueController"*, %"class.perfetto::TracedValue"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.perfetto::TracedValue", align 8
  %4 = alloca %"class.perfetto::TracedValue", align 8
  %5 = alloca %"class.perfetto::TracedValue", align 8
  %6 = alloca %"class.perfetto::TracedValue", align 8
  %7 = alloca %"class.perfetto::TracedDictionary", align 8
  %8 = bitcast %"class.perfetto::TracedDictionary"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #8
  %9 = bitcast %"class.perfetto::TracedDictionary"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  call void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* nonnull sret %7, %"class.perfetto::TracedValue"* %1) #8
  %10 = getelementptr inbounds %"class.blink::scheduler::FrameTaskQueueController", %"class.blink::scheduler::FrameTaskQueueController"* %0, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashMap.417"* %10 to %"class.WTF::HashMap<int, scoped_refptr<blink::scheduler::MainThreadTaskQueue>, WTF::IntHash<int>, WTF::HashTraits<int>, WTF::HashTraits<scoped_refptr<blink::scheduler::MainThreadTaskQueue> >, WTF::PartitionAllocator>::HashMapValuesProxy"*
  %12 = bitcast %"class.perfetto::TracedValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12)
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %4, %"class.perfetto::TracedDictionary"* nonnull %7, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0)) #8
  %13 = bitcast %"class.perfetto::TracedValue"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* nonnull align 8 %12, i64 16, i1 false) #8
  call void @_ZN8perfetto8internal9WriteImplIRKN3WTF7HashMapIi13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEENS2_7IntHashIiEENS2_10HashTraitsIiEENSB_IS8_EENS2_18PartitionAllocatorEE18HashMapValuesProxyEEENS_26check_traced_value_supportIDTdeclsr3stdE5beginclsr3stdE7declvalIRT_EEEEvvE4typeENS_4base12priority_tagILm1EEENS_11TracedValueEOSK_(%"class.perfetto::TracedValue"* nonnull %3, %"class.WTF::HashMap<int, scoped_refptr<blink::scheduler::MainThreadTaskQueue>, WTF::IntHash<int>, WTF::HashTraits<int>, WTF::HashTraits<scoped_refptr<blink::scheduler::MainThreadTaskQueue> >, WTF::PartitionAllocator>::HashMapValuesProxy"* dereferenceable(24) %11) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12)
  %14 = getelementptr inbounds %"class.blink::scheduler::FrameTaskQueueController", %"class.blink::scheduler::FrameTaskQueueController"* %0, i64 0, i32 4
  %15 = bitcast %"class.perfetto::TracedValue"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15)
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %6, %"class.perfetto::TracedDictionary"* nonnull %7, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0)) #8
  %16 = bitcast %"class.perfetto::TracedValue"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %16, i8* nonnull align 8 %15, i64 16, i1 false) #8
  call void @_ZN8perfetto8internal9WriteImplIRKN3WTF7HashSetI13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEENS2_10RefPtrHashIS7_EENS2_10HashTraitsIS8_EENS2_18PartitionAllocatorEEEEENS_26check_traced_value_supportIDTdeclsr3stdE5beginclsr3stdE7declvalIRT_EEEEvvE4typeENS_4base12priority_tagILm1EEENS_11TracedValueEOSI_(%"class.perfetto::TracedValue"* nonnull %5, %"class.WTF::HashSet.422"* dereferenceable(24) %14) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #8
  ret void
}

declare void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* sret, %"class.perfetto::TracedValue"*) local_unnamed_addr #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableI13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEENS_12KeyValuePairIS5_NSt3__110unique_ptrIN4base16sequence_manager9TaskQueue17QueueEnabledVoterENS7_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSL_ISF_EEEESM_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPSG_j(%"struct.WTF::KeyValuePair.430"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  br label %8

6:                                                ; preds = %33, %2
  %7 = bitcast %"struct.WTF::KeyValuePair.430"* %0 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #8
  ret void

8:                                                ; preds = %33, %4
  %9 = phi i64 [ 0, %4 ], [ %34, %33 ]
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair.430", %"struct.WTF::KeyValuePair.430"* %0, i64 %9
  %11 = bitcast %"struct.WTF::KeyValuePair.430"* %10 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, inttoptr (i64 -1 to i8*)
  br i1 %13, label %33, label %14

14:                                               ; preds = %8
  %15 = bitcast i8* %12 to %"class.blink::scheduler::MainThreadTaskQueue"*
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.430", %"struct.WTF::KeyValuePair.430"* %0, i64 %9, i32 1, i32 0, i32 0, i32 0
  %17 = load %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"*, %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"** %16, align 8
  store %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* null, %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"** %16, align 8
  %18 = icmp eq %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %14
  tail call void @_ZN4base16sequence_manager9TaskQueue17QueueEnabledVoterD1Ev(%"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* nonnull %17) #8
  %20 = bitcast %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* %17 to i8*
  tail call void @_ZdlPv(i8* %20) #9
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.430", %"struct.WTF::KeyValuePair.430"* %10, i64 0, i32 0, i32 0
  %22 = load %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.blink::scheduler::MainThreadTaskQueue"** %21, align 8
  %23 = bitcast %"class.blink::scheduler::MainThreadTaskQueue"* %22 to i8*
  br label %24

24:                                               ; preds = %19, %14
  %25 = phi i8* [ %23, %19 ], [ %12, %14 ]
  %26 = phi %"class.blink::scheduler::MainThreadTaskQueue"* [ %22, %19 ], [ %15, %14 ]
  %27 = icmp eq %"class.blink::scheduler::MainThreadTaskQueue"* %26, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::scheduler::MainThreadTaskQueue", %"class.blink::scheduler::MainThreadTaskQueue"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw sub i32* %29, i32 1 acq_rel
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %33

32:                                               ; preds = %28
  tail call void @_ZN5blink9scheduler19MainThreadTaskQueueD1Ev(%"class.blink::scheduler::MainThreadTaskQueue"* nonnull %26) #8
  tail call void @_ZdlPv(i8* %25) #9
  br label %33

33:                                               ; preds = %32, %28, %24, %8
  %34 = add nuw nsw i64 %9, 1
  %35 = icmp eq i64 %34, %5
  br i1 %35, label %6, label %8
}

declare i8* @_ZN5blink9scheduler19MainThreadTaskQueue16NameForQueueTypeENS1_9QueueTypeE(i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink9scheduler19MainThreadTaskQueueD1Ev(%"class.blink::scheduler::MainThreadTaskQueue"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %class.scoped_refptr.19*, i8 } @_ZN3WTF9HashTableI13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEES5_NS_17IdentityExtractorENS_10RefPtrHashIS4_EENS_10HashTraitsIS5_EESA_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS8_SA_SB_EERKS5_RS5_EENS_18HashTableAddResultISC_S5_EEOT0_OT1_(%"class.WTF::HashTable.423"*, %class.scoped_refptr.19* dereferenceable(8), %class.scoped_refptr.19* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.423", %"class.WTF::HashTable.423"* %0, i64 0, i32 0
  %5 = load %class.scoped_refptr.19*, %class.scoped_refptr.19** %4, align 8
  %6 = icmp eq %class.scoped_refptr.19* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %class.scoped_refptr.19* @_ZN3WTF9HashTableI13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEES5_NS_17IdentityExtractorENS_10RefPtrHashIS4_EENS_10HashTraitsIS5_EESA_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.423"* %0, %class.scoped_refptr.19* null)
  %9 = load %class.scoped_refptr.19*, %class.scoped_refptr.19** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %class.scoped_refptr.19* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.423", %"class.WTF::HashTable.423"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %class.scoped_refptr.19* %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %class.scoped_refptr.19, %class.scoped_refptr.19* %11, i64 %38
  %40 = getelementptr inbounds %class.scoped_refptr.19, %class.scoped_refptr.19* %39, i64 0, i32 0
  %41 = load %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.blink::scheduler::MainThreadTaskQueue"** %40, align 8
  %42 = icmp eq %"class.blink::scheduler::MainThreadTaskQueue"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::scheduler::MainThreadTaskQueue"*
  br i1 %42, label %88, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::scheduler::MainThreadTaskQueue"* [ %41, %44 ], [ %76, %65 ]
  %60 = phi %class.scoped_refptr.19* [ %39, %44 ], [ %74, %65 ]
  %61 = phi %class.scoped_refptr.19* [ null, %44 ], [ %69, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %73, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %71, %65 ]
  %64 = icmp eq %"class.blink::scheduler::MainThreadTaskQueue"* %59, %43
  br i1 %64, label %120, label %65

65:                                               ; preds = %58
  %66 = bitcast %class.scoped_refptr.19* %60 to i8**
  %67 = load i8*, i8** %66, align 8
  %68 = icmp eq i8* %67, inttoptr (i64 -1 to i8*)
  %69 = select i1 %68, %class.scoped_refptr.19* %60, %class.scoped_refptr.19* %61
  %70 = icmp eq i64 %63, 0
  %71 = select i1 %70, i64 %57, i64 %63
  %72 = add i64 %71, %62
  %73 = and i64 %72, %15
  %74 = getelementptr inbounds %class.scoped_refptr.19, %class.scoped_refptr.19* %11, i64 %73
  %75 = getelementptr inbounds %class.scoped_refptr.19, %class.scoped_refptr.19* %74, i64 0, i32 0
  %76 = load %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.blink::scheduler::MainThreadTaskQueue"** %75, align 8
  %77 = icmp eq %"class.blink::scheduler::MainThreadTaskQueue"* %76, null
  br i1 %77, label %78, label %58

78:                                               ; preds = %65
  %79 = icmp eq %class.scoped_refptr.19* %69, null
  br i1 %79, label %88, label %80

80:                                               ; preds = %78
  %81 = bitcast %class.scoped_refptr.19* %69 to i64*
  store i64 0, i64* %81, align 8
  %82 = getelementptr inbounds %"class.WTF::HashTable.423", %"class.WTF::HashTable.423"* %0, i64 0, i32 3
  %83 = load i32, i32* %82, align 8
  %84 = add i32 %83, 2147483647
  %85 = and i32 %84, 2147483647
  %86 = and i32 %83, -2147483648
  %87 = or i32 %85, %86
  store i32 %87, i32* %82, align 8
  br label %88

88:                                               ; preds = %10, %78, %80
  %89 = phi %class.scoped_refptr.19* [ %69, %80 ], [ %74, %78 ], [ %39, %10 ]
  %90 = getelementptr inbounds %class.scoped_refptr.19, %class.scoped_refptr.19* %2, i64 0, i32 0
  %91 = load %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.blink::scheduler::MainThreadTaskQueue"** %90, align 8
  %92 = icmp eq %"class.blink::scheduler::MainThreadTaskQueue"* %91, null
  br i1 %92, label %96, label %93

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.blink::scheduler::MainThreadTaskQueue", %"class.blink::scheduler::MainThreadTaskQueue"* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = atomicrmw add i32* %94, i32 1 monotonic
  br label %96

96:                                               ; preds = %93, %88
  %97 = ptrtoint %"class.blink::scheduler::MainThreadTaskQueue"* %91 to i64
  %98 = bitcast %class.scoped_refptr.19* %89 to i64*
  %99 = getelementptr inbounds %class.scoped_refptr.19, %class.scoped_refptr.19* %89, i64 0, i32 0
  %100 = load %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.blink::scheduler::MainThreadTaskQueue"** %99, align 8
  store i64 %97, i64* %98, align 8
  %101 = icmp eq %"class.blink::scheduler::MainThreadTaskQueue"* %100, null
  br i1 %101, label %108, label %102

102:                                              ; preds = %96
  %103 = getelementptr inbounds %"class.blink::scheduler::MainThreadTaskQueue", %"class.blink::scheduler::MainThreadTaskQueue"* %100, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = atomicrmw sub i32* %103, i32 1 acq_rel
  %105 = icmp eq i32 %104, 1
  br i1 %105, label %106, label %108

106:                                              ; preds = %102
  tail call void @_ZN5blink9scheduler19MainThreadTaskQueueD1Ev(%"class.blink::scheduler::MainThreadTaskQueue"* nonnull %100) #8
  %107 = bitcast %"class.blink::scheduler::MainThreadTaskQueue"* %100 to i8*
  tail call void @_ZdlPv(i8* %107) #9
  br label %108

108:                                              ; preds = %96, %102, %106
  %109 = getelementptr inbounds %"class.WTF::HashTable.423", %"class.WTF::HashTable.423"* %0, i64 0, i32 2
  %110 = load i32, i32* %109, align 4
  %111 = add i32 %110, 1
  store i32 %111, i32* %109, align 4
  %112 = getelementptr inbounds %"class.WTF::HashTable.423", %"class.WTF::HashTable.423"* %0, i64 0, i32 3
  %113 = load i32, i32* %112, align 8
  %114 = add i32 %113, %111
  %115 = shl i32 %114, 1
  %116 = load i32, i32* %12, align 8
  %117 = icmp ult i32 %115, %116
  br i1 %117, label %120, label %118

118:                                              ; preds = %108
  %119 = tail call %class.scoped_refptr.19* @_ZN3WTF9HashTableI13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEES5_NS_17IdentityExtractorENS_10RefPtrHashIS4_EENS_10HashTraitsIS5_EESA_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.423"* %0, %class.scoped_refptr.19* %89)
  br label %120

120:                                              ; preds = %58, %108, %118
  %121 = phi i8 [ 1, %108 ], [ 1, %118 ], [ 0, %58 ]
  %122 = phi %class.scoped_refptr.19* [ %89, %108 ], [ %119, %118 ], [ %60, %58 ]
  %123 = insertvalue { %class.scoped_refptr.19*, i8 } undef, %class.scoped_refptr.19* %122, 0
  %124 = insertvalue { %class.scoped_refptr.19*, i8 } %123, i8 %121, 1
  ret { %class.scoped_refptr.19*, i8 } %124
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.scoped_refptr.19* @_ZN3WTF9HashTableI13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEES5_NS_17IdentityExtractorENS_10RefPtrHashIS4_EENS_10HashTraitsIS5_EESA_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.423"*, %class.scoped_refptr.19*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.423", %"class.WTF::HashTable.423"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.423", %"class.WTF::HashTable.423"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #8
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %22, i8* %23) #8
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.3, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #8
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEEEEPKcv, i64 0, i64 0)) #8
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #8
  %36 = bitcast i8* %35 to %class.scoped_refptr.19*
  %37 = call %class.scoped_refptr.19* @_ZN3WTF9HashTableI13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEES5_NS_17IdentityExtractorENS_10RefPtrHashIS4_EENS_10HashTraitsIS5_EESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSD_(%"class.WTF::HashTable.423"* %0, %class.scoped_refptr.19* %36, i32 %32, %class.scoped_refptr.19* %1) #8
  ret %class.scoped_refptr.19* %37
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.scoped_refptr.19* @_ZN3WTF9HashTableI13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEES5_NS_17IdentityExtractorENS_10RefPtrHashIS4_EENS_10HashTraitsIS5_EESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSD_(%"class.WTF::HashTable.423"*, %class.scoped_refptr.19*, i32, %class.scoped_refptr.19*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %class.scoped_refptr.19* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.423", %"class.WTF::HashTable.423"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.423", %"class.WTF::HashTable.423"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.423"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %class.scoped_refptr.19*, %class.scoped_refptr.19** %9, align 8
  %17 = ptrtoint %class.scoped_refptr.19* %16 to i64
  br label %52

18:                                               ; preds = %157
  %19 = bitcast %"class.WTF::HashTable.423"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %158, %18 ]
  %23 = phi %class.scoped_refptr.19* [ null, %10 ], [ %161, %18 ]
  %24 = phi i32 [ 0, %10 ], [ %159, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %25 = inttoptr i64 %22 to %class.scoped_refptr.19*
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %48, label %27

27:                                               ; preds = %20
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %46, label %29

29:                                               ; preds = %27
  %30 = zext i32 %24 to i64
  br label %31

31:                                               ; preds = %43, %29
  %32 = phi i64 [ 0, %29 ], [ %44, %43 ]
  %33 = getelementptr inbounds %class.scoped_refptr.19, %class.scoped_refptr.19* %25, i64 %32
  %34 = bitcast %class.scoped_refptr.19* %33 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = bitcast i8* %35 to %"class.blink::scheduler::MainThreadTaskQueue"*
  %37 = ptrtoint i8* %35 to i64
  switch i64 %37, label %38 [
    i64 -1, label %43
    i64 0, label %43
  ]

38:                                               ; preds = %31
  %39 = bitcast i8* %35 to i32*
  %40 = atomicrmw sub i32* %39, i32 1 acq_rel
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %43

42:                                               ; preds = %38
  tail call void @_ZN5blink9scheduler19MainThreadTaskQueueD1Ev(%"class.blink::scheduler::MainThreadTaskQueue"* nonnull %36) #8
  tail call void @_ZdlPv(i8* nonnull %35) #9
  br label %43

43:                                               ; preds = %42, %38, %31, %31
  %44 = add nuw nsw i64 %32, 1
  %45 = icmp eq i64 %44, %30
  br i1 %45, label %46, label %31

46:                                               ; preds = %43, %27
  %47 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %47) #8
  br label %48

48:                                               ; preds = %20, %46
  %49 = getelementptr inbounds %"class.WTF::HashTable.423", %"class.WTF::HashTable.423"* %0, i64 0, i32 3
  %50 = load i32, i32* %49, align 8
  %51 = and i32 %50, -2147483648
  store i32 %51, i32* %49, align 8
  ret %class.scoped_refptr.19* %23

52:                                               ; preds = %13, %157
  %53 = phi i64 [ %17, %13 ], [ %158, %157 ]
  %54 = phi i32 [ %7, %13 ], [ %159, %157 ]
  %55 = phi %class.scoped_refptr.19* [ %16, %13 ], [ %160, %157 ]
  %56 = phi %class.scoped_refptr.19* [ null, %13 ], [ %161, %157 ]
  %57 = phi i32 [ 0, %13 ], [ %162, %157 ]
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds %class.scoped_refptr.19, %class.scoped_refptr.19* %55, i64 %58
  %60 = getelementptr inbounds %class.scoped_refptr.19, %class.scoped_refptr.19* %59, i64 0, i32 0
  %61 = bitcast %class.scoped_refptr.19* %59 to i64*
  %62 = load i64, i64* %61, align 8
  switch i64 %62, label %63 [
    i64 -1, label %157
    i64 0, label %157
  ]

63:                                               ; preds = %52
  %64 = shl i64 %62, 32
  %65 = xor i64 %64, -1
  %66 = add i64 %62, %65
  %67 = lshr i64 %66, 22
  %68 = xor i64 %67, %66
  %69 = shl i64 %68, 13
  %70 = xor i64 %69, -1
  %71 = add i64 %68, %70
  %72 = lshr i64 %71, 8
  %73 = xor i64 %72, %71
  %74 = mul i64 %73, 9
  %75 = lshr i64 %74, 15
  %76 = xor i64 %75, %74
  %77 = shl i64 %76, 27
  %78 = xor i64 %77, -1
  %79 = add i64 %76, %78
  %80 = lshr i64 %79, 31
  %81 = xor i64 %80, %79
  %82 = trunc i64 %81 to i32
  %83 = and i32 %14, %82
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds %class.scoped_refptr.19, %class.scoped_refptr.19* %1, i64 %84
  %86 = ptrtoint %class.scoped_refptr.19* %85 to i64
  %87 = getelementptr inbounds %class.scoped_refptr.19, %class.scoped_refptr.19* %85, i64 0, i32 0
  %88 = load %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.blink::scheduler::MainThreadTaskQueue"** %87, align 8
  %89 = icmp eq %"class.blink::scheduler::MainThreadTaskQueue"* %88, null
  %90 = inttoptr i64 %62 to %"class.blink::scheduler::MainThreadTaskQueue"*
  br i1 %89, label %108, label %91

91:                                               ; preds = %63
  %92 = xor i32 %82, -1
  %93 = lshr i32 %82, 23
  %94 = add i32 %93, %92
  %95 = shl i32 %94, 12
  %96 = xor i32 %95, %94
  %97 = lshr i32 %96, 7
  %98 = xor i32 %97, %96
  %99 = shl i32 %98, 2
  %100 = xor i32 %99, %98
  %101 = lshr i32 %100, 20
  %102 = xor i32 %101, %100
  %103 = or i32 %102, 1
  %104 = zext i32 %103 to i64
  br label %114

105:                                              ; preds = %122
  %106 = ptrtoint %class.scoped_refptr.19* %131 to i64
  %107 = inttoptr i64 %126 to %class.scoped_refptr.19*
  br label %108

108:                                              ; preds = %105, %63
  %109 = phi i64 [ %106, %105 ], [ %86, %63 ]
  %110 = phi %class.scoped_refptr.19* [ %107, %105 ], [ null, %63 ]
  %111 = icmp eq %class.scoped_refptr.19* %110, null
  %112 = ptrtoint %class.scoped_refptr.19* %110 to i64
  %113 = select i1 %111, i64 %109, i64 %112
  br label %136

114:                                              ; preds = %122, %91
  %115 = phi i64 [ 0, %91 ], [ %126, %122 ]
  %116 = phi %"class.blink::scheduler::MainThreadTaskQueue"* [ %88, %91 ], [ %134, %122 ]
  %117 = phi i64 [ %86, %91 ], [ %132, %122 ]
  %118 = phi %class.scoped_refptr.19* [ %85, %91 ], [ %131, %122 ]
  %119 = phi i64 [ %84, %91 ], [ %130, %122 ]
  %120 = phi i64 [ 0, %91 ], [ %128, %122 ]
  %121 = icmp eq %"class.blink::scheduler::MainThreadTaskQueue"* %116, %90
  br i1 %121, label %136, label %122

122:                                              ; preds = %114
  %123 = bitcast %class.scoped_refptr.19* %118 to i8**
  %124 = load i8*, i8** %123, align 8
  %125 = icmp eq i8* %124, inttoptr (i64 -1 to i8*)
  %126 = select i1 %125, i64 %117, i64 %115
  %127 = icmp eq i64 %120, 0
  %128 = select i1 %127, i64 %104, i64 %120
  %129 = add i64 %128, %119
  %130 = and i64 %129, %15
  %131 = getelementptr inbounds %class.scoped_refptr.19, %class.scoped_refptr.19* %1, i64 %130
  %132 = ptrtoint %class.scoped_refptr.19* %131 to i64
  %133 = getelementptr inbounds %class.scoped_refptr.19, %class.scoped_refptr.19* %131, i64 0, i32 0
  %134 = load %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.blink::scheduler::MainThreadTaskQueue"** %133, align 8
  %135 = icmp eq %"class.blink::scheduler::MainThreadTaskQueue"* %134, null
  br i1 %135, label %105, label %114

136:                                              ; preds = %114, %108
  %137 = phi i64 [ %113, %108 ], [ %117, %114 ]
  %138 = inttoptr i64 %137 to %class.scoped_refptr.19*
  %139 = getelementptr inbounds %class.scoped_refptr.19, %class.scoped_refptr.19* %138, i64 0, i32 0
  %140 = load %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.blink::scheduler::MainThreadTaskQueue"** %139, align 8
  %141 = icmp eq %"class.blink::scheduler::MainThreadTaskQueue"* %140, null
  br i1 %141, label %148, label %142

142:                                              ; preds = %136
  %143 = getelementptr inbounds %"class.blink::scheduler::MainThreadTaskQueue", %"class.blink::scheduler::MainThreadTaskQueue"* %140, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %144 = atomicrmw sub i32* %143, i32 1 acq_rel
  %145 = icmp eq i32 %144, 1
  br i1 %145, label %146, label %148

146:                                              ; preds = %142
  tail call void @_ZN5blink9scheduler19MainThreadTaskQueueD1Ev(%"class.blink::scheduler::MainThreadTaskQueue"* nonnull %140) #8
  %147 = bitcast %"class.blink::scheduler::MainThreadTaskQueue"* %140 to i8*
  tail call void @_ZdlPv(i8* %147) #9
  br label %148

148:                                              ; preds = %136, %142, %146
  %149 = load i64, i64* %61, align 8
  %150 = inttoptr i64 %137 to i64*
  store i64 %149, i64* %150, align 8
  store %"class.blink::scheduler::MainThreadTaskQueue"* null, %"class.blink::scheduler::MainThreadTaskQueue"** %60, align 8
  %151 = load %class.scoped_refptr.19*, %class.scoped_refptr.19** %9, align 8
  %152 = getelementptr inbounds %class.scoped_refptr.19, %class.scoped_refptr.19* %151, i64 %58
  %153 = icmp eq %class.scoped_refptr.19* %152, %3
  %154 = select i1 %153, %class.scoped_refptr.19* %138, %class.scoped_refptr.19* %56
  %155 = load i32, i32* %6, align 8
  %156 = ptrtoint %class.scoped_refptr.19* %151 to i64
  br label %157

157:                                              ; preds = %52, %52, %148
  %158 = phi i64 [ %53, %52 ], [ %156, %148 ], [ %53, %52 ]
  %159 = phi i32 [ %54, %52 ], [ %155, %148 ], [ %54, %52 ]
  %160 = phi %class.scoped_refptr.19* [ %55, %52 ], [ %151, %148 ], [ %55, %52 ]
  %161 = phi %class.scoped_refptr.19* [ %56, %52 ], [ %154, %148 ], [ %56, %52 ]
  %162 = add i32 %57, 1
  %163 = icmp eq i32 %162, %159
  br i1 %163, label %18, label %52
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.421"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIi13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISF_SA_SG_EEiRS6_EENS_18HashTableAddResultISH_S7_EEOT0_OT1_(%"class.WTF::HashTable.418"*, i32* dereferenceable(4), %class.scoped_refptr.19* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.418", %"class.WTF::HashTable.418"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.421"*, %"struct.WTF::KeyValuePair.421"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.421"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.421"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIi13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.418"* %0, %"struct.WTF::KeyValuePair.421"* null)
  %9 = load %"struct.WTF::KeyValuePair.421"*, %"struct.WTF::KeyValuePair.421"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.421"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.418", %"class.WTF::HashTable.418"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.421", %"struct.WTF::KeyValuePair.421"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.421", %"struct.WTF::KeyValuePair.421"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %79, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair.421"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair.421"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %114, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -1
  %59 = select i1 %58, %"struct.WTF::KeyValuePair.421"* %52, %"struct.WTF::KeyValuePair.421"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.421", %"struct.WTF::KeyValuePair.421"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.421", %"struct.WTF::KeyValuePair.421"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair.421"* %59, null
  br i1 %69, label %79, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.421"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #8
  %72 = getelementptr inbounds %"class.WTF::HashTable.418", %"class.WTF::HashTable.418"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  %78 = load i32, i32* %1, align 4
  br label %79

79:                                               ; preds = %10, %68, %70
  %80 = phi i32 [ %78, %70 ], [ %16, %68 ], [ %16, %10 ]
  %81 = phi %"struct.WTF::KeyValuePair.421"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.421", %"struct.WTF::KeyValuePair.421"* %81, i64 0, i32 0
  store i32 %80, i32* %82, align 8
  %83 = getelementptr inbounds %class.scoped_refptr.19, %class.scoped_refptr.19* %2, i64 0, i32 0
  %84 = load %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.blink::scheduler::MainThreadTaskQueue"** %83, align 8
  %85 = icmp eq %"class.blink::scheduler::MainThreadTaskQueue"* %84, null
  br i1 %85, label %89, label %86

86:                                               ; preds = %79
  %87 = getelementptr inbounds %"class.blink::scheduler::MainThreadTaskQueue", %"class.blink::scheduler::MainThreadTaskQueue"* %84, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = atomicrmw add i32* %87, i32 1 monotonic
  br label %89

89:                                               ; preds = %86, %79
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair.421", %"struct.WTF::KeyValuePair.421"* %81, i64 0, i32 1
  %91 = ptrtoint %"class.blink::scheduler::MainThreadTaskQueue"* %84 to i64
  %92 = bitcast %class.scoped_refptr.19* %90 to i64*
  %93 = getelementptr inbounds %class.scoped_refptr.19, %class.scoped_refptr.19* %90, i64 0, i32 0
  %94 = load %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.blink::scheduler::MainThreadTaskQueue"** %93, align 8
  store i64 %91, i64* %92, align 8
  %95 = icmp eq %"class.blink::scheduler::MainThreadTaskQueue"* %94, null
  br i1 %95, label %102, label %96

96:                                               ; preds = %89
  %97 = getelementptr inbounds %"class.blink::scheduler::MainThreadTaskQueue", %"class.blink::scheduler::MainThreadTaskQueue"* %94, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = atomicrmw sub i32* %97, i32 1 acq_rel
  %99 = icmp eq i32 %98, 1
  br i1 %99, label %100, label %102

100:                                              ; preds = %96
  tail call void @_ZN5blink9scheduler19MainThreadTaskQueueD1Ev(%"class.blink::scheduler::MainThreadTaskQueue"* nonnull %94) #8
  %101 = bitcast %"class.blink::scheduler::MainThreadTaskQueue"* %94 to i8*
  tail call void @_ZdlPv(i8* %101) #9
  br label %102

102:                                              ; preds = %89, %96, %100
  %103 = getelementptr inbounds %"class.WTF::HashTable.418", %"class.WTF::HashTable.418"* %0, i64 0, i32 2
  %104 = load i32, i32* %103, align 4
  %105 = add i32 %104, 1
  store i32 %105, i32* %103, align 4
  %106 = getelementptr inbounds %"class.WTF::HashTable.418", %"class.WTF::HashTable.418"* %0, i64 0, i32 3
  %107 = load i32, i32* %106, align 8
  %108 = add i32 %107, %105
  %109 = shl i32 %108, 1
  %110 = load i32, i32* %12, align 8
  %111 = icmp ult i32 %109, %110
  br i1 %111, label %114, label %112

112:                                              ; preds = %102
  %113 = tail call %"struct.WTF::KeyValuePair.421"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIi13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.418"* %0, %"struct.WTF::KeyValuePair.421"* %81)
  br label %114

114:                                              ; preds = %50, %102, %112
  %115 = phi i8 [ 1, %102 ], [ 1, %112 ], [ 0, %50 ]
  %116 = phi %"struct.WTF::KeyValuePair.421"* [ %81, %102 ], [ %113, %112 ], [ %52, %50 ]
  %117 = insertvalue { %"struct.WTF::KeyValuePair.421"*, i8 } undef, %"struct.WTF::KeyValuePair.421"* %116, 0
  %118 = insertvalue { %"struct.WTF::KeyValuePair.421"*, i8 } %117, i8 %115, 1
  ret { %"struct.WTF::KeyValuePair.421"*, i8 } %118
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.421"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIi13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.418"*, %"struct.WTF::KeyValuePair.421"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.418", %"class.WTF::HashTable.418"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.418", %"class.WTF::HashTable.418"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #8
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %22, i8* %23) #8
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.3, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #8
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([125 x i8], [125 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIi13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEEEEEEPKcv, i64 0, i64 0)) #8
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #8
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.421"*
  %37 = call %"struct.WTF::KeyValuePair.421"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIi13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSC_IS6_EEEESD_NS_18PartitionAllocatorEE8RehashToEPS7_jSI_(%"class.WTF::HashTable.418"* %0, %"struct.WTF::KeyValuePair.421"* %36, i32 %32, %"struct.WTF::KeyValuePair.421"* %1) #8
  ret %"struct.WTF::KeyValuePair.421"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.421"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIi13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSC_IS6_EEEESD_NS_18PartitionAllocatorEE8RehashToEPS7_jSI_(%"class.WTF::HashTable.418"*, %"struct.WTF::KeyValuePair.421"*, i32, %"struct.WTF::KeyValuePair.421"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair.421"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.418", %"class.WTF::HashTable.418"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.418", %"class.WTF::HashTable.418"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.418"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair.421"*, %"struct.WTF::KeyValuePair.421"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair.421"* %16 to i64
  br label %55

18:                                               ; preds = %156
  %19 = bitcast %"class.WTF::HashTable.418"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %157, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair.421"* [ null, %10 ], [ %160, %18 ]
  %24 = phi i32 [ 0, %10 ], [ %158, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %25 = inttoptr i64 %22 to %"struct.WTF::KeyValuePair.421"*
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %51, label %27

27:                                               ; preds = %20
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %49, label %29

29:                                               ; preds = %27
  %30 = zext i32 %24 to i64
  br label %31

31:                                               ; preds = %46, %29
  %32 = phi i64 [ 0, %29 ], [ %47, %46 ]
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.421", %"struct.WTF::KeyValuePair.421"* %25, i64 %32, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, -1
  br i1 %35, label %46, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.421", %"struct.WTF::KeyValuePair.421"* %25, i64 %32, i32 1, i32 0
  %38 = load %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.blink::scheduler::MainThreadTaskQueue"** %37, align 8
  %39 = icmp eq %"class.blink::scheduler::MainThreadTaskQueue"* %38, null
  br i1 %39, label %46, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::scheduler::MainThreadTaskQueue", %"class.blink::scheduler::MainThreadTaskQueue"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = atomicrmw sub i32* %41, i32 1 acq_rel
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %44, label %46

44:                                               ; preds = %40
  tail call void @_ZN5blink9scheduler19MainThreadTaskQueueD1Ev(%"class.blink::scheduler::MainThreadTaskQueue"* nonnull %38) #8
  %45 = bitcast %"class.blink::scheduler::MainThreadTaskQueue"* %38 to i8*
  tail call void @_ZdlPv(i8* %45) #9
  br label %46

46:                                               ; preds = %44, %40, %36, %31
  %47 = add nuw nsw i64 %32, 1
  %48 = icmp eq i64 %47, %30
  br i1 %48, label %49, label %31

49:                                               ; preds = %46, %27
  %50 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %50) #8
  br label %51

51:                                               ; preds = %20, %49
  %52 = getelementptr inbounds %"class.WTF::HashTable.418", %"class.WTF::HashTable.418"* %0, i64 0, i32 3
  %53 = load i32, i32* %52, align 8
  %54 = and i32 %53, -2147483648
  store i32 %54, i32* %52, align 8
  ret %"struct.WTF::KeyValuePair.421"* %23

55:                                               ; preds = %13, %156
  %56 = phi i64 [ %17, %13 ], [ %157, %156 ]
  %57 = phi i32 [ %7, %13 ], [ %158, %156 ]
  %58 = phi %"struct.WTF::KeyValuePair.421"* [ %16, %13 ], [ %159, %156 ]
  %59 = phi %"struct.WTF::KeyValuePair.421"* [ null, %13 ], [ %160, %156 ]
  %60 = phi i32 [ 0, %13 ], [ %161, %156 ]
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.421", %"struct.WTF::KeyValuePair.421"* %58, i64 %61, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = add i32 %63, 1
  %65 = icmp ult i32 %64, 2
  br i1 %65, label %156, label %66

66:                                               ; preds = %55
  %67 = shl i32 %63, 15
  %68 = xor i32 %67, -1
  %69 = add i32 %63, %68
  %70 = lshr i32 %69, 10
  %71 = xor i32 %70, %69
  %72 = mul i32 %71, 9
  %73 = lshr i32 %72, 6
  %74 = xor i32 %73, %72
  %75 = shl i32 %74, 11
  %76 = xor i32 %75, -1
  %77 = add i32 %74, %76
  %78 = lshr i32 %77, 16
  %79 = xor i32 %78, %77
  %80 = and i32 %79, %14
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.421", %"struct.WTF::KeyValuePair.421"* %1, i64 %81
  %83 = ptrtoint %"struct.WTF::KeyValuePair.421"* %82 to i64
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.421", %"struct.WTF::KeyValuePair.421"* %82, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %104, label %87

87:                                               ; preds = %66
  %88 = xor i32 %79, -1
  %89 = lshr i32 %77, 23
  %90 = add i32 %89, %88
  %91 = shl i32 %90, 12
  %92 = xor i32 %91, %90
  %93 = lshr i32 %92, 7
  %94 = xor i32 %93, %92
  %95 = shl i32 %94, 2
  %96 = xor i32 %95, %94
  %97 = lshr i32 %96, 20
  %98 = xor i32 %97, %96
  %99 = or i32 %98, 1
  %100 = zext i32 %99 to i64
  br label %110

101:                                              ; preds = %117
  %102 = ptrtoint %"struct.WTF::KeyValuePair.421"* %124 to i64
  %103 = inttoptr i64 %119 to %"struct.WTF::KeyValuePair.421"*
  br label %104

104:                                              ; preds = %101, %66
  %105 = phi i64 [ %102, %101 ], [ %83, %66 ]
  %106 = phi %"struct.WTF::KeyValuePair.421"* [ %103, %101 ], [ null, %66 ]
  %107 = icmp eq %"struct.WTF::KeyValuePair.421"* %106, null
  %108 = ptrtoint %"struct.WTF::KeyValuePair.421"* %106 to i64
  %109 = select i1 %107, i64 %105, i64 %108
  br label %129

110:                                              ; preds = %117, %87
  %111 = phi i64 [ 0, %87 ], [ %119, %117 ]
  %112 = phi i32 [ %85, %87 ], [ %127, %117 ]
  %113 = phi i64 [ %83, %87 ], [ %125, %117 ]
  %114 = phi i64 [ %81, %87 ], [ %123, %117 ]
  %115 = phi i64 [ 0, %87 ], [ %121, %117 ]
  %116 = icmp eq i32 %112, %63
  br i1 %116, label %129, label %117

117:                                              ; preds = %110
  %118 = icmp eq i32 %112, -1
  %119 = select i1 %118, i64 %113, i64 %111
  %120 = icmp eq i64 %115, 0
  %121 = select i1 %120, i64 %100, i64 %115
  %122 = add i64 %121, %114
  %123 = and i64 %122, %15
  %124 = getelementptr inbounds %"struct.WTF::KeyValuePair.421", %"struct.WTF::KeyValuePair.421"* %1, i64 %123
  %125 = ptrtoint %"struct.WTF::KeyValuePair.421"* %124 to i64
  %126 = getelementptr inbounds %"struct.WTF::KeyValuePair.421", %"struct.WTF::KeyValuePair.421"* %124, i64 0, i32 0
  %127 = load i32, i32* %126, align 4
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %101, label %110

129:                                              ; preds = %110, %104
  %130 = phi i64 [ %109, %104 ], [ %113, %110 ]
  %131 = inttoptr i64 %130 to %"struct.WTF::KeyValuePair.421"*
  %132 = getelementptr inbounds %"struct.WTF::KeyValuePair.421", %"struct.WTF::KeyValuePair.421"* %131, i64 0, i32 1, i32 0
  %133 = load %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.blink::scheduler::MainThreadTaskQueue"** %132, align 8
  %134 = icmp eq %"class.blink::scheduler::MainThreadTaskQueue"* %133, null
  br i1 %134, label %141, label %135

135:                                              ; preds = %129
  %136 = getelementptr inbounds %"class.blink::scheduler::MainThreadTaskQueue", %"class.blink::scheduler::MainThreadTaskQueue"* %133, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = atomicrmw sub i32* %136, i32 1 acq_rel
  %138 = icmp eq i32 %137, 1
  br i1 %138, label %139, label %141

139:                                              ; preds = %135
  tail call void @_ZN5blink9scheduler19MainThreadTaskQueueD1Ev(%"class.blink::scheduler::MainThreadTaskQueue"* nonnull %133) #8
  %140 = bitcast %"class.blink::scheduler::MainThreadTaskQueue"* %133 to i8*
  tail call void @_ZdlPv(i8* %140) #9
  br label %141

141:                                              ; preds = %129, %135, %139
  %142 = getelementptr inbounds %"struct.WTF::KeyValuePair.421", %"struct.WTF::KeyValuePair.421"* %131, i64 0, i32 0
  %143 = load i32, i32* %62, align 8
  store i32 %143, i32* %142, align 8
  %144 = getelementptr inbounds %"struct.WTF::KeyValuePair.421", %"struct.WTF::KeyValuePair.421"* %131, i64 0, i32 1
  %145 = getelementptr inbounds %"struct.WTF::KeyValuePair.421", %"struct.WTF::KeyValuePair.421"* %58, i64 %61, i32 1
  %146 = getelementptr inbounds %class.scoped_refptr.19, %class.scoped_refptr.19* %145, i64 0, i32 0
  %147 = bitcast %class.scoped_refptr.19* %145 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = bitcast %class.scoped_refptr.19* %144 to i64*
  store i64 %148, i64* %149, align 8
  store %"class.blink::scheduler::MainThreadTaskQueue"* null, %"class.blink::scheduler::MainThreadTaskQueue"** %146, align 8
  %150 = load %"struct.WTF::KeyValuePair.421"*, %"struct.WTF::KeyValuePair.421"** %9, align 8
  %151 = getelementptr inbounds %"struct.WTF::KeyValuePair.421", %"struct.WTF::KeyValuePair.421"* %150, i64 %61
  %152 = icmp eq %"struct.WTF::KeyValuePair.421"* %151, %3
  %153 = select i1 %152, %"struct.WTF::KeyValuePair.421"* %131, %"struct.WTF::KeyValuePair.421"* %59
  %154 = load i32, i32* %6, align 8
  %155 = ptrtoint %"struct.WTF::KeyValuePair.421"* %150 to i64
  br label %156

156:                                              ; preds = %55, %141
  %157 = phi i64 [ %56, %55 ], [ %155, %141 ]
  %158 = phi i32 [ %57, %55 ], [ %154, %141 ]
  %159 = phi %"struct.WTF::KeyValuePair.421"* [ %58, %55 ], [ %150, %141 ]
  %160 = phi %"struct.WTF::KeyValuePair.421"* [ %59, %55 ], [ %153, %141 ]
  %161 = add i32 %60, 1
  %162 = icmp eq i32 %161, %158
  br i1 %162, label %18, label %55
}

; Function Attrs: nounwind
declare void @_ZN4base16sequence_manager9TaskQueue17QueueEnabledVoterD1Ev(%"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"*) unnamed_addr #4

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__14pairIPN5blink9scheduler19MainThreadTaskQueueEPN4base16sequence_manager9TaskQueue17QueueEnabledVoterEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseISC_EEvOT_(%"class.WTF::Vector.437"*, %"struct.std::__1::pair.440"* dereferenceable(16)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.437", %"class.WTF::Vector.437"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.437", %"class.WTF::Vector.437"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__1::pair.440"*, %"struct.std::__1::pair.440"** %6, align 8
  %8 = icmp ugt %"struct.std::__1::pair.440"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.std::__1::pair.440", %"struct.std::__1::pair.440"* %7, i64 %10
  %12 = icmp ugt %"struct.std::__1::pair.440"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.437", %"class.WTF::Vector.437"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"struct.std::__1::pair.440"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPN5blink9scheduler19MainThreadTaskQueueEPN4base16sequence_manager9TaskQueue17QueueEnabledVoterEEEEEmm(i64 %26) #8
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIPN5blink9scheduler19MainThreadTaskQueueEPN4base16sequence_manager9TaskQueue17QueueEnabledVoterEEEEEPKcv, i64 0, i64 0)) #8
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.437"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 4
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"struct.std::__1::pair.440"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 4
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"struct.std::__1::pair.440"*, %"struct.std::__1::pair.440"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"struct.std::__1::pair.440"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"struct.std::__1::pair.440"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !2

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #8
  %47 = bitcast %"class.WTF::Vector.437"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #8
  %51 = bitcast %"class.WTF::Vector.437"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"struct.std::__1::pair.440"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"struct.std::__1::pair.440"* %1 to i64
  %56 = ptrtoint %"struct.std::__1::pair.440"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 4
  %59 = getelementptr inbounds %"class.WTF::Vector.437", %"class.WTF::Vector.437"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !2

69:                                               ; preds = %54
  %70 = icmp eq %"struct.std::__1::pair.440"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPN5blink9scheduler19MainThreadTaskQueueEPN4base16sequence_manager9TaskQueue17QueueEnabledVoterEEEEEmm(i64 %71) #8
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIPN5blink9scheduler19MainThreadTaskQueueEPN4base16sequence_manager9TaskQueue17QueueEnabledVoterEEEEEPKcv, i64 0, i64 0)) #8
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.437"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"struct.std::__1::pair.440"*, %"struct.std::__1::pair.440"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"struct.std::__1::pair.440"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"struct.std::__1::pair.440"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !2

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #8
  %87 = bitcast %"class.WTF::Vector.437"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #8
  %91 = bitcast %"class.WTF::Vector.437"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 4
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"struct.std::__1::pair.440"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"struct.std::__1::pair.440"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"struct.std::__1::pair.440", %"struct.std::__1::pair.440"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"struct.std::__1::pair.440"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"struct.std::__1::pair.440"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"struct.std::__1::pair.440", %"struct.std::__1::pair.440"* %100, i64 %103
  %105 = bitcast %"struct.std::__1::pair.440"* %104 to i8*
  %106 = bitcast %"struct.std::__1::pair.440"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* align 8 %106, i64 16, i1 false) #8
  %107 = load i32, i32* %3, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPN5blink9scheduler19MainThreadTaskQueueEPN4base16sequence_manager9TaskQueue17QueueEnabledVoterEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.7, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.430"*, %"struct.WTF::KeyValuePair.430"* } @_ZN3WTF9HashTableI13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEENS_12KeyValuePairIS5_NSt3__110unique_ptrIN4base16sequence_manager9TaskQueue17QueueEnabledVoterENS7_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSL_ISF_EEEESM_NS_18PartitionAllocatorEE4findENSM_17RefPtrValuePeekerE(%"class.WTF::HashTable.427"*, %"class.blink::scheduler::MainThreadTaskQueue"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::scheduler::MainThreadTaskQueue"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable.427", %"class.WTF::HashTable.427"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.430"*, %"struct.WTF::KeyValuePair.430"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.430"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable.427", %"class.WTF::HashTable.427"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.430", %"struct.WTF::KeyValuePair.430"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.430", %"struct.WTF::KeyValuePair.430"* %33, i64 0, i32 0, i32 0
  %35 = load %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.blink::scheduler::MainThreadTaskQueue"** %34, align 8
  %36 = icmp eq %"class.blink::scheduler::MainThreadTaskQueue"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.430", %"struct.WTF::KeyValuePair.430"* %5, i64 %52, i32 0, i32 0
  %55 = load %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.blink::scheduler::MainThreadTaskQueue"** %54, align 8
  %56 = icmp eq %"class.blink::scheduler::MainThreadTaskQueue"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.430", %"struct.WTF::KeyValuePair.430"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.430", %"struct.WTF::KeyValuePair.430"* %62, i64 0, i32 0, i32 0
  %64 = load %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.blink::scheduler::MainThreadTaskQueue"** %63, align 8
  %65 = icmp eq %"class.blink::scheduler::MainThreadTaskQueue"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair.430"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair.430"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.430", %"struct.WTF::KeyValuePair.430"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.430", %"struct.WTF::KeyValuePair.430"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair.430"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair.430"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair.430"*, %"struct.WTF::KeyValuePair.430"* } undef, %"struct.WTF::KeyValuePair.430"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair.430"*, %"struct.WTF::KeyValuePair.430"* } %78, %"struct.WTF::KeyValuePair.430"* %77, 1
  ret { %"struct.WTF::KeyValuePair.430"*, %"struct.WTF::KeyValuePair.430"* } %79
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.430"*, i8 } @_ZN3WTF9HashTableI13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEENS_12KeyValuePairIS5_NSt3__110unique_ptrIN4base16sequence_manager9TaskQueue17QueueEnabledVoterENS7_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSL_ISF_EEEESM_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISO_SJ_SP_EERKS5_SF_EENS_18HashTableAddResultISQ_SG_EEOT0_OT1_(%"class.WTF::HashTable.427"*, %class.scoped_refptr.19* dereferenceable(8), %"class.std::__1::unique_ptr.431"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.427", %"class.WTF::HashTable.427"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.430"*, %"struct.WTF::KeyValuePair.430"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.430"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.430"* @_ZN3WTF9HashTableI13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEENS_12KeyValuePairIS5_NSt3__110unique_ptrIN4base16sequence_manager9TaskQueue17QueueEnabledVoterENS7_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSL_ISF_EEEESM_NS_18PartitionAllocatorEE6ExpandEPSG_(%"class.WTF::HashTable.427"* %0, %"struct.WTF::KeyValuePair.430"* null)
  %9 = load %"struct.WTF::KeyValuePair.430"*, %"struct.WTF::KeyValuePair.430"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.430"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.427", %"class.WTF::HashTable.427"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %class.scoped_refptr.19* %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.430", %"struct.WTF::KeyValuePair.430"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.430", %"struct.WTF::KeyValuePair.430"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.blink::scheduler::MainThreadTaskQueue"** %40, align 8
  %42 = icmp eq %"class.blink::scheduler::MainThreadTaskQueue"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::scheduler::MainThreadTaskQueue"*
  br i1 %42, label %90, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::scheduler::MainThreadTaskQueue"* [ %41, %44 ], [ %76, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.430"* [ %39, %44 ], [ %74, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.430"* [ null, %44 ], [ %69, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %73, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %71, %65 ]
  %64 = icmp eq %"class.blink::scheduler::MainThreadTaskQueue"* %59, %43
  br i1 %64, label %132, label %65

65:                                               ; preds = %58
  %66 = bitcast %"struct.WTF::KeyValuePair.430"* %60 to i8**
  %67 = load i8*, i8** %66, align 8
  %68 = icmp eq i8* %67, inttoptr (i64 -1 to i8*)
  %69 = select i1 %68, %"struct.WTF::KeyValuePair.430"* %60, %"struct.WTF::KeyValuePair.430"* %61
  %70 = icmp eq i64 %63, 0
  %71 = select i1 %70, i64 %57, i64 %63
  %72 = add i64 %71, %62
  %73 = and i64 %72, %15
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.430", %"struct.WTF::KeyValuePair.430"* %11, i64 %73
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.430", %"struct.WTF::KeyValuePair.430"* %74, i64 0, i32 0, i32 0
  %76 = load %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.blink::scheduler::MainThreadTaskQueue"** %75, align 8
  %77 = icmp eq %"class.blink::scheduler::MainThreadTaskQueue"* %76, null
  br i1 %77, label %78, label %58

78:                                               ; preds = %65
  %79 = icmp eq %"struct.WTF::KeyValuePair.430"* %69, null
  br i1 %79, label %90, label %80

80:                                               ; preds = %78
  %81 = bitcast %"struct.WTF::KeyValuePair.430"* %69 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 0, i64 16, i1 false) #8
  %82 = getelementptr inbounds %"class.WTF::HashTable.427", %"class.WTF::HashTable.427"* %0, i64 0, i32 3
  %83 = load i32, i32* %82, align 8
  %84 = add i32 %83, 2147483647
  %85 = and i32 %84, 2147483647
  %86 = and i32 %83, -2147483648
  %87 = or i32 %85, %86
  store i32 %87, i32* %82, align 8
  %88 = getelementptr inbounds %class.scoped_refptr.19, %class.scoped_refptr.19* %1, i64 0, i32 0
  %89 = load %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.blink::scheduler::MainThreadTaskQueue"** %88, align 8
  br label %90

90:                                               ; preds = %10, %78, %80
  %91 = phi %"class.blink::scheduler::MainThreadTaskQueue"* [ %89, %80 ], [ %43, %78 ], [ %43, %10 ]
  %92 = phi %"struct.WTF::KeyValuePair.430"* [ %69, %80 ], [ %74, %78 ], [ %39, %10 ]
  %93 = icmp eq %"class.blink::scheduler::MainThreadTaskQueue"* %91, null
  br i1 %93, label %97, label %94

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"class.blink::scheduler::MainThreadTaskQueue", %"class.blink::scheduler::MainThreadTaskQueue"* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = atomicrmw add i32* %95, i32 1 monotonic
  br label %97

97:                                               ; preds = %94, %90
  %98 = ptrtoint %"class.blink::scheduler::MainThreadTaskQueue"* %91 to i64
  %99 = bitcast %"struct.WTF::KeyValuePair.430"* %92 to i64*
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair.430", %"struct.WTF::KeyValuePair.430"* %92, i64 0, i32 0, i32 0
  %101 = load %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.blink::scheduler::MainThreadTaskQueue"** %100, align 8
  store i64 %98, i64* %99, align 8
  %102 = icmp eq %"class.blink::scheduler::MainThreadTaskQueue"* %101, null
  br i1 %102, label %109, label %103

103:                                              ; preds = %97
  %104 = getelementptr inbounds %"class.blink::scheduler::MainThreadTaskQueue", %"class.blink::scheduler::MainThreadTaskQueue"* %101, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = atomicrmw sub i32* %104, i32 1 acq_rel
  %106 = icmp eq i32 %105, 1
  br i1 %106, label %107, label %109

107:                                              ; preds = %103
  tail call void @_ZN5blink9scheduler19MainThreadTaskQueueD1Ev(%"class.blink::scheduler::MainThreadTaskQueue"* nonnull %101) #8
  %108 = bitcast %"class.blink::scheduler::MainThreadTaskQueue"* %101 to i8*
  tail call void @_ZdlPv(i8* %108) #9
  br label %109

109:                                              ; preds = %107, %103, %97
  %110 = getelementptr inbounds %"struct.WTF::KeyValuePair.430", %"struct.WTF::KeyValuePair.430"* %92, i64 0, i32 1
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.431", %"class.std::__1::unique_ptr.431"* %2, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.431"* %2 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* null, %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"** %111, align 8
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr.431", %"class.std::__1::unique_ptr.431"* %110, i64 0, i32 0, i32 0, i32 0
  %115 = load %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"*, %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"** %114, align 8
  %116 = bitcast %"class.std::__1::unique_ptr.431"* %110 to i64*
  store i64 %113, i64* %116, align 8
  %117 = icmp eq %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* %115, null
  br i1 %117, label %120, label %118

118:                                              ; preds = %109
  tail call void @_ZN4base16sequence_manager9TaskQueue17QueueEnabledVoterD1Ev(%"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* nonnull %115) #8
  %119 = bitcast %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* %115 to i8*
  tail call void @_ZdlPv(i8* %119) #9
  br label %120

120:                                              ; preds = %109, %118
  %121 = getelementptr inbounds %"class.WTF::HashTable.427", %"class.WTF::HashTable.427"* %0, i64 0, i32 2
  %122 = load i32, i32* %121, align 4
  %123 = add i32 %122, 1
  store i32 %123, i32* %121, align 4
  %124 = getelementptr inbounds %"class.WTF::HashTable.427", %"class.WTF::HashTable.427"* %0, i64 0, i32 3
  %125 = load i32, i32* %124, align 8
  %126 = add i32 %125, %123
  %127 = shl i32 %126, 1
  %128 = load i32, i32* %12, align 8
  %129 = icmp ult i32 %127, %128
  br i1 %129, label %132, label %130

130:                                              ; preds = %120
  %131 = tail call %"struct.WTF::KeyValuePair.430"* @_ZN3WTF9HashTableI13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEENS_12KeyValuePairIS5_NSt3__110unique_ptrIN4base16sequence_manager9TaskQueue17QueueEnabledVoterENS7_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSL_ISF_EEEESM_NS_18PartitionAllocatorEE6ExpandEPSG_(%"class.WTF::HashTable.427"* %0, %"struct.WTF::KeyValuePair.430"* %92)
  br label %132

132:                                              ; preds = %58, %120, %130
  %133 = phi i8 [ 1, %120 ], [ 1, %130 ], [ 0, %58 ]
  %134 = phi %"struct.WTF::KeyValuePair.430"* [ %92, %120 ], [ %131, %130 ], [ %60, %58 ]
  %135 = insertvalue { %"struct.WTF::KeyValuePair.430"*, i8 } undef, %"struct.WTF::KeyValuePair.430"* %134, 0
  %136 = insertvalue { %"struct.WTF::KeyValuePair.430"*, i8 } %135, i8 %133, 1
  ret { %"struct.WTF::KeyValuePair.430"*, i8 } %136
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.430"* @_ZN3WTF9HashTableI13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEENS_12KeyValuePairIS5_NSt3__110unique_ptrIN4base16sequence_manager9TaskQueue17QueueEnabledVoterENS7_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSL_ISF_EEEESM_NS_18PartitionAllocatorEE6ExpandEPSG_(%"class.WTF::HashTable.427"*, %"struct.WTF::KeyValuePair.430"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.427", %"class.WTF::HashTable.427"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.427", %"class.WTF::HashTable.427"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #8
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %22, i8* %23) #8
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.3, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #8
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([277 x i8], [277 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairI13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEENSt3__110unique_ptrIN4base16sequence_manager9TaskQueue17QueueEnabledVoterENS7_14default_deleteISC_EEEEEEEEPKcv, i64 0, i64 0)) #8
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #8
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.430"*
  %37 = call %"struct.WTF::KeyValuePair.430"* @_ZN3WTF9HashTableI13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEENS_12KeyValuePairIS5_NSt3__110unique_ptrIN4base16sequence_manager9TaskQueue17QueueEnabledVoterENS7_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSL_ISF_EEEESM_NS_18PartitionAllocatorEE8RehashToEPSG_jSR_(%"class.WTF::HashTable.427"* %0, %"struct.WTF::KeyValuePair.430"* %36, i32 %32, %"struct.WTF::KeyValuePair.430"* %1) #8
  ret %"struct.WTF::KeyValuePair.430"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.430"* @_ZN3WTF9HashTableI13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEENS_12KeyValuePairIS5_NSt3__110unique_ptrIN4base16sequence_manager9TaskQueue17QueueEnabledVoterENS7_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSL_ISF_EEEESM_NS_18PartitionAllocatorEE8RehashToEPSG_jSR_(%"class.WTF::HashTable.427"*, %"struct.WTF::KeyValuePair.430"*, i32, %"struct.WTF::KeyValuePair.430"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.427", align 8
  %6 = bitcast %"class.WTF::HashTable.427"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.WTF::HashTable.427", %"class.WTF::HashTable.427"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.427", %"class.WTF::HashTable.427"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.427", %"class.WTF::HashTable.427"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.427", %"class.WTF::HashTable.427"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.427"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.430"* %1, %"struct.WTF::KeyValuePair.430"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.427", %"class.WTF::HashTable.427"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.427", %"class.WTF::HashTable.427"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.430"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.427"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.427"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.430"*, %"struct.WTF::KeyValuePair.430"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.430"* %22 to i64
  br label %42

24:                                               ; preds = %60
  %25 = bitcast %"class.WTF::HashTable.427"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.427"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %61, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.430"* [ null, %16 ], [ %64, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %62, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.430"*
  call void @_ZN3WTF9HashTableI13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEENS_12KeyValuePairIS5_NSt3__110unique_ptrIN4base16sequence_manager9TaskQueue17QueueEnabledVoterENS7_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSL_ISF_EEEESM_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPSG_j(%"struct.WTF::KeyValuePair.430"* nonnull %37, i32 %34) #8
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable.427", %"class.WTF::HashTable.427"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8
  ret %"struct.WTF::KeyValuePair.430"* %33

42:                                               ; preds = %21, %60
  %43 = phi i64 [ %61, %60 ], [ %23, %21 ]
  %44 = phi i32 [ %62, %60 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair.430"* [ %63, %60 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair.430"* [ %64, %60 ], [ null, %21 ]
  %47 = phi i32 [ %65, %60 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.430", %"struct.WTF::KeyValuePair.430"* %45, i64 %48
  %50 = bitcast %"struct.WTF::KeyValuePair.430"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %52 [
    i64 -1, label %60
    i64 0, label %60
  ]

52:                                               ; preds = %42
  %53 = call %"struct.WTF::KeyValuePair.430"* @_ZN3WTF9HashTableI13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEENS_12KeyValuePairIS5_NSt3__110unique_ptrIN4base16sequence_manager9TaskQueue17QueueEnabledVoterENS7_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSL_ISF_EEEESM_NS_18PartitionAllocatorEE8ReinsertEOSG_(%"class.WTF::HashTable.427"* nonnull %5, %"struct.WTF::KeyValuePair.430"* dereferenceable(16) %49)
  %54 = load %"struct.WTF::KeyValuePair.430"*, %"struct.WTF::KeyValuePair.430"** %15, align 8
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.430", %"struct.WTF::KeyValuePair.430"* %54, i64 %48
  %56 = icmp eq %"struct.WTF::KeyValuePair.430"* %55, %3
  %57 = select i1 %56, %"struct.WTF::KeyValuePair.430"* %53, %"struct.WTF::KeyValuePair.430"* %46
  %58 = load i32, i32* %12, align 8
  %59 = ptrtoint %"struct.WTF::KeyValuePair.430"* %54 to i64
  br label %60

60:                                               ; preds = %42, %42, %52
  %61 = phi i64 [ %43, %42 ], [ %59, %52 ], [ %43, %42 ]
  %62 = phi i32 [ %44, %42 ], [ %58, %52 ], [ %44, %42 ]
  %63 = phi %"struct.WTF::KeyValuePair.430"* [ %45, %42 ], [ %54, %52 ], [ %45, %42 ]
  %64 = phi %"struct.WTF::KeyValuePair.430"* [ %46, %42 ], [ %57, %52 ], [ %46, %42 ]
  %65 = add i32 %47, 1
  %66 = icmp eq i32 %65, %62
  br i1 %66, label %24, label %42
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.430"* @_ZN3WTF9HashTableI13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEENS_12KeyValuePairIS5_NSt3__110unique_ptrIN4base16sequence_manager9TaskQueue17QueueEnabledVoterENS7_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSL_ISF_EEEESM_NS_18PartitionAllocatorEE8ReinsertEOSG_(%"class.WTF::HashTable.427"*, %"struct.WTF::KeyValuePair.430"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.430", %"struct.WTF::KeyValuePair.430"* %1, i64 0, i32 0
  %4 = tail call { %"struct.WTF::KeyValuePair.430"*, i8 } @_ZN3WTF9HashTableI13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEENS_12KeyValuePairIS5_NSt3__110unique_ptrIN4base16sequence_manager9TaskQueue17QueueEnabledVoterENS7_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSL_ISF_EEEESM_NS_18PartitionAllocatorEE16LookupForWritingERKS5_(%"class.WTF::HashTable.427"* %0, %class.scoped_refptr.19* dereferenceable(8) %3)
  %5 = extractvalue { %"struct.WTF::KeyValuePair.430"*, i8 } %4, 0
  %6 = getelementptr inbounds %"struct.WTF::KeyValuePair.430", %"struct.WTF::KeyValuePair.430"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"*, %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"** %6, align 8
  store %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* null, %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"** %6, align 8
  %8 = icmp eq %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %2
  tail call void @_ZN4base16sequence_manager9TaskQueue17QueueEnabledVoterD1Ev(%"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* nonnull %7) #8
  %10 = bitcast %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #9
  br label %11

11:                                               ; preds = %9, %2
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair.430", %"struct.WTF::KeyValuePair.430"* %5, i64 0, i32 0, i32 0
  %13 = load %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.blink::scheduler::MainThreadTaskQueue"** %12, align 8
  %14 = icmp eq %"class.blink::scheduler::MainThreadTaskQueue"* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::scheduler::MainThreadTaskQueue", %"class.blink::scheduler::MainThreadTaskQueue"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw sub i32* %16, i32 1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %21

19:                                               ; preds = %15
  tail call void @_ZN5blink9scheduler19MainThreadTaskQueueD1Ev(%"class.blink::scheduler::MainThreadTaskQueue"* nonnull %13) #8
  %20 = bitcast %"class.blink::scheduler::MainThreadTaskQueue"* %13 to i8*
  tail call void @_ZdlPv(i8* %20) #9
  br label %21

21:                                               ; preds = %11, %15, %19
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair.430", %"struct.WTF::KeyValuePair.430"* %1, i64 0, i32 0, i32 0
  %23 = bitcast %"struct.WTF::KeyValuePair.430"* %1 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"struct.WTF::KeyValuePair.430"* %5 to i64*
  store i64 %24, i64* %25, align 8
  store %"class.blink::scheduler::MainThreadTaskQueue"* null, %"class.blink::scheduler::MainThreadTaskQueue"** %22, align 8
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair.430", %"struct.WTF::KeyValuePair.430"* %5, i64 0, i32 1
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.430", %"struct.WTF::KeyValuePair.430"* %1, i64 0, i32 1
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr.431", %"class.std::__1::unique_ptr.431"* %27, i64 0, i32 0, i32 0, i32 0
  %29 = bitcast %"class.std::__1::unique_ptr.431"* %27 to i64*
  %30 = load i64, i64* %29, align 8
  store %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* null, %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"** %28, align 8
  %31 = bitcast %"class.std::__1::unique_ptr.431"* %26 to i64*
  store i64 %30, i64* %31, align 8
  ret %"struct.WTF::KeyValuePair.430"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.430"*, i8 } @_ZN3WTF9HashTableI13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEENS_12KeyValuePairIS5_NSt3__110unique_ptrIN4base16sequence_manager9TaskQueue17QueueEnabledVoterENS7_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSL_ISF_EEEESM_NS_18PartitionAllocatorEE16LookupForWritingERKS5_(%"class.WTF::HashTable.427"*, %class.scoped_refptr.19* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.427", %"class.WTF::HashTable.427"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.430"*, %"struct.WTF::KeyValuePair.430"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.427", %"class.WTF::HashTable.427"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %class.scoped_refptr.19* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.430", %"struct.WTF::KeyValuePair.430"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.430"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.430", %"struct.WTF::KeyValuePair.430"* %32, i64 0, i32 0, i32 0
  %35 = load %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.blink::scheduler::MainThreadTaskQueue"** %34, align 8
  %36 = icmp eq %"class.blink::scheduler::MainThreadTaskQueue"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::scheduler::MainThreadTaskQueue"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %69
  %53 = ptrtoint %"struct.WTF::KeyValuePair.430"* %78 to i64
  %54 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair.430"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.430"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.430"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.430"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %83

61:                                               ; preds = %69, %38
  %62 = phi %"class.blink::scheduler::MainThreadTaskQueue"* [ %35, %38 ], [ %81, %69 ]
  %63 = phi i64 [ 0, %38 ], [ %73, %69 ]
  %64 = phi i64 [ %33, %38 ], [ %79, %69 ]
  %65 = phi %"struct.WTF::KeyValuePair.430"* [ %32, %38 ], [ %78, %69 ]
  %66 = phi i64 [ %31, %38 ], [ %77, %69 ]
  %67 = phi i64 [ 0, %38 ], [ %75, %69 ]
  %68 = icmp eq %"class.blink::scheduler::MainThreadTaskQueue"* %62, %37
  br i1 %68, label %83, label %69

69:                                               ; preds = %61
  %70 = bitcast %"struct.WTF::KeyValuePair.430"* %65 to i8**
  %71 = load i8*, i8** %70, align 8
  %72 = icmp eq i8* %71, inttoptr (i64 -1 to i8*)
  %73 = select i1 %72, i64 %64, i64 %63
  %74 = icmp eq i64 %67, 0
  %75 = select i1 %74, i64 %51, i64 %67
  %76 = add i64 %75, %66
  %77 = and i64 %76, %8
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.430", %"struct.WTF::KeyValuePair.430"* %4, i64 %77
  %79 = ptrtoint %"struct.WTF::KeyValuePair.430"* %78 to i64
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.430", %"struct.WTF::KeyValuePair.430"* %78, i64 0, i32 0, i32 0
  %81 = load %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.blink::scheduler::MainThreadTaskQueue"** %80, align 8
  %82 = icmp eq %"class.blink::scheduler::MainThreadTaskQueue"* %81, null
  br i1 %82, label %52, label %61

83:                                               ; preds = %61, %55
  %84 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %85 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %86 = inttoptr i64 %84 to %"struct.WTF::KeyValuePair.430"*
  %87 = insertvalue { %"struct.WTF::KeyValuePair.430"*, i8 } undef, %"struct.WTF::KeyValuePair.430"* %86, 0
  %88 = insertvalue { %"struct.WTF::KeyValuePair.430"*, i8 } %87, i8 %85, 1
  ret { %"struct.WTF::KeyValuePair.430"*, i8 } %88
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableI13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEES5_NS_17IdentityExtractorENS_10RefPtrHashIS4_EENS_10HashTraitsIS5_EESA_NS_18PartitionAllocatorEE5eraseEPKS5_(%"class.WTF::HashTable.423"*, %class.scoped_refptr.19*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.scoped_refptr.19, %class.scoped_refptr.19* %1, i64 0, i32 0
  %4 = load %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.blink::scheduler::MainThreadTaskQueue"** %3, align 8
  %5 = icmp eq %"class.blink::scheduler::MainThreadTaskQueue"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::scheduler::MainThreadTaskQueue", %"class.blink::scheduler::MainThreadTaskQueue"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  tail call void @_ZN5blink9scheduler19MainThreadTaskQueueD1Ev(%"class.blink::scheduler::MainThreadTaskQueue"* nonnull %4) #8
  %11 = bitcast %"class.blink::scheduler::MainThreadTaskQueue"* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #9
  br label %12

12:                                               ; preds = %2, %6, %10
  %13 = bitcast %class.scoped_refptr.19* %1 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %13, align 8
  %14 = getelementptr inbounds %"class.WTF::HashTable.423", %"class.WTF::HashTable.423"* %0, i64 0, i32 3
  %15 = load i32, i32* %14, align 8
  %16 = add i32 %15, 1
  %17 = and i32 %16, 2147483647
  %18 = and i32 %15, -2147483648
  %19 = or i32 %17, %18
  store i32 %19, i32* %14, align 8
  %20 = getelementptr inbounds %"class.WTF::HashTable.423", %"class.WTF::HashTable.423"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = add i32 %21, -1
  store i32 %22, i32* %20, align 4
  %23 = mul i32 %22, 6
  %24 = getelementptr inbounds %"class.WTF::HashTable.423", %"class.WTF::HashTable.423"* %0, i64 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = icmp ult i32 %23, %25
  %27 = icmp ugt i32 %25, 8
  %28 = and i1 %26, %27
  br i1 %28, label %29, label %36

29:                                               ; preds = %12
  %30 = lshr i32 %25, 1
  %31 = zext i32 %30 to i64
  %32 = shl nuw nsw i64 %31, 3
  %33 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %32, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEEEEPKcv, i64 0, i64 0)) #8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %33, i8 0, i64 %32, i1 false) #8
  %34 = bitcast i8* %33 to %class.scoped_refptr.19*
  %35 = tail call %class.scoped_refptr.19* @_ZN3WTF9HashTableI13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEES5_NS_17IdentityExtractorENS_10RefPtrHashIS4_EENS_10HashTraitsIS5_EESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSD_(%"class.WTF::HashTable.423"* %0, %class.scoped_refptr.19* %34, i32 %30, %class.scoped_refptr.19* null) #8
  br label %36

36:                                               ; preds = %29, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableI13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEENS_12KeyValuePairIS5_NSt3__110unique_ptrIN4base16sequence_manager9TaskQueue17QueueEnabledVoterENS7_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSL_ISF_EEEESM_NS_18PartitionAllocatorEE5eraseEPKSG_(%"class.WTF::HashTable.427"*, %"struct.WTF::KeyValuePair.430"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.430", %"struct.WTF::KeyValuePair.430"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"*, %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"** %3, align 8
  store %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* null, %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"** %3, align 8
  %5 = icmp eq %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  tail call void @_ZN4base16sequence_manager9TaskQueue17QueueEnabledVoterD1Ev(%"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* nonnull %4) #8
  %7 = bitcast %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #9
  br label %8

8:                                                ; preds = %6, %2
  %9 = getelementptr inbounds %"struct.WTF::KeyValuePair.430", %"struct.WTF::KeyValuePair.430"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.blink::scheduler::MainThreadTaskQueue"** %9, align 8
  %11 = icmp eq %"class.blink::scheduler::MainThreadTaskQueue"* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::scheduler::MainThreadTaskQueue", %"class.blink::scheduler::MainThreadTaskQueue"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw sub i32* %13, i32 1 acq_rel
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %18

16:                                               ; preds = %12
  tail call void @_ZN5blink9scheduler19MainThreadTaskQueueD1Ev(%"class.blink::scheduler::MainThreadTaskQueue"* nonnull %10) #8
  %17 = bitcast %"class.blink::scheduler::MainThreadTaskQueue"* %10 to i8*
  tail call void @_ZdlPv(i8* %17) #9
  br label %18

18:                                               ; preds = %8, %12, %16
  %19 = bitcast %"struct.WTF::KeyValuePair.430"* %1 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %19, align 8
  %20 = getelementptr inbounds %"class.WTF::HashTable.427", %"class.WTF::HashTable.427"* %0, i64 0, i32 3
  %21 = load i32, i32* %20, align 8
  %22 = add i32 %21, 1
  %23 = and i32 %22, 2147483647
  %24 = and i32 %21, -2147483648
  %25 = or i32 %23, %24
  store i32 %25, i32* %20, align 8
  %26 = getelementptr inbounds %"class.WTF::HashTable.427", %"class.WTF::HashTable.427"* %0, i64 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = add i32 %27, -1
  store i32 %28, i32* %26, align 4
  %29 = mul i32 %28, 6
  %30 = getelementptr inbounds %"class.WTF::HashTable.427", %"class.WTF::HashTable.427"* %0, i64 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = icmp ult i32 %29, %31
  %33 = icmp ugt i32 %31, 8
  %34 = and i1 %32, %33
  br i1 %34, label %35, label %42

35:                                               ; preds = %18
  %36 = lshr i32 %31, 1
  %37 = zext i32 %36 to i64
  %38 = shl nuw nsw i64 %37, 4
  %39 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([277 x i8], [277 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairI13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEENSt3__110unique_ptrIN4base16sequence_manager9TaskQueue17QueueEnabledVoterENS7_14default_deleteISC_EEEEEEEEPKcv, i64 0, i64 0)) #8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %39, i8 0, i64 %38, i1 false) #8
  %40 = bitcast i8* %39 to %"struct.WTF::KeyValuePair.430"*
  %41 = tail call %"struct.WTF::KeyValuePair.430"* @_ZN3WTF9HashTableI13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEENS_12KeyValuePairIS5_NSt3__110unique_ptrIN4base16sequence_manager9TaskQueue17QueueEnabledVoterENS7_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSL_ISF_EEEESM_NS_18PartitionAllocatorEE8RehashToEPSG_jSR_(%"class.WTF::HashTable.427"* %0, %"struct.WTF::KeyValuePair.430"* %40, i32 %36, %"struct.WTF::KeyValuePair.430"* null) #8
  br label %42

42:                                               ; preds = %35, %18
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__14pairIPN5blink9scheduler19MainThreadTaskQueueEPN4base16sequence_manager9TaskQueue17QueueEnabledVoterEEELj0ENS_18PartitionAllocatorEE7EraseAtEj(%"class.WTF::Vector.437"*, i32) local_unnamed_addr #7 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.437", %"class.WTF::Vector.437"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i8* %14, i8* %15) #8
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 2050, %"class.logging::CheckOpResult"* nonnull %4) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %23 = getelementptr inbounds %"class.WTF::Vector.437", %"class.WTF::Vector.437"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::pair.440"*, %"struct.std::__1::pair.440"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.std::__1::pair.440", %"struct.std::__1::pair.440"* %24, i64 %25
  %27 = getelementptr inbounds %"struct.std::__1::pair.440", %"struct.std::__1::pair.440"* %26, i64 1
  %28 = icmp ne %"struct.std::__1::pair.440"* %26, null
  %29 = icmp ne %"struct.std::__1::pair.440"* %27, null
  %30 = and i1 %28, %29
  br i1 %30, label %31, label %40, !prof !2

31:                                               ; preds = %22
  %32 = load i32, i32* %8, align 4
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.std::__1::pair.440", %"struct.std::__1::pair.440"* %24, i64 %33
  %35 = bitcast %"struct.std::__1::pair.440"* %26 to i8*
  %36 = bitcast %"struct.std::__1::pair.440"* %27 to i8*
  %37 = ptrtoint %"struct.std::__1::pair.440"* %34 to i64
  %38 = ptrtoint %"struct.std::__1::pair.440"* %27 to i64
  %39 = sub i64 %37, %38
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %35, i8* nonnull align 8 %36, i64 %39, i1 false) #8
  br label %40

40:                                               ; preds = %22, %31
  %41 = load i32, i32* %8, align 4
  %42 = add i32 %41, -1
  store i32 %42, i32* %8, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::TracedDictionary"*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8perfetto8internal9WriteImplIRKN3WTF7HashMapIi13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEENS2_7IntHashIiEENS2_10HashTraitsIiEENSB_IS8_EENS2_18PartitionAllocatorEE18HashMapValuesProxyEEENS_26check_traced_value_supportIDTdeclsr3stdE5beginclsr3stdE7declvalIRT_EEEEvvE4typeENS_4base12priority_tagILm1EEENS_11TracedValueEOSK_(%"class.perfetto::TracedValue"*, %"class.WTF::HashMap<int, scoped_refptr<blink::scheduler::MainThreadTaskQueue>, WTF::IntHash<int>, WTF::HashTraits<int>, WTF::HashTraits<scoped_refptr<blink::scheduler::MainThreadTaskQueue> >, WTF::PartitionAllocator>::HashMapValuesProxy"* dereferenceable(24)) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.perfetto::TracedValue", align 8
  %4 = alloca %"class.perfetto::TracedValue", align 8
  %5 = alloca %"class.perfetto::TracedValue", align 8
  %6 = alloca %"class.perfetto::TracedArray", align 8
  %7 = bitcast %"class.perfetto::TracedArray"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #8
  %8 = bitcast %"class.perfetto::TracedArray"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  call void @_ZNO8perfetto11TracedValue10WriteArrayEv(%"class.perfetto::TracedArray"* nonnull sret %6, %"class.perfetto::TracedValue"* %0) #8
  %9 = getelementptr inbounds %"class.WTF::HashMap<int, scoped_refptr<blink::scheduler::MainThreadTaskQueue>, WTF::IntHash<int>, WTF::HashTraits<int>, WTF::HashTraits<scoped_refptr<blink::scheduler::MainThreadTaskQueue> >, WTF::PartitionAllocator>::HashMapValuesProxy", %"class.WTF::HashMap<int, scoped_refptr<blink::scheduler::MainThreadTaskQueue>, WTF::IntHash<int>, WTF::HashTraits<int>, WTF::HashTraits<scoped_refptr<blink::scheduler::MainThreadTaskQueue> >, WTF::PartitionAllocator>::HashMapValuesProxy"* %1, i64 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %"class.WTF::HashMap<int, scoped_refptr<blink::scheduler::MainThreadTaskQueue>, WTF::IntHash<int>, WTF::HashTraits<int>, WTF::HashTraits<scoped_refptr<blink::scheduler::MainThreadTaskQueue> >, WTF::PartitionAllocator>::HashMapValuesProxy", %"class.WTF::HashMap<int, scoped_refptr<blink::scheduler::MainThreadTaskQueue>, WTF::IntHash<int>, WTF::HashTraits<int>, WTF::HashTraits<scoped_refptr<blink::scheduler::MainThreadTaskQueue> >, WTF::PartitionAllocator>::HashMapValuesProxy"* %1, i64 0, i32 0, i32 0, i32 0
  %13 = load %"struct.WTF::KeyValuePair.421"*, %"struct.WTF::KeyValuePair.421"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::HashMap<int, scoped_refptr<blink::scheduler::MainThreadTaskQueue>, WTF::IntHash<int>, WTF::HashTraits<int>, WTF::HashTraits<scoped_refptr<blink::scheduler::MainThreadTaskQueue> >, WTF::PartitionAllocator>::HashMapValuesProxy", %"class.WTF::HashMap<int, scoped_refptr<blink::scheduler::MainThreadTaskQueue>, WTF::IntHash<int>, WTF::HashTraits<int>, WTF::HashTraits<scoped_refptr<blink::scheduler::MainThreadTaskQueue> >, WTF::PartitionAllocator>::HashMapValuesProxy"* %1, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair.421", %"struct.WTF::KeyValuePair.421"* %13, i64 %16
  br i1 %11, label %36, label %18

18:                                               ; preds = %2
  %19 = icmp eq i32 %15, 0
  br i1 %19, label %29, label %20

20:                                               ; preds = %18, %26
  %21 = phi %"struct.WTF::KeyValuePair.421"* [ %27, %26 ], [ %13, %18 ]
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair.421", %"struct.WTF::KeyValuePair.421"* %21, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = add i32 %23, 1
  %25 = icmp ult i32 %24, 2
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.421", %"struct.WTF::KeyValuePair.421"* %21, i64 1
  %28 = icmp eq %"struct.WTF::KeyValuePair.421"* %27, %17
  br i1 %28, label %36, label %20

29:                                               ; preds = %20, %18
  %30 = phi %"struct.WTF::KeyValuePair.421"* [ %13, %18 ], [ %21, %20 ]
  %31 = icmp eq %"struct.WTF::KeyValuePair.421"* %30, %17
  br i1 %31, label %36, label %32

32:                                               ; preds = %29
  %33 = bitcast %"class.perfetto::TracedValue"* %5 to i8*
  %34 = bitcast %"class.perfetto::TracedValue"* %4 to i8*
  %35 = bitcast %"class.perfetto::TracedValue"* %3 to i8*
  br label %37

36:                                               ; preds = %26, %44, %56, %53, %2, %29
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #8
  ret void

37:                                               ; preds = %32, %56
  %38 = phi %"struct.WTF::KeyValuePair.421"* [ %30, %32 ], [ %48, %56 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33)
  call void @_ZN8perfetto11TracedArray10AppendItemEv(%"class.perfetto::TracedValue"* nonnull sret %5, %"class.perfetto::TracedArray"* nonnull %6) #8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %34, i8* nonnull align 8 %33, i64 16, i1 false) #8
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.421", %"struct.WTF::KeyValuePair.421"* %38, i64 0, i32 1, i32 0
  %40 = load %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.blink::scheduler::MainThreadTaskQueue"** %39, align 8
  %41 = icmp eq %"class.blink::scheduler::MainThreadTaskQueue"* %40, null
  br i1 %41, label %42, label %43

42:                                               ; preds = %37
  call void @_ZNO8perfetto11TracedValue12WritePointerEPKv(%"class.perfetto::TracedValue"* nonnull %4, i8* null) #8
  br label %44

43:                                               ; preds = %37
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %35, i8* nonnull align 8 %34, i64 16, i1 false) #8
  call void @_ZNK5blink9scheduler19MainThreadTaskQueue14WriteIntoTraceEN8perfetto11TracedValueE(%"class.blink::scheduler::MainThreadTaskQueue"* nonnull %40, %"class.perfetto::TracedValue"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #8
  br label %44

44:                                               ; preds = %42, %43
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33)
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.421", %"struct.WTF::KeyValuePair.421"* %38, i64 1
  %46 = icmp eq %"struct.WTF::KeyValuePair.421"* %45, %17
  br i1 %46, label %36, label %47

47:                                               ; preds = %44, %53
  %48 = phi %"struct.WTF::KeyValuePair.421"* [ %54, %53 ], [ %45, %44 ]
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.421", %"struct.WTF::KeyValuePair.421"* %48, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = add i32 %50, 1
  %52 = icmp ult i32 %51, 2
  br i1 %52, label %53, label %56

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.421", %"struct.WTF::KeyValuePair.421"* %48, i64 1
  %55 = icmp eq %"struct.WTF::KeyValuePair.421"* %54, %17
  br i1 %55, label %36, label %47

56:                                               ; preds = %47
  %57 = icmp eq %"struct.WTF::KeyValuePair.421"* %48, %17
  br i1 %57, label %36, label %37
}

declare void @_ZNO8perfetto11TracedValue10WriteArrayEv(%"class.perfetto::TracedArray"* sret, %"class.perfetto::TracedValue"*) local_unnamed_addr #3

declare void @_ZN8perfetto11TracedArray10AppendItemEv(%"class.perfetto::TracedValue"* sret, %"class.perfetto::TracedArray"*) local_unnamed_addr #3

declare void @_ZNO8perfetto11TracedValue12WritePointerEPKv(%"class.perfetto::TracedValue"*, i8*) local_unnamed_addr #3

declare void @_ZNK5blink9scheduler19MainThreadTaskQueue14WriteIntoTraceEN8perfetto11TracedValueE(%"class.blink::scheduler::MainThreadTaskQueue"*, %"class.perfetto::TracedValue"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8perfetto8internal9WriteImplIRKN3WTF7HashSetI13scoped_refptrIN5blink9scheduler19MainThreadTaskQueueEENS2_10RefPtrHashIS7_EENS2_10HashTraitsIS8_EENS2_18PartitionAllocatorEEEEENS_26check_traced_value_supportIDTdeclsr3stdE5beginclsr3stdE7declvalIRT_EEEEvvE4typeENS_4base12priority_tagILm1EEENS_11TracedValueEOSI_(%"class.perfetto::TracedValue"*, %"class.WTF::HashSet.422"* dereferenceable(24)) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.perfetto::TracedValue", align 8
  %4 = alloca %"class.perfetto::TracedValue", align 8
  %5 = alloca %"class.perfetto::TracedValue", align 8
  %6 = alloca %"class.perfetto::TracedArray", align 8
  %7 = bitcast %"class.perfetto::TracedArray"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #8
  %8 = bitcast %"class.perfetto::TracedArray"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  call void @_ZNO8perfetto11TracedValue10WriteArrayEv(%"class.perfetto::TracedArray"* nonnull sret %6, %"class.perfetto::TracedValue"* %0) #8
  %9 = getelementptr inbounds %"class.WTF::HashSet.422", %"class.WTF::HashSet.422"* %1, i64 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %"class.WTF::HashSet.422", %"class.WTF::HashSet.422"* %1, i64 0, i32 0, i32 0
  %13 = load %class.scoped_refptr.19*, %class.scoped_refptr.19** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::HashSet.422", %"class.WTF::HashSet.422"* %1, i64 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %class.scoped_refptr.19, %class.scoped_refptr.19* %13, i64 %16
  br i1 %11, label %34, label %18

18:                                               ; preds = %2
  %19 = icmp eq i32 %15, 0
  br i1 %19, label %27, label %20

20:                                               ; preds = %18, %24
  %21 = phi %class.scoped_refptr.19* [ %25, %24 ], [ %13, %18 ]
  %22 = bitcast %class.scoped_refptr.19* %21 to i64*
  %23 = load i64, i64* %22, align 8
  switch i64 %23, label %27 [
    i64 -1, label %24
    i64 0, label %24
  ]

24:                                               ; preds = %20, %20
  %25 = getelementptr inbounds %class.scoped_refptr.19, %class.scoped_refptr.19* %21, i64 1
  %26 = icmp eq %class.scoped_refptr.19* %25, %17
  br i1 %26, label %34, label %20

27:                                               ; preds = %20, %18
  %28 = phi %class.scoped_refptr.19* [ %13, %18 ], [ %21, %20 ]
  %29 = icmp eq %class.scoped_refptr.19* %28, %17
  br i1 %29, label %34, label %30

30:                                               ; preds = %27
  %31 = bitcast %"class.perfetto::TracedValue"* %5 to i8*
  %32 = bitcast %"class.perfetto::TracedValue"* %4 to i8*
  %33 = bitcast %"class.perfetto::TracedValue"* %3 to i8*
  br label %35

34:                                               ; preds = %24, %42, %52, %49, %2, %27
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #8
  ret void

35:                                               ; preds = %30, %52
  %36 = phi %class.scoped_refptr.19* [ %28, %30 ], [ %46, %52 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31)
  call void @_ZN8perfetto11TracedArray10AppendItemEv(%"class.perfetto::TracedValue"* nonnull sret %5, %"class.perfetto::TracedArray"* nonnull %6) #8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %31, i64 16, i1 false) #8
  %37 = getelementptr inbounds %class.scoped_refptr.19, %class.scoped_refptr.19* %36, i64 0, i32 0
  %38 = load %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.blink::scheduler::MainThreadTaskQueue"** %37, align 8
  %39 = icmp eq %"class.blink::scheduler::MainThreadTaskQueue"* %38, null
  br i1 %39, label %40, label %41

40:                                               ; preds = %35
  call void @_ZNO8perfetto11TracedValue12WritePointerEPKv(%"class.perfetto::TracedValue"* nonnull %4, i8* null) #8
  br label %42

41:                                               ; preds = %35
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %33, i8* nonnull align 8 %32, i64 16, i1 false) #8
  call void @_ZNK5blink9scheduler19MainThreadTaskQueue14WriteIntoTraceEN8perfetto11TracedValueE(%"class.blink::scheduler::MainThreadTaskQueue"* nonnull %38, %"class.perfetto::TracedValue"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #8
  br label %42

42:                                               ; preds = %40, %41
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31)
  %43 = getelementptr inbounds %class.scoped_refptr.19, %class.scoped_refptr.19* %36, i64 1
  %44 = icmp eq %class.scoped_refptr.19* %43, %17
  br i1 %44, label %34, label %45

45:                                               ; preds = %42, %49
  %46 = phi %class.scoped_refptr.19* [ %50, %49 ], [ %43, %42 ]
  %47 = bitcast %class.scoped_refptr.19* %46 to i64*
  %48 = load i64, i64* %47, align 8
  switch i64 %48, label %52 [
    i64 -1, label %49
    i64 0, label %49
  ]

49:                                               ; preds = %45, %45
  %50 = getelementptr inbounds %class.scoped_refptr.19, %class.scoped_refptr.19* %46, i64 1
  %51 = icmp eq %class.scoped_refptr.19* %50, %17
  br i1 %51, label %34, label %45

52:                                               ; preds = %45
  %53 = icmp eq %class.scoped_refptr.19* %46, %17
  br i1 %53, label %34, label %35
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5, !7}
!5 = distinct !{!5, !6, !"_ZN4base16sequence_manager9TaskQueue4Spec23SetDelayedFencesAllowedEb: argument 0"}
!6 = distinct !{!6, !"_ZN4base16sequence_manager9TaskQueue4Spec23SetDelayedFencesAllowedEb"}
!7 = distinct !{!7, !8, !"_ZN5blink9scheduler19MainThreadTaskQueue19QueueCreationParams14SetQueueTraitsENS1_11QueueTraitsE: argument 0"}
!8 = distinct !{!8, !"_ZN5blink9scheduler19MainThreadTaskQueue19QueueCreationParams14SetQueueTraitsENS1_11QueueTraitsE"}
