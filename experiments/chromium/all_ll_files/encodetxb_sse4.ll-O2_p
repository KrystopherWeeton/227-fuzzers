; ModuleID = '../../third_party/libaom/source/libaom/av1/encoder/x86/encodetxb_sse4.c'
source_filename = "../../third_party/libaom/source/libaom/av1/encoder/x86/encodetxb_sse4.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @av1_txb_init_levels_sse4_1(i32* nocapture readonly, i32, i32, i8*) local_unnamed_addr #0 {
  %5 = ptrtoint i8* %3 to i64
  %6 = add nsw i32 %1, 4
  %7 = shl nsw i32 %6, 2
  %8 = sext i32 %7 to i64
  %9 = mul nsw i32 %6, %2
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds i8, i8* %3, i64 %10
  %12 = getelementptr inbounds i8, i8* %11, i64 %8
  %13 = add nsw i64 %10, 16
  %14 = getelementptr i8, i8* %3, i64 %13
  %15 = icmp ugt i8* %12, %14
  %16 = select i1 %15, i8* %12, i8* %14
  %17 = xor i64 %5, -1
  %18 = sub i64 %17, %10
  %19 = getelementptr i8, i8* %16, i64 %18
  %20 = ptrtoint i8* %19 to i64
  %21 = add i64 %20, 16
  %22 = and i64 %21, -16
  call void @llvm.memset.p0i8.i64(i8* align 1 %11, i8 0, i64 %22, i1 false)
  switch i32 %1, label %28 [
    i32 4, label %25
    i32 8, label %23
  ]

23:                                               ; preds = %4
  %24 = sext i32 %6 to i64
  br label %52

25:                                               ; preds = %4
  %26 = shl i32 %6, 1
  %27 = sext i32 %26 to i64
  br label %31

28:                                               ; preds = %4
  %29 = sext i32 %1 to i64
  %30 = sext i32 %6 to i64
  br label %71

31:                                               ; preds = %25, %31
  %32 = phi i32* [ %49, %31 ], [ %0, %25 ]
  %33 = phi i8* [ %48, %31 ], [ %3, %25 ]
  %34 = phi i32 [ %50, %31 ], [ 0, %25 ]
  %35 = bitcast i32* %32 to <4 x i32>*
  %36 = load <4 x i32>, <4 x i32>* %35, align 1
  %37 = getelementptr inbounds i32, i32* %32, i64 4
  %38 = bitcast i32* %37 to <4 x i32>*
  %39 = load <4 x i32>, <4 x i32>* %38, align 1
  %40 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %36, <4 x i32> %39) #3
  %41 = sub <8 x i16> zeroinitializer, %40
  %42 = icmp slt <8 x i16> %40, zeroinitializer
  %43 = select <8 x i1> %42, <8 x i16> %41, <8 x i16> %40
  %44 = tail call <16 x i8> @llvm.x86.sse2.packsswb.128(<8 x i16> %43, <8 x i16> undef) #3
  %45 = bitcast <16 x i8> %44 to <4 x i32>
  %46 = shufflevector <4 x i32> %45, <4 x i32> <i32 0, i32 0, i32 undef, i32 undef>, <4 x i32> <i32 0, i32 4, i32 1, i32 5>
  %47 = bitcast i8* %33 to <4 x i32>*
  store <4 x i32> %46, <4 x i32>* %47, align 1
  %48 = getelementptr inbounds i8, i8* %33, i64 %27
  %49 = getelementptr inbounds i32, i32* %32, i64 8
  %50 = add nuw nsw i32 %34, 2
  %51 = icmp slt i32 %50, %2
  br i1 %51, label %31, label %109

52:                                               ; preds = %23, %52
  %53 = phi i32* [ %68, %52 ], [ %0, %23 ]
  %54 = phi i8* [ %67, %52 ], [ %3, %23 ]
  %55 = phi i32 [ %69, %52 ], [ 0, %23 ]
  %56 = bitcast i32* %53 to <4 x i32>*
  %57 = load <4 x i32>, <4 x i32>* %56, align 1
  %58 = getelementptr inbounds i32, i32* %53, i64 4
  %59 = bitcast i32* %58 to <4 x i32>*
  %60 = load <4 x i32>, <4 x i32>* %59, align 1
  %61 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %57, <4 x i32> %60) #3
  %62 = sub <8 x i16> zeroinitializer, %61
  %63 = icmp slt <8 x i16> %61, zeroinitializer
  %64 = select <8 x i1> %63, <8 x i16> %62, <8 x i16> %61
  %65 = tail call <16 x i8> @llvm.x86.sse2.packsswb.128(<8 x i16> %64, <8 x i16> zeroinitializer) #3
  %66 = bitcast i8* %54 to <16 x i8>*
  store <16 x i8> %65, <16 x i8>* %66, align 1
  %67 = getelementptr inbounds i8, i8* %54, i64 %24
  %68 = getelementptr inbounds i32, i32* %53, i64 8
  %69 = add nuw nsw i32 %55, 1
  %70 = icmp slt i32 %69, %2
  br i1 %70, label %52, label %109

71:                                               ; preds = %28, %103
  %72 = phi i32* [ %101, %103 ], [ %0, %28 ]
  %73 = phi i8* [ %106, %103 ], [ %3, %28 ]
  %74 = phi i32 [ %107, %103 ], [ 0, %28 ]
  br label %75

75:                                               ; preds = %75, %71
  %76 = phi i64 [ %100, %75 ], [ 0, %71 ]
  %77 = phi i32* [ %101, %75 ], [ %72, %71 ]
  %78 = bitcast i32* %77 to <4 x i32>*
  %79 = load <4 x i32>, <4 x i32>* %78, align 1
  %80 = getelementptr inbounds i32, i32* %77, i64 4
  %81 = bitcast i32* %80 to <4 x i32>*
  %82 = load <4 x i32>, <4 x i32>* %81, align 1
  %83 = getelementptr inbounds i32, i32* %77, i64 8
  %84 = bitcast i32* %83 to <4 x i32>*
  %85 = load <4 x i32>, <4 x i32>* %84, align 1
  %86 = getelementptr inbounds i32, i32* %77, i64 12
  %87 = bitcast i32* %86 to <4 x i32>*
  %88 = load <4 x i32>, <4 x i32>* %87, align 1
  %89 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %79, <4 x i32> %82) #3
  %90 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %85, <4 x i32> %88) #3
  %91 = sub <8 x i16> zeroinitializer, %89
  %92 = icmp slt <8 x i16> %89, zeroinitializer
  %93 = select <8 x i1> %92, <8 x i16> %91, <8 x i16> %89
  %94 = sub <8 x i16> zeroinitializer, %90
  %95 = icmp slt <8 x i16> %90, zeroinitializer
  %96 = select <8 x i1> %95, <8 x i16> %94, <8 x i16> %90
  %97 = tail call <16 x i8> @llvm.x86.sse2.packsswb.128(<8 x i16> %93, <8 x i16> %96) #3
  %98 = getelementptr inbounds i8, i8* %73, i64 %76
  %99 = bitcast i8* %98 to <16 x i8>*
  store <16 x i8> %97, <16 x i8>* %99, align 1
  %100 = add nuw nsw i64 %76, 16
  %101 = getelementptr inbounds i32, i32* %77, i64 16
  %102 = icmp slt i64 %100, %29
  br i1 %102, label %75, label %103

103:                                              ; preds = %75
  %104 = getelementptr inbounds i8, i8* %73, i64 %29
  %105 = bitcast i8* %104 to i32*
  store i32 0, i32* %105, align 4
  %106 = getelementptr inbounds i8, i8* %73, i64 %30
  %107 = add nuw nsw i32 %74, 1
  %108 = icmp slt i32 %107, %2
  br i1 %108, label %71, label %109

109:                                              ; preds = %52, %31, %103
  ret void
}

; Function Attrs: nounwind readnone
declare <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32>, <4 x i32>) #1

; Function Attrs: nounwind readnone
declare <16 x i8> @llvm.x86.sse2.packsswb.128(<8 x i16>, <8 x i16>) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
