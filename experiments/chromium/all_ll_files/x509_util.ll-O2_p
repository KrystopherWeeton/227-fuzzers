; ModuleID = '../../net/cert/x509_util.cc'
source_filename = "../../net/cert/x509_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::LazyInstance" = type { i64, [8 x i8] }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"struct.net::x509_util::Extension" = type { %"class.base::span", i8, %"class.base::span" }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", i8* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%struct.cbb_st = type { %struct.cbb_buffer_st*, %struct.cbb_st*, i64, i8, i8, i8 }
%struct.cbb_buffer_st = type { i8*, i64, i64, i8, i8 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"struct.net::der::GeneralizedTime" = type { i16, i8, i8, i8, i8, i8 }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr", %"class.std::__1::vector.10" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.10" = type { %"class.std::__1::__vector_base.11" }
%"class.std::__1::__vector_base.11" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.std::__1::unique_ptr"* }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.net::der::Input" = type { i8*, i64 }
%"class.net::der::BitString" = type <{ %"class.net::der::Input", i8, [7 x i8] }>
%"class.net::CertErrors" = type { %"class.std::__1::vector.17" }
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { %"struct.net::CertError"*, %"struct.net::CertError"*, %"class.std::__1::__compressed_pair.23" }
%"struct.net::CertError" = type { i32, i8*, %"class.std::__1::unique_ptr.19" }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.net::CertErrorParams"* }
%"class.net::CertErrorParams" = type opaque
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.net::CertError"* }
%"class.net::SignatureAlgorithm" = type { i32, i32, %"class.std::__1::unique_ptr.31" }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.net::SignatureAlgorithmParameters"* }
%"class.net::SignatureAlgorithmParameters" = type { i32 (...)** }
%struct.env_md_st = type opaque
%struct.engine_st = type opaque
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.crypto::RSAPrivateKey"* }
%"class.crypto::RSAPrivateKey" = type { %"class.std::__1::unique_ptr.43" }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %struct.evp_pkey_st* }
%struct.evp_pkey_st = type { i32, i32, %union.anon.46, %struct.evp_pkey_asn1_method_st* }
%union.anon.46 = type { i8* }
%struct.evp_pkey_asn1_method_st = type opaque
%"class.std::__1::vector.52" = type { %"class.std::__1::__vector_base.53" }
%"class.std::__1::__vector_base.53" = type { %"struct.net::x509_util::Extension"*, %"struct.net::x509_util::Extension"*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"struct.net::x509_util::Extension"* }
%"class.crypto::OpenSSLErrStackTracer" = type { %"class.base::Location" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.bssl::internal::StackAllocated" = type { %struct.cbb_st }
%"class.bssl::internal::StackAllocated.64" = type { %struct.env_md_ctx_st }
%struct.env_md_ctx_st = type { %struct.env_md_st*, i8*, %struct.evp_pkey_ctx_st*, %struct.evp_md_pctx_ops* }
%struct.evp_pkey_ctx_st = type opaque
%struct.evp_md_pctx_ops = type opaque
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%struct.crypto_buffer_pool_st = type opaque
%"class.net::x509_util::(anonymous namespace)::BufferPoolSingleton" = type { %struct.crypto_buffer_pool_st* }
%struct.stack_st_CRYPTO_BUFFER = type opaque
%struct.stack_st = type { i64, i8**, i32, i64, i32 (i8**, i8**)* }
%"class.net::HashValue" = type { i32, %union.anon.65 }
%union.anon.65 = type { %"struct.net::SHA256HashValue" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"class.crypto::SignatureVerifier" = type { %"class.std::__1::vector.66", %"class.std::__1::unique_ptr.72" }
%"class.std::__1::vector.66" = type { %"class.std::__1::__vector_base.67" }
%"class.std::__1::__vector_base.67" = type { i8*, i8*, %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { i8* }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"struct.crypto::SignatureVerifier::VerifyContext"* }
%"struct.crypto::SignatureVerifier::VerifyContext" = type opaque
%"struct.net::ParsedTbsCertificate" = type { i32, %"class.net::der::Input", %"class.net::der::Input", %"class.net::der::Input", %"struct.net::der::GeneralizedTime", %"struct.net::der::GeneralizedTime", %"class.net::der::Input", %"class.net::der::Input", i8, [7 x i8], %"class.net::der::BitString", i8, [7 x i8], %"class.net::der::BitString", i8, %"class.net::der::Input" }
%"struct.net::ParseCertificateOptions" = type { i8 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.78", %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { i64 }
%"struct.net::ParsedExtension" = type <{ %"class.net::der::Input", %"class.net::der::Input", i8, [7 x i8] }>
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"class.net::der::Input", %"struct.net::ParsedExtension" }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrI16crypto_buffer_stN4bssl8internal7DeleterIS2_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN3net3der5InputENS2_15ParsedExtensionEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

@_ZZN3net9x509_util34GetTLSServerEndPointChannelBindingERKNS_15X509CertificateEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEE21kChannelBindingPrefix = internal unnamed_addr constant [22 x i8] c"tls-server-end-point:\00", align 16
@.str = private unnamed_addr constant [21 x i8] c"CreateSelfSignedCert\00", align 1
@.str.1 = private unnamed_addr constant [28 x i8] c"../../net/cert/x509_util.cc\00", align 1
@_ZN3net9x509_util12_GLOBAL__N_123g_buffer_pool_singletonE = internal global %"class.base::LazyInstance" zeroinitializer, align 8
@_ZZN3net9x509_util12_GLOBAL__N_124AddRSASignatureAlgorithmEP6cbb_stNS0_15DigestAlgorithmEE24kSHA256WithRSAEncryption = internal constant [9 x i8] c"*\86H\86\F7\0D\01\01\0B", align 1
@_ZZN3net9x509_util12_GLOBAL__N_17AddNameEP6cbb_stN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEE11kCommonName = internal constant [3 x i8] c"U\04\03", align 1
@_ZZN3net9x509_util12_GLOBAL__N_17AddNameEP6cbb_stN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEE12kCountryName = internal constant [3 x i8] c"U\04\06", align 1
@_ZZN3net9x509_util12_GLOBAL__N_17AddNameEP6cbb_stN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEE17kOrganizationName = internal constant [3 x i8] c"U\04\0A", align 1
@_ZZN3net9x509_util12_GLOBAL__N_17AddNameEP6cbb_stN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEE23kOrganizationalUnitName = internal constant [3 x i8] c"U\04\0B", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.3 = private unnamed_addr constant [27 x i8] c"Missing DN or wrong format\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"=\00", align 1
@.str.5 = private unnamed_addr constant [20 x i8] c"Wrong DN format at \00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c"CN\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"O\00", align 1
@.str.11 = private unnamed_addr constant [3 x i8] c"OU\00", align 1
@.str.13 = private unnamed_addr constant [19 x i8] c"Unrecognized type \00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN3net9x509_util9ExtensionC1EN4base4spanIKhLm18446744073709551615EEEbS5_ = hidden unnamed_addr alias void (%"struct.net::x509_util::Extension"*, i64, i8*, i1, i64, i8*), void (%"struct.net::x509_util::Extension"*, i64, i8*, i1, i64, i8*)* @_ZN3net9x509_util9ExtensionC2EN4base4spanIKhLm18446744073709551615EEEbS5_
@_ZN3net9x509_util9ExtensionD1Ev = hidden unnamed_addr alias void (%"struct.net::x509_util::Extension"*), void (%"struct.net::x509_util::Extension"*)* @_ZN3net9x509_util9ExtensionD2Ev
@_ZN3net9x509_util9ExtensionC1ERKS1_ = hidden unnamed_addr alias void (%"struct.net::x509_util::Extension"*, %"struct.net::x509_util::Extension"*), void (%"struct.net::x509_util::Extension"*, %"struct.net::x509_util::Extension"*)* @_ZN3net9x509_util9ExtensionC2ERKS1_

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net9x509_util10CBBAddTimeEP6cbb_stN4base4TimeE(%struct.cbb_st*, i64) local_unnamed_addr #0 {
  %3 = alloca %"class.base::Time", align 8
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"struct.net::der::GeneralizedTime"*
  %6 = alloca %struct.cbb_st, align 8
  %7 = alloca i8*, align 8
  %8 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %3, i64 0, i32 0, i32 0
  store i64 %1, i64* %8, align 8
  %9 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  store i64 -6148914691236517206, i64* %4, align 8
  %10 = call zeroext i1 @_ZN3net3der27EncodeTimeAsGeneralizedTimeERKN4base4TimeEPNS0_15GeneralizedTimeE(%"class.base::Time"* nonnull dereferenceable(8) %3, %"struct.net::der::GeneralizedTime"* nonnull %5) #13
  br i1 %10, label %11, label %41

11:                                               ; preds = %2
  %12 = bitcast %struct.cbb_st* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 32, i1 false)
  %13 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %14 = call zeroext i1 @_ZNK3net3der15GeneralizedTime14InUTCTimeRangeEv(%"struct.net::der::GeneralizedTime"* nonnull %5) #13
  br i1 %14, label %15, label %27

15:                                               ; preds = %11
  %16 = call i32 @CBB_add_asn1(%struct.cbb_st* %0, %struct.cbb_st* nonnull %6, i32 23) #13
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %39, label %18

18:                                               ; preds = %15
  %19 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %6, i8** nonnull %7, i64 13) #13
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %39, label %21

21:                                               ; preds = %18
  %22 = load i8*, i8** %7, align 8
  %23 = call zeroext i1 @_ZN3net3der13EncodeUTCTimeERKNS0_15GeneralizedTimeEPh(%"struct.net::der::GeneralizedTime"* nonnull dereferenceable(8) %5, i8* %22) #13
  br i1 %23, label %24, label %39

24:                                               ; preds = %21
  %25 = call i32 @CBB_flush(%struct.cbb_st* %0) #13
  %26 = icmp ne i32 %25, 0
  br label %39

27:                                               ; preds = %11
  %28 = call i32 @CBB_add_asn1(%struct.cbb_st* %0, %struct.cbb_st* nonnull %6, i32 24) #13
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %39, label %30

30:                                               ; preds = %27
  %31 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %6, i8** nonnull %7, i64 15) #13
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %39, label %33

33:                                               ; preds = %30
  %34 = load i8*, i8** %7, align 8
  %35 = call zeroext i1 @_ZN3net3der21EncodeGeneralizedTimeERKNS0_15GeneralizedTimeEPh(%"struct.net::der::GeneralizedTime"* nonnull dereferenceable(8) %5, i8* %34) #13
  br i1 %35, label %36, label %39

36:                                               ; preds = %33
  %37 = call i32 @CBB_flush(%struct.cbb_st* %0) #13
  %38 = icmp ne i32 %37, 0
  br label %39

39:                                               ; preds = %33, %36, %27, %30, %21, %24, %15, %18
  %40 = phi i1 [ false, %21 ], [ false, %18 ], [ false, %15 ], [ %26, %24 ], [ false, %33 ], [ false, %30 ], [ false, %27 ], [ %38, %36 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #13
  br label %41

41:                                               ; preds = %2, %39
  %42 = phi i1 [ %40, %39 ], [ false, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  ret i1 %42
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare zeroext i1 @_ZN3net3der27EncodeTimeAsGeneralizedTimeERKN4base4TimeEPNS0_15GeneralizedTimeE(%"class.base::Time"* dereferenceable(8), %"struct.net::der::GeneralizedTime"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK3net3der15GeneralizedTime14InUTCTimeRangeEv(%"struct.net::der::GeneralizedTime"*) local_unnamed_addr #2

declare i32 @CBB_add_asn1(%struct.cbb_st*, %struct.cbb_st*, i32) local_unnamed_addr #2

declare i32 @CBB_add_space(%struct.cbb_st*, i8**, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN3net3der13EncodeUTCTimeERKNS0_15GeneralizedTimeEPh(%"struct.net::der::GeneralizedTime"* dereferenceable(8), i8*) local_unnamed_addr #2

declare i32 @CBB_flush(%struct.cbb_st*) local_unnamed_addr #2

declare zeroext i1 @_ZN3net3der21EncodeGeneralizedTimeERKNS0_15GeneralizedTimeEPh(%"struct.net::der::GeneralizedTime"* dereferenceable(8), i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net9x509_util34GetTLSServerEndPointChannelBindingERKNS_15X509CertificateEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.net::X509Certificate"* nocapture readonly dereferenceable(464), %"class.std::__1::basic_string"*) local_unnamed_addr #0 {
  %3 = alloca %"class.base::BasicStringPiece", align 8
  %4 = alloca %"class.net::der::Input", align 8
  %5 = alloca %"class.net::der::Input", align 8
  %6 = alloca %"class.net::der::BitString", align 8
  %7 = alloca %"class.net::der::Input", align 8
  %8 = alloca [64 x i8], align 16
  %9 = getelementptr inbounds [64 x i8], [64 x i8]* %8, i64 0, i64 0
  %10 = alloca i32, align 4
  %11 = bitcast %"class.base::BasicStringPiece"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #13
  %12 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 0
  %13 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 1
  %14 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %15 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %14, align 8
  %16 = tail call i8* @CRYPTO_BUFFER_data(%struct.crypto_buffer_st* %15) #13
  %17 = tail call i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st* %15) #13
  store i8* %16, i8** %12, align 8
  store i64 %17, i64* %13, align 8
  %18 = bitcast %"class.net::der::Input"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #13
  %19 = bitcast %"class.net::der::Input"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 16, i1 false)
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %4) #13
  %20 = bitcast %"class.net::der::Input"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #13
  %21 = bitcast %"class.net::der::Input"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 16, i1 false)
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %5) #13
  %22 = bitcast %"class.net::der::BitString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #13
  %23 = getelementptr inbounds %"class.net::der::BitString", %"class.net::der::BitString"* %6, i64 0, i32 1
  %24 = getelementptr inbounds %"class.net::der::BitString", %"class.net::der::BitString"* %6, i64 0, i32 0
  %25 = bitcast %"class.net::der::BitString"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %24) #13
  store i8 0, i8* %23, align 8
  %26 = bitcast %"class.net::der::Input"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #13
  call void @_ZN3net3der5InputC1ERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::der::Input"* nonnull %7, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %3) #13
  %27 = call zeroext i1 @_ZN3net16ParseCertificateERKNS_3der5InputEPS1_S4_PNS0_9BitStringEPNS_10CertErrorsE(%"class.net::der::Input"* nonnull dereferenceable(16) %7, %"class.net::der::Input"* nonnull %4, %"class.net::der::Input"* nonnull %5, %"class.net::der::BitString"* nonnull %6, %"class.net::CertErrors"* null) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #13
  br i1 %27, label %28, label %214

28:                                               ; preds = %2
  %29 = call %"class.net::SignatureAlgorithm"* @_ZN3net18SignatureAlgorithm6CreateERKNS_3der5InputEPNS_10CertErrorsE(%"class.net::der::Input"* nonnull dereferenceable(16) %5, %"class.net::CertErrors"* null) #13
  %30 = icmp eq %"class.net::SignatureAlgorithm"* %29, null
  br i1 %30, label %214, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.net::SignatureAlgorithm", %"class.net::SignatureAlgorithm"* %29, i64 0, i32 1
  %33 = load i32, i32* %32, align 4
  switch i32 %33, label %211 [
    i32 6, label %38
    i32 5, label %36
    i32 2, label %34
    i32 3, label %34
    i32 4, label %34
  ]

34:                                               ; preds = %31, %31, %31
  %35 = call %struct.env_md_st* @EVP_sha256() #13
  br label %40

36:                                               ; preds = %31
  %37 = call %struct.env_md_st* @EVP_sha384() #13
  br label %40

38:                                               ; preds = %31
  %39 = call %struct.env_md_st* @EVP_sha512() #13
  br label %40

40:                                               ; preds = %38, %36, %34
  %41 = phi %struct.env_md_st* [ %39, %38 ], [ %37, %36 ], [ %35, %34 ]
  %42 = icmp eq %struct.env_md_st* %41, null
  br i1 %42, label %211, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds [64 x i8], [64 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %44) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %44, i8 -86, i64 64, i1 false)
  %45 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %45) #13
  store i32 -1431655766, i32* %10, align 4
  %46 = load i8*, i8** %12, align 8
  %47 = load i64, i64* %13, align 8
  %48 = call i32 @EVP_Digest(i8* %46, i64 %47, i8* nonnull %44, i32* nonnull %10, %struct.env_md_st* nonnull %41, %struct.engine_st* null) #13
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %208, label %50

50:                                               ; preds = %43
  %51 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %59

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 21, i64* %56, align 8
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  br label %61

59:                                               ; preds = %50
  store i8 21, i8* %52, align 1
  %60 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  br label %61

61:                                               ; preds = %55, %59
  %62 = phi i8* [ %58, %55 ], [ %60, %59 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %62, i8* align 16 getelementptr inbounds ([22 x i8], [22 x i8]* @_ZZN3net9x509_util34GetTLSServerEndPointChannelBindingERKNS_15X509CertificateEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEE21kChannelBindingPrefix, i64 0, i64 0), i64 21, i1 false) #13
  %63 = getelementptr inbounds i8, i8* %62, i64 21
  store i8 0, i8* %63, align 1
  %64 = load i32, i32* %10, align 4
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds [64 x i8], [64 x i8]* %8, i64 0, i64 %65
  %67 = load i8, i8* %52, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %71, label %69

69:                                               ; preds = %61
  %70 = zext i8 %67 to i64
  br label %78

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %75 = load i64, i64* %74, align 8
  %76 = and i64 %75, 9223372036854775807
  %77 = add nsw i64 %76, -1
  br label %78

78:                                               ; preds = %71, %69
  %79 = phi i64 [ %73, %71 ], [ %70, %69 ]
  %80 = phi i64 [ %77, %71 ], [ 22, %69 ]
  %81 = icmp eq i32 %64, 0
  br i1 %81, label %208, label %82

82:                                               ; preds = %78
  %83 = sub i64 %80, %79
  %84 = icmp ult i64 %83, %65
  br i1 %84, label %85, label %89

85:                                               ; preds = %82
  %86 = add i64 %79, %65
  %87 = sub i64 %86, %80
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* %1, i64 %80, i64 %87, i64 %79, i64 %79, i64 0, i64 0) #13
  %88 = load i8, i8* %52, align 1
  br label %89

89:                                               ; preds = %85, %82
  %90 = phi i8 [ %88, %85 ], [ %67, %82 ]
  %91 = icmp slt i8 %90, 0
  br i1 %91, label %92, label %95

92:                                               ; preds = %89
  %93 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load i8*, i8** %93, align 8
  br label %97

95:                                               ; preds = %89
  %96 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  br label %97

97:                                               ; preds = %92, %95
  %98 = phi i8* [ %94, %92 ], [ %96, %95 ]
  %99 = getelementptr inbounds i8, i8* %98, i64 %79
  %100 = icmp ult i32 %64, 32
  br i1 %100, label %189, label %101

101:                                              ; preds = %97
  %102 = add i64 %79, %65
  %103 = getelementptr i8, i8* %98, i64 %102
  %104 = getelementptr [64 x i8], [64 x i8]* %8, i64 0, i64 %65
  %105 = icmp ult i8* %99, %104
  %106 = icmp ult i8* %9, %103
  %107 = and i1 %105, %106
  br i1 %107, label %189, label %108

108:                                              ; preds = %101
  %109 = and i64 %65, 4294967264
  %110 = getelementptr i8, i8* %99, i64 %109
  %111 = getelementptr [64 x i8], [64 x i8]* %8, i64 0, i64 %109
  %112 = add nsw i64 %109, -32
  %113 = lshr exact i64 %112, 5
  %114 = add nuw nsw i64 %113, 1
  %115 = and i64 %114, 3
  %116 = icmp ult i64 %112, 96
  br i1 %116, label %168, label %117

117:                                              ; preds = %108
  %118 = sub nsw i64 %114, %115
  br label %119

119:                                              ; preds = %119, %117
  %120 = phi i64 [ 0, %117 ], [ %165, %119 ]
  %121 = phi i64 [ %118, %117 ], [ %166, %119 ]
  %122 = getelementptr i8, i8* %99, i64 %120
  %123 = getelementptr [64 x i8], [64 x i8]* %8, i64 0, i64 %120
  %124 = bitcast i8* %123 to <16 x i8>*
  %125 = load <16 x i8>, <16 x i8>* %124, align 16, !alias.scope !2
  %126 = getelementptr i8, i8* %123, i64 16
  %127 = bitcast i8* %126 to <16 x i8>*
  %128 = load <16 x i8>, <16 x i8>* %127, align 16, !alias.scope !2
  %129 = bitcast i8* %122 to <16 x i8>*
  store <16 x i8> %125, <16 x i8>* %129, align 1, !alias.scope !5, !noalias !2
  %130 = getelementptr i8, i8* %122, i64 16
  %131 = bitcast i8* %130 to <16 x i8>*
  store <16 x i8> %128, <16 x i8>* %131, align 1, !alias.scope !5, !noalias !2
  %132 = or i64 %120, 32
  %133 = getelementptr i8, i8* %99, i64 %132
  %134 = getelementptr [64 x i8], [64 x i8]* %8, i64 0, i64 %132
  %135 = bitcast i8* %134 to <16 x i8>*
  %136 = load <16 x i8>, <16 x i8>* %135, align 16, !alias.scope !2
  %137 = getelementptr i8, i8* %134, i64 16
  %138 = bitcast i8* %137 to <16 x i8>*
  %139 = load <16 x i8>, <16 x i8>* %138, align 16, !alias.scope !2
  %140 = bitcast i8* %133 to <16 x i8>*
  store <16 x i8> %136, <16 x i8>* %140, align 1, !alias.scope !5, !noalias !2
  %141 = getelementptr i8, i8* %133, i64 16
  %142 = bitcast i8* %141 to <16 x i8>*
  store <16 x i8> %139, <16 x i8>* %142, align 1, !alias.scope !5, !noalias !2
  %143 = or i64 %120, 64
  %144 = getelementptr i8, i8* %99, i64 %143
  %145 = getelementptr [64 x i8], [64 x i8]* %8, i64 0, i64 %143
  %146 = bitcast i8* %145 to <16 x i8>*
  %147 = load <16 x i8>, <16 x i8>* %146, align 16, !alias.scope !2
  %148 = getelementptr i8, i8* %145, i64 16
  %149 = bitcast i8* %148 to <16 x i8>*
  %150 = load <16 x i8>, <16 x i8>* %149, align 16, !alias.scope !2
  %151 = bitcast i8* %144 to <16 x i8>*
  store <16 x i8> %147, <16 x i8>* %151, align 1, !alias.scope !5, !noalias !2
  %152 = getelementptr i8, i8* %144, i64 16
  %153 = bitcast i8* %152 to <16 x i8>*
  store <16 x i8> %150, <16 x i8>* %153, align 1, !alias.scope !5, !noalias !2
  %154 = or i64 %120, 96
  %155 = getelementptr i8, i8* %99, i64 %154
  %156 = getelementptr [64 x i8], [64 x i8]* %8, i64 0, i64 %154
  %157 = bitcast i8* %156 to <16 x i8>*
  %158 = load <16 x i8>, <16 x i8>* %157, align 16, !alias.scope !2
  %159 = getelementptr i8, i8* %156, i64 16
  %160 = bitcast i8* %159 to <16 x i8>*
  %161 = load <16 x i8>, <16 x i8>* %160, align 16, !alias.scope !2
  %162 = bitcast i8* %155 to <16 x i8>*
  store <16 x i8> %158, <16 x i8>* %162, align 1, !alias.scope !5, !noalias !2
  %163 = getelementptr i8, i8* %155, i64 16
  %164 = bitcast i8* %163 to <16 x i8>*
  store <16 x i8> %161, <16 x i8>* %164, align 1, !alias.scope !5, !noalias !2
  %165 = add i64 %120, 128
  %166 = add i64 %121, -4
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %168, label %119, !llvm.loop !7

168:                                              ; preds = %119, %108
  %169 = phi i64 [ 0, %108 ], [ %165, %119 ]
  %170 = icmp eq i64 %115, 0
  br i1 %170, label %187, label %171

171:                                              ; preds = %168, %171
  %172 = phi i64 [ %184, %171 ], [ %169, %168 ]
  %173 = phi i64 [ %185, %171 ], [ %115, %168 ]
  %174 = getelementptr i8, i8* %99, i64 %172
  %175 = getelementptr [64 x i8], [64 x i8]* %8, i64 0, i64 %172
  %176 = bitcast i8* %175 to <16 x i8>*
  %177 = load <16 x i8>, <16 x i8>* %176, align 16, !alias.scope !2
  %178 = getelementptr i8, i8* %175, i64 16
  %179 = bitcast i8* %178 to <16 x i8>*
  %180 = load <16 x i8>, <16 x i8>* %179, align 16, !alias.scope !2
  %181 = bitcast i8* %174 to <16 x i8>*
  store <16 x i8> %177, <16 x i8>* %181, align 1, !alias.scope !5, !noalias !2
  %182 = getelementptr i8, i8* %174, i64 16
  %183 = bitcast i8* %182 to <16 x i8>*
  store <16 x i8> %180, <16 x i8>* %183, align 1, !alias.scope !5, !noalias !2
  %184 = add i64 %172, 32
  %185 = add i64 %173, -1
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %187, label %171, !llvm.loop !9

187:                                              ; preds = %171, %168
  %188 = icmp eq i64 %109, %65
  br i1 %188, label %199, label %189

189:                                              ; preds = %187, %101, %97
  %190 = phi i8* [ %99, %101 ], [ %99, %97 ], [ %110, %187 ]
  %191 = phi i8* [ %44, %101 ], [ %44, %97 ], [ %111, %187 ]
  br label %192

192:                                              ; preds = %189, %192
  %193 = phi i8* [ %196, %192 ], [ %190, %189 ]
  %194 = phi i8* [ %197, %192 ], [ %191, %189 ]
  %195 = load i8, i8* %194, align 1
  store i8 %195, i8* %193, align 1
  %196 = getelementptr inbounds i8, i8* %193, i64 1
  %197 = getelementptr inbounds i8, i8* %194, i64 1
  %198 = icmp eq i8* %197, %66
  br i1 %198, label %199, label %192, !llvm.loop !11

199:                                              ; preds = %192, %187
  %200 = phi i8* [ %110, %187 ], [ %196, %192 ]
  store i8 0, i8* %200, align 1
  %201 = add i64 %79, %65
  %202 = load i8, i8* %52, align 1
  %203 = icmp slt i8 %202, 0
  br i1 %203, label %204, label %206

204:                                              ; preds = %199
  %205 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %201, i64* %205, align 8
  br label %210

206:                                              ; preds = %199
  %207 = trunc i64 %201 to i8
  store i8 %207, i8* %52, align 1
  br label %210

208:                                              ; preds = %43, %78
  %209 = phi i1 [ true, %78 ], [ false, %43 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %45) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %44) #13
  br label %211

210:                                              ; preds = %204, %206
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %45) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %44) #13
  br label %211

211:                                              ; preds = %210, %31, %40, %208
  %212 = phi i1 [ true, %210 ], [ %209, %208 ], [ false, %40 ], [ false, %31 ]
  call void @_ZN3net18SignatureAlgorithmD1Ev(%"class.net::SignatureAlgorithm"* nonnull %29) #13
  %213 = bitcast %"class.net::SignatureAlgorithm"* %29 to i8*
  call void @_ZdlPv(i8* %213) #14
  br label %214

214:                                              ; preds = %28, %211, %2
  %215 = phi i1 [ false, %2 ], [ %212, %211 ], [ false, %28 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #13
  ret i1 %215
}

; Function Attrs: nounwind ssp uwtable
define hidden { i8*, i64 } @_ZN3net9x509_util25CryptoBufferAsStringPieceEPK16crypto_buffer_st(%struct.crypto_buffer_st*) local_unnamed_addr #0 {
  %2 = tail call i8* @CRYPTO_BUFFER_data(%struct.crypto_buffer_st* %0) #13
  %3 = tail call i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st* %0) #13
  %4 = insertvalue { i8*, i64 } undef, i8* %2, 0
  %5 = insertvalue { i8*, i64 } %4, i64 %3, 1
  ret { i8*, i64 } %5
}

declare void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"*) unnamed_addr #2

declare zeroext i1 @_ZN3net16ParseCertificateERKNS_3der5InputEPS1_S4_PNS0_9BitStringEPNS_10CertErrorsE(%"class.net::der::Input"* dereferenceable(16), %"class.net::der::Input"*, %"class.net::der::Input"*, %"class.net::der::BitString"*, %"class.net::CertErrors"*) local_unnamed_addr #2

declare void @_ZN3net3der5InputC1ERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::der::Input"*, %"class.base::BasicStringPiece"* dereferenceable(16)) unnamed_addr #2

declare %"class.net::SignatureAlgorithm"* @_ZN3net18SignatureAlgorithm6CreateERKNS_3der5InputEPNS_10CertErrorsE(%"class.net::der::Input"* dereferenceable(16), %"class.net::CertErrors"*) local_unnamed_addr #2

declare %struct.env_md_st* @EVP_sha256() local_unnamed_addr #2

declare %struct.env_md_st* @EVP_sha384() local_unnamed_addr #2

declare %struct.env_md_st* @EVP_sha512() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @EVP_Digest(i8*, i64, i8*, i32*, %struct.env_md_st*, %struct.engine_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net9x509_util26CreateKeyAndSelfSignedCertERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEjN4base4TimeESB_PNS1_10unique_ptrIN6crypto13RSAPrivateKeyENS1_14default_deleteISE_EEEEPS7_(%"class.std::__1::basic_string"* dereferenceable(24), i32, i64, i64, %"class.std::__1::unique_ptr.40"* nocapture, %"class.std::__1::basic_string"*) local_unnamed_addr #0 {
  %7 = alloca %"class.std::__1::vector.52", align 8
  %8 = tail call %"class.crypto::RSAPrivateKey"* @_ZN6crypto13RSAPrivateKey6CreateEt(i16 zeroext 1024) #13
  %9 = ptrtoint %"class.crypto::RSAPrivateKey"* %8 to i64
  %10 = icmp eq %"class.crypto::RSAPrivateKey"* %8, null
  br i1 %10, label %25, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.crypto::RSAPrivateKey", %"class.crypto::RSAPrivateKey"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %12, align 8
  %14 = bitcast %"class.std::__1::vector.52"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 24, i1 false) #13
  %15 = call zeroext i1 @_ZN3net9x509_util20CreateSelfSignedCertEP11evp_pkey_stNS0_15DigestAlgorithmERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEjN4base4TimeESE_RKNS4_6vectorINS0_9ExtensionENS8_ISG_EEEEPSA_(%struct.evp_pkey_st* %13, i32 0, %"class.std::__1::basic_string"* dereferenceable(24) %0, i32 %1, i64 %2, i64 %3, %"class.std::__1::vector.52"* nonnull dereferenceable(24) %7, %"class.std::__1::basic_string"* %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #13
  br i1 %15, label %16, label %23

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %4, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.crypto::RSAPrivateKey"*, %"class.crypto::RSAPrivateKey"** %17, align 8
  %19 = bitcast %"class.std::__1::unique_ptr.40"* %4 to i64*
  store i64 %9, i64* %19, align 8
  %20 = icmp eq %"class.crypto::RSAPrivateKey"* %18, null
  br i1 %20, label %25, label %21

21:                                               ; preds = %16
  tail call void @_ZN6crypto13RSAPrivateKeyD1Ev(%"class.crypto::RSAPrivateKey"* nonnull %18) #13
  %22 = bitcast %"class.crypto::RSAPrivateKey"* %18 to i8*
  tail call void @_ZdlPv(i8* %22) #14
  br label %25

23:                                               ; preds = %11
  tail call void @_ZN6crypto13RSAPrivateKeyD1Ev(%"class.crypto::RSAPrivateKey"* nonnull %8) #13
  %24 = bitcast %"class.crypto::RSAPrivateKey"* %8 to i8*
  tail call void @_ZdlPv(i8* %24) #14
  br label %25

25:                                               ; preds = %6, %21, %16, %23
  %26 = phi i1 [ false, %23 ], [ true, %16 ], [ true, %21 ], [ false, %6 ]
  ret i1 %26
}

declare %"class.crypto::RSAPrivateKey"* @_ZN6crypto13RSAPrivateKey6CreateEt(i16 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net9x509_util20CreateSelfSignedCertEP11evp_pkey_stNS0_15DigestAlgorithmERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEjN4base4TimeESE_RKNS4_6vectorINS0_9ExtensionENS8_ISG_EEEEPSA_(%struct.evp_pkey_st*, i32, %"class.std::__1::basic_string"* dereferenceable(24), i32, i64, i64, %"class.std::__1::vector.52"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string"*) local_unnamed_addr #0 {
  %9 = alloca %"class.crypto::OpenSSLErrStackTracer", align 8
  %10 = alloca %"class.base::Location", align 8
  %11 = alloca %"class.bssl::internal::StackAllocated", align 8
  %12 = alloca %struct.cbb_st, align 8
  %13 = alloca %struct.cbb_st, align 8
  %14 = alloca %struct.cbb_st, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i64, align 8
  %17 = alloca %struct.cbb_st, align 8
  %18 = alloca %struct.cbb_st, align 8
  %19 = alloca %struct.cbb_st, align 8
  %20 = alloca %struct.cbb_st, align 8
  %21 = alloca %struct.cbb_st, align 8
  %22 = alloca %struct.cbb_st, align 8
  %23 = alloca %struct.cbb_st, align 8
  %24 = alloca %"class.bssl::internal::StackAllocated.64", align 8
  %25 = alloca i8*, align 8
  %26 = alloca i64, align 8
  %27 = alloca i8*, align 8
  %28 = alloca i64, align 8
  tail call void @_ZN6crypto17EnsureOpenSSLInitEv() #13
  %29 = bitcast %"class.crypto::OpenSSLErrStackTracer"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %29) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 32, i1 false)
  %30 = bitcast %"class.base::Location"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #13
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %10, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i64 0, i64 0), i32 286) #13
  %31 = getelementptr inbounds %"class.crypto::OpenSSLErrStackTracer", %"class.crypto::OpenSSLErrStackTracer"* %9, i64 0, i32 0
  call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* nonnull %31, %"class.base::Location"* nonnull dereferenceable(32) %10) #13
  call void @_ZN6crypto17EnsureOpenSSLInitEv() #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #13
  %32 = bitcast %"class.bssl::internal::StackAllocated"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %32) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 32, i1 false)
  %33 = getelementptr inbounds %"class.bssl::internal::StackAllocated", %"class.bssl::internal::StackAllocated"* %11, i64 0, i32 0
  call void @CBB_zero(%struct.cbb_st* nonnull %33) #13
  %34 = bitcast %struct.cbb_st* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %34) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 32, i1 false)
  %35 = bitcast %struct.cbb_st* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %35) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 32, i1 false)
  %36 = bitcast %struct.cbb_st* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %36) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 32, i1 false)
  %37 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %38 = bitcast i64* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #13
  store i64 -6148914691236517206, i64* %16, align 8
  %39 = call i32 @CBB_init(%struct.cbb_st* nonnull %33, i64 64) #13
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %254, label %41

41:                                               ; preds = %8
  %42 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %33, %struct.cbb_st* nonnull %12, i32 536870928) #13
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %254, label %44

44:                                               ; preds = %41
  %45 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %12, %struct.cbb_st* nonnull %13, i32 -1610612736) #13
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %254, label %47

47:                                               ; preds = %44
  %48 = call i32 @CBB_add_asn1_uint64(%struct.cbb_st* nonnull %13, i64 2) #13
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %254, label %50

50:                                               ; preds = %47
  %51 = zext i32 %3 to i64
  %52 = call i32 @CBB_add_asn1_uint64(%struct.cbb_st* nonnull %12, i64 %51) #13
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %254, label %54

54:                                               ; preds = %50
  %55 = call fastcc zeroext i1 @_ZN3net9x509_util12_GLOBAL__N_124AddRSASignatureAlgorithmEP6cbb_stNS0_15DigestAlgorithmE(%struct.cbb_st* nonnull %12, i32 %1)
  br i1 %55, label %56, label %254

56:                                               ; preds = %54
  %57 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = load i8, i8* %58, align 1
  %60 = icmp slt i8 %59, 0
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  %63 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %64 = select i1 %60, i8* %62, i8* %63
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = zext i8 %59 to i64
  %68 = select i1 %60, i64 %66, i64 %67
  %69 = call fastcc zeroext i1 @_ZN3net9x509_util12_GLOBAL__N_17AddNameEP6cbb_stN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%struct.cbb_st* nonnull %12, i8* %64, i64 %68)
  br i1 %69, label %70, label %254

70:                                               ; preds = %56
  %71 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %12, %struct.cbb_st* nonnull %14, i32 536870928) #13
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %254, label %73

73:                                               ; preds = %70
  %74 = call zeroext i1 @_ZN3net9x509_util10CBBAddTimeEP6cbb_stN4base4TimeE(%struct.cbb_st* nonnull %14, i64 %4)
  br i1 %74, label %75, label %254

75:                                               ; preds = %73
  %76 = call zeroext i1 @_ZN3net9x509_util10CBBAddTimeEP6cbb_stN4base4TimeE(%struct.cbb_st* nonnull %14, i64 %5)
  br i1 %76, label %77, label %254

77:                                               ; preds = %75
  %78 = load i8, i8* %58, align 1
  %79 = icmp slt i8 %78, 0
  %80 = load i8*, i8** %61, align 8
  %81 = select i1 %79, i8* %80, i8* %63
  %82 = load i64, i64* %65, align 8
  %83 = zext i8 %78 to i64
  %84 = select i1 %79, i64 %82, i64 %83
  %85 = call fastcc zeroext i1 @_ZN3net9x509_util12_GLOBAL__N_17AddNameEP6cbb_stN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%struct.cbb_st* nonnull %12, i8* %81, i64 %84)
  br i1 %85, label %86, label %254

86:                                               ; preds = %77
  %87 = call i32 @EVP_marshal_public_key(%struct.cbb_st* nonnull %12, %struct.evp_pkey_st* %0) #13
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %254, label %89

89:                                               ; preds = %86
  %90 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %6, i64 0, i32 0, i32 0
  %91 = load %"struct.net::x509_util::Extension"*, %"struct.net::x509_util::Extension"** %90, align 8
  %92 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %6, i64 0, i32 0, i32 1
  %93 = load %"struct.net::x509_util::Extension"*, %"struct.net::x509_util::Extension"** %92, align 8
  %94 = icmp eq %"struct.net::x509_util::Extension"* %91, %93
  br i1 %94, label %157, label %95

95:                                               ; preds = %89
  %96 = bitcast %struct.cbb_st* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %96) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %96, i8 -86, i64 32, i1 false)
  %97 = bitcast %struct.cbb_st* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %97) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %97, i8 -86, i64 32, i1 false)
  %98 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %12, %struct.cbb_st* nonnull %17, i32 -1610612733) #13
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %155, label %100

100:                                              ; preds = %95
  %101 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %17, %struct.cbb_st* nonnull %18, i32 536870928) #13
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %155, label %103

103:                                              ; preds = %100
  %104 = load %"struct.net::x509_util::Extension"*, %"struct.net::x509_util::Extension"** %90, align 8
  %105 = load %"struct.net::x509_util::Extension"*, %"struct.net::x509_util::Extension"** %92, align 8
  %106 = icmp eq %"struct.net::x509_util::Extension"* %104, %105
  br i1 %106, label %152, label %107

107:                                              ; preds = %103
  %108 = bitcast %struct.cbb_st* %19 to i8*
  %109 = bitcast %struct.cbb_st* %20 to i8*
  %110 = bitcast %struct.cbb_st* %21 to i8*
  br label %113

111:                                              ; preds = %148
  %112 = icmp eq %"struct.net::x509_util::Extension"* %151, %105
  br i1 %112, label %152, label %113

113:                                              ; preds = %107, %111
  %114 = phi %"struct.net::x509_util::Extension"* [ %104, %107 ], [ %151, %111 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %108) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %109) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %109, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %110) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %110, i8 -86, i64 32, i1 false)
  %115 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %18, %struct.cbb_st* nonnull %19, i32 536870928) #13
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %148, label %117

117:                                              ; preds = %113
  %118 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %19, %struct.cbb_st* nonnull %20, i32 6) #13
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %148, label %120

120:                                              ; preds = %117
  %121 = getelementptr inbounds %"struct.net::x509_util::Extension", %"struct.net::x509_util::Extension"* %114, i64 0, i32 0, i32 1
  %122 = load i8*, i8** %121, align 8
  %123 = getelementptr inbounds %"struct.net::x509_util::Extension", %"struct.net::x509_util::Extension"* %114, i64 0, i32 0, i32 0, i32 0
  %124 = load i64, i64* %123, align 8
  %125 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %20, i8* %122, i64 %124) #13
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %148, label %127

127:                                              ; preds = %120
  %128 = getelementptr inbounds %"struct.net::x509_util::Extension", %"struct.net::x509_util::Extension"* %114, i64 0, i32 1
  %129 = load i8, i8* %128, align 8, !range !12
  %130 = icmp eq i8 %129, 0
  br i1 %130, label %134, label %131

131:                                              ; preds = %127
  %132 = call i32 @CBB_add_asn1_bool(%struct.cbb_st* nonnull %19, i32 1) #13
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %148, label %134

134:                                              ; preds = %131, %127
  %135 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %19, %struct.cbb_st* nonnull %21, i32 4) #13
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %148, label %137

137:                                              ; preds = %134
  %138 = getelementptr inbounds %"struct.net::x509_util::Extension", %"struct.net::x509_util::Extension"* %114, i64 0, i32 2, i32 1
  %139 = load i8*, i8** %138, align 8
  %140 = getelementptr inbounds %"struct.net::x509_util::Extension", %"struct.net::x509_util::Extension"* %114, i64 0, i32 2, i32 0, i32 0
  %141 = load i64, i64* %140, align 8
  %142 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %21, i8* %139, i64 %141) #13
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %148, label %144

144:                                              ; preds = %137
  %145 = call i32 @CBB_flush(%struct.cbb_st* nonnull %18) #13
  %146 = icmp eq i32 %145, 0
  %147 = zext i1 %146 to i32
  br label %148

148:                                              ; preds = %144, %113, %117, %120, %134, %137, %131
  %149 = phi i32 [ 1, %131 ], [ 1, %137 ], [ 1, %134 ], [ 1, %120 ], [ 1, %117 ], [ 1, %113 ], [ %147, %144 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %110) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %109) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %108) #13
  %150 = icmp eq i32 %149, 0
  %151 = getelementptr inbounds %"struct.net::x509_util::Extension", %"struct.net::x509_util::Extension"* %114, i64 1
  br i1 %150, label %111, label %155

152:                                              ; preds = %111, %103
  %153 = call i32 @CBB_flush(%struct.cbb_st* nonnull %12) #13
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %156

155:                                              ; preds = %148, %100, %95, %152
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %97) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %96) #13
  br label %254

156:                                              ; preds = %152
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %97) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %96) #13
  br label %157

157:                                              ; preds = %156, %89
  %158 = call i32 @CBB_finish(%struct.cbb_st* nonnull %33, i8** nonnull %15, i64* nonnull %16) #13
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %254, label %160

160:                                              ; preds = %157
  %161 = load i8*, i8** %15, align 8
  %162 = bitcast %struct.cbb_st* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %162) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %162, i8 -86, i64 32, i1 false)
  %163 = bitcast %struct.cbb_st* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %163) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %163, i8 -86, i64 32, i1 false)
  %164 = bitcast %"class.bssl::internal::StackAllocated.64"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %164) #13
  %165 = getelementptr inbounds %"class.bssl::internal::StackAllocated.64", %"class.bssl::internal::StackAllocated.64"* %24, i64 0, i32 0
  %166 = bitcast %"class.bssl::internal::StackAllocated.64"* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %166, i8 -86, i64 32, i1 false)
  call void @EVP_MD_CTX_init(%struct.env_md_ctx_st* nonnull %165) #13
  %167 = bitcast i8** %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %167) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %168 = bitcast i64* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %168) #13
  store i64 -6148914691236517206, i64* %26, align 8
  %169 = bitcast i8** %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %169) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %27, align 8
  %170 = bitcast i64* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %170) #13
  store i64 -6148914691236517206, i64* %28, align 8
  %171 = load i64, i64* %16, align 8
  %172 = call i32 @CBB_init(%struct.cbb_st* nonnull %33, i64 %171) #13
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %249, label %174

174:                                              ; preds = %160
  %175 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %33, %struct.cbb_st* nonnull %22, i32 536870928) #13
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %249, label %177

177:                                              ; preds = %174
  %178 = load i8*, i8** %15, align 8
  %179 = load i64, i64* %16, align 8
  %180 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %22, i8* %178, i64 %179) #13
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %249, label %182

182:                                              ; preds = %177
  %183 = call fastcc zeroext i1 @_ZN3net9x509_util12_GLOBAL__N_124AddRSASignatureAlgorithmEP6cbb_stNS0_15DigestAlgorithmE(%struct.cbb_st* nonnull %22, i32 %1)
  br i1 %183, label %184, label %249

184:                                              ; preds = %182
  %185 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %22, %struct.cbb_st* nonnull %23, i32 3) #13
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %249, label %187

187:                                              ; preds = %184
  %188 = call i32 @CBB_add_u8(%struct.cbb_st* nonnull %23, i8 zeroext 0) #13
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %249, label %190

190:                                              ; preds = %187
  %191 = icmp eq i32 %1, 0
  br i1 %191, label %192, label %194

192:                                              ; preds = %190
  %193 = call %struct.env_md_st* @EVP_sha256() #13
  br label %194

194:                                              ; preds = %190, %192
  %195 = phi %struct.env_md_st* [ %193, %192 ], [ null, %190 ]
  %196 = call i32 @EVP_DigestSignInit(%struct.env_md_ctx_st* nonnull %165, %struct.evp_pkey_ctx_st** null, %struct.env_md_st* %195, %struct.engine_st* null, %struct.evp_pkey_st* %0) #13
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %249, label %198

198:                                              ; preds = %194
  %199 = load i8*, i8** %15, align 8
  %200 = load i64, i64* %16, align 8
  %201 = call i32 @EVP_DigestSign(%struct.env_md_ctx_st* nonnull %165, i8* null, i64* nonnull %26, i8* %199, i64 %200) #13
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %249, label %203

203:                                              ; preds = %198
  %204 = load i64, i64* %26, align 8
  %205 = call i32 @CBB_reserve(%struct.cbb_st* nonnull %23, i8** nonnull %25, i64 %204) #13
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %249, label %207

207:                                              ; preds = %203
  %208 = load i8*, i8** %25, align 8
  %209 = load i8*, i8** %15, align 8
  %210 = load i64, i64* %16, align 8
  %211 = call i32 @EVP_DigestSign(%struct.env_md_ctx_st* nonnull %165, i8* %208, i64* nonnull %26, i8* %209, i64 %210) #13
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %249, label %213

213:                                              ; preds = %207
  %214 = load i64, i64* %26, align 8
  %215 = call i32 @CBB_did_write(%struct.cbb_st* nonnull %23, i64 %214) #13
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %249, label %217

217:                                              ; preds = %213
  %218 = call i32 @CBB_finish(%struct.cbb_st* nonnull %33, i8** nonnull %27, i64* nonnull %28) #13
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %249, label %220

220:                                              ; preds = %217
  %221 = load i8*, i8** %27, align 8
  %222 = load i64, i64* %28, align 8
  %223 = call i1 @llvm.is.constant.i64(i64 %222) #13
  %224 = icmp ult i64 %222, 23
  %225 = and i1 %224, %223
  br i1 %225, label %226, label %244

226:                                              ; preds = %220
  %227 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %228 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %227, i64 0, i32 1, i32 0
  %229 = load i8, i8* %228, align 1
  %230 = icmp slt i8 %229, 0
  br i1 %230, label %231, label %235

231:                                              ; preds = %226
  %232 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %222, i64* %232, align 8
  %233 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %234 = load i8*, i8** %233, align 8
  br label %238

235:                                              ; preds = %226
  %236 = trunc i64 %222 to i8
  store i8 %236, i8* %228, align 1
  %237 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  br label %238

238:                                              ; preds = %235, %231
  %239 = phi i8* [ %234, %231 ], [ %237, %235 ]
  %240 = icmp eq i64 %222, 0
  br i1 %240, label %242, label %241

241:                                              ; preds = %238
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %239, i8* align 1 %221, i64 %222, i1 false) #13
  br label %242

242:                                              ; preds = %241, %238
  %243 = getelementptr inbounds i8, i8* %239, i64 %222
  store i8 0, i8* %243, align 1
  br label %246

244:                                              ; preds = %220
  %245 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %7, i8* %221, i64 %222) #13
  br label %246

246:                                              ; preds = %242, %244
  %247 = icmp eq i8* %221, null
  br i1 %247, label %249, label %248

248:                                              ; preds = %246
  call void @OPENSSL_free(i8* nonnull %221) #13
  br label %249

249:                                              ; preds = %248, %246, %182, %160, %174, %177, %184, %187, %194, %198, %203, %207, %213, %217
  %250 = phi i1 [ false, %217 ], [ false, %213 ], [ false, %207 ], [ false, %203 ], [ false, %198 ], [ false, %194 ], [ false, %187 ], [ false, %184 ], [ false, %177 ], [ false, %174 ], [ false, %160 ], [ false, %182 ], [ true, %246 ], [ true, %248 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %170) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %169) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %168) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %167) #13
  %251 = call i32 @EVP_MD_CTX_cleanup(%struct.env_md_ctx_st* nonnull %165) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %164) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %163) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %162) #13
  %252 = icmp eq i8* %161, null
  br i1 %252, label %254, label %253

253:                                              ; preds = %249
  call void @OPENSSL_free(i8* nonnull %161) #13
  br label %254

254:                                              ; preds = %253, %249, %155, %157, %86, %77, %75, %73, %56, %54, %8, %41, %44, %47, %50, %70
  %255 = phi i1 [ false, %70 ], [ false, %50 ], [ false, %47 ], [ false, %44 ], [ false, %41 ], [ false, %8 ], [ false, %54 ], [ false, %56 ], [ false, %73 ], [ false, %75 ], [ false, %77 ], [ false, %86 ], [ false, %157 ], [ false, %155 ], [ %250, %249 ], [ %250, %253 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %35) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %34) #13
  call void @CBB_cleanup(%struct.cbb_st* nonnull %33) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %32) #13
  call void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* nonnull dereferenceable(32) %31) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #13
  ret i1 %255
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net9x509_util9ExtensionC2EN4base4spanIKhLm18446744073709551615EEEbS5_(%"struct.net::x509_util::Extension"* nocapture, i64, i8*, i1 zeroext, i64, i8*) unnamed_addr #3 align 2 {
  %7 = zext i1 %3 to i8
  %8 = getelementptr inbounds %"struct.net::x509_util::Extension", %"struct.net::x509_util::Extension"* %0, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %8, align 8
  %9 = getelementptr inbounds %"struct.net::x509_util::Extension", %"struct.net::x509_util::Extension"* %0, i64 0, i32 0, i32 1
  store i8* %2, i8** %9, align 8
  %10 = getelementptr inbounds %"struct.net::x509_util::Extension", %"struct.net::x509_util::Extension"* %0, i64 0, i32 1
  store i8 %7, i8* %10, align 8
  %11 = getelementptr inbounds %"struct.net::x509_util::Extension", %"struct.net::x509_util::Extension"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 %4, i64* %11, align 8
  %12 = getelementptr inbounds %"struct.net::x509_util::Extension", %"struct.net::x509_util::Extension"* %0, i64 0, i32 2, i32 1
  store i8* %5, i8** %12, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3net9x509_util9ExtensionD2Ev(%"struct.net::x509_util::Extension"* nocapture) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net9x509_util9ExtensionC2ERKS1_(%"struct.net::x509_util::Extension"* nocapture, %"struct.net::x509_util::Extension"* nocapture readonly dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.net::x509_util::Extension"* %0 to i8*
  %4 = bitcast %"struct.net::x509_util::Extension"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 40, i1 false)
  ret void
}

declare void @_ZN6crypto17EnsureOpenSSLInitEv() local_unnamed_addr #2

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

declare i32 @CBB_init(%struct.cbb_st*, i64) local_unnamed_addr #2

declare i32 @CBB_add_asn1_uint64(%struct.cbb_st*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN3net9x509_util12_GLOBAL__N_124AddRSASignatureAlgorithmEP6cbb_stNS0_15DigestAlgorithmE(%struct.cbb_st*, i32) unnamed_addr #0 {
  %3 = alloca %struct.cbb_st, align 8
  %4 = alloca %struct.cbb_st, align 8
  %5 = alloca %struct.cbb_st, align 8
  %6 = bitcast %struct.cbb_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 32, i1 false)
  %7 = bitcast %struct.cbb_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  %8 = bitcast %struct.cbb_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 32, i1 false)
  %9 = call i32 @CBB_add_asn1(%struct.cbb_st* %0, %struct.cbb_st* nonnull %3, i32 536870928) #13
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %25, label %11

11:                                               ; preds = %2
  %12 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %3, %struct.cbb_st* nonnull %4, i32 6) #13
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %25, label %14

14:                                               ; preds = %11
  %15 = icmp eq i32 %1, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %14
  %17 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZZN3net9x509_util12_GLOBAL__N_124AddRSASignatureAlgorithmEP6cbb_stNS0_15DigestAlgorithmEE24kSHA256WithRSAEncryption, i64 0, i64 0), i64 9) #13
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %16, %14
  %20 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %3, %struct.cbb_st* nonnull %5, i32 5) #13
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %19
  %23 = call i32 @CBB_flush(%struct.cbb_st* %0) #13
  %24 = icmp ne i32 %23, 0
  br label %25

25:                                               ; preds = %22, %19, %16, %2, %11
  %26 = phi i1 [ false, %11 ], [ false, %2 ], [ false, %16 ], [ false, %19 ], [ %24, %22 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #13
  ret i1 %26
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN3net9x509_util12_GLOBAL__N_17AddNameEP6cbb_stN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%struct.cbb_st*, i8*, i64) unnamed_addr #0 {
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca %"class.logging::LogMessage", align 8
  %6 = alloca %struct.cbb_st, align 8
  %7 = alloca %"class.std::__1::vector", align 8
  %8 = alloca %"class.logging::LogMessage", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.logging::LogMessage", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %struct.cbb_st, align 8
  %13 = alloca %struct.cbb_st, align 8
  %14 = alloca %struct.cbb_st, align 8
  %15 = alloca %struct.cbb_st, align 8
  %16 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #13
  %17 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %19 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 24, i1 false)
  call void @_ZN4base11SplitStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* nonnull sret %4, i8* %1, i64 %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i64 1, i32 1, i32 1) #13
  %20 = bitcast %"class.std::__1::basic_string"** %18 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.std::__1::vector"* %4 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %21, %23
  br i1 %24, label %25, label %32

25:                                               ; preds = %3
  %26 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #13
  br i1 %26, label %27, label %261

27:                                               ; preds = %25
  %28 = bitcast %"class.logging::LogMessage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %28) #13
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %5, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i64 0, i64 0), i32 94, i32 2) #13
  %29 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %5, i64 0, i32 2
  %30 = bitcast %"class.std::__1::basic_ostringstream"* %29 to %"class.std::__1::basic_ostream"*
  %31 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %30, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0), i64 26) #13
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %28) #13
  br label %261

32:                                               ; preds = %3
  %33 = bitcast %struct.cbb_st* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %33) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 32, i1 false)
  %34 = call i32 @CBB_add_asn1(%struct.cbb_st* %0, %struct.cbb_st* nonnull %6, i32 536870928) #13
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %259, label %36

36:                                               ; preds = %32
  %37 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %17, align 8
  %38 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %18, align 8
  %39 = icmp eq %"class.std::__1::basic_string"* %37, %38
  br i1 %39, label %256, label %40

40:                                               ; preds = %36
  %41 = bitcast %"class.std::__1::vector"* %7 to i8*
  %42 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 1
  %44 = bitcast %"class.std::__1::basic_string"** %43 to i64*
  %45 = bitcast %"class.std::__1::vector"* %7 to i64*
  %46 = bitcast %"class.logging::LogMessage"* %8 to i8*
  %47 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %8, i64 0, i32 2
  %48 = bitcast %"class.std::__1::basic_ostringstream"* %47 to %"class.std::__1::basic_ostream"*
  %49 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %50 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = bitcast %"class.logging::LogMessage"* %10 to i8*
  %55 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %10, i64 0, i32 2
  %56 = bitcast %"class.std::__1::basic_ostringstream"* %55 to %"class.std::__1::basic_ostream"*
  %57 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %58 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %62 = bitcast %struct.cbb_st* %12 to i8*
  %63 = bitcast %struct.cbb_st* %13 to i8*
  %64 = bitcast %struct.cbb_st* %14 to i8*
  %65 = bitcast %struct.cbb_st* %15 to i8*
  %66 = bitcast %"class.std::__1::vector"* %7 to i8**
  %67 = bitcast %"class.std::__1::vector"* %7 to i8*
  br label %70

68:                                               ; preds = %253
  %69 = icmp eq %"class.std::__1::basic_string"* %255, %38
  br i1 %69, label %256, label %70

70:                                               ; preds = %40, %68
  %71 = phi %"class.std::__1::basic_string"* [ %37, %40 ], [ %255, %68 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #13
  %72 = bitcast %"class.std::__1::basic_string"* %71 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 -86, i64 24, i1 false)
  %74 = load i8, i8* %73, align 1
  %75 = icmp slt i8 %74, 0
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i8*, i8** %76, align 8
  %78 = bitcast %"class.std::__1::basic_string"* %71 to i8*
  %79 = select i1 %75, i8* %77, i8* %78
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %81 = load i64, i64* %80, align 8
  %82 = zext i8 %74 to i64
  %83 = select i1 %75, i64 %81, i64 %82
  call void @_ZN4base11SplitStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* nonnull sret %7, i8* %79, i64 %83, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1, i32 0, i32 0) #13
  %84 = load i64, i64* %44, align 8
  %85 = load i64, i64* %45, align 8
  %86 = sub i64 %84, %85
  %87 = icmp eq i64 %86, 48
  %88 = inttoptr i64 %85 to %"class.std::__1::basic_string"*
  br i1 %87, label %105, label %89

89:                                               ; preds = %70
  %90 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #13
  br i1 %90, label %91, label %229

91:                                               ; preds = %89
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %46) #13
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %8, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i64 0, i64 0), i32 110, i32 2) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #13
  call void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* nonnull sret %9, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5, i64 0, i64 0), %"class.std::__1::basic_string"* dereferenceable(24) %71) #13
  %92 = load i8, i8* %51, align 1
  %93 = icmp slt i8 %92, 0
  %94 = load i8*, i8** %52, align 8
  %95 = load i64, i64* %53, align 8
  %96 = zext i8 %92 to i64
  %97 = select i1 %93, i8* %94, i8* %49
  %98 = select i1 %93, i64 %95, i64 %96
  %99 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %48, i8* %97, i64 %98) #13
  %100 = load i8, i8* %51, align 1
  %101 = icmp slt i8 %100, 0
  br i1 %101, label %102, label %104

102:                                              ; preds = %91
  %103 = load i8*, i8** %52, align 8
  call void @_ZdlPv(i8* %103) #14
  br label %104

104:                                              ; preds = %91, %102
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #13
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %46) #13
  br label %229

105:                                              ; preds = %70
  %106 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %88, i64 1
  %107 = inttoptr i64 %85 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %108 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %107, i64 0, i32 1, i32 0
  %109 = load i8, i8* %108, align 1
  %110 = icmp slt i8 %109, 0
  %111 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %88, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %112 = load i64, i64* %111, align 8
  %113 = zext i8 %109 to i64
  %114 = select i1 %110, i64 %112, i64 %113
  %115 = icmp eq i64 %114, 2
  br i1 %115, label %116, label %123

116:                                              ; preds = %105
  %117 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %88, i64 0, i64 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i64 2) #13
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %177, label %119

119:                                              ; preds = %116
  %120 = load i8, i8* %108, align 1
  %121 = load i64, i64* %111, align 8
  %122 = zext i8 %120 to i64
  br label %123

123:                                              ; preds = %119, %105
  %124 = phi i64 [ %122, %119 ], [ %113, %105 ]
  %125 = phi i64 [ %121, %119 ], [ %112, %105 ]
  %126 = phi i8 [ %120, %119 ], [ %109, %105 ]
  %127 = icmp slt i8 %126, 0
  %128 = select i1 %127, i64 %125, i64 %124
  %129 = icmp eq i64 %128, 1
  br i1 %129, label %130, label %137

130:                                              ; preds = %123
  %131 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %88, i64 0, i64 -1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i64 1) #13
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %177, label %133

133:                                              ; preds = %130
  %134 = load i8, i8* %108, align 1
  %135 = load i64, i64* %111, align 8
  %136 = zext i8 %134 to i64
  br label %137

137:                                              ; preds = %133, %123
  %138 = phi i64 [ %136, %133 ], [ %124, %123 ]
  %139 = phi i64 [ %135, %133 ], [ %125, %123 ]
  %140 = phi i8 [ %134, %133 ], [ %126, %123 ]
  %141 = icmp slt i8 %140, 0
  %142 = select i1 %141, i64 %139, i64 %138
  %143 = icmp eq i64 %142, 1
  br i1 %143, label %144, label %151

144:                                              ; preds = %137
  %145 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %88, i64 0, i64 -1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i64 1) #13
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %177, label %147

147:                                              ; preds = %144
  %148 = load i8, i8* %108, align 1
  %149 = load i64, i64* %111, align 8
  %150 = zext i8 %148 to i64
  br label %151

151:                                              ; preds = %147, %137
  %152 = phi i64 [ %150, %147 ], [ %138, %137 ]
  %153 = phi i64 [ %149, %147 ], [ %139, %137 ]
  %154 = phi i8 [ %148, %147 ], [ %140, %137 ]
  %155 = icmp slt i8 %154, 0
  %156 = select i1 %155, i64 %153, i64 %152
  %157 = icmp eq i64 %156, 2
  br i1 %157, label %158, label %161

158:                                              ; preds = %151
  %159 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %88, i64 0, i64 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i64 0, i64 0), i64 2) #13
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %177, label %161

161:                                              ; preds = %151, %158
  %162 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #13
  br i1 %162, label %163, label %229

163:                                              ; preds = %161
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %54) #13
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %10, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i64 0, i64 0), i32 126, i32 2) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #13
  call void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* nonnull sret %11, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.13, i64 0, i64 0), %"class.std::__1::basic_string"* dereferenceable(24) %88) #13
  %164 = load i8, i8* %59, align 1
  %165 = icmp slt i8 %164, 0
  %166 = load i8*, i8** %60, align 8
  %167 = load i64, i64* %61, align 8
  %168 = zext i8 %164 to i64
  %169 = select i1 %165, i8* %166, i8* %57
  %170 = select i1 %165, i64 %167, i64 %168
  %171 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %56, i8* %169, i64 %170) #13
  %172 = load i8, i8* %59, align 1
  %173 = icmp slt i8 %172, 0
  br i1 %173, label %174, label %176

174:                                              ; preds = %163
  %175 = load i8*, i8** %60, align 8
  call void @_ZdlPv(i8* %175) #14
  br label %176

176:                                              ; preds = %163, %174
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #13
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %54) #13
  br label %229

177:                                              ; preds = %158, %144, %130, %116
  %178 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @_ZZN3net9x509_util12_GLOBAL__N_17AddNameEP6cbb_stN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEE11kCommonName, i64 0, i64 0), %116 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @_ZZN3net9x509_util12_GLOBAL__N_17AddNameEP6cbb_stN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEE12kCountryName, i64 0, i64 0), %130 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @_ZZN3net9x509_util12_GLOBAL__N_17AddNameEP6cbb_stN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEE17kOrganizationName, i64 0, i64 0), %144 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @_ZZN3net9x509_util12_GLOBAL__N_17AddNameEP6cbb_stN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEE23kOrganizationalUnitName, i64 0, i64 0), %158 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %62) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %62, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %63) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %63, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %64) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %65) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 -86, i64 32, i1 false)
  %179 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %6, %struct.cbb_st* nonnull %12, i32 536870929) #13
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %227, label %181

181:                                              ; preds = %177
  %182 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %12, %struct.cbb_st* nonnull %13, i32 536870928) #13
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %227, label %184

184:                                              ; preds = %181
  %185 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %13, %struct.cbb_st* nonnull %14, i32 6) #13
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %227, label %187

187:                                              ; preds = %184
  %188 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %14, i8* %178, i64 3) #13
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %227, label %190

190:                                              ; preds = %187
  %191 = load i8, i8* %108, align 1
  %192 = icmp slt i8 %191, 0
  %193 = load i64, i64* %111, align 8
  %194 = zext i8 %191 to i64
  %195 = select i1 %192, i64 %193, i64 %194
  %196 = icmp eq i64 %195, 1
  br i1 %196, label %197, label %201

197:                                              ; preds = %190
  %198 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %88, i64 0, i64 -1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i64 1) #13
  %199 = icmp eq i32 %198, 0
  %200 = select i1 %199, i32 19, i32 12
  br label %201

201:                                              ; preds = %197, %190
  %202 = phi i32 [ 12, %190 ], [ %200, %197 ]
  %203 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %13, %struct.cbb_st* nonnull %15, i32 %202) #13
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %227, label %205

205:                                              ; preds = %201
  %206 = bitcast %"class.std::__1::basic_string"* %106 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %207 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %206, i64 0, i32 1, i32 0
  %208 = load i8, i8* %207, align 1
  %209 = icmp slt i8 %208, 0
  br i1 %209, label %210, label %215

210:                                              ; preds = %205
  %211 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %106, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load i8*, i8** %211, align 8
  %213 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %88, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %214 = load i64, i64* %213, align 8
  br label %218

215:                                              ; preds = %205
  %216 = bitcast %"class.std::__1::basic_string"* %106 to i8*
  %217 = zext i8 %208 to i64
  br label %218

218:                                              ; preds = %210, %215
  %219 = phi i8* [ %212, %210 ], [ %216, %215 ]
  %220 = phi i64 [ %214, %210 ], [ %217, %215 ]
  %221 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %15, i8* %219, i64 %220) #13
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %227, label %223

223:                                              ; preds = %218
  %224 = call i32 @CBB_flush(%struct.cbb_st* nonnull %6) #13
  %225 = icmp eq i32 %224, 0
  %226 = zext i1 %225 to i32
  br label %227

227:                                              ; preds = %223, %177, %181, %184, %187, %201, %218
  %228 = phi i32 [ 1, %218 ], [ 1, %201 ], [ 1, %187 ], [ 1, %184 ], [ 1, %181 ], [ 1, %177 ], [ %226, %223 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %65) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %64) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %63) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %62) #13
  br label %229

229:                                              ; preds = %227, %161, %176, %104, %89
  %230 = phi i32 [ 1, %89 ], [ 1, %104 ], [ %228, %227 ], [ 1, %161 ], [ 1, %176 ]
  %231 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %42, align 8
  %232 = icmp eq %"class.std::__1::basic_string"* %231, null
  br i1 %232, label %253, label %233

233:                                              ; preds = %229
  %234 = bitcast %"class.std::__1::basic_string"* %231 to i8*
  %235 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %43, align 8
  %236 = icmp eq %"class.std::__1::basic_string"* %235, %231
  br i1 %236, label %251, label %237

237:                                              ; preds = %233, %247
  %238 = phi %"class.std::__1::basic_string"* [ %239, %247 ], [ %235, %233 ]
  %239 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %238, i64 -1
  %240 = bitcast %"class.std::__1::basic_string"* %239 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %241 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %240, i64 0, i32 1, i32 0
  %242 = load i8, i8* %241, align 1
  %243 = icmp slt i8 %242, 0
  br i1 %243, label %244, label %247

244:                                              ; preds = %237
  %245 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %239, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %246 = load i8*, i8** %245, align 8
  call void @_ZdlPv(i8* %246) #14
  br label %247

247:                                              ; preds = %244, %237
  %248 = icmp eq %"class.std::__1::basic_string"* %239, %231
  br i1 %248, label %249, label %237

249:                                              ; preds = %247
  %250 = load i8*, i8** %66, align 8
  br label %251

251:                                              ; preds = %249, %233
  %252 = phi i8* [ %250, %249 ], [ %234, %233 ]
  store %"class.std::__1::basic_string"* %231, %"class.std::__1::basic_string"** %43, align 8
  call void @_ZdlPv(i8* %252) #14
  br label %253

253:                                              ; preds = %229, %251
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #13
  %254 = icmp eq i32 %230, 0
  %255 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %71, i64 1
  br i1 %254, label %68, label %259

256:                                              ; preds = %68, %36
  %257 = call i32 @CBB_flush(%struct.cbb_st* %0) #13
  %258 = icmp ne i32 %257, 0
  br label %259

259:                                              ; preds = %253, %256, %32
  %260 = phi i1 [ false, %32 ], [ %258, %256 ], [ false, %253 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %33) #13
  br label %261

261:                                              ; preds = %27, %25, %259
  %262 = phi i1 [ %260, %259 ], [ false, %25 ], [ false, %27 ]
  %263 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %17, align 8
  %264 = icmp eq %"class.std::__1::basic_string"* %263, null
  br i1 %264, label %286, label %265

265:                                              ; preds = %261
  %266 = bitcast %"class.std::__1::basic_string"* %263 to i8*
  %267 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %18, align 8
  %268 = icmp eq %"class.std::__1::basic_string"* %267, %263
  br i1 %268, label %284, label %269

269:                                              ; preds = %265, %279
  %270 = phi %"class.std::__1::basic_string"* [ %271, %279 ], [ %267, %265 ]
  %271 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %270, i64 -1
  %272 = bitcast %"class.std::__1::basic_string"* %271 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %273 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %272, i64 0, i32 1, i32 0
  %274 = load i8, i8* %273, align 1
  %275 = icmp slt i8 %274, 0
  br i1 %275, label %276, label %279

276:                                              ; preds = %269
  %277 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %271, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %278 = load i8*, i8** %277, align 8
  call void @_ZdlPv(i8* %278) #14
  br label %279

279:                                              ; preds = %276, %269
  %280 = icmp eq %"class.std::__1::basic_string"* %271, %263
  br i1 %280, label %281, label %269

281:                                              ; preds = %279
  %282 = bitcast %"class.std::__1::vector"* %4 to i8**
  %283 = load i8*, i8** %282, align 8
  br label %284

284:                                              ; preds = %281, %265
  %285 = phi i8* [ %283, %281 ], [ %266, %265 ]
  store %"class.std::__1::basic_string"* %263, %"class.std::__1::basic_string"** %18, align 8
  call void @_ZdlPv(i8* %285) #14
  br label %286

286:                                              ; preds = %261, %284
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #13
  ret i1 %262
}

declare i32 @EVP_marshal_public_key(%struct.cbb_st*, %struct.evp_pkey_st*) local_unnamed_addr #2

declare i32 @CBB_add_bytes(%struct.cbb_st*, i8*, i64) local_unnamed_addr #2

declare i32 @CBB_add_asn1_bool(%struct.cbb_st*, i32) local_unnamed_addr #2

declare i32 @CBB_finish(%struct.cbb_st*, i8**, i64*) local_unnamed_addr #2

declare i32 @CBB_add_u8(%struct.cbb_st*, i8 zeroext) local_unnamed_addr #2

declare i32 @EVP_DigestSignInit(%struct.env_md_ctx_st*, %struct.evp_pkey_ctx_st**, %struct.env_md_st*, %struct.engine_st*, %struct.evp_pkey_st*) local_unnamed_addr #2

declare i32 @EVP_DigestSign(%struct.env_md_ctx_st*, i8*, i64*, i8*, i64) local_unnamed_addr #2

declare i32 @CBB_reserve(%struct.cbb_st*, i8**, i64) local_unnamed_addr #2

declare i32 @CBB_did_write(%struct.cbb_st*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.crypto_buffer_pool_st* @_ZN3net9x509_util13GetBufferPoolEv() local_unnamed_addr #0 {
  %1 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net9x509_util12_GLOBAL__N_123g_buffer_pool_singletonE, i64 0, i32 0) acquire, align 8
  %2 = icmp ugt i64 %1, 1
  br i1 %2, label %9, label %3

3:                                                ; preds = %0
  %4 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net9x509_util12_GLOBAL__N_123g_buffer_pool_singletonE, i64 0, i32 0)) #13
  br i1 %4, label %5, label %7

5:                                                ; preds = %3
  %6 = tail call %struct.crypto_buffer_pool_st* @CRYPTO_BUFFER_POOL_new() #13
  store %struct.crypto_buffer_pool_st* %6, %struct.crypto_buffer_pool_st** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net9x509_util12_GLOBAL__N_123g_buffer_pool_singletonE, i64 0, i32 1, i64 0) to %struct.crypto_buffer_pool_st**), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net9x509_util12_GLOBAL__N_123g_buffer_pool_singletonE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net9x509_util12_GLOBAL__N_123g_buffer_pool_singletonE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN3net9x509_util12_GLOBAL__N_123g_buffer_pool_singletonE to i8*)) #13
  br label %9

7:                                                ; preds = %3
  %8 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net9x509_util12_GLOBAL__N_123g_buffer_pool_singletonE, i64 0, i32 0) acquire, align 8
  br label %9

9:                                                ; preds = %0, %5, %7
  %10 = phi i64 [ %1, %0 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net9x509_util12_GLOBAL__N_123g_buffer_pool_singletonE, i64 0, i32 1, i64 0) to i64), %5 ], [ %8, %7 ]
  %11 = inttoptr i64 %10 to %"class.net::x509_util::(anonymous namespace)::BufferPoolSingleton"*
  %12 = getelementptr inbounds %"class.net::x509_util::(anonymous namespace)::BufferPoolSingleton", %"class.net::x509_util::(anonymous namespace)::BufferPoolSingleton"* %11, i64 0, i32 0
  %13 = load %struct.crypto_buffer_pool_st*, %struct.crypto_buffer_pool_st** %12, align 8
  ret %struct.crypto_buffer_pool_st* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.crypto_buffer_st* @_ZN3net9x509_util18CreateCryptoBufferEPKhm(i8*, i64) local_unnamed_addr #0 {
  %3 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net9x509_util12_GLOBAL__N_123g_buffer_pool_singletonE, i64 0, i32 0) acquire, align 8
  %4 = icmp ugt i64 %3, 1
  br i1 %4, label %11, label %5

5:                                                ; preds = %2
  %6 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net9x509_util12_GLOBAL__N_123g_buffer_pool_singletonE, i64 0, i32 0)) #13
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = tail call %struct.crypto_buffer_pool_st* @CRYPTO_BUFFER_POOL_new() #13
  store %struct.crypto_buffer_pool_st* %8, %struct.crypto_buffer_pool_st** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net9x509_util12_GLOBAL__N_123g_buffer_pool_singletonE, i64 0, i32 1, i64 0) to %struct.crypto_buffer_pool_st**), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net9x509_util12_GLOBAL__N_123g_buffer_pool_singletonE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net9x509_util12_GLOBAL__N_123g_buffer_pool_singletonE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN3net9x509_util12_GLOBAL__N_123g_buffer_pool_singletonE to i8*)) #13
  br label %11

9:                                                ; preds = %5
  %10 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net9x509_util12_GLOBAL__N_123g_buffer_pool_singletonE, i64 0, i32 0) acquire, align 8
  br label %11

11:                                               ; preds = %2, %7, %9
  %12 = phi i64 [ %3, %2 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net9x509_util12_GLOBAL__N_123g_buffer_pool_singletonE, i64 0, i32 1, i64 0) to i64), %7 ], [ %10, %9 ]
  %13 = inttoptr i64 %12 to %"class.net::x509_util::(anonymous namespace)::BufferPoolSingleton"*
  %14 = getelementptr inbounds %"class.net::x509_util::(anonymous namespace)::BufferPoolSingleton", %"class.net::x509_util::(anonymous namespace)::BufferPoolSingleton"* %13, i64 0, i32 0
  %15 = load %struct.crypto_buffer_pool_st*, %struct.crypto_buffer_pool_st** %14, align 8
  %16 = tail call %struct.crypto_buffer_st* @CRYPTO_BUFFER_new(i8* %0, i64 %1, %struct.crypto_buffer_pool_st* %15) #13
  ret %struct.crypto_buffer_st* %16
}

declare %struct.crypto_buffer_st* @CRYPTO_BUFFER_new(i8*, i64, %struct.crypto_buffer_pool_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.crypto_buffer_st* @_ZN3net9x509_util18CreateCryptoBufferERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BasicStringPiece"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net9x509_util12_GLOBAL__N_123g_buffer_pool_singletonE, i64 0, i32 0) acquire, align 8
  %7 = icmp ugt i64 %6, 1
  br i1 %7, label %14, label %8

8:                                                ; preds = %1
  %9 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net9x509_util12_GLOBAL__N_123g_buffer_pool_singletonE, i64 0, i32 0)) #13
  br i1 %9, label %10, label %12

10:                                               ; preds = %8
  %11 = tail call %struct.crypto_buffer_pool_st* @CRYPTO_BUFFER_POOL_new() #13
  store %struct.crypto_buffer_pool_st* %11, %struct.crypto_buffer_pool_st** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net9x509_util12_GLOBAL__N_123g_buffer_pool_singletonE, i64 0, i32 1, i64 0) to %struct.crypto_buffer_pool_st**), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net9x509_util12_GLOBAL__N_123g_buffer_pool_singletonE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net9x509_util12_GLOBAL__N_123g_buffer_pool_singletonE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN3net9x509_util12_GLOBAL__N_123g_buffer_pool_singletonE to i8*)) #13
  br label %14

12:                                               ; preds = %8
  %13 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net9x509_util12_GLOBAL__N_123g_buffer_pool_singletonE, i64 0, i32 0) acquire, align 8
  br label %14

14:                                               ; preds = %1, %10, %12
  %15 = phi i64 [ %6, %1 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net9x509_util12_GLOBAL__N_123g_buffer_pool_singletonE, i64 0, i32 1, i64 0) to i64), %10 ], [ %13, %12 ]
  %16 = inttoptr i64 %15 to %"class.net::x509_util::(anonymous namespace)::BufferPoolSingleton"*
  %17 = getelementptr inbounds %"class.net::x509_util::(anonymous namespace)::BufferPoolSingleton", %"class.net::x509_util::(anonymous namespace)::BufferPoolSingleton"* %16, i64 0, i32 0
  %18 = load %struct.crypto_buffer_pool_st*, %struct.crypto_buffer_pool_st** %17, align 8
  %19 = tail call %struct.crypto_buffer_st* @CRYPTO_BUFFER_new(i8* %3, i64 %5, %struct.crypto_buffer_pool_st* %18) #13
  ret %struct.crypto_buffer_st* %19
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net9x509_util17CryptoBufferEqualEPK16crypto_buffer_stS3_(%struct.crypto_buffer_st*, %struct.crypto_buffer_st*) local_unnamed_addr #0 {
  %3 = icmp eq %struct.crypto_buffer_st* %0, %1
  br i1 %3, label %14, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st* %0) #13
  %6 = tail call i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st* %1) #13
  %7 = icmp eq i64 %5, %6
  br i1 %7, label %8, label %14

8:                                                ; preds = %4
  %9 = tail call i8* @CRYPTO_BUFFER_data(%struct.crypto_buffer_st* %0) #13
  %10 = tail call i8* @CRYPTO_BUFFER_data(%struct.crypto_buffer_st* %1) #13
  %11 = tail call i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st* %0) #13
  %12 = tail call i32 @bcmp(i8* %9, i8* %10, i64 %11)
  %13 = icmp eq i32 %12, 0
  br label %14

14:                                               ; preds = %4, %8, %2
  %15 = phi i1 [ true, %2 ], [ false, %4 ], [ %13, %8 ]
  ret i1 %15
}

declare i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st*) local_unnamed_addr #2

declare i8* @CRYPTO_BUFFER_data(%struct.crypto_buffer_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::X509Certificate"* @_ZN3net9x509_util32CreateX509CertificateFromBuffersEPK22stack_st_CRYPTO_BUFFER(%struct.stack_st_CRYPTO_BUFFER*) local_unnamed_addr #0 {
  %2 = alloca %"class.std::__1::vector.10", align 16
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = alloca %"class.std::__1::vector.10", align 16
  %5 = bitcast %struct.stack_st_CRYPTO_BUFFER* %0 to %struct.stack_st*
  %6 = tail call i64 @sk_num(%struct.stack_st* %5) #13
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %104, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.std::__1::vector.10"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %2, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %2, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 0, i64 24, i1 false) #13
  %13 = call i64 @sk_num(%struct.stack_st* %5) #13
  %14 = icmp ugt i64 %13, 1
  br i1 %14, label %15, label %20

15:                                               ; preds = %8
  %16 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.std::__1::unique_ptr"* %3 to i8**
  %19 = bitcast %"class.std::__1::unique_ptr"** %11 to i64*
  br label %79

20:                                               ; preds = %100, %8
  %21 = call i8* @sk_value(%struct.stack_st* %5, i64 0) #13
  %22 = bitcast i8* %21 to %struct.crypto_buffer_st*
  %23 = icmp eq i8* %21, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %20
  %25 = call i32 @CRYPTO_BUFFER_up_ref(%struct.crypto_buffer_st* nonnull %22) #13
  br label %26

26:                                               ; preds = %20, %24
  %27 = bitcast %"class.std::__1::vector.10"* %2 to <2 x i64>*
  %28 = load <2 x i64>, <2 x i64>* %27, align 16
  %29 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %4, i64 0, i32 0, i32 1
  %30 = bitcast %"class.std::__1::vector.10"* %4 to <2 x i64>*
  store <2 x i64> %28, <2 x i64>* %30, align 16
  %31 = bitcast %"class.std::__1::unique_ptr"** %12 to i64*
  %32 = load i64, i64* %31, align 16
  %33 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %34 = bitcast %"class.std::__1::unique_ptr"** %33 to i64*
  store i64 %32, i64* %34, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 0, i64 24, i1 false) #13
  %35 = call %"class.net::X509Certificate"* @_ZN3net15X509Certificate16CreateFromBufferENSt3__110unique_ptrI16crypto_buffer_stN4bssl8internal7DeleterIS3_EEEENS1_6vectorIS8_NS1_9allocatorIS8_EEEE(%struct.crypto_buffer_st* %22, %"class.std::__1::vector.10"* nonnull %4) #13
  %36 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %4, i64 0, i32 0, i32 0
  %37 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %36, align 16
  %38 = icmp eq %"class.std::__1::unique_ptr"* %37, null
  br i1 %38, label %57, label %39

39:                                               ; preds = %26
  %40 = bitcast %"class.std::__1::unique_ptr"* %37 to i8*
  %41 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %29, align 8
  %42 = icmp eq %"class.std::__1::unique_ptr"* %41, %37
  br i1 %42, label %55, label %43

43:                                               ; preds = %39, %50
  %44 = phi %"class.std::__1::unique_ptr"* [ %45, %50 ], [ %41, %39 ]
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %44, i64 -1
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %45, i64 0, i32 0, i32 0, i32 0
  %47 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %46, align 8
  store %struct.crypto_buffer_st* null, %struct.crypto_buffer_st** %46, align 8
  %48 = icmp eq %struct.crypto_buffer_st* %47, null
  br i1 %48, label %50, label %49

49:                                               ; preds = %43
  call void @CRYPTO_BUFFER_free(%struct.crypto_buffer_st* nonnull %47) #13
  br label %50

50:                                               ; preds = %49, %43
  %51 = icmp eq %"class.std::__1::unique_ptr"* %45, %37
  br i1 %51, label %52, label %43

52:                                               ; preds = %50
  %53 = bitcast %"class.std::__1::vector.10"* %4 to i8**
  %54 = load i8*, i8** %53, align 16
  br label %55

55:                                               ; preds = %52, %39
  %56 = phi i8* [ %54, %52 ], [ %40, %39 ]
  store %"class.std::__1::unique_ptr"* %37, %"class.std::__1::unique_ptr"** %29, align 8
  call void @_ZdlPv(i8* %56) #14
  br label %57

57:                                               ; preds = %26, %55
  %58 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %10, align 16
  %59 = icmp eq %"class.std::__1::unique_ptr"* %58, null
  br i1 %59, label %78, label %60

60:                                               ; preds = %57
  %61 = bitcast %"class.std::__1::unique_ptr"* %58 to i8*
  %62 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %11, align 8
  %63 = icmp eq %"class.std::__1::unique_ptr"* %62, %58
  br i1 %63, label %76, label %64

64:                                               ; preds = %60, %71
  %65 = phi %"class.std::__1::unique_ptr"* [ %66, %71 ], [ %62, %60 ]
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %65, i64 -1
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %66, i64 0, i32 0, i32 0, i32 0
  %68 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %67, align 8
  store %struct.crypto_buffer_st* null, %struct.crypto_buffer_st** %67, align 8
  %69 = icmp eq %struct.crypto_buffer_st* %68, null
  br i1 %69, label %71, label %70

70:                                               ; preds = %64
  call void @CRYPTO_BUFFER_free(%struct.crypto_buffer_st* nonnull %68) #13
  br label %71

71:                                               ; preds = %70, %64
  %72 = icmp eq %"class.std::__1::unique_ptr"* %66, %58
  br i1 %72, label %73, label %64

73:                                               ; preds = %71
  %74 = bitcast %"class.std::__1::vector.10"* %2 to i8**
  %75 = load i8*, i8** %74, align 16
  br label %76

76:                                               ; preds = %73, %60
  %77 = phi i8* [ %75, %73 ], [ %61, %60 ]
  store %"class.std::__1::unique_ptr"* %58, %"class.std::__1::unique_ptr"** %11, align 8
  call void @_ZdlPv(i8* %77) #14
  br label %78

78:                                               ; preds = %57, %76
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #13
  br label %104

79:                                               ; preds = %15, %100
  %80 = phi i64 [ 1, %15 ], [ %101, %100 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %81 = call i8* @sk_value(%struct.stack_st* %5, i64 %80) #13
  %82 = icmp eq i8* %81, null
  br i1 %82, label %86, label %83

83:                                               ; preds = %79
  %84 = bitcast i8* %81 to %struct.crypto_buffer_st*
  %85 = call i32 @CRYPTO_BUFFER_up_ref(%struct.crypto_buffer_st* nonnull %84) #13
  br label %86

86:                                               ; preds = %79, %83
  store i8* %81, i8** %18, align 8
  %87 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %11, align 8
  %88 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %12, align 16
  %89 = icmp ult %"class.std::__1::unique_ptr"* %87, %88
  br i1 %89, label %90, label %95

90:                                               ; preds = %86
  %91 = ptrtoint i8* %81 to i64
  store %struct.crypto_buffer_st* null, %struct.crypto_buffer_st** %17, align 8
  %92 = bitcast %"class.std::__1::unique_ptr"* %87 to i64*
  store i64 %91, i64* %92, align 8
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %87, i64 1
  %94 = ptrtoint %"class.std::__1::unique_ptr"* %93 to i64
  store i64 %94, i64* %19, align 8
  br label %96

95:                                               ; preds = %86
  call void @_ZNSt3__16vectorINS_10unique_ptrI16crypto_buffer_stN4bssl8internal7DeleterIS2_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.10"* nonnull %2, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %3) #13
  br label %96

96:                                               ; preds = %90, %95
  %97 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %17, align 8
  store %struct.crypto_buffer_st* null, %struct.crypto_buffer_st** %17, align 8
  %98 = icmp eq %struct.crypto_buffer_st* %97, null
  br i1 %98, label %100, label %99

99:                                               ; preds = %96
  call void @CRYPTO_BUFFER_free(%struct.crypto_buffer_st* nonnull %97) #13
  br label %100

100:                                              ; preds = %96, %99
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  %101 = add nuw i64 %80, 1
  %102 = call i64 @sk_num(%struct.stack_st* %5) #13
  %103 = icmp ult i64 %101, %102
  br i1 %103, label %79, label %20

104:                                              ; preds = %1, %78
  %105 = phi %"class.net::X509Certificate"* [ %35, %78 ], [ null, %1 ]
  ret %"class.net::X509Certificate"* %105
}

declare %"class.net::X509Certificate"* @_ZN3net15X509Certificate16CreateFromBufferENSt3__110unique_ptrI16crypto_buffer_stN4bssl8internal7DeleterIS3_EEEENS1_6vectorIS8_NS1_9allocatorIS8_EEEE(%struct.crypto_buffer_st*, %"class.std::__1::vector.10"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8 @_ZN3net9x509_util30DefaultParseCertificateOptionsEv() local_unnamed_addr #4 {
  ret i8 1
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net9x509_util23CalculateSha256SpkiHashEPK16crypto_buffer_stPNS_9HashValueE(%struct.crypto_buffer_st*, %"class.net::HashValue"*) local_unnamed_addr #0 {
  %3 = alloca %"class.base::BasicStringPiece", align 8
  %4 = bitcast %"class.base::BasicStringPiece"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 16, i1 false) #13
  %5 = tail call i8* @CRYPTO_BUFFER_data(%struct.crypto_buffer_st* %0) #13
  %6 = tail call i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st* %0) #13
  %7 = call zeroext i1 @_ZN3net4asn122ExtractSPKIFromDERCertEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPS6_(i8* %5, i64 %6, %"class.base::BasicStringPiece"* nonnull %3) #13
  br i1 %7, label %8, label %16

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 0
  %10 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 1
  %11 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %1, i64 0, i32 0
  store i32 0, i32* %11, align 4
  %12 = load i8*, i8** %9, align 8
  %13 = load i64, i64* %10, align 8
  %14 = call i8* @_ZN3net9HashValue4dataEv(%"class.net::HashValue"* %1) #13
  %15 = call i64 @_ZNK3net9HashValue4sizeEv(%"class.net::HashValue"* %1) #13
  call void @_ZN6crypto16SHA256HashStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPvm(i8* %12, i64 %13, i8* %14, i64 %15) #13
  br label %16

16:                                               ; preds = %2, %8
  %17 = phi i1 [ true, %8 ], [ false, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #13
  ret i1 %17
}

declare zeroext i1 @_ZN3net4asn122ExtractSPKIFromDERCertEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPS6_(i8*, i64, %"class.base::BasicStringPiece"*) local_unnamed_addr #2

declare void @_ZN6crypto16SHA256HashStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPvm(i8*, i64, i8*, i64) local_unnamed_addr #2

declare i8* @_ZN3net9HashValue4dataEv(%"class.net::HashValue"*) local_unnamed_addr #2

declare i64 @_ZNK3net9HashValue4sizeEv(%"class.net::HashValue"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net9x509_util36SignatureVerifierInitWithCertificateEPN6crypto17SignatureVerifierENS2_18SignatureAlgorithmEN4base4spanIKhLm18446744073709551615EEEPK16crypto_buffer_st(%"class.crypto::SignatureVerifier"*, i32, i64, i8*, %struct.crypto_buffer_st*) local_unnamed_addr #0 {
  %6 = alloca %"class.base::BasicStringPiece", align 8
  %7 = alloca %"class.net::der::Input", align 8
  %8 = alloca %"class.net::der::Input", align 8
  %9 = alloca %"class.net::der::BitString", align 8
  %10 = alloca %"struct.net::ParsedTbsCertificate", align 8
  %11 = alloca %"class.net::der::Input", align 8
  %12 = alloca %"struct.net::ParseCertificateOptions", align 1
  %13 = alloca %"class.std::__1::map", align 8
  %14 = alloca %"struct.net::ParsedExtension", align 8
  %15 = alloca %"class.net::der::Input", align 8
  %16 = alloca %"class.net::der::BitString", align 8
  %17 = bitcast %"class.base::BasicStringPiece"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #13
  %18 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 0
  %19 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 1
  %20 = tail call i8* @CRYPTO_BUFFER_data(%struct.crypto_buffer_st* %4) #13
  %21 = tail call i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st* %4) #13
  store i8* %20, i8** %18, align 8
  store i64 %21, i64* %19, align 8
  %22 = bitcast %"class.net::der::Input"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #13
  %23 = bitcast %"class.net::der::Input"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 16, i1 false)
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %7) #13
  %24 = bitcast %"class.net::der::Input"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #13
  %25 = bitcast %"class.net::der::Input"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 16, i1 false)
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %8) #13
  %26 = bitcast %"class.net::der::BitString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #13
  %27 = getelementptr inbounds %"class.net::der::BitString", %"class.net::der::BitString"* %9, i64 0, i32 1
  %28 = getelementptr inbounds %"class.net::der::BitString", %"class.net::der::BitString"* %9, i64 0, i32 0
  %29 = bitcast %"class.net::der::BitString"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %28) #13
  store i8 0, i8* %27, align 8
  %30 = bitcast %"struct.net::ParsedTbsCertificate"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 192, i8* nonnull %30) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 192, i1 false)
  call void @_ZN3net20ParsedTbsCertificateC1Ev(%"struct.net::ParsedTbsCertificate"* nonnull %10) #13
  %31 = bitcast %"class.net::der::Input"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #13
  call void @_ZN3net3der5InputC1ERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::der::Input"* nonnull %11, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %6) #13
  %32 = call zeroext i1 @_ZN3net16ParseCertificateERKNS_3der5InputEPS1_S4_PNS0_9BitStringEPNS_10CertErrorsE(%"class.net::der::Input"* nonnull dereferenceable(16) %11, %"class.net::der::Input"* nonnull %7, %"class.net::der::Input"* nonnull %8, %"class.net::der::BitString"* nonnull %9, %"class.net::CertErrors"* null) #13
  %33 = getelementptr inbounds %"struct.net::ParseCertificateOptions", %"struct.net::ParseCertificateOptions"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %33) #13
  br i1 %32, label %34, label %36

34:                                               ; preds = %5
  store i8 1, i8* %33, align 1
  %35 = call zeroext i1 @_ZN3net19ParseTbsCertificateERKNS_3der5InputERKNS_23ParseCertificateOptionsEPNS_20ParsedTbsCertificateEPNS_10CertErrorsE(%"class.net::der::Input"* nonnull dereferenceable(16) %7, %"struct.net::ParseCertificateOptions"* nonnull dereferenceable(1) %12, %"struct.net::ParsedTbsCertificate"* nonnull %10, %"class.net::CertErrors"* null) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %33) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #13
  br i1 %35, label %37, label %87

36:                                               ; preds = %5
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %33) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #13
  br label %87

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"struct.net::ParsedTbsCertificate", %"struct.net::ParsedTbsCertificate"* %10, i64 0, i32 14
  %39 = load i8, i8* %38, align 8, !range !12
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %81, label %41

41:                                               ; preds = %37
  %42 = bitcast %"class.std::__1::map"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #13
  %43 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %13, i64 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %13, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %13, i64 0, i32 0, i32 1, i32 0, i32 0
  %46 = bitcast %"class.std::__1::__tree_node_base"** %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %45, %"class.std::__1::__tree_end_node"** %43, align 8
  %47 = getelementptr inbounds %"struct.net::ParsedTbsCertificate", %"struct.net::ParsedTbsCertificate"* %10, i64 0, i32 15
  %48 = call zeroext i1 @_ZN3net15ParseExtensionsERKNS_3der5InputEPNSt3__13mapIS1_NS_15ParsedExtensionENS4_4lessIS1_EENS4_9allocatorINS4_4pairIS2_S6_EEEEEE(%"class.net::der::Input"* dereferenceable(16) %47, %"class.std::__1::map"* nonnull %13) #13
  br i1 %48, label %49, label %75

49:                                               ; preds = %41
  %50 = bitcast %"struct.net::ParsedExtension"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %50) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 40, i1 false)
  %51 = getelementptr inbounds %"struct.net::ParsedExtension", %"struct.net::ParsedExtension"* %14, i64 0, i32 0
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %51) #13
  %52 = getelementptr inbounds %"struct.net::ParsedExtension", %"struct.net::ParsedExtension"* %14, i64 0, i32 1
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* %52) #13
  %53 = getelementptr inbounds %"struct.net::ParsedExtension", %"struct.net::ParsedExtension"* %14, i64 0, i32 2
  store i8 0, i8* %53, align 8
  %54 = bitcast %"class.net::der::Input"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54) #13
  %55 = call { i8*, i64 } @_ZN3net11KeyUsageOidEv() #13
  %56 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %15, i64 0, i32 0
  %57 = extractvalue { i8*, i64 } %55, 0
  store i8* %57, i8** %56, align 8
  %58 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %15, i64 0, i32 1
  %59 = extractvalue { i8*, i64 } %55, 1
  store i64 %59, i64* %58, align 8
  %60 = call zeroext i1 @_ZN3net16ConsumeExtensionERKNS_3der5InputEPNSt3__13mapIS1_NS_15ParsedExtensionENS4_4lessIS1_EENS4_9allocatorINS4_4pairIS2_S6_EEEEEEPS6_(%"class.net::der::Input"* nonnull dereferenceable(16) %15, %"class.std::__1::map"* nonnull %13, %"struct.net::ParsedExtension"* nonnull %14) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #13
  br i1 %60, label %61, label %73

61:                                               ; preds = %49
  %62 = bitcast %"class.net::der::BitString"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62) #13
  %63 = getelementptr inbounds %"class.net::der::BitString", %"class.net::der::BitString"* %16, i64 0, i32 1
  %64 = getelementptr inbounds %"class.net::der::BitString", %"class.net::der::BitString"* %16, i64 0, i32 0
  %65 = bitcast %"class.net::der::BitString"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %64) #13
  store i8 0, i8* %63, align 8
  %66 = call zeroext i1 @_ZN3net13ParseKeyUsageERKNS_3der5InputEPNS0_9BitStringE(%"class.net::der::Input"* dereferenceable(16) %52, %"class.net::der::BitString"* nonnull %16) #13
  br i1 %66, label %67, label %71

67:                                               ; preds = %61
  %68 = call zeroext i1 @_ZNK3net3der9BitString10AssertsBitEm(%"class.net::der::BitString"* nonnull %16, i64 0) #13
  %69 = xor i1 %68, true
  %70 = zext i1 %69 to i32
  br label %71

71:                                               ; preds = %67, %61
  %72 = phi i32 [ 1, %61 ], [ %70, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %62) #13
  br label %73

73:                                               ; preds = %71, %49
  %74 = phi i32 [ 0, %49 ], [ %72, %71 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %50) #13
  br label %75

75:                                               ; preds = %41, %73
  %76 = phi i32 [ %74, %73 ], [ 1, %41 ]
  %77 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %13, i64 0, i32 0
  %78 = bitcast %"class.std::__1::__tree_end_node"* %45 to %"class.std::__1::__tree_node"**
  %79 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %78, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIN3net3der5InputENS2_15ParsedExtensionEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* nonnull %77, %"class.std::__1::__tree_node"* %79) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #13
  %80 = icmp eq i32 %76, 0
  br i1 %80, label %81, label %87

81:                                               ; preds = %37, %75
  %82 = getelementptr inbounds %"struct.net::ParsedTbsCertificate", %"struct.net::ParsedTbsCertificate"* %10, i64 0, i32 7, i32 0
  %83 = load i8*, i8** %82, align 8
  %84 = getelementptr inbounds %"struct.net::ParsedTbsCertificate", %"struct.net::ParsedTbsCertificate"* %10, i64 0, i32 7, i32 1
  %85 = load i64, i64* %84, align 8
  %86 = call zeroext i1 @_ZN6crypto17SignatureVerifier10VerifyInitENS0_18SignatureAlgorithmEN4base4spanIKhLm18446744073709551615EEES5_(%"class.crypto::SignatureVerifier"* %0, i32 %1, i64 %2, i8* %3, i64 %85, i8* %83) #13
  br label %87

87:                                               ; preds = %36, %34, %75, %81
  %88 = phi i1 [ %86, %81 ], [ false, %75 ], [ false, %34 ], [ false, %36 ]
  call void @_ZN3net20ParsedTbsCertificateD1Ev(%"struct.net::ParsedTbsCertificate"* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 192, i8* nonnull %30) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #13
  ret i1 %88
}

declare void @_ZN3net20ParsedTbsCertificateC1Ev(%"struct.net::ParsedTbsCertificate"*) unnamed_addr #2

declare zeroext i1 @_ZN3net19ParseTbsCertificateERKNS_3der5InputERKNS_23ParseCertificateOptionsEPNS_20ParsedTbsCertificateEPNS_10CertErrorsE(%"class.net::der::Input"* dereferenceable(16), %"struct.net::ParseCertificateOptions"* dereferenceable(1), %"struct.net::ParsedTbsCertificate"*, %"class.net::CertErrors"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3net15ParseExtensionsERKNS_3der5InputEPNSt3__13mapIS1_NS_15ParsedExtensionENS4_4lessIS1_EENS4_9allocatorINS4_4pairIS2_S6_EEEEEE(%"class.net::der::Input"* dereferenceable(16), %"class.std::__1::map"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3net16ConsumeExtensionERKNS_3der5InputEPNSt3__13mapIS1_NS_15ParsedExtensionENS4_4lessIS1_EENS4_9allocatorINS4_4pairIS2_S6_EEEEEEPS6_(%"class.net::der::Input"* dereferenceable(16), %"class.std::__1::map"*, %"struct.net::ParsedExtension"*) local_unnamed_addr #2

declare { i8*, i64 } @_ZN3net11KeyUsageOidEv() local_unnamed_addr #2

declare zeroext i1 @_ZN3net13ParseKeyUsageERKNS_3der5InputEPNS0_9BitStringE(%"class.net::der::Input"* dereferenceable(16), %"class.net::der::BitString"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK3net3der9BitString10AssertsBitEm(%"class.net::der::BitString"*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN6crypto17SignatureVerifier10VerifyInitENS0_18SignatureAlgorithmEN4base4spanIKhLm18446744073709551615EEES5_(%"class.crypto::SignatureVerifier"*, i32, i64, i8*, i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net20ParsedTbsCertificateD1Ev(%"struct.net::ParsedTbsCertificate"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net9x509_util16HasSHA1SignatureEPK16crypto_buffer_st(%struct.crypto_buffer_st*) local_unnamed_addr #0 {
  %2 = alloca %"class.net::der::Input", align 8
  %3 = alloca %"class.net::der::Input", align 8
  %4 = alloca %"class.net::der::BitString", align 8
  %5 = alloca %"class.net::der::Input", align 8
  %6 = bitcast %"class.net::der::Input"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  %7 = bitcast %"class.net::der::Input"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %2) #13
  %8 = bitcast %"class.net::der::Input"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #13
  %9 = bitcast %"class.net::der::Input"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %3) #13
  %10 = bitcast %"class.net::der::BitString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #13
  %11 = getelementptr inbounds %"class.net::der::BitString", %"class.net::der::BitString"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.net::der::BitString", %"class.net::der::BitString"* %4, i64 0, i32 0
  %13 = bitcast %"class.net::der::BitString"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %12) #13
  store i8 0, i8* %11, align 8
  %14 = bitcast %"class.net::der::Input"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #13
  %15 = call i8* @CRYPTO_BUFFER_data(%struct.crypto_buffer_st* %0) #13
  %16 = call i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st* %0) #13
  call void @_ZN3net3der5InputC1EPKhm(%"class.net::der::Input"* nonnull %5, i8* %15, i64 %16) #13
  %17 = call zeroext i1 @_ZN3net16ParseCertificateERKNS_3der5InputEPS1_S4_PNS0_9BitStringEPNS_10CertErrorsE(%"class.net::der::Input"* nonnull dereferenceable(16) %5, %"class.net::der::Input"* nonnull %2, %"class.net::der::Input"* nonnull %3, %"class.net::der::BitString"* nonnull %4, %"class.net::CertErrors"* null) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #13
  br i1 %17, label %18, label %26

18:                                               ; preds = %1
  %19 = call %"class.net::SignatureAlgorithm"* @_ZN3net18SignatureAlgorithm6CreateERKNS_3der5InputEPNS_10CertErrorsE(%"class.net::der::Input"* nonnull dereferenceable(16) %3, %"class.net::CertErrors"* null) #13
  %20 = icmp eq %"class.net::SignatureAlgorithm"* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.net::SignatureAlgorithm", %"class.net::SignatureAlgorithm"* %19, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 3
  call void @_ZN3net18SignatureAlgorithmD1Ev(%"class.net::SignatureAlgorithm"* nonnull %19) #13
  %25 = bitcast %"class.net::SignatureAlgorithm"* %19 to i8*
  call void @_ZdlPv(i8* %25) #14
  br label %26

26:                                               ; preds = %18, %21, %1
  %27 = phi i1 [ false, %1 ], [ %24, %21 ], [ false, %18 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  ret i1 %27
}

declare void @_ZN3net3der5InputC1EPKhm(%"class.net::der::Input"*, i8*, i64) unnamed_addr #2

declare void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"*, %"class.base::Location"* dereferenceable(32)) unnamed_addr #2

declare void @_ZN4base11SplitStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* sret, i8*, i64, i8*, i64, i32, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #2

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #5

declare void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* sret, i8*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #13
  %7 = load i8, i8* %6, align 8, !range !12
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #13
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #13
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #13
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #13
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #13
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #13
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #14
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #13
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #13
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #14
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #13
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #13
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #5

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

declare void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* dereferenceable(32)) local_unnamed_addr #2

declare i64 @sk_num(%struct.stack_st*) local_unnamed_addr #2

declare i32 @CRYPTO_BUFFER_up_ref(%struct.crypto_buffer_st*) local_unnamed_addr #2

declare i8* @sk_value(%struct.stack_st*, i64) local_unnamed_addr #2

declare void @CRYPTO_BUFFER_free(%struct.crypto_buffer_st*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net18SignatureAlgorithmD1Ev(%"class.net::SignatureAlgorithm"*) unnamed_addr #5

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6crypto13RSAPrivateKeyD1Ev(%"class.crypto::RSAPrivateKey"*) unnamed_addr #5

declare void @CBB_zero(%struct.cbb_st*) local_unnamed_addr #2

declare void @CBB_cleanup(%struct.cbb_st*) local_unnamed_addr #2

declare void @OPENSSL_free(i8*) local_unnamed_addr #2

declare void @EVP_MD_CTX_init(%struct.env_md_ctx_st*) local_unnamed_addr #2

declare i32 @EVP_MD_CTX_cleanup(%struct.env_md_ctx_st*) local_unnamed_addr #2

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #9

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #2

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #2

declare %struct.crypto_buffer_pool_st* @CRYPTO_BUFFER_POOL_new() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrI16crypto_buffer_stN4bssl8internal7DeleterIS2_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.10"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.10"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.10"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #15
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %struct.crypto_buffer_st* null, %struct.crypto_buffer_st** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %struct.crypto_buffer_st** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %struct.crypto_buffer_st* null, %struct.crypto_buffer_st** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !13

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %struct.crypto_buffer_st* null, %struct.crypto_buffer_st** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %struct.crypto_buffer_st* null, %struct.crypto_buffer_st** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %struct.crypto_buffer_st* null, %struct.crypto_buffer_st** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %struct.crypto_buffer_st* null, %struct.crypto_buffer_st** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %struct.crypto_buffer_st* null, %struct.crypto_buffer_st** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %struct.crypto_buffer_st* null, %struct.crypto_buffer_st** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %struct.crypto_buffer_st* null, %struct.crypto_buffer_st** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %struct.crypto_buffer_st* null, %struct.crypto_buffer_st** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr"*
  %138 = icmp eq %"class.std::__1::unique_ptr"* %133, %137
  br i1 %138, label %148, label %139

139:                                              ; preds = %132, %146
  %140 = phi %"class.std::__1::unique_ptr"* [ %141, %146 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %142, align 8
  store %struct.crypto_buffer_st* null, %struct.crypto_buffer_st** %142, align 8
  %144 = icmp eq %struct.crypto_buffer_st* %143, null
  br i1 %144, label %146, label %145

145:                                              ; preds = %139
  tail call void @CRYPTO_BUFFER_free(%struct.crypto_buffer_st* nonnull %143) #13
  br label %146

146:                                              ; preds = %145, %139
  %147 = icmp eq %"class.std::__1::unique_ptr"* %141, %137
  br i1 %147, label %148, label %139

148:                                              ; preds = %146, %132
  %149 = icmp eq i64 %135, 0
  br i1 %149, label %152, label %150

150:                                              ; preds = %148
  %151 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %151) #14
  br label %152

152:                                              ; preds = %148, %150
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIN3net3der5InputENS2_15ParsedExtensionEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3net3der5InputENS2_15ParsedExtensionEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #13
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3net3der5InputENS2_15ParsedExtensionEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #13
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #12

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind readonly }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !8}
!12 = !{i8 0, i8 2}
!13 = distinct !{!13, !10}
