; ModuleID = 'gen/services/viz/public/mojom/compositing/surface_range.mojom-blink.cc'
source_filename = "gen/services/viz/public/mojom/compositing/surface_range.mojom-blink.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.viz::mojom::blink::SurfaceRange" = type { %"class.absl::optional", %"class.viz::SurfaceId" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.viz::SurfaceId" }
%"class.viz::SurfaceId" = type { %"class.viz::FrameSinkId", %"class.viz::LocalSurfaceId" }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.perfetto::TracedDictionary" = type <{ %"class.protozero::Message"*, i32, %"class.perfetto::internal::CheckedScope", [3 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.3 }
%union.anon.3 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.mojo::internal::ValidationContext" = type <{ %"class.mojo::Message"*, i8*, i32, [4 x i8], i64, i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector", %"class.std::__1::vector.13", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::ScopedHandleBase.7"*, %"class.mojo::ScopedHandleBase.7"*, %"class.std::__1::__compressed_pair.8" }
%"class.mojo::ScopedHandleBase.7" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.mojo::ScopedHandleBase.7"* }
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.15" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.20 }
%class.scoped_refptr.20 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.24, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.26", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.22 }
%class.scoped_refptr.22 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.23", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.23" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.24 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.25" }>
%"class.base::RefCountedThreadSafe.25" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.26" = type { %"struct.std::__1::__atomic_base.27" }
%"struct.std::__1::__atomic_base.27" = type { %"struct.std::__1::__atomic_base.28" }
%"struct.std::__1::__atomic_base.28" = type { %"struct.std::__1::__cxx_atomic_impl.29" }
%"struct.std::__1::__cxx_atomic_impl.29" = type { %"struct.std::__1::__cxx_atomic_base_impl.30" }
%"struct.std::__1::__cxx_atomic_base_impl.30" = type { i32 }
%"class.viz::mojom::internal::SurfaceRange_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer" }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"struct.mojo::internal::Pointer" = type { i64 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.viz::mojom::blink::SurfaceRange"* }
%"class.mojo_base::mojom::internal::UnguessableToken_Data" = type { %"struct.mojo::internal::StructHeader", i64, i64 }

@.str = private unnamed_addr constant [6 x i8] c"start\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"<value>\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"end\00", align 1

@_ZN3viz5mojom5blink12SurfaceRangeC1Ev = hidden unnamed_addr alias void (%"class.viz::mojom::blink::SurfaceRange"*), void (%"class.viz::mojom::blink::SurfaceRange"*)* @_ZN3viz5mojom5blink12SurfaceRangeC2Ev
@_ZN3viz5mojom5blink12SurfaceRangeC1ERKN4absl8optionalINS_9SurfaceIdEEERKS5_ = hidden unnamed_addr alias void (%"class.viz::mojom::blink::SurfaceRange"*, %"class.absl::optional"*, %"class.viz::SurfaceId"*), void (%"class.viz::mojom::blink::SurfaceRange"*, %"class.absl::optional"*, %"class.viz::SurfaceId"*)* @_ZN3viz5mojom5blink12SurfaceRangeC2ERKN4absl8optionalINS_9SurfaceIdEEERKS5_
@_ZN3viz5mojom5blink12SurfaceRangeD1Ev = hidden unnamed_addr alias void (%"class.viz::mojom::blink::SurfaceRange"*), void (%"class.viz::mojom::blink::SurfaceRange"*)* @_ZN3viz5mojom5blink12SurfaceRangeD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom5blink12SurfaceRangeC2Ev(%"class.viz::mojom::blink::SurfaceRange"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::mojom::blink::SurfaceRange", %"class.viz::mojom::blink::SurfaceRange"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"class.viz::mojom::blink::SurfaceRange", %"class.viz::mojom::blink::SurfaceRange"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %4 = bitcast %union.anon* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 64, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom5blink12SurfaceRangeC2ERKN4absl8optionalINS_9SurfaceIdEEERKS5_(%"class.viz::mojom::blink::SurfaceRange"* nocapture, %"class.absl::optional"* nocapture readonly dereferenceable(40), %"class.viz::SurfaceId"* nocapture readonly dereferenceable(32)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.viz::mojom::blink::SurfaceRange", %"class.viz::mojom::blink::SurfaceRange"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 40, i1 false) #6
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %25, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.viz::mojom::blink::SurfaceRange", %"class.viz::mojom::blink::SurfaceRange"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  store i32 %11, i32* %9, align 4
  %12 = getelementptr inbounds %"class.viz::mojom::blink::SurfaceRange", %"class.viz::mojom::blink::SurfaceRange"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 4
  store i32 %14, i32* %12, align 4
  %15 = getelementptr inbounds %"class.viz::mojom::blink::SurfaceRange", %"class.viz::mojom::blink::SurfaceRange"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %16 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %17 = load i32, i32* %16, align 8
  store i32 %17, i32* %15, align 8
  %18 = getelementptr inbounds %"class.viz::mojom::blink::SurfaceRange", %"class.viz::mojom::blink::SurfaceRange"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 1
  %19 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 1
  %20 = load i32, i32* %19, align 4
  store i32 %20, i32* %18, align 4
  %21 = getelementptr inbounds %"class.viz::mojom::blink::SurfaceRange", %"class.viz::mojom::blink::SurfaceRange"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 2
  %22 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 2
  %23 = bitcast %"class.base::UnguessableToken"* %21 to i8*
  %24 = bitcast %"class.base::UnguessableToken"* %22 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false) #6
  store i8 1, i8* %4, align 8
  br label %25

25:                                               ; preds = %3, %8
  %26 = getelementptr inbounds %"class.viz::mojom::blink::SurfaceRange", %"class.viz::mojom::blink::SurfaceRange"* %0, i64 0, i32 1, i32 0, i32 0
  %27 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %2, i64 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  store i32 %28, i32* %26, align 4
  %29 = getelementptr inbounds %"class.viz::mojom::blink::SurfaceRange", %"class.viz::mojom::blink::SurfaceRange"* %0, i64 0, i32 1, i32 0, i32 1
  %30 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %2, i64 0, i32 0, i32 1
  %31 = load i32, i32* %30, align 4
  store i32 %31, i32* %29, align 4
  %32 = getelementptr inbounds %"class.viz::mojom::blink::SurfaceRange", %"class.viz::mojom::blink::SurfaceRange"* %0, i64 0, i32 1, i32 1, i32 0
  %33 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %2, i64 0, i32 1, i32 0
  %34 = load i32, i32* %33, align 8
  store i32 %34, i32* %32, align 8
  %35 = getelementptr inbounds %"class.viz::mojom::blink::SurfaceRange", %"class.viz::mojom::blink::SurfaceRange"* %0, i64 0, i32 1, i32 1, i32 1
  %36 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %2, i64 0, i32 1, i32 1
  %37 = load i32, i32* %36, align 4
  store i32 %37, i32* %35, align 4
  %38 = getelementptr inbounds %"class.viz::mojom::blink::SurfaceRange", %"class.viz::mojom::blink::SurfaceRange"* %0, i64 0, i32 1, i32 1, i32 2
  %39 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %2, i64 0, i32 1, i32 2
  %40 = bitcast %"class.base::UnguessableToken"* %38 to i8*
  %41 = bitcast %"class.base::UnguessableToken"* %39 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 16, i1 false) #6
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3viz5mojom5blink12SurfaceRangeD2Ev(%"class.viz::mojom::blink::SurfaceRange"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3viz5mojom5blink12SurfaceRange14WriteIntoTraceEN8perfetto11TracedValueE(%"class.viz::mojom::blink::SurfaceRange"* nocapture readnone, %"class.perfetto::TracedValue"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.perfetto::TracedDictionary", align 8
  %4 = alloca %"class.perfetto::TracedValue", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.perfetto::TracedValue", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = bitcast %"class.perfetto::TracedDictionary"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #6
  %9 = bitcast %"class.perfetto::TracedDictionary"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  call void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* nonnull sret %3, %"class.perfetto::TracedValue"* %1) #6
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %4, %"class.perfetto::TracedDictionary"* nonnull %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0)) #6
  %10 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #6
  %11 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  store i8 7, i8* %12, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7, i1 false) #6
  %13 = getelementptr inbounds i8, i8* %10, i64 7
  store i8 0, i8* %13, align 1
  call void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"* nonnull %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #6
  %14 = load i8, i8* %12, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %18) #7
  br label %19

19:                                               ; preds = %2, %16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #6
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %6, %"class.perfetto::TracedDictionary"* nonnull %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0)) #6
  %20 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #6
  %21 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  store i8 7, i8* %22, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7, i1 false) #6
  %23 = getelementptr inbounds i8, i8* %20, i64 7
  store i8 0, i8* %23, align 1
  call void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"* nonnull %6, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #6
  %24 = load i8, i8* %22, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @_ZdlPv(i8* %28) #7
  br label %29

29:                                               ; preds = %19, %26
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* sret, %"class.perfetto::TracedValue"*) local_unnamed_addr #3

declare void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::TracedDictionary"*, i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3viz5mojom5blink12SurfaceRange8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZN3viz5mojom8internal17SurfaceRange_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8* %0, %"class.mojo::internal::ValidationContext"* %1) #6
  ret i1 %3
}

declare zeroext i1 @_ZN3viz5mojom8internal17SurfaceRange_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN3viz5mojom20SurfaceRangeDataViewENS_9StructPtrINS2_5blink12SurfaceRangeEEEE4ReadES3_PS7_(%"class.viz::mojom::internal::SurfaceRange_Data"*, %"class.mojo::Message"*, %"class.mojo::StructPtr"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 72) #7, !noalias !3
  store i8 0, i8* %4, align 8, !noalias !3
  %5 = getelementptr inbounds i8, i8* %4, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 64, i1 false) #6, !noalias !3
  %6 = ptrtoint i8* %4 to i64
  %7 = getelementptr inbounds %"class.viz::mojom::internal::SurfaceRange_Data", %"class.viz::mojom::internal::SurfaceRange_Data"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %7, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  %11 = bitcast %"struct.mojo::internal::Pointer"* %7 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 %9
  br i1 %10, label %13, label %14

13:                                               ; preds = %3
  store i8 0, i8* %4, align 8
  br label %79

14:                                               ; preds = %3
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %5, i8 0, i64 32, i1 false) #6
  store i8 1, i8* %4, align 8
  %15 = getelementptr inbounds i8, i8* %12, i64 8
  %16 = bitcast i8* %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, 0
  %19 = getelementptr inbounds i8, i8* %15, i64 %17
  br i1 %18, label %34, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds i8, i8* %19, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 1
  %24 = getelementptr inbounds i8, i8* %19, i64 12
  %25 = bitcast i8* %24 to i32*
  %26 = load i32, i32* %25, align 1
  %27 = bitcast i8* %5 to i64*
  %28 = zext i32 %26 to i64
  %29 = shl nuw i64 %28, 32
  %30 = zext i32 %23 to i64
  %31 = or i64 %29, %30
  store i64 %31, i64* %27, align 4
  %32 = or i32 %26, %23
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %153, label %34

34:                                               ; preds = %20, %14
  %35 = getelementptr inbounds i8, i8* %12, i64 16
  %36 = bitcast i8* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, 0
  %39 = getelementptr inbounds i8, i8* %35, i64 %37
  br i1 %38, label %79, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds i8, i8* %39, i64 8
  %42 = bitcast i8* %41 to i32*
  %43 = load i32, i32* %42, align 1
  %44 = getelementptr inbounds i8, i8* %4, i64 16
  %45 = bitcast i8* %44 to i32*
  store i32 %43, i32* %45, align 8
  %46 = getelementptr inbounds i8, i8* %39, i64 12
  %47 = bitcast i8* %46 to i32*
  %48 = load i32, i32* %47, align 1
  %49 = getelementptr inbounds i8, i8* %4, i64 20
  %50 = bitcast i8* %49 to i32*
  store i32 %48, i32* %50, align 4
  %51 = getelementptr inbounds i8, i8* %39, i64 16
  %52 = bitcast i8* %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %63, label %55

55:                                               ; preds = %40
  %56 = getelementptr inbounds i8, i8* %51, i64 %53
  %57 = getelementptr inbounds i8, i8* %4, i64 24
  %58 = bitcast i8* %57 to %"class.base::UnguessableToken"*
  %59 = bitcast i8* %56 to %"class.mojo_base::mojom::internal::UnguessableToken_Data"*
  %60 = tail call zeroext i1 @_ZN4mojo12StructTraitsIN9mojo_base5mojom24UnguessableTokenDataViewEN4base16UnguessableTokenEE4ReadES3_PS5_(%"class.mojo_base::mojom::internal::UnguessableToken_Data"* nonnull %59, %"class.base::UnguessableToken"* %58) #6
  br i1 %60, label %61, label %153

61:                                               ; preds = %55
  %62 = load i32, i32* %45, align 8
  br label %63

63:                                               ; preds = %61, %40
  %64 = phi i32 [ %62, %61 ], [ %43, %40 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %153, label %66

66:                                               ; preds = %63
  %67 = load i32, i32* %50, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %153, label %69

69:                                               ; preds = %66
  %70 = getelementptr inbounds i8, i8* %4, i64 24
  %71 = bitcast i8* %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %79

74:                                               ; preds = %69
  %75 = getelementptr inbounds i8, i8* %4, i64 32
  %76 = bitcast i8* %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %153, label %79

79:                                               ; preds = %74, %69, %34, %13
  %80 = getelementptr inbounds i8, i8* %4, i64 40
  %81 = getelementptr inbounds %"class.viz::mojom::internal::SurfaceRange_Data", %"class.viz::mojom::internal::SurfaceRange_Data"* %0, i64 0, i32 2
  %82 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %81, i64 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = icmp eq i64 %83, 0
  %85 = bitcast %"struct.mojo::internal::Pointer"* %81 to i8*
  %86 = getelementptr inbounds i8, i8* %85, i64 %83
  br i1 %84, label %152, label %87

87:                                               ; preds = %79
  %88 = getelementptr inbounds i8, i8* %86, i64 8
  %89 = bitcast i8* %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = icmp eq i64 %90, 0
  %92 = getelementptr inbounds i8, i8* %88, i64 %90
  br i1 %91, label %107, label %93

93:                                               ; preds = %87
  %94 = getelementptr inbounds i8, i8* %92, i64 8
  %95 = bitcast i8* %94 to i32*
  %96 = load i32, i32* %95, align 1
  %97 = getelementptr inbounds i8, i8* %92, i64 12
  %98 = bitcast i8* %97 to i32*
  %99 = load i32, i32* %98, align 1
  %100 = bitcast i8* %80 to i64*
  %101 = zext i32 %99 to i64
  %102 = shl nuw i64 %101, 32
  %103 = zext i32 %96 to i64
  %104 = or i64 %102, %103
  store i64 %104, i64* %100, align 4
  %105 = or i32 %99, %96
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %153, label %107

107:                                              ; preds = %93, %87
  %108 = getelementptr inbounds i8, i8* %86, i64 16
  %109 = bitcast i8* %108 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = icmp eq i64 %110, 0
  %112 = getelementptr inbounds i8, i8* %108, i64 %110
  br i1 %111, label %152, label %113

113:                                              ; preds = %107
  %114 = getelementptr inbounds i8, i8* %112, i64 8
  %115 = bitcast i8* %114 to i32*
  %116 = load i32, i32* %115, align 1
  %117 = getelementptr inbounds i8, i8* %4, i64 48
  %118 = bitcast i8* %117 to i32*
  store i32 %116, i32* %118, align 8
  %119 = getelementptr inbounds i8, i8* %112, i64 12
  %120 = bitcast i8* %119 to i32*
  %121 = load i32, i32* %120, align 1
  %122 = getelementptr inbounds i8, i8* %4, i64 52
  %123 = bitcast i8* %122 to i32*
  store i32 %121, i32* %123, align 4
  %124 = getelementptr inbounds i8, i8* %112, i64 16
  %125 = bitcast i8* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %136, label %128

128:                                              ; preds = %113
  %129 = getelementptr inbounds i8, i8* %124, i64 %126
  %130 = getelementptr inbounds i8, i8* %4, i64 56
  %131 = bitcast i8* %130 to %"class.base::UnguessableToken"*
  %132 = bitcast i8* %129 to %"class.mojo_base::mojom::internal::UnguessableToken_Data"*
  %133 = tail call zeroext i1 @_ZN4mojo12StructTraitsIN9mojo_base5mojom24UnguessableTokenDataViewEN4base16UnguessableTokenEE4ReadES3_PS5_(%"class.mojo_base::mojom::internal::UnguessableToken_Data"* nonnull %132, %"class.base::UnguessableToken"* %131) #6
  br i1 %133, label %134, label %153

134:                                              ; preds = %128
  %135 = load i32, i32* %118, align 8
  br label %136

136:                                              ; preds = %134, %113
  %137 = phi i32 [ %135, %134 ], [ %116, %113 ]
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %153, label %139

139:                                              ; preds = %136
  %140 = load i32, i32* %123, align 4
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %153, label %142

142:                                              ; preds = %139
  %143 = getelementptr inbounds i8, i8* %4, i64 56
  %144 = bitcast i8* %143 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %147, label %152

147:                                              ; preds = %142
  %148 = getelementptr inbounds i8, i8* %4, i64 64
  %149 = bitcast i8* %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %153, label %152

152:                                              ; preds = %147, %142, %107, %79
  br label %153

153:                                              ; preds = %74, %147, %136, %139, %128, %93, %63, %66, %55, %20, %152
  %154 = phi i8 [ 1, %152 ], [ 0, %147 ], [ 0, %74 ], [ 0, %20 ], [ 0, %55 ], [ 0, %66 ], [ 0, %63 ], [ 0, %93 ], [ 0, %128 ], [ 0, %139 ], [ 0, %136 ]
  %155 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %156 = load %"class.viz::mojom::blink::SurfaceRange"*, %"class.viz::mojom::blink::SurfaceRange"** %155, align 8
  store %"class.viz::mojom::blink::SurfaceRange"* null, %"class.viz::mojom::blink::SurfaceRange"** %155, align 8
  %157 = icmp eq %"class.viz::mojom::blink::SurfaceRange"* %156, null
  br i1 %157, label %158, label %161

158:                                              ; preds = %153
  %159 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  store i64 %6, i64* %159, align 8
  %160 = icmp ne i8 %154, 0
  br label %169

161:                                              ; preds = %153
  %162 = getelementptr inbounds %"class.viz::mojom::blink::SurfaceRange", %"class.viz::mojom::blink::SurfaceRange"* %156, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %162) #7
  %163 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  %164 = load %"class.viz::mojom::blink::SurfaceRange"*, %"class.viz::mojom::blink::SurfaceRange"** %155, align 8
  store i64 %6, i64* %163, align 8
  %165 = icmp ne i8 %154, 0
  %166 = icmp eq %"class.viz::mojom::blink::SurfaceRange"* %164, null
  br i1 %166, label %169, label %167

167:                                              ; preds = %161
  %168 = getelementptr inbounds %"class.viz::mojom::blink::SurfaceRange", %"class.viz::mojom::blink::SurfaceRange"* %164, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %168) #7
  br label %169

169:                                              ; preds = %158, %161, %167
  %170 = phi i1 [ %160, %158 ], [ %165, %161 ], [ %165, %167 ]
  ret i1 %170
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare zeroext i1 @_ZN4mojo12StructTraitsIN9mojo_base5mojom24UnguessableTokenDataViewEN4base16UnguessableTokenEE4ReadES3_PS5_(%"class.mojo_base::mojom::internal::UnguessableToken_Data"*, %"class.base::UnguessableToken"*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN3viz5mojom5blink12SurfaceRange3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!5 = distinct !{!5, !"_ZN3viz5mojom5blink12SurfaceRange3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
