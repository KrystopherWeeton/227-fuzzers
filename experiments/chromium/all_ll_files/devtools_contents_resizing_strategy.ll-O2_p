; ModuleID = '../../chrome/browser/devtools/devtools_contents_resizing_strategy.cc'
source_filename = "../../chrome/browser/devtools/devtools_contents_resizing_strategy.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.DevToolsContentsResizingStrategy = type <{ %"class.gfx::Rect", i8, [3 x i8] }>
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }

@_ZN32DevToolsContentsResizingStrategyC1Ev = hidden unnamed_addr alias void (%class.DevToolsContentsResizingStrategy*), void (%class.DevToolsContentsResizingStrategy*)* @_ZN32DevToolsContentsResizingStrategyC2Ev
@_ZN32DevToolsContentsResizingStrategyC1ERKN3gfx4RectE = hidden unnamed_addr alias void (%class.DevToolsContentsResizingStrategy*, %"class.gfx::Rect"*), void (%class.DevToolsContentsResizingStrategy*, %"class.gfx::Rect"*)* @_ZN32DevToolsContentsResizingStrategyC2ERKN3gfx4RectE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN32DevToolsContentsResizingStrategyC2Ev(%class.DevToolsContentsResizingStrategy* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %class.DevToolsContentsResizingStrategy* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 17, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN32DevToolsContentsResizingStrategyC2ERKN3gfx4RectE(%class.DevToolsContentsResizingStrategy* nocapture, %"class.gfx::Rect"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = bitcast %class.DevToolsContentsResizingStrategy* %0 to i8*
  %4 = bitcast %"class.gfx::Rect"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 16, i1 false)
  %5 = getelementptr inbounds %class.DevToolsContentsResizingStrategy, %class.DevToolsContentsResizingStrategy* %0, i64 0, i32 1
  %6 = getelementptr inbounds %class.DevToolsContentsResizingStrategy, %class.DevToolsContentsResizingStrategy* %0, i64 0, i32 0, i32 1, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.DevToolsContentsResizingStrategy, %class.DevToolsContentsResizingStrategy* %0, i64 0, i32 0, i32 1, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %22

13:                                               ; preds = %2, %9
  %14 = getelementptr inbounds %class.DevToolsContentsResizingStrategy, %class.DevToolsContentsResizingStrategy* %0, i64 0, i32 0, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %22

17:                                               ; preds = %13
  %18 = getelementptr inbounds %class.DevToolsContentsResizingStrategy, %class.DevToolsContentsResizingStrategy* %0, i64 0, i32 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  %21 = zext i1 %20 to i8
  br label %22

22:                                               ; preds = %13, %17, %9
  %23 = phi i8 [ 0, %13 ], [ 0, %9 ], [ %21, %17 ]
  store i8 %23, i8* %5, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN32DevToolsContentsResizingStrategy8CopyFromERKS_(%class.DevToolsContentsResizingStrategy* nocapture, %class.DevToolsContentsResizingStrategy* nocapture readonly dereferenceable(20)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %class.DevToolsContentsResizingStrategy* %0 to i8*
  %4 = bitcast %class.DevToolsContentsResizingStrategy* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 16, i1 false)
  %5 = getelementptr inbounds %class.DevToolsContentsResizingStrategy, %class.DevToolsContentsResizingStrategy* %1, i64 0, i32 1
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = getelementptr inbounds %class.DevToolsContentsResizingStrategy, %class.DevToolsContentsResizingStrategy* %0, i64 0, i32 1
  store i8 %6, i8* %7, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN32DevToolsContentsResizingStrategy6EqualsERKS_(%class.DevToolsContentsResizingStrategy* nocapture readonly, %class.DevToolsContentsResizingStrategy* nocapture readonly dereferenceable(20)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.DevToolsContentsResizingStrategy, %class.DevToolsContentsResizingStrategy* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %class.DevToolsContentsResizingStrategy, %class.DevToolsContentsResizingStrategy* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %32

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.DevToolsContentsResizingStrategy, %class.DevToolsContentsResizingStrategy* %0, i64 0, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %class.DevToolsContentsResizingStrategy, %class.DevToolsContentsResizingStrategy* %1, i64 0, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %32

14:                                               ; preds = %8
  %15 = getelementptr inbounds %class.DevToolsContentsResizingStrategy, %class.DevToolsContentsResizingStrategy* %0, i64 0, i32 0, i32 1, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %class.DevToolsContentsResizingStrategy, %class.DevToolsContentsResizingStrategy* %1, i64 0, i32 0, i32 1, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %16, %18
  br i1 %19, label %20, label %32

20:                                               ; preds = %14
  %21 = getelementptr inbounds %class.DevToolsContentsResizingStrategy, %class.DevToolsContentsResizingStrategy* %0, i64 0, i32 0, i32 1, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %class.DevToolsContentsResizingStrategy, %class.DevToolsContentsResizingStrategy* %1, i64 0, i32 0, i32 1, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %22, %24
  br i1 %25, label %26, label %32

26:                                               ; preds = %20
  %27 = getelementptr inbounds %class.DevToolsContentsResizingStrategy, %class.DevToolsContentsResizingStrategy* %0, i64 0, i32 1
  %28 = load i8, i8* %27, align 4, !range !2
  %29 = getelementptr inbounds %class.DevToolsContentsResizingStrategy, %class.DevToolsContentsResizingStrategy* %1, i64 0, i32 1
  %30 = load i8, i8* %29, align 4, !range !2
  %31 = icmp eq i8 %28, %30
  br label %32

32:                                               ; preds = %2, %14, %8, %26, %20
  %33 = phi i1 [ false, %20 ], [ %31, %26 ], [ false, %8 ], [ false, %14 ], [ false, %2 ]
  ret i1 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z37ApplyDevToolsContentsResizingStrategyRK32DevToolsContentsResizingStrategyRKN3gfx4SizeEPNS2_4RectES7_(%class.DevToolsContentsResizingStrategy* nocapture readonly dereferenceable(20), %"class.gfx::Size"* nocapture readonly dereferenceable(8), %"class.gfx::Rect"* nocapture, %"class.gfx::Rect"* nocapture) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 0, i32 0
  store i32 0, i32* %9, align 4
  %10 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 0, i32 1
  store i32 0, i32* %10, align 4
  %11 = icmp sgt i32 %6, 0
  %12 = select i1 %11, i32 %6, i32 0
  %13 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1, i32 0
  store i32 %12, i32* %13, align 4
  %14 = icmp sgt i32 %8, 0
  %15 = select i1 %14, i32 %8, i32 0
  %16 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1, i32 1
  store i32 %15, i32* %16, align 4
  %17 = getelementptr inbounds %class.DevToolsContentsResizingStrategy, %class.DevToolsContentsResizingStrategy* %0, i64 0, i32 0, i32 1, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %4
  %21 = getelementptr inbounds %class.DevToolsContentsResizingStrategy, %class.DevToolsContentsResizingStrategy* %0, i64 0, i32 0, i32 1, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %39

24:                                               ; preds = %4, %20
  %25 = getelementptr inbounds %class.DevToolsContentsResizingStrategy, %class.DevToolsContentsResizingStrategy* %0, i64 0, i32 1
  %26 = load i8, i8* %25, align 4, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %class.DevToolsContentsResizingStrategy, %class.DevToolsContentsResizingStrategy* %0, i64 0, i32 0, i32 1, i32 1
  %30 = load i32, i32* %29, align 4
  br label %39

31:                                               ; preds = %24
  %32 = load i32, i32* %5, align 4
  %33 = load i32, i32* %7, align 4
  %34 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 0, i32 0
  store i32 0, i32* %34, align 4
  %35 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 0, i32 1
  store i32 0, i32* %35, align 4
  %36 = icmp sgt i32 %32, 0
  %37 = select i1 %36, i32 %32, i32 0
  %38 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 1, i32 0
  store i32 %37, i32* %38, align 4
  br label %76

39:                                               ; preds = %28, %20
  %40 = phi i32 [ %30, %28 ], [ %22, %20 ]
  %41 = getelementptr inbounds %class.DevToolsContentsResizingStrategy, %class.DevToolsContentsResizingStrategy* %0, i64 0, i32 0, i32 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = load i32, i32* %5, align 4
  %44 = icmp slt i32 %43, %42
  %45 = select i1 %44, i32 %43, i32 %42
  %46 = getelementptr inbounds %class.DevToolsContentsResizingStrategy, %class.DevToolsContentsResizingStrategy* %0, i64 0, i32 0, i32 0, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = load i32, i32* %7, align 4
  %49 = icmp slt i32 %48, %47
  %50 = select i1 %49, i32 %48, i32 %47
  %51 = sub nsw i32 %43, %45
  %52 = icmp slt i32 %51, %18
  %53 = select i1 %52, i32 %51, i32 %18
  %54 = sub nsw i32 %48, %50
  %55 = icmp slt i32 %54, %40
  %56 = select i1 %55, i32 %54, i32 %40
  %57 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 0, i32 0
  store i32 %45, i32* %57, align 4
  %58 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 0, i32 1
  store i32 %50, i32* %58, align 4
  %59 = icmp sgt i32 %45, 0
  %60 = icmp sgt i32 %53, 0
  %61 = and i1 %59, %60
  %62 = sub nuw nsw i32 2147483647, %45
  %63 = icmp ult i32 %62, %53
  %64 = and i1 %63, %61
  %65 = select i1 %64, i32 %62, i32 %53
  %66 = icmp sgt i32 %65, 0
  %67 = select i1 %66, i32 %65, i32 0
  %68 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 1, i32 0
  store i32 %67, i32* %68, align 4
  %69 = icmp sgt i32 %50, 0
  %70 = icmp sgt i32 %56, 0
  %71 = and i1 %69, %70
  %72 = sub nuw nsw i32 2147483647, %50
  %73 = icmp ult i32 %72, %56
  %74 = and i1 %73, %71
  %75 = select i1 %74, i32 %72, i32 %56
  br label %76

76:                                               ; preds = %39, %31
  %77 = phi i32 [ %75, %39 ], [ %33, %31 ]
  %78 = icmp sgt i32 %77, 0
  %79 = select i1 %78, i32 %77, i32 0
  %80 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 1, i32 1
  store i32 %79, i32* %80, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
