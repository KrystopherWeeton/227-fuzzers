; ModuleID = '../../third_party/blink/renderer/core/animation/css_length_interpolation_type.cc'
source_filename = "../../third_party/blink/renderer/core/animation/css_length_interpolation_type.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.23", i32, [4 x i8], %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.155", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.171", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.183", %"class.std::__1::unique_ptr.189", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.196", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.52", %"class.std::__1::unique_ptr.63", %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.98", %"class.std::__1::unique_ptr.105", %"class.std::__1::unique_ptr.112", %"class.std::__1::unique_ptr.135", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.55" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.55" = type { %"struct.std::__1::__atomic_base.56" }
%"struct.std::__1::__atomic_base.56" = type { %"struct.std::__1::__atomic_base.57" }
%"struct.std::__1::__atomic_base.57" = type { %"struct.std::__1::__cxx_atomic_impl.58" }
%"struct.std::__1::__cxx_atomic_impl.58" = type { %"struct.std::__1::__cxx_atomic_base_impl.59" }
%"struct.std::__1::__cxx_atomic_base_impl.59" = type { i64 }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.blink::Worklist.66"* }
%"class.blink::Worklist.66" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.55" }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.blink::Worklist.73"* }
%"class.blink::Worklist.73" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.55" }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.blink::Worklist.80"* }
%"class.blink::Worklist.80" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.55" }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.blink::Worklist.87"* }
%"class.blink::Worklist.87" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.55" }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.blink::Worklist.94"* }
%"class.blink::Worklist.94" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.55" }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.blink::Worklist.101"* }
%"class.blink::Worklist.101" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.55" }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.blink::Worklist.108"* }
%"class.blink::Worklist.108" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.55" }
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.115", %"class.std::__1::__compressed_pair.122", %"class.std::__1::__compressed_pair.127", %"class.std::__1::__compressed_pair.129", [4 x i8] }>
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117", %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { i64 }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { float }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.138", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.147" }
%"class.WTF::Vector.147" = type { %"class.WTF::VectorBuffer.148" }
%"class.WTF::VectorBuffer.148" = type { %"class.WTF::VectorBufferBase.149" }
%"class.WTF::VectorBufferBase.149" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.163" }
%"class.WTF::VectorBuffer.163" = type { %"class.WTF::VectorBufferBase.164" }
%"class.WTF::VectorBufferBase.164" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.177" }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.66"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.73"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.80"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.87"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.94"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.200" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.195 }
%class.scoped_refptr.195 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.196" = type { %"struct.std::__1::__atomic_base.197" }
%"struct.std::__1::__atomic_base.197" = type { %"struct.std::__1::__cxx_atomic_impl.198" }
%"struct.std::__1::__cxx_atomic_impl.198" = type { %"struct.std::__1::__cxx_atomic_base_impl.199" }
%"struct.std::__1::__cxx_atomic_base_impl.199" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::CSSLengthInterpolationType" = type <{ %"class.blink::CSSInterpolationType", i32, [4 x i8] }>
%"class.blink::CSSInterpolationType" = type { %"class.blink::InterpolationType", %"class.blink::WeakPersistent" }
%"class.blink::InterpolationType" = type { i32 (...)**, %"class.blink::PropertyHandle" }
%"class.blink::PropertyHandle" = type { i32, %union.anon, %"class.WTF::AtomicString" }
%union.anon = type { %"class.blink::CSSProperty"* }
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::PropertyRegistration"*, %"class.blink::PersistentNodePtr" }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PropertyRegistration" = type <{ %"class.blink::CSSSyntaxDefinition", i8, [7 x i8], %"class.blink::Member", %class.scoped_refptr.4, %"class.WTF::Vector.18", i8, [7 x i8] }>
%"class.blink::CSSSyntaxDefinition" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::CSSSyntaxComponent"*, i32, i32 }
%"class.blink::CSSSyntaxComponent" = type <{ i32, [4 x i8], %"class.WTF::String", i32, [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%class.scoped_refptr.4 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.5", %"class.WTF::Vector.7", %"class.WTF::Vector.12", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.5" = type { %"class.base::RefCounted.6" }
%"class.base::RefCounted.6" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector.7" = type { %"class.WTF::VectorBuffer.8" }
%"class.WTF::VectorBuffer.8" = type { %"class.WTF::VectorBufferBase.9" }
%"class.WTF::VectorBufferBase.9" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.12" = type { %"class.WTF::VectorBuffer.13" }
%"class.WTF::VectorBuffer.13" = type { %"class.WTF::VectorBufferBase.14" }
%"class.WTF::VectorBufferBase.14" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.15 }
%union.anon.15 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.WTF::Vector.18" = type { %"class.WTF::VectorBuffer.19" }
%"class.WTF::VectorBuffer.19" = type { %"class.WTF::VectorBufferBase.20" }
%"class.WTF::VectorBufferBase.20" = type { %"class.std::__1::unique_ptr"*, i32, i32 }
%"class.std::__1::unique_ptr" = type opaque
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.761", %"class.std::__1::unique_ptr.763" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.282", %"class.blink::DataRef.482", %"class.blink::DataRef.486", %"class.blink::DataRef.681", %"class.blink::DataRef.744", %"class.blink::DataRef.748", %"class.blink::DataRef.752", %"class.blink::DataRef.756", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.205 }
%class.scoped_refptr.205 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.206", %"class.blink::DataRef.208", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.206" = type { %"class.base::RefCounted.207" }
%"class.base::RefCounted.207" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.208" = type { %class.scoped_refptr.209 }
%class.scoped_refptr.209 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.210", %"class.blink::Font" }
%"class.WTF::RefCounted.210" = type { %"class.base::RefCounted.211" }
%"class.base::RefCounted.211" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.245 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.213, %class.scoped_refptr.221, %class.scoped_refptr.231, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.244 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.212 }
%class.scoped_refptr.212 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1140", [4 x i8] }>
%"class.WTF::RefCounted.1140" = type { %"class.base::RefCounted.1141" }
%"class.base::RefCounted.1141" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.213 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.219", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.214" }
%"class.WTF::Vector.214" = type { %"class.WTF::VectorBuffer.215" }
%"class.WTF::VectorBuffer.215" = type { %"class.WTF::VectorBufferBase.216" }
%"class.WTF::VectorBufferBase.216" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.219" = type { %"class.base::RefCounted.220" }
%"class.base::RefCounted.220" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.221 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.222", %"class.WTF::RefCounted.229", [4 x i8] }>
%"class.blink::FontSettings.222" = type { %"class.WTF::Vector.223" }
%"class.WTF::Vector.223" = type { %"class.WTF::VectorBuffer.224" }
%"class.WTF::VectorBuffer.224" = type { %"class.WTF::VectorBufferBase.225" }
%"class.WTF::VectorBufferBase.225" = type { %"class.blink::FontTagValuePair.226"*, i32, i32 }
%"class.blink::FontTagValuePair.226" = type { i32, float }
%"class.WTF::RefCounted.229" = type { %"class.base::RefCounted.230" }
%"class.base::RefCounted.230" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.231 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.232", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.241, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.232" = type { %"class.base::RefCounted.233" }
%"class.base::RefCounted.233" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.236 }
%union.anon.236 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.241 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.242", [4 x i8] }>
%"class.WTF::RefCounted.242" = type { %"class.base::RefCounted.243" }
%"class.base::RefCounted.243" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.244 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.245 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.246", %"class.WTF::Vector.248", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent.278", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.248" = type { %"class.WTF::VectorBuffer.249" }
%"class.WTF::VectorBuffer.249" = type { %"class.WTF::VectorBufferBase.250", [8 x i8] }
%"class.WTF::VectorBufferBase.250" = type { %class.scoped_refptr.251*, i32, i32 }
%class.scoped_refptr.251 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.252", [4 x i8] }>
%"class.WTF::RefCounted.252" = type { %"class.base::RefCounted.253" }
%"class.base::RefCounted.253" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.268", %class.scoped_refptr.275, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.252" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.256 }
%union.anon.256 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.267, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.257" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.257" }>
%"struct.std::__1::atomic.257" = type { %"struct.std::__1::__atomic_base.258" }
%"struct.std::__1::__atomic_base.258" = type { %"struct.std::__1::__atomic_base.259" }
%"struct.std::__1::__atomic_base.259" = type { %"struct.std::__1::__cxx_atomic_impl.260" }
%"struct.std::__1::__cxx_atomic_impl.260" = type { %"struct.std::__1::__cxx_atomic_base_impl.261" }
%"struct.std::__1::__cxx_atomic_base_impl.261" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.262" }
%"struct.std::__1::atomic.262" = type { %"struct.std::__1::__atomic_base.263" }
%"struct.std::__1::__atomic_base.263" = type { %"struct.std::__1::__atomic_base.264" }
%"struct.std::__1::__atomic_base.264" = type { %"struct.std::__1::__cxx_atomic_impl.265" }
%"struct.std::__1::__cxx_atomic_impl.265" = type { %"struct.std::__1::__cxx_atomic_base_impl.266" }
%"struct.std::__1::__cxx_atomic_base_impl.266" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.267 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.268" = type { %"class.std::__1::__compressed_pair.269" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.271, %class.scoped_refptr.271 }
%class.scoped_refptr.271 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.275 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.276", [4 x i8] }>
%"class.WTF::RefCounted.276" = type { %"class.base::RefCounted.277" }
%"class.base::RefCounted.277" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent.278" = type { %"class.blink::PersistentBase.279" }
%"class.blink::PersistentBase.279" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.280 }
%class.scoped_refptr.280 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.257" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.262" }
%"class.blink::Length" = type <{ %union.anon.281, i8, i8, i8, i8 }>
%union.anon.281 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.282" = type { %class.scoped_refptr.283 }
%class.scoped_refptr.283 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.284", [4 x i8], %"class.blink::DataRef.286", %"class.blink::DataRef.322", %"class.WTF::Vector.326", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.331, %class.scoped_refptr.340, %"class.blink::Persistent.348", %"class.blink::Persistent.350", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.284" = type { %"class.base::RefCounted.285" }
%"class.base::RefCounted.285" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.286" = type { %class.scoped_refptr.287 }
%class.scoped_refptr.287 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.288", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.290, %class.scoped_refptr.297, %"class.blink::Persistent.310", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.288" = type { %"class.base::RefCounted.289" }
%"class.base::RefCounted.289" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.290 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.291", %"class.WTF::Vector.292" }
%"class.base::RefCountedThreadSafe.291" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.297 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.298", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.298" = type { %"class.base::RefCounted.299" }
%"class.base::RefCounted.299" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.4 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.302" }
%"class.blink::PersistentBase.302" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.309" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.305" }
%"class.WTF::HashMap.305" = type { %"class.WTF::HashTable.306" }
%"class.WTF::HashTable.306" = type <{ %"struct.WTF::KeyValuePair.308"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.308" = type opaque
%"class.blink::PersistentNodePtr.309" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.310" = type { %"class.blink::PersistentBase.311" }
%"class.blink::PersistentBase.311" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.309" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.314" }
%"class.WTF::Vector.314" = type { %"class.WTF::VectorBuffer.315" }
%"class.WTF::VectorBuffer.315" = type { %"class.WTF::VectorBufferBase.316" }
%"class.WTF::VectorBufferBase.316" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.317", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.317" = type { %"class.blink::MemberBase.318" }
%"class.blink::MemberBase.318" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.322" = type { %class.scoped_refptr.323 }
%class.scoped_refptr.323 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.324", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.324" = type { %"class.base::RefCounted.325" }
%"class.base::RefCounted.325" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.326" = type { %"class.WTF::VectorBuffer.327" }
%"class.WTF::VectorBuffer.327" = type { %"class.WTF::VectorBufferBase.328" }
%"class.WTF::VectorBufferBase.328" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.331 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.332", %"class.WTF::Vector.334" }
%"class.WTF::RefCounted.332" = type { %"class.base::RefCounted.333" }
%"class.base::RefCounted.333" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.334" = type { %"class.WTF::VectorBuffer.335" }
%"class.WTF::VectorBuffer.335" = type { %"class.WTF::VectorBufferBase.336" }
%"class.WTF::VectorBufferBase.336" = type { %"struct.std::__1::pair.337"*, i32, i32 }
%"struct.std::__1::pair.337" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.340 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.341", [4 x i8], %"class.WTF::Vector.343" }
%"class.WTF::RefCounted.341" = type { %"class.base::RefCounted.342" }
%"class.base::RefCounted.342" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.343" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.345", [28 x i8] }>
%"class.WTF::VectorBufferBase.345" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.348" = type { %"class.blink::PersistentBase.349" }
%"class.blink::PersistentBase.349" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.309" }
%"class.blink::Persistent.350" = type { %"class.blink::PersistentBase.351" }
%"class.blink::PersistentBase.351" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.309" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.354", %"class.blink::Member.480" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.356", %"class.blink::Member.368", %"class.blink::Member.362", %"class.blink::Member.370", %"class.blink::Member.370", %"class.blink::Member.411", %"class.blink::Member.413", %"class.blink::Member.415", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.420", %"class.blink::HeapVector.422" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.356" = type { %"class.blink::MemberBase.357" }
%"class.blink::MemberBase.357" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.360", %"class.blink::Member.360" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.360", %"class.blink::Member.362", %"class.blink::Member.360", %"class.blink::Member.360", %"class.blink::Member.364" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.364" = type { %"class.blink::MemberBase.365" }
%"class.blink::MemberBase.365" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.360" = type { %"class.blink::MemberBase.361" }
%"class.blink::MemberBase.361" = type { %"class.blink::Node"* }
%"class.blink::Member.368" = type { %"class.blink::MemberBase.369" }
%"class.blink::MemberBase.369" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.785", %"class.WTF::Vector.785", i8, i32, %"class.blink::Member.792", %"class.blink::Member.794", %"class.blink::Member.796", %"class.blink::Member.798", %"class.blink::Member.800", %"class.blink::Member.802", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.810", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.816", %"class.blink::Member.818", %"class.blink::Member.428", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.821", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.404", %"class.blink::Member.385", %"class.blink::Member.846", %"class.blink::Member.385", %"class.blink::Member.385", %"class.blink::Member.385", %"class.blink::UserActionElementSet", %"class.blink::Member.855", double, double, i64, i64, %"class.blink::HeapHashSet.857", %"class.blink::HeapHashSet.864", i16, i8, %"class.blink::Member.871", %"class.blink::Member.873", %"class.blink::Member.875", %"class.blink::Member.877", %"class.blink::TextLinkColors", %"class.blink::Member.879", i8, [7 x i8], %"class.blink::HeapHashMap.881", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.385", %"class.WTF::Vector.888", %"class.blink::Member.893", %"class.blink::Member.895", i8, %"class.blink::Member.385", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.897", %"class.blink::HeapVector.899", %"class.std::__1::unique_ptr.907", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.913", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.926", %"class.WTF::Vector.928", i8, i8, %"class.std::__1::unique_ptr.933", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.404", %"class.blink::HeapVector.939", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.947", i8, i32, %"class.blink::Member.949", %"class.blink::Member.951", %"class.blink::Member.953", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.955", %"class.WTF::HashMap.957", %"class.blink::Member.962", %"class.blink::Member.964", %"class.blink::Member.966", %"class.blink::Member.968", %"class.blink::Member.368", %"class.blink::Member.368", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.970", i8, i32, %"class.blink::Member.977", %"class.blink::Member.979", i32, %"class.blink::Member.981", %"class.blink::Member.983", %"class.blink::Member.985", %"class.std::__1::unique_ptr.987", i64, %"class.std::__1::unique_ptr.993", i32, i32, %"class.blink::Member.1004", %"class.blink::Member.1006", %"class.blink::Member.1008", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1010", %"class.WTF::Vector.1012", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1017", %"class.blink::Member.1024", %"class.std::__1::unique_ptr.1026", %"class.blink::Member.1032", i8, i8, %"class.WTF::String", %"class.blink::Member.1034", i8, [7 x i8], %"class.blink::HeapHashMap.1036", %"class.blink::HeapObserverSet", %"class.blink::Member.1050", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1052", i32, i8, i8, %"class.blink::WeakMember.1054", %"class.blink::Member.1055" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.778" }
%"class.blink::HeapHashMap.778" = type { %"class.WTF::HashMap.781" }
%"class.WTF::HashMap.781" = type { %"class.WTF::HashTable.782" }
%"class.WTF::HashTable.782" = type <{ %"struct.WTF::KeyValuePair.784"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.784" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.785" = type { %"class.WTF::VectorBuffer.786" }
%"class.WTF::VectorBuffer.786" = type { %"class.WTF::VectorBufferBase.787" }
%"class.WTF::VectorBufferBase.787" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.788 }
%class.scoped_refptr.788 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.789", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.789" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.792" = type { %"class.blink::MemberBase.793" }
%"class.blink::MemberBase.793" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.794" = type { %"class.blink::MemberBase.795" }
%"class.blink::MemberBase.795" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1068", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1109", i32, i8, [3 x i8], %"class.blink::HeapVector.1111", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1119", %"class.blink::Member.1121", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1130", %"class.blink::Member.1136", %"class.blink::Member.1138", i8, [7 x i8] }>
%"class.blink::Supplementable.1068" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1069" }
%"class.blink::HeapHashMap.1069" = type { %"class.WTF::HashMap.1072" }
%"class.WTF::HashMap.1072" = type { %"class.WTF::HashTable.1073" }
%"class.WTF::HashTable.1073" = type <{ %"struct.WTF::KeyValuePair.1075"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1075" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1084" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1076" }
%"class.blink::HeapObserverSet.1076" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1077" }
%"class.blink::HeapHashSet.1077" = type { %"class.WTF::HashSet.1080" }
%"class.WTF::HashSet.1080" = type { %"class.WTF::HashTable.1081" }
%"class.WTF::HashTable.1081" = type <{ %"class.blink::WeakMember.1083"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1083" = type opaque
%"class.blink::Supplementable.1084" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1085" }
%"class.blink::HeapHashMap.1085" = type { %"class.WTF::HashMap.1088" }
%"class.WTF::HashMap.1088" = type { %"class.WTF::HashTable.1089" }
%"class.WTF::HashTable.1089" = type <{ %"struct.WTF::KeyValuePair.1091"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1091" = type { i8*, %"class.blink::Member.1454" }
%"class.blink::Member.1454" = type { %"class.blink::MemberBase.1455" }
%"class.blink::MemberBase.1455" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1456" }
%"class.blink::Member.1456" = type { %"class.blink::MemberBase.1457" }
%"class.blink::MemberBase.1457" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1092, %"class.std::__1::unique_ptr.1093", %"class.std::__1::unique_ptr.1093", %"class.std::__1::unique_ptr.1099", %"class.std::__1::unique_ptr.1099", %"class.blink::Member.794", i32, [4 x i8], %"class.WTF::HashSet.1105", i32, i32 }
%class.scoped_refptr.1092 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.1093" = type { %"class.std::__1::__compressed_pair.1094" }
%"class.std::__1::__compressed_pair.1094" = type { %"struct.std::__1::__compressed_pair_elem.1095" }
%"struct.std::__1::__compressed_pair_elem.1095" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1099" = type { %"class.std::__1::__compressed_pair.1100" }
%"class.std::__1::__compressed_pair.1100" = type { %"struct.std::__1::__compressed_pair_elem.1101" }
%"struct.std::__1::__compressed_pair_elem.1101" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1105" = type { %"class.WTF::HashTable.1106" }
%"class.WTF::HashTable.1106" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1109" = type { %"class.blink::MemberBase.1110" }
%"class.blink::MemberBase.1110" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1111" = type { %"class.WTF::Vector.1114" }
%"class.WTF::Vector.1114" = type { %"class.WTF::VectorBuffer.1115" }
%"class.WTF::VectorBuffer.1115" = type { %"class.WTF::VectorBufferBase.1116" }
%"class.WTF::VectorBufferBase.1116" = type { %"class.blink::Member.1117"*, i32, i32 }
%"class.blink::Member.1117" = type opaque
%"class.blink::Member.1119" = type { %"class.blink::MemberBase.1120" }
%"class.blink::MemberBase.1120" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1121" = type { %"class.blink::MemberBase.1122" }
%"class.blink::MemberBase.1122" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1123", i32, i32 }
%"class.blink::HeapHashMap.1123" = type { %"class.WTF::HashMap.1126" }
%"class.WTF::HashMap.1126" = type { %"class.WTF::HashTable.1127" }
%"class.WTF::HashTable.1127" = type <{ %"struct.WTF::KeyValuePair.1129"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1129" = type opaque
%"class.std::__1::unique_ptr.1130" = type { %"class.std::__1::__compressed_pair.1131" }
%"class.std::__1::__compressed_pair.1131" = type { %"struct.std::__1::__compressed_pair_elem.1132" }
%"struct.std::__1::__compressed_pair_elem.1132" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1136" = type { %"class.blink::MemberBase.1137" }
%"class.blink::MemberBase.1137" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1138" = type { %"class.blink::MemberBase.1139" }
%"class.blink::MemberBase.1139" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.796" = type { %"class.blink::MemberBase.797" }
%"class.blink::MemberBase.797" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.798" = type { %"class.blink::MemberBase.799" }
%"class.blink::MemberBase.799" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.800" = type { %"class.blink::MemberBase.801" }
%"class.blink::MemberBase.801" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.802" = type { %"class.blink::MemberBase.803" }
%"class.blink::MemberBase.803" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.810" = type { %"class.std::__1::__compressed_pair.811" }
%"class.std::__1::__compressed_pair.811" = type { %"struct.std::__1::__compressed_pair_elem.812" }
%"struct.std::__1::__compressed_pair_elem.812" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.804" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.804" = type { %"class.std::__1::__compressed_pair.805" }
%"class.std::__1::__compressed_pair.805" = type { %"struct.std::__1::__compressed_pair_elem.806" }
%"struct.std::__1::__compressed_pair_elem.806" = type { %"class.blink::KURL"* }
%"class.blink::Member.816" = type { %"class.blink::MemberBase.817" }
%"class.blink::MemberBase.817" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.818" = type { %"class.blink::MemberBase.819" }
%"class.blink::MemberBase.819" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.428" = type { %"class.blink::MemberBase.429" }
%"class.blink::MemberBase.429" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.430", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.432, %"class.WTF::Vector.451", %"class.WTF::Vector.451", %"class.blink::Member.360", %"class.blink::Member.456", %"class.blink::HeapHashSet", %"class.blink::Member.368", %"class.WTF::HashSet.464", %"class.WTF::TextPosition", %"class.blink::Member.468", %"class.blink::HeapVector.470", %"class.blink::Member.477" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.430" = type { %"class.blink::MemberBase.431" }
%"class.blink::MemberBase.431" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.432 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.433", %"class.WTF::Vector.435" }
%"class.WTF::RefCounted.433" = type { %"class.base::RefCounted.434" }
%"class.base::RefCounted.434" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.435" = type { %"class.WTF::VectorBuffer.436" }
%"class.WTF::VectorBuffer.436" = type { %"class.WTF::VectorBufferBase.437" }
%"class.WTF::VectorBufferBase.437" = type { %"class.std::__1::unique_ptr.438"*, i32, i32 }
%"class.std::__1::unique_ptr.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.441", %"class.WTF::String" }
%"class.WTF::Vector.441" = type { %"class.WTF::VectorBuffer.442" }
%"class.WTF::VectorBuffer.442" = type { %"class.WTF::VectorBufferBase.443" }
%"class.WTF::VectorBufferBase.443" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.451" = type { %"class.WTF::VectorBuffer.452" }
%"class.WTF::VectorBuffer.452" = type { %"class.WTF::VectorBufferBase.453" }
%"class.WTF::VectorBufferBase.453" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.456" = type { %"class.blink::MemberBase.457" }
%"class.blink::MemberBase.457" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.458" }
%"class.blink::Member.458" = type { %"class.blink::MemberBase.459" }
%"class.blink::MemberBase.459" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.462" }
%"class.WTF::HashTable.462" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.363" }
%"class.blink::MemberBase.363" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.464" = type { %"class.WTF::HashTable.465" }
%"class.WTF::HashTable.465" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.468" = type { %"class.blink::MemberBase.469" }
%"class.blink::MemberBase.469" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.432, %"class.blink::Member.428", %"class.blink::Member.456" }
%"class.blink::HeapVector.470" = type { %"class.WTF::Vector.473" }
%"class.WTF::Vector.473" = type { %"class.WTF::VectorBuffer.474" }
%"class.WTF::VectorBuffer.474" = type { %"class.WTF::VectorBufferBase.475" }
%"class.WTF::VectorBufferBase.475" = type { %"class.blink::Member.456"*, i32, i32 }
%"class.blink::Member.477" = type { %"class.blink::MemberBase.478" }
%"class.blink::MemberBase.478" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.820 }
%class.scoped_refptr.820 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.821" = type { %"class.WTF::VectorBuffer.822" }
%"class.WTF::VectorBuffer.822" = type { %"class.WTF::VectorBufferBase.823" }
%"class.WTF::VectorBufferBase.823" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.824 }
%class.scoped_refptr.824 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.825", i32, i32, %"class.blink::Persistent.827" }
%"class.WTF::RefCounted.825" = type { %"class.base::RefCounted.826" }
%"class.base::RefCounted.826" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.827" = type { %"class.blink::PersistentBase.828" }
%"class.blink::PersistentBase.828" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.309" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.831" }
%"class.blink::HeapHashMap.831" = type { %"class.WTF::HashMap.834" }
%"class.WTF::HashMap.834" = type { %"class.WTF::HashTable.835" }
%"class.WTF::HashTable.835" = type <{ %"struct.WTF::KeyValuePair.837"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.837" = type { %"class.blink::WeakMember.838", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.838" = type { %"class.blink::MemberBase.839" }
%"class.blink::MemberBase.839" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.846" = type { %"class.blink::MemberBase.847" }
%"class.blink::MemberBase.847" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.848" }
%"class.blink::HeapHashMap.848" = type { %"class.WTF::HashMap.851" }
%"class.WTF::HashMap.851" = type { %"class.WTF::HashTable.852" }
%"class.WTF::HashTable.852" = type <{ %"struct.WTF::KeyValuePair.854"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.854" = type opaque
%"class.blink::Member.855" = type { %"class.blink::MemberBase.856" }
%"class.blink::MemberBase.856" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.857" = type { %"class.WTF::HashSet.860" }
%"class.WTF::HashSet.860" = type { %"class.WTF::HashTable.861" }
%"class.WTF::HashTable.861" = type <{ %"class.blink::WeakMember.863"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.863" = type opaque
%"class.blink::HeapHashSet.864" = type { %"class.WTF::HashSet.867" }
%"class.WTF::HashSet.867" = type { %"class.WTF::HashTable.868" }
%"class.WTF::HashTable.868" = type <{ %"class.blink::WeakMember.870"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.870" = type opaque
%"class.blink::Member.871" = type { %"class.blink::MemberBase.872" }
%"class.blink::MemberBase.872" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.873" = type { %"class.blink::MemberBase.874" }
%"class.blink::MemberBase.874" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.875" = type { %"class.blink::MemberBase.876" }
%"class.blink::MemberBase.876" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.877" = type { %"class.blink::MemberBase.878" }
%"class.blink::MemberBase.878" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.879" = type { %"class.blink::MemberBase.880" }
%"class.blink::MemberBase.880" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.881" = type { %"class.WTF::HashMap.884" }
%"class.WTF::HashMap.884" = type { %"class.WTF::HashTable.885" }
%"class.WTF::HashTable.885" = type <{ %"struct.WTF::KeyValuePair.887"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.887" = type opaque
%"class.WTF::Vector.888" = type { %"class.WTF::VectorBuffer.889" }
%"class.WTF::VectorBuffer.889" = type { %"class.WTF::VectorBufferBase.890" }
%"class.WTF::VectorBufferBase.890" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.893" = type { %"class.blink::MemberBase.894" }
%"class.blink::MemberBase.894" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.895" = type { %"class.blink::MemberBase.896" }
%"class.blink::MemberBase.896" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.385" = type { %"class.blink::MemberBase.386" }
%"class.blink::MemberBase.386" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.387" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.387" = type { %"class.blink::MemberBase.388" }
%"class.blink::MemberBase.388" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.391", %"class.blink::Member.393", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.391" = type { %"class.WTF::SingleThreadedBitField.392" }
%"class.WTF::SingleThreadedBitField.392" = type { i32 }
%"class.blink::Member.393" = type { %"class.blink::MemberBase.394" }
%"class.blink::MemberBase.394" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.397 }
%class.scoped_refptr.397 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.398", %"class.WTF::AtomicString", %"class.WTF::Vector.400" }
%"class.WTF::RefCounted.398" = type { %"class.base::RefCounted.399" }
%"class.base::RefCounted.399" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.400" = type { %"class.WTF::VectorBuffer.401" }
%"class.WTF::VectorBuffer.401" = type { %"class.WTF::VectorBufferBase.328", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.897" = type { %"class.blink::MemberBase.898" }
%"class.blink::MemberBase.898" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.899" = type { %"class.WTF::Vector.902" }
%"class.WTF::Vector.902" = type { %"class.WTF::VectorBuffer.903" }
%"class.WTF::VectorBuffer.903" = type { %"class.WTF::VectorBufferBase.904" }
%"class.WTF::VectorBufferBase.904" = type { %"class.blink::Member.905"*, i32, i32 }
%"class.blink::Member.905" = type opaque
%"class.std::__1::unique_ptr.907" = type { %"class.std::__1::__compressed_pair.908" }
%"class.std::__1::__compressed_pair.908" = type { %"struct.std::__1::__compressed_pair_elem.909" }
%"struct.std::__1::__compressed_pair_elem.909" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.913" = type { %"class.WTF::HashSet.916" }
%"class.WTF::HashSet.916" = type { %"class.WTF::HashTable.917" }
%"class.WTF::HashTable.917" = type <{ %"class.blink::WeakMember.919"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.919" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.920", i32, [4 x i8] }>
%"class.WTF::Vector.920" = type { %"class.WTF::VectorBuffer.921" }
%"class.WTF::VectorBuffer.921" = type { %"class.WTF::VectorBufferBase.922" }
%"class.WTF::VectorBufferBase.922" = type { %"struct.std::__1::pair.923"*, i32, i32 }
%"struct.std::__1::pair.923" = type opaque
%"class.blink::Member.926" = type { %"class.blink::MemberBase.927" }
%"class.blink::MemberBase.927" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.928" = type { %"class.WTF::VectorBuffer.929" }
%"class.WTF::VectorBuffer.929" = type { %"class.WTF::VectorBufferBase.930" }
%"class.WTF::VectorBufferBase.930" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.933" = type { %"class.std::__1::__compressed_pair.934" }
%"class.std::__1::__compressed_pair.934" = type { %"struct.std::__1::__compressed_pair_elem.935" }
%"struct.std::__1::__compressed_pair_elem.935" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.404" = type { %"class.WTF::Vector.407" }
%"class.WTF::Vector.407" = type { %"class.WTF::VectorBuffer.408" }
%"class.WTF::VectorBuffer.408" = type { %"class.WTF::VectorBufferBase.409" }
%"class.WTF::VectorBufferBase.409" = type { %"class.blink::Member.385"*, i32, i32 }
%"class.blink::HeapVector.939" = type { %"class.WTF::Vector.942" }
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"class.blink::Member.945"*, i32, i32 }
%"class.blink::Member.945" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.368" }
%"class.blink::Member.947" = type { %"class.blink::MemberBase.948" }
%"class.blink::MemberBase.948" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.949" = type { %"class.blink::MemberBase.950" }
%"class.blink::MemberBase.950" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.951" = type { %"class.blink::MemberBase.952" }
%"class.blink::MemberBase.952" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.953" = type { %"class.blink::MemberBase.954" }
%"class.blink::MemberBase.954" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.955" = type { %"class.blink::MemberBase.956" }
%"class.blink::MemberBase.956" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.957" = type { %"class.WTF::HashTable.958" }
%"class.WTF::HashTable.958" = type <{ %"struct.WTF::KeyValuePair.961"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.961" = type opaque
%"class.blink::Member.962" = type { %"class.blink::MemberBase.963" }
%"class.blink::MemberBase.963" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.964" = type { %"class.blink::MemberBase.965" }
%"class.blink::MemberBase.965" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.966" = type { %"class.blink::MemberBase.967" }
%"class.blink::MemberBase.967" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.968" = type { %"class.blink::MemberBase.969" }
%"class.blink::MemberBase.969" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.845", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.842, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.842 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.843" }>
%"class.base::RefCountedThreadSafe.843" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.844 }
%class.scoped_refptr.844 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakMember.845" = type { %"class.blink::MemberBase.369" }
%"class.blink::HeapHashSet.970" = type { %"class.WTF::HashSet.973" }
%"class.WTF::HashSet.973" = type { %"class.WTF::HashTable.974" }
%"class.WTF::HashTable.974" = type <{ %"class.blink::Member.976"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.976" = type opaque
%"class.blink::Member.977" = type { %"class.blink::MemberBase.978" }
%"class.blink::MemberBase.978" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.979" = type { %"class.blink::MemberBase.980" }
%"class.blink::MemberBase.980" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.981" = type { %"class.blink::MemberBase.982" }
%"class.blink::MemberBase.982" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.983" = type { %"class.blink::MemberBase.984" }
%"class.blink::MemberBase.984" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.985" = type { %"class.blink::MemberBase.986" }
%"class.blink::MemberBase.986" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.987" = type { %"class.std::__1::__compressed_pair.988" }
%"class.std::__1::__compressed_pair.988" = type { %"struct.std::__1::__compressed_pair_elem.989" }
%"struct.std::__1::__compressed_pair_elem.989" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.993" = type { %"class.std::__1::__compressed_pair.994" }
%"class.std::__1::__compressed_pair.994" = type { %"struct.std::__1::__compressed_pair_elem.995" }
%"struct.std::__1::__compressed_pair_elem.995" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.464", %"class.WTF::HashSet.464", %"class.WTF::HashSet.464", %"class.WTF::HashSet.464", %"class.WTF::HashSet.464", %"class.WTF::HashSet.464", i32, [4 x i8], %"class.WTF::HashMap.996", %"class.WTF::HashMap.996", %"class.WTF::HashMap.996", %"class.WTF::HashMap.996", %"class.WTF::HashMap.996", %"class.WTF::HashMap.996", %"class.WTF::HashMap.996", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.996" = type { %"class.WTF::HashTable.997" }
%"class.WTF::HashTable.997" = type <{ %"struct.WTF::KeyValuePair.1000"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1000" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1004" = type { %"class.blink::MemberBase.1005" }
%"class.blink::MemberBase.1005" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1006" = type { %"class.blink::MemberBase.1007" }
%"class.blink::MemberBase.1007" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1008" = type { %"class.blink::MemberBase.1009" }
%"class.blink::MemberBase.1009" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1010" = type { %"class.blink::MemberBase.1011" }
%"class.blink::MemberBase.1011" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1012" = type { %"class.WTF::VectorBuffer.1013" }
%"class.WTF::VectorBuffer.1013" = type { %"class.WTF::VectorBufferBase.1014" }
%"class.WTF::VectorBufferBase.1014" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1017" = type { %"class.WTF::HashMap.1020" }
%"class.WTF::HashMap.1020" = type { %"class.WTF::HashTable.1021" }
%"class.WTF::HashTable.1021" = type <{ %"struct.WTF::KeyValuePair.1023"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1023" = type opaque
%"class.blink::Member.1024" = type { %"class.blink::MemberBase.1025" }
%"class.blink::MemberBase.1025" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1026" = type { %"class.std::__1::__compressed_pair.1027" }
%"class.std::__1::__compressed_pair.1027" = type { %"struct.std::__1::__compressed_pair_elem.1028" }
%"struct.std::__1::__compressed_pair_elem.1028" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1032" = type { %"class.blink::MemberBase.1033" }
%"class.blink::MemberBase.1033" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1034" = type { %"class.blink::MemberBase.1035" }
%"class.blink::MemberBase.1035" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1036" = type { %"class.WTF::HashMap.1039" }
%"class.WTF::HashMap.1039" = type { %"class.WTF::HashTable.1040" }
%"class.WTF::HashTable.1040" = type <{ %"struct.WTF::KeyValuePair.1042"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1042" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1043" }
%"class.blink::HeapHashSet.1043" = type { %"class.WTF::HashSet.1046" }
%"class.WTF::HashSet.1046" = type { %"class.WTF::HashTable.1047" }
%"class.WTF::HashTable.1047" = type <{ %"class.blink::WeakMember.1049"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1049" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.368", %"class.blink::HeapHashSet.1059", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1066", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1059" = type { %"class.WTF::HashSet.1062" }
%"class.WTF::HashSet.1062" = type { %"class.WTF::HashTable.1063" }
%"class.WTF::HashTable.1063" = type <{ %"class.blink::Member.1065"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1065" = type opaque
%"class.blink::HeapTaskRunnerTimer.1066" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1067", { i64, i64 } }
%"class.blink::WeakMember.1067" = type { %"class.blink::MemberBase.1053" }
%"class.blink::WeakMember.1054" = type { %"class.blink::MemberBase.361" }
%"class.blink::Member.1055" = type { %"class.blink::MemberBase.1056" }
%"class.blink::MemberBase.1056" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.362" = type { %"class.blink::MemberBase.363" }
%"class.blink::Member.370" = type { %"class.blink::MemberBase.371" }
%"class.blink::MemberBase.371" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.374" }
%"class.blink::HeapHashMap.374" = type { %"class.WTF::HashMap.377" }
%"class.WTF::HashMap.377" = type { %"class.WTF::HashTable.378" }
%"class.WTF::HashTable.378" = type <{ %"struct.WTF::KeyValuePair.380"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.380" = type { %"class.WTF::AtomicString", %"class.blink::Member.381" }
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.385", i32, %"class.blink::HeapVector.404" }
%"class.blink::Member.411" = type { %"class.blink::MemberBase.412" }
%"class.blink::MemberBase.412" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.413" = type { %"class.blink::MemberBase.414" }
%"class.blink::MemberBase.414" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.415" = type { %"class.blink::MemberBase.416" }
%"class.blink::MemberBase.416" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.417" }
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::HeapHashMap.419"* }
%"class.blink::HeapHashMap.419" = type opaque
%"class.blink::Member.420" = type { %"class.blink::MemberBase.421" }
%"class.blink::MemberBase.421" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.422" = type { %"class.WTF::Vector.425" }
%"class.WTF::Vector.425" = type { %"class.WTF::VectorBuffer.426" }
%"class.WTF::VectorBuffer.426" = type { %"class.WTF::VectorBufferBase.427" }
%"class.WTF::VectorBufferBase.427" = type { %"class.blink::Member.428"*, i32, i32 }
%"class.blink::Member.480" = type { %"class.blink::MemberBase.481" }
%"class.blink::MemberBase.481" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.482" = type { %class.scoped_refptr.483 }
%class.scoped_refptr.483 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.484", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.484" = type { %"class.base::RefCounted.485" }
%"class.base::RefCounted.485" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.486" = type { %class.scoped_refptr.487 }
%class.scoped_refptr.487 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.488", [4 x i8], %"class.blink::DataRef.490", %"class.blink::DataRef.556", %"class.blink::TransformOperations", %class.scoped_refptr.340, %"class.blink::Persistent.675", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.488" = type { %"class.base::RefCounted.489" }
%"class.base::RefCounted.489" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.490" = type { %class.scoped_refptr.491 }
%class.scoped_refptr.491 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.492", [4 x i8], %"class.blink::DataRef.494", %"class.blink::Persistent.532", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.492" = type { %"class.base::RefCounted.493" }
%"class.base::RefCounted.493" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.494" = type { %class.scoped_refptr.495 }
%class.scoped_refptr.495 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.496", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.514, %class.scoped_refptr.517, %class.scoped_refptr.520, %class.scoped_refptr.523, %class.scoped_refptr.524, %class.scoped_refptr.525, %"class.blink::Persistent.532", %"class.blink::Persistent.547", %"class.absl::optional.551", %"class.absl::optional.551", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.496" = type { %"class.base::RefCounted.497" }
%"class.base::RefCounted.497" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.498", %"class.std::__1::unique_ptr.503" }
%"class.WTF::Vector.498" = type { %"class.WTF::VectorBuffer.499" }
%"class.WTF::VectorBuffer.499" = type { %"class.WTF::VectorBufferBase.500" }
%"class.WTF::VectorBufferBase.500" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.503" = type { %"class.std::__1::__compressed_pair.504" }
%"class.std::__1::__compressed_pair.504" = type { %"struct.std::__1::__compressed_pair_elem.505" }
%"struct.std::__1::__compressed_pair_elem.505" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.506", %"class.WTF::Vector.498", i32, i32 }
%"class.WTF::Vector.506" = type { %"class.WTF::VectorBuffer.507" }
%"class.WTF::VectorBuffer.507" = type { %"class.WTF::VectorBufferBase.508" }
%"class.WTF::VectorBufferBase.508" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.514 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.515", [4 x i8] }>
%"class.WTF::RefCounted.515" = type { %"class.base::RefCounted.516" }
%"class.base::RefCounted.516" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.517 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.518", [4 x i8] }>
%"class.WTF::RefCounted.518" = type { %"class.base::RefCounted.519" }
%"class.base::RefCounted.519" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.520 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.521" }>
%"class.WTF::RefCounted.521" = type { %"class.base::RefCounted.522" }
%"class.base::RefCounted.522" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.523 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.524 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.525 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.526", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.526" = type { %"class.base::RefCounted.527" }
%"class.base::RefCounted.527" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.528" }
%"class.blink::DataRef.528" = type { %class.scoped_refptr.529 }
%class.scoped_refptr.529 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.348", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.530" }
%"class.WTF::RefCounted.530" = type { %"class.base::RefCounted.531" }
%"class.base::RefCounted.531" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.547" = type { %"class.blink::PersistentBase.548" }
%"class.blink::PersistentBase.548" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.309" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.517, %"class.blink::Member.317", i32, [4 x i8] }>
%"class.absl::optional.551" = type { %"class.absl::optional_internal::optional_data.552" }
%"class.absl::optional_internal::optional_data.552" = type { %"class.absl::optional_internal::optional_data_base.553" }
%"class.absl::optional_internal::optional_data_base.553" = type { %"class.absl::optional_internal::optional_data_dtor_base.554" }
%"class.absl::optional_internal::optional_data_dtor_base.554" = type { i8, [3 x i8], %union.anon.555 }
%union.anon.555 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.532" = type { %"class.blink::PersistentBase.533" }
%"class.blink::PersistentBase.533" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.309" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.536" }
%"class.blink::HeapVector.536" = type { %"class.WTF::Vector.539" }
%"class.WTF::Vector.539" = type { %"class.WTF::VectorBuffer.540" }
%"class.WTF::VectorBuffer.540" = type { %"class.WTF::VectorBufferBase.541" }
%"class.WTF::VectorBufferBase.541" = type { %"class.blink::Member.542"*, i32, i32 }
%"class.blink::Member.542" = type { %"class.blink::MemberBase.543" }
%"class.blink::MemberBase.543" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.556" = type { %class.scoped_refptr.557 }
%class.scoped_refptr.557 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.558", %"class.blink::DataRef.560", %"class.blink::DataRef.564", %"class.blink::DataRef.573", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.592", %"class.std::__1::unique_ptr.603", %"class.std::__1::unique_ptr.641", %"class.std::__1::unique_ptr.652", %"class.std::__1::unique_ptr.663", %"class.WTF::Vector.7", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.558" = type { %"class.base::RefCounted.559" }
%"class.base::RefCounted.559" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.560" = type { %class.scoped_refptr.561 }
%class.scoped_refptr.561 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.562", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.562" = type { %"class.base::RefCounted.563" }
%"class.base::RefCounted.563" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.564" = type { %class.scoped_refptr.565 }
%class.scoped_refptr.565 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.566", [4 x i8], %"class.WTF::Vector.568", i8, [7 x i8] }>
%"class.WTF::RefCounted.566" = type { %"class.base::RefCounted.567" }
%"class.base::RefCounted.567" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.568" = type { %"class.WTF::VectorBuffer.569" }
%"class.WTF::VectorBuffer.569" = type { %"class.WTF::VectorBufferBase.570" }
%"class.WTF::VectorBufferBase.570" = type { i32*, i32, i32 }
%"class.blink::DataRef.573" = type { %class.scoped_refptr.574 }
%class.scoped_refptr.574 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.575", [4 x i8], %"class.WTF::HashMap.577", %"class.WTF::HashMap.577", %"class.WTF::HashMap.577", %"class.WTF::HashMap.577", %"class.WTF::HashMap.577", %"class.WTF::HashMap.577", %"class.WTF::HashMap.582", %"class.WTF::HashMap.582", %"class.WTF::HashMap.582", %"class.WTF::HashMap.582", %"class.WTF::HashMap.587", %"class.WTF::Vector.498", %"class.WTF::Vector.498", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.575" = type { %"class.base::RefCounted.576" }
%"class.base::RefCounted.576" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.577" = type { %"class.WTF::HashTable.578" }
%"class.WTF::HashTable.578" = type <{ %"struct.WTF::KeyValuePair.581"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.581" = type { %"class.WTF::String", %"class.WTF::Vector.1488" }
%"class.WTF::Vector.1488" = type { %"class.WTF::VectorBuffer.1489" }
%"class.WTF::VectorBuffer.1489" = type { %"class.WTF::VectorBufferBase.1490" }
%"class.WTF::VectorBufferBase.1490" = type { i64*, i32, i32 }
%"class.WTF::HashMap.582" = type { %"class.WTF::HashTable.583" }
%"class.WTF::HashTable.583" = type <{ %"struct.WTF::KeyValuePair.586"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.586" = type { i64, %"class.WTF::Vector.7" }
%"class.WTF::HashMap.587" = type { %"class.WTF::HashTable.588" }
%"class.WTF::HashTable.588" = type <{ %"struct.WTF::KeyValuePair.591"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.591" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.592" = type { %"class.std::__1::__compressed_pair.593" }
%"class.std::__1::__compressed_pair.593" = type { %"struct.std::__1::__compressed_pair_elem.594" }
%"struct.std::__1::__compressed_pair_elem.594" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.595" }
%"class.WTF::HashMap.595" = type { %"class.WTF::HashTable.596" }
%"class.WTF::HashTable.596" = type <{ %"struct.WTF::KeyValuePair.599"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.599" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1493", %"class.absl::optional.1493", %"class.absl::optional.1493" }
%"class.absl::optional.1493" = type { %"class.absl::optional_internal::optional_data.1494" }
%"class.absl::optional_internal::optional_data.1494" = type { %"class.absl::optional_internal::optional_data_base.1495" }
%"class.absl::optional_internal::optional_data_base.1495" = type { %"class.absl::optional_internal::optional_data_dtor_base.1496" }
%"class.absl::optional_internal::optional_data_dtor_base.1496" = type { i8, %union.anon.1497 }
%union.anon.1497 = type { i32 }
%"class.std::__1::unique_ptr.603" = type { %"class.std::__1::__compressed_pair.604" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.605" }
%"struct.std::__1::__compressed_pair_elem.605" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.326", %"class.WTF::Vector.618", %"class.WTF::Vector.606", %"class.WTF::Vector.623", %"class.WTF::Vector.628", %"class.WTF::Vector.633" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.606", %"class.WTF::Vector.606", %"class.WTF::Vector.611" }
%"class.WTF::Vector.611" = type { %"class.WTF::VectorBuffer.612" }
%"class.WTF::VectorBuffer.612" = type { %"class.WTF::VectorBufferBase.613" }
%"class.WTF::VectorBufferBase.613" = type { %class.scoped_refptr.614*, i32, i32 }
%class.scoped_refptr.614 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.615" }
%"class.base::RefCountedThreadSafe.615" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.618" = type { %"class.WTF::VectorBuffer.619" }
%"class.WTF::VectorBuffer.619" = type { %"class.WTF::VectorBufferBase.620" }
%"class.WTF::VectorBufferBase.620" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.606" = type { %"class.WTF::VectorBuffer.607" }
%"class.WTF::VectorBuffer.607" = type { %"class.WTF::VectorBufferBase.608" }
%"class.WTF::VectorBufferBase.608" = type { double*, i32, i32 }
%"class.WTF::Vector.623" = type { %"class.WTF::VectorBuffer.624" }
%"class.WTF::VectorBuffer.624" = type { %"class.WTF::VectorBufferBase.625" }
%"class.WTF::VectorBufferBase.625" = type { i32*, i32, i32 }
%"class.WTF::Vector.628" = type { %"class.WTF::VectorBuffer.629" }
%"class.WTF::VectorBuffer.629" = type { %"class.WTF::VectorBufferBase.630" }
%"class.WTF::VectorBufferBase.630" = type { i32*, i32, i32 }
%"class.WTF::Vector.633" = type { %"class.WTF::VectorBuffer.634" }
%"class.WTF::VectorBuffer.634" = type { %"class.WTF::VectorBufferBase.635" }
%"class.WTF::VectorBufferBase.635" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.641" = type { %"class.std::__1::__compressed_pair.642" }
%"class.std::__1::__compressed_pair.642" = type { %"struct.std::__1::__compressed_pair_elem.643" }
%"struct.std::__1::__compressed_pair_elem.643" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.644" }
%"class.WTF::Vector.644" = type { %"class.WTF::VectorBuffer.645" }
%"class.WTF::VectorBuffer.645" = type { %"class.WTF::VectorBufferBase.646" }
%"class.WTF::VectorBufferBase.646" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.652" = type { %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.655" }
%"class.WTF::Vector.655" = type { %"class.WTF::VectorBuffer.656" }
%"class.WTF::VectorBuffer.656" = type { %"class.WTF::VectorBufferBase.657" }
%"class.WTF::VectorBufferBase.657" = type { %"class.blink::Persistent.348"*, i32, i32 }
%"class.std::__1::unique_ptr.663" = type { %"class.std::__1::__compressed_pair.664" }
%"class.std::__1::__compressed_pair.664" = type { %"struct.std::__1::__compressed_pair_elem.665" }
%"struct.std::__1::__compressed_pair_elem.665" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.348", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.669" }
%"class.WTF::Vector.669" = type { %"class.WTF::VectorBuffer.670" }
%"class.WTF::VectorBuffer.670" = type { %"class.WTF::VectorBufferBase.671" }
%"class.WTF::VectorBufferBase.671" = type { %class.scoped_refptr.672*, i32, i32 }
%class.scoped_refptr.672 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.521", [4 x i8] }>
%"class.blink::Persistent.675" = type { %"class.blink::PersistentBase.676" }
%"class.blink::PersistentBase.676" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.309" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.679" }
%"class.blink::Member.679" = type { %"class.blink::MemberBase.680" }
%"class.blink::MemberBase.680" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.681" = type { %class.scoped_refptr.682 }
%class.scoped_refptr.682 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.683", [4 x i8], %"class.blink::DataRef.685", %"class.blink::DataRef.689", %"class.blink::DataRef.706", %"class.blink::DataRef.724", %"class.blink::DataRef.736", %"class.blink::DataRef.740", %class.scoped_refptr.710, i32, [4 x i8] }>
%"class.WTF::RefCounted.683" = type { %"class.base::RefCounted.684" }
%"class.base::RefCounted.684" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.685" = type { %class.scoped_refptr.686 }
%class.scoped_refptr.686 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.687", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.687" = type { %"class.base::RefCounted.688" }
%"class.base::RefCounted.688" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.689" = type { %class.scoped_refptr.690 }
%class.scoped_refptr.690 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.691", %class.scoped_refptr.693, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.691" = type { %"class.base::RefCounted.692" }
%"class.base::RefCounted.692" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.693 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.694", %"class.std::__1::unique_ptr.700", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.518" }>
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.700" = type { %"class.std::__1::__compressed_pair.701" }
%"class.std::__1::__compressed_pair.701" = type { %"struct.std::__1::__compressed_pair_elem.702" }
%"struct.std::__1::__compressed_pair_elem.702" = type { %"class.blink::Path"* }
%"class.blink::Path" = type opaque
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.708", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.710, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.724" = type { %class.scoped_refptr.725 }
%class.scoped_refptr.725 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.726", [4 x i8], %class.scoped_refptr.728, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.726" = type { %"class.base::RefCounted.727" }
%"class.base::RefCounted.727" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.728 = type { %"class.base::RefCountedData.729"* }
%"class.base::RefCountedData.729" = type { %"class.base::RefCountedThreadSafe.730", %"class.WTF::Vector.731" }
%"class.base::RefCountedThreadSafe.730" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.731" = type { %"class.WTF::VectorBuffer.732" }
%"class.WTF::VectorBuffer.732" = type { %"class.WTF::VectorBufferBase.733" }
%"class.WTF::VectorBufferBase.733" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.736" = type { %class.scoped_refptr.737 }
%class.scoped_refptr.737 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.738", %class.scoped_refptr.710, %class.scoped_refptr.710, %class.scoped_refptr.710 }
%"class.WTF::RefCounted.738" = type { %"class.base::RefCounted.739" }
%"class.base::RefCounted.739" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.740" = type { %class.scoped_refptr.741 }
%class.scoped_refptr.741 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.742", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.742" = type { %"class.base::RefCounted.743" }
%"class.base::RefCounted.743" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.710 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.711", %"class.blink::Persistent.713", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.711" = type { %"class.base::RefCounted.712" }
%"class.base::RefCounted.712" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.713" = type { %"class.blink::PersistentBase.714" }
%"class.blink::PersistentBase.714" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.309" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.385", %"class.blink::HeapHashMap.717" }
%"class.blink::HeapHashMap.717" = type { %"class.WTF::HashMap.720" }
%"class.WTF::HashMap.720" = type { %"class.WTF::HashTable.721" }
%"class.WTF::HashTable.721" = type <{ %"struct.WTF::KeyValuePair.723"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.723" = type opaque
%"class.blink::DataRef.744" = type { %class.scoped_refptr.745 }
%class.scoped_refptr.745 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.746", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.746" = type { %"class.base::RefCounted.747" }
%"class.base::RefCounted.747" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.748" = type { %class.scoped_refptr.749 }
%class.scoped_refptr.749 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.750", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.750" = type { %"class.base::RefCounted.751" }
%"class.base::RefCounted.751" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.752" = type { %class.scoped_refptr.753 }
%class.scoped_refptr.753 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.754", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.754" = type { %"class.base::RefCounted.755" }
%"class.base::RefCounted.755" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.756" = type { %class.scoped_refptr.757 }
%class.scoped_refptr.757 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.758", %class.scoped_refptr.760 }
%"class.WTF::RefCounted.758" = type { %"class.base::RefCounted.759" }
%"class.base::RefCounted.759" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.760 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.776", %"class.blink::StyleVariables", %class.scoped_refptr.760 }
%"class.WTF::RefCounted.776" = type { %"class.base::RefCounted.777" }
%"class.base::RefCounted.777" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.761" = type { %"class.base::RefCounted.762" }
%"class.base::RefCounted.762" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.766" }
%"class.std::__1::unique_ptr.766" = type { %"class.std::__1::__compressed_pair.767" }
%"class.std::__1::__compressed_pair.767" = type { %"struct.std::__1::__compressed_pair_elem.768" }
%"struct.std::__1::__compressed_pair_elem.768" = type { %"class.WTF::Vector.769"* }
%"class.WTF::Vector.769" = type opaque
%"struct.blink::InterpolationValue" = type { %"class.std::__1::unique_ptr.1142", %class.scoped_refptr.1148 }
%"class.std::__1::unique_ptr.1142" = type { %"class.std::__1::__compressed_pair.1143" }
%"class.std::__1::__compressed_pair.1143" = type { %"struct.std::__1::__compressed_pair_elem.1144" }
%"struct.std::__1::__compressed_pair_elem.1144" = type { %"class.blink::InterpolableValue"* }
%"class.blink::InterpolableValue" = type { i32 (...)** }
%class.scoped_refptr.1148 = type { %"class.blink::NonInterpolableValue"* }
%"class.blink::NonInterpolableValue" = type <{ i32 (...)**, %"class.WTF::RefCounted.1149", [4 x i8] }>
%"class.WTF::RefCounted.1149" = type { %"class.base::RefCounted.1150" }
%"class.base::RefCounted.1150" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1151" = type { %"class.WTF::VectorBuffer.1152" }
%"class.WTF::VectorBuffer.1152" = type { %"class.WTF::VectorBufferBase.1153" }
%"class.WTF::VectorBufferBase.1153" = type { %"class.std::__1::unique_ptr.1154"*, i32, i32 }
%"class.std::__1::unique_ptr.1154" = type { %"class.std::__1::__compressed_pair.1498" }
%"class.std::__1::__compressed_pair.1498" = type { %"struct.std::__1::__compressed_pair_elem.1499" }
%"struct.std::__1::__compressed_pair_elem.1499" = type { %"class.blink::InterpolationType::ConversionChecker"* }
%"class.blink::InterpolationType::ConversionChecker" = type { i32 (...)**, %"class.blink::InterpolationType"* }
%"class.blink::InterpolableLength" = type { %"class.blink::InterpolableValue", i32, %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"class.blink::Persistent.1164" }
%"struct.blink::CSSPrimitiveValue::CSSLengthArray" = type { %"class.WTF::Vector.1160", %"class.std::__1::bitset" }
%"class.WTF::Vector.1160" = type { %"class.WTF::VectorBuffer.1161" }
%"class.WTF::VectorBuffer.1161" = type { %"class.WTF::VectorBufferBase.608", [80 x i8] }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.blink::Persistent.1164" = type { %"class.blink::PersistentBase.1165" }
%"class.blink::PersistentBase.1165" = type { %"class.blink::CSSMathExpressionNode"*, %"class.blink::PersistentNodePtr.309" }
%"class.blink::CSSMathExpressionNode" = type opaque
%"class.blink::StyleResolverState" = type <{ %"class.blink::ElementResolveContext", %"class.blink::Document"*, %class.scoped_refptr.1170, %"class.blink::CSSToLengthConversionData", %class.scoped_refptr.1169, %class.scoped_refptr.1169, %"class.blink::CSSAnimationUpdate", i32, [4 x i8], %"class.blink::FontBuilder", %"class.blink::PseudoElement"*, %"class.blink::ElementStyleResources", i32, i8, i8, [2 x i8] }>
%"class.blink::ElementResolveContext" = type <{ %"class.blink::Element"*, %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"*, %class.scoped_refptr.1169, i32, [4 x i8] }>
%class.scoped_refptr.1170 = type { %"class.blink::ComputedStyle"* }
%"class.blink::CSSToLengthConversionData" = type <{ %"class.blink::ComputedStyle"*, %"class.blink::CSSToLengthConversionData::FontSizes", %"class.blink::CSSToLengthConversionData::ViewportSize", float, [4 x i8] }>
%"class.blink::CSSToLengthConversionData::FontSizes" = type <{ float, float, %"class.blink::Font"*, float, [4 x i8] }>
%"class.blink::CSSToLengthConversionData::ViewportSize" = type { %"class.blink::DoubleSize" }
%"class.blink::DoubleSize" = type { double, double }
%class.scoped_refptr.1169 = type { %"class.blink::ComputedStyle"* }
%"class.blink::CSSAnimationUpdate" = type { %"class.blink::HeapVector.1171", %"class.WTF::Vector.1326", %"class.blink::HeapHashSet.1331", %"class.WTF::Vector.1326", %"class.blink::HeapVector.1338", %"class.blink::HeapVector.1345", %"class.blink::HeapHashMap.1352", %"class.WTF::HashSet.1359", %"class.WTF::HashSet.1359", %"class.blink::HeapHashMap.1363", %"class.blink::HeapHashMap.1363", %"class.blink::HeapHashMap.1363", %"class.blink::HeapHashMap.1363" }
%"class.blink::HeapVector.1171" = type { %"class.WTF::Vector.1174" }
%"class.WTF::Vector.1174" = type { %"class.WTF::VectorBuffer.1175" }
%"class.WTF::VectorBuffer.1175" = type { %"class.WTF::VectorBufferBase.1176" }
%"class.WTF::VectorBufferBase.1176" = type { %"class.blink::NewCSSAnimation"*, i32, i32 }
%"class.blink::NewCSSAnimation" = type { %"class.WTF::AtomicString", i64, i64, %"class.blink::Member.1177", %"struct.blink::Timing", %"class.blink::Member.1253", i32, %"class.blink::Member.1265", %"class.WTF::Vector.633" }
%"class.blink::Member.1177" = type { %"class.blink::MemberBase.1178" }
%"class.blink::MemberBase.1178" = type { %"class.blink::InertEffect"* }
%"class.blink::InertEffect" = type { %"class.blink::AnimationEffect", %"class.blink::Member.1200", i8, %"class.absl::optional.1181", %"class.absl::optional.1248" }
%"class.blink::AnimationEffect" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.1179", %"struct.blink::Timing", %"class.blink::Member.1186", %"struct.blink::Timing::CalculatedTiming", i8, %"class.absl::optional.1181", %"class.absl::optional.1195", %"class.blink::AnimationTimeDelta" }
%"class.blink::Member.1179" = type { %"class.blink::MemberBase.1180" }
%"class.blink::MemberBase.1180" = type { %"class.blink::AnimationEffectOwner"* }
%"class.blink::AnimationEffectOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.1186" = type { %"class.blink::MemberBase.1187" }
%"class.blink::MemberBase.1187" = type { %"class.blink::AnimationEffect::EventDelegate"* }
%"class.blink::AnimationEffect::EventDelegate" = type { i32 (...)** }
%"struct.blink::Timing::CalculatedTiming" = type { i32, %"class.absl::optional.1190", %"class.absl::optional.1190", i8, i8, i8, %"class.absl::optional.1181", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta" }
%"class.absl::optional.1190" = type { %"class.absl::optional_internal::optional_data.1191" }
%"class.absl::optional_internal::optional_data.1191" = type { %"class.absl::optional_internal::optional_data_base.1192" }
%"class.absl::optional_internal::optional_data_base.1192" = type { %"class.absl::optional_internal::optional_data_dtor_base.1193" }
%"class.absl::optional_internal::optional_data_dtor_base.1193" = type { i8, %union.anon.1194 }
%union.anon.1194 = type { double }
%"class.absl::optional.1195" = type { %"class.absl::optional_internal::optional_data.1196" }
%"class.absl::optional_internal::optional_data.1196" = type { %"class.absl::optional_internal::optional_data_base.1197" }
%"class.absl::optional_internal::optional_data_base.1197" = type { %"class.absl::optional_internal::optional_data_dtor_base.1198" }
%"class.absl::optional_internal::optional_data_dtor_base.1198" = type { i8, %union.anon.1199 }
%union.anon.1199 = type { i32 }
%"class.blink::AnimationTimeDelta" = type { double }
%"class.blink::Member.1200" = type { %"class.blink::MemberBase.1201" }
%"class.blink::MemberBase.1201" = type { %"class.blink::KeyframeEffectModelBase"* }
%"class.blink::KeyframeEffectModelBase" = type <{ %"class.blink::EffectModel", %"class.blink::HeapVector.1204", %"class.blink::Member.1212", %"class.blink::Member.1236", i32, [4 x i8], double, %"class.blink::AnimationTimeDelta", i32, [4 x i8], %class.scoped_refptr.614, i8, i8, i8, [5 x i8] }>
%"class.blink::EffectModel" = type { i32 (...)** }
%"class.blink::HeapVector.1204" = type { %"class.WTF::Vector.1207" }
%"class.WTF::Vector.1207" = type { %"class.WTF::VectorBuffer.1208" }
%"class.WTF::VectorBuffer.1208" = type { %"class.WTF::VectorBufferBase.1209" }
%"class.WTF::VectorBufferBase.1209" = type { %"class.blink::Member.1210"*, i32, i32 }
%"class.blink::Member.1210" = type { %"class.blink::MemberBase.1465" }
%"class.blink::MemberBase.1465" = type { %"class.blink::Keyframe"* }
%"class.blink::Keyframe" = type { i32 (...)**, %"class.absl::optional.1190", %"class.absl::optional.1468", %class.scoped_refptr.614 }
%"class.absl::optional.1468" = type { %"class.absl::optional_internal::optional_data.1469" }
%"class.absl::optional_internal::optional_data.1469" = type { %"class.absl::optional_internal::optional_data_base.1470" }
%"class.absl::optional_internal::optional_data_base.1470" = type { %"class.absl::optional_internal::optional_data_dtor_base.1471" }
%"class.absl::optional_internal::optional_data_dtor_base.1471" = type { i8, %union.anon.1472 }
%union.anon.1472 = type { i32 }
%"class.blink::Member.1212" = type { %"class.blink::MemberBase.1213" }
%"class.blink::MemberBase.1213" = type { %"class.blink::HeapHashMap.1214"* }
%"class.blink::HeapHashMap.1214" = type { %"class.WTF::HashMap.1217" }
%"class.WTF::HashMap.1217" = type { %"class.WTF::HashTable.1218" }
%"class.WTF::HashTable.1218" = type <{ %"struct.WTF::KeyValuePair.1220"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1220" = type { %"class.blink::PropertyHandle", %"class.blink::Member.1221" }
%"class.blink::Member.1221" = type { %"class.blink::MemberBase.1222" }
%"class.blink::MemberBase.1222" = type { %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* }
%"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup" = type { %"class.blink::HeapVector.1225" }
%"class.blink::HeapVector.1225" = type { %"class.WTF::Vector.1228" }
%"class.WTF::Vector.1228" = type { %"class.WTF::VectorBuffer.1229" }
%"class.WTF::VectorBuffer.1229" = type { %"class.WTF::VectorBufferBase.1230" }
%"class.WTF::VectorBufferBase.1230" = type { %"class.blink::Member.1231"*, i32, i32 }
%"class.blink::Member.1231" = type { %"class.blink::MemberBase.1232" }
%"class.blink::MemberBase.1232" = type { %"class.blink::Keyframe::PropertySpecificKeyframe"* }
%"class.blink::Keyframe::PropertySpecificKeyframe" = type <{ i32 (...)**, double, %class.scoped_refptr.614, i32, [4 x i8] }>
%"class.blink::Member.1236" = type { %"class.blink::MemberBase.1237" }
%"class.blink::MemberBase.1237" = type { %"class.blink::InterpolationEffect"* }
%"class.blink::InterpolationEffect" = type { i8, %"class.blink::HeapVector.1240" }
%"class.blink::HeapVector.1240" = type { %"class.WTF::Vector.1243" }
%"class.WTF::Vector.1243" = type { %"class.WTF::VectorBuffer.1244" }
%"class.WTF::VectorBuffer.1244" = type { %"class.WTF::VectorBufferBase.1245" }
%"class.WTF::VectorBufferBase.1245" = type { %"class.blink::Member.1246"*, i32, i32 }
%"class.blink::Member.1246" = type { %"class.blink::MemberBase.1458" }
%"class.blink::MemberBase.1458" = type { %"class.blink::InterpolationEffect::InterpolationRecord"* }
%"class.blink::InterpolationEffect::InterpolationRecord" = type { %"class.blink::Member.1461", %class.scoped_refptr.614, double, double, double, double }
%"class.blink::Member.1461" = type { %"class.blink::MemberBase.1462" }
%"class.blink::MemberBase.1462" = type { %"class.blink::Interpolation"* }
%"class.blink::Interpolation" = type { i32 (...)** }
%"class.absl::optional.1181" = type { %"class.absl::optional_internal::optional_data.1182" }
%"class.absl::optional_internal::optional_data.1182" = type { %"class.absl::optional_internal::optional_data_base.1183" }
%"class.absl::optional_internal::optional_data_base.1183" = type { %"class.absl::optional_internal::optional_data_dtor_base.1184" }
%"class.absl::optional_internal::optional_data_dtor_base.1184" = type { i8, %union.anon.1185 }
%union.anon.1185 = type { %"class.blink::AnimationTimeDelta" }
%"class.absl::optional.1248" = type { %"class.absl::optional_internal::optional_data.1249" }
%"class.absl::optional_internal::optional_data.1249" = type { %"class.absl::optional_internal::optional_data_base.1250" }
%"class.absl::optional_internal::optional_data_base.1250" = type { %"class.absl::optional_internal::optional_data_dtor_base.1251" }
%"class.absl::optional_internal::optional_data_dtor_base.1251" = type { i8, %union.anon.1252 }
%union.anon.1252 = type { i32 }
%"struct.blink::Timing" = type <{ %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", i32, [4 x i8], double, double, %"class.absl::optional.1181", i32, [4 x i8], %class.scoped_refptr.614, i16, [6 x i8] }>
%"class.blink::Member.1253" = type { %"class.blink::MemberBase.1254" }
%"class.blink::MemberBase.1254" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1257", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::HeapVector.1257" = type { %"class.WTF::Vector.1260" }
%"class.WTF::Vector.1260" = type { %"class.WTF::VectorBuffer.1261" }
%"class.WTF::VectorBuffer.1261" = type { %"class.WTF::VectorBufferBase.1262" }
%"class.WTF::VectorBufferBase.1262" = type { %"class.blink::Member.1263"*, i32, i32 }
%"class.blink::Member.1263" = type opaque
%"class.blink::Member.1265" = type { %"class.blink::MemberBase.1266" }
%"class.blink::MemberBase.1266" = type { %"class.blink::AnimationTimeline"* }
%"class.blink::AnimationTimeline" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.368", i32, [4 x i8], %"class.blink::HeapHashSet.1267", %"class.blink::HeapHashSet.1275", %"class.std::__1::unique_ptr.1282", %"class.absl::optional.1315" }
%"class.blink::HeapHashSet.1267" = type { %"class.WTF::HashSet.1270" }
%"class.WTF::HashSet.1270" = type { %"class.WTF::HashTable.1271" }
%"class.WTF::HashTable.1271" = type <{ %"class.blink::Member.1273"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1273" = type { %"class.blink::MemberBase.1274" }
%"class.blink::MemberBase.1274" = type { %"class.blink::Animation"* }
%"class.blink::Animation" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", [4 x i8], %"class.blink::CompositorAnimationDelegate", %"class.blink::CompositorAnimationClient", %"class.blink::AnimationEffectOwner", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.WTF::String", i32, [4 x i8], double, %"class.absl::optional.1190", %"class.absl::optional.1181", %"class.absl::optional.1181", %"class.absl::optional.1248", %"class.absl::optional.1181", i8, [3 x i8], i32, %"class.blink::Member.1397", %"class.blink::Member.1397", %"class.blink::Member.1399", %"class.blink::Member.368", %"class.blink::Member.1265", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.blink::Member.1401", %"class.blink::Member.1401", %"class.blink::Member.1401", %"class.std::__1::unique_ptr.1403", i8, [3 x i8], i32, %"class.blink::Member.1409", i8, [7 x i8], %"class.base::TimeTicks", i8, i8, i8, [5 x i8] }>
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.1388" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.1376" }
%"class.blink::HeapVector.1376" = type { %"class.WTF::Vector.1379" }
%"class.WTF::Vector.1379" = type { %"class.WTF::VectorBuffer.1380" }
%"class.WTF::VectorBuffer.1380" = type { %"class.WTF::VectorBufferBase.1381", [32 x i8] }
%"class.WTF::VectorBufferBase.1381" = type { %"struct.std::__1::pair.1382"*, i32, i32 }
%"struct.std::__1::pair.1382" = type { %"class.WTF::AtomicString", %"class.blink::Member.1383" }
%"class.blink::Member.1383" = type { %"class.blink::MemberBase.1384" }
%"class.blink::MemberBase.1384" = type { %"class.blink::HeapVector.1385"* }
%"class.blink::HeapVector.1385" = type opaque
%"class.std::__1::unique_ptr.1388" = type { %"class.std::__1::__compressed_pair.1389" }
%"class.std::__1::__compressed_pair.1389" = type { %"struct.std::__1::__compressed_pair_elem.1390" }
%"struct.std::__1::__compressed_pair_elem.1390" = type { %"class.WTF::Vector.1391"* }
%"class.WTF::Vector.1391" = type opaque
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1395" }
%"class.blink::WeakMember.1395" = type { %"class.blink::MemberBase.1396" }
%"class.blink::MemberBase.1396" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::CompositorAnimationDelegate" = type { i32 (...)** }
%"class.blink::CompositorAnimationClient" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.1397" = type { %"class.blink::MemberBase.1398" }
%"class.blink::MemberBase.1398" = type { %"class.blink::ScriptPromiseProperty"* }
%"class.blink::ScriptPromiseProperty" = type opaque
%"class.blink::Member.1399" = type { %"class.blink::MemberBase.1400" }
%"class.blink::MemberBase.1400" = type { %"class.blink::AnimationEffect"* }
%"class.blink::Member.1401" = type { %"class.blink::MemberBase.1402" }
%"class.blink::MemberBase.1402" = type { %"class.blink::Event"* }
%"class.blink::Event" = type opaque
%"class.std::__1::unique_ptr.1403" = type { %"class.std::__1::__compressed_pair.1404" }
%"class.std::__1::__compressed_pair.1404" = type { %"struct.std::__1::__compressed_pair_elem.1405" }
%"struct.std::__1::__compressed_pair_elem.1405" = type { %"class.blink::Animation::CompositorState"* }
%"class.blink::Animation::CompositorState" = type { %"class.absl::optional.1190", %"class.absl::optional.1190", double, i8, i32 }
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::Animation::CompositorAnimationHolder"* }
%"class.blink::Animation::CompositorAnimationHolder" = type { %"class.blink::ThreadState::PrefinalizerRegistration.1413", %"class.std::__1::unique_ptr.1414", %"class.blink::Member.1273" }
%"class.blink::ThreadState::PrefinalizerRegistration.1413" = type { i8 }
%"class.std::__1::unique_ptr.1414" = type { %"class.std::__1::__compressed_pair.1415" }
%"class.std::__1::__compressed_pair.1415" = type { %"struct.std::__1::__compressed_pair_elem.1416" }
%"struct.std::__1::__compressed_pair_elem.1416" = type { %"class.blink::CompositorAnimation"* }
%"class.blink::CompositorAnimation" = type opaque
%"class.blink::HeapHashSet.1275" = type { %"class.WTF::HashSet.1278" }
%"class.WTF::HashSet.1278" = type { %"class.WTF::HashTable.1279" }
%"class.WTF::HashTable.1279" = type <{ %"class.blink::WeakMember.1281"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1281" = type opaque
%"class.std::__1::unique_ptr.1282" = type { %"class.std::__1::__compressed_pair.1283" }
%"class.std::__1::__compressed_pair.1283" = type { %"struct.std::__1::__compressed_pair_elem.1284" }
%"struct.std::__1::__compressed_pair_elem.1284" = type { %"class.blink::CompositorAnimationTimeline"* }
%"class.blink::CompositorAnimationTimeline" = type { %class.scoped_refptr.1285 }
%class.scoped_refptr.1285 = type { %"class.cc::AnimationTimeline"* }
%"class.cc::AnimationTimeline" = type <{ i32 (...)**, %"class.base::RefCounted.1286", [4 x i8], %"class.std::__1::unordered_map", i32, [4 x i8], %"class.cc::AnimationHost"*, i8, i8, [6 x i8] }>
%"class.base::RefCounted.1286" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.1287" }
%"class.std::__1::__hash_table.1287" = type <{ %"class.std::__1::unique_ptr.1288", %"class.std::__1::__compressed_pair.1298", %"class.std::__1::__compressed_pair.1303", %"class.std::__1::__compressed_pair.1307", [4 x i8] }>
%"class.std::__1::unique_ptr.1288" = type { %"class.std::__1::__compressed_pair.1289" }
%"class.std::__1::__compressed_pair.1289" = type { %"struct.std::__1::__compressed_pair_elem.1290", %"struct.std::__1::__compressed_pair_elem.1292" }
%"struct.std::__1::__compressed_pair_elem.1290" = type { %"struct.std::__1::__hash_node_base.1291"** }
%"struct.std::__1::__hash_node_base.1291" = type { %"struct.std::__1::__hash_node_base.1291"* }
%"struct.std::__1::__compressed_pair_elem.1292" = type { %"class.std::__1::__bucket_list_deallocator.1293" }
%"class.std::__1::__bucket_list_deallocator.1293" = type { %"class.std::__1::__compressed_pair.1294" }
%"class.std::__1::__compressed_pair.1294" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"class.std::__1::__compressed_pair.1298" = type { %"struct.std::__1::__compressed_pair_elem.1299" }
%"struct.std::__1::__compressed_pair_elem.1299" = type { %"struct.std::__1::__hash_node_base.1291" }
%"class.std::__1::__compressed_pair.1303" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"class.std::__1::__compressed_pair.1307" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"class.cc::AnimationHost" = type opaque
%"class.absl::optional.1315" = type { %"class.absl::optional_internal::optional_data.1316" }
%"class.absl::optional_internal::optional_data.1316" = type { %"class.absl::optional_internal::optional_data_base.1317" }
%"class.absl::optional_internal::optional_data_base.1317" = type { %"class.absl::optional_internal::optional_data_dtor_base.1318" }
%"class.absl::optional_internal::optional_data_dtor_base.1318" = type { i8, %union.anon.1319 }
%union.anon.1319 = type { %"struct.blink::AnimationTimeline::PhaseAndTime" }
%"struct.blink::AnimationTimeline::PhaseAndTime" = type { i32, %"class.absl::optional.1320" }
%"class.absl::optional.1320" = type { %"class.absl::optional_internal::optional_data.1321" }
%"class.absl::optional_internal::optional_data.1321" = type { %"class.absl::optional_internal::optional_data_base.1322" }
%"class.absl::optional_internal::optional_data_base.1322" = type { %"class.absl::optional_internal::optional_data_dtor_base.1323" }
%"class.absl::optional_internal::optional_data_dtor_base.1323" = type { i8, %union.anon.1324 }
%union.anon.1324 = type { %"class.base::TimeDelta" }
%"class.blink::HeapHashSet.1331" = type { %"class.WTF::HashSet.1334" }
%"class.WTF::HashSet.1334" = type { %"class.WTF::HashTable.1335" }
%"class.WTF::HashTable.1335" = type <{ %"class.blink::Member.1337"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1337" = type { %"class.blink::MemberBase.1473" }
%"class.blink::MemberBase.1473" = type { %"class.blink::Animation"* }
%"class.WTF::Vector.1326" = type { %"class.WTF::VectorBuffer.1327" }
%"class.WTF::VectorBuffer.1327" = type { %"class.WTF::VectorBufferBase.1328" }
%"class.WTF::VectorBufferBase.1328" = type { i32*, i32, i32 }
%"class.blink::HeapVector.1338" = type { %"class.WTF::Vector.1341" }
%"class.WTF::Vector.1341" = type { %"class.WTF::VectorBuffer.1342" }
%"class.WTF::VectorBuffer.1342" = type { %"class.WTF::VectorBufferBase.1343" }
%"class.WTF::VectorBufferBase.1343" = type { %"class.blink::UpdatedCSSAnimation"*, i32, i32 }
%"class.blink::UpdatedCSSAnimation" = type { i32, %"class.blink::Member.1273", %"class.blink::Member.1177", %"struct.blink::Timing", %"class.blink::Member.1253", i32, %"class.blink::Member.1265", %"class.WTF::Vector.633" }
%"class.blink::HeapVector.1345" = type { %"class.WTF::Vector.1348" }
%"class.WTF::Vector.1348" = type { %"class.WTF::VectorBuffer.1349" }
%"class.WTF::VectorBuffer.1349" = type { %"class.WTF::VectorBufferBase.1350" }
%"class.WTF::VectorBufferBase.1350" = type { %"class.blink::Member.1273"*, i32, i32 }
%"class.blink::HeapHashMap.1352" = type { %"class.WTF::HashMap.1355" }
%"class.WTF::HashMap.1355" = type { %"class.WTF::HashTable.1356" }
%"class.WTF::HashTable.1356" = type <{ %"struct.WTF::KeyValuePair.1358"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1358" = type { %"class.blink::PropertyHandle", %"class.blink::Member.1484" }
%"class.blink::Member.1484" = type { %"class.blink::MemberBase.1485" }
%"class.blink::MemberBase.1485" = type { %"struct.blink::CSSAnimationUpdate::NewTransition"* }
%"struct.blink::CSSAnimationUpdate::NewTransition" = type { i32 (...)**, %"class.blink::PropertyHandle", %class.scoped_refptr.1169, %class.scoped_refptr.1169, %class.scoped_refptr.1169, double, %"class.blink::Member.1177" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::PropertyHandle"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.1363" = type { %"class.WTF::HashMap.1366" }
%"class.WTF::HashMap.1366" = type { %"class.WTF::HashTable.1367" }
%"class.WTF::HashTable.1367" = type <{ %"struct.WTF::KeyValuePair.1369"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1369" = type { %"class.blink::PropertyHandle", %"class.blink::Member.1474" }
%"class.blink::Member.1474" = type { %"class.blink::MemberBase.1475" }
%"class.blink::MemberBase.1475" = type { %"class.blink::HeapVector.1476"* }
%"class.blink::HeapVector.1476" = type { %"class.WTF::Vector.1479" }
%"class.WTF::Vector.1479" = type { %"class.WTF::VectorBuffer.1480" }
%"class.WTF::VectorBuffer.1480" = type { %"class.WTF::VectorBufferBase.1481", [8 x i8] }
%"class.WTF::VectorBufferBase.1481" = type { %"class.blink::Member.1461"*, i32, i32 }
%"class.blink::FontBuilder" = type <{ %"class.blink::Document"*, %"class.blink::TreeScope"*, %"class.blink::FontDescription", i32, [4 x i8] }>
%"class.blink::PseudoElement" = type opaque
%"class.blink::ElementStyleResources" = type { %"class.blink::Element"*, %"class.WTF::HashSet.1370", %"class.WTF::HashSet.1370", float, %"class.blink::PseudoElement"* }
%"class.WTF::HashSet.1370" = type { %"class.WTF::HashTable.1371" }
%"class.WTF::HashTable.1371" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.368", %class.scoped_refptr.1169, %"class.blink::SelectorFilter", %"class.blink::Member.1446", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1422" }
%"class.blink::HeapHashMap.1422" = type { %"class.WTF::HashMap.1425" }
%"class.WTF::HashMap.1425" = type { %"class.WTF::HashTable.1426" }
%"class.WTF::HashTable.1426" = type <{ %"struct.WTF::KeyValuePair.1428"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1428" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1429", %"class.std::__1::unique_ptr.1440" }
%"class.blink::HeapVector.1429" = type { %"class.WTF::Vector.1432" }
%"class.WTF::Vector.1432" = type { %"class.WTF::VectorBuffer.1433" }
%"class.WTF::VectorBuffer.1433" = type { %"class.WTF::VectorBufferBase.1434" }
%"class.WTF::VectorBufferBase.1434" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.385", %"class.WTF::Vector.1435" }
%"class.WTF::Vector.1435" = type { %"class.WTF::VectorBuffer.1436" }
%"class.WTF::VectorBuffer.1436" = type { %"class.WTF::VectorBufferBase.1328", [16 x i8] }
%"class.std::__1::unique_ptr.1440" = type { %"class.std::__1::__compressed_pair.1441" }
%"class.std::__1::__compressed_pair.1441" = type { %"struct.std::__1::__compressed_pair_elem.1442" }
%"struct.std::__1::__compressed_pair_elem.1442" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1446" = type { %"class.blink::MemberBase.1447" }
%"class.blink::MemberBase.1447" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.std::__1::unique_ptr.1448" = type { %"class.std::__1::__compressed_pair.1449" }
%"class.std::__1::__compressed_pair.1449" = type { %"struct.std::__1::__compressed_pair_elem.1450" }
%"struct.std::__1::__compressed_pair_elem.1450" = type { %"class.blink::InheritedLengthChecker"* }
%"class.blink::InheritedLengthChecker" = type { %"class.blink::CSSInterpolationType::CSSConversionChecker", %"class.blink::CSSProperty"*, %"class.blink::Length" }
%"class.blink::CSSInterpolationType::CSSConversionChecker" = type { %"class.blink::InterpolationType::ConversionChecker" }
%"struct.blink::PairwiseInterpolationValue" = type { %"class.std::__1::unique_ptr.1142", %"class.std::__1::unique_ptr.1142", %class.scoped_refptr.1148 }
%"class.blink::CSSPrimitiveValue" = type { %"class.blink::CSSValue" }
%"class.blink::ScopedCSSValue" = type { %"class.blink::CSSValue"*, %"class.blink::TreeScope"* }
%"class.blink::InterpolationEnvironment" = type { i32 (...)**, %"class.blink::InterpolationTypesMap"* }
%"class.blink::InterpolationTypesMap" = type { i32 (...)** }
%"class.blink::UnderlyingValueOwner" = type { %"class.blink::UnderlyingValue", %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* }
%"class.blink::UnderlyingValue" = type { i32 (...)** }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN5blink20CSSInterpolationTypeD2Ev = comdat any

$_ZN5blink26CSSLengthInterpolationTypeD0Ev = comdat any

$_ZNK5blink17InterpolationType20MaybeConvertPairwiseERKNS_8Keyframe24PropertySpecificKeyframeES4_RKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS0_17ConversionCheckerENSD_14default_deleteISF_EEEELj0ENSB_18PartitionAllocatorEEE = comdat any

$_ZNK5blink17InterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd = comdat any

$_ZNK5blink20CSSInterpolationType33PreInterpolationCompositeIfNeededENS_18InterpolationValueERKS1_NS_11EffectModel18CompositeOperationERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS8_14default_deleteISB_EEEELj0ENS6_18PartitionAllocatorEEE = comdat any

$_ZN5blink17InterpolationTypeD2Ev = comdat any

$_ZN5blink17InterpolationTypeD0Ev = comdat any

$_ZNK5blink17InterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_ = comdat any

$_ZN5blink22InheritedLengthCheckerD2Ev = comdat any

$_ZN5blink22InheritedLengthCheckerD0Ev = comdat any

$_ZNK5blink20CSSInterpolationType20CSSConversionChecker7IsValidERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueE = comdat any

$_ZNK5blink22InheritedLengthChecker7IsValidERKNS_18StyleResolverStateERKNS_18InterpolationValueE = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_22InheritedLengthCheckerENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS2_14default_deleteIS6_EEEEEEmm = comdat any

$_ZTVN5blink17InterpolationTypeE = comdat any

$_ZTVN5blink22InheritedLengthCheckerE = comdat any

@_ZTVN5blink26CSSLengthInterpolationTypeE = hidden unnamed_addr constant { [18 x i8*] } { [18 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::CSSInterpolationType"*)* @_ZN5blink20CSSInterpolationTypeD2Ev to i8*), i8* bitcast (void (%"class.blink::CSSLengthInterpolationType"*)* @_ZN5blink26CSSLengthInterpolationTypeD0Ev to i8*), i8* bitcast (void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1151"*)* @_ZNK5blink17InterpolationType20MaybeConvertPairwiseERKNS_8Keyframe24PropertySpecificKeyframeES4_RKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS0_17ConversionCheckerENSD_14default_deleteISF_EEEELj0ENSB_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1151"*)* @_ZNK5blink20CSSInterpolationType18MaybeConvertSingleERKNS_8Keyframe24PropertySpecificKeyframeERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENSD_14default_deleteISG_EEEELj0ENSB_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::CSSLengthInterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink26CSSLengthInterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_ to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::InterpolationEnvironment"*)* @_ZNK5blink20CSSInterpolationType27MaybeConvertUnderlyingValueERKNS_24InterpolationEnvironmentE to i8*), i8* bitcast (void (%"class.blink::InterpolationType"*, %"class.blink::UnderlyingValueOwner"*, double, %"struct.blink::InterpolationValue"*, double)* @_ZNK5blink17InterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd to i8*), i8* bitcast (void (%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::InterpolationEnvironment"*)* @_ZNK5blink20CSSInterpolationType5ApplyERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_24InterpolationEnvironmentE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSLengthInterpolationType"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1151"*)* @_ZNK5blink26CSSLengthInterpolationType19MaybeConvertNeutralERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSLengthInterpolationType"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.1151"*)* @_ZNK5blink26CSSLengthInterpolationType19MaybeConvertInitialERKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSLengthInterpolationType"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.1151"*)* @_ZNK5blink26CSSLengthInterpolationType19MaybeConvertInheritERKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSLengthInterpolationType"*, %"class.blink::CSSValue"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.1151"*)* @_ZNK5blink26CSSLengthInterpolationType17MaybeConvertValueERKNS_8CSSValueEPKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS9_14default_deleteISC_EEEELj0ENS7_18PartitionAllocatorEEE to i8*), i8* bitcast (%"class.blink::CSSValue"* (%"class.blink::CSSLengthInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"*)* @_ZNK5blink26CSSLengthInterpolationType14CreateCSSValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERKNS_18StyleResolverStateE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*, i32, %"class.WTF::Vector.1151"*)* @_ZNK5blink20CSSInterpolationType33PreInterpolationCompositeIfNeededENS_18InterpolationValueERKS1_NS_11EffectModel18CompositeOperationERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS8_14default_deleteISB_EEEELj0ENS6_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSLengthInterpolationType"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink26CSSLengthInterpolationType43MaybeConvertStandardPropertyUnderlyingValueERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::CSSLengthInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"*)* @_ZNK5blink26CSSLengthInterpolationType26ApplyStandardPropertyValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_18StyleResolverStateE to i8*)] }, align 8
@_ZTVN5blink20CSSInterpolationTypeE = external unnamed_addr constant { [18 x i8*] }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZTVN5blink17InterpolationTypeE = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InterpolationType"*)* @_ZN5blink17InterpolationTypeD2Ev to i8*), i8* bitcast (void (%"class.blink::InterpolationType"*)* @_ZN5blink17InterpolationTypeD0Ev to i8*), i8* bitcast (void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1151"*)* @_ZNK5blink17InterpolationType20MaybeConvertPairwiseERKNS_8Keyframe24PropertySpecificKeyframeES4_RKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS0_17ConversionCheckerENSD_14default_deleteISF_EEEELj0ENSB_18PartitionAllocatorEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink17InterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_ to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.blink::InterpolationType"*, %"class.blink::UnderlyingValueOwner"*, double, %"struct.blink::InterpolationValue"*, double)* @_ZNK5blink17InterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVN5blink22InheritedLengthCheckerE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InheritedLengthChecker"*)* @_ZN5blink22InheritedLengthCheckerD2Ev to i8*), i8* bitcast (void (%"class.blink::InheritedLengthChecker"*)* @_ZN5blink22InheritedLengthCheckerD0Ev to i8*), i8* bitcast (i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink20CSSInterpolationType20CSSConversionChecker7IsValidERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueE to i8*), i8* bitcast (i1 (%"class.blink::InheritedLengthChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink22InheritedLengthChecker7IsValidERKNS_18StyleResolverStateERKNS_18InterpolationValueE to i8*)] }, comdat, align 8
@.str.2 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.3 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEEEEPKcv = private unnamed_addr constant [185 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::unique_ptr<blink::InterpolationType::ConversionChecker, std::__1::default_delete<blink::InterpolationType::ConversionChecker> >]\00", align 1

@_ZN5blink26CSSLengthInterpolationTypeC1ENS_14PropertyHandleEPKNS_20PropertyRegistrationE = hidden unnamed_addr alias void (%"class.blink::CSSLengthInterpolationType"*, %"class.blink::PropertyHandle"*, %"class.blink::PropertyRegistration"*), void (%"class.blink::CSSLengthInterpolationType"*, %"class.blink::PropertyHandle"*, %"class.blink::PropertyRegistration"*)* @_ZN5blink26CSSLengthInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26CSSLengthInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSLengthInterpolationType"*, %"class.blink::PropertyHandle"* nocapture readonly byval(%"class.blink::PropertyHandle") align 8, %"class.blink::PropertyRegistration"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::PropertyHandle", align 8
  %5 = getelementptr inbounds %"class.blink::CSSLengthInterpolationType", %"class.blink::CSSLengthInterpolationType"* %0, i64 0, i32 0
  %6 = bitcast %"class.blink::PropertyHandle"* %4 to i8*
  %7 = bitcast %"class.blink::PropertyHandle"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* nonnull align 8 %7, i64 16, i1 false) #9
  %8 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #9
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !2

26:                                               ; preds = %17
  tail call void @llvm.trap() #9
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %3, %12, %27
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %5, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %4, %"class.blink::PropertyRegistration"* %2) #9
  %30 = getelementptr inbounds %"class.blink::CSSLengthInterpolationType", %"class.blink::CSSLengthInterpolationType"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink26CSSLengthInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  %31 = getelementptr inbounds %"class.blink::CSSLengthInterpolationType", %"class.blink::CSSLengthInterpolationType"* %0, i64 0, i32 1
  %32 = getelementptr inbounds %"class.blink::CSSLengthInterpolationType", %"class.blink::CSSLengthInterpolationType"* %0, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0
  %33 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::CSSLengthInterpolationType", %"class.blink::CSSLengthInterpolationType"* %0, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8, !noalias !3
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %65, label %37

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4, !noalias !3
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  br i1 %41, label %44, label %54

44:                                               ; preds = %37
  %45 = zext i32 %43 to i33
  %46 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %45, i33 1) #9
  %47 = extractvalue { i33, i1 } %46, 1
  %48 = extractvalue { i33, i1 } %46, 0
  %49 = icmp slt i33 %48, 0
  %50 = or i1 %47, %49
  br i1 %50, label %51, label %52, !prof !2

51:                                               ; preds = %44
  tail call void @llvm.trap() #9, !noalias !3
  unreachable

52:                                               ; preds = %44
  %53 = trunc i33 %48 to i32
  store i32 %53, i32* %42, align 4, !noalias !3
  br label %54

54:                                               ; preds = %52, %37
  %55 = phi i32 [ %53, %52 ], [ %43, %37 ]
  %56 = load atomic i32, i32* %38 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  %60 = add i32 %55, -1
  store i32 %60, i32* %42, align 4
  br label %61

61:                                               ; preds = %59, %54
  %62 = phi i32 [ %60, %59 ], [ %55, %54 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #9
  br label %65

65:                                               ; preds = %29, %61, %64
  %66 = tail call i32 @_ZN5blink23LengthPropertyFunctions13GetValueRangeERKNS_11CSSPropertyE(%"class.blink::CSSProperty"* dereferenceable(24) %33) #9
  store i32 %66, i32* %31, align 8
  br i1 %11, label %80, label %67

67:                                               ; preds = %65
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %76
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #9
  br label %80

80:                                               ; preds = %65, %76, %79
  ret void
}

declare void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"*, %"class.blink::PropertyHandle"* byval(%"class.blink::PropertyHandle") align 8, %"class.blink::PropertyRegistration"*) unnamed_addr #1

declare i32 @_ZN5blink23LengthPropertyFunctions13GetValueRangeERKNS_11CSSPropertyE(%"class.blink::CSSProperty"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK5blink26CSSLengthInterpolationType13EffectiveZoomERKNS_13ComputedStyleE(%"class.blink::CSSLengthInterpolationType"* nocapture readonly, %"class.blink::ComputedStyle"* nocapture readonly dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSLengthInterpolationType", %"class.blink::CSSLengthInterpolationType"* %0, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0
  %4 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::CSSLengthInterpolationType", %"class.blink::CSSLengthInterpolationType"* %0, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8, !noalias !6
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %36, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4, !noalias !6
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  br i1 %12, label %15, label %25

15:                                               ; preds = %8
  %16 = zext i32 %14 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #9
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !2

22:                                               ; preds = %15
  tail call void @llvm.trap() #9, !noalias !6
  unreachable

23:                                               ; preds = %15
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %13, align 4, !noalias !6
  br label %25

25:                                               ; preds = %23, %8
  %26 = phi i32 [ %24, %23 ], [ %14, %8 ]
  %27 = load atomic i32, i32* %9 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %25
  %31 = add i32 %26, -1
  store i32 %31, i32* %13, align 4
  br label %32

32:                                               ; preds = %30, %25
  %33 = phi i32 [ %31, %30 ], [ %26, %25 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %6) #9
  br label %36

36:                                               ; preds = %2, %32, %35
  %37 = tail call zeroext i1 @_ZN5blink23LengthPropertyFunctions14IsZoomedLengthERKNS_11CSSPropertyE(%"class.blink::CSSProperty"* dereferenceable(24) %4) #9
  br i1 %37, label %38, label %45

38:                                               ; preds = %36
  %39 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %40 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %40, i64 0, i32 2, i32 0, i32 0
  %42 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %42, i64 0, i32 6
  %44 = load float, float* %43, align 8
  br label %45

45:                                               ; preds = %36, %38
  %46 = phi float [ %44, %38 ], [ 1.000000e+00, %36 ]
  ret float %46
}

declare zeroext i1 @_ZN5blink23LengthPropertyFunctions14IsZoomedLengthERKNS_11CSSPropertyE(%"class.blink::CSSProperty"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink26CSSLengthInterpolationType19MaybeConvertNeutralERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* noalias nocapture sret, %"class.blink::CSSLengthInterpolationType"* nocapture readnone, %"struct.blink::InterpolationValue"* nocapture readnone dereferenceable(16), %"class.WTF::Vector.1151"* nocapture readnone dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = tail call %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength13CreateNeutralEv() #9
  %6 = ptrtoint %"class.blink::InterpolableLength"* %5 to i64
  %7 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %9 = bitcast %class.scoped_refptr.1148* %8 to i64*
  store i64 0, i64* %9, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength13CreateNeutralEv() local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink26CSSLengthInterpolationType19MaybeConvertInitialERKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* noalias nocapture sret, %"class.blink::CSSLengthInterpolationType"* nocapture readonly, %"class.blink::StyleResolverState"* nocapture readonly dereferenceable(600), %"class.WTF::Vector.1151"* nocapture readnone dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"class.blink::Length"*
  %7 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %6, i64 0, i32 2
  store i64 -6148914691236517206, i64* %5, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 7, i1 false) #9
  %9 = getelementptr inbounds %"class.blink::CSSLengthInterpolationType", %"class.blink::CSSLengthInterpolationType"* %1, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0
  %10 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::CSSLengthInterpolationType", %"class.blink::CSSLengthInterpolationType"* %1, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8, !noalias !9
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %42, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4, !noalias !9
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  br i1 %18, label %21, label %31

21:                                               ; preds = %14
  %22 = zext i32 %20 to i33
  %23 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %22, i33 1) #9
  %24 = extractvalue { i33, i1 } %23, 1
  %25 = extractvalue { i33, i1 } %23, 0
  %26 = icmp slt i33 %25, 0
  %27 = or i1 %24, %26
  br i1 %27, label %28, label %29, !prof !2

28:                                               ; preds = %21
  tail call void @llvm.trap() #9, !noalias !9
  unreachable

29:                                               ; preds = %21
  %30 = trunc i33 %25 to i32
  store i32 %30, i32* %19, align 4, !noalias !9
  br label %31

31:                                               ; preds = %29, %14
  %32 = phi i32 [ %30, %29 ], [ %20, %14 ]
  %33 = load atomic i32, i32* %15 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %31
  %37 = add i32 %32, -1
  store i32 %37, i32* %19, align 4
  br label %38

38:                                               ; preds = %36, %31
  %39 = phi i32 [ %37, %36 ], [ %32, %31 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %12) #9
  br label %42

42:                                               ; preds = %4, %38, %41
  %43 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %2, i64 0, i32 1
  %44 = load %"class.blink::Document"*, %"class.blink::Document"** %43, align 8
  %45 = tail call dereferenceable(80) %"class.blink::StyleResolver"* @_ZNK5blink8Document16GetStyleResolverEv(%"class.blink::Document"* %44) #9
  %46 = tail call dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink13StyleResolver12InitialStyleEv(%"class.blink::StyleResolver"* %45) #9
  %47 = call zeroext i1 @_ZN5blink23LengthPropertyFunctions16GetInitialLengthERKNS_11CSSPropertyERKNS_13ComputedStyleERNS_6LengthE(%"class.blink::CSSProperty"* dereferenceable(24) %10, %"class.blink::ComputedStyle"* dereferenceable(104) %46, %"class.blink::Length"* nonnull dereferenceable(8) %6) #9
  br i1 %47, label %50, label %48

48:                                               ; preds = %42
  %49 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 16, i1 false) #9
  br label %56

50:                                               ; preds = %42
  %51 = call %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength18MaybeConvertLengthERKNS_6LengthEf(%"class.blink::Length"* nonnull dereferenceable(8) %6, float 1.000000e+00) #9
  %52 = ptrtoint %"class.blink::InterpolableLength"* %51 to i64
  %53 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  store i64 %52, i64* %53, align 8
  %54 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %55 = bitcast %class.scoped_refptr.1148* %54 to i64*
  store i64 0, i64* %55, align 8
  br label %56

56:                                               ; preds = %50, %48
  %57 = load i8, i8* %8, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %6) #9
  br label %60

60:                                               ; preds = %56, %59
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #9
  ret void
}

declare zeroext i1 @_ZN5blink23LengthPropertyFunctions16GetInitialLengthERKNS_11CSSPropertyERKNS_13ComputedStyleERNS_6LengthE(%"class.blink::CSSProperty"* dereferenceable(24), %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::Length"* dereferenceable(8)) local_unnamed_addr #1

declare dereferenceable(80) %"class.blink::StyleResolver"* @_ZNK5blink8Document16GetStyleResolverEv(%"class.blink::Document"*) local_unnamed_addr #1

declare dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink13StyleResolver12InitialStyleEv(%"class.blink::StyleResolver"*) local_unnamed_addr #1

declare %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength18MaybeConvertLengthERKNS_6LengthEf(%"class.blink::Length"* dereferenceable(8), float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink26CSSLengthInterpolationType19MaybeConvertInheritERKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* noalias nocapture sret, %"class.blink::CSSLengthInterpolationType"* nocapture readonly, %"class.blink::StyleResolverState"* nocapture readonly dereferenceable(600), %"class.WTF::Vector.1151"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"class.blink::Length"*
  %7 = alloca %"class.std::__1::unique_ptr.1448", align 8
  %8 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %2, i64 0, i32 4, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = icmp eq %"class.blink::ComputedStyle"* %9, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %4
  %12 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #9
  br label %183

13:                                               ; preds = %4
  %14 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %6, i64 0, i32 2
  store i64 -6148914691236517206, i64* %5, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 7, i1 false) #9
  %16 = getelementptr inbounds %"class.blink::CSSLengthInterpolationType", %"class.blink::CSSLengthInterpolationType"* %1, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0
  %17 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::CSSLengthInterpolationType", %"class.blink::CSSLengthInterpolationType"* %1, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8, !noalias !12
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %49, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4, !noalias !12
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  br i1 %25, label %28, label %38

28:                                               ; preds = %21
  %29 = zext i32 %27 to i33
  %30 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %29, i33 1) #9
  %31 = extractvalue { i33, i1 } %30, 1
  %32 = extractvalue { i33, i1 } %30, 0
  %33 = icmp slt i33 %32, 0
  %34 = or i1 %31, %33
  br i1 %34, label %35, label %36, !prof !2

35:                                               ; preds = %28
  tail call void @llvm.trap() #9, !noalias !12
  unreachable

36:                                               ; preds = %28
  %37 = trunc i33 %32 to i32
  store i32 %37, i32* %26, align 4, !noalias !12
  br label %38

38:                                               ; preds = %36, %21
  %39 = phi i32 [ %37, %36 ], [ %27, %21 ]
  %40 = load atomic i32, i32* %22 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %45

43:                                               ; preds = %38
  %44 = add i32 %39, -1
  store i32 %44, i32* %26, align 4
  br label %45

45:                                               ; preds = %43, %38
  %46 = phi i32 [ %44, %43 ], [ %39, %38 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %19) #9
  br label %49

49:                                               ; preds = %13, %45, %48
  %50 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %51 = call zeroext i1 @_ZN5blink23LengthPropertyFunctions9GetLengthERKNS_11CSSPropertyERKNS_13ComputedStyleERNS_6LengthE(%"class.blink::CSSProperty"* dereferenceable(24) %17, %"class.blink::ComputedStyle"* dereferenceable(104) %50, %"class.blink::Length"* nonnull dereferenceable(8) %6) #9
  %52 = bitcast %"class.std::__1::unique_ptr.1448"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #9
  %53 = bitcast %"class.blink::CSSProperty"** %16 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8, !noalias !15
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %85, label %57

57:                                               ; preds = %49
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4, !noalias !15
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %74

64:                                               ; preds = %57
  %65 = zext i32 %63 to i33
  %66 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %65, i33 1) #9
  %67 = extractvalue { i33, i1 } %66, 1
  %68 = extractvalue { i33, i1 } %66, 0
  %69 = icmp slt i33 %68, 0
  %70 = or i1 %67, %69
  br i1 %70, label %71, label %72, !prof !2

71:                                               ; preds = %64
  call void @llvm.trap() #9, !noalias !15
  unreachable

72:                                               ; preds = %64
  %73 = trunc i33 %68 to i32
  store i32 %73, i32* %62, align 4, !noalias !15
  br label %74

74:                                               ; preds = %72, %57
  %75 = phi i32 [ %73, %72 ], [ %63, %57 ]
  %76 = load atomic i32, i32* %58 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %81

79:                                               ; preds = %74
  %80 = add i32 %75, -1
  store i32 %80, i32* %62, align 4
  br label %81

81:                                               ; preds = %79, %74
  %82 = phi i32 [ %80, %79 ], [ %75, %74 ]
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %81
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #9
  br label %85

85:                                               ; preds = %49, %81, %84
  %86 = call noalias i8* @malloc(i64 32) #9
  %87 = getelementptr inbounds i8, i8* %86, i64 8
  %88 = bitcast i8* %87 to %"class.blink::InterpolationType"**
  store %"class.blink::InterpolationType"* null, %"class.blink::InterpolationType"** %88, align 8
  %89 = bitcast i8* %86 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink22InheritedLengthCheckerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %89, align 8
  %90 = getelementptr inbounds i8, i8* %86, i64 16
  %91 = bitcast i8* %90 to i64*
  store i64 %54, i64* %91, align 8
  %92 = getelementptr inbounds i8, i8* %86, i64 24
  %93 = bitcast i8* %92 to i64*
  %94 = load i64, i64* %5, align 8
  store i64 %94, i64* %93, align 4
  %95 = and i64 %94, 280375465082880
  %96 = icmp eq i64 %95, 8796093022208
  br i1 %96, label %97, label %99

97:                                               ; preds = %85
  %98 = bitcast i8* %92 to %"class.blink::Length"*
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %98) #9
  br label %99

99:                                               ; preds = %85, %97
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.1448", %"class.std::__1::unique_ptr.1448"* %7, i64 0, i32 0, i32 0, i32 0
  %101 = bitcast %"class.std::__1::unique_ptr.1448"* %7 to i8**
  store i8* %86, i8** %101, align 8
  %102 = getelementptr inbounds %"class.WTF::Vector.1151", %"class.WTF::Vector.1151"* %3, i64 0, i32 0, i32 0, i32 2
  %103 = load i32, i32* %102, align 4
  %104 = getelementptr inbounds %"class.WTF::Vector.1151", %"class.WTF::Vector.1151"* %3, i64 0, i32 0, i32 0, i32 1
  %105 = load i32, i32* %104, align 8
  %106 = icmp eq i32 %103, %105
  br i1 %106, label %116, label %107, !prof !2

107:                                              ; preds = %99
  %108 = ptrtoint i8* %86 to i64
  %109 = getelementptr inbounds %"class.WTF::Vector.1151", %"class.WTF::Vector.1151"* %3, i64 0, i32 0, i32 0, i32 0
  %110 = load %"class.std::__1::unique_ptr.1154"*, %"class.std::__1::unique_ptr.1154"** %109, align 8
  %111 = zext i32 %103 to i64
  %112 = getelementptr inbounds %"class.std::__1::unique_ptr.1154", %"class.std::__1::unique_ptr.1154"* %110, i64 %111
  store %"class.blink::InheritedLengthChecker"* null, %"class.blink::InheritedLengthChecker"** %100, align 8
  %113 = bitcast %"class.std::__1::unique_ptr.1154"* %112 to i64*
  store i64 %108, i64* %113, align 8
  %114 = load i32, i32* %102, align 4
  %115 = add i32 %114, 1
  store i32 %115, i32* %102, align 4
  br label %117

116:                                              ; preds = %99
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_22InheritedLengthCheckerENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.1151"* %3, %"class.std::__1::unique_ptr.1448"* nonnull dereferenceable(8) %7) #9
  br label %117

117:                                              ; preds = %107, %116
  %118 = load %"class.blink::InheritedLengthChecker"*, %"class.blink::InheritedLengthChecker"** %100, align 8
  store %"class.blink::InheritedLengthChecker"* null, %"class.blink::InheritedLengthChecker"** %100, align 8
  %119 = icmp eq %"class.blink::InheritedLengthChecker"* %118, null
  br i1 %119, label %125, label %120

120:                                              ; preds = %117
  %121 = bitcast %"class.blink::InheritedLengthChecker"* %118 to void (%"class.blink::InheritedLengthChecker"*)***
  %122 = load void (%"class.blink::InheritedLengthChecker"*)**, void (%"class.blink::InheritedLengthChecker"*)*** %121, align 8
  %123 = getelementptr inbounds void (%"class.blink::InheritedLengthChecker"*)*, void (%"class.blink::InheritedLengthChecker"*)** %122, i64 1
  %124 = load void (%"class.blink::InheritedLengthChecker"*)*, void (%"class.blink::InheritedLengthChecker"*)** %123, align 8
  call void %124(%"class.blink::InheritedLengthChecker"* nonnull %118) #9
  br label %125

125:                                              ; preds = %117, %120
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #9
  %126 = load i8, i8* %15, align 1
  %127 = icmp eq i8 %126, 0
  br i1 %127, label %128, label %130

128:                                              ; preds = %125
  %129 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %129, i8 0, i64 16, i1 false) #9
  br label %182

130:                                              ; preds = %125
  %131 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %132 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %16, align 8
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8, !noalias !18
  %134 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %134, label %163, label %135

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4, !noalias !18
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  br i1 %139, label %142, label %152

142:                                              ; preds = %135
  %143 = zext i32 %141 to i33
  %144 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %143, i33 1) #9
  %145 = extractvalue { i33, i1 } %144, 1
  %146 = extractvalue { i33, i1 } %144, 0
  %147 = icmp slt i33 %146, 0
  %148 = or i1 %145, %147
  br i1 %148, label %149, label %150, !prof !2

149:                                              ; preds = %142
  call void @llvm.trap() #9, !noalias !18
  unreachable

150:                                              ; preds = %142
  %151 = trunc i33 %146 to i32
  store i32 %151, i32* %140, align 4, !noalias !18
  br label %152

152:                                              ; preds = %150, %135
  %153 = phi i32 [ %151, %150 ], [ %141, %135 ]
  %154 = load atomic i32, i32* %136 monotonic, align 4
  %155 = and i32 %154, 2
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %159

157:                                              ; preds = %152
  %158 = add i32 %153, -1
  store i32 %158, i32* %140, align 4
  br label %159

159:                                              ; preds = %157, %152
  %160 = phi i32 [ %158, %157 ], [ %153, %152 ]
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %163

162:                                              ; preds = %159
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %133) #9
  br label %163

163:                                              ; preds = %162, %159, %130
  %164 = call zeroext i1 @_ZN5blink23LengthPropertyFunctions14IsZoomedLengthERKNS_11CSSPropertyE(%"class.blink::CSSProperty"* dereferenceable(24) %132) #9
  br i1 %164, label %165, label %172

165:                                              ; preds = %163
  %166 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %131, i64 0, i32 0, i32 1, i32 0, i32 0
  %167 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %166, align 8
  %168 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %167, i64 0, i32 2, i32 0, i32 0
  %169 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %168, align 8
  %170 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %169, i64 0, i32 6
  %171 = load float, float* %170, align 8
  br label %172

172:                                              ; preds = %163, %165
  %173 = phi float [ %171, %165 ], [ 1.000000e+00, %163 ]
  %174 = call %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength18MaybeConvertLengthERKNS_6LengthEf(%"class.blink::Length"* nonnull dereferenceable(8) %6, float %173) #9
  %175 = ptrtoint %"class.blink::InterpolableLength"* %174 to i64
  %176 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  store i64 %175, i64* %176, align 8
  %177 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %178 = bitcast %class.scoped_refptr.1148* %177 to i64*
  store i64 0, i64* %178, align 8
  %179 = load i8, i8* %15, align 1
  %180 = icmp eq i8 %179, 8
  br i1 %180, label %181, label %182

181:                                              ; preds = %172
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %6) #9
  br label %182

182:                                              ; preds = %128, %172, %181
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9
  br label %183

183:                                              ; preds = %182, %11
  ret void
}

declare zeroext i1 @_ZN5blink23LengthPropertyFunctions9GetLengthERKNS_11CSSPropertyERKNS_13ComputedStyleERNS_6LengthE(%"class.blink::CSSProperty"* dereferenceable(24), %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::Length"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink26CSSLengthInterpolationType17MaybeConvertValueERKNS_8CSSValueEPKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS9_14default_deleteISC_EEEELj0ENS7_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* noalias nocapture sret, %"class.blink::CSSLengthInterpolationType"* nocapture readonly, %"class.blink::CSSValue"* dereferenceable(3), %"class.blink::StyleResolverState"* nocapture readnone, %"class.WTF::Vector.1151"* nocapture readnone dereferenceable(16)) unnamed_addr #0 align 2 {
  %6 = alloca double, align 8
  %7 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 0, i32 2
  %8 = load i8, i8* %7, align 1
  %9 = icmp ne i8 %8, 2
  %10 = icmp eq %"class.blink::CSSValue"* %2, null
  %11 = or i1 %10, %9
  br i1 %11, label %62, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 1, i32 1
  %14 = bitcast i8* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = bitcast double* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  store double 0xFFFFFFFFFFFFFFFF, double* %6, align 8
  %17 = getelementptr inbounds %"class.blink::CSSLengthInterpolationType", %"class.blink::CSSLengthInterpolationType"* %1, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0
  %18 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::CSSLengthInterpolationType", %"class.blink::CSSLengthInterpolationType"* %1, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8, !noalias !21
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %50, label %22

22:                                               ; preds = %12
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4, !noalias !21
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %39

29:                                               ; preds = %22
  %30 = zext i32 %28 to i33
  %31 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %30, i33 1) #9
  %32 = extractvalue { i33, i1 } %31, 1
  %33 = extractvalue { i33, i1 } %31, 0
  %34 = icmp slt i33 %33, 0
  %35 = or i1 %32, %34
  br i1 %35, label %36, label %37, !prof !2

36:                                               ; preds = %29
  tail call void @llvm.trap() #9, !noalias !21
  unreachable

37:                                               ; preds = %29
  %38 = trunc i33 %33 to i32
  store i32 %38, i32* %27, align 4, !noalias !21
  br label %39

39:                                               ; preds = %37, %22
  %40 = phi i32 [ %38, %37 ], [ %28, %22 ]
  %41 = load atomic i32, i32* %23 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %39
  %45 = add i32 %40, -1
  store i32 %45, i32* %27, align 4
  br label %46

46:                                               ; preds = %44, %39
  %47 = phi i32 [ %45, %44 ], [ %40, %39 ]
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %46
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #9
  br label %50

50:                                               ; preds = %12, %46, %49
  %51 = call zeroext i1 @_ZN5blink23LengthPropertyFunctions19GetPixelsForKeywordERKNS_11CSSPropertyENS_10CSSValueIDERd(%"class.blink::CSSProperty"* dereferenceable(24) %18, i32 %15, double* nonnull dereferenceable(8) %6) #9
  br i1 %51, label %54, label %52

52:                                               ; preds = %50
  %53 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 16, i1 false) #9
  br label %61

54:                                               ; preds = %50
  %55 = load double, double* %6, align 8
  %56 = call %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength12CreatePixelsEd(double %55) #9
  %57 = ptrtoint %"class.blink::InterpolableLength"* %56 to i64
  %58 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  store i64 %57, i64* %58, align 8
  %59 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %60 = bitcast %class.scoped_refptr.1148* %59 to i64*
  store i64 0, i64* %60, align 8
  br label %61

61:                                               ; preds = %54, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  br label %68

62:                                               ; preds = %5
  %63 = tail call %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength20MaybeConvertCSSValueERKNS_8CSSValueE(%"class.blink::CSSValue"* dereferenceable(3) %2) #9
  %64 = ptrtoint %"class.blink::InterpolableLength"* %63 to i64
  %65 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  store i64 %64, i64* %65, align 8
  %66 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %67 = bitcast %class.scoped_refptr.1148* %66 to i64*
  store i64 0, i64* %67, align 8
  br label %68

68:                                               ; preds = %61, %62
  ret void
}

declare zeroext i1 @_ZN5blink23LengthPropertyFunctions19GetPixelsForKeywordERKNS_11CSSPropertyENS_10CSSValueIDERd(%"class.blink::CSSProperty"* dereferenceable(24), i32, double* dereferenceable(8)) local_unnamed_addr #1

declare %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength12CreatePixelsEd(double) local_unnamed_addr #1

declare %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength20MaybeConvertCSSValueERKNS_8CSSValueE(%"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink26CSSLengthInterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_(%"struct.blink::PairwiseInterpolationValue"* noalias sret, %"class.blink::CSSLengthInterpolationType"* nocapture readnone, %"struct.blink::InterpolationValue"* nocapture dereferenceable(16), %"struct.blink::InterpolationValue"* nocapture dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %5, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %5, align 8
  %7 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %7, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %7, align 8
  tail call void @_ZN5blink18InterpolableLength12MergeSinglesENSt3__110unique_ptrINS_17InterpolableValueENS1_14default_deleteIS3_EEEES6_(%"struct.blink::PairwiseInterpolationValue"* sret %0, %"class.blink::InterpolableValue"* %6, %"class.blink::InterpolableValue"* %8) #9
  ret void
}

declare void @_ZN5blink18InterpolableLength12MergeSinglesENSt3__110unique_ptrINS_17InterpolableValueENS1_14default_deleteIS3_EEEES6_(%"struct.blink::PairwiseInterpolationValue"* sret, %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink26CSSLengthInterpolationType43MaybeConvertStandardPropertyUnderlyingValueERKNS_13ComputedStyleE(%"struct.blink::InterpolationValue"* noalias nocapture sret, %"class.blink::CSSLengthInterpolationType"* nocapture readonly, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"class.blink::Length"*
  %6 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %5, i64 0, i32 2
  store i64 -6148914691236517206, i64* %4, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 7, i1 false) #9
  %8 = getelementptr inbounds %"class.blink::CSSLengthInterpolationType", %"class.blink::CSSLengthInterpolationType"* %1, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0
  %9 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::CSSLengthInterpolationType", %"class.blink::CSSLengthInterpolationType"* %1, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8, !noalias !24
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %41, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4, !noalias !24
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  br i1 %17, label %20, label %30

20:                                               ; preds = %13
  %21 = zext i32 %19 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #9
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %28, !prof !2

27:                                               ; preds = %20
  tail call void @llvm.trap() #9, !noalias !24
  unreachable

28:                                               ; preds = %20
  %29 = trunc i33 %24 to i32
  store i32 %29, i32* %18, align 4, !noalias !24
  br label %30

30:                                               ; preds = %28, %13
  %31 = phi i32 [ %29, %28 ], [ %19, %13 ]
  %32 = load atomic i32, i32* %14 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %30
  %36 = add i32 %31, -1
  store i32 %36, i32* %18, align 4
  br label %37

37:                                               ; preds = %35, %30
  %38 = phi i32 [ %36, %35 ], [ %31, %30 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %11) #9
  br label %41

41:                                               ; preds = %3, %37, %40
  %42 = call zeroext i1 @_ZN5blink23LengthPropertyFunctions9GetLengthERKNS_11CSSPropertyERKNS_13ComputedStyleERNS_6LengthE(%"class.blink::CSSProperty"* dereferenceable(24) %9, %"class.blink::ComputedStyle"* dereferenceable(104) %2, %"class.blink::Length"* nonnull dereferenceable(8) %5) #9
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 16, i1 false) #9
  br label %93

45:                                               ; preds = %41
  %46 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %8, align 8
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8, !noalias !27
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %77, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i32, i32* %50 monotonic, align 4, !noalias !27
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %66

56:                                               ; preds = %49
  %57 = zext i32 %55 to i33
  %58 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %57, i33 1) #9
  %59 = extractvalue { i33, i1 } %58, 1
  %60 = extractvalue { i33, i1 } %58, 0
  %61 = icmp slt i33 %60, 0
  %62 = or i1 %59, %61
  br i1 %62, label %63, label %64, !prof !2

63:                                               ; preds = %56
  call void @llvm.trap() #9, !noalias !27
  unreachable

64:                                               ; preds = %56
  %65 = trunc i33 %60 to i32
  store i32 %65, i32* %54, align 4, !noalias !27
  br label %66

66:                                               ; preds = %64, %49
  %67 = phi i32 [ %65, %64 ], [ %55, %49 ]
  %68 = load atomic i32, i32* %50 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %73

71:                                               ; preds = %66
  %72 = add i32 %67, -1
  store i32 %72, i32* %54, align 4
  br label %73

73:                                               ; preds = %71, %66
  %74 = phi i32 [ %72, %71 ], [ %67, %66 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %47) #9
  br label %77

77:                                               ; preds = %76, %73, %45
  %78 = call zeroext i1 @_ZN5blink23LengthPropertyFunctions14IsZoomedLengthERKNS_11CSSPropertyE(%"class.blink::CSSProperty"* dereferenceable(24) %46) #9
  br i1 %78, label %79, label %86

79:                                               ; preds = %77
  %80 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %81 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %80, align 8
  %82 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %81, i64 0, i32 2, i32 0, i32 0
  %83 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %83, i64 0, i32 6
  %85 = load float, float* %84, align 8
  br label %86

86:                                               ; preds = %79, %77
  %87 = phi float [ %85, %79 ], [ 1.000000e+00, %77 ]
  %88 = call %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength18MaybeConvertLengthERKNS_6LengthEf(%"class.blink::Length"* nonnull dereferenceable(8) %5, float %87) #9
  %89 = ptrtoint %"class.blink::InterpolableLength"* %88 to i64
  %90 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %92 = bitcast %class.scoped_refptr.1148* %91 to i64*
  store i64 0, i64* %92, align 8
  br label %93

93:                                               ; preds = %86, %43
  %94 = load i8, i8* %7, align 1
  %95 = icmp eq i8 %94, 8
  br i1 %95, label %96, label %97

96:                                               ; preds = %93
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %5) #9
  br label %97

97:                                               ; preds = %93, %96
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSValue"* @_ZNK5blink26CSSLengthInterpolationType14CreateCSSValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERKNS_18StyleResolverStateE(%"class.blink::CSSLengthInterpolationType"* nocapture readonly, %"class.blink::InterpolableValue"* dereferenceable(8), %"class.blink::NonInterpolableValue"* nocapture readnone, %"class.blink::StyleResolverState"* nocapture readnone dereferenceable(600)) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.blink::InterpolableValue"* %1 to %"class.blink::InterpolableLength"*
  %6 = getelementptr inbounds %"class.blink::CSSLengthInterpolationType", %"class.blink::CSSLengthInterpolationType"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = tail call %"class.blink::CSSPrimitiveValue"* @_ZNK5blink18InterpolableLength14CreateCSSValueENS_10ValueRangeE(%"class.blink::InterpolableLength"* %5, i32 %7) #9
  %9 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %8, i64 0, i32 0
  ret %"class.blink::CSSValue"* %9
}

declare %"class.blink::CSSPrimitiveValue"* @_ZNK5blink18InterpolableLength14CreateCSSValueENS_10ValueRangeE(%"class.blink::InterpolableLength"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink26CSSLengthInterpolationType26ApplyStandardPropertyValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_18StyleResolverStateE(%"class.blink::CSSLengthInterpolationType"* nocapture readonly, %"class.blink::InterpolableValue"* dereferenceable(8), %"class.blink::NonInterpolableValue"* nocapture readnone, %"class.blink::StyleResolverState"* dereferenceable(600)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::CSSToLengthConversionData", align 8
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %"class.blink::Length"*
  %8 = alloca %"class.blink::ScopedCSSValue", align 8
  %9 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %3, i64 0, i32 2, i32 0
  %10 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::CSSLengthInterpolationType", %"class.blink::CSSLengthInterpolationType"* %0, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0
  %12 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::CSSLengthInterpolationType", %"class.blink::CSSLengthInterpolationType"* %0, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8, !noalias !30
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %44, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4, !noalias !30
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %33

23:                                               ; preds = %16
  %24 = zext i32 %22 to i33
  %25 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %24, i33 1) #9
  %26 = extractvalue { i33, i1 } %25, 1
  %27 = extractvalue { i33, i1 } %25, 0
  %28 = icmp slt i33 %27, 0
  %29 = or i1 %26, %28
  br i1 %29, label %30, label %31, !prof !2

30:                                               ; preds = %23
  tail call void @llvm.trap() #9, !noalias !30
  unreachable

31:                                               ; preds = %23
  %32 = trunc i33 %27 to i32
  store i32 %32, i32* %21, align 4, !noalias !30
  br label %33

33:                                               ; preds = %31, %16
  %34 = phi i32 [ %32, %31 ], [ %22, %16 ]
  %35 = load atomic i32, i32* %17 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %33
  %39 = add i32 %34, -1
  store i32 %39, i32* %21, align 4
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i32 [ %39, %38 ], [ %34, %33 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #9
  br label %44

44:                                               ; preds = %43, %40, %4
  %45 = tail call zeroext i1 @_ZN5blink23LengthPropertyFunctions14IsZoomedLengthERKNS_11CSSPropertyE(%"class.blink::CSSProperty"* dereferenceable(24) %12) #9
  br i1 %45, label %46, label %53

46:                                               ; preds = %44
  %47 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  %48 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %48, i64 0, i32 2, i32 0, i32 0
  %50 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %50, i64 0, i32 6
  %52 = load float, float* %51, align 8
  br label %53

53:                                               ; preds = %44, %46
  %54 = phi float [ %52, %46 ], [ 1.000000e+00, %44 ]
  %55 = bitcast %"class.blink::CSSToLengthConversionData"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %55) #9
  %56 = getelementptr inbounds %"class.blink::CSSToLengthConversionData", %"class.blink::CSSToLengthConversionData"* %5, i64 0, i32 3
  %57 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %3, i64 0, i32 3
  %58 = bitcast %"class.blink::CSSToLengthConversionData"* %57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %55, i8* align 8 %58, i64 56, i1 false)
  store float %54, float* %56, align 8
  %59 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #9
  %60 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %7, i64 0, i32 2
  %61 = bitcast %"class.blink::InterpolableValue"* %1 to %"class.blink::InterpolableLength"*
  %62 = getelementptr inbounds %"class.blink::CSSLengthInterpolationType", %"class.blink::CSSLengthInterpolationType"* %0, i64 0, i32 1
  store i64 -6148914691236517206, i64* %6, align 8
  %63 = load i32, i32* %62, align 8
  call void @_ZNK5blink18InterpolableLength12CreateLengthERKNS_25CSSToLengthConversionDataENS_10ValueRangeE(%"class.blink::Length"* nonnull sret %7, %"class.blink::InterpolableLength"* %61, %"class.blink::CSSToLengthConversionData"* nonnull dereferenceable(56) %5, i32 %63) #9
  %64 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %11, align 8
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8, !noalias !33
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %95, label %67

67:                                               ; preds = %53
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4, !noalias !33
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %84

74:                                               ; preds = %67
  %75 = zext i32 %73 to i33
  %76 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %75, i33 1) #9
  %77 = extractvalue { i33, i1 } %76, 1
  %78 = extractvalue { i33, i1 } %76, 0
  %79 = icmp slt i33 %78, 0
  %80 = or i1 %77, %79
  br i1 %80, label %81, label %82, !prof !2

81:                                               ; preds = %74
  call void @llvm.trap() #9, !noalias !33
  unreachable

82:                                               ; preds = %74
  %83 = trunc i33 %78 to i32
  store i32 %83, i32* %72, align 4, !noalias !33
  br label %84

84:                                               ; preds = %82, %67
  %85 = phi i32 [ %83, %82 ], [ %73, %67 ]
  %86 = load atomic i32, i32* %68 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %91

89:                                               ; preds = %84
  %90 = add i32 %85, -1
  store i32 %90, i32* %72, align 4
  br label %91

91:                                               ; preds = %89, %84
  %92 = phi i32 [ %90, %89 ], [ %85, %84 ]
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %95

94:                                               ; preds = %91
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #9
  br label %95

95:                                               ; preds = %53, %91, %94
  %96 = call zeroext i1 @_ZN5blink23LengthPropertyFunctions9SetLengthERKNS_11CSSPropertyERNS_13ComputedStyleERKNS_6LengthE(%"class.blink::CSSProperty"* dereferenceable(24) %64, %"class.blink::ComputedStyle"* dereferenceable(104) %10, %"class.blink::Length"* nonnull dereferenceable(8) %7) #9
  br i1 %96, label %139, label %97

97:                                               ; preds = %95
  %98 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %11, align 8
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8, !noalias !36
  %100 = icmp eq %"class.WTF::StringImpl"* %99, null
  br i1 %100, label %134, label %101

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load atomic i32, i32* %102 monotonic, align 4, !noalias !36
  %104 = and i32 %103, 2
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %118

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 0
  %108 = load i32, i32* %107, align 4, !noalias !36
  %109 = zext i32 %108 to i33
  %110 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %109, i33 1) #9
  %111 = extractvalue { i33, i1 } %110, 1
  %112 = extractvalue { i33, i1 } %110, 0
  %113 = icmp slt i33 %112, 0
  %114 = or i1 %111, %113
  br i1 %114, label %115, label %116, !prof !2

115:                                              ; preds = %106
  call void @llvm.trap() #9, !noalias !36
  unreachable

116:                                              ; preds = %106
  %117 = trunc i33 %112 to i32
  store i32 %117, i32* %107, align 4, !noalias !36
  br label %118

118:                                              ; preds = %116, %101
  %119 = bitcast %"class.blink::ScopedCSSValue"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %119) #9
  %120 = call %"class.blink::CSSValue"* @_ZN5blink8CSSValue6CreateERKNS_6LengthEf(%"class.blink::Length"* nonnull dereferenceable(8) %7, float %54) #9
  %121 = getelementptr inbounds %"class.blink::ScopedCSSValue", %"class.blink::ScopedCSSValue"* %8, i64 0, i32 0
  store %"class.blink::CSSValue"* %120, %"class.blink::CSSValue"** %121, align 8
  %122 = getelementptr inbounds %"class.blink::ScopedCSSValue", %"class.blink::ScopedCSSValue"* %8, i64 0, i32 1
  store %"class.blink::TreeScope"* null, %"class.blink::TreeScope"** %122, align 8
  call void @_ZN5blink12StyleBuilder13ApplyPropertyERKNS_11CSSPropertyERNS_18StyleResolverStateERKNS_14ScopedCSSValueE(%"class.blink::CSSProperty"* dereferenceable(24) %98, %"class.blink::StyleResolverState"* dereferenceable(600) %3, %"class.blink::ScopedCSSValue"* nonnull dereferenceable(16) %8) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %119) #9
  %123 = load atomic i32, i32* %102 monotonic, align 4
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 0
  %127 = load i32, i32* %126, align 4
  br i1 %125, label %128, label %130

128:                                              ; preds = %118
  %129 = add i32 %127, -1
  store i32 %129, i32* %126, align 4
  br label %130

130:                                              ; preds = %128, %118
  %131 = phi i32 [ %129, %128 ], [ %127, %118 ]
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %139

133:                                              ; preds = %130
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %99) #9
  br label %139

134:                                              ; preds = %97
  %135 = bitcast %"class.blink::ScopedCSSValue"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %135) #9
  %136 = call %"class.blink::CSSValue"* @_ZN5blink8CSSValue6CreateERKNS_6LengthEf(%"class.blink::Length"* nonnull dereferenceable(8) %7, float %54) #9
  %137 = getelementptr inbounds %"class.blink::ScopedCSSValue", %"class.blink::ScopedCSSValue"* %8, i64 0, i32 0
  store %"class.blink::CSSValue"* %136, %"class.blink::CSSValue"** %137, align 8
  %138 = getelementptr inbounds %"class.blink::ScopedCSSValue", %"class.blink::ScopedCSSValue"* %8, i64 0, i32 1
  store %"class.blink::TreeScope"* null, %"class.blink::TreeScope"** %138, align 8
  call void @_ZN5blink12StyleBuilder13ApplyPropertyERKNS_11CSSPropertyERNS_18StyleResolverStateERKNS_14ScopedCSSValueE(%"class.blink::CSSProperty"* dereferenceable(24) %98, %"class.blink::StyleResolverState"* dereferenceable(600) %3, %"class.blink::ScopedCSSValue"* nonnull dereferenceable(16) %8) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %135) #9
  br label %139

139:                                              ; preds = %134, %133, %130, %95
  %140 = load i8, i8* %60, align 1
  %141 = icmp eq i8 %140, 8
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %7) #9
  br label %143

143:                                              ; preds = %139, %142
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %55) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZNK5blink18InterpolableLength12CreateLengthERKNS_25CSSToLengthConversionDataENS_10ValueRangeE(%"class.blink::Length"* sret, %"class.blink::InterpolableLength"*, %"class.blink::CSSToLengthConversionData"* dereferenceable(56), i32) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink23LengthPropertyFunctions9SetLengthERKNS_11CSSPropertyERNS_13ComputedStyleERKNS_6LengthE(%"class.blink::CSSProperty"* dereferenceable(24), %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::Length"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink12StyleBuilder13ApplyPropertyERKNS_11CSSPropertyERNS_18StyleResolverStateERKNS_14ScopedCSSValueE(%"class.blink::CSSProperty"* dereferenceable(24), %"class.blink::StyleResolverState"* dereferenceable(600), %"class.blink::ScopedCSSValue"* dereferenceable(16)) local_unnamed_addr #1

declare %"class.blink::CSSValue"* @_ZN5blink8CSSValue6CreateERKNS_6LengthEf(%"class.blink::Length"* dereferenceable(8), float) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20CSSInterpolationTypeD2Ev(%"class.blink::CSSInterpolationType"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSInterpolationType", %"class.blink::CSSInterpolationType"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink20CSSInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CSSInterpolationType", %"class.blink::CSSInterpolationType"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %4 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %5 = icmp eq %"class.blink::PersistentNode"* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %1
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #9
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #9
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 4, i32 0, i32 0, i32 0
  %18 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %17, align 8
  %19 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %20 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %18, i64 0, i32 0, i32 0
  %21 = bitcast %"class.blink::PersistentRegion"* %18 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.blink::PersistentNode"* %19 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %19, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %24, align 8
  store %"class.blink::PersistentNode"* %19, %"class.blink::PersistentNode"** %20, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %3, align 8
  br label %25

25:                                               ; preds = %1, %13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink17InterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %26 = getelementptr inbounds %"class.blink::CSSInterpolationType", %"class.blink::CSSInterpolationType"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %25, %38, %41
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink26CSSLengthInterpolationTypeD0Ev(%"class.blink::CSSLengthInterpolationType"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSLengthInterpolationType", %"class.blink::CSSLengthInterpolationType"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink20CSSInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CSSLengthInterpolationType", %"class.blink::CSSLengthInterpolationType"* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %4 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %5 = icmp eq %"class.blink::PersistentNode"* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %1
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #9
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #9
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 4, i32 0, i32 0, i32 0
  %18 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %17, align 8
  %19 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %20 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %18, i64 0, i32 0, i32 0
  %21 = bitcast %"class.blink::PersistentRegion"* %18 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.blink::PersistentNode"* %19 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %19, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %24, align 8
  store %"class.blink::PersistentNode"* %19, %"class.blink::PersistentNode"** %20, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %3, align 8
  br label %25

25:                                               ; preds = %13, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink17InterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %26 = getelementptr inbounds %"class.blink::CSSLengthInterpolationType", %"class.blink::CSSLengthInterpolationType"* %0, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %25, %38, %41
  %43 = bitcast %"class.blink::CSSLengthInterpolationType"* %0 to i8*
  tail call void @free(i8* %43) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink17InterpolationType20MaybeConvertPairwiseERKNS_8Keyframe24PropertySpecificKeyframeES4_RKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS0_17ConversionCheckerENSD_14default_deleteISF_EEEELj0ENSB_18PartitionAllocatorEEE(%"struct.blink::PairwiseInterpolationValue"* noalias sret, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32), %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32), %"class.blink::InterpolationEnvironment"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16), %"class.WTF::Vector.1151"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %8 = alloca %"struct.blink::InterpolationValue", align 8
  %9 = alloca %"struct.blink::InterpolationValue", align 8
  %10 = bitcast %"struct.blink::InterpolationValue"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #9
  %11 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %8, i64 0, i32 1, i32 0
  %13 = bitcast %"class.blink::InterpolationType"* %1 to void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1151"*)***
  %14 = bitcast %"struct.blink::InterpolationValue"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false)
  %15 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1151"*)**, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1151"*)*** %13, align 8
  %16 = getelementptr inbounds void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1151"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1151"*)** %15, i64 3
  %17 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1151"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1151"*)** %16, align 8
  call void %17(%"struct.blink::InterpolationValue"* nonnull sret %8, %"class.blink::InterpolationType"* %1, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32) %2, %"class.blink::InterpolationEnvironment"* dereferenceable(16) %4, %"struct.blink::InterpolationValue"* dereferenceable(16) %5, %"class.WTF::Vector.1151"* dereferenceable(16) %6) #9
  %18 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %11, align 8
  %19 = icmp eq %"class.blink::InterpolableValue"* %18, null
  br i1 %19, label %20, label %22

20:                                               ; preds = %7
  %21 = bitcast %"struct.blink::PairwiseInterpolationValue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #9
  br label %64

22:                                               ; preds = %7
  %23 = bitcast %"struct.blink::InterpolationValue"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #9
  %24 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %9, i64 0, i32 1, i32 0
  %26 = bitcast %"struct.blink::InterpolationValue"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 16, i1 false)
  %27 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1151"*)**, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1151"*)*** %13, align 8
  %28 = getelementptr inbounds void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1151"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1151"*)** %27, i64 3
  %29 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1151"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1151"*)** %28, align 8
  call void %29(%"struct.blink::InterpolationValue"* nonnull sret %9, %"class.blink::InterpolationType"* %1, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32) %3, %"class.blink::InterpolationEnvironment"* dereferenceable(16) %4, %"struct.blink::InterpolationValue"* dereferenceable(16) %5, %"class.WTF::Vector.1151"* dereferenceable(16) %6) #9
  %30 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %24, align 8
  %31 = icmp eq %"class.blink::InterpolableValue"* %30, null
  br i1 %31, label %32, label %34

32:                                               ; preds = %22
  %33 = bitcast %"struct.blink::PairwiseInterpolationValue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 24, i1 false) #9
  br label %39

34:                                               ; preds = %22
  %35 = bitcast %"class.blink::InterpolationType"* %1 to void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)***
  %36 = load void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)**, void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)*, void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)** %36, i64 4
  %38 = load void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)*, void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)** %37, align 8
  call void %38(%"struct.blink::PairwiseInterpolationValue"* sret %0, %"class.blink::InterpolationType"* %1, %"struct.blink::InterpolationValue"* nonnull dereferenceable(16) %8, %"struct.blink::InterpolationValue"* nonnull dereferenceable(16) %9) #9
  br label %39

39:                                               ; preds = %34, %32
  %40 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %25, align 8
  %41 = icmp eq %"class.blink::NonInterpolableValue"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %40, i64 0, i32 1, i32 0
  %44 = getelementptr inbounds %"class.base::RefCounted.1150", %"class.base::RefCounted.1150"* %43, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %44) #9
  %45 = getelementptr inbounds %"class.base::RefCounted.1150", %"class.base::RefCounted.1150"* %43, i64 0, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %55

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.base::RefCounted.1150", %"class.base::RefCounted.1150"* %43, i64 -2
  %50 = bitcast %"class.base::RefCounted.1150"* %49 to %"class.blink::NonInterpolableValue"*
  %51 = bitcast %"class.base::RefCounted.1150"* %49 to void (%"class.blink::NonInterpolableValue"*)***
  %52 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %52, i64 1
  %54 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %53, align 8
  call void %54(%"class.blink::NonInterpolableValue"* nonnull %50) #9
  br label %55

55:                                               ; preds = %48, %42, %39
  %56 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %24, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %24, align 8
  %57 = icmp eq %"class.blink::InterpolableValue"* %56, null
  br i1 %57, label %63, label %58

58:                                               ; preds = %55
  %59 = bitcast %"class.blink::InterpolableValue"* %56 to void (%"class.blink::InterpolableValue"*)***
  %60 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %60, i64 1
  %62 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %61, align 8
  call void %62(%"class.blink::InterpolableValue"* nonnull %56) #9
  br label %63

63:                                               ; preds = %55, %58
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #9
  br label %64

64:                                               ; preds = %63, %20
  %65 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %12, align 8
  %66 = icmp eq %"class.blink::NonInterpolableValue"* %65, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %65, i64 0, i32 1, i32 0
  %69 = getelementptr inbounds %"class.base::RefCounted.1150", %"class.base::RefCounted.1150"* %68, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %69) #9
  %70 = getelementptr inbounds %"class.base::RefCounted.1150", %"class.base::RefCounted.1150"* %68, i64 0, i32 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %80

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.base::RefCounted.1150", %"class.base::RefCounted.1150"* %68, i64 -2
  %75 = bitcast %"class.base::RefCounted.1150"* %74 to %"class.blink::NonInterpolableValue"*
  %76 = bitcast %"class.base::RefCounted.1150"* %74 to void (%"class.blink::NonInterpolableValue"*)***
  %77 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %77, i64 1
  %79 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %78, align 8
  call void %79(%"class.blink::NonInterpolableValue"* nonnull %75) #9
  br label %80

80:                                               ; preds = %73, %67, %64
  %81 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %11, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %11, align 8
  %82 = icmp eq %"class.blink::InterpolableValue"* %81, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %80
  %84 = bitcast %"class.blink::InterpolableValue"* %81 to void (%"class.blink::InterpolableValue"*)***
  %85 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %85, i64 1
  %87 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %86, align 8
  call void %87(%"class.blink::InterpolableValue"* nonnull %81) #9
  br label %88

88:                                               ; preds = %80, %83
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #9
  ret void
}

declare void @_ZNK5blink20CSSInterpolationType18MaybeConvertSingleERKNS_8Keyframe24PropertySpecificKeyframeERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENSD_14default_deleteISG_EEEELj0ENSB_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* sret, %"class.blink::CSSInterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32), %"class.blink::InterpolationEnvironment"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16), %"class.WTF::Vector.1151"* dereferenceable(16)) unnamed_addr #1

declare void @_ZNK5blink20CSSInterpolationType27MaybeConvertUnderlyingValueERKNS_24InterpolationEnvironmentE(%"struct.blink::InterpolationValue"* sret, %"class.blink::CSSInterpolationType"*, %"class.blink::InterpolationEnvironment"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink17InterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd(%"class.blink::InterpolationType"*, %"class.blink::UnderlyingValueOwner"* dereferenceable(40), double, %"struct.blink::InterpolationValue"* dereferenceable(16), double) unnamed_addr #0 comdat align 2 {
  %6 = tail call dereferenceable(16) %"struct.blink::InterpolationValue"* @_ZN5blink20UnderlyingValueOwner12MutableValueEv(%"class.blink::UnderlyingValueOwner"* %1) #9
  %7 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %7, align 8
  %9 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %9, align 8
  %11 = bitcast %"class.blink::InterpolableValue"* %8 to void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)***
  %12 = load void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)** %12, i64 14
  %14 = load void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)** %13, align 8
  tail call void %14(%"class.blink::InterpolableValue"* %8, double %2, %"class.blink::InterpolableValue"* dereferenceable(8) %10) #9
  ret void
}

declare void @_ZNK5blink20CSSInterpolationType5ApplyERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_24InterpolationEnvironmentE(%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"* dereferenceable(8), %"class.blink::NonInterpolableValue"*, %"class.blink::InterpolationEnvironment"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink20CSSInterpolationType33PreInterpolationCompositeIfNeededENS_18InterpolationValueERKS1_NS_11EffectModel18CompositeOperationERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS8_14default_deleteISB_EEEELj0ENS6_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* noalias sret, %"class.blink::CSSInterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"* dereferenceable(16), i32, %"class.WTF::Vector.1151"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = bitcast %"struct.blink::InterpolationValue"* %2 to <2 x i64>*
  %9 = load <2 x i64>, <2 x i64>* %8, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %7, align 8
  %10 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 1, i32 0
  %11 = bitcast %"struct.blink::InterpolationValue"* %0 to <2 x i64>*
  store <2 x i64> %9, <2 x i64>* %11, align 8
  store %"class.blink::NonInterpolableValue"* null, %"class.blink::NonInterpolableValue"** %10, align 8
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #1

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17InterpolationTypeD2Ev(%"class.blink::InterpolationType"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InterpolationType", %"class.blink::InterpolationType"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink17InterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InterpolationType", %"class.blink::InterpolationType"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #9
  br label %19

19:                                               ; preds = %1, %15, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17InterpolationTypeD0Ev(%"class.blink::InterpolationType"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink17InterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_(%"struct.blink::PairwiseInterpolationValue"* noalias sret, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = bitcast %"struct.blink::InterpolationValue"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %5, align 8
  %8 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = bitcast %"struct.blink::InterpolationValue"* %3 to i64*
  %10 = load i64, i64* %9, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %8, align 8
  %11 = bitcast %"struct.blink::PairwiseInterpolationValue"* %0 to i64*
  store i64 %7, i64* %11, align 8
  %12 = getelementptr inbounds %"struct.blink::PairwiseInterpolationValue", %"struct.blink::PairwiseInterpolationValue"* %0, i64 0, i32 1
  %13 = bitcast %"class.std::__1::unique_ptr.1142"* %12 to i64*
  store i64 %10, i64* %13, align 8
  %14 = getelementptr inbounds %"struct.blink::PairwiseInterpolationValue", %"struct.blink::PairwiseInterpolationValue"* %0, i64 0, i32 2
  %15 = bitcast %class.scoped_refptr.1148* %14 to i64*
  store i64 0, i64* %15, align 8
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #6

declare dereferenceable(16) %"struct.blink::InterpolationValue"* @_ZN5blink20UnderlyingValueOwner12MutableValueEv(%"class.blink::UnderlyingValueOwner"*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22InheritedLengthCheckerD2Ev(%"class.blink::InheritedLengthChecker"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InheritedLengthChecker", %"class.blink::InheritedLengthChecker"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink22InheritedLengthCheckerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InheritedLengthChecker", %"class.blink::InheritedLengthChecker"* %0, i64 0, i32 2, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = icmp eq i8 %4, 8
  br i1 %5, label %6, label %8

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::InheritedLengthChecker", %"class.blink::InheritedLengthChecker"* %0, i64 0, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22InheritedLengthCheckerD0Ev(%"class.blink::InheritedLengthChecker"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InheritedLengthChecker", %"class.blink::InheritedLengthChecker"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink22InheritedLengthCheckerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InheritedLengthChecker", %"class.blink::InheritedLengthChecker"* %0, i64 0, i32 2, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = icmp eq i8 %4, 8
  br i1 %5, label %6, label %8

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::InheritedLengthChecker", %"class.blink::InheritedLengthChecker"* %0, i64 0, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = bitcast %"class.blink::InheritedLengthChecker"* %0 to i8*
  tail call void @free(i8* %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink20CSSInterpolationType20CSSConversionChecker7IsValidERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueE(%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::InterpolationEnvironment"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::InterpolationEnvironment", %"class.blink::InterpolationEnvironment"* %1, i64 1
  %5 = bitcast %"class.blink::InterpolationEnvironment"* %4 to %"class.blink::StyleResolverState"**
  %6 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %5, align 8
  %7 = bitcast %"class.blink::CSSInterpolationType::CSSConversionChecker"* %0 to i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)***
  %8 = load i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)**, i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)*, i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)** %8, i64 3
  %10 = load i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)*, i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::CSSInterpolationType::CSSConversionChecker"* %0, %"class.blink::StyleResolverState"* dereferenceable(600) %6, %"struct.blink::InterpolationValue"* dereferenceable(16) %2) #9
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink22InheritedLengthChecker7IsValidERKNS_18StyleResolverStateERKNS_18InterpolationValueE(%"class.blink::InheritedLengthChecker"*, %"class.blink::StyleResolverState"* dereferenceable(600), %"struct.blink::InterpolationValue"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"class.blink::Length"*
  %6 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %5, i64 0, i32 2
  %8 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %5, i64 0, i32 3
  store i64 -6148914691236517206, i64* %4, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 7, i1 false) #9
  %9 = getelementptr inbounds %"class.blink::InheritedLengthChecker", %"class.blink::InheritedLengthChecker"* %0, i64 0, i32 1
  %10 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 4, i32 0
  %12 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %13 = call zeroext i1 @_ZN5blink23LengthPropertyFunctions9GetLengthERKNS_11CSSPropertyERKNS_13ComputedStyleERNS_6LengthE(%"class.blink::CSSProperty"* dereferenceable(24) %10, %"class.blink::ComputedStyle"* dereferenceable(104) %12, %"class.blink::Length"* nonnull dereferenceable(8) %5) #9
  %14 = getelementptr inbounds %"class.blink::InheritedLengthChecker", %"class.blink::InheritedLengthChecker"* %0, i64 0, i32 2
  %15 = load i8, i8* %7, align 1
  %16 = getelementptr inbounds %"class.blink::InheritedLengthChecker", %"class.blink::InheritedLengthChecker"* %0, i64 0, i32 2, i32 2
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %15, %17
  br i1 %18, label %19, label %51

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %5, i64 0, i32 1
  %21 = load i8, i8* %20, align 4, !range !39
  %22 = getelementptr inbounds %"class.blink::InheritedLengthChecker", %"class.blink::InheritedLengthChecker"* %0, i64 0, i32 2, i32 1
  %23 = load i8, i8* %22, align 4, !range !39
  %24 = icmp eq i8 %21, %23
  br i1 %24, label %25, label %51

25:                                               ; preds = %19
  %26 = icmp eq i8 %15, 12
  br i1 %26, label %56, label %27

27:                                               ; preds = %25
  %28 = load i8, i8* %8, align 2, !range !39
  %29 = icmp eq i8 %28, 0
  %30 = bitcast i64* %4 to float*
  %31 = load float, float* %30, align 8
  %32 = bitcast float %31 to i32
  %33 = sitofp i32 %32 to float
  %34 = select i1 %29, float %33, float %31
  %35 = getelementptr inbounds %"class.blink::InheritedLengthChecker", %"class.blink::InheritedLengthChecker"* %0, i64 0, i32 2, i32 3
  %36 = load i8, i8* %35, align 2, !range !39
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %27
  %39 = bitcast %"class.blink::Length"* %14 to float*
  %40 = load float, float* %39, align 4
  br label %45

41:                                               ; preds = %27
  %42 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %14, i64 0, i32 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = sitofp i32 %43 to float
  br label %45

45:                                               ; preds = %41, %38
  %46 = phi float [ %40, %38 ], [ %44, %41 ]
  %47 = fcmp oeq float %34, %46
  br i1 %47, label %51, label %48

48:                                               ; preds = %45
  %49 = call zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"* nonnull %5, %"class.blink::Length"* dereferenceable(8) %14) #9
  %50 = load i8, i8* %7, align 1
  br label %51

51:                                               ; preds = %19, %45, %48, %3
  %52 = phi i8 [ %15, %3 ], [ %50, %48 ], [ %15, %45 ], [ %15, %19 ]
  %53 = phi i1 [ false, %3 ], [ %49, %48 ], [ true, %45 ], [ false, %19 ]
  %54 = icmp eq i8 %52, 8
  br i1 %54, label %55, label %56

55:                                               ; preds = %51
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %5) #9
  br label %56

56:                                               ; preds = %25, %51, %55
  %57 = phi i1 [ %53, %51 ], [ %53, %55 ], [ true, %25 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  ret i1 %57
}

declare void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"*, %"class.blink::Length"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_22InheritedLengthCheckerENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.1151"*, %"class.std::__1::unique_ptr.1448"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1151", %"class.WTF::Vector.1151"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1151", %"class.WTF::Vector.1151"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.1151", %"class.WTF::Vector.1151"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.1154"*, %"class.std::__1::unique_ptr.1154"** %16, align 8
  br i1 %15, label %18, label %45, !prof !40

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.1154"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #9
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([185 x i8], [185 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #9
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.1151"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.1154"*, %"class.std::__1::unique_ptr.1154"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.1154"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.1154"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !40

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #9
  %36 = bitcast %"class.WTF::Vector.1151"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #9
  %40 = bitcast %"class.WTF::Vector.1151"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.1154"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.1154"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.1154", %"class.std::__1::unique_ptr.1154"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.1448", %"class.std::__1::unique_ptr.1448"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.1448"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::InheritedLengthChecker"* null, %"class.blink::InheritedLengthChecker"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.1154"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS2_14default_deleteIS6_EEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK5blink17InterpolationType11GetPropertyEv: argument 0"}
!5 = distinct !{!5, !"_ZNK5blink17InterpolationType11GetPropertyEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK5blink17InterpolationType11GetPropertyEv: argument 0"}
!8 = distinct !{!8, !"_ZNK5blink17InterpolationType11GetPropertyEv"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK5blink17InterpolationType11GetPropertyEv: argument 0"}
!11 = distinct !{!11, !"_ZNK5blink17InterpolationType11GetPropertyEv"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK5blink17InterpolationType11GetPropertyEv: argument 0"}
!14 = distinct !{!14, !"_ZNK5blink17InterpolationType11GetPropertyEv"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK5blink17InterpolationType11GetPropertyEv: argument 0"}
!17 = distinct !{!17, !"_ZNK5blink17InterpolationType11GetPropertyEv"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNK5blink17InterpolationType11GetPropertyEv: argument 0"}
!20 = distinct !{!20, !"_ZNK5blink17InterpolationType11GetPropertyEv"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNK5blink17InterpolationType11GetPropertyEv: argument 0"}
!23 = distinct !{!23, !"_ZNK5blink17InterpolationType11GetPropertyEv"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNK5blink17InterpolationType11GetPropertyEv: argument 0"}
!26 = distinct !{!26, !"_ZNK5blink17InterpolationType11GetPropertyEv"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZNK5blink17InterpolationType11GetPropertyEv: argument 0"}
!29 = distinct !{!29, !"_ZNK5blink17InterpolationType11GetPropertyEv"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZNK5blink17InterpolationType11GetPropertyEv: argument 0"}
!32 = distinct !{!32, !"_ZNK5blink17InterpolationType11GetPropertyEv"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZNK5blink17InterpolationType11GetPropertyEv: argument 0"}
!35 = distinct !{!35, !"_ZNK5blink17InterpolationType11GetPropertyEv"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZNK5blink17InterpolationType11GetPropertyEv: argument 0"}
!38 = distinct !{!38, !"_ZNK5blink17InterpolationType11GetPropertyEv"}
!39 = !{i8 0, i8 2}
!40 = !{!"branch_weights", i32 2000, i32 1}
