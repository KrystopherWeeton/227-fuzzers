; ModuleID = '../../third_party/crashpad/crashpad/minidump/minidump_writable.cc'
source_filename = "../../third_party/crashpad/crashpad/minidump/minidump_writable.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.crashpad::internal::MinidumpWritable" = type <{ i32 (...)**, %"class.std::__1::vector", %"class.std::__1::vector.1", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32**, i32**, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32** }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %struct.MINIDUMP_LOCATION_DESCRIPTOR**, %struct.MINIDUMP_LOCATION_DESCRIPTOR**, %"class.std::__1::__compressed_pair.3" }
%struct.MINIDUMP_LOCATION_DESCRIPTOR = type { i32, i32 }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %struct.MINIDUMP_LOCATION_DESCRIPTOR** }
%"class.crashpad::FileWriterInterface" = type { %"class.crashpad::FileSeekerInterface" }
%"class.crashpad::FileSeekerInterface" = type { i32 (...)** }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"class.crashpad::internal::MinidumpWritable"**, %"class.crashpad::internal::MinidumpWritable"**, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.crashpad::internal::MinidumpWritable"** }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@_ZTVN8crashpad8internal16MinidumpWritableE = hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.crashpad::internal::MinidumpWritable"*)* @_ZN8crashpad8internal16MinidumpWritableD2Ev to i8*), i8* bitcast (void (%"class.crashpad::internal::MinidumpWritable"*)* @_ZN8crashpad8internal16MinidumpWritableD0Ev to i8*), i8* bitcast (i1 (%"class.crashpad::internal::MinidumpWritable"*, %"class.crashpad::FileWriterInterface"*)* @_ZN8crashpad8internal16MinidumpWritable15WriteEverythingEPNS_19FileWriterInterfaceE to i8*), i8* bitcast (i1 (%"class.crashpad::internal::MinidumpWritable"*)* @_ZN8crashpad8internal16MinidumpWritable6FreezeEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i64 (%"class.crashpad::internal::MinidumpWritable"*)* @_ZN8crashpad8internal16MinidumpWritable9AlignmentEv to i8*), i8* bitcast (void (%"class.std::__1::vector.8"*, %"class.crashpad::internal::MinidumpWritable"*)* @_ZN8crashpad8internal16MinidumpWritable8ChildrenEv to i8*), i8* bitcast (i32 (%"class.crashpad::internal::MinidumpWritable"*)* @_ZN8crashpad8internal16MinidumpWritable10WritePhaseEv to i8*), i8* bitcast (i1 (%"class.crashpad::internal::MinidumpWritable"*, i64)* @_ZN8crashpad8internal16MinidumpWritable21WillWriteAtOffsetImplEl to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@.str = private unnamed_addr constant [18 x i8] c"local_offset >= 0\00", align 1
@.str.1 = private unnamed_addr constant [66 x i8] c"../../third_party/crashpad/crashpad/minidump/minidump_writable.cc\00", align 1
@.str.2 = private unnamed_addr constant [31 x i8] c"alignment <= kMaximumAlignment\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"offset \00", align 1
@.str.4 = private unnamed_addr constant [14 x i8] c" out of range\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"size \00", align 1
@_ZZN8crashpad8internal16MinidumpWritable21WritePaddingAndObjectEPNS_19FileWriterInterfaceEE7kZeroes = internal constant [15 x i8] zeroinitializer, align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN8crashpad8internal16MinidumpWritableD1Ev = hidden unnamed_addr alias void (%"class.crashpad::internal::MinidumpWritable"*), void (%"class.crashpad::internal::MinidumpWritable"*)* @_ZN8crashpad8internal16MinidumpWritableD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8crashpad8internal16MinidumpWritableD2Ev(%"class.crashpad::internal::MinidumpWritable"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.crashpad::internal::MinidumpWritable", %"class.crashpad::internal::MinidumpWritable"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN8crashpad8internal16MinidumpWritableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.crashpad::internal::MinidumpWritable", %"class.crashpad::internal::MinidumpWritable"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %struct.MINIDUMP_LOCATION_DESCRIPTOR**, %struct.MINIDUMP_LOCATION_DESCRIPTOR*** %3, align 8
  %5 = icmp eq %struct.MINIDUMP_LOCATION_DESCRIPTOR** %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %struct.MINIDUMP_LOCATION_DESCRIPTOR** %4 to i64
  %8 = getelementptr inbounds %"class.crashpad::internal::MinidumpWritable", %"class.crashpad::internal::MinidumpWritable"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = bitcast %struct.MINIDUMP_LOCATION_DESCRIPTOR*** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %struct.MINIDUMP_LOCATION_DESCRIPTOR** %4 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.crashpad::internal::MinidumpWritable", %"class.crashpad::internal::MinidumpWritable"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load i32**, i32*** %12, align 8
  %14 = icmp eq i32** %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint i32** %13 to i64
  %17 = getelementptr inbounds %"class.crashpad::internal::MinidumpWritable", %"class.crashpad::internal::MinidumpWritable"* %0, i64 0, i32 1, i32 0, i32 1
  %18 = bitcast i32*** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast i32** %13 to i8*
  tail call void @_ZdlPv(i8* %19) #11
  br label %20

20:                                               ; preds = %11, %15
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN8crashpad8internal16MinidumpWritableD0Ev(%"class.crashpad::internal::MinidumpWritable"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8crashpad8internal16MinidumpWritable15WriteEverythingEPNS_19FileWriterInterfaceE(%"class.crashpad::internal::MinidumpWritable"*, %"class.crashpad::FileWriterInterface"*) unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = alloca %"class.std::__1::vector.8", align 8
  %5 = bitcast %"class.crashpad::internal::MinidumpWritable"* %0 to i1 (%"class.crashpad::internal::MinidumpWritable"*)***
  %6 = load i1 (%"class.crashpad::internal::MinidumpWritable"*)**, i1 (%"class.crashpad::internal::MinidumpWritable"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.crashpad::internal::MinidumpWritable"*)*, i1 (%"class.crashpad::internal::MinidumpWritable"*)** %6, i64 3
  %8 = load i1 (%"class.crashpad::internal::MinidumpWritable"*)*, i1 (%"class.crashpad::internal::MinidumpWritable"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.crashpad::internal::MinidumpWritable"* %0) #13
  br i1 %9, label %10, label %61

10:                                               ; preds = %2
  %11 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #13
  store i64 0, i64* %3, align 8
  %12 = bitcast %"class.std::__1::vector.8"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #13
  %13 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %4, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %4, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 24, i1 false) #13
  %15 = call i64 @_ZN8crashpad8internal16MinidumpWritable17WillWriteAtOffsetENS1_5PhaseEPlPNSt3__16vectorIPS1_NS4_9allocatorIS6_EEEE(%"class.crashpad::internal::MinidumpWritable"* %0, i32 0, i64* nonnull %3, %"class.std::__1::vector.8"* nonnull %4)
  %16 = icmp eq i64 %15, -1
  br i1 %16, label %49, label %17

17:                                               ; preds = %10
  %18 = load i64, i64* %3, align 8
  %19 = add i64 %18, %15
  store i64 %19, i64* %3, align 8
  %20 = call i64 @_ZN8crashpad8internal16MinidumpWritable17WillWriteAtOffsetENS1_5PhaseEPlPNSt3__16vectorIPS1_NS4_9allocatorIS6_EEEE(%"class.crashpad::internal::MinidumpWritable"* %0, i32 1, i64* nonnull %3, %"class.std::__1::vector.8"* nonnull %4)
  %21 = icmp eq i64 %20, -1
  br i1 %21, label %49, label %22

22:                                               ; preds = %17
  %23 = load %"class.crashpad::internal::MinidumpWritable"**, %"class.crashpad::internal::MinidumpWritable"*** %13, align 8
  %24 = load %"class.crashpad::internal::MinidumpWritable"**, %"class.crashpad::internal::MinidumpWritable"*** %14, align 8
  %25 = icmp eq %"class.crashpad::internal::MinidumpWritable"** %23, %24
  br i1 %25, label %52, label %26

26:                                               ; preds = %22
  %27 = bitcast %"class.crashpad::FileWriterInterface"* %1 to i1 (%"class.crashpad::FileWriterInterface"*, i8*, i64)***
  br label %28

28:                                               ; preds = %26, %45
  %29 = phi %"class.crashpad::internal::MinidumpWritable"** [ %23, %26 ], [ %47, %45 ]
  %30 = load %"class.crashpad::internal::MinidumpWritable"*, %"class.crashpad::internal::MinidumpWritable"** %29, align 8
  %31 = getelementptr inbounds %"class.crashpad::internal::MinidumpWritable", %"class.crashpad::internal::MinidumpWritable"* %30, i64 0, i32 3
  %32 = load i64, i64* %31, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %39, label %34

34:                                               ; preds = %28
  %35 = load i1 (%"class.crashpad::FileWriterInterface"*, i8*, i64)**, i1 (%"class.crashpad::FileWriterInterface"*, i8*, i64)*** %27, align 8
  %36 = getelementptr inbounds i1 (%"class.crashpad::FileWriterInterface"*, i8*, i64)*, i1 (%"class.crashpad::FileWriterInterface"*, i8*, i64)** %35, i64 3
  %37 = load i1 (%"class.crashpad::FileWriterInterface"*, i8*, i64)*, i1 (%"class.crashpad::FileWriterInterface"*, i8*, i64)** %36, align 8
  %38 = call zeroext i1 %37(%"class.crashpad::FileWriterInterface"* %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @_ZZN8crashpad8internal16MinidumpWritable21WritePaddingAndObjectEPNS_19FileWriterInterfaceEE7kZeroes, i64 0, i64 0), i64 %32) #13
  br i1 %38, label %39, label %49

39:                                               ; preds = %34, %28
  %40 = bitcast %"class.crashpad::internal::MinidumpWritable"* %30 to i1 (%"class.crashpad::internal::MinidumpWritable"*, %"class.crashpad::FileWriterInterface"*)***
  %41 = load i1 (%"class.crashpad::internal::MinidumpWritable"*, %"class.crashpad::FileWriterInterface"*)**, i1 (%"class.crashpad::internal::MinidumpWritable"*, %"class.crashpad::FileWriterInterface"*)*** %40, align 8
  %42 = getelementptr inbounds i1 (%"class.crashpad::internal::MinidumpWritable"*, %"class.crashpad::FileWriterInterface"*)*, i1 (%"class.crashpad::internal::MinidumpWritable"*, %"class.crashpad::FileWriterInterface"*)** %41, i64 9
  %43 = load i1 (%"class.crashpad::internal::MinidumpWritable"*, %"class.crashpad::FileWriterInterface"*)*, i1 (%"class.crashpad::internal::MinidumpWritable"*, %"class.crashpad::FileWriterInterface"*)** %42, align 8
  %44 = call zeroext i1 %43(%"class.crashpad::internal::MinidumpWritable"* %30, %"class.crashpad::FileWriterInterface"* %1) #13
  br i1 %44, label %45, label %49

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.crashpad::internal::MinidumpWritable", %"class.crashpad::internal::MinidumpWritable"* %30, i64 0, i32 4
  store i32 3, i32* %46, align 8
  %47 = getelementptr inbounds %"class.crashpad::internal::MinidumpWritable"*, %"class.crashpad::internal::MinidumpWritable"** %29, i64 1
  %48 = icmp eq %"class.crashpad::internal::MinidumpWritable"** %47, %24
  br i1 %48, label %49, label %28

49:                                               ; preds = %45, %39, %34, %10, %17
  %50 = phi i1 [ false, %17 ], [ false, %10 ], [ true, %45 ], [ false, %39 ], [ false, %34 ]
  %51 = load %"class.crashpad::internal::MinidumpWritable"**, %"class.crashpad::internal::MinidumpWritable"*** %13, align 8
  br label %52

52:                                               ; preds = %49, %22
  %53 = phi %"class.crashpad::internal::MinidumpWritable"** [ %51, %49 ], [ %23, %22 ]
  %54 = phi i1 [ %50, %49 ], [ true, %22 ]
  %55 = icmp eq %"class.crashpad::internal::MinidumpWritable"** %53, null
  br i1 %55, label %60, label %56

56:                                               ; preds = %52
  %57 = ptrtoint %"class.crashpad::internal::MinidumpWritable"** %53 to i64
  %58 = bitcast %"class.crashpad::internal::MinidumpWritable"*** %14 to i64*
  store i64 %57, i64* %58, align 8
  %59 = bitcast %"class.crashpad::internal::MinidumpWritable"** %53 to i8*
  call void @_ZdlPv(i8* %59) #11
  br label %60

60:                                               ; preds = %52, %56
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #13
  br label %61

61:                                               ; preds = %2, %60
  %62 = phi i1 [ %54, %60 ], [ false, %2 ]
  ret i1 %62
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN8crashpad8internal16MinidumpWritable17WillWriteAtOffsetENS1_5PhaseEPlPNSt3__16vectorIPS1_NS4_9allocatorIS6_EEEE(%"class.crashpad::internal::MinidumpWritable"*, i32, i64* nocapture, %"class.std::__1::vector.8"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckOpResult", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca %"class.logging::LogMessage", align 8
  %12 = alloca %"class.logging::LogMessage", align 8
  %13 = alloca %"class.std::__1::vector.8", align 8
  %14 = alloca i64, align 8
  %15 = alloca %"class.logging::LogMessage", align 8
  %16 = load i64, i64* %2, align 8
  %17 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp slt i64 %16, 0
  br i1 %20, label %22, label %21

21:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %4
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %16) #13
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* %23, i8* %24) #13
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.1, i64 0, i64 0), i32 126, %"class.logging::CheckOpResult"* nonnull %7) #13
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #13
  br label %31

31:                                               ; preds = %21, %22, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  %32 = bitcast %"class.crashpad::internal::MinidumpWritable"* %0 to i32 (%"class.crashpad::internal::MinidumpWritable"*)***
  %33 = load i32 (%"class.crashpad::internal::MinidumpWritable"*)**, i32 (%"class.crashpad::internal::MinidumpWritable"*)*** %32, align 8
  %34 = getelementptr inbounds i32 (%"class.crashpad::internal::MinidumpWritable"*)*, i32 (%"class.crashpad::internal::MinidumpWritable"*)** %33, i64 7
  %35 = load i32 (%"class.crashpad::internal::MinidumpWritable"*)*, i32 (%"class.crashpad::internal::MinidumpWritable"*)** %34, align 8
  %36 = call i32 %35(%"class.crashpad::internal::MinidumpWritable"* %0) #13
  %37 = icmp eq i32 %36, %1
  br i1 %37, label %38, label %287

38:                                               ; preds = %31
  %39 = ptrtoint %"class.crashpad::internal::MinidumpWritable"* %0 to i64
  %40 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %3, i64 0, i32 0, i32 1
  %41 = load %"class.crashpad::internal::MinidumpWritable"**, %"class.crashpad::internal::MinidumpWritable"*** %40, align 8
  %42 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %43 = load %"class.crashpad::internal::MinidumpWritable"**, %"class.crashpad::internal::MinidumpWritable"*** %42, align 8
  %44 = icmp ult %"class.crashpad::internal::MinidumpWritable"** %41, %43
  %45 = ptrtoint %"class.crashpad::internal::MinidumpWritable"** %43 to i64
  br i1 %44, label %46, label %51

46:                                               ; preds = %38
  %47 = bitcast %"class.crashpad::internal::MinidumpWritable"** %41 to i64*
  store i64 %39, i64* %47, align 8
  %48 = getelementptr inbounds %"class.crashpad::internal::MinidumpWritable"*, %"class.crashpad::internal::MinidumpWritable"** %41, i64 1
  %49 = ptrtoint %"class.crashpad::internal::MinidumpWritable"** %48 to i64
  %50 = bitcast %"class.crashpad::internal::MinidumpWritable"*** %40 to i64*
  store i64 %49, i64* %50, align 8
  br label %108

51:                                               ; preds = %38
  %52 = ptrtoint %"class.crashpad::internal::MinidumpWritable"** %41 to i64
  %53 = bitcast %"class.crashpad::internal::MinidumpWritable"*** %40 to i64*
  %54 = bitcast %"class.std::__1::vector.8"* %3 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = sub i64 %52, %55
  %57 = ashr exact i64 %56, 3
  %58 = add nsw i64 %57, 1
  %59 = icmp ugt i64 %58, 2305843009213693951
  br i1 %59, label %60, label %62

60:                                               ; preds = %51
  %61 = bitcast %"class.std::__1::vector.8"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %61) #12
  unreachable

62:                                               ; preds = %51
  %63 = bitcast %"class.crashpad::internal::MinidumpWritable"*** %42 to i64*
  %64 = sub i64 %45, %55
  %65 = ashr exact i64 %64, 3
  %66 = icmp ult i64 %65, 1152921504606846975
  br i1 %66, label %67, label %75

67:                                               ; preds = %62
  %68 = ashr exact i64 %64, 2
  %69 = icmp ult i64 %68, %58
  %70 = select i1 %69, i64 %58, i64 %68
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %80, label %72

72:                                               ; preds = %67
  %73 = icmp ugt i64 %70, 2305843009213693951
  br i1 %73, label %74, label %75

74:                                               ; preds = %72
  call void @abort() #12
  unreachable

75:                                               ; preds = %72, %62
  %76 = phi i64 [ %70, %72 ], [ 2305843009213693951, %62 ]
  %77 = shl i64 %76, 3
  %78 = call i8* @_Znwm(i64 %77) #11
  %79 = bitcast i8* %78 to %"class.crashpad::internal::MinidumpWritable"**
  br label %80

80:                                               ; preds = %75, %67
  %81 = phi i64 [ %76, %75 ], [ 0, %67 ]
  %82 = phi %"class.crashpad::internal::MinidumpWritable"** [ %79, %75 ], [ null, %67 ]
  %83 = getelementptr inbounds %"class.crashpad::internal::MinidumpWritable"*, %"class.crashpad::internal::MinidumpWritable"** %82, i64 %57
  %84 = getelementptr inbounds %"class.crashpad::internal::MinidumpWritable"*, %"class.crashpad::internal::MinidumpWritable"** %82, i64 %81
  %85 = ptrtoint %"class.crashpad::internal::MinidumpWritable"** %84 to i64
  %86 = bitcast %"class.crashpad::internal::MinidumpWritable"** %83 to i64*
  store i64 %39, i64* %86, align 8
  %87 = getelementptr inbounds %"class.crashpad::internal::MinidumpWritable"*, %"class.crashpad::internal::MinidumpWritable"** %83, i64 1
  %88 = ptrtoint %"class.crashpad::internal::MinidumpWritable"** %87 to i64
  %89 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %3, i64 0, i32 0, i32 0
  %90 = load %"class.crashpad::internal::MinidumpWritable"**, %"class.crashpad::internal::MinidumpWritable"*** %89, align 8
  %91 = load i64, i64* %53, align 8
  %92 = ptrtoint %"class.crashpad::internal::MinidumpWritable"** %90 to i64
  %93 = sub i64 %91, %92
  %94 = ashr exact i64 %93, 3
  %95 = sub nsw i64 0, %94
  %96 = getelementptr inbounds %"class.crashpad::internal::MinidumpWritable"*, %"class.crashpad::internal::MinidumpWritable"** %83, i64 %95
  %97 = ptrtoint %"class.crashpad::internal::MinidumpWritable"** %96 to i64
  %98 = icmp sgt i64 %93, 0
  br i1 %98, label %99, label %103

99:                                               ; preds = %80
  %100 = bitcast %"class.crashpad::internal::MinidumpWritable"** %96 to i8*
  %101 = bitcast %"class.crashpad::internal::MinidumpWritable"** %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %101, i64 %93, i1 false) #13
  %102 = load %"class.crashpad::internal::MinidumpWritable"**, %"class.crashpad::internal::MinidumpWritable"*** %89, align 8
  br label %103

103:                                              ; preds = %99, %80
  %104 = phi %"class.crashpad::internal::MinidumpWritable"** [ %90, %80 ], [ %102, %99 ]
  store i64 %97, i64* %54, align 8
  store i64 %88, i64* %53, align 8
  store i64 %85, i64* %63, align 8
  %105 = icmp eq %"class.crashpad::internal::MinidumpWritable"** %104, null
  br i1 %105, label %108, label %106

106:                                              ; preds = %103
  %107 = bitcast %"class.crashpad::internal::MinidumpWritable"** %104 to i8*
  call void @_ZdlPv(i8* %107) #11
  br label %108

108:                                              ; preds = %46, %103, %106
  %109 = bitcast %"class.crashpad::internal::MinidumpWritable"* %0 to i64 (%"class.crashpad::internal::MinidumpWritable"*)***
  %110 = load i64 (%"class.crashpad::internal::MinidumpWritable"*)**, i64 (%"class.crashpad::internal::MinidumpWritable"*)*** %109, align 8
  %111 = getelementptr inbounds i64 (%"class.crashpad::internal::MinidumpWritable"*)*, i64 (%"class.crashpad::internal::MinidumpWritable"*)** %110, i64 4
  %112 = load i64 (%"class.crashpad::internal::MinidumpWritable"*)*, i64 (%"class.crashpad::internal::MinidumpWritable"*)** %111, align 8
  %113 = call i64 %112(%"class.crashpad::internal::MinidumpWritable"* %0) #13
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %139, label %115

115:                                              ; preds = %108
  %116 = load i64 (%"class.crashpad::internal::MinidumpWritable"*)**, i64 (%"class.crashpad::internal::MinidumpWritable"*)*** %109, align 8
  %117 = getelementptr inbounds i64 (%"class.crashpad::internal::MinidumpWritable"*)*, i64 (%"class.crashpad::internal::MinidumpWritable"*)** %116, i64 5
  %118 = load i64 (%"class.crashpad::internal::MinidumpWritable"*)*, i64 (%"class.crashpad::internal::MinidumpWritable"*)** %117, align 8
  %119 = call i64 %118(%"class.crashpad::internal::MinidumpWritable"* %0) #13
  %120 = bitcast %"class.logging::CheckOpResult"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #13
  %121 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %9, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %121, align 8
  %122 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %122)
  %123 = icmp ugt i64 %119, 16
  br i1 %123, label %125, label %124

124:                                              ; preds = %115
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %122)
  store i8* null, i8** %121, align 8
  br label %134

125:                                              ; preds = %115
  %126 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %119) #13
  %127 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 16) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0), i8* %126, i8* %127) #13
  %128 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %129 = load i8*, i8** %128, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %122)
  store i8* %129, i8** %121, align 8
  %130 = icmp eq i8* %129, null
  br i1 %130, label %134, label %131

131:                                              ; preds = %125
  %132 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %132) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.1, i64 0, i64 0), i32 144, %"class.logging::CheckOpResult"* nonnull %9) #13
  %133 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %132) #13
  br label %134

134:                                              ; preds = %124, %125, %131
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #13
  %135 = urem i64 %16, %119
  %136 = sub i64 %119, %135
  %137 = urem i64 %136, %119
  %138 = add i64 %137, %16
  store i64 %138, i64* %2, align 8
  br label %139

139:                                              ; preds = %108, %134
  %140 = phi i64 [ %137, %134 ], [ 0, %108 ]
  %141 = phi i64 [ %138, %134 ], [ %16, %108 ]
  %142 = getelementptr inbounds %"class.crashpad::internal::MinidumpWritable", %"class.crashpad::internal::MinidumpWritable"* %0, i64 0, i32 3
  store i64 %140, i64* %142, align 8
  %143 = bitcast %"class.crashpad::internal::MinidumpWritable"* %0 to i1 (%"class.crashpad::internal::MinidumpWritable"*, i64)***
  %144 = load i1 (%"class.crashpad::internal::MinidumpWritable"*, i64)**, i1 (%"class.crashpad::internal::MinidumpWritable"*, i64)*** %143, align 8
  %145 = getelementptr inbounds i1 (%"class.crashpad::internal::MinidumpWritable"*, i64)*, i1 (%"class.crashpad::internal::MinidumpWritable"*, i64)** %144, i64 8
  %146 = load i1 (%"class.crashpad::internal::MinidumpWritable"*, i64)*, i1 (%"class.crashpad::internal::MinidumpWritable"*, i64)** %145, align 8
  %147 = call zeroext i1 %146(%"class.crashpad::internal::MinidumpWritable"* %0, i64 %141) #13
  br i1 %147, label %148, label %339

148:                                              ; preds = %139
  %149 = getelementptr inbounds %"class.crashpad::internal::MinidumpWritable", %"class.crashpad::internal::MinidumpWritable"* %0, i64 0, i32 1, i32 0, i32 0
  %150 = load i32**, i32*** %149, align 8
  %151 = ptrtoint i32** %150 to i64
  %152 = getelementptr inbounds %"class.crashpad::internal::MinidumpWritable", %"class.crashpad::internal::MinidumpWritable"* %0, i64 0, i32 1, i32 0, i32 1
  %153 = load i32**, i32*** %152, align 8
  %154 = icmp eq i32** %150, %153
  br i1 %154, label %155, label %161

155:                                              ; preds = %148
  %156 = getelementptr inbounds %"class.crashpad::internal::MinidumpWritable", %"class.crashpad::internal::MinidumpWritable"* %0, i64 0, i32 2, i32 0, i32 0
  %157 = load %struct.MINIDUMP_LOCATION_DESCRIPTOR**, %struct.MINIDUMP_LOCATION_DESCRIPTOR*** %156, align 8
  %158 = getelementptr inbounds %"class.crashpad::internal::MinidumpWritable", %"class.crashpad::internal::MinidumpWritable"* %0, i64 0, i32 2, i32 0, i32 1
  %159 = load %struct.MINIDUMP_LOCATION_DESCRIPTOR**, %struct.MINIDUMP_LOCATION_DESCRIPTOR*** %158, align 8
  %160 = icmp eq %struct.MINIDUMP_LOCATION_DESCRIPTOR** %157, %159
  br i1 %160, label %285, label %161

161:                                              ; preds = %155, %148
  %162 = icmp ult i64 %141, 4294967296
  br i1 %162, label %172, label %163

163:                                              ; preds = %161
  %164 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #13
  br i1 %164, label %165, label %339

165:                                              ; preds = %163
  %166 = bitcast %"class.logging::LogMessage"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %166) #13
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %11, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.1, i64 0, i64 0), i32 170, i32 2) #13
  %167 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %11, i64 0, i32 2
  %168 = bitcast %"class.std::__1::basic_ostringstream"* %167 to %"class.std::__1::basic_ostream"*
  %169 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %168, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0), i64 7) #13
  %170 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEl(%"class.std::__1::basic_ostream"* %169, i64 %141) #13
  %171 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %170, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0), i64 13) #13
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %166) #13
  br label %339

172:                                              ; preds = %161
  %173 = trunc i64 %141 to i32
  br i1 %154, label %192, label %174

174:                                              ; preds = %172
  %175 = getelementptr i32*, i32** %153, i64 -1
  %176 = ptrtoint i32** %175 to i64
  %177 = sub i64 %176, %151
  %178 = lshr i64 %177, 3
  %179 = add nuw nsw i64 %178, 1
  %180 = and i64 %179, 7
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %189, label %182

182:                                              ; preds = %174, %182
  %183 = phi i32** [ %186, %182 ], [ %150, %174 ]
  %184 = phi i64 [ %187, %182 ], [ %180, %174 ]
  %185 = load i32*, i32** %183, align 8
  store i32 %173, i32* %185, align 4
  %186 = getelementptr inbounds i32*, i32** %183, i64 1
  %187 = add i64 %184, -1
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %189, label %182, !llvm.loop !2

189:                                              ; preds = %182, %174
  %190 = phi i32** [ %150, %174 ], [ %186, %182 ]
  %191 = icmp ult i64 %177, 56
  br i1 %191, label %192, label %199

192:                                              ; preds = %189, %199, %172
  %193 = getelementptr inbounds %"class.crashpad::internal::MinidumpWritable", %"class.crashpad::internal::MinidumpWritable"* %0, i64 0, i32 2, i32 0, i32 0
  %194 = load %struct.MINIDUMP_LOCATION_DESCRIPTOR**, %struct.MINIDUMP_LOCATION_DESCRIPTOR*** %193, align 8
  %195 = ptrtoint %struct.MINIDUMP_LOCATION_DESCRIPTOR** %194 to i64
  %196 = getelementptr inbounds %"class.crashpad::internal::MinidumpWritable", %"class.crashpad::internal::MinidumpWritable"* %0, i64 0, i32 2, i32 0, i32 1
  %197 = load %struct.MINIDUMP_LOCATION_DESCRIPTOR**, %struct.MINIDUMP_LOCATION_DESCRIPTOR*** %196, align 8
  %198 = icmp eq %struct.MINIDUMP_LOCATION_DESCRIPTOR** %194, %197
  br i1 %198, label %285, label %218

199:                                              ; preds = %189, %199
  %200 = phi i32** [ %216, %199 ], [ %190, %189 ]
  %201 = load i32*, i32** %200, align 8
  store i32 %173, i32* %201, align 4
  %202 = getelementptr inbounds i32*, i32** %200, i64 1
  %203 = load i32*, i32** %202, align 8
  store i32 %173, i32* %203, align 4
  %204 = getelementptr inbounds i32*, i32** %200, i64 2
  %205 = load i32*, i32** %204, align 8
  store i32 %173, i32* %205, align 4
  %206 = getelementptr inbounds i32*, i32** %200, i64 3
  %207 = load i32*, i32** %206, align 8
  store i32 %173, i32* %207, align 4
  %208 = getelementptr inbounds i32*, i32** %200, i64 4
  %209 = load i32*, i32** %208, align 8
  store i32 %173, i32* %209, align 4
  %210 = getelementptr inbounds i32*, i32** %200, i64 5
  %211 = load i32*, i32** %210, align 8
  store i32 %173, i32* %211, align 4
  %212 = getelementptr inbounds i32*, i32** %200, i64 6
  %213 = load i32*, i32** %212, align 8
  store i32 %173, i32* %213, align 4
  %214 = getelementptr inbounds i32*, i32** %200, i64 7
  %215 = load i32*, i32** %214, align 8
  store i32 %173, i32* %215, align 4
  %216 = getelementptr inbounds i32*, i32** %200, i64 8
  %217 = icmp eq i32** %216, %153
  br i1 %217, label %192, label %199

218:                                              ; preds = %192
  %219 = icmp ult i64 %113, 4294967296
  br i1 %219, label %229, label %220

220:                                              ; preds = %218
  %221 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #13
  br i1 %221, label %222, label %339

222:                                              ; preds = %220
  %223 = bitcast %"class.logging::LogMessage"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %223) #13
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %12, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.1, i64 0, i64 0), i32 181, i32 2) #13
  %224 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %12, i64 0, i32 2
  %225 = bitcast %"class.std::__1::basic_ostringstream"* %224 to %"class.std::__1::basic_ostream"*
  %226 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %225, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i64 5) #13
  %227 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %226, i64 %113) #13
  %228 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %227, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0), i64 13) #13
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %12) #13
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %223) #13
  br label %339

229:                                              ; preds = %218
  %230 = trunc i64 %113 to i32
  %231 = getelementptr %struct.MINIDUMP_LOCATION_DESCRIPTOR*, %struct.MINIDUMP_LOCATION_DESCRIPTOR** %197, i64 -1
  %232 = ptrtoint %struct.MINIDUMP_LOCATION_DESCRIPTOR** %231 to i64
  %233 = sub i64 %232, %195
  %234 = lshr i64 %233, 3
  %235 = add nuw nsw i64 %234, 1
  %236 = and i64 %235, 7
  %237 = icmp eq i64 %236, 0
  br i1 %237, label %247, label %238

238:                                              ; preds = %229, %238
  %239 = phi %struct.MINIDUMP_LOCATION_DESCRIPTOR** [ %244, %238 ], [ %194, %229 ]
  %240 = phi i64 [ %245, %238 ], [ %236, %229 ]
  %241 = load %struct.MINIDUMP_LOCATION_DESCRIPTOR*, %struct.MINIDUMP_LOCATION_DESCRIPTOR** %239, align 8
  %242 = getelementptr inbounds %struct.MINIDUMP_LOCATION_DESCRIPTOR, %struct.MINIDUMP_LOCATION_DESCRIPTOR* %241, i64 0, i32 0
  store i32 %230, i32* %242, align 4
  %243 = getelementptr inbounds %struct.MINIDUMP_LOCATION_DESCRIPTOR, %struct.MINIDUMP_LOCATION_DESCRIPTOR* %241, i64 0, i32 1
  store i32 %173, i32* %243, align 4
  %244 = getelementptr inbounds %struct.MINIDUMP_LOCATION_DESCRIPTOR*, %struct.MINIDUMP_LOCATION_DESCRIPTOR** %239, i64 1
  %245 = add i64 %240, -1
  %246 = icmp eq i64 %245, 0
  br i1 %246, label %247, label %238, !llvm.loop !4

247:                                              ; preds = %238, %229
  %248 = phi %struct.MINIDUMP_LOCATION_DESCRIPTOR** [ %194, %229 ], [ %244, %238 ]
  %249 = icmp ult i64 %233, 56
  br i1 %249, label %285, label %250

250:                                              ; preds = %247, %250
  %251 = phi %struct.MINIDUMP_LOCATION_DESCRIPTOR** [ %283, %250 ], [ %248, %247 ]
  %252 = load %struct.MINIDUMP_LOCATION_DESCRIPTOR*, %struct.MINIDUMP_LOCATION_DESCRIPTOR** %251, align 8
  %253 = getelementptr inbounds %struct.MINIDUMP_LOCATION_DESCRIPTOR, %struct.MINIDUMP_LOCATION_DESCRIPTOR* %252, i64 0, i32 0
  store i32 %230, i32* %253, align 4
  %254 = getelementptr inbounds %struct.MINIDUMP_LOCATION_DESCRIPTOR, %struct.MINIDUMP_LOCATION_DESCRIPTOR* %252, i64 0, i32 1
  store i32 %173, i32* %254, align 4
  %255 = getelementptr inbounds %struct.MINIDUMP_LOCATION_DESCRIPTOR*, %struct.MINIDUMP_LOCATION_DESCRIPTOR** %251, i64 1
  %256 = load %struct.MINIDUMP_LOCATION_DESCRIPTOR*, %struct.MINIDUMP_LOCATION_DESCRIPTOR** %255, align 8
  %257 = getelementptr inbounds %struct.MINIDUMP_LOCATION_DESCRIPTOR, %struct.MINIDUMP_LOCATION_DESCRIPTOR* %256, i64 0, i32 0
  store i32 %230, i32* %257, align 4
  %258 = getelementptr inbounds %struct.MINIDUMP_LOCATION_DESCRIPTOR, %struct.MINIDUMP_LOCATION_DESCRIPTOR* %256, i64 0, i32 1
  store i32 %173, i32* %258, align 4
  %259 = getelementptr inbounds %struct.MINIDUMP_LOCATION_DESCRIPTOR*, %struct.MINIDUMP_LOCATION_DESCRIPTOR** %251, i64 2
  %260 = load %struct.MINIDUMP_LOCATION_DESCRIPTOR*, %struct.MINIDUMP_LOCATION_DESCRIPTOR** %259, align 8
  %261 = getelementptr inbounds %struct.MINIDUMP_LOCATION_DESCRIPTOR, %struct.MINIDUMP_LOCATION_DESCRIPTOR* %260, i64 0, i32 0
  store i32 %230, i32* %261, align 4
  %262 = getelementptr inbounds %struct.MINIDUMP_LOCATION_DESCRIPTOR, %struct.MINIDUMP_LOCATION_DESCRIPTOR* %260, i64 0, i32 1
  store i32 %173, i32* %262, align 4
  %263 = getelementptr inbounds %struct.MINIDUMP_LOCATION_DESCRIPTOR*, %struct.MINIDUMP_LOCATION_DESCRIPTOR** %251, i64 3
  %264 = load %struct.MINIDUMP_LOCATION_DESCRIPTOR*, %struct.MINIDUMP_LOCATION_DESCRIPTOR** %263, align 8
  %265 = getelementptr inbounds %struct.MINIDUMP_LOCATION_DESCRIPTOR, %struct.MINIDUMP_LOCATION_DESCRIPTOR* %264, i64 0, i32 0
  store i32 %230, i32* %265, align 4
  %266 = getelementptr inbounds %struct.MINIDUMP_LOCATION_DESCRIPTOR, %struct.MINIDUMP_LOCATION_DESCRIPTOR* %264, i64 0, i32 1
  store i32 %173, i32* %266, align 4
  %267 = getelementptr inbounds %struct.MINIDUMP_LOCATION_DESCRIPTOR*, %struct.MINIDUMP_LOCATION_DESCRIPTOR** %251, i64 4
  %268 = load %struct.MINIDUMP_LOCATION_DESCRIPTOR*, %struct.MINIDUMP_LOCATION_DESCRIPTOR** %267, align 8
  %269 = getelementptr inbounds %struct.MINIDUMP_LOCATION_DESCRIPTOR, %struct.MINIDUMP_LOCATION_DESCRIPTOR* %268, i64 0, i32 0
  store i32 %230, i32* %269, align 4
  %270 = getelementptr inbounds %struct.MINIDUMP_LOCATION_DESCRIPTOR, %struct.MINIDUMP_LOCATION_DESCRIPTOR* %268, i64 0, i32 1
  store i32 %173, i32* %270, align 4
  %271 = getelementptr inbounds %struct.MINIDUMP_LOCATION_DESCRIPTOR*, %struct.MINIDUMP_LOCATION_DESCRIPTOR** %251, i64 5
  %272 = load %struct.MINIDUMP_LOCATION_DESCRIPTOR*, %struct.MINIDUMP_LOCATION_DESCRIPTOR** %271, align 8
  %273 = getelementptr inbounds %struct.MINIDUMP_LOCATION_DESCRIPTOR, %struct.MINIDUMP_LOCATION_DESCRIPTOR* %272, i64 0, i32 0
  store i32 %230, i32* %273, align 4
  %274 = getelementptr inbounds %struct.MINIDUMP_LOCATION_DESCRIPTOR, %struct.MINIDUMP_LOCATION_DESCRIPTOR* %272, i64 0, i32 1
  store i32 %173, i32* %274, align 4
  %275 = getelementptr inbounds %struct.MINIDUMP_LOCATION_DESCRIPTOR*, %struct.MINIDUMP_LOCATION_DESCRIPTOR** %251, i64 6
  %276 = load %struct.MINIDUMP_LOCATION_DESCRIPTOR*, %struct.MINIDUMP_LOCATION_DESCRIPTOR** %275, align 8
  %277 = getelementptr inbounds %struct.MINIDUMP_LOCATION_DESCRIPTOR, %struct.MINIDUMP_LOCATION_DESCRIPTOR* %276, i64 0, i32 0
  store i32 %230, i32* %277, align 4
  %278 = getelementptr inbounds %struct.MINIDUMP_LOCATION_DESCRIPTOR, %struct.MINIDUMP_LOCATION_DESCRIPTOR* %276, i64 0, i32 1
  store i32 %173, i32* %278, align 4
  %279 = getelementptr inbounds %struct.MINIDUMP_LOCATION_DESCRIPTOR*, %struct.MINIDUMP_LOCATION_DESCRIPTOR** %251, i64 7
  %280 = load %struct.MINIDUMP_LOCATION_DESCRIPTOR*, %struct.MINIDUMP_LOCATION_DESCRIPTOR** %279, align 8
  %281 = getelementptr inbounds %struct.MINIDUMP_LOCATION_DESCRIPTOR, %struct.MINIDUMP_LOCATION_DESCRIPTOR* %280, i64 0, i32 0
  store i32 %230, i32* %281, align 4
  %282 = getelementptr inbounds %struct.MINIDUMP_LOCATION_DESCRIPTOR, %struct.MINIDUMP_LOCATION_DESCRIPTOR* %280, i64 0, i32 1
  store i32 %173, i32* %282, align 4
  %283 = getelementptr inbounds %struct.MINIDUMP_LOCATION_DESCRIPTOR*, %struct.MINIDUMP_LOCATION_DESCRIPTOR** %251, i64 8
  %284 = icmp eq %struct.MINIDUMP_LOCATION_DESCRIPTOR** %283, %197
  br i1 %284, label %285, label %250

285:                                              ; preds = %247, %250, %192, %155
  %286 = getelementptr inbounds %"class.crashpad::internal::MinidumpWritable", %"class.crashpad::internal::MinidumpWritable"* %0, i64 0, i32 4
  store i32 2, i32* %286, align 8
  br label %287

287:                                              ; preds = %31, %285
  %288 = phi i64 [ %113, %285 ], [ 0, %31 ]
  %289 = phi i64 [ %140, %285 ], [ 0, %31 ]
  %290 = phi i64 [ %141, %285 ], [ %16, %31 ]
  %291 = bitcast %"class.std::__1::vector.8"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %291) #13
  %292 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %13, i64 0, i32 0, i32 0
  %293 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %13, i64 0, i32 0, i32 1
  %294 = bitcast %"class.crashpad::internal::MinidumpWritable"* %0 to void (%"class.std::__1::vector.8"*, %"class.crashpad::internal::MinidumpWritable"*)***
  %295 = bitcast %"class.std::__1::vector.8"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %295, i8 -86, i64 24, i1 false)
  %296 = load void (%"class.std::__1::vector.8"*, %"class.crashpad::internal::MinidumpWritable"*)**, void (%"class.std::__1::vector.8"*, %"class.crashpad::internal::MinidumpWritable"*)*** %294, align 8
  %297 = getelementptr inbounds void (%"class.std::__1::vector.8"*, %"class.crashpad::internal::MinidumpWritable"*)*, void (%"class.std::__1::vector.8"*, %"class.crashpad::internal::MinidumpWritable"*)** %296, i64 6
  %298 = load void (%"class.std::__1::vector.8"*, %"class.crashpad::internal::MinidumpWritable"*)*, void (%"class.std::__1::vector.8"*, %"class.crashpad::internal::MinidumpWritable"*)** %297, align 8
  call void %298(%"class.std::__1::vector.8"* nonnull sret %13, %"class.crashpad::internal::MinidumpWritable"* %0) #13
  %299 = load %"class.crashpad::internal::MinidumpWritable"**, %"class.crashpad::internal::MinidumpWritable"*** %292, align 8
  %300 = load %"class.crashpad::internal::MinidumpWritable"**, %"class.crashpad::internal::MinidumpWritable"*** %293, align 8
  %301 = icmp eq %"class.crashpad::internal::MinidumpWritable"** %299, %300
  br i1 %301, label %327, label %302

302:                                              ; preds = %287
  %303 = bitcast i64* %14 to i8*
  br label %304

304:                                              ; preds = %302, %322
  %305 = phi i64 [ %288, %302 ], [ %323, %322 ]
  %306 = phi %"class.crashpad::internal::MinidumpWritable"** [ %299, %302 ], [ %324, %322 ]
  %307 = load %"class.crashpad::internal::MinidumpWritable"*, %"class.crashpad::internal::MinidumpWritable"** %306, align 8
  %308 = add i64 %305, %290
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %303) #13
  store i64 -6148914691236517206, i64* %14, align 8
  %309 = icmp sgt i64 %308, -1
  br i1 %309, label %319, label %310

310:                                              ; preds = %304
  %311 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #13
  br i1 %311, label %312, label %326

312:                                              ; preds = %310
  %313 = bitcast %"class.logging::LogMessage"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %313) #13
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %15, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.1, i64 0, i64 0), i32 222, i32 2) #13
  %314 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %15, i64 0, i32 2
  %315 = bitcast %"class.std::__1::basic_ostringstream"* %314 to %"class.std::__1::basic_ostream"*
  %316 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %315, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0), i64 7) #13
  %317 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %316, i64 %308) #13
  %318 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %317, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0), i64 13) #13
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %15) #13
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %313) #13
  br label %326

319:                                              ; preds = %304
  store i64 %308, i64* %14, align 8
  %320 = call i64 @_ZN8crashpad8internal16MinidumpWritable17WillWriteAtOffsetENS1_5PhaseEPlPNSt3__16vectorIPS1_NS4_9allocatorIS6_EEEE(%"class.crashpad::internal::MinidumpWritable"* %307, i32 %1, i64* nonnull %14, %"class.std::__1::vector.8"* %3)
  %321 = icmp eq i64 %320, -1
  br i1 %321, label %326, label %322

322:                                              ; preds = %319
  %323 = add i64 %320, %305
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %303) #13
  %324 = getelementptr inbounds %"class.crashpad::internal::MinidumpWritable"*, %"class.crashpad::internal::MinidumpWritable"** %306, i64 1
  %325 = icmp eq %"class.crashpad::internal::MinidumpWritable"** %324, %300
  br i1 %325, label %327, label %304

326:                                              ; preds = %319, %310, %312
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %303) #13
  br label %330

327:                                              ; preds = %322, %287
  %328 = phi i64 [ %288, %287 ], [ %323, %322 ]
  %329 = add i64 %328, %289
  br label %330

330:                                              ; preds = %326, %327
  %331 = phi i64 [ %329, %327 ], [ -1, %326 ]
  %332 = load %"class.crashpad::internal::MinidumpWritable"**, %"class.crashpad::internal::MinidumpWritable"*** %292, align 8
  %333 = icmp eq %"class.crashpad::internal::MinidumpWritable"** %332, null
  br i1 %333, label %338, label %334

334:                                              ; preds = %330
  %335 = ptrtoint %"class.crashpad::internal::MinidumpWritable"** %332 to i64
  %336 = bitcast %"class.crashpad::internal::MinidumpWritable"*** %293 to i64*
  store i64 %335, i64* %336, align 8
  %337 = bitcast %"class.crashpad::internal::MinidumpWritable"** %332 to i8*
  call void @_ZdlPv(i8* %337) #11
  br label %338

338:                                              ; preds = %330, %334
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %291) #13
  br label %339

339:                                              ; preds = %222, %220, %165, %163, %139, %338
  %340 = phi i64 [ %331, %338 ], [ -1, %139 ], [ -1, %163 ], [ -1, %165 ], [ -1, %220 ], [ -1, %222 ]
  ret i64 %340
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8crashpad8internal16MinidumpWritable21WritePaddingAndObjectEPNS_19FileWriterInterfaceE(%"class.crashpad::internal::MinidumpWritable"*, %"class.crashpad::FileWriterInterface"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.crashpad::internal::MinidumpWritable", %"class.crashpad::internal::MinidumpWritable"* %0, i64 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.crashpad::FileWriterInterface"* %1 to i1 (%"class.crashpad::FileWriterInterface"*, i8*, i64)***
  %8 = load i1 (%"class.crashpad::FileWriterInterface"*, i8*, i64)**, i1 (%"class.crashpad::FileWriterInterface"*, i8*, i64)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.crashpad::FileWriterInterface"*, i8*, i64)*, i1 (%"class.crashpad::FileWriterInterface"*, i8*, i64)** %8, i64 3
  %10 = load i1 (%"class.crashpad::FileWriterInterface"*, i8*, i64)*, i1 (%"class.crashpad::FileWriterInterface"*, i8*, i64)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.crashpad::FileWriterInterface"* %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @_ZZN8crashpad8internal16MinidumpWritable21WritePaddingAndObjectEPNS_19FileWriterInterfaceEE7kZeroes, i64 0, i64 0), i64 %4) #13
  br i1 %11, label %12, label %20

12:                                               ; preds = %2, %6
  %13 = bitcast %"class.crashpad::internal::MinidumpWritable"* %0 to i1 (%"class.crashpad::internal::MinidumpWritable"*, %"class.crashpad::FileWriterInterface"*)***
  %14 = load i1 (%"class.crashpad::internal::MinidumpWritable"*, %"class.crashpad::FileWriterInterface"*)**, i1 (%"class.crashpad::internal::MinidumpWritable"*, %"class.crashpad::FileWriterInterface"*)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.crashpad::internal::MinidumpWritable"*, %"class.crashpad::FileWriterInterface"*)*, i1 (%"class.crashpad::internal::MinidumpWritable"*, %"class.crashpad::FileWriterInterface"*)** %14, i64 9
  %16 = load i1 (%"class.crashpad::internal::MinidumpWritable"*, %"class.crashpad::FileWriterInterface"*)*, i1 (%"class.crashpad::internal::MinidumpWritable"*, %"class.crashpad::FileWriterInterface"*)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.crashpad::internal::MinidumpWritable"* %0, %"class.crashpad::FileWriterInterface"* %1) #13
  br i1 %17, label %18, label %20

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.crashpad::internal::MinidumpWritable", %"class.crashpad::internal::MinidumpWritable"* %0, i64 0, i32 4
  store i32 3, i32* %19, align 8
  br label %20

20:                                               ; preds = %12, %6, %18
  %21 = phi i1 [ true, %18 ], [ false, %6 ], [ false, %12 ]
  ret i1 %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8crashpad8internal16MinidumpWritable11RegisterRVAEPj(%"class.crashpad::internal::MinidumpWritable"*, i32*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint i32* %1 to i64
  %4 = getelementptr inbounds %"class.crashpad::internal::MinidumpWritable", %"class.crashpad::internal::MinidumpWritable"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.crashpad::internal::MinidumpWritable", %"class.crashpad::internal::MinidumpWritable"* %0, i64 0, i32 1, i32 0, i32 1
  %6 = load i32**, i32*** %5, align 8
  %7 = getelementptr inbounds %"class.crashpad::internal::MinidumpWritable", %"class.crashpad::internal::MinidumpWritable"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %8 = load i32**, i32*** %7, align 8
  %9 = icmp eq i32** %6, %8
  %10 = ptrtoint i32** %8 to i64
  br i1 %9, label %16, label %11

11:                                               ; preds = %2
  %12 = bitcast i32** %6 to i64*
  store i64 %3, i64* %12, align 8
  %13 = getelementptr inbounds i32*, i32** %6, i64 1
  %14 = ptrtoint i32** %13 to i64
  %15 = bitcast i32*** %5 to i64*
  store i64 %14, i64* %15, align 8
  br label %73

16:                                               ; preds = %2
  %17 = ptrtoint i32** %6 to i64
  %18 = bitcast i32*** %5 to i64*
  %19 = bitcast %"class.std::__1::vector"* %4 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 3
  %23 = add nsw i64 %22, 1
  %24 = icmp ugt i64 %23, 2305843009213693951
  br i1 %24, label %25, label %27

25:                                               ; preds = %16
  %26 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %26) #12
  unreachable

27:                                               ; preds = %16
  %28 = bitcast i32*** %7 to i64*
  %29 = sub i64 %10, %20
  %30 = ashr exact i64 %29, 3
  %31 = icmp ult i64 %30, 1152921504606846975
  br i1 %31, label %32, label %40

32:                                               ; preds = %27
  %33 = ashr exact i64 %29, 2
  %34 = icmp ult i64 %33, %23
  %35 = select i1 %34, i64 %23, i64 %33
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %45, label %37

37:                                               ; preds = %32
  %38 = icmp ugt i64 %35, 2305843009213693951
  br i1 %38, label %39, label %40

39:                                               ; preds = %37
  tail call void @abort() #12
  unreachable

40:                                               ; preds = %37, %27
  %41 = phi i64 [ %35, %37 ], [ 2305843009213693951, %27 ]
  %42 = shl i64 %41, 3
  %43 = tail call i8* @_Znwm(i64 %42) #11
  %44 = bitcast i8* %43 to i32**
  br label %45

45:                                               ; preds = %40, %32
  %46 = phi i64 [ %41, %40 ], [ 0, %32 ]
  %47 = phi i32** [ %44, %40 ], [ null, %32 ]
  %48 = getelementptr inbounds i32*, i32** %47, i64 %22
  %49 = getelementptr inbounds i32*, i32** %47, i64 %46
  %50 = ptrtoint i32** %49 to i64
  %51 = bitcast i32** %48 to i64*
  store i64 %3, i64* %51, align 8
  %52 = getelementptr inbounds i32*, i32** %48, i64 1
  %53 = ptrtoint i32** %52 to i64
  %54 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %55 = load i32**, i32*** %54, align 8
  %56 = load i64, i64* %18, align 8
  %57 = ptrtoint i32** %55 to i64
  %58 = sub i64 %56, %57
  %59 = ashr exact i64 %58, 3
  %60 = sub nsw i64 0, %59
  %61 = getelementptr inbounds i32*, i32** %48, i64 %60
  %62 = ptrtoint i32** %61 to i64
  %63 = icmp sgt i64 %58, 0
  br i1 %63, label %64, label %68

64:                                               ; preds = %45
  %65 = bitcast i32** %61 to i8*
  %66 = bitcast i32** %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 %58, i1 false) #13
  %67 = load i32**, i32*** %54, align 8
  br label %68

68:                                               ; preds = %64, %45
  %69 = phi i32** [ %55, %45 ], [ %67, %64 ]
  store i64 %62, i64* %19, align 8
  store i64 %53, i64* %18, align 8
  store i64 %50, i64* %28, align 8
  %70 = icmp eq i32** %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %68
  %72 = bitcast i32** %69 to i8*
  tail call void @_ZdlPv(i8* %72) #11
  br label %73

73:                                               ; preds = %11, %68, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8crashpad8internal16MinidumpWritable26RegisterLocationDescriptorEP28MINIDUMP_LOCATION_DESCRIPTOR(%"class.crashpad::internal::MinidumpWritable"*, %struct.MINIDUMP_LOCATION_DESCRIPTOR*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %struct.MINIDUMP_LOCATION_DESCRIPTOR* %1 to i64
  %4 = getelementptr inbounds %"class.crashpad::internal::MinidumpWritable", %"class.crashpad::internal::MinidumpWritable"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.crashpad::internal::MinidumpWritable", %"class.crashpad::internal::MinidumpWritable"* %0, i64 0, i32 2, i32 0, i32 1
  %6 = load %struct.MINIDUMP_LOCATION_DESCRIPTOR**, %struct.MINIDUMP_LOCATION_DESCRIPTOR*** %5, align 8
  %7 = getelementptr inbounds %"class.crashpad::internal::MinidumpWritable", %"class.crashpad::internal::MinidumpWritable"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %8 = load %struct.MINIDUMP_LOCATION_DESCRIPTOR**, %struct.MINIDUMP_LOCATION_DESCRIPTOR*** %7, align 8
  %9 = icmp eq %struct.MINIDUMP_LOCATION_DESCRIPTOR** %6, %8
  %10 = ptrtoint %struct.MINIDUMP_LOCATION_DESCRIPTOR** %8 to i64
  br i1 %9, label %16, label %11

11:                                               ; preds = %2
  %12 = bitcast %struct.MINIDUMP_LOCATION_DESCRIPTOR** %6 to i64*
  store i64 %3, i64* %12, align 8
  %13 = getelementptr inbounds %struct.MINIDUMP_LOCATION_DESCRIPTOR*, %struct.MINIDUMP_LOCATION_DESCRIPTOR** %6, i64 1
  %14 = ptrtoint %struct.MINIDUMP_LOCATION_DESCRIPTOR** %13 to i64
  %15 = bitcast %struct.MINIDUMP_LOCATION_DESCRIPTOR*** %5 to i64*
  store i64 %14, i64* %15, align 8
  br label %73

16:                                               ; preds = %2
  %17 = ptrtoint %struct.MINIDUMP_LOCATION_DESCRIPTOR** %6 to i64
  %18 = bitcast %struct.MINIDUMP_LOCATION_DESCRIPTOR*** %5 to i64*
  %19 = bitcast %"class.std::__1::vector.1"* %4 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 3
  %23 = add nsw i64 %22, 1
  %24 = icmp ugt i64 %23, 2305843009213693951
  br i1 %24, label %25, label %27

25:                                               ; preds = %16
  %26 = bitcast %"class.std::__1::vector.1"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %26) #12
  unreachable

27:                                               ; preds = %16
  %28 = bitcast %struct.MINIDUMP_LOCATION_DESCRIPTOR*** %7 to i64*
  %29 = sub i64 %10, %20
  %30 = ashr exact i64 %29, 3
  %31 = icmp ult i64 %30, 1152921504606846975
  br i1 %31, label %32, label %40

32:                                               ; preds = %27
  %33 = ashr exact i64 %29, 2
  %34 = icmp ult i64 %33, %23
  %35 = select i1 %34, i64 %23, i64 %33
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %45, label %37

37:                                               ; preds = %32
  %38 = icmp ugt i64 %35, 2305843009213693951
  br i1 %38, label %39, label %40

39:                                               ; preds = %37
  tail call void @abort() #12
  unreachable

40:                                               ; preds = %37, %27
  %41 = phi i64 [ %35, %37 ], [ 2305843009213693951, %27 ]
  %42 = shl i64 %41, 3
  %43 = tail call i8* @_Znwm(i64 %42) #11
  %44 = bitcast i8* %43 to %struct.MINIDUMP_LOCATION_DESCRIPTOR**
  br label %45

45:                                               ; preds = %40, %32
  %46 = phi i64 [ %41, %40 ], [ 0, %32 ]
  %47 = phi %struct.MINIDUMP_LOCATION_DESCRIPTOR** [ %44, %40 ], [ null, %32 ]
  %48 = getelementptr inbounds %struct.MINIDUMP_LOCATION_DESCRIPTOR*, %struct.MINIDUMP_LOCATION_DESCRIPTOR** %47, i64 %22
  %49 = getelementptr inbounds %struct.MINIDUMP_LOCATION_DESCRIPTOR*, %struct.MINIDUMP_LOCATION_DESCRIPTOR** %47, i64 %46
  %50 = ptrtoint %struct.MINIDUMP_LOCATION_DESCRIPTOR** %49 to i64
  %51 = bitcast %struct.MINIDUMP_LOCATION_DESCRIPTOR** %48 to i64*
  store i64 %3, i64* %51, align 8
  %52 = getelementptr inbounds %struct.MINIDUMP_LOCATION_DESCRIPTOR*, %struct.MINIDUMP_LOCATION_DESCRIPTOR** %48, i64 1
  %53 = ptrtoint %struct.MINIDUMP_LOCATION_DESCRIPTOR** %52 to i64
  %54 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %4, i64 0, i32 0, i32 0
  %55 = load %struct.MINIDUMP_LOCATION_DESCRIPTOR**, %struct.MINIDUMP_LOCATION_DESCRIPTOR*** %54, align 8
  %56 = load i64, i64* %18, align 8
  %57 = ptrtoint %struct.MINIDUMP_LOCATION_DESCRIPTOR** %55 to i64
  %58 = sub i64 %56, %57
  %59 = ashr exact i64 %58, 3
  %60 = sub nsw i64 0, %59
  %61 = getelementptr inbounds %struct.MINIDUMP_LOCATION_DESCRIPTOR*, %struct.MINIDUMP_LOCATION_DESCRIPTOR** %48, i64 %60
  %62 = ptrtoint %struct.MINIDUMP_LOCATION_DESCRIPTOR** %61 to i64
  %63 = icmp sgt i64 %58, 0
  br i1 %63, label %64, label %68

64:                                               ; preds = %45
  %65 = bitcast %struct.MINIDUMP_LOCATION_DESCRIPTOR** %61 to i8*
  %66 = bitcast %struct.MINIDUMP_LOCATION_DESCRIPTOR** %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 %58, i1 false) #13
  %67 = load %struct.MINIDUMP_LOCATION_DESCRIPTOR**, %struct.MINIDUMP_LOCATION_DESCRIPTOR*** %54, align 8
  br label %68

68:                                               ; preds = %64, %45
  %69 = phi %struct.MINIDUMP_LOCATION_DESCRIPTOR** [ %55, %45 ], [ %67, %64 ]
  store i64 %62, i64* %19, align 8
  store i64 %53, i64* %18, align 8
  store i64 %50, i64* %28, align 8
  %70 = icmp eq %struct.MINIDUMP_LOCATION_DESCRIPTOR** %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %68
  %72 = bitcast %struct.MINIDUMP_LOCATION_DESCRIPTOR** %69 to i8*
  tail call void @_ZdlPv(i8* %72) #11
  br label %73

73:                                               ; preds = %11, %68, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8crashpad8internal16MinidumpWritableC2Ev(%"class.crashpad::internal::MinidumpWritable"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.crashpad::internal::MinidumpWritable", %"class.crashpad::internal::MinidumpWritable"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN8crashpad8internal16MinidumpWritableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.crashpad::internal::MinidumpWritable", %"class.crashpad::internal::MinidumpWritable"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 60, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8crashpad8internal16MinidumpWritable6FreezeEv(%"class.crashpad::internal::MinidumpWritable"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.8", align 8
  %3 = getelementptr inbounds %"class.crashpad::internal::MinidumpWritable", %"class.crashpad::internal::MinidumpWritable"* %0, i64 0, i32 4
  store i32 1, i32* %3, align 8
  %4 = bitcast %"class.std::__1::vector.8"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #13
  %5 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %2, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %2, i64 0, i32 0, i32 1
  %7 = bitcast %"class.crashpad::internal::MinidumpWritable"* %0 to void (%"class.std::__1::vector.8"*, %"class.crashpad::internal::MinidumpWritable"*)***
  %8 = bitcast %"class.std::__1::vector.8"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 24, i1 false)
  %9 = load void (%"class.std::__1::vector.8"*, %"class.crashpad::internal::MinidumpWritable"*)**, void (%"class.std::__1::vector.8"*, %"class.crashpad::internal::MinidumpWritable"*)*** %7, align 8
  %10 = getelementptr inbounds void (%"class.std::__1::vector.8"*, %"class.crashpad::internal::MinidumpWritable"*)*, void (%"class.std::__1::vector.8"*, %"class.crashpad::internal::MinidumpWritable"*)** %9, i64 6
  %11 = load void (%"class.std::__1::vector.8"*, %"class.crashpad::internal::MinidumpWritable"*)*, void (%"class.std::__1::vector.8"*, %"class.crashpad::internal::MinidumpWritable"*)** %10, align 8
  call void %11(%"class.std::__1::vector.8"* nonnull sret %2, %"class.crashpad::internal::MinidumpWritable"* %0) #13
  %12 = load %"class.crashpad::internal::MinidumpWritable"**, %"class.crashpad::internal::MinidumpWritable"*** %5, align 8
  %13 = load %"class.crashpad::internal::MinidumpWritable"**, %"class.crashpad::internal::MinidumpWritable"*** %6, align 8
  %14 = icmp eq %"class.crashpad::internal::MinidumpWritable"** %12, %13
  br i1 %14, label %29, label %17

15:                                               ; preds = %17
  %16 = icmp eq %"class.crashpad::internal::MinidumpWritable"** %25, %13
  br i1 %16, label %26, label %17

17:                                               ; preds = %1, %15
  %18 = phi %"class.crashpad::internal::MinidumpWritable"** [ %25, %15 ], [ %12, %1 ]
  %19 = load %"class.crashpad::internal::MinidumpWritable"*, %"class.crashpad::internal::MinidumpWritable"** %18, align 8
  %20 = bitcast %"class.crashpad::internal::MinidumpWritable"* %19 to i1 (%"class.crashpad::internal::MinidumpWritable"*)***
  %21 = load i1 (%"class.crashpad::internal::MinidumpWritable"*)**, i1 (%"class.crashpad::internal::MinidumpWritable"*)*** %20, align 8
  %22 = getelementptr inbounds i1 (%"class.crashpad::internal::MinidumpWritable"*)*, i1 (%"class.crashpad::internal::MinidumpWritable"*)** %21, i64 3
  %23 = load i1 (%"class.crashpad::internal::MinidumpWritable"*)*, i1 (%"class.crashpad::internal::MinidumpWritable"*)** %22, align 8
  %24 = call zeroext i1 %23(%"class.crashpad::internal::MinidumpWritable"* %19) #13
  %25 = getelementptr inbounds %"class.crashpad::internal::MinidumpWritable"*, %"class.crashpad::internal::MinidumpWritable"** %18, i64 1
  br i1 %24, label %15, label %26

26:                                               ; preds = %15, %17
  %27 = phi i1 [ false, %17 ], [ true, %15 ]
  %28 = load %"class.crashpad::internal::MinidumpWritable"**, %"class.crashpad::internal::MinidumpWritable"*** %5, align 8
  br label %29

29:                                               ; preds = %26, %1
  %30 = phi %"class.crashpad::internal::MinidumpWritable"** [ %12, %1 ], [ %28, %26 ]
  %31 = phi i1 [ true, %1 ], [ %27, %26 ]
  %32 = icmp eq %"class.crashpad::internal::MinidumpWritable"** %30, null
  br i1 %32, label %37, label %33

33:                                               ; preds = %29
  %34 = ptrtoint %"class.crashpad::internal::MinidumpWritable"** %30 to i64
  %35 = bitcast %"class.crashpad::internal::MinidumpWritable"*** %6 to i64*
  store i64 %34, i64* %35, align 8
  %36 = bitcast %"class.crashpad::internal::MinidumpWritable"** %30 to i8*
  call void @_ZdlPv(i8* %36) #11
  br label %37

37:                                               ; preds = %29, %33
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #13
  ret i1 %31
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN8crashpad8internal16MinidumpWritable9AlignmentEv(%"class.crashpad::internal::MinidumpWritable"* nocapture readnone) unnamed_addr #4 align 2 {
  ret i64 4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8crashpad8internal16MinidumpWritable8ChildrenEv(%"class.std::__1::vector.8"* noalias nocapture sret, %"class.crashpad::internal::MinidumpWritable"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::vector.8"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #13
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN8crashpad8internal16MinidumpWritable10WritePhaseEv(%"class.crashpad::internal::MinidumpWritable"* nocapture readnone) unnamed_addr #4 align 2 {
  ret i32 0
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #5

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #5

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #5

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEl(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #6

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN8crashpad8internal16MinidumpWritable21WillWriteAtOffsetImplEl(%"class.crashpad::internal::MinidumpWritable"* nocapture readnone, i64) unnamed_addr #4 align 2 {
  ret i1 true
}

declare void @__cxa_pure_virtual() unnamed_addr

declare i8* @_ZN7logging15CheckOpValueStrEl(i64) local_unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEi(i32) local_unnamed_addr #5

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #13
  %7 = load i8, i8* %6, align 8, !range !5
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #13
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #13
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #13
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #13
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #13
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #13
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #11
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #13
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #13
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #11
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #13
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #13
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #6

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #6

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #5

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = !{i8 0, i8 2}
