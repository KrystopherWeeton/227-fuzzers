; ModuleID = '../../components/keep_alive_registry/scoped_keep_alive.cc'
source_filename = "../../components/keep_alive_registry/scoped_keep_alive.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.ScopedKeepAlive = type { i32, i32 }
%class.KeepAliveRegistry = type { %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", i32, i32, i8, [7 x i8], %"class.base::ObserverList" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.11", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { float }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.14" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }

@_ZN15ScopedKeepAliveC1E15KeepAliveOrigin22KeepAliveRestartOption = hidden unnamed_addr alias void (%class.ScopedKeepAlive*, i32, i32), void (%class.ScopedKeepAlive*, i32, i32)* @_ZN15ScopedKeepAliveC2E15KeepAliveOrigin22KeepAliveRestartOption
@_ZN15ScopedKeepAliveD1Ev = hidden unnamed_addr alias void (%class.ScopedKeepAlive*), void (%class.ScopedKeepAlive*)* @_ZN15ScopedKeepAliveD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15ScopedKeepAliveC2E15KeepAliveOrigin22KeepAliveRestartOption(%class.ScopedKeepAlive* nocapture, i32, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.ScopedKeepAlive, %class.ScopedKeepAlive* %0, i64 0, i32 0
  store i32 %1, i32* %4, align 4
  %5 = getelementptr inbounds %class.ScopedKeepAlive, %class.ScopedKeepAlive* %0, i64 0, i32 1
  store i32 %2, i32* %5, align 4
  %6 = tail call %class.KeepAliveRegistry* @_ZN17KeepAliveRegistry11GetInstanceEv() #2
  %7 = load i32, i32* %4, align 4
  %8 = load i32, i32* %5, align 4
  tail call void @_ZN17KeepAliveRegistry8RegisterE15KeepAliveOrigin22KeepAliveRestartOption(%class.KeepAliveRegistry* %6, i32 %7, i32 %8) #2
  ret void
}

declare %class.KeepAliveRegistry* @_ZN17KeepAliveRegistry11GetInstanceEv() local_unnamed_addr #1

declare void @_ZN17KeepAliveRegistry8RegisterE15KeepAliveOrigin22KeepAliveRestartOption(%class.KeepAliveRegistry*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15ScopedKeepAliveD2Ev(%class.ScopedKeepAlive* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = tail call %class.KeepAliveRegistry* @_ZN17KeepAliveRegistry11GetInstanceEv() #2
  %3 = getelementptr inbounds %class.ScopedKeepAlive, %class.ScopedKeepAlive* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %class.ScopedKeepAlive, %class.ScopedKeepAlive* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  tail call void @_ZN17KeepAliveRegistry10UnregisterE15KeepAliveOrigin22KeepAliveRestartOption(%class.KeepAliveRegistry* %2, i32 %4, i32 %6) #2
  ret void
}

declare void @_ZN17KeepAliveRegistry10UnregisterE15KeepAliveOrigin22KeepAliveRestartOption(%class.KeepAliveRegistry*, i32, i32) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
