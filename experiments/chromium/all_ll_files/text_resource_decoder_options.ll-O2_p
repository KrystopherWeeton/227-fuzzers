; ModuleID = '../../third_party/blink/renderer/platform/loader/fetch/text_resource_decoder_options.cc'
source_filename = "../../third_party/blink/renderer/platform/loader/fetch/text_resource_decoder_options.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::TextResourceDecoderOptions" = type <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, %"class.blink::KURL", [3 x i8], [5 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }

@_ZN5blink26TextResourceDecoderOptionsC1ENS0_11ContentTypeERKN3WTF12TextEncodingE = hidden unnamed_addr alias void (%"class.blink::TextResourceDecoderOptions"*, i32, %"class.WTF::TextEncoding"*), void (%"class.blink::TextResourceDecoderOptions"*, i32, %"class.WTF::TextEncoding"*)* @_ZN5blink26TextResourceDecoderOptionsC2ENS0_11ContentTypeERKN3WTF12TextEncodingE
@_ZN5blink26TextResourceDecoderOptionsC1ENS0_23EncodingDetectionOptionENS0_11ContentTypeERKN3WTF12TextEncodingEPKcRKNS_4KURLE = hidden unnamed_addr alias void (%"class.blink::TextResourceDecoderOptions"*, i32, i32, %"class.WTF::TextEncoding"*, i8*, %"class.blink::KURL"*), void (%"class.blink::TextResourceDecoderOptions"*, i32, i32, %"class.WTF::TextEncoding"*, i8*, %"class.blink::KURL"*)* @_ZN5blink26TextResourceDecoderOptionsC2ENS0_23EncodingDetectionOptionENS0_11ContentTypeERKN3WTF12TextEncodingEPKcRKNS_4KURLE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26TextResourceDecoderOptionsC2ENS0_11ContentTypeERKN3WTF12TextEncodingE(%"class.blink::TextResourceDecoderOptions"*, i32, %"class.WTF::TextEncoding"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::KURL", align 8
  %5 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %5) #4
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %4) #4
  call void @_ZN5blink26TextResourceDecoderOptionsC2ENS0_23EncodingDetectionOptionENS0_11ContentTypeERKN3WTF12TextEncodingEPKcRKNS_4KURLE(%"class.blink::TextResourceDecoderOptions"* %0, i32 1, i32 %1, %"class.WTF::TextEncoding"* dereferenceable(8) %2, i8* null, %"class.blink::KURL"* nonnull dereferenceable(112) %4)
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %4) #4
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %5) #4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26TextResourceDecoderOptionsC2ENS0_23EncodingDetectionOptionENS0_11ContentTypeERKN3WTF12TextEncodingEPKcRKNS_4KURLE(%"class.blink::TextResourceDecoderOptions"*, i32, i32, %"class.WTF::TextEncoding"* nocapture readonly dereferenceable(8), i8*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.blink::TextResourceDecoderOptions", %"class.blink::TextResourceDecoderOptions"* %0, i64 0, i32 0
  store i32 %1, i32* %7, align 8
  %8 = getelementptr inbounds %"class.blink::TextResourceDecoderOptions", %"class.blink::TextResourceDecoderOptions"* %0, i64 0, i32 1
  store i32 %2, i32* %8, align 4
  %9 = getelementptr inbounds %"class.blink::TextResourceDecoderOptions", %"class.blink::TextResourceDecoderOptions"* %0, i64 0, i32 2
  %10 = bitcast %"class.WTF::TextEncoding"* %3 to i64*
  %11 = bitcast %"class.WTF::TextEncoding"* %9 to i64*
  %12 = load i64, i64* %10, align 8
  store i64 %12, i64* %11, align 8
  %13 = getelementptr inbounds %"class.blink::TextResourceDecoderOptions", %"class.blink::TextResourceDecoderOptions"* %0, i64 0, i32 3
  store i8 0, i8* %13, align 8
  %14 = getelementptr inbounds %"class.blink::TextResourceDecoderOptions", %"class.blink::TextResourceDecoderOptions"* %0, i64 0, i32 4
  store i8 0, i8* %14, align 1
  %15 = getelementptr inbounds %"class.blink::TextResourceDecoderOptions", %"class.blink::TextResourceDecoderOptions"* %0, i64 0, i32 6
  store i8* %4, i8** %15, align 8
  %16 = getelementptr inbounds %"class.blink::TextResourceDecoderOptions", %"class.blink::TextResourceDecoderOptions"* %0, i64 0, i32 7
  tail call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %16, %"class.blink::KURL"* dereferenceable(112) %5) #4
  %17 = getelementptr inbounds %"class.blink::TextResourceDecoderOptions", %"class.blink::TextResourceDecoderOptions"* %0, i64 0, i32 8, i64 0
  store i8 0, i8* %17, align 8
  %18 = load i32, i32* %7, align 8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %80

20:                                               ; preds = %6
  %21 = tail call zeroext i1 @_ZNK5blink4KURL7IsEmptyEv(%"class.blink::KURL"* %16) #4
  br i1 %21, label %80, label %22

22:                                               ; preds = %20
  %23 = tail call %"class.WTF::StringImpl"* @_ZN5blink15DefaultLanguageEv() #4
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %80, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = icmp ugt i32 %27, 1
  br i1 %28, label %29, label %67

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 1
  br i1 %33, label %39, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.WTF::StringImpl"* %34 to i8*
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i16
  br label %42

39:                                               ; preds = %29
  %40 = bitcast %"class.WTF::StringImpl"* %34 to i16*
  %41 = load i16, i16* %40, align 2
  br label %42

42:                                               ; preds = %39, %35
  %43 = phi i16 [ %38, %35 ], [ %41, %39 ]
  %44 = trunc i16 %43 to i8
  store i8 %44, i8* %17, align 8
  %45 = load i32, i32* %26, align 4
  %46 = icmp ugt i32 %45, 1
  br i1 %46, label %47, label %62

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 1
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 1
  br i1 %51, label %58, label %53

53:                                               ; preds = %47
  %54 = bitcast %"class.WTF::StringImpl"* %52 to i8*
  %55 = getelementptr inbounds i8, i8* %54, i64 1
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i16
  br label %62

58:                                               ; preds = %47
  %59 = bitcast %"class.WTF::StringImpl"* %52 to i16*
  %60 = getelementptr inbounds i16, i16* %59, i64 1
  %61 = load i16, i16* %60, align 2
  br label %62

62:                                               ; preds = %42, %53, %58
  %63 = phi i16 [ 0, %42 ], [ %57, %53 ], [ %61, %58 ]
  %64 = trunc i16 %63 to i8
  %65 = getelementptr inbounds %"class.blink::TextResourceDecoderOptions", %"class.blink::TextResourceDecoderOptions"* %0, i64 0, i32 8, i64 1
  store i8 %64, i8* %65, align 1
  %66 = getelementptr inbounds %"class.blink::TextResourceDecoderOptions", %"class.blink::TextResourceDecoderOptions"* %0, i64 0, i32 8, i64 2
  store i8 0, i8* %66, align 2
  br label %67

67:                                               ; preds = %62, %25
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %76
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #4
  br label %80

80:                                               ; preds = %79, %76, %22, %20, %6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26TextResourceDecoderOptions16CreateUTF8DecodeEv(%"class.blink::TextResourceDecoderOptions"* noalias sret) local_unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(8) %"class.WTF::TextEncoding"* @_ZN3WTF12UTF8EncodingEv() #4
  %3 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink7NullURLEv() #4
  tail call void @_ZN5blink26TextResourceDecoderOptionsC2ENS0_23EncodingDetectionOptionENS0_11ContentTypeERKN3WTF12TextEncodingEPKcRKNS_4KURLE(%"class.blink::TextResourceDecoderOptions"* %0, i32 2, i32 0, %"class.WTF::TextEncoding"* dereferenceable(8) %2, i8* null, %"class.blink::KURL"* dereferenceable(112) %3)
  ret void
}

declare dereferenceable(8) %"class.WTF::TextEncoding"* @_ZN3WTF12UTF8EncodingEv() local_unnamed_addr #2

declare dereferenceable(112) %"class.blink::KURL"* @_ZN5blink7NullURLEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26TextResourceDecoderOptions26CreateUTF8DecodeWithoutBOMEv(%"class.blink::TextResourceDecoderOptions"* noalias sret) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::TextResourceDecoderOptions"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 -86, i64 152, i1 false)
  %3 = tail call dereferenceable(8) %"class.WTF::TextEncoding"* @_ZN3WTF12UTF8EncodingEv() #4, !noalias !2
  %4 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink7NullURLEv() #4, !noalias !2
  tail call void @_ZN5blink26TextResourceDecoderOptionsC2ENS0_23EncodingDetectionOptionENS0_11ContentTypeERKN3WTF12TextEncodingEPKcRKNS_4KURLE(%"class.blink::TextResourceDecoderOptions"* %0, i32 2, i32 0, %"class.WTF::TextEncoding"* dereferenceable(8) %3, i8* null, %"class.blink::KURL"* dereferenceable(112) %4) #4
  %5 = getelementptr inbounds %"class.blink::TextResourceDecoderOptions", %"class.blink::TextResourceDecoderOptions"* %0, i64 0, i32 3
  store i8 1, i8* %5, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26TextResourceDecoderOptions23CreateWithAutoDetectionENS0_11ContentTypeERKN3WTF12TextEncodingES5_RKNS_4KURLE(%"class.blink::TextResourceDecoderOptions"* noalias sret, i32, %"class.WTF::TextEncoding"* nocapture readonly dereferenceable(8), %"class.WTF::TextEncoding"* nocapture readonly dereferenceable(8), %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.WTF::TextEncoding", %"class.WTF::TextEncoding"* %3, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  tail call void @_ZN5blink26TextResourceDecoderOptionsC2ENS0_23EncodingDetectionOptionENS0_11ContentTypeERKN3WTF12TextEncodingEPKcRKNS_4KURLE(%"class.blink::TextResourceDecoderOptions"* %0, i32 0, i32 %1, %"class.WTF::TextEncoding"* dereferenceable(8) %2, i8* %7, %"class.blink::KURL"* dereferenceable(112) %4)
  ret void
}

declare void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #2

declare zeroext i1 @_ZNK5blink4KURL7IsEmptyEv(%"class.blink::KURL"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink15DefaultLanguageEv() local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN5blink26TextResourceDecoderOptions16CreateUTF8DecodeEv: argument 0"}
!4 = distinct !{!4, !"_ZN5blink26TextResourceDecoderOptions16CreateUTF8DecodeEv"}
