; ModuleID = '../../chrome/browser/extensions/api/tabs/windows_util.cc'
source_filename = "../../chrome/browser/extensions/api/tabs/windows_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.ExtensionFunction = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %class.scoped_refptr, %"class.std::__1::unique_ptr.88", %"class.base::ElapsedTimer", %"class.std::__1::unique_ptr.88", %"class.std::__1::basic_string", %"class.base::OnceCallback", i32, [4 x i8], i8*, i8*, %class.GURL, i8, i8, i8, i8, i32, i32, i32, i64, %"class.std::__1::unique_ptr.96", i8, [7 x i8], %"class.base::WeakPtr", %"class.content::BrowserContext"*, %"class.content::BrowserContext"*, %"class.base::CallbackListSubscription", %"class.content::RenderFrameHost"*, %"class.std::__1::unique_ptr.127", %"class.std::__1::vector.133", i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr = type { %"class.extensions::Extension"* }
%"class.extensions::Extension" = type { %"class.base::RefCountedThreadSafe.1", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, %"class.base::FilePath", %"class.extensions::URLPatternSet", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.14", %"class.std::__1::vector", %class.GURL, %"class.base::Version", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.38", %"class.std::__1::map", i8, %"class.base::ThreadChecker", i8, i8, i8, i32, %"class.base::GUID" }
%"class.base::RefCountedThreadSafe.1" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.extensions::URLPatternSet" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.3", %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.extensions::PermissionsParser"* }
%"class.extensions::PermissionsParser" = type opaque
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.extensions::PermissionsData"* }
%"class.extensions::PermissionsData" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.extensions::InstallWarning"*, %"struct.extensions::InstallWarning"*, %"class.std::__1::__compressed_pair.20" }
%"struct.extensions::InstallWarning" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.extensions::InstallWarning"* }
%"class.base::Version" = type { %"class.std::__1::vector.31" }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { i32*, i32*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { i32* }
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.extensions::Manifest"* }
%"class.extensions::Manifest" = type { %"class.std::__1::basic_string", %"class.extensions::HashedExtensionId", i32, %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41", i32, i32 }
%"class.extensions::HashedExtensionId" = type { %"class.std::__1::basic_string" }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.base::DictionaryValue"* }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.44" }
%"union.absl::variant_internal::DestructibleUnionImpl.44" = type { %"union.absl::variant_internal::DestructibleUnionImpl.45" }
%"union.absl::variant_internal::DestructibleUnionImpl.45" = type { %"union.absl::variant_internal::DestructibleUnionImpl.46" }
%"union.absl::variant_internal::DestructibleUnionImpl.46" = type { %"union.absl::variant_internal::DestructibleUnionImpl.47" }
%"union.absl::variant_internal::DestructibleUnionImpl.47" = type { %"class.std::__1::basic_string" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.79" }
%"class.std::__1::__tree.79" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.80", %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::GUID" = type { %"class.std::__1::basic_string" }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.base::ListValue"* }
%"class.base::ListValue" = type { %"class.base::Value" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.94 }
%class.scoped_refptr.94 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.95", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.95" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.25" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %class.GURL* }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { i32* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.102 }
%class.scoped_refptr.102 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.103", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.103" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.104" }
%"struct.std::__1::atomic.104" = type { %"struct.std::__1::__atomic_base.105" }
%"struct.std::__1::__atomic_base.105" = type { %"struct.std::__1::__atomic_base.106" }
%"struct.std::__1::__atomic_base.106" = type { %"struct.std::__1::__cxx_atomic_impl.107" }
%"struct.std::__1::__cxx_atomic_impl.107" = type { %"struct.std::__1::__cxx_atomic_base_impl.108" }
%"struct.std::__1::__cxx_atomic_base_impl.108" = type { i8 }
%"class.content::BrowserContext" = type { %"class.base::SupportsUserData.base", %"class.std::__1::unique_ptr.120" }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map.109", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map.109" = type { %"class.std::__1::__tree.110" }
%"class.std::__1::__tree.110" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.111", %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.content::BrowserContext::Impl"* }
%"class.content::BrowserContext::Impl" = type opaque
%"class.base::CallbackListSubscription" = type { %"class.base::OnceCallback.126" }
%"class.base::OnceCallback.126" = type { %"class.base::internal::CallbackBase" }
%"class.content::RenderFrameHost" = type opaque
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.ExtensionFunction::RenderFrameHostTracker"* }
%"class.ExtensionFunction::RenderFrameHostTracker" = type opaque
%"class.std::__1::vector.133" = type { %"class.std::__1::__vector_base.134" }
%"class.std::__1::__vector_base.134" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.std::__1::basic_string"* }
%class.Browser = type opaque
%"class.extensions::ExtensionFunctionDispatcher" = type { %"class.base::SupportsWeakPtr", %"class.content::BrowserContext"*, %"class.extensions::ExtensionFunctionDispatcher::Delegate"*, %"class.std::__1::map.161", %"class.std::__1::map.172", %"class.std::__1::set.183" }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.160 }
%class.scoped_refptr.160 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.extensions::ExtensionFunctionDispatcher::Delegate" = type { i32 (...)** }
%"class.std::__1::map.161" = type { %"class.std::__1::__tree.162" }
%"class.std::__1::__tree.162" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.163", %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::map.172" = type { %"class.std::__1::__tree.173" }
%"class.std::__1::__tree.173" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.174", %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::set.183" = type { %"class.std::__1::__tree.184" }
%"class.std::__1::__tree.184" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.185", %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.extensions::WindowController" = type { i32 (...)**, %"class.ui::BaseWindow"*, %class.Profile* }
%"class.ui::BaseWindow" = type opaque
%class.Profile = type { %"class.content::BrowserContext", %"class.std::__1::unique_ptr.140", i8, i8, i32, %"class.base::ObserverList", %"class.std::__1::unique_ptr.154" }
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.content::ResourceContext"* }
%"class.content::ResourceContext" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.146", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.146" = type { %"class.std::__1::__vector_base.147" }
%"class.std::__1::__vector_base.147" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.149" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr.148" }
%"class.base::WeakPtr.148" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.variations::VariationsClient"* }
%"class.variations::VariationsClient" = type opaque
%"class.extensions::WindowControllerList" = type { %"class.std::__1::list", %"class.base::ObserverList.197" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.193" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.base::ObserverList.197" = type <{ %"class.std::__1::vector.198", %"class.base::LinkedList.205", i64, i32, [4 x i8] }>
%"class.std::__1::vector.198" = type { %"class.std::__1::__vector_base.199" }
%"class.std::__1::__vector_base.199" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.200" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList.205" = type { %"class.base::LinkNode.206" }
%"class.base::LinkNode.206" = type { %"class.base::internal::LinkNodeBase" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZN10extensions14tabs_constants21kNoCurrentWindowErrorE = external constant [0 x i8], align 1
@_ZN10extensions14tabs_constants20kWindowNotFoundErrorE = external constant [0 x i8], align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12windows_util22GetBrowserFromWindowIDEP17ExtensionFunctionijPP7BrowserPNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%class.ExtensionFunction*, i32, i32, %class.Browser** nocapture, %"class.std::__1::basic_string"*) local_unnamed_addr #0 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  store %class.Browser* null, %class.Browser** %3, align 8
  %8 = icmp eq i32 %1, -2
  br i1 %8, label %9, label %64

9:                                                ; preds = %5
  %10 = getelementptr inbounds %class.ExtensionFunction, %class.ExtensionFunction* %0, i64 0, i32 25, i32 0, i32 0
  %11 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %10) #6
  br i1 %11, label %12, label %16

12:                                               ; preds = %9
  %13 = getelementptr inbounds %class.ExtensionFunction, %class.ExtensionFunction* %0, i64 0, i32 25, i32 0, i32 1
  %14 = bitcast i64* %13 to %"class.extensions::ExtensionFunctionDispatcher"**
  %15 = load %"class.extensions::ExtensionFunctionDispatcher"*, %"class.extensions::ExtensionFunctionDispatcher"** %14, align 8
  br label %16

16:                                               ; preds = %9, %12
  %17 = phi %"class.extensions::ExtensionFunctionDispatcher"* [ %15, %12 ], [ null, %9 ]
  %18 = tail call %"class.extensions::WindowController"* @_ZNK10extensions27ExtensionFunctionDispatcher28GetExtensionWindowControllerEv(%"class.extensions::ExtensionFunctionDispatcher"* %17) #6
  %19 = icmp eq %"class.extensions::WindowController"* %18, null
  br i1 %19, label %20, label %24

20:                                               ; preds = %16
  %21 = tail call %"class.extensions::WindowControllerList"* @_ZN10extensions20WindowControllerList11GetInstanceEv() #6
  %22 = tail call %"class.extensions::WindowController"* @_ZNK10extensions20WindowControllerList34CurrentWindowForFunctionWithFilterEPK17ExtensionFunctionj(%"class.extensions::WindowControllerList"* %21, %class.ExtensionFunction* %0, i32 %2) #6
  %23 = icmp eq %"class.extensions::WindowController"* %22, null
  br i1 %23, label %31, label %24

24:                                               ; preds = %16, %20
  %25 = phi %"class.extensions::WindowController"* [ %22, %20 ], [ %18, %16 ]
  %26 = bitcast %"class.extensions::WindowController"* %25 to %class.Browser* (%"class.extensions::WindowController"*)***
  %27 = load %class.Browser* (%"class.extensions::WindowController"*)**, %class.Browser* (%"class.extensions::WindowController"*)*** %26, align 8
  %28 = getelementptr inbounds %class.Browser* (%"class.extensions::WindowController"*)*, %class.Browser* (%"class.extensions::WindowController"*)** %27, i64 5
  %29 = load %class.Browser* (%"class.extensions::WindowController"*)*, %class.Browser* (%"class.extensions::WindowController"*)** %28, align 8
  %30 = tail call %class.Browser* %29(%"class.extensions::WindowController"* nonnull %25) #6
  store %class.Browser* %30, %class.Browser** %3, align 8
  br label %33

31:                                               ; preds = %20
  %32 = load %class.Browser*, %class.Browser** %3, align 8
  br label %33

33:                                               ; preds = %31, %24
  %34 = phi %class.Browser* [ %32, %31 ], [ %30, %24 ]
  %35 = icmp eq %class.Browser* %34, null
  br i1 %35, label %36, label %110

36:                                               ; preds = %33
  %37 = load i8, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions14tabs_constants21kNoCurrentWindowErrorE, i64 0, i64 0), align 1
  %38 = tail call i1 @llvm.is.constant.i8(i8 %37) #6
  br i1 %38, label %39, label %62

39:                                               ; preds = %36
  %40 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions14tabs_constants21kNoCurrentWindowErrorE, i64 0, i64 0)) #6
  %41 = icmp ult i64 %40, 23
  br i1 %41, label %42, label %60

42:                                               ; preds = %39
  %43 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %47, label %51

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %40, i64* %48, align 8
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  br label %54

51:                                               ; preds = %42
  %52 = trunc i64 %40 to i8
  store i8 %52, i8* %44, align 1
  %53 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  br label %54

54:                                               ; preds = %51, %47
  %55 = phi i8* [ %50, %47 ], [ %53, %51 ]
  %56 = icmp eq i64 %40, 0
  br i1 %56, label %58, label %57

57:                                               ; preds = %54
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %55, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions14tabs_constants21kNoCurrentWindowErrorE, i64 0, i64 0), i64 %40, i1 false) #6
  br label %58

58:                                               ; preds = %57, %54
  %59 = getelementptr inbounds i8, i8* %55, i64 %40
  store i8 0, i8* %59, align 1
  br label %110

60:                                               ; preds = %39
  %61 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %4, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions14tabs_constants21kNoCurrentWindowErrorE, i64 0, i64 0), i64 %40) #6
  br label %110

62:                                               ; preds = %36
  %63 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"* %4, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions14tabs_constants21kNoCurrentWindowErrorE, i64 0, i64 0)) #6
  br label %110

64:                                               ; preds = %5
  %65 = tail call %"class.extensions::WindowControllerList"* @_ZN10extensions20WindowControllerList11GetInstanceEv() #6
  %66 = tail call %"class.extensions::WindowController"* @_ZNK10extensions20WindowControllerList35FindWindowForFunctionByIdWithFilterEPK17ExtensionFunctionij(%"class.extensions::WindowControllerList"* %65, %class.ExtensionFunction* %0, i32 %1, i32 %2) #6
  %67 = icmp eq %"class.extensions::WindowController"* %66, null
  br i1 %67, label %74, label %68

68:                                               ; preds = %64
  %69 = bitcast %"class.extensions::WindowController"* %66 to %class.Browser* (%"class.extensions::WindowController"*)***
  %70 = load %class.Browser* (%"class.extensions::WindowController"*)**, %class.Browser* (%"class.extensions::WindowController"*)*** %69, align 8
  %71 = getelementptr inbounds %class.Browser* (%"class.extensions::WindowController"*)*, %class.Browser* (%"class.extensions::WindowController"*)** %70, i64 5
  %72 = load %class.Browser* (%"class.extensions::WindowController"*)*, %class.Browser* (%"class.extensions::WindowController"*)** %71, align 8
  %73 = tail call %class.Browser* %72(%"class.extensions::WindowController"* nonnull %66) #6
  store %class.Browser* %73, %class.Browser** %3, align 8
  br label %76

74:                                               ; preds = %64
  %75 = load %class.Browser*, %class.Browser** %3, align 8
  br label %76

76:                                               ; preds = %74, %68
  %77 = phi %class.Browser* [ %75, %74 ], [ %73, %68 ]
  %78 = icmp eq %class.Browser* %77, null
  br i1 %78, label %79, label %110

79:                                               ; preds = %76
  %80 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %80) #6
  %81 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions14tabs_constants20kWindowNotFoundErrorE, i64 0, i64 0)) #6
  %82 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %82) #6
  call void @_ZN4base14NumberToStringEi(%"class.std::__1::basic_string"* nonnull sret %7, i32 %1) #6
  %83 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %83, i64 0, i32 1, i32 0
  %85 = load i8, i8* %84, align 1
  %86 = icmp slt i8 %85, 0
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8
  %89 = select i1 %86, i8* %88, i8* %82
  %90 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %91 = load i64, i64* %90, align 8
  %92 = zext i8 %85 to i64
  %93 = select i1 %86, i64 %91, i64 %92
  call void @_ZN10extensions10ErrorUtils18FormatErrorMessageEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_(%"class.std::__1::basic_string"* nonnull sret %6, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions14tabs_constants20kWindowNotFoundErrorE, i64 0, i64 0), i64 %81, i8* %89, i64 %93) #6
  %94 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %95 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %94, i64 0, i32 1, i32 0
  %96 = load i8, i8* %95, align 1
  %97 = icmp slt i8 %96, 0
  br i1 %97, label %98, label %101

98:                                               ; preds = %79
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load i8*, i8** %99, align 8
  call void @_ZdlPv(i8* %100) #7
  br label %101

101:                                              ; preds = %98, %79
  %102 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* nonnull align 8 %80, i64 24, i1 false) #6
  %103 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %104 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %103, i64 0, i32 1, i32 0
  store i8 0, i8* %104, align 1
  store i8 0, i8* %80, align 8
  %105 = load i8, i8* %84, align 1
  %106 = icmp slt i8 %105, 0
  br i1 %106, label %107, label %109

107:                                              ; preds = %101
  %108 = load i8*, i8** %87, align 8
  call void @_ZdlPv(i8* %108) #7
  br label %109

109:                                              ; preds = %101, %107
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %80) #6
  br label %110

110:                                              ; preds = %62, %60, %58, %33, %76, %109
  %111 = phi i1 [ false, %109 ], [ true, %76 ], [ true, %33 ], [ false, %58 ], [ false, %60 ], [ false, %62 ]
  ret i1 %111
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.extensions::WindowController"* @_ZNK10extensions27ExtensionFunctionDispatcher28GetExtensionWindowControllerEv(%"class.extensions::ExtensionFunctionDispatcher"*) local_unnamed_addr #2

declare %"class.extensions::WindowControllerList"* @_ZN10extensions20WindowControllerList11GetInstanceEv() local_unnamed_addr #2

declare %"class.extensions::WindowController"* @_ZNK10extensions20WindowControllerList34CurrentWindowForFunctionWithFilterEPK17ExtensionFunctionj(%"class.extensions::WindowControllerList"*, %class.ExtensionFunction*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.extensions::WindowController"* @_ZNK10extensions20WindowControllerList35FindWindowForFunctionByIdWithFilterEPK17ExtensionFunctionij(%"class.extensions::WindowControllerList"*, %class.ExtensionFunction*, i32, i32) local_unnamed_addr #2

declare void @_ZN10extensions10ErrorUtils18FormatErrorMessageEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_(%"class.std::__1::basic_string"* sret, i8*, i64, i8*, i64) local_unnamed_addr #2

declare void @_ZN4base14NumberToStringEi(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12windows_util18CanOperateOnWindowEPK17ExtensionFunctionPKN10extensions16WindowControllerEj(%class.ExtensionFunction*, %"class.extensions::WindowController"*, i32) local_unnamed_addr #0 {
  %4 = icmp ne i32 %2, 0
  br i1 %4, label %5, label %7

5:                                                ; preds = %3
  %6 = tail call zeroext i1 @_ZNK10extensions16WindowController13MatchesFilterEj(%"class.extensions::WindowController"* %1, i32 %2) #6
  br i1 %6, label %7, label %35

7:                                                ; preds = %5, %3
  %8 = getelementptr inbounds %class.ExtensionFunction, %class.ExtensionFunction* %0, i64 0, i32 3, i32 0
  %9 = load %"class.extensions::Extension"*, %"class.extensions::Extension"** %8, align 8
  %10 = icmp eq %"class.extensions::Extension"* %9, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %7
  %12 = bitcast %"class.extensions::WindowController"* %1 to i1 (%"class.extensions::WindowController"*, %"class.extensions::Extension"*, i1)***
  %13 = load i1 (%"class.extensions::WindowController"*, %"class.extensions::Extension"*, i1)**, i1 (%"class.extensions::WindowController"*, %"class.extensions::Extension"*, i1)*** %12, align 8
  %14 = getelementptr inbounds i1 (%"class.extensions::WindowController"*, %"class.extensions::Extension"*, i1)*, i1 (%"class.extensions::WindowController"*, %"class.extensions::Extension"*, i1)** %13, i64 6
  %15 = load i1 (%"class.extensions::WindowController"*, %"class.extensions::Extension"*, i1)*, i1 (%"class.extensions::WindowController"*, %"class.extensions::Extension"*, i1)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.extensions::WindowController"* %1, %"class.extensions::Extension"* nonnull %9, i1 zeroext %4) #6
  br i1 %16, label %17, label %35

17:                                               ; preds = %7, %11
  %18 = tail call %"class.content::BrowserContext"* @_ZNK17ExtensionFunction15browser_contextEv(%class.ExtensionFunction* %0) #6
  %19 = getelementptr inbounds %"class.extensions::WindowController", %"class.extensions::WindowController"* %1, i64 0, i32 2
  %20 = load %class.Profile*, %class.Profile** %19, align 8
  %21 = getelementptr inbounds %class.Profile, %class.Profile* %20, i64 0, i32 0
  %22 = icmp eq %"class.content::BrowserContext"* %18, %21
  br i1 %22, label %35, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %class.ExtensionFunction, %class.ExtensionFunction* %0, i64 0, i32 15
  %25 = load i8, i8* %24, align 1, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %23
  %28 = tail call %"class.content::BrowserContext"* @_ZNK17ExtensionFunction15browser_contextEv(%class.ExtensionFunction* %0) #6
  %29 = tail call %class.Profile* @_ZN7Profile18FromBrowserContextEPN7content14BrowserContextE(%"class.content::BrowserContext"* %28) #6
  %30 = tail call zeroext i1 @_ZN7Profile20HasPrimaryOTRProfileEv(%class.Profile* %29) #6
  br i1 %30, label %31, label %35

31:                                               ; preds = %27
  %32 = tail call %class.Profile* @_ZN7Profile20GetPrimaryOTRProfileEb(%class.Profile* %29, i1 zeroext true) #6
  %33 = load %class.Profile*, %class.Profile** %19, align 8
  %34 = icmp eq %class.Profile* %32, %33
  br label %35

35:                                               ; preds = %23, %11, %17, %31, %27, %5
  %36 = phi i1 [ false, %5 ], [ false, %11 ], [ true, %17 ], [ false, %23 ], [ false, %27 ], [ %34, %31 ]
  ret i1 %36
}

declare zeroext i1 @_ZNK10extensions16WindowController13MatchesFilterEj(%"class.extensions::WindowController"*, i32) local_unnamed_addr #2

declare %"class.content::BrowserContext"* @_ZNK17ExtensionFunction15browser_contextEv(%class.ExtensionFunction*) local_unnamed_addr #2

declare %class.Profile* @_ZN7Profile18FromBrowserContextEPN7content14BrowserContextE(%"class.content::BrowserContext"*) local_unnamed_addr #2

declare zeroext i1 @_ZN7Profile20HasPrimaryOTRProfileEv(%class.Profile*) local_unnamed_addr #2

declare %class.Profile* @_ZN7Profile20GetPrimaryOTRProfileEb(%class.Profile*, i1 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i8(i8) #5

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
