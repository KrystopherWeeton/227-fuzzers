; ModuleID = '../../third_party/skia/src/effects/imagefilters/SkMagnifierImageFilter.cpp'
source_filename = "../../third_party/skia/src/effects/imagefilters/SkMagnifierImageFilter.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkRect = type { float, float, float, float }
%"class.SkImageFilter_Base::CropRect" = type { %struct.SkRect, i32 }
%class.SkSTArray.141 = type { %class.SkAlignedSTStorage.142, %class.SkTArray.143 }
%class.SkAlignedSTStorage.142 = type { [16 x i8] }
%class.SkTArray.143 = type { %class.sk_sp*, i64 }
%class.sk_sp = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.SkImageFilters::CropRect" = type { %struct.SkRect }
%class.SkImageFilter_Base = type <{ %class.SkImageFilter.base, [4 x i8], %class.SkAutoSTArray, i8, [3 x i8], %"class.SkImageFilter_Base::CropRect", i32, [4 x i8] }>
%class.SkImageFilter.base = type { %class.SkFlattenable.base }
%class.SkAutoSTArray = type { i32, %class.sk_sp*, [16 x i8] }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.sk_sp.15 = type { %class.SkFlattenable* }
%class.SkFlattenable = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkReadBuffer = type <{ i8*, i8*, i8*, %class.SkTHashMap, i32, [4 x i8], %class.sk_sp.2*, i32, [4 x i8], {}**, i32, [4 x i8], %struct.SkDeserialProcs, i8, [7 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, void (%class.sk_sp.15*, %class.SkReadBuffer*)* }
%class.sk_sp.2 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.3" }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%struct.SkDeserialProcs = type { void (%class.sk_sp.8*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.13*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.2*, i8*, i64, i8*)*, i8* }
%class.sk_sp.8 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.9", [7 x i8] }>
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%class.sk_sp.13 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.14, i32, i32 }
%class.sk_sp.14 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%"class.SkImageFilter_Base::Common" = type { %"class.SkImageFilter_Base::CropRect", %class.SkSTArray.141 }
%"class.(anonymous namespace)::SkMagnifierImageFilter" = type { %class.SkImageFilter_Base.base, %struct.SkRect, float }
%class.SkImageFilter_Base.base = type <{ %class.SkImageFilter.base, [4 x i8], %class.SkAutoSTArray, i8, [3 x i8], %"class.SkImageFilter_Base::CropRect", i32 }>
%class.SkWriteBuffer = type { i32 (...)**, %struct.SkSerialProcs }
%struct.SkSerialProcs = type { void (%class.sk_sp.16*, %class.SkPicture*, i8*)*, i8*, void (%class.sk_sp.16*, %class.SkImage*, i8*)*, i8*, void (%class.sk_sp.16*, %class.SkTypeface*, i8*)*, i8* }
%class.sk_sp.16 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.17, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.17 = type { %"struct.std::__1::atomic" }
%class.sk_sp.18 = type { %class.SkSpecialImage* }
%class.SkSpecialImage = type { %class.SkRefCnt.base, %class.SkSurfaceProps, %struct.SkIRect, i32 }
%class.SkSurfaceProps = type { i32, i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.skif::Context" = type { %"class.skif::Mapping", %"class.skif::LayerSpace", %class.SkImageFilterCache*, i32, %class.SkColorSpace*, %"class.skif::FilterResult" }
%"class.skif::Mapping" = type { %class.SkMatrix, %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%"class.skif::LayerSpace" = type { %struct.SkIRect }
%class.SkImageFilterCache = type opaque
%"class.skif::FilterResult" = type { %class.sk_sp.18, %"class.skif::LayerSpace.19" }
%"class.skif::LayerSpace.19" = type { %struct.SkIPoint }
%struct.SkIPoint = type { i32, i32 }
%class.GrSurfaceProxyView = type <{ %class.sk_sp.88, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.88 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt.89, %class.sk_sp.90, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.126" }
%class.SkNVRefCnt.89 = type { %"struct.std::__1::atomic" }
%class.sk_sp.90 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.91 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon, [4 x i8] }>
%union.anon = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.16, i8* }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.91 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.92, void (i8*)*, i8* }
%class.SkNVRefCnt.92 = type { %"struct.std::__1::atomic" }
%class.GrBackendFormat = type { i32, i8, %union.anon.93, i32, [4 x i8] }
%union.anon.93 = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.90, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.123, %class.sk_sp.125, %class.sk_sp.125 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.103, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.114, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrProxyProvider = type opaque
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.95 }
%class.SkTHashTable.95 = type { i32, i32, %class.SkAutoTArray.96 }
%class.SkAutoTArray.96 = type { %"class.std::__1::unique_ptr.97" }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.103 = type { %class.SkTHashTable.104 }
%class.SkTHashTable.104 = type { i32, i32, %class.SkAutoTArray.105 }
%class.SkAutoTArray.105 = type { %"class.std::__1::unique_ptr.106" }
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.112, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.112 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.113, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.113 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap.114 = type { %class.SkTHashTable.115 }
%class.SkTHashTable.115 = type { i32, i32, %class.SkAutoTArray.116 }
%class.SkAutoTArray.116 = type { %"class.std::__1::unique_ptr.117" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.GrSingleOwner = type { i8 }
%class.sk_sp.123 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.124, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.124 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.125 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.126" = type { %"struct.std::__1::__atomic_base.127" }
%"struct.std::__1::__atomic_base.127" = type { %"struct.std::__1::__atomic_base.128" }
%"struct.std::__1::__atomic_base.128" = type { %"struct.std::__1::__cxx_atomic_impl.129" }
%"struct.std::__1::__cxx_atomic_impl.129" = type { %"struct.std::__1::__cxx_atomic_base_impl.130" }
%"struct.std::__1::__cxx_atomic_base_impl.130" = type { i64 }
%class.GrSwizzle = type { i16 }
%class.SkBitmap = type { %class.sk_sp.138, %class.SkPixmap, %class.sk_sp.139 }
%class.sk_sp.138 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.sk_sp.139 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.21", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.82" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.20 }
%class.sk_sp.20 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray, %class.SkTHashMap.32, %class.SkTHashMap.42, %class.SkTArray.53, %class.SkTArray.28, i32, i8, [3 x i8] }>
%class.SkTArray = type { %"class.std::__1::unique_ptr.24"*, i64 }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.28, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.27 }
%class.sk_sp.27 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkTHashMap.32 = type { %class.SkTHashTable.33 }
%class.SkTHashTable.33 = type { i32, i32, %class.SkAutoTArray.34 }
%class.SkAutoTArray.34 = type { %"class.std::__1::unique_ptr.35" }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.38" }
%"struct.std::__1::pair.38" = type { i32, i32 }
%class.SkTHashMap.42 = type { %class.SkTHashTable.43 }
%class.SkTHashTable.43 = type { i32, i32, %class.SkAutoTArray.44 }
%class.SkAutoTArray.44 = type { %"class.std::__1::unique_ptr.45" }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.48" }
%"struct.std::__1::pair.48" = type { i32, %class.SkTArray.49* }
%class.SkTArray.49 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.53 = type { %"class.std::__1::unique_ptr.54"*, i64 }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.49, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%class.SkTArray.28 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.63", %"class.std::__1::unique_ptr.69" }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.72 }
%class.SkFibBlockSizes.72 = type { i32 }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %class.GrProxyProvider* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.134 }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray.134 = type { %"class.std::__1::unique_ptr.131"*, i64 }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %class.GrFragmentProcessor* }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK13SkImageFilter18getFlattenableTypeEv = comdat any

$_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter = comdat any

$_ZNK18SkImageFilter_Base21onCanHandleComplexCTMEv = comdat any

$_ZNK18SkImageFilter_Base23affectsTransparentBlackEv = comdat any

@.str = private unnamed_addr constant [23 x i8] c"SkMagnifierImageFilter\00", align 1
@.str.1 = private unnamed_addr constant [27 x i8] c"SkMagnifierImageFilterImpl\00", align 1
@_ZN4skifL11kNoCropRectE = internal unnamed_addr constant %struct.SkRect { float 0xFFF0000000000000, float 0xFFF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000 }, align 4
@_ZTVN12_GLOBAL__N_122SkMagnifierImageFilterE = internal unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkImageFilter_Base*)* @_ZN18SkImageFilter_BaseD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::SkMagnifierImageFilter"*)* @_ZN12_GLOBAL__N_122SkMagnifierImageFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.sk_sp.15*, %class.SkReadBuffer*)* (%"class.(anonymous namespace)::SkMagnifierImageFilter"*)* @_ZNK12_GLOBAL__N_122SkMagnifierImageFilter10getFactoryEv to i8*), i8* bitcast (i8* (%"class.(anonymous namespace)::SkMagnifierImageFilter"*)* @_ZNK12_GLOBAL__N_122SkMagnifierImageFilter11getTypeNameEv to i8*), i8* bitcast (void (%"class.(anonymous namespace)::SkMagnifierImageFilter"*, %class.SkWriteBuffer*)* @_ZNK12_GLOBAL__N_122SkMagnifierImageFilter7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkImageFilter*)* @_ZNK13SkImageFilter18getFlattenableTypeEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)* @_ZNK13SkImageFilter17computeFastBoundsERK6SkRect to i8*), i8* bitcast (void (%class.sk_sp.18*, %"class.(anonymous namespace)::SkMagnifierImageFilter"*, %"class.skif::Context"*, %struct.SkIPoint*)* @_ZNK12_GLOBAL__N_122SkMagnifierImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)* @_ZNK18SkImageFilter_Base14onFilterBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_ to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)* @_ZNK18SkImageFilter_Base18onFilterNodeBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_ to i8*), i8* bitcast (i1 (%class.SkImageFilter_Base*, %class.SkColorFilter**)* @_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter to i8*), i8* bitcast (i1 (%class.SkImageFilter_Base*)* @_ZNK18SkImageFilter_Base21onCanHandleComplexCTMEv to i8*), i8* bitcast (i1 (%class.SkImageFilter_Base*)* @_ZNK18SkImageFilter_Base23affectsTransparentBlackEv to i8*), i8* bitcast (void ()* @_ZNK18SkImageFilter_Base13onFilterImageERKN4skif7ContextE to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)* @_ZNK18SkImageFilter_Base21onGetInputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEES8_NS_13VisitChildrenE to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*)* @_ZNK18SkImageFilter_Base22onGetOutputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEE to i8*)] }, align 8
@_ZTV17GrMagnifierEffect = external unnamed_addr constant { [10 x i8*] }, align 8
@__const._ZN12_GLOBAL__N_122SkMagnifierImageFilter10CreateProcER12SkReadBuffer.common = private unnamed_addr constant { %"class.SkImageFilter_Base::CropRect", [4 x i8], %class.SkSTArray.141 } { %"class.SkImageFilter_Base::CropRect" { %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA", %class.SkSTArray.141 { %class.SkAlignedSTStorage.142 { [16 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" }, %class.SkTArray.143 { %class.sk_sp* inttoptr (i64 -6148914691236517206 to %class.sk_sp*), i64 -6148914691236517206 } } }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkImageFilters9MagnifierERK6SkRectf5sk_spI13SkImageFilterERKNS_8CropRectE(%class.sk_sp* noalias nocapture sret, %struct.SkRect* nocapture readonly dereferenceable(16), float, %class.sk_sp* nocapture, %"struct.SkImageFilters::CropRect"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.sk_sp, align 8
  %7 = bitcast float %2 to i32
  %8 = and i32 %7, 2139095040
  %9 = icmp eq i32 %8, 2139095040
  br i1 %9, label %32, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 0
  %12 = load float, float* %11, align 4
  %13 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 2
  %14 = load float, float* %13, align 4
  %15 = fcmp ugt float %12, %14
  br i1 %15, label %32, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 1
  %18 = load float, float* %17, align 4
  %19 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 3
  %20 = load float, float* %19, align 4
  %21 = fcmp ugt float %18, %20
  br i1 %21, label %32, label %22

22:                                               ; preds = %16
  %23 = fsub float %14, %12
  %24 = bitcast float %23 to i32
  %25 = and i32 %24, 2139095040
  %26 = icmp eq i32 %25, 2139095040
  br i1 %26, label %32, label %27

27:                                               ; preds = %22
  %28 = fsub float %20, %18
  %29 = bitcast float %28 to i32
  %30 = and i32 %29, 2139095040
  %31 = icmp eq i32 %30, 2139095040
  br i1 %31, label %32, label %34

32:                                               ; preds = %27, %5, %10, %16, %22
  %33 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %33, align 8
  br label %89

34:                                               ; preds = %27
  %35 = fcmp olt float %2, 0.000000e+00
  br i1 %35, label %36, label %38

36:                                               ; preds = %34
  %37 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %37, align 8
  br label %89

38:                                               ; preds = %34
  %39 = fcmp olt float %12, 0.000000e+00
  %40 = fcmp olt float %18, 0.000000e+00
  %41 = or i1 %39, %40
  br i1 %41, label %42, label %44

42:                                               ; preds = %38
  %43 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %43, align 8
  br label %89

44:                                               ; preds = %38
  %45 = tail call i8* @_Znwm(i64 96) #11
  %46 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  %47 = bitcast %class.sk_sp* %3 to i64*
  %48 = load i64, i64* %47, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %46, align 8
  %49 = bitcast %class.sk_sp* %6 to i64*
  store i64 %48, i64* %49, align 8
  %50 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %4, i64 0, i32 0
  %51 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %4, i64 0, i32 0, i32 0
  %52 = load float, float* %51, align 4
  %53 = fcmp une float %52, 0xFFF0000000000000
  br i1 %53, label %66, label %54

54:                                               ; preds = %44
  %55 = getelementptr inbounds float, float* %51, i64 1
  %56 = load float, float* %55, align 4
  %57 = fcmp une float %56, 0xFFF0000000000000
  br i1 %57, label %66, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds float, float* %51, i64 2
  %60 = load float, float* %59, align 4
  %61 = fcmp une float %60, 0x7FF0000000000000
  br i1 %61, label %66, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds float, float* %51, i64 3
  %64 = load float, float* %63, align 4
  %65 = fcmp une float %64, 0x7FF0000000000000
  br i1 %65, label %66, label %67

66:                                               ; preds = %62, %58, %54, %44
  br label %67

67:                                               ; preds = %62, %66
  %68 = phi %struct.SkRect* [ %50, %66 ], [ null, %62 ]
  %69 = bitcast i8* %45 to %class.SkImageFilter_Base*
  call void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base* nonnull %69, %class.sk_sp* nonnull %6, i32 1, %struct.SkRect* %68) #12
  %70 = bitcast i8* %45 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN12_GLOBAL__N_122SkMagnifierImageFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %70, align 8
  %71 = getelementptr inbounds i8, i8* %45, i64 76
  %72 = bitcast %struct.SkRect* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %71, i8* align 4 %72, i64 16, i1 false) #12
  %73 = getelementptr inbounds i8, i8* %45, i64 92
  %74 = bitcast i8* %73 to float*
  store float %2, float* %74, align 4
  %75 = bitcast %class.sk_sp* %0 to i8**
  store i8* %45, i8** %75, align 8
  %76 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %6, i64 0, i32 0
  %77 = load %class.SkImageFilter*, %class.SkImageFilter** %76, align 8
  %78 = icmp eq %class.SkImageFilter* %77, null
  br i1 %78, label %89, label %79

79:                                               ; preds = %67
  %80 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %77, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = atomicrmw add i32* %80, i32 -1 acq_rel
  %82 = icmp eq i32 %81, 1
  br i1 %82, label %83, label %89

83:                                               ; preds = %79
  %84 = bitcast %class.SkImageFilter* %77 to %class.SkRefCntBase*
  %85 = bitcast %class.SkImageFilter* %77 to void (%class.SkRefCntBase*)***
  %86 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %85, align 8
  %87 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %86, i64 2
  %88 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %87, align 8
  call void %88(%class.SkRefCntBase* nonnull %84) #12
  br label %89

89:                                               ; preds = %83, %79, %67, %42, %36, %32
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z41SkRegisterMagnifierImageFilterFlattenablev() local_unnamed_addr #0 {
  tail call void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), void (%class.sk_sp.15*, %class.SkReadBuffer*)* nonnull @_ZN12_GLOBAL__N_122SkMagnifierImageFilter10CreateProcER12SkReadBuffer) #12
  tail call void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0), void (%class.sk_sp.15*, %class.SkReadBuffer*)* nonnull @_ZN12_GLOBAL__N_122SkMagnifierImageFilter10CreateProcER12SkReadBuffer) #12
  ret void
}

declare void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8*, void (%class.sk_sp.15*, %class.SkReadBuffer*)*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_122SkMagnifierImageFilter10CreateProcER12SkReadBuffer(%class.sk_sp.15* noalias nocapture sret, %class.SkReadBuffer* dereferenceable(136)) #0 align 2 {
  %3 = alloca %"class.SkImageFilter_Base::Common", align 8
  %4 = alloca %struct.SkRect, align 4
  %5 = alloca %class.sk_sp, align 8
  %6 = alloca %class.sk_sp, align 8
  %7 = alloca %"struct.SkImageFilters::CropRect", align 4
  %8 = bitcast %"class.SkImageFilter_Base::Common"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %8) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 bitcast ({ %"class.SkImageFilter_Base::CropRect", [4 x i8], %class.SkSTArray.141 }* @__const._ZN12_GLOBAL__N_122SkMagnifierImageFilter10CreateProcER12SkReadBuffer.common to i8*), i64 40, i1 false)
  %9 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %3, i64 0, i32 0, i32 1
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %3, i64 0, i32 1, i32 0, i32 0, i64 16
  %11 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %3, i64 0, i32 1, i32 0, i32 0, i64 0
  %12 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %3, i64 0, i32 1, i32 0, i32 0, i64 24
  %13 = bitcast i8* %12 to i64*
  %14 = bitcast i8* %10 to i8**
  store i8* %11, i8** %14, align 8
  store i64 17179869184, i64* %13, align 8
  %15 = call zeroext i1 @_ZN18SkImageFilter_Base6Common9unflattenER12SkReadBufferi(%"class.SkImageFilter_Base::Common"* nonnull %3, %class.SkReadBuffer* dereferenceable(136) %1, i32 1) #12
  br i1 %15, label %18, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %0, i64 0, i32 0
  store %class.SkFlattenable* null, %class.SkFlattenable** %17, align 8
  br label %54

18:                                               ; preds = %2
  %19 = bitcast %struct.SkRect* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #12
  %20 = bitcast %struct.SkRect* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %20, i8 -1, i64 16, i1 false)
  call void @_ZN12SkReadBuffer8readRectEP6SkRect(%class.SkReadBuffer* %1, %struct.SkRect* nonnull %4) #12
  %21 = bitcast %class.sk_sp* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  %22 = call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #12
  %23 = bitcast i8* %10 to %class.sk_sp**
  %24 = load %class.sk_sp*, %class.sk_sp** %23, align 8, !noalias !2
  %25 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %6, i64 0, i32 0
  %26 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %24, i64 0, i32 0
  %27 = load %class.SkImageFilter*, %class.SkImageFilter** %26, align 8, !noalias !2
  %28 = icmp eq %class.SkImageFilter* %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %18
  %30 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %27, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw add i32* %30, i32 1 monotonic, !noalias !2
  br label %32

32:                                               ; preds = %29, %18
  store %class.SkImageFilter* %27, %class.SkImageFilter** %25, align 8, !alias.scope !2
  %33 = bitcast %"struct.SkImageFilters::CropRect"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #12
  %34 = load i32, i32* %9, align 8
  %35 = icmp eq i32 %34, 0
  %36 = select i1 %35, i8* bitcast (%struct.SkRect* @_ZN4skifL11kNoCropRectE to i8*), i8* %8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %33, i8* align 4 %36, i64 16, i1 false) #12
  call void @_ZN14SkImageFilters9MagnifierERK6SkRectf5sk_spI13SkImageFilterERKNS_8CropRectE(%class.sk_sp* nonnull sret %5, %struct.SkRect* nonnull dereferenceable(16) %4, float %22, %class.sk_sp* nonnull %6, %"struct.SkImageFilters::CropRect"* nonnull dereferenceable(16) %7)
  %37 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %5, i64 0, i32 0
  %38 = bitcast %class.sk_sp* %5 to i64*
  %39 = load i64, i64* %38, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %37, align 8
  %40 = bitcast %class.sk_sp.15* %0 to i64*
  store i64 %39, i64* %40, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #12
  %41 = load %class.SkImageFilter*, %class.SkImageFilter** %25, align 8
  %42 = icmp eq %class.SkImageFilter* %41, null
  br i1 %42, label %53, label %43

43:                                               ; preds = %32
  %44 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %41, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw add i32* %44, i32 -1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %53

47:                                               ; preds = %43
  %48 = bitcast %class.SkImageFilter* %41 to %class.SkRefCntBase*
  %49 = bitcast %class.SkImageFilter* %41 to void (%class.SkRefCntBase*)***
  %50 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %49, align 8
  %51 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %50, i64 2
  %52 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %51, align 8
  call void %52(%class.SkRefCntBase* nonnull %48) #12
  br label %53

53:                                               ; preds = %32, %43, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #12
  br label %54

54:                                               ; preds = %53, %16
  %55 = load i64, i64* %13, align 8
  %56 = and i64 %55, 4294967294
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %60, label %58

58:                                               ; preds = %54
  %59 = bitcast i8* %10 to %class.sk_sp**
  br label %64

60:                                               ; preds = %80, %54
  %61 = phi i64 [ %55, %54 ], [ %82, %80 ]
  %62 = and i64 %61, 1
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %88, label %86

64:                                               ; preds = %80, %58
  %65 = phi i64 [ 0, %58 ], [ %81, %80 ]
  %66 = load %class.sk_sp*, %class.sk_sp** %59, align 8
  %67 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %66, i64 %65, i32 0
  %68 = load %class.SkImageFilter*, %class.SkImageFilter** %67, align 8
  %69 = icmp eq %class.SkImageFilter* %68, null
  br i1 %69, label %80, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %68, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = atomicrmw add i32* %71, i32 -1 acq_rel
  %73 = icmp eq i32 %72, 1
  br i1 %73, label %74, label %80

74:                                               ; preds = %70
  %75 = bitcast %class.SkImageFilter* %68 to %class.SkRefCntBase*
  %76 = bitcast %class.SkImageFilter* %68 to void (%class.SkRefCntBase*)***
  %77 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %76, align 8
  %78 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %77, i64 2
  %79 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %78, align 8
  call void %79(%class.SkRefCntBase* nonnull %75) #12
  br label %80

80:                                               ; preds = %74, %70, %64
  %81 = add nuw nsw i64 %65, 1
  %82 = load i64, i64* %13, align 8
  %83 = lshr i64 %82, 1
  %84 = and i64 %83, 2147483647
  %85 = icmp ult i64 %81, %84
  br i1 %85, label %64, label %60

86:                                               ; preds = %60
  %87 = load i8*, i8** %14, align 8
  call void @_Z7sk_freePv(i8* %87) #12
  br label %88

88:                                               ; preds = %60, %86
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %8) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base*, %class.sk_sp*, i32, %struct.SkRect*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind
declare void @_ZN18SkImageFilter_BaseD2Ev(%class.SkImageFilter_Base*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_122SkMagnifierImageFilterD0Ev(%"class.(anonymous namespace)::SkMagnifierImageFilter"*) unnamed_addr #5 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::SkMagnifierImageFilter"* %0 to %class.SkImageFilter_Base*
  tail call void @_ZN18SkImageFilter_BaseD2Ev(%class.SkImageFilter_Base* %2) #12
  %3 = bitcast %"class.(anonymous namespace)::SkMagnifierImageFilter"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #12
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal nonnull void (%class.sk_sp.15*, %class.SkReadBuffer*)* @_ZNK12_GLOBAL__N_122SkMagnifierImageFilter10getFactoryEv(%"class.(anonymous namespace)::SkMagnifierImageFilter"* nocapture readnone) unnamed_addr #6 align 2 {
  ret void (%class.sk_sp.15*, %class.SkReadBuffer*)* @_ZN12_GLOBAL__N_122SkMagnifierImageFilter10CreateProcER12SkReadBuffer
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i8* @_ZNK12_GLOBAL__N_122SkMagnifierImageFilter11getTypeNameEv(%"class.(anonymous namespace)::SkMagnifierImageFilter"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_122SkMagnifierImageFilter7flattenER13SkWriteBuffer(%"class.(anonymous namespace)::SkMagnifierImageFilter"*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.(anonymous namespace)::SkMagnifierImageFilter"* %0 to %class.SkImageFilter_Base*
  tail call void @_ZNK18SkImageFilter_Base7flattenER13SkWriteBuffer(%class.SkImageFilter_Base* %3, %class.SkWriteBuffer* dereferenceable(56) %1) #12
  %4 = getelementptr inbounds %"class.(anonymous namespace)::SkMagnifierImageFilter", %"class.(anonymous namespace)::SkMagnifierImageFilter"* %0, i64 0, i32 1
  %5 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, %struct.SkRect*)***
  %6 = load void (%class.SkWriteBuffer*, %struct.SkRect*)**, void (%class.SkWriteBuffer*, %struct.SkRect*)*** %5, align 8
  %7 = getelementptr inbounds void (%class.SkWriteBuffer*, %struct.SkRect*)*, void (%class.SkWriteBuffer*, %struct.SkRect*)** %6, i64 22
  %8 = load void (%class.SkWriteBuffer*, %struct.SkRect*)*, void (%class.SkWriteBuffer*, %struct.SkRect*)** %7, align 8
  tail call void %8(%class.SkWriteBuffer* %1, %struct.SkRect* dereferenceable(16) %4) #12
  %9 = getelementptr inbounds %"class.(anonymous namespace)::SkMagnifierImageFilter", %"class.(anonymous namespace)::SkMagnifierImageFilter"* %0, i64 0, i32 2
  %10 = load float, float* %9, align 4
  %11 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, float)***
  %12 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %11, align 8
  %13 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %12, i64 5
  %14 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %13, align 8
  tail call void %14(%class.SkWriteBuffer* %1, float %10) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK13SkImageFilter18getFlattenableTypeEv(%class.SkImageFilter*) unnamed_addr #0 comdat align 2 {
  ret i32 3
}

declare { <2 x float>, <2 x float> } @_ZNK13SkImageFilter17computeFastBoundsERK6SkRect(%class.SkImageFilter*, %struct.SkRect* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_122SkMagnifierImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint(%class.sk_sp.18* noalias sret, %"class.(anonymous namespace)::SkMagnifierImageFilter"*, %"class.skif::Context"* dereferenceable(136), %struct.SkIPoint* nocapture) unnamed_addr #7 align 2 {
  %5 = alloca %"class.skif::FilterResult", align 8
  %6 = alloca { i64, i64 }, align 8
  %7 = bitcast { i64, i64 }* %6 to %struct.SkIRect*
  %8 = alloca %struct.SkIRect, align 8
  %9 = alloca %class.GrSurfaceProxyView, align 8
  %10 = alloca %class.GrSurfaceProxyView, align 8
  %11 = alloca %class.SkBitmap, align 8
  %12 = alloca %struct.SkImageInfo, align 16
  %13 = alloca %class.SkBitmap, align 8
  %14 = alloca { i64, i64 }, align 8
  %15 = bitcast { i64, i64 }* %14 to %struct.SkIRect*
  %16 = bitcast %"class.(anonymous namespace)::SkMagnifierImageFilter"* %1 to %class.SkImageFilter_Base*
  %17 = bitcast %"class.skif::FilterResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #12, !noalias !5
  call void @_ZNK18SkImageFilter_Base11filterInputILN4skif5UsageE0EEENS1_12FilterResultIXT_EEEiRKNS1_7ContextE(%"class.skif::FilterResult"* nonnull sret %5, %class.SkImageFilter_Base* %16, i32 0, %"class.skif::Context"* dereferenceable(136) %2) #12, !noalias !5
  %18 = getelementptr inbounds %"class.skif::FilterResult", %"class.skif::FilterResult"* %5, i64 0, i32 0, i32 0
  %19 = load %class.SkSpecialImage*, %class.SkSpecialImage** %18, align 8, !noalias !8
  %20 = icmp eq %class.SkSpecialImage* %19, null
  br i1 %20, label %35, label %21

21:                                               ; preds = %4
  %22 = getelementptr inbounds %"class.skif::FilterResult", %"class.skif::FilterResult"* %5, i64 0, i32 1, i32 0
  %23 = bitcast %struct.SkIPoint* %22 to i64*
  %24 = load i64, i64* %23, align 8, !noalias !8
  %25 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %19, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw add i32* %25, i32 1 monotonic, !noalias !8
  %27 = atomicrmw add i32* %25, i32 -1 acq_rel, !noalias !5
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %37

29:                                               ; preds = %21
  %30 = bitcast %class.SkSpecialImage* %19 to %class.SkRefCntBase*
  %31 = bitcast %class.SkSpecialImage* %19 to void (%class.SkRefCntBase*)***
  %32 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %31, align 8, !noalias !5
  %33 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %32, i64 2
  %34 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %33, align 8, !noalias !5
  call void %34(%class.SkRefCntBase* nonnull %30) #12, !noalias !5
  br label %37

35:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #12, !noalias !5
  %36 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %36, align 8
  br label %522

37:                                               ; preds = %29, %21
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #12, !noalias !5
  %38 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #12
  %39 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %40 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %19, i64 0, i32 2, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %19, i64 0, i32 2, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = sub i32 %41, %43
  %45 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %19, i64 0, i32 2, i32 3
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %19, i64 0, i32 2, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = sub i32 %46, %48
  %50 = shl i64 %24, 32
  %51 = ashr exact i64 %50, 32
  %52 = sext i32 %44 to i64
  %53 = add nsw i64 %51, %52
  %54 = icmp slt i64 %53, 2147483647
  %55 = select i1 %54, i64 %53, i64 2147483647
  %56 = icmp sgt i64 %55, -2147483647
  %57 = select i1 %56, i64 %55, i64 -2147483647
  %58 = ashr i64 %24, 32
  %59 = sext i32 %49 to i64
  %60 = add nsw i64 %58, %59
  %61 = icmp slt i64 %60, 2147483647
  %62 = select i1 %61, i64 %60, i64 2147483647
  %63 = icmp sgt i64 %62, -2147483647
  %64 = select i1 %63, i64 %62, i64 -2147483647
  %65 = shl nsw i64 %64, 32
  %66 = and i64 %57, 4294967295
  %67 = or i64 %65, %66
  %68 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  store i64 %24, i64* %68, align 8
  store i64 %67, i64* %39, align 8
  %69 = bitcast %struct.SkIRect* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %69) #12
  %70 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %8, i64 0, i32 0
  %71 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %8, i64 0, i32 1
  %72 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %8, i64 0, i32 2
  %73 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %8, i64 0, i32 3
  %74 = bitcast %struct.SkIRect* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 -86, i64 16, i1 false)
  %75 = call zeroext i1 @_ZNK18SkImageFilter_Base13applyCropRectERKN4skif7ContextERK7SkIRectPS4_(%class.SkImageFilter_Base* %16, %"class.skif::Context"* dereferenceable(136) %2, %struct.SkIRect* nonnull dereferenceable(16) %7, %struct.SkIRect* nonnull %8) #12
  br i1 %75, label %78, label %76

76:                                               ; preds = %37
  %77 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %77, align 8
  br label %513

78:                                               ; preds = %37
  %79 = getelementptr inbounds %"class.(anonymous namespace)::SkMagnifierImageFilter", %"class.(anonymous namespace)::SkMagnifierImageFilter"* %1, i64 0, i32 2
  %80 = load float, float* %79, align 4
  %81 = fcmp ogt float %80, 0.000000e+00
  %82 = fdiv float 1.000000e+00, %80
  %83 = select i1 %81, float %82, float 1.000000e+00
  %84 = getelementptr inbounds %"class.(anonymous namespace)::SkMagnifierImageFilter", %"class.(anonymous namespace)::SkMagnifierImageFilter"* %1, i64 0, i32 1, i32 2
  %85 = load float, float* %84, align 4
  %86 = getelementptr inbounds %"class.(anonymous namespace)::SkMagnifierImageFilter", %"class.(anonymous namespace)::SkMagnifierImageFilter"* %1, i64 0, i32 1, i32 0
  %87 = load float, float* %86, align 4
  %88 = fsub float %85, %87
  %89 = load i32, i32* %72, align 8
  %90 = load i32, i32* %70, align 8
  %91 = sub i32 %89, %90
  %92 = sitofp i32 %91 to float
  %93 = fdiv float %88, %92
  %94 = getelementptr inbounds %"class.(anonymous namespace)::SkMagnifierImageFilter", %"class.(anonymous namespace)::SkMagnifierImageFilter"* %1, i64 0, i32 1, i32 3
  %95 = load float, float* %94, align 4
  %96 = getelementptr inbounds %"class.(anonymous namespace)::SkMagnifierImageFilter", %"class.(anonymous namespace)::SkMagnifierImageFilter"* %1, i64 0, i32 1, i32 1
  %97 = load float, float* %96, align 4
  %98 = fsub float %95, %97
  %99 = load i32, i32* %73, align 4
  %100 = load i32, i32* %71, align 4
  %101 = sub i32 %99, %100
  %102 = sitofp i32 %101 to float
  %103 = fdiv float %98, %102
  %104 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 5, i32 0, i32 0
  %105 = load %class.SkSpecialImage*, %class.SkSpecialImage** %104, align 8
  %106 = call zeroext i1 @_ZNK14SkSpecialImage15isTextureBackedEv(%class.SkSpecialImage* %105) #12
  br i1 %106, label %107, label %304

107:                                              ; preds = %78
  %108 = load %class.SkSpecialImage*, %class.SkSpecialImage** %104, align 8
  %109 = call %class.GrRecordingContext* @_ZNK14SkSpecialImage10getContextEv(%class.SkSpecialImage* %108) #12
  %110 = bitcast %class.GrSurfaceProxyView* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %110) #12
  %111 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %9, i64 0, i32 0, i32 0
  %112 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %9, i64 0, i32 1
  %113 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %9, i64 0, i32 2, i32 0
  %114 = bitcast %class.GrSurfaceProxyView* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %114, i8 -86, i64 16, i1 false)
  call void @_ZNK14SkSpecialImage4viewEP18GrRecordingContext(%class.GrSurfaceProxyView* nonnull sret %9, %class.SkSpecialImage* nonnull %19, %class.GrRecordingContext* %109) #12
  %115 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %111, align 8
  %116 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %115, i64 0, i32 15
  %117 = load i8, i8* %116, align 1, !range !11
  %118 = icmp ne i8 %117, 0
  %119 = load i32, i32* %70, align 8
  %120 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %3, i64 0, i32 0
  store i32 %119, i32* %120, align 4
  %121 = load i32, i32* %71, align 4
  %122 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %3, i64 0, i32 1
  store i32 %121, i32* %122, align 4
  %123 = sext i32 %119 to i64
  %124 = sub i64 0, %50
  %125 = ashr exact i64 %124, 32
  %126 = add nsw i64 %125, %123
  %127 = icmp slt i64 %126, 2147483647
  %128 = select i1 %127, i64 %126, i64 2147483647
  %129 = icmp sgt i64 %128, -2147483647
  %130 = select i1 %129, i64 %128, i64 -2147483647
  %131 = sext i32 %121 to i64
  %132 = and i64 %24, -4294967296
  %133 = sub i64 0, %132
  %134 = ashr exact i64 %133, 32
  %135 = add nsw i64 %134, %131
  %136 = icmp slt i64 %135, 2147483647
  %137 = select i1 %136, i64 %135, i64 2147483647
  %138 = icmp sgt i64 %137, -2147483647
  %139 = select i1 %138, i64 %137, i64 -2147483647
  %140 = load i32, i32* %72, align 8
  %141 = sext i32 %140 to i64
  %142 = add nsw i64 %125, %141
  %143 = icmp slt i64 %142, 2147483647
  %144 = select i1 %143, i64 %142, i64 2147483647
  %145 = icmp sgt i64 %144, -2147483647
  %146 = select i1 %145, i64 %144, i64 -2147483647
  %147 = load i32, i32* %73, align 4
  %148 = sext i32 %147 to i64
  %149 = add nsw i64 %134, %148
  %150 = icmp slt i64 %149, 2147483647
  %151 = select i1 %150, i64 %149, i64 2147483647
  %152 = icmp sgt i64 %151, -2147483647
  %153 = select i1 %152, i64 %151, i64 -2147483647
  %154 = load i32, i32* %42, align 4
  %155 = load i32, i32* %47, align 4
  %156 = sext i32 %154 to i64
  %157 = add nsw i64 %130, %156
  %158 = icmp slt i64 %157, 2147483647
  %159 = select i1 %158, i64 %157, i64 2147483647
  %160 = icmp sgt i64 %159, -2147483647
  %161 = select i1 %160, i64 %159, i64 -2147483647
  %162 = trunc i64 %161 to i32
  store i32 %162, i32* %70, align 8
  %163 = sext i32 %155 to i64
  %164 = add nsw i64 %139, %163
  %165 = icmp slt i64 %164, 2147483647
  %166 = select i1 %165, i64 %164, i64 2147483647
  %167 = icmp sgt i64 %166, -2147483647
  %168 = select i1 %167, i64 %166, i64 -2147483647
  %169 = trunc i64 %168 to i32
  store i32 %169, i32* %71, align 4
  %170 = add nsw i64 %146, %156
  %171 = icmp slt i64 %170, 2147483647
  %172 = select i1 %171, i64 %170, i64 2147483647
  %173 = icmp sgt i64 %172, -2147483647
  %174 = select i1 %173, i64 %172, i64 -2147483647
  %175 = trunc i64 %174 to i32
  store i32 %175, i32* %72, align 8
  %176 = add nsw i64 %153, %163
  %177 = icmp slt i64 %176, 2147483647
  %178 = select i1 %177, i64 %176, i64 2147483647
  %179 = icmp sgt i64 %178, -2147483647
  %180 = select i1 %179, i64 %178, i64 -2147483647
  %181 = trunc i64 %180 to i32
  store i32 %181, i32* %73, align 4
  %182 = fsub float 1.000000e+00, %93
  %183 = sitofp i32 %154 to float
  %184 = fmul float %182, %183
  %185 = fsub float 1.000000e+00, %103
  %186 = sitofp i32 %155 to float
  %187 = fmul float %185, %186
  %188 = load float, float* %86, align 4
  %189 = fadd float %184, %188
  %190 = load float, float* %96, align 4
  %191 = fadd float %187, %190
  %192 = load float, float* %84, align 4
  %193 = fadd float %184, %192
  %194 = load float, float* %94, align 4
  %195 = fadd float %187, %194
  %196 = insertelement <2 x float> undef, float %189, i32 0
  %197 = insertelement <2 x float> %196, float %191, i32 1
  %198 = insertelement <2 x float> undef, float %193, i32 0
  %199 = insertelement <2 x float> %198, float %195, i32 1
  %200 = bitcast %class.GrSurfaceProxyView* %9 to i64*
  %201 = load i64, i64* %200, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %111, align 8
  %202 = bitcast %class.GrSurfaceProxyView* %10 to i64*
  store i64 %201, i64* %202, align 8
  %203 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %10, i64 0, i32 1
  %204 = load i32, i32* %112, align 8
  store i32 %204, i32* %203, align 8
  %205 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %10, i64 0, i32 2, i32 0
  %206 = load i16, i16* %113, align 4
  store i16 %206, i16* %205, align 4
  %207 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #12
  %208 = call %class.GrFragmentProcessor* @_ZN15GrTextureEffect4MakeE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix12SkFilterMode12SkMipmapMode(%class.GrSurfaceProxyView* nonnull %10, i32 2, %class.SkMatrix* dereferenceable(40) %207, i32 0, i32 0) #12
  %209 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %10, i64 0, i32 0, i32 0
  %210 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %209, align 8
  %211 = icmp eq %class.GrSurfaceProxy* %210, null
  br i1 %211, label %224, label %212

212:                                              ; preds = %107
  %213 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %210, i64 0, i32 1
  %214 = getelementptr inbounds %class.SkNVRefCnt.89, %class.SkNVRefCnt.89* %213, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = atomicrmw add i32* %214, i32 -1 acq_rel
  %216 = icmp eq i32 %215, 1
  br i1 %216, label %217, label %224

217:                                              ; preds = %212
  %218 = getelementptr inbounds %class.SkNVRefCnt.89, %class.SkNVRefCnt.89* %213, i64 -2
  %219 = bitcast %class.SkNVRefCnt.89* %218 to %class.GrSurfaceProxy*
  %220 = bitcast %class.SkNVRefCnt.89* %218 to void (%class.GrSurfaceProxy*)***
  %221 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %220, align 8
  %222 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %221, i64 1
  %223 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %222, align 8
  call void %223(%class.GrSurfaceProxy* nonnull %219) #12
  br label %224

224:                                              ; preds = %107, %212, %217
  %225 = bitcast %struct.SkIRect* %8 to i64*
  %226 = load i64, i64* %225, align 8
  %227 = bitcast i32* %72 to i64*
  %228 = load i64, i64* %227, align 8
  %229 = trunc i64 %228 to i32
  %230 = trunc i64 %226 to i32
  %231 = sub i32 %229, %230
  %232 = sitofp i32 %231 to float
  %233 = fmul float %83, %232
  %234 = load i32, i32* %73, align 4
  %235 = load i32, i32* %71, align 4
  %236 = sub i32 %234, %235
  %237 = sitofp i32 %236 to float
  %238 = fmul float %83, %237
  %239 = call i8* @_ZN11GrProcessornwEm(i64 112) #12
  %240 = bitcast i8* %239 to %class.GrFragmentProcessor*
  %241 = bitcast i8* %239 to i32 (...)***
  %242 = getelementptr inbounds i8, i8* %239, i64 8
  %243 = bitcast i8* %242 to i32*
  store i32 60, i32* %243, align 8
  %244 = getelementptr inbounds i8, i8* %239, i64 12
  %245 = bitcast i8* %244 to i32*
  store i32 0, i32* %245, align 4
  %246 = getelementptr inbounds i8, i8* %239, i64 24
  %247 = getelementptr inbounds i8, i8* %239, i64 16
  %248 = getelementptr inbounds i8, i8* %239, i64 32
  %249 = bitcast i8* %248 to i64*
  %250 = bitcast i8* %246 to i8**
  store i8* %247, i8** %250, align 8
  store i64 8589934592, i64* %249, align 8
  %251 = getelementptr inbounds i8, i8* %239, i64 40
  %252 = getelementptr inbounds i8, i8* %239, i64 48
  %253 = bitcast i8* %252 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %251, i8 0, i64 17, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV17GrMagnifierEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %241, align 8
  %254 = getelementptr inbounds i8, i8* %239, i64 60
  %255 = bitcast i8* %254 to i64*
  store i64 %226, i64* %255, align 4
  %256 = getelementptr inbounds i8, i8* %239, i64 68
  %257 = bitcast i8* %256 to i64*
  store i64 %228, i64* %257, align 4
  %258 = getelementptr inbounds i8, i8* %239, i64 76
  %259 = bitcast i8* %258 to <2 x float>*
  store <2 x float> %197, <2 x float>* %259, align 4
  %260 = getelementptr inbounds i8, i8* %239, i64 84
  %261 = bitcast i8* %260 to <2 x float>*
  store <2 x float> %199, <2 x float>* %261, align 4
  %262 = getelementptr inbounds i8, i8* %239, i64 92
  %263 = bitcast i8* %262 to float*
  store float %93, float* %263, align 4
  %264 = getelementptr inbounds i8, i8* %239, i64 96
  %265 = bitcast i8* %264 to float*
  store float %103, float* %265, align 8
  %266 = getelementptr inbounds i8, i8* %239, i64 100
  %267 = bitcast i8* %266 to float*
  store float %233, float* %267, align 4
  %268 = getelementptr inbounds i8, i8* %239, i64 104
  %269 = bitcast i8* %268 to float*
  store float %238, float* %269, align 8
  store i32 16, i32* %253, align 8
  call void @_ZN19GrFragmentProcessor13registerChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEEN4SkSL11SampleUsageE(%class.GrFragmentProcessor* %240, %class.GrFragmentProcessor* %208, i64 3) #12
  %270 = call %class.SkColorSpace* @_ZNK14SkSpecialImage13getColorSpaceEv(%class.SkSpecialImage* nonnull %19) #12
  %271 = bitcast %class.SkSpecialImage* %19 to i32 (%class.SkSpecialImage*)***
  %272 = load i32 (%class.SkSpecialImage*)**, i32 (%class.SkSpecialImage*)*** %271, align 8
  %273 = getelementptr inbounds i32 (%class.SkSpecialImage*)*, i32 (%class.SkSpecialImage*)** %272, i64 3
  %274 = load i32 (%class.SkSpecialImage*)*, i32 (%class.SkSpecialImage*)** %273, align 8
  %275 = call i32 %274(%class.SkSpecialImage* nonnull %19) #12
  %276 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 4
  %277 = load %class.SkColorSpace*, %class.SkColorSpace** %276, align 8
  %278 = call %class.GrFragmentProcessor* @_ZN23GrColorSpaceXformEffect4MakeENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEP12SkColorSpace11SkAlphaTypeS7_S8_(%class.GrFragmentProcessor* %240, %class.SkColorSpace* %270, i32 %275, %class.SkColorSpace* %277, i32 2) #12
  %279 = icmp eq %class.GrFragmentProcessor* %278, null
  br i1 %279, label %286, label %280

280:                                              ; preds = %224
  %281 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 3
  %282 = load i32, i32* %281, align 8
  %283 = load %class.SkColorSpace*, %class.SkColorSpace** %276, align 8
  %284 = load %class.SkSpecialImage*, %class.SkSpecialImage** %104, align 8
  %285 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %284, i64 0, i32 1
  call void @_ZN18SkImageFilter_Base10DrawWithFPEP18GrRecordingContextNSt3__110unique_ptrI19GrFragmentProcessorNS2_14default_deleteIS4_EEEERK7SkIRect11SkColorTypePK12SkColorSpaceRK14SkSurfaceProps11GrProtected(%class.sk_sp.18* sret %0, %class.GrRecordingContext* %109, %class.GrFragmentProcessor* nonnull %278, %struct.SkIRect* nonnull dereferenceable(16) %8, i32 %282, %class.SkColorSpace* %283, %class.SkSurfaceProps* dereferenceable(8) %285, i1 zeroext %118) #12
  br label %288

286:                                              ; preds = %224
  %287 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %287, align 8
  br label %288

288:                                              ; preds = %286, %280
  %289 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %111, align 8
  %290 = icmp eq %class.GrSurfaceProxy* %289, null
  br i1 %290, label %303, label %291

291:                                              ; preds = %288
  %292 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %289, i64 0, i32 1
  %293 = getelementptr inbounds %class.SkNVRefCnt.89, %class.SkNVRefCnt.89* %292, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %294 = atomicrmw add i32* %293, i32 -1 acq_rel
  %295 = icmp eq i32 %294, 1
  br i1 %295, label %296, label %303

296:                                              ; preds = %291
  %297 = getelementptr inbounds %class.SkNVRefCnt.89, %class.SkNVRefCnt.89* %292, i64 -2
  %298 = bitcast %class.SkNVRefCnt.89* %297 to %class.GrSurfaceProxy*
  %299 = bitcast %class.SkNVRefCnt.89* %297 to void (%class.GrSurfaceProxy*)***
  %300 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %299, align 8
  %301 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %300, i64 1
  %302 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %301, align 8
  call void %302(%class.GrSurfaceProxy* nonnull %298) #12
  br label %303

303:                                              ; preds = %288, %291, %296
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %110) #12
  br label %513

304:                                              ; preds = %78
  %305 = bitcast %class.SkBitmap* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %305) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %305, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %11) #12
  %306 = call zeroext i1 @_ZNK14SkSpecialImage11getROPixelsEP8SkBitmap(%class.SkSpecialImage* nonnull %19, %class.SkBitmap* nonnull %11) #12
  br i1 %306, label %309, label %307

307:                                              ; preds = %304
  %308 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %308, align 8
  br label %512

309:                                              ; preds = %304
  %310 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %11, i64 0, i32 1, i32 2, i32 0, i32 1
  %311 = load i32, i32* %310, align 8
  %312 = icmp eq i32 %311, 6
  br i1 %312, label %313, label %329

313:                                              ; preds = %309
  %314 = load float, float* %84, align 4
  %315 = load float, float* %86, align 4
  %316 = fsub float %314, %315
  %317 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %11, i64 0, i32 1, i32 2, i32 1, i32 0
  %318 = load i32, i32* %317, align 8
  %319 = sitofp i32 %318 to float
  %320 = fcmp ult float %316, %319
  br i1 %320, label %321, label %329

321:                                              ; preds = %313
  %322 = load float, float* %94, align 4
  %323 = load float, float* %96, align 4
  %324 = fsub float %322, %323
  %325 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %11, i64 0, i32 1, i32 2, i32 1, i32 1
  %326 = load i32, i32* %325, align 4
  %327 = sitofp i32 %326 to float
  %328 = fcmp ult float %324, %327
  br i1 %328, label %331, label %329

329:                                              ; preds = %321, %313, %309
  %330 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %330, align 8
  br label %512

331:                                              ; preds = %321
  %332 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %11, i64 0, i32 1, i32 0
  %333 = load i8*, i8** %332, align 8
  %334 = icmp eq i8* %333, null
  %335 = icmp slt i32 %318, 1
  %336 = or i1 %335, %334
  %337 = icmp slt i32 %326, 1
  %338 = or i1 %337, %336
  br i1 %338, label %339, label %341

339:                                              ; preds = %331
  %340 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %340, align 8
  br label %512

341:                                              ; preds = %331
  %342 = bitcast %struct.SkImageInfo* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %342) #12
  %343 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %12, i64 0, i32 0, i32 0, i32 0
  %344 = load i32, i32* %72, align 8
  %345 = load i32, i32* %70, align 8
  %346 = sub i32 %344, %345
  %347 = load i32, i32* %73, align 4
  %348 = load i32, i32* %71, align 4
  %349 = sub i32 %347, %348
  %350 = zext i32 %349 to i64
  %351 = shl nuw i64 %350, 32
  %352 = zext i32 %346 to i64
  %353 = or i64 %351, %352
  %354 = bitcast %struct.SkImageInfo* %12 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8589934598>, <2 x i64>* %354, align 16, !alias.scope !12
  %355 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %12, i64 0, i32 1
  %356 = bitcast %struct.SkISize* %355 to i64*
  store i64 %353, i64* %356, align 16, !alias.scope !12
  %357 = bitcast %class.SkBitmap* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %357) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %357, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %13) #12
  %358 = sext i32 %346 to i64
  %359 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %12, i64 0, i32 0
  %360 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* nonnull %359) #12
  %361 = sext i32 %360 to i64
  %362 = mul nsw i64 %361, %358
  %363 = icmp ult i64 %362, 2147483648
  %364 = select i1 %363, i64 %362, i64 0
  %365 = call zeroext i1 @_ZN8SkBitmap14tryAllocPixelsERK11SkImageInfom(%class.SkBitmap* nonnull %13, %struct.SkImageInfo* nonnull dereferenceable(24) %12, i64 %364) #12
  br i1 %365, label %368, label %366

366:                                              ; preds = %341
  %367 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %367, align 8
  br label %502

368:                                              ; preds = %341
  %369 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %13, i64 0, i32 1, i32 2, i32 1, i32 0
  %370 = load i32, i32* %369, align 8
  %371 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %13, i64 0, i32 1, i32 2, i32 1, i32 1
  %372 = load i32, i32* %371, align 4
  %373 = icmp sgt i32 %372, 0
  br i1 %373, label %374, label %396

374:                                              ; preds = %368
  %375 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %13, i64 0, i32 1, i32 0
  %376 = bitcast i8** %375 to i32**
  %377 = load i32*, i32** %376, align 8
  %378 = icmp sgt i32 %370, 0
  %379 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %11, i64 0, i32 1, i32 1
  br label %380

380:                                              ; preds = %414, %374
  %381 = phi i32* [ %377, %374 ], [ %415, %414 ]
  %382 = phi i32 [ 0, %374 ], [ %416, %414 ]
  br i1 %378, label %383, label %414

383:                                              ; preds = %380
  %384 = xor i32 %382, -1
  %385 = add i32 %372, %384
  %386 = icmp slt i32 %385, %382
  %387 = select i1 %386, i32 %385, i32 %382
  %388 = sitofp i32 %387 to float
  %389 = fmul float %83, %388
  %390 = fcmp olt float %389, 2.000000e+00
  %391 = fmul float %389, %389
  %392 = fsub float 2.000000e+00, %389
  %393 = fmul float %392, %392
  %394 = sitofp i32 %382 to float
  %395 = fmul float %103, %394
  br label %418

396:                                              ; preds = %414, %368
  %397 = load i32, i32* %70, align 8
  %398 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %3, i64 0, i32 0
  store i32 %397, i32* %398, align 4
  %399 = load i32, i32* %71, align 4
  %400 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %3, i64 0, i32 1
  store i32 %399, i32* %400, align 4
  %401 = bitcast { i64, i64 }* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %401) #12
  %402 = load i32, i32* %72, align 8
  %403 = sub i32 %402, %397
  %404 = load i32, i32* %73, align 4
  %405 = sub i32 %404, %399
  %406 = zext i32 %405 to i64
  %407 = shl nuw i64 %406, 32
  %408 = zext i32 %403 to i64
  %409 = or i64 %407, %408
  %410 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i64 0, i32 0
  store i64 0, i64* %410, align 8
  %411 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i64 0, i32 1
  store i64 %409, i64* %411, align 8
  %412 = load %class.SkSpecialImage*, %class.SkSpecialImage** %104, align 8
  %413 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %412, i64 0, i32 1
  call void @_ZN14SkSpecialImage14MakeFromRasterERK7SkIRectRK8SkBitmapRK14SkSurfaceProps(%class.sk_sp.18* sret %0, %struct.SkIRect* nonnull dereferenceable(16) %15, %class.SkBitmap* nonnull dereferenceable(56) %13, %class.SkSurfaceProps* dereferenceable(8) %413) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %401) #12
  br label %502

414:                                              ; preds = %442, %380
  %415 = phi i32* [ %381, %380 ], [ %499, %442 ]
  %416 = add nuw nsw i32 %382, 1
  %417 = icmp eq i32 %416, %372
  br i1 %417, label %396, label %380

418:                                              ; preds = %442, %383
  %419 = phi i32* [ %381, %383 ], [ %499, %442 ]
  %420 = phi i32 [ 0, %383 ], [ %500, %442 ]
  %421 = xor i32 %420, -1
  %422 = add i32 %370, %421
  %423 = icmp slt i32 %422, %420
  %424 = select i1 %423, i32 %422, i32 %420
  %425 = sitofp i32 %424 to float
  %426 = fmul float %83, %425
  %427 = fcmp olt float %426, 2.000000e+00
  %428 = and i1 %390, %427
  br i1 %428, label %429, label %438

429:                                              ; preds = %418
  %430 = fsub float 2.000000e+00, %426
  %431 = fmul float %430, %430
  %432 = fadd float %393, %431
  %433 = call float @sqrtf(float %432) #12
  %434 = fsub float 2.000000e+00, %433
  %435 = fcmp olt float %434, 0.000000e+00
  %436 = select i1 %435, float 0.000000e+00, float %434
  %437 = fmul float %436, %436
  br label %442

438:                                              ; preds = %418
  %439 = fmul float %426, %426
  %440 = fcmp olt float %391, %439
  %441 = select i1 %440, float %391, float %439
  br label %442

442:                                              ; preds = %438, %429
  %443 = phi float [ %441, %438 ], [ %437, %429 ]
  %444 = fcmp ogt float %443, 1.000000e+00
  %445 = select i1 %444, float 1.000000e+00, float %443
  %446 = fcmp ogt float %445, 0.000000e+00
  %447 = select i1 %446, float %445, float 0.000000e+00
  %448 = load float, float* %86, align 4
  %449 = sitofp i32 %420 to float
  %450 = fmul float %93, %449
  %451 = fadd float %450, %448
  %452 = fmul float %447, %451
  %453 = fsub float 1.000000e+00, %447
  %454 = fmul float %453, %449
  %455 = fadd float %454, %452
  %456 = load float, float* %96, align 4
  %457 = fadd float %395, %456
  %458 = fmul float %447, %457
  %459 = fmul float %453, %394
  %460 = fadd float %459, %458
  %461 = load i32, i32* %70, align 8
  %462 = call float @llvm.floor.f32(float %455)
  %463 = fcmp olt float %462, 0x41DFFFFFE0000000
  %464 = select i1 %463, float %462, float 0x41DFFFFFE0000000
  %465 = fcmp ogt float %464, 0xC1DFFFFFE0000000
  %466 = select i1 %465, float %464, float 0xC1DFFFFFE0000000
  %467 = fptosi float %466 to i32
  %468 = add nsw i32 %461, %467
  %469 = load i32, i32* %317, align 8
  %470 = add nsw i32 %469, -1
  %471 = icmp slt i32 %470, %468
  %472 = select i1 %471, i32 %470, i32 %468
  %473 = icmp sgt i32 %472, 0
  %474 = select i1 %473, i32 %472, i32 0
  %475 = load i32, i32* %71, align 4
  %476 = call float @llvm.floor.f32(float %460)
  %477 = fcmp olt float %476, 0x41DFFFFFE0000000
  %478 = select i1 %477, float %476, float 0x41DFFFFFE0000000
  %479 = fcmp ogt float %478, 0xC1DFFFFFE0000000
  %480 = select i1 %479, float %478, float 0xC1DFFFFFE0000000
  %481 = fptosi float %480 to i32
  %482 = add nsw i32 %475, %481
  %483 = load i32, i32* %325, align 4
  %484 = add nsw i32 %483, -1
  %485 = icmp slt i32 %484, %482
  %486 = select i1 %485, i32 %484, i32 %482
  %487 = icmp sgt i32 %486, 0
  %488 = select i1 %487, i32 %486, i32 0
  %489 = load i8*, i8** %332, align 8
  %490 = zext i32 %488 to i64
  %491 = load i64, i64* %379, align 8
  %492 = mul i64 %491, %490
  %493 = getelementptr inbounds i8, i8* %489, i64 %492
  %494 = shl i32 %474, 2
  %495 = sext i32 %494 to i64
  %496 = getelementptr inbounds i8, i8* %493, i64 %495
  %497 = bitcast i8* %496 to i32*
  %498 = load i32, i32* %497, align 4
  store i32 %498, i32* %419, align 4
  %499 = getelementptr inbounds i32, i32* %419, i64 1
  %500 = add nuw nsw i32 %420, 1
  %501 = icmp eq i32 %500, %370
  br i1 %501, label %414, label %418

502:                                              ; preds = %396, %366
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %13) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %357) #12
  %503 = load %class.SkColorSpace*, %class.SkColorSpace** %343, align 16
  %504 = icmp eq %class.SkColorSpace* %503, null
  br i1 %504, label %511, label %505

505:                                              ; preds = %502
  %506 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %503, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %507 = atomicrmw add i32* %506, i32 -1 acq_rel
  %508 = icmp eq i32 %507, 1
  br i1 %508, label %509, label %511

509:                                              ; preds = %505
  %510 = bitcast %class.SkColorSpace* %503 to i8*
  call void @_ZdlPv(i8* %510) #11
  br label %511

511:                                              ; preds = %502, %505, %509
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %342) #12
  br label %512

512:                                              ; preds = %307, %329, %339, %511
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %305) #12
  br label %513

513:                                              ; preds = %76, %303, %512
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %69) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #12
  %514 = atomicrmw add i32* %25, i32 -1 acq_rel
  %515 = icmp eq i32 %514, 1
  br i1 %515, label %516, label %522

516:                                              ; preds = %513
  %517 = bitcast %class.SkSpecialImage* %19 to %class.SkRefCntBase*
  %518 = bitcast %class.SkSpecialImage* %19 to void (%class.SkRefCntBase*)***
  %519 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %518, align 8
  %520 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %519, i64 2
  %521 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %520, align 8
  call void %521(%class.SkRefCntBase* nonnull %517) #12
  br label %522

522:                                              ; preds = %35, %513, %516
  ret void
}

declare { i64, i64 } @_ZNK18SkImageFilter_Base14onFilterBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_(%class.SkImageFilter_Base*, %struct.SkIRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, %struct.SkIRect*) unnamed_addr #2

declare { i64, i64 } @_ZNK18SkImageFilter_Base18onFilterNodeBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_(%class.SkImageFilter_Base*, %struct.SkIRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, %struct.SkIRect*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter(%class.SkImageFilter_Base*, %class.SkColorFilter**) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK18SkImageFilter_Base21onCanHandleComplexCTMEv(%class.SkImageFilter_Base*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK18SkImageFilter_Base23affectsTransparentBlackEv(%class.SkImageFilter_Base*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK18SkImageFilter_Base13onFilterImageERKN4skif7ContextE() unnamed_addr

declare { i64, i64 } @_ZNK18SkImageFilter_Base21onGetInputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEES8_NS_13VisitChildrenE(%class.SkImageFilter_Base*, %"class.skif::Mapping"* dereferenceable(80), %"class.skif::LayerSpace"* dereferenceable(16), %"class.skif::LayerSpace"* dereferenceable(16), i1 zeroext) unnamed_addr #2

declare { i64, i64 } @_ZNK18SkImageFilter_Base22onGetOutputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEE(%class.SkImageFilter_Base*, %"class.skif::Mapping"* dereferenceable(80), %"class.skif::LayerSpace"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZNK18SkImageFilter_Base7flattenER13SkWriteBuffer(%class.SkImageFilter_Base*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare zeroext i1 @_ZNK18SkImageFilter_Base13applyCropRectERKN4skif7ContextERK7SkIRectPS4_(%class.SkImageFilter_Base*, %"class.skif::Context"* dereferenceable(136), %struct.SkIRect* dereferenceable(16), %struct.SkIRect*) local_unnamed_addr #2

declare void @_ZNK14SkSpecialImage4viewEP18GrRecordingContext(%class.GrSurfaceProxyView* sret, %class.SkSpecialImage*, %class.GrRecordingContext*) local_unnamed_addr #2

declare %class.GrFragmentProcessor* @_ZN15GrTextureEffect4MakeE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix12SkFilterMode12SkMipmapMode(%class.GrSurfaceProxyView*, i32, %class.SkMatrix* dereferenceable(40), i32, i32) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() local_unnamed_addr #2

declare %class.GrFragmentProcessor* @_ZN23GrColorSpaceXformEffect4MakeENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEP12SkColorSpace11SkAlphaTypeS7_S8_(%class.GrFragmentProcessor*, %class.SkColorSpace*, i32, %class.SkColorSpace*, i32) local_unnamed_addr #2

declare %class.SkColorSpace* @_ZNK14SkSpecialImage13getColorSpaceEv(%class.SkSpecialImage*) local_unnamed_addr #2

declare void @_ZN18SkImageFilter_Base10DrawWithFPEP18GrRecordingContextNSt3__110unique_ptrI19GrFragmentProcessorNS2_14default_deleteIS4_EEEERK7SkIRect11SkColorTypePK12SkColorSpaceRK14SkSurfaceProps11GrProtected(%class.sk_sp.18* sret, %class.GrRecordingContext*, %class.GrFragmentProcessor*, %struct.SkIRect* dereferenceable(16), i32, %class.SkColorSpace*, %class.SkSurfaceProps* dereferenceable(8), i1 zeroext) local_unnamed_addr #2

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #2

declare zeroext i1 @_ZNK14SkSpecialImage11getROPixelsEP8SkBitmap(%class.SkSpecialImage*, %class.SkBitmap*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare float @sqrtf(float) local_unnamed_addr #9

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #10

declare void @_ZN14SkSpecialImage14MakeFromRasterERK7SkIRectRK8SkBitmapRK14SkSurfaceProps(%class.sk_sp.18* sret, %struct.SkIRect* dereferenceable(16), %class.SkBitmap* dereferenceable(56), %class.SkSurfaceProps* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #4

declare void @_ZNK18SkImageFilter_Base11filterInputILN4skif5UsageE0EEENS1_12FilterResultIXT_EEEiRKNS1_7ContextE(%"class.skif::FilterResult"* sret, %class.SkImageFilter_Base*, i32, %"class.skif::Context"* dereferenceable(136)) local_unnamed_addr #2

declare zeroext i1 @_ZNK14SkSpecialImage15isTextureBackedEv(%class.SkSpecialImage*) local_unnamed_addr #2

declare %class.GrRecordingContext* @_ZNK14SkSpecialImage10getContextEv(%class.SkSpecialImage*) local_unnamed_addr #2

declare i8* @_ZN11GrProcessornwEm(i64) local_unnamed_addr #2

declare void @_ZN19GrFragmentProcessor13registerChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEEN4SkSL11SampleUsageE(%class.GrFragmentProcessor*, %class.GrFragmentProcessor*, i64) local_unnamed_addr #2

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN8SkBitmap14tryAllocPixelsERK11SkImageInfom(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24), i64) local_unnamed_addr #2

declare i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #2

declare zeroext i1 @_ZN18SkImageFilter_Base6Common9unflattenER12SkReadBufferi(%"class.SkImageFilter_Base::Common"*, %class.SkReadBuffer* dereferenceable(136), i32) local_unnamed_addr #2

declare void @_ZN12SkReadBuffer8readRectEP6SkRect(%class.SkReadBuffer*, %struct.SkRect*) local_unnamed_addr #2

declare float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN18SkImageFilter_Base6Common8getInputEi: argument 0"}
!4 = distinct !{!4, !"_ZN18SkImageFilter_Base6Common8getInputEi"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK18SkImageFilter_Base11filterInputEiRKN4skif7ContextEP8SkIPoint: argument 0"}
!7 = distinct !{!7, !"_ZNK18SkImageFilter_Base11filterInputEiRKN4skif7ContextEP8SkIPoint"}
!8 = !{!9, !6}
!9 = distinct !{!9, !10, !"_ZNK4skif12FilterResultILNS_5UsageE0EE14imageAndOffsetEP8SkIPoint: argument 0"}
!10 = distinct !{!10, !"_ZNK4skif12FilterResultILNS_5UsageE0EE14imageAndOffsetEP8SkIPoint"}
!11 = !{i8 0, i8 2}
!12 = !{!13, !15}
!13 = distinct !{!13, !14, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!14 = distinct !{!14, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!15 = distinct !{!15, !16, !"_ZN11SkImageInfo13MakeN32PremulEii5sk_spI12SkColorSpaceE: argument 0"}
!16 = distinct !{!16, !"_ZN11SkImageInfo13MakeN32PremulEii5sk_spI12SkColorSpaceE"}
