; ModuleID = '../../third_party/webrtc/modules/audio_coding/codecs/isac/main/source/arith_routines_hist.c'
source_filename = "../../third_party/webrtc/modules/audio_coding/codecs/isac/main/source/arith_routines_hist.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.Bitstreamstruct = type { [600 x i8], i32, i32, i32 }

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @WebRtcIsac_EncHistMulti(%struct.Bitstreamstruct*, i32* nocapture readonly, i16** nocapture readonly, i32) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.Bitstreamstruct, %struct.Bitstreamstruct* %0, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %struct.Bitstreamstruct, %struct.Bitstreamstruct* %0, i64 0, i32 0, i64 %7
  %9 = getelementptr inbounds %struct.Bitstreamstruct, %struct.Bitstreamstruct* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %3, 0
  br i1 %11, label %12, label %73

12:                                               ; preds = %4
  %13 = getelementptr inbounds %struct.Bitstreamstruct, %struct.Bitstreamstruct* %0, i64 0, i32 2
  br label %14

14:                                               ; preds = %12, %68
  %15 = phi i32 [ %3, %12 ], [ %71, %68 ]
  %16 = phi i8* [ %8, %12 ], [ %70, %68 ]
  %17 = phi i32 [ %10, %12 ], [ %69, %68 ]
  %18 = phi i32* [ %1, %12 ], [ %27, %68 ]
  %19 = phi i16** [ %2, %12 ], [ %26, %68 ]
  %20 = load i16*, i16** %19, align 8
  %21 = load i32, i32* %18, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds i16, i16* %20, i64 %22
  %24 = load i16, i16* %23, align 2
  %25 = zext i16 %24 to i32
  %26 = getelementptr inbounds i16*, i16** %19, i64 1
  %27 = getelementptr inbounds i32, i32* %18, i64 1
  %28 = getelementptr inbounds i16, i16* %23, i64 1
  %29 = load i16, i16* %28, align 2
  %30 = zext i16 %29 to i32
  %31 = and i32 %17, 65535
  %32 = lshr i32 %17, 16
  %33 = mul nuw i32 %32, %25
  %34 = mul nuw i32 %31, %25
  %35 = lshr i32 %34, 16
  %36 = add nuw i32 %35, %33
  %37 = mul nuw i32 %32, %30
  %38 = mul nuw i32 %31, %30
  %39 = lshr i32 %38, 16
  %40 = add nuw i32 %39, %37
  %41 = add nuw i32 %36, 1
  %42 = xor i32 %36, -1
  %43 = add i32 %40, %42
  %44 = load i32, i32* %13, align 4
  %45 = add i32 %41, %44
  store i32 %45, i32* %13, align 4
  %46 = icmp ugt i32 %45, %36
  br i1 %46, label %53, label %47

47:                                               ; preds = %14, %47
  %48 = phi i8* [ %49, %47 ], [ %16, %14 ]
  %49 = getelementptr inbounds i8, i8* %48, i64 -1
  %50 = load i8, i8* %49, align 1
  %51 = add i8 %50, 1
  store i8 %51, i8* %49, align 1
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %47, label %53

53:                                               ; preds = %47, %14
  %54 = icmp ult i32 %43, 16777216
  br i1 %54, label %55, label %68

55:                                               ; preds = %53
  %56 = load i32, i32* %13, align 4
  br label %57

57:                                               ; preds = %55, %57
  %58 = phi i32 [ %66, %57 ], [ %56, %55 ]
  %59 = phi i8* [ %64, %57 ], [ %16, %55 ]
  %60 = phi i32 [ %61, %57 ], [ %43, %55 ]
  %61 = shl i32 %60, 8
  %62 = lshr i32 %58, 24
  %63 = trunc i32 %62 to i8
  %64 = getelementptr inbounds i8, i8* %59, i64 1
  store i8 %63, i8* %59, align 1
  %65 = load i32, i32* %13, align 4
  %66 = shl i32 %65, 8
  store i32 %66, i32* %13, align 4
  %67 = icmp ult i32 %61, 16777216
  br i1 %67, label %57, label %68

68:                                               ; preds = %57, %53
  %69 = phi i32 [ %43, %53 ], [ %61, %57 ]
  %70 = phi i8* [ %16, %53 ], [ %64, %57 ]
  %71 = add nsw i32 %15, -1
  %72 = icmp sgt i32 %71, 0
  br i1 %72, label %14, label %73

73:                                               ; preds = %68, %4
  %74 = phi i32 [ %10, %4 ], [ %69, %68 ]
  %75 = phi i8* [ %8, %4 ], [ %70, %68 ]
  %76 = ptrtoint i8* %75 to i64
  %77 = ptrtoint %struct.Bitstreamstruct* %0 to i64
  %78 = sub i64 %76, %77
  %79 = trunc i64 %78 to i32
  store i32 %79, i32* %5, align 4
  store i32 %74, i32* %9, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @WebRtcIsac_DecHistBisectMulti(i32* nocapture, %struct.Bitstreamstruct*, i16** nocapture readonly, i16* nocapture readonly, i32) local_unnamed_addr #0 {
  %6 = getelementptr inbounds %struct.Bitstreamstruct, %struct.Bitstreamstruct* %1, i64 0, i32 3
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %struct.Bitstreamstruct, %struct.Bitstreamstruct* %1, i64 0, i32 0, i64 %8
  %10 = getelementptr inbounds %struct.Bitstreamstruct, %struct.Bitstreamstruct* %1, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %143, label %13

13:                                               ; preds = %5
  %14 = icmp eq i32 %7, 0
  br i1 %14, label %15, label %33

15:                                               ; preds = %13
  %16 = load i8, i8* %9, align 1
  %17 = zext i8 %16 to i32
  %18 = shl nuw i32 %17, 24
  %19 = getelementptr inbounds i8, i8* %9, i64 1
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = shl nuw nsw i32 %21, 16
  %23 = or i32 %22, %18
  %24 = getelementptr inbounds i8, i8* %9, i64 2
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = shl nuw nsw i32 %26, 8
  %28 = or i32 %23, %27
  %29 = getelementptr inbounds i8, i8* %9, i64 3
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  %32 = or i32 %28, %31
  br label %36

33:                                               ; preds = %13
  %34 = getelementptr inbounds %struct.Bitstreamstruct, %struct.Bitstreamstruct* %1, i64 0, i32 2
  %35 = load i32, i32* %34, align 4
  br label %36

36:                                               ; preds = %33, %15
  %37 = phi i32 [ %32, %15 ], [ %35, %33 ]
  %38 = phi i8* [ %29, %15 ], [ %9, %33 ]
  %39 = icmp sgt i32 %4, 0
  br i1 %39, label %40, label %129

40:                                               ; preds = %36, %123
  %41 = phi i32 [ %127, %123 ], [ %4, %36 ]
  %42 = phi i8* [ %126, %123 ], [ %38, %36 ]
  %43 = phi i32 [ %125, %123 ], [ %37, %36 ]
  %44 = phi i32 [ %124, %123 ], [ %11, %36 ]
  %45 = phi i32 [ %108, %123 ], [ 0, %36 ]
  %46 = phi i16* [ %51, %123 ], [ %3, %36 ]
  %47 = phi i16** [ %107, %123 ], [ %2, %36 ]
  %48 = phi i32* [ %106, %123 ], [ %0, %36 ]
  %49 = and i32 %44, 65535
  %50 = lshr i32 %44, 16
  %51 = getelementptr inbounds i16, i16* %46, i64 1
  %52 = load i16, i16* %46, align 2
  %53 = lshr i16 %52, 1
  %54 = zext i16 %53 to i32
  %55 = load i16*, i16** %47, align 8
  %56 = add nsw i32 %54, -1
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i16, i16* %55, i64 %57
  %59 = load i16, i16* %58, align 2
  %60 = zext i16 %59 to i32
  %61 = mul nuw i32 %50, %60
  %62 = mul nuw i32 %49, %60
  %63 = lshr i32 %62, 16
  %64 = add nuw i32 %63, %61
  %65 = lshr i32 %54, 1
  %66 = icmp eq i32 %65, 0
  %67 = icmp ugt i32 %43, %64
  %68 = ptrtoint i16* %55 to i64
  br i1 %66, label %91, label %69

69:                                               ; preds = %40, %69
  %70 = phi i1 [ %90, %69 ], [ %67, %40 ]
  %71 = phi i32 [ %88, %69 ], [ %65, %40 ]
  %72 = phi i32 [ %87, %69 ], [ %64, %40 ]
  %73 = phi i16* [ %81, %69 ], [ %58, %40 ]
  %74 = phi i32 [ %78, %69 ], [ %44, %40 ]
  %75 = phi i32 [ %77, %69 ], [ %45, %40 ]
  %76 = sub nsw i32 0, %71
  %77 = select i1 %70, i32 %72, i32 %75
  %78 = select i1 %70, i32 %74, i32 %72
  %79 = select i1 %70, i32 %71, i32 %76
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds i16, i16* %73, i64 %80
  %82 = load i16, i16* %81, align 2
  %83 = zext i16 %82 to i32
  %84 = mul nuw i32 %50, %83
  %85 = mul nuw i32 %49, %83
  %86 = lshr i32 %85, 16
  %87 = add i32 %86, %84
  %88 = ashr i32 %71, 1
  %89 = icmp eq i32 %88, 0
  %90 = icmp ugt i32 %43, %87
  br i1 %89, label %91, label %69

91:                                               ; preds = %69, %40
  %92 = phi i32 [ %45, %40 ], [ %77, %69 ]
  %93 = phi i32 [ %44, %40 ], [ %78, %69 ]
  %94 = phi i16* [ %58, %40 ], [ %81, %69 ]
  %95 = phi i32 [ %64, %40 ], [ %87, %69 ]
  %96 = phi i1 [ %67, %40 ], [ %90, %69 ]
  %97 = ptrtoint i16* %94 to i64
  %98 = sub i64 %97, %68
  %99 = lshr exact i64 %98, 1
  %100 = trunc i64 %99 to i32
  %101 = xor i1 %96, true
  %102 = zext i1 %101 to i32
  %103 = sub i32 %100, %102
  %104 = select i1 %96, i32 %95, i32 %92
  %105 = select i1 %96, i32 %93, i32 %95
  %106 = getelementptr inbounds i32, i32* %48, i64 1
  %107 = getelementptr inbounds i16*, i16** %47, i64 1
  store i32 %103, i32* %48, align 4
  %108 = add i32 %104, 1
  %109 = sub i32 %105, %108
  %110 = sub i32 %43, %108
  %111 = icmp ult i32 %109, 16777216
  br i1 %111, label %112, label %123

112:                                              ; preds = %91, %112
  %113 = phi i8* [ %117, %112 ], [ %42, %91 ]
  %114 = phi i32 [ %120, %112 ], [ %110, %91 ]
  %115 = phi i32 [ %121, %112 ], [ %109, %91 ]
  %116 = shl i32 %114, 8
  %117 = getelementptr inbounds i8, i8* %113, i64 1
  %118 = load i8, i8* %117, align 1
  %119 = zext i8 %118 to i32
  %120 = or i32 %116, %119
  %121 = shl i32 %115, 8
  %122 = icmp ult i32 %121, 16777216
  br i1 %122, label %112, label %123

123:                                              ; preds = %112, %91
  %124 = phi i32 [ %109, %91 ], [ %121, %112 ]
  %125 = phi i32 [ %110, %91 ], [ %120, %112 ]
  %126 = phi i8* [ %42, %91 ], [ %117, %112 ]
  %127 = add nsw i32 %41, -1
  %128 = icmp sgt i32 %127, 0
  br i1 %128, label %40, label %129

129:                                              ; preds = %123, %36
  %130 = phi i32 [ %11, %36 ], [ %124, %123 ]
  %131 = phi i32 [ %37, %36 ], [ %125, %123 ]
  %132 = phi i8* [ %38, %36 ], [ %126, %123 ]
  %133 = ptrtoint i8* %132 to i64
  %134 = ptrtoint %struct.Bitstreamstruct* %1 to i64
  %135 = sub i64 %133, %134
  %136 = trunc i64 %135 to i32
  store i32 %136, i32* %6, align 4
  store i32 %130, i32* %10, align 4
  %137 = getelementptr inbounds %struct.Bitstreamstruct, %struct.Bitstreamstruct* %1, i64 0, i32 2
  store i32 %131, i32* %137, align 4
  %138 = icmp ugt i32 %130, 33554431
  br i1 %138, label %139, label %141

139:                                              ; preds = %129
  %140 = add i32 %136, -2
  br label %143

141:                                              ; preds = %129
  %142 = add i32 %136, -1
  br label %143

143:                                              ; preds = %5, %141, %139
  %144 = phi i32 [ %140, %139 ], [ %142, %141 ], [ -2, %5 ]
  ret i32 %144
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @WebRtcIsac_DecHistOneStepMulti(i32* nocapture, %struct.Bitstreamstruct*, i16** nocapture readonly, i16* nocapture readonly, i32) local_unnamed_addr #0 {
  %6 = getelementptr inbounds %struct.Bitstreamstruct, %struct.Bitstreamstruct* %1, i64 0, i32 3
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %struct.Bitstreamstruct, %struct.Bitstreamstruct* %1, i64 0, i32 0, i64 %8
  %10 = getelementptr inbounds %struct.Bitstreamstruct, %struct.Bitstreamstruct* %1, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %141, label %13

13:                                               ; preds = %5
  %14 = icmp eq i32 %7, 0
  br i1 %14, label %15, label %33

15:                                               ; preds = %13
  %16 = load i8, i8* %9, align 1
  %17 = zext i8 %16 to i32
  %18 = shl nuw i32 %17, 24
  %19 = getelementptr inbounds i8, i8* %9, i64 1
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = shl nuw nsw i32 %21, 16
  %23 = or i32 %22, %18
  %24 = getelementptr inbounds i8, i8* %9, i64 2
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = shl nuw nsw i32 %26, 8
  %28 = or i32 %23, %27
  %29 = getelementptr inbounds i8, i8* %9, i64 3
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  %32 = or i32 %28, %31
  br label %36

33:                                               ; preds = %13
  %34 = getelementptr inbounds %struct.Bitstreamstruct, %struct.Bitstreamstruct* %1, i64 0, i32 2
  %35 = load i32, i32* %34, align 4
  br label %36

36:                                               ; preds = %33, %15
  %37 = phi i32 [ %32, %15 ], [ %35, %33 ]
  %38 = phi i8* [ %29, %15 ], [ %9, %33 ]
  %39 = icmp sgt i32 %4, 0
  br i1 %39, label %40, label %127

40:                                               ; preds = %36, %121
  %41 = phi i32 [ %125, %121 ], [ %4, %36 ]
  %42 = phi i8* [ %124, %121 ], [ %38, %36 ]
  %43 = phi i32 [ %123, %121 ], [ %37, %36 ]
  %44 = phi i32 [ %122, %121 ], [ %11, %36 ]
  %45 = phi i16* [ %51, %121 ], [ %3, %36 ]
  %46 = phi i16** [ %104, %121 ], [ %2, %36 ]
  %47 = phi i32* [ %103, %121 ], [ %0, %36 ]
  %48 = and i32 %44, 65535
  %49 = lshr i32 %44, 16
  %50 = load i16*, i16** %46, align 8
  %51 = getelementptr inbounds i16, i16* %45, i64 1
  %52 = load i16, i16* %45, align 2
  %53 = zext i16 %52 to i64
  %54 = getelementptr inbounds i16, i16* %50, i64 %53
  %55 = load i16, i16* %54, align 2
  %56 = zext i16 %55 to i32
  %57 = mul nuw i32 %49, %56
  %58 = mul nuw i32 %48, %56
  %59 = lshr i32 %58, 16
  %60 = add nuw i32 %59, %57
  %61 = icmp ugt i32 %43, %60
  %62 = ptrtoint i16* %50 to i64
  br i1 %61, label %63, label %82

63:                                               ; preds = %40, %68
  %64 = phi i16 [ %70, %68 ], [ %55, %40 ]
  %65 = phi i32 [ %75, %68 ], [ %60, %40 ]
  %66 = phi i16* [ %69, %68 ], [ %54, %40 ]
  %67 = icmp eq i16 %64, -1
  br i1 %67, label %141, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds i16, i16* %66, i64 1
  %70 = load i16, i16* %69, align 2
  %71 = zext i16 %70 to i32
  %72 = mul nuw i32 %49, %71
  %73 = mul nuw i32 %48, %71
  %74 = lshr i32 %73, 16
  %75 = add i32 %74, %72
  %76 = icmp ugt i32 %43, %75
  br i1 %76, label %63, label %77

77:                                               ; preds = %68
  %78 = ptrtoint i16* %69 to i64
  %79 = sub i64 %78, %62
  %80 = ashr exact i64 %79, 1
  %81 = add nsw i64 %80, -1
  br label %99

82:                                               ; preds = %40, %87
  %83 = phi i32 [ %93, %87 ], [ %60, %40 ]
  %84 = phi i16* [ %85, %87 ], [ %54, %40 ]
  %85 = getelementptr inbounds i16, i16* %84, i64 -1
  %86 = icmp ult i16* %85, %50
  br i1 %86, label %141, label %87

87:                                               ; preds = %82
  %88 = load i16, i16* %85, align 2
  %89 = zext i16 %88 to i32
  %90 = mul nuw i32 %49, %89
  %91 = mul nuw i32 %48, %89
  %92 = lshr i32 %91, 16
  %93 = add i32 %92, %90
  %94 = icmp ugt i32 %43, %93
  br i1 %94, label %95, label %82

95:                                               ; preds = %87
  %96 = ptrtoint i16* %85 to i64
  %97 = sub i64 %96, %62
  %98 = lshr exact i64 %97, 1
  br label %99

99:                                               ; preds = %95, %77
  %100 = phi i64 [ %98, %95 ], [ %81, %77 ]
  %101 = phi i32 [ %93, %95 ], [ %65, %77 ]
  %102 = phi i32 [ %83, %95 ], [ %75, %77 ]
  %103 = getelementptr inbounds i32, i32* %47, i64 1
  %104 = getelementptr inbounds i16*, i16** %46, i64 1
  %105 = trunc i64 %100 to i32
  store i32 %105, i32* %47, align 4
  %106 = add nuw i32 %101, 1
  %107 = sub i32 %102, %106
  %108 = sub i32 %43, %106
  %109 = icmp ult i32 %107, 16777216
  br i1 %109, label %110, label %121

110:                                              ; preds = %99, %110
  %111 = phi i8* [ %115, %110 ], [ %42, %99 ]
  %112 = phi i32 [ %118, %110 ], [ %108, %99 ]
  %113 = phi i32 [ %119, %110 ], [ %107, %99 ]
  %114 = shl i32 %112, 8
  %115 = getelementptr inbounds i8, i8* %111, i64 1
  %116 = load i8, i8* %115, align 1
  %117 = zext i8 %116 to i32
  %118 = or i32 %114, %117
  %119 = shl i32 %113, 8
  %120 = icmp ult i32 %119, 16777216
  br i1 %120, label %110, label %121

121:                                              ; preds = %110, %99
  %122 = phi i32 [ %107, %99 ], [ %119, %110 ]
  %123 = phi i32 [ %108, %99 ], [ %118, %110 ]
  %124 = phi i8* [ %42, %99 ], [ %115, %110 ]
  %125 = add nsw i32 %41, -1
  %126 = icmp sgt i32 %125, 0
  br i1 %126, label %40, label %127

127:                                              ; preds = %121, %36
  %128 = phi i32 [ %11, %36 ], [ %122, %121 ]
  %129 = phi i32 [ %37, %36 ], [ %123, %121 ]
  %130 = phi i8* [ %38, %36 ], [ %124, %121 ]
  %131 = ptrtoint i8* %130 to i64
  %132 = ptrtoint %struct.Bitstreamstruct* %1 to i64
  %133 = sub i64 %131, %132
  %134 = trunc i64 %133 to i32
  store i32 %134, i32* %6, align 4
  store i32 %128, i32* %10, align 4
  %135 = getelementptr inbounds %struct.Bitstreamstruct, %struct.Bitstreamstruct* %1, i64 0, i32 2
  store i32 %129, i32* %135, align 4
  %136 = icmp ugt i32 %128, 33554431
  br i1 %136, label %137, label %139

137:                                              ; preds = %127
  %138 = add i32 %134, -2
  br label %141

139:                                              ; preds = %127
  %140 = add i32 %134, -1
  br label %141

141:                                              ; preds = %82, %63, %5, %139, %137
  %142 = phi i32 [ %138, %137 ], [ %140, %139 ], [ -2, %5 ], [ -3, %63 ], [ -3, %82 ]
  ret i32 %142
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
