; ModuleID = '../../third_party/blink/common/frame/user_activation_state.cc'
source_filename = "../../third_party/blink/common/frame/user_activation_state.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }

@.str = private unnamed_addr constant [38 x i8] c"Event.UserActivation.TriggerForSticky\00", align 1
@.str.1 = private unnamed_addr constant [41 x i8] c"Event.UserActivation.TriggerForTransient\00", align 1
@.str.2 = private unnamed_addr constant [41 x i8] c"Event.UserActivation.TriggerForConsuming\00", align 1

@_ZN5blink19UserActivationStateC1Ev = hidden unnamed_addr alias void (%"class.blink::UserActivationState"*), void (%"class.blink::UserActivationState"*)* @_ZN5blink19UserActivationStateC2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink19UserActivationStateC2Ev(%"class.blink::UserActivationState"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::UserActivationState", %"class.blink::UserActivationState"* %0, i64 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"class.blink::UserActivationState", %"class.blink::UserActivationState"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast i64* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19UserActivationState8ActivateENS_5mojom30UserActivationNotificationTypeE(%"class.blink::UserActivationState"* nocapture, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::UserActivationState", %"class.blink::UserActivationState"* %0, i64 0, i32 0
  store i8 1, i8* %3, align 8
  %4 = tail call i64 @_ZN4base9TimeTicks3NowEv() #6
  %5 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %4, i64 5000000) #6
  %6 = extractvalue { i64, i1 } %5, 1
  %7 = extractvalue { i64, i1 } %5, 0
  %8 = select i1 %6, i64 9223372036854775807, i64 %7, !prof !2
  %9 = getelementptr inbounds %"class.blink::UserActivationState", %"class.blink::UserActivationState"* %0, i64 0, i32 1, i32 0, i32 0
  store i64 %8, i64* %9, align 8
  %10 = getelementptr inbounds %"class.blink::UserActivationState", %"class.blink::UserActivationState"* %0, i64 0, i32 3
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  store i32 %1, i32* %10, align 8
  br label %14

14:                                               ; preds = %13, %2
  %15 = getelementptr inbounds %"class.blink::UserActivationState", %"class.blink::UserActivationState"* %0, i64 0, i32 4
  store i32 %1, i32* %15, align 4
  %16 = icmp eq i32 %1, 1
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.blink::UserActivationState", %"class.blink::UserActivationState"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 %8, i64* %18, align 8
  br label %19

19:                                               ; preds = %17, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19UserActivationState22ActivateTransientStateEv(%"class.blink::UserActivationState"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = tail call i64 @_ZN4base9TimeTicks3NowEv() #6
  %3 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %2, i64 5000000) #6
  %4 = extractvalue { i64, i1 } %3, 1
  %5 = extractvalue { i64, i1 } %3, 0
  %6 = select i1 %4, i64 9223372036854775807, i64 %5, !prof !2
  %7 = getelementptr inbounds %"class.blink::UserActivationState", %"class.blink::UserActivationState"* %0, i64 0, i32 1, i32 0, i32 0
  store i64 %6, i64* %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19UserActivationState5ClearEv(%"class.blink::UserActivationState"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::UserActivationState", %"class.blink::UserActivationState"* %0, i64 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"class.blink::UserActivationState", %"class.blink::UserActivationState"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast i64* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable writeonly
define hidden void @_ZN5blink19UserActivationState24DeactivateTransientStateEv(%"class.blink::UserActivationState"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::UserActivationState", %"class.blink::UserActivationState"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = bitcast i64* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink19UserActivationState13HasBeenActiveEv(%"class.blink::UserActivationState"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::UserActivationState", %"class.blink::UserActivationState"* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !3
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::UserActivationState", %"class.blink::UserActivationState"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  tail call void @_ZN4base23UmaHistogramExactLinearEPKcii(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str, i64 0, i64 0), i32 %7, i32 16) #6
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i1 [ true, %5 ], [ false, %1 ]
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink19UserActivationState8IsActiveEv(%"class.blink::UserActivationState"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = tail call i64 @_ZN4base9TimeTicks3NowEv() #6
  %3 = getelementptr inbounds %"class.blink::UserActivationState", %"class.blink::UserActivationState"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp sgt i64 %2, %4
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = tail call i64 @_ZN4base9TimeTicks3NowEv() #6
  %8 = getelementptr inbounds %"class.blink::UserActivationState", %"class.blink::UserActivationState"* %0, i64 0, i32 2, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp sgt i64 %7, %9
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::UserActivationState", %"class.blink::UserActivationState"* %0, i64 0, i32 4
  %13 = load i32, i32* %12, align 4
  br label %14

14:                                               ; preds = %6, %11
  %15 = phi i32 [ %13, %11 ], [ 1, %6 ]
  tail call void @_ZN4base23UmaHistogramExactLinearEPKcii(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1, i64 0, i64 0), i32 %15, i32 16) #6
  br label %16

16:                                               ; preds = %1, %14
  %17 = phi i1 [ true, %14 ], [ false, %1 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink19UserActivationState16IsActiveInternalEv(%"class.blink::UserActivationState"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = tail call i64 @_ZN4base9TimeTicks3NowEv() #6
  %3 = getelementptr inbounds %"class.blink::UserActivationState", %"class.blink::UserActivationState"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp sle i64 %2, %4
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink19UserActivationState25EffectiveNotificationTypeEv(%"class.blink::UserActivationState"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = tail call i64 @_ZN4base9TimeTicks3NowEv() #6
  %3 = getelementptr inbounds %"class.blink::UserActivationState", %"class.blink::UserActivationState"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp sgt i64 %2, %4
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::UserActivationState", %"class.blink::UserActivationState"* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 4
  br label %9

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ 1, %1 ]
  ret i32 %10
}

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink19UserActivationState15ConsumeIfActiveEv(%"class.blink::UserActivationState"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = tail call i64 @_ZN4base9TimeTicks3NowEv() #6
  %3 = getelementptr inbounds %"class.blink::UserActivationState", %"class.blink::UserActivationState"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp sgt i64 %2, %4
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast i64* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #6
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i1 [ true, %6 ], [ false, %1 ]
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink19UserActivationState23RecordPreconsumptionUmaEv(%"class.blink::UserActivationState"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = tail call i64 @_ZN4base9TimeTicks3NowEv() #6
  %3 = getelementptr inbounds %"class.blink::UserActivationState", %"class.blink::UserActivationState"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp sgt i64 %2, %4
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = tail call i64 @_ZN4base9TimeTicks3NowEv() #6
  %8 = getelementptr inbounds %"class.blink::UserActivationState", %"class.blink::UserActivationState"* %0, i64 0, i32 2, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp sgt i64 %7, %9
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::UserActivationState", %"class.blink::UserActivationState"* %0, i64 0, i32 4
  %13 = load i32, i32* %12, align 4
  br label %14

14:                                               ; preds = %6, %11
  %15 = phi i32 [ %13, %11 ], [ 1, %6 ]
  tail call void @_ZN4base23UmaHistogramExactLinearEPKcii(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.2, i64 0, i64 0), i32 %15, i32 16) #6
  br label %16

16:                                               ; preds = %1, %14
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #4

declare void @_ZN4base23UmaHistogramExactLinearEPKcii(i8*, i32, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
