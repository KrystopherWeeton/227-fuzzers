; ModuleID = '../../chrome/browser/apps/app_service/app_icon_factory.cc'
source_filename = "../../chrome/browser/apps/app_service/app_icon_factory.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::nothrow_t" = type { i8 }
%"class.base::TaskTraits" = type { %"struct.base::TaskTraitsExtensionStorage", i8, i8, i8, i8, i8, i8 }
%"struct.base::TaskTraitsExtensionStorage" = type { i8, %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [8 x i8] }
%"class.base::NoDestructor" = type { [24 x i8] }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::OnceCallback.1" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.gfx::ImageSkia" = type { %class.scoped_refptr.3 }
%class.scoped_refptr.3 = type { %"class.gfx::internal::ImageSkiaStorage"* }
%"class.gfx::internal::ImageSkiaStorage" = type opaque
%"class.base::ScopedBlockingCall" = type { %"class.base::internal::UncheckedScopedBlockingCall" }
%"class.base::internal::UncheckedScopedBlockingCall" = type { %"class.base::internal::BlockingObserver"*, %"class.base::internal::UncheckedScopedBlockingCall"*, i8, [7 x i8], %"class.base::debug::ScopedActivity", %"class.absl::optional" }
%"class.base::internal::BlockingObserver" = type { i32 (...)** }
%"class.base::debug::ScopedActivity" = type <{ %"class.base::debug::GlobalActivityTracker::ScopedThreadActivity", i32, [4 x i8] }>
%"class.base::debug::GlobalActivityTracker::ScopedThreadActivity" = type { %"class.base::debug::ThreadActivityTracker::ScopedActivity.base", %"class.std::__1::unique_ptr" }
%"class.base::debug::ThreadActivityTracker::ScopedActivity.base" = type <{ %"class.base::debug::ThreadActivityTracker"*, i32 }>
%"class.base::debug::ThreadActivityTracker" = type <{ i32 (...)**, %"struct.base::debug::ThreadActivityTracker::Header"*, %"struct.base::debug::Activity"*, i32, i8, [3 x i8] }>
%"struct.base::debug::ThreadActivityTracker::Header" = type opaque
%"struct.base::debug::Activity" = type { i64, i64, i64, [10 x i64], i32, i32, i8, [7 x i8], %"union.base::debug::ActivityData" }
%"union.base::debug::ActivityData" = type { %struct.anon.4 }
%struct.anon.4 = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.base::debug::ActivityUserData"* }
%"class.base::debug::ActivityUserData" = type { i32 (...)**, %"class.std::__1::map", i8*, i64, %"struct.base::debug::ActivityUserData::MemoryHeader"*, i32, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.12", %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { i64 }
%"struct.base::debug::ActivityUserData::MemoryHeader" = type { %"struct.base::debug::OwningProcess" }
%"struct.base::debug::OwningProcess" = type { %"struct.std::__1::atomic.20", i32, i64, i64 }
%"struct.std::__1::atomic.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__cxx_atomic_impl.23" }
%"struct.std::__1::__cxx_atomic_impl.23" = type { %"struct.std::__1::__cxx_atomic_base_impl.24" }
%"struct.std::__1::__cxx_atomic_base_impl.24" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::internal::IOJankMonitoringWindow::ScopedMonitoredCall" }
%"class.base::internal::IOJankMonitoringWindow::ScopedMonitoredCall" = type { %"class.base::TimeTicks", %class.scoped_refptr.26 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%class.scoped_refptr.26 = type { %"class.base::internal::IOJankMonitoringWindow"* }
%"class.base::internal::IOJankMonitoringWindow" = type <{ %"class.base::RefCountedThreadSafe.27", [4 x i8], %"class.base::Lock", [60 x i64], %"class.base::TimeTicks", %class.scoped_refptr.26, i8, [7 x i8] }>
%"class.base::RefCountedThreadSafe.27" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.gfx::ImageSkiaRep" = type <{ %"class.cc::PaintImage", %class.sk_sp.34, i32, %"class.gfx::Size", [4 x i8], %class.SkBitmap, float, [4 x i8] }>
%"class.cc::PaintImage" = type { %class.sk_sp, %class.sk_sp.34, %"class.gfx::Rect", i32, %class.sk_sp.39, %class.sk_sp.40, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp, %class.scoped_refptr.41 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp.39 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type opaque
%class.sk_sp.40 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.sk_sp = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.28, i32, i32 }
%class.sk_sp.28 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.29" }
%"struct.std::__1::atomic.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__atomic_base.31" }
%"struct.std::__1::__atomic_base.31" = type { %"struct.std::__1::__cxx_atomic_impl.32" }
%"struct.std::__1::__cxx_atomic_impl.32" = type { %"struct.std::__1::__cxx_atomic_base_impl.33" }
%"struct.std::__1::__cxx_atomic_base_impl.33" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.scoped_refptr.41 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type opaque
%class.sk_sp.34 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.35", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { i8* }
%"class.gfx::Size" = type { i32, i32 }
%class.SkBitmap = type { %class.sk_sp.42, %class.SkPixmap, %class.sk_sp.43 }
%class.sk_sp.42 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.sk_sp.43 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.44" }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.apps::mojom::IconValue"* }
%"class.apps::mojom::IconValue" = type <{ i32, [4 x i8], %"class.gfx::ImageSkia", %"class.absl::optional.47", i8, [7 x i8] }>
%"class.absl::optional.47" = type { %"class.absl::optional_internal::optional_data.48" }
%"class.absl::optional_internal::optional_data.48" = type { %"class.absl::optional_internal::optional_data_base.49" }
%"class.absl::optional_internal::optional_data_base.49" = type { %"class.absl::optional_internal::optional_data_dtor_base.50" }
%"class.absl::optional_internal::optional_data_dtor_base.50" = type { i8, %union.anon.51 }
%union.anon.51 = type { %"class.std::__1::vector" }
%"class.base::OnceCallback.59" = type { %"class.base::internal::CallbackBase" }
%"class.base::RepeatingCallback.355" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.60 = type { %"class.(anonymous namespace)::IconLoadingPipeline"* }
%"class.(anonymous namespace)::IconLoadingPipeline" = type { %"class.base::RefCounted", i32, i32, i32, float, float, i8, i32, %class.GURL, %class.Profile*, i32, %"class.base::OnceCallback.59", %"class.base::OnceCallback.112", %"class.base::CancelableTaskTracker", %class.scoped_refptr.128, %"class.gfx::ImageSkia", %"class.gfx::ImageSkia", i8, i8, %"class.base::OnceCallback.130", %"class.std::__1::vector.131", i64, %"class.base::OnceCallback.138" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.68" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.63 }
%union.anon.63 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %class.GURL* }
%class.Profile = type { %"class.content::BrowserContext", %"class.std::__1::unique_ptr.91", i8, i8, i32, %"class.base::ObserverList", %"class.std::__1::unique_ptr.106" }
%"class.content::BrowserContext" = type { %"class.base::SupportsUserData.base", %"class.std::__1::unique_ptr.85" }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map.74", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map.74" = type { %"class.std::__1::__tree.75" }
%"class.std::__1::__tree.75" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.76", %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.content::BrowserContext::Impl"* }
%"class.content::BrowserContext::Impl" = type opaque
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.content::ResourceContext"* }
%"class.content::ResourceContext" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.97", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.97" = type { %"class.std::__1::__vector_base.98" }
%"class.std::__1::__vector_base.98" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.101" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.99 }
%class.scoped_refptr.99 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.100", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.100" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.29" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.variations::VariationsClient"* }
%"class.variations::VariationsClient" = type opaque
%"class.base::OnceCallback.112" = type { %"class.base::internal::CallbackBase" }
%"class.base::CancelableTaskTracker" = type { %"class.base::small_map", i64, %"class.base::SequenceCheckerDoNothing", %"class.base::WeakPtr.126", %"class.base::WeakPtrFactory" }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.113 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.113 = type { [4 x %"struct.std::__1::pair"] }
%"struct.std::__1::pair" = type { i64, %class.scoped_refptr.114 }
%class.scoped_refptr.114 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%"class.base::WeakPtr.126" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.127 }
%class.scoped_refptr.127 = type { %"class.base::internal::WeakReference::Flag"* }
%class.scoped_refptr.128 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.129" }>
%"class.base::RefCountedThreadSafe.129" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::OnceCallback.130" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::vector.131" = type { %"class.std::__1::__vector_base.132" }
%"class.std::__1::__vector_base.132" = type { %"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"*, %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.gfx::ImageSkia"* }
%"class.base::OnceCallback.138" = type { %"class.base::internal::CallbackBase" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.129", [4 x i8] }>
%"class.base::OnceCallback.296" = type { %"class.base::internal::CallbackBase" }
%"class.extensions::ExtensionResource" = type { %"class.std::__1::basic_string", %"class.base::FilePath", %"class.base::FilePath", i8, %"class.base::FilePath" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.base::OnceCallback.479" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.357" = type { %"class.base::internal::CallbackBase" }
%"class.extensions::ExtensionRegistry" = type { %class.KeyedService, %"class.extensions::ExtensionSet", %"class.extensions::ExtensionSet", %"class.extensions::ExtensionSet", %"class.extensions::ExtensionSet", %"class.extensions::ExtensionSet", %"class.extensions::ExtensionSet", %"class.base::ObserverList.230", %"class.content::BrowserContext"* }
%class.KeyedService = type { i32 (...)** }
%"class.extensions::ExtensionSet" = type { %"class.std::__1::map.221" }
%"class.std::__1::map.221" = type { %"class.std::__1::__tree.222" }
%"class.std::__1::__tree.222" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.223", %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.base::ObserverList.230" = type <{ %"class.std::__1::vector.231", %"class.base::LinkedList.238", i64, i32, [4 x i8] }>
%"class.std::__1::vector.231" = type { %"class.std::__1::__vector_base.232" }
%"class.std::__1::__vector_base.232" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.233" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList.238" = type { %"class.base::LinkNode.239" }
%"class.base::LinkNode.239" = type { %"class.base::internal::LinkNodeBase" }
%"class.extensions::Extension" = type { %"class.base::RefCountedThreadSafe.139", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, %"class.base::FilePath", %"class.extensions::URLPatternSet", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.155", %"class.std::__1::vector.161", %class.GURL, %"class.base::Version", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.175", %"class.std::__1::map.210", i8, %"class.base::ThreadChecker", i8, i8, i8, i32, %"class.base::GUID" }
%"class.base::RefCountedThreadSafe.139" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.extensions::URLPatternSet" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.140" }
%"class.std::__1::__tree.140" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.141", %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.extensions::PermissionsParser"* }
%"class.extensions::PermissionsParser" = type opaque
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.extensions::PermissionsData"* }
%"class.extensions::PermissionsData" = type opaque
%"class.std::__1::vector.161" = type { %"class.std::__1::__vector_base.162" }
%"class.std::__1::__vector_base.162" = type { %"struct.extensions::InstallWarning"*, %"struct.extensions::InstallWarning"*, %"class.std::__1::__compressed_pair.163" }
%"struct.extensions::InstallWarning" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"struct.extensions::InstallWarning"* }
%"class.base::Version" = type { %"class.std::__1::vector.168" }
%"class.std::__1::vector.168" = type { %"class.std::__1::__vector_base.169" }
%"class.std::__1::__vector_base.169" = type { i32*, i32*, %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { i32* }
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.extensions::Manifest"* }
%"class.extensions::Manifest" = type { %"class.std::__1::basic_string", %"class.extensions::HashedExtensionId", i32, %"class.std::__1::unique_ptr.178", %"class.std::__1::unique_ptr.178", i32, i32 }
%"class.extensions::HashedExtensionId" = type { %"class.std::__1::basic_string" }
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.base::DictionaryValue"* }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.181" }
%"union.absl::variant_internal::DestructibleUnionImpl.181" = type { %"union.absl::variant_internal::DestructibleUnionImpl.182" }
%"union.absl::variant_internal::DestructibleUnionImpl.182" = type { %"union.absl::variant_internal::DestructibleUnionImpl.183" }
%"union.absl::variant_internal::DestructibleUnionImpl.183" = type { %"union.absl::variant_internal::DestructibleUnionImpl.184" }
%"union.absl::variant_internal::DestructibleUnionImpl.184" = type { %"class.std::__1::basic_string" }
%"class.std::__1::map.210" = type { %"class.std::__1::__tree.211" }
%"class.std::__1::__tree.211" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.212", %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::GUID" = type { %"class.std::__1::basic_string" }
%"class.extensions::ExtensionsBrowserClient" = type { i32 (...)**, %"class.std::__1::vector.411" }
%"class.std::__1::vector.411" = type { %"class.std::__1::__vector_base.412" }
%"class.std::__1::__vector_base.412" = type { %"class.std::__1::unique_ptr.413"*, %"class.std::__1::unique_ptr.413"*, %"class.std::__1::__compressed_pair.414" }
%"class.std::__1::unique_ptr.413" = type opaque
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.415" }
%"struct.std::__1::__compressed_pair_elem.415" = type { %"class.std::__1::unique_ptr.413"* }
%"class.extensions::ComponentExtensionResourceManager" = type { i32 (...)** }
%"class.ui::ResourceBundle" = type { %"class.ui::ResourceBundle::Delegate"*, %"class.std::__1::unique_ptr.419", %"class.std::__1::unique_ptr.425", %"class.std::__1::unique_ptr.425", %"class.std::__1::vector.431", i32, %"class.std::__1::map.438", %"class.gfx::Image", %"class.std::__1::map.450", %"class.base::FilePath", %"class.std::__1::unordered_map", i8, i8, %"class.std::__1::basic_string" }
%"class.ui::ResourceBundle::Delegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.419" = type { %"class.std::__1::__compressed_pair.420" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.421" }
%"struct.std::__1::__compressed_pair_elem.421" = type { %"class.base::Lock"* }
%"class.std::__1::unique_ptr.425" = type { %"class.std::__1::__compressed_pair.426" }
%"class.std::__1::__compressed_pair.426" = type { %"struct.std::__1::__compressed_pair_elem.427" }
%"struct.std::__1::__compressed_pair_elem.427" = type { %"class.ui::ResourceHandle"* }
%"class.ui::ResourceHandle" = type opaque
%"class.std::__1::vector.431" = type { %"class.std::__1::__vector_base.432" }
%"class.std::__1::__vector_base.432" = type { %"class.std::__1::unique_ptr.425"*, %"class.std::__1::unique_ptr.425"*, %"class.std::__1::__compressed_pair.433" }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.434" }
%"struct.std::__1::__compressed_pair_elem.434" = type { %"class.std::__1::unique_ptr.425"* }
%"class.std::__1::map.438" = type { %"class.std::__1::__tree.439" }
%"class.std::__1::__tree.439" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.440", %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.440" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.gfx::Image" = type { %class.scoped_refptr.449 }
%class.scoped_refptr.449 = type { %"class.gfx::internal::ImageStorage"* }
%"class.gfx::internal::ImageStorage" = type opaque
%"class.std::__1::map.450" = type { %"class.std::__1::__tree.451" }
%"class.std::__1::__tree.451" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.452", %"class.std::__1::__compressed_pair.456" }
%"class.std::__1::__compressed_pair.452" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.456" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.461", %"class.std::__1::__compressed_pair.469", %"class.std::__1::__compressed_pair.474", %"class.std::__1::__compressed_pair.476", [4 x i8] }>
%"class.std::__1::unique_ptr.461" = type { %"class.std::__1::__compressed_pair.462" }
%"class.std::__1::__compressed_pair.462" = type { %"struct.std::__1::__compressed_pair_elem.463", %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.463" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.470" }
%"struct.std::__1::__compressed_pair_elem.470" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.474" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.477" }
%"struct.std::__1::__compressed_pair_elem.477" = type { float }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.extensions::ImageLoader" = type { %class.KeyedService, %"class.base::WeakPtrFactory.356" }
%"class.base::WeakPtrFactory.356" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare" = type { i8 }
%"class.std::__1::vector.551" = type { %"class.std::__1::__vector_base.552" }
%"class.std::__1::__vector_base.552" = type { i32*, i32*, %"class.std::__1::__compressed_pair.553" }
%"class.std::__1::__compressed_pair.553" = type { %"struct.std::__1::__compressed_pair_elem.554" }
%"struct.std::__1::__compressed_pair_elem.554" = type { i32* }
%"class.std::__1::vector.531" = type { %"class.std::__1::__vector_base.532" }
%"class.std::__1::__vector_base.532" = type { i32*, i32*, %"class.std::__1::__compressed_pair.533" }
%"class.std::__1::__compressed_pair.533" = type { %"struct.std::__1::__compressed_pair_elem.534" }
%"struct.std::__1::__compressed_pair_elem.534" = type { i32* }
%"class.base::internal::flat_tree.559" = type { %"class.std::__1::vector.531" }
%"class.base::OnceCallback.560" = type { %"class.base::internal::CallbackBase" }
%"class.web_app::WebAppProvider" = type { %"class.web_app::WebAppProviderBase", %"class.std::__1::unique_ptr.241", %"class.std::__1::unique_ptr.247", %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.263", %"class.std::__1::unique_ptr.269", %"class.std::__1::unique_ptr.275", %"class.std::__1::unique_ptr.281", %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.293", %"class.std::__1::unique_ptr.311", %"class.std::__1::unique_ptr.317", %"class.std::__1::unique_ptr.323", %"class.std::__1::unique_ptr.329", %"class.std::__1::unique_ptr.335", %"class.std::__1::unique_ptr.341", %"class.base::OneShotEvent", %class.Profile*, i8, i8, i8, %"class.base::WeakPtrFactory.354" }
%"class.web_app::WebAppProviderBase" = type { %class.KeyedService }
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.web_app::WebAppDatabaseFactory"* }
%"class.web_app::WebAppDatabaseFactory" = type opaque
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"class.web_app::WebAppMover"* }
%"class.web_app::WebAppMover" = type opaque
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.web_app::AppRegistrar"* }
%"class.web_app::AppRegistrar" = type { i32 (...)**, %class.Profile*, %"class.base::ObserverList.256", %"class.web_app::OsIntegrationManager"* }
%"class.base::ObserverList.256" = type <{ %"class.std::__1::vector.97", %"class.base::LinkedList.257", i64, i32, [4 x i8] }>
%"class.base::LinkedList.257" = type { %"class.base::LinkNode.258" }
%"class.base::LinkNode.258" = type { %"class.base::internal::LinkNodeBase" }
%"class.web_app::OsIntegrationManager" = type opaque
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.web_app::AppRegistryController"* }
%"class.web_app::AppRegistryController" = type opaque
%"class.std::__1::unique_ptr.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"class.web_app::PreinstalledWebAppManager"* }
%"class.web_app::PreinstalledWebAppManager" = type opaque
%"class.std::__1::unique_ptr.275" = type { %"class.std::__1::__compressed_pair.276" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"class.web_app::AppIconManager"* }
%"class.web_app::AppIconManager" = type { i32 (...)** }
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.web_app::InstallFinalizer"* }
%"class.web_app::InstallFinalizer" = type opaque
%"class.std::__1::unique_ptr.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"class.web_app::ManifestUpdateManager"* }
%"class.web_app::ManifestUpdateManager" = type opaque
%"class.std::__1::unique_ptr.293" = type { %"class.std::__1::__compressed_pair.294" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"class.web_app::ExternallyManagedAppManager"* }
%"class.web_app::ExternallyManagedAppManager" = type { i32 (...)**, %"class.base::OnceCallback.296", %"class.web_app::AppRegistrar"*, %"class.web_app::OsIntegrationManager"*, %"class.web_app::WebAppUiManager"*, %"class.web_app::InstallFinalizer"*, %"class.web_app::InstallManager"*, %"class.base::flat_map.297", %"class.base::RepeatingCallback", %"class.base::WeakPtrFactory.307" }
%"class.web_app::WebAppUiManager" = type opaque
%"class.web_app::InstallManager" = type <{ i32 (...)**, %class.Profile*, %"class.web_app::WebAppUrlLoader", %"class.web_app::AppRegistrar"*, %"class.web_app::OsIntegrationManager"*, %"class.web_app::InstallFinalizer"*, i8, [7 x i8] }>
%"class.web_app::WebAppUrlLoader" = type { i32 (...)** }
%"class.base::flat_map.297" = type { %"class.base::internal::flat_tree.298" }
%"class.base::internal::flat_tree.298" = type { %"class.std::__1::vector.299" }
%"class.std::__1::vector.299" = type { %"class.std::__1::__vector_base.300" }
%"class.std::__1::__vector_base.300" = type { %"struct.std::__1::pair.301"*, %"struct.std::__1::pair.301"*, %"class.std::__1::__compressed_pair.302" }
%"struct.std::__1::pair.301" = type opaque
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"struct.std::__1::pair.301"* }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.307" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.313" }
%"struct.std::__1::__compressed_pair_elem.313" = type { %"class.web_app::SystemWebAppManager"* }
%"class.web_app::SystemWebAppManager" = type opaque
%"class.std::__1::unique_ptr.317" = type { %"class.std::__1::__compressed_pair.318" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.319" }
%"struct.std::__1::__compressed_pair_elem.319" = type { %"class.web_app::WebAppAudioFocusIdMap"* }
%"class.web_app::WebAppAudioFocusIdMap" = type opaque
%"class.std::__1::unique_ptr.323" = type { %"class.std::__1::__compressed_pair.324" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"class.web_app::WebAppInstallManager"* }
%"class.web_app::WebAppInstallManager" = type opaque
%"class.std::__1::unique_ptr.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"class.web_app::WebAppPolicyManager"* }
%"class.web_app::WebAppPolicyManager" = type opaque
%"class.std::__1::unique_ptr.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.337" }
%"struct.std::__1::__compressed_pair_elem.337" = type { %"class.web_app::WebAppUiManager"* }
%"class.std::__1::unique_ptr.341" = type { %"class.std::__1::__compressed_pair.342" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"class.web_app::OsIntegrationManager"* }
%"class.base::OneShotEvent" = type { %"class.base::ThreadChecker", i8, %"class.std::__1::vector.347" }
%"class.std::__1::vector.347" = type { %"class.std::__1::__vector_base.348" }
%"class.std::__1::__vector_base.348" = type { %"struct.base::OneShotEvent::TaskInfo"*, %"struct.base::OneShotEvent::TaskInfo"*, %"class.std::__1::__compressed_pair.349" }
%"struct.base::OneShotEvent::TaskInfo" = type opaque
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.350" }
%"struct.std::__1::__compressed_pair_elem.350" = type { %"struct.base::OneShotEvent::TaskInfo"* }
%"class.base::WeakPtrFactory.354" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::vector.538" = type { %"class.std::__1::__vector_base.539" }
%"class.std::__1::__vector_base.539" = type { i32*, i32*, %"class.std::__1::__compressed_pair.540" }
%"class.std::__1::__compressed_pair.540" = type { %"struct.std::__1::__compressed_pair_elem.541" }
%"struct.std::__1::__compressed_pair_elem.541" = type { i32* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.64 }
%struct.anon.64 = type { i8 }
%"struct.std::__1::pair.614" = type { %"struct.std::__1::pair.609", %"class.gfx::ImageSkia" }
%"struct.std::__1::pair.609" = type { i32, i32 }
%"class.std::__1::__tree_node.615" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.616" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type.616" = type { %"struct.std::__1::pair.612" }
%"struct.std::__1::pair.612" = type { %"struct.std::__1::pair.609", %"class.gfx::ImageSkia" }
%"class.std::__1::__tree.599" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.600", %"class.std::__1::__compressed_pair.604" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.base::internal::flat_tree<favicon_base::IconType, base::identity, std::__1::less<void>, std::__1::vector<favicon_base::IconType, std::__1::allocator<favicon_base::IconType> > >::value_compare" = type { i8 }
%"class.base::internal::flat_tree.358" = type { %"class.std::__1::vector.359" }
%"class.std::__1::vector.359" = type { %"class.std::__1::__vector_base.360" }
%"class.std::__1::__vector_base.360" = type { i32*, i32*, %"class.std::__1::__compressed_pair.361" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.362" = type { i32* }
%"class.base::OnceCallback.366" = type { %"class.base::internal::CallbackBase" }
%"class.favicon::FaviconService" = type { %"class.favicon::CoreFaviconService", %"class.favicon::LargeFaviconProvider" }
%"class.favicon::CoreFaviconService" = type { %class.KeyedService }
%"class.favicon::LargeFaviconProvider" = type { i32 (...)** }
%"struct.favicon_base::FaviconRawBitmapResult" = type <{ i8, [7 x i8], %class.scoped_refptr.381, %"class.gfx::Size", %class.GURL, i32, i8, [3 x i8] }>
%class.scoped_refptr.381 = type { %"class.base::RefCountedMemory"* }
%"class.base::RefCountedMemory" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.382", [4 x i8] }>
%"class.base::RefCountedThreadSafe.382" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::CallbackWithDeleteHelper" = type { %"class.base::OnceCallback.59", %"class.base::OnceCallback.296" }
%"class.std::__1::unique_ptr.480" = type { %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"class.std::__1::vector"* }
%"class.std::__1::map.561" = type { %"class.std::__1::__tree.562" }
%"class.std::__1::__tree.562" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.563", %"class.std::__1::__compressed_pair.567" }
%"class.std::__1::__compressed_pair.563" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.567" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.SkBitmap::Allocator" = type { %class.SkRefCnt.base, [4 x i8] }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.591" }
%"struct.std::__1::pair.591" = type { i32, %class.SkBitmap }
%"class.base::OnceCallback.624" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::unique_ptr.627" = type { %"class.std::__1::__compressed_pair.628" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.134" }

$_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN12favicon_base8IconTypeENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeEl = comdat any

$_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIN12favicon_base8IconTypeENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeE = comdat any

$_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN12favicon_base8IconTypeENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_SJ_T_NS_15iterator_traitsISJ_E15difference_typeESN_PNSM_10value_typeEl = comdat any

$_ZN4mojo8internal24CallbackWithDeleteHelperIFvNS_9StructPtrIN4apps5mojom9IconValueEEEEE3RunES6_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN4mojo8internal24CallbackWithDeleteHelperIFvNS3_9StructPtrIN4apps5mojom9IconValueEEEEEEFvSA_EJNSt3__110unique_ptrISC_NSF_14default_deleteISC_EEEEEEESB_E7RunOnceEPNS0_13BindStateBaseEOSA_ = comdat any

$_ZN4base8internal9BindStateIMN4mojo8internal24CallbackWithDeleteHelperIFvNS2_9StructPtrIN4apps5mojom9IconValueEEEEEEFvS9_EJNSt3__110unique_ptrISB_NSE_14default_deleteISB_EEEEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN4mojo8internal24CallbackWithDeleteHelperIFvNS3_9StructPtrIN4apps5mojom9IconValueEEEEEEFvSA_EJNS0_17UnretainedWrapperISC_EEDnEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN4mojo8internal24CallbackWithDeleteHelperIFvNS2_9StructPtrIN4apps5mojom9IconValueEEEEEEFvS9_EJNS0_17UnretainedWrapperISB_EEDnEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal20ReturnAsParamAdapterINSt3__16vectorIhNS2_9allocatorIhEEEEEEvNS_12OnceCallbackIFT_vEEEPNS2_10unique_ptrIS8_NS2_14default_deleteIS8_EEEE = comdat any

$_ZN4base8internal12ReplyAdapterINSt3__16vectorIhNS2_9allocatorIhEEEES6_EEvNS_12OnceCallbackIFvT0_EEEPNS2_10unique_ptrIT_NS2_14default_deleteISC_EEEE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFNSt3__16vectorIhNS4_9allocatorIhEEEEvEEEPNS4_10unique_ptrIS8_NS4_14default_deleteIS8_EEEEEJSA_SF_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFNSt3__16vectorIhNS3_9allocatorIhEEEEvEEEPNS3_10unique_ptrIS7_NS3_14default_deleteIS7_EEEEEJS9_SE_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__16vectorIhNS4_9allocatorIhEEEEEEEPNS4_10unique_ptrIS8_NS4_14default_deleteIS8_EEEEEJSA_NS0_12OwnedWrapperISE_NSC_ISE_EEEEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__16vectorIhNS3_9allocatorIhEEEEEEEPNS3_10unique_ptrIS7_NS3_14default_deleteIS7_EEEEEJS9_NS0_12OwnedWrapperISD_NSB_ISD_EEEEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFNSt3__16vectorIhNS3_9allocatorIhEEEEN10extensions17ExtensionResourceEEJS9_EEEFS7_vEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFNSt3__16vectorIhNS2_9allocatorIhEEEEN10extensions17ExtensionResourceEEJS8_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFNSt3__16vectorIhNS3_9allocatorIhEEEEN3gfx9ImageSkiaEfEJS9_fEEEFS7_vEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFNSt3__16vectorIhNS2_9allocatorIhEEEEN3gfx9ImageSkiaEfEJS8_fEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl = comdat any

$_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeE = comdat any

$_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl = comdat any

$_ZNSt3__16__treeINS_12__value_typeIi8SkBitmapEENS_19__map_value_compareIiS3_NS_4lessIiEELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFNSt3__16vectorIhNS3_9allocatorIhEEEENS_8FilePathEEJS8_EEEFS7_vEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFNSt3__16vectorIhNS2_9allocatorIhEEEENS_8FilePathEEJS7_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_4pairIiiEEN3gfx9ImageSkiaEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS3_JNS2_IS3_S5_EEEEENS2_INS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZN4base8internal20ReturnAsParamAdapterIN3gfx9ImageSkiaEEEvNS_12OnceCallbackIFT_vEEEPNSt3__110unique_ptrIS5_NS8_14default_deleteIS5_EEEE = comdat any

$_ZN4base8internal12ReplyAdapterIN3gfx9ImageSkiaES3_EEvNS_12OnceCallbackIFvT0_EEEPNSt3__110unique_ptrIT_NS8_14default_deleteISA_EEEE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFN3gfx9ImageSkiaEvEEEPNSt3__110unique_ptrIS5_NS8_14default_deleteIS5_EEEEEJS7_SD_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFN3gfx9ImageSkiaEvEEEPNSt3__110unique_ptrIS4_NS7_14default_deleteIS4_EEEEEJS6_SC_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvN3gfx9ImageSkiaEEEEPNSt3__110unique_ptrIS5_NS8_14default_deleteIS5_EEEEEJS7_NS0_12OwnedWrapperISC_NSA_ISC_EEEEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvN3gfx9ImageSkiaEEEEPNSt3__110unique_ptrIS4_NS7_14default_deleteIS4_EEEEEJS6_NS0_12OwnedWrapperISB_NS9_ISB_EEEEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

@.str = private unnamed_addr constant [22 x i8] c"EncodeImageToPngBytes\00", align 1
@.str.1 = private unnamed_addr constant [58 x i8] c"../../chrome/browser/apps/app_service/app_icon_factory.cc\00", align 1
@_ZN3gfx12kFaviconSizeE = external local_unnamed_addr constant i32, align 4
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1
@.str.3 = private unnamed_addr constant [32 x i8] c"LoadCompressedDataFromExtension\00", align 1
@.ref.tmp.4 = private constant %"class.base::TaskTraits" { %"struct.base::TaskTraitsExtensionStorage" zeroinitializer, i8 1, i8 1, i8 0, i8 1, i8 0, i8 0 }, align 1
@.str.5 = private unnamed_addr constant [27 x i8] c"CompressedDataFromResource\00", align 1
@.str.6 = private unnamed_addr constant [25 x i8] c"ReadFileAsCompressedData\00", align 1
@.str.7 = private unnamed_addr constant [22 x i8] c"CompleteWithIconValue\00", align 1
@.ref.tmp.8 = private constant %"class.base::TaskTraits" { %"struct.base::TaskTraitsExtensionStorage" zeroinitializer, i8 1, i8 1, i8 0, i8 1, i8 0, i8 0 }, align 1
@.str.10 = private unnamed_addr constant [27 x i8] c"LoadCompressedIconFromFile\00", align 1
@.ref.tmp.11 = private constant %"class.base::TaskTraits" { %"struct.base::TaskTraitsExtensionStorage" zeroinitializer, i8 1, i8 1, i8 0, i8 1, i8 0, i8 0 }, align 1
@_ZZN12_GLOBAL__N_120GetResourceIconCacheEvE5cache = internal global %"class.base::NoDestructor" zeroinitializer, align 8
@_ZGVZN12_GLOBAL__N_120GetResourceIconCacheEvE5cache = internal global i64 0, align 8
@.str.12 = private unnamed_addr constant [11 x i8] c"operator()\00", align 1
@.ref.tmp.13 = private constant %"class.base::TaskTraits" { %"struct.base::TaskTraitsExtensionStorage" zeroinitializer, i8 1, i8 1, i8 0, i8 1, i8 0, i8 0 }, align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4apps33CompressedDataToImageSkiaCallbackEN4base12OnceCallbackIFvN3gfx9ImageSkiaEEEEf(%"class.base::OnceCallback"* noalias nocapture sret, %"class.base::OnceCallback.1"* nocapture, float) local_unnamed_addr #0 {
  %4 = tail call i8* @_Znwm(i64 56) #11, !noalias !2
  %5 = bitcast i8* %4 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %5, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN4apps33CompressedDataToImageSkiaCallbackENS_12OnceCallbackIFvN3gfx9ImageSkiaEEEEfE3$_0JS8_fEEEFvNSt3__16vectorIhNSB_9allocatorIhEEEEEE7RunOnceEPNS0_13BindStateBaseEOSF_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN4apps33CompressedDataToImageSkiaCallbackENS_12OnceCallbackIFvN3gfx9ImageSkiaEEEEfE3$_0JS7_fEE7DestroyEPKNS0_13BindStateBaseE") #12, !noalias !2
  %6 = getelementptr inbounds i8, i8* %4, i64 40
  %7 = getelementptr inbounds %"class.base::OnceCallback.1", %"class.base::OnceCallback.1"* %1, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.base::OnceCallback.1"* %1 to i64*
  %9 = load i64, i64* %8, align 8, !noalias !2
  %10 = bitcast i8* %6 to i64*
  store i64 %9, i64* %10, align 8, !noalias !2
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %7, align 8, !noalias !2
  %11 = getelementptr inbounds i8, i8* %4, i64 48
  %12 = bitcast i8* %11 to float*
  store float %2, float* %12, align 4, !noalias !2
  %13 = bitcast %"class.base::OnceCallback"* %0 to i8**
  store i8* %4, i8** %13, align 8, !alias.scope !2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4apps21EncodeImageToPngBytesEN3gfx9ImageSkiaEf(%"class.std::__1::vector"* noalias nocapture sret, %"class.gfx::ImageSkia"*, float) #0 {
  %4 = alloca %"class.base::ScopedBlockingCall", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = alloca %"class.std::__1::vector", align 16
  %7 = bitcast %"class.base::ScopedBlockingCall"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %7) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 80, i1 false)
  %8 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 1202) #12
  call void @_ZN4base18ScopedBlockingCallC1ERKNS_8LocationENS_12BlockingTypeE(%"class.base::ScopedBlockingCall"* nonnull %4, %"class.base::Location"* nonnull dereferenceable(32) %5, i32 0) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #12
  %9 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 0, i64 24, i1 false) #12
  %13 = call dereferenceable(192) %"class.gfx::ImageSkiaRep"* @_ZNK3gfx9ImageSkia17GetRepresentationEf(%"class.gfx::ImageSkia"* %1, float %2) #12
  %14 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %13, i64 0, i32 6
  %15 = load float, float* %14, align 8
  %16 = fcmp oeq float %15, 0.000000e+00
  %17 = select i1 %16, float 1.000000e+00, float %15
  %18 = fcmp une float %17, %2
  br i1 %18, label %19, label %21

19:                                               ; preds = %3
  %20 = bitcast %"class.std::__1::vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 0, i64 24, i1 false) #12
  br label %53

21:                                               ; preds = %3
  %22 = call dereferenceable(56) %class.SkBitmap* @_ZNK3gfx12ImageSkiaRep9GetBitmapEv(%"class.gfx::ImageSkiaRep"* %13) #12
  %23 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %22, i64 0, i32 1, i32 2, i32 1, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp slt i32 %24, 1
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %22, i64 0, i32 1, i32 2, i32 1, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = icmp slt i32 %28, 1
  br i1 %29, label %34, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %22, i64 0, i32 0, i32 0
  %32 = load %class.SkPixelRef*, %class.SkPixelRef** %31, align 8
  %33 = icmp eq %class.SkPixelRef* %32, null
  br i1 %33, label %34, label %36

34:                                               ; preds = %21, %26, %30
  %35 = bitcast %"class.std::__1::vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 0, i64 24, i1 false) #12
  br label %53

36:                                               ; preds = %30
  %37 = call zeroext i1 @_ZN3gfx8PNGCodec18EncodeBGRASkBitmapERK8SkBitmapbPNSt3__16vectorIhNS4_9allocatorIhEEEE(%class.SkBitmap* dereferenceable(56) %22, i1 zeroext false, %"class.std::__1::vector"* nonnull %6) #12
  %38 = bitcast %"class.std::__1::vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #12
  br i1 %37, label %39, label %47

39:                                               ; preds = %36
  %40 = bitcast %"class.std::__1::vector"* %6 to <2 x i64>*
  %41 = load <2 x i64>, <2 x i64>* %40, align 16
  %42 = bitcast %"class.std::__1::vector"* %0 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %42, align 8
  %43 = bitcast i8** %12 to i64*
  %44 = load i64, i64* %43, align 16
  %45 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %46 = bitcast i8** %45 to i64*
  store i64 %44, i64* %46, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 0, i64 24, i1 false) #12
  br label %53

47:                                               ; preds = %36
  %48 = load i8*, i8** %10, align 16
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %47
  %51 = ptrtoint i8* %48 to i64
  %52 = bitcast i8** %11 to i64*
  store i64 %51, i64* %52, align 8
  call void @_ZdlPv(i8* nonnull %48) #11
  br label %53

53:                                               ; preds = %19, %39, %34, %47, %50
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #12
  call void @_ZN4base18ScopedBlockingCallD1Ev(%"class.base::ScopedBlockingCall"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %7) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

declare void @_ZN4base18ScopedBlockingCallC1ERKNS_8LocationENS_12BlockingTypeE(%"class.base::ScopedBlockingCall"*, %"class.base::Location"* dereferenceable(32), i32) unnamed_addr #2

declare dereferenceable(192) %"class.gfx::ImageSkiaRep"* @_ZNK3gfx9ImageSkia17GetRepresentationEf(%"class.gfx::ImageSkia"*, float) local_unnamed_addr #2

declare dereferenceable(56) %class.SkBitmap* @_ZNK3gfx12ImageSkiaRep9GetBitmapEv(%"class.gfx::ImageSkiaRep"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3gfx8PNGCodec18EncodeBGRASkBitmapERK8SkBitmapbPNSt3__16vectorIhNS4_9allocatorIhEEEE(%class.SkBitmap* dereferenceable(56), i1 zeroext, %"class.std::__1::vector"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base18ScopedBlockingCallD1Ev(%"class.base::ScopedBlockingCall"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4apps16ApplyIconEffectsENS_11IconEffectsEiN4mojo9StructPtrINS_5mojom9IconValueEEEN4base12OnceCallbackIFvS5_EEE(i32, i32, %"class.mojo::StructPtr"* nocapture, %"class.base::OnceCallback.59"* nocapture) local_unnamed_addr #0 {
  %5 = alloca %"class.base::OnceCallback.59", align 8
  %6 = alloca %"class.base::RepeatingCallback.355", align 8
  %7 = alloca %"class.mojo::StructPtr", align 8
  %8 = alloca %"class.base::OnceCallback.59", align 8
  %9 = alloca %class.scoped_refptr.60, align 8
  %10 = bitcast %class.scoped_refptr.60* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #12
  %11 = bitcast %"class.base::OnceCallback.59"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = tail call i8* @_Znwm(i64 392) #11
  %13 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %3, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.base::OnceCallback.59"* %3 to i64*
  %15 = load i64, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8
  %16 = bitcast i8* %12 to i32*
  store i32 0, i32* %16, align 4
  %17 = getelementptr inbounds i8, i8* %12, i64 8
  %18 = bitcast i8* %17 to i32*
  store i32 %1, i32* %18, align 8
  %19 = getelementptr inbounds i8, i8* %12, i64 12
  %20 = bitcast i8* %19 to i32*
  store i32 0, i32* %20, align 4
  %21 = getelementptr inbounds i8, i8* %12, i64 16
  %22 = bitcast i8* %21 to float*
  store float 0.000000e+00, float* %22, align 8
  %23 = getelementptr inbounds i8, i8* %12, i64 20
  %24 = bitcast i8* %23 to float*
  store float 1.000000e+00, float* %24, align 4
  %25 = getelementptr inbounds i8, i8* %12, i64 32
  %26 = bitcast i8* %25 to %class.GURL*
  tail call void @_ZN4GURLC1Ev(%class.GURL* %26) #12
  %27 = getelementptr inbounds i8, i8* %12, i64 152
  %28 = bitcast i8* %27 to %class.Profile**
  store %class.Profile* null, %class.Profile** %28, align 8
  %29 = getelementptr inbounds i8, i8* %12, i64 168
  %30 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %8, i64 0, i32 0, i32 0, i32 0
  %31 = bitcast i8* %29 to i64*
  store i64 %15, i64* %31, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %30, align 8
  %32 = getelementptr inbounds i8, i8* %12, i64 176
  %33 = bitcast i8* %32 to %"class.base::internal::BindStateBase"**
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %33, align 8
  %34 = getelementptr inbounds i8, i8* %12, i64 184
  %35 = bitcast i8* %34 to %"class.base::CancelableTaskTracker"*
  tail call void @_ZN4base21CancelableTaskTrackerC1Ev(%"class.base::CancelableTaskTracker"* %35) #12
  %36 = getelementptr inbounds i8, i8* %12, i64 312
  %37 = bitcast i8* %36 to %"class.base::SequencedTaskRunner"**
  store %"class.base::SequencedTaskRunner"* null, %"class.base::SequencedTaskRunner"** %37, align 8
  %38 = getelementptr inbounds i8, i8* %12, i64 320
  %39 = bitcast i8* %38 to %"class.gfx::ImageSkia"*
  tail call void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"* %39) #12
  %40 = getelementptr inbounds i8, i8* %12, i64 328
  %41 = bitcast i8* %40 to %"class.gfx::ImageSkia"*
  tail call void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"* %41) #12
  %42 = getelementptr inbounds i8, i8* %12, i64 336
  store i8 0, i8* %42, align 8
  %43 = getelementptr inbounds i8, i8* %12, i64 337
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds i8, i8* %12, i64 344
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 48, i1 false) #12
  %45 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %45) #12
  %46 = bitcast i8* %12 to %"class.base::subtle::RefCountedBase"*
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* nonnull %46) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  %47 = bitcast %class.scoped_refptr.60* %9 to i8**
  store i8* %12, i8** %47, align 8
  %48 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  %49 = load i64, i64* %48, align 8
  store i64 0, i64* %48, align 8
  %50 = inttoptr i64 %49 to %"class.apps::mojom::IconValue"*
  %51 = icmp eq i64 %49, 0
  br i1 %51, label %94, label %52

52:                                               ; preds = %4
  %53 = getelementptr inbounds %"class.apps::mojom::IconValue", %"class.apps::mojom::IconValue"* %50, i64 0, i32 2, i32 0, i32 0
  %54 = load %"class.gfx::internal::ImageSkiaStorage"*, %"class.gfx::internal::ImageSkiaStorage"** %53, align 8
  %55 = icmp eq %"class.gfx::internal::ImageSkiaStorage"* %54, null
  br i1 %55, label %92, label %56

56:                                               ; preds = %52
  %57 = bitcast %"class.mojo::StructPtr"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #12
  %58 = and i32 %0, 8
  %59 = icmp ne i32 %58, 0
  %60 = and i32 %0, 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %68

62:                                               ; preds = %56
  %63 = and i32 %0, 16
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %62
  %66 = lshr i32 %0, 1
  %67 = and i32 %66, 1
  br label %68

68:                                               ; preds = %65, %62, %56
  %69 = phi i1 [ false, %56 ], [ false, %62 ], [ true, %65 ]
  %70 = phi i32 [ 2, %56 ], [ 3, %62 ], [ %67, %65 ]
  %71 = load i32, i32* %18, align 8
  %72 = bitcast %"class.base::RepeatingCallback.355"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #12
  %73 = getelementptr inbounds %"class.base::RepeatingCallback.355", %"class.base::RepeatingCallback.355"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %73, align 8
  %74 = getelementptr inbounds %"class.apps::mojom::IconValue", %"class.apps::mojom::IconValue"* %50, i64 0, i32 2
  call void @_ZN10extensions13ChromeAppIcon12ApplyEffectsEiRKN4base17RepeatingCallbackIFvRKN3gfx4SizeEPNS3_9ImageSkiaEEEEbbNS0_5BadgeES8_(i32 %71, %"class.base::RepeatingCallback.355"* nonnull dereferenceable(8) %6, i1 zeroext %69, i1 zeroext %59, i32 %70, %"class.gfx::ImageSkia"* %74) #12
  %75 = getelementptr inbounds %"class.base::RepeatingCallback.355", %"class.base::RepeatingCallback.355"* %6, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %75) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #12
  %76 = bitcast %"class.mojo::StructPtr"* %7 to i64*
  %77 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %49, i64* %76, align 8
  %78 = bitcast %"class.base::OnceCallback.59"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #12
  %79 = bitcast i8* %29 to %"class.base::internal::BindStateBase"**
  %80 = load i64, i64* %31, align 8
  %81 = bitcast %"class.base::OnceCallback.59"* %5 to i64*
  store i64 %80, i64* %81, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %79, align 8
  %82 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %5, i64 0, i32 0
  %83 = inttoptr i64 %80 to %"class.base::internal::BindStateBase"*
  %84 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %83, i64 0, i32 1
  %85 = bitcast void ()** %84 to void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr"*)**
  %86 = load void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr"*)*, void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr"*)** %85, align 8
  call void %86(%"class.base::internal::BindStateBase"* %83, %"class.mojo::StructPtr"* nonnull dereferenceable(8) %7) #12
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %82) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #12
  %87 = load %"class.apps::mojom::IconValue"*, %"class.apps::mojom::IconValue"** %77, align 8
  store %"class.apps::mojom::IconValue"* null, %"class.apps::mojom::IconValue"** %77, align 8
  %88 = icmp eq %"class.apps::mojom::IconValue"* %87, null
  br i1 %88, label %91, label %89

89:                                               ; preds = %68
  call void @_ZN4apps5mojom9IconValueD1Ev(%"class.apps::mojom::IconValue"* nonnull %87) #12
  %90 = bitcast %"class.apps::mojom::IconValue"* %87 to i8*
  call void @_ZdlPv(i8* %90) #11
  br label %91

91:                                               ; preds = %68, %89
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #12
  br label %94

92:                                               ; preds = %52
  call void @_ZN4apps5mojom9IconValueD1Ev(%"class.apps::mojom::IconValue"* nonnull %50) #12
  %93 = inttoptr i64 %49 to i8*
  call void @_ZdlPv(i8* %93) #11
  br label %94

94:                                               ; preds = %4, %91, %92
  call fastcc void @_ZN13scoped_refptrIN12_GLOBAL__N_119IconLoadingPipelineEED2Ev(%class.scoped_refptr.60* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN13scoped_refptrIN12_GLOBAL__N_119IconLoadingPipelineEED2Ev(%class.scoped_refptr.60* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback.138", align 8
  %3 = alloca %"class.base::OnceCallback.130", align 8
  %4 = alloca %"class.base::OnceCallback.59", align 8
  %5 = alloca %"class.mojo::StructPtr", align 8
  %6 = alloca %"class.gfx::ImageSkia", align 8
  %7 = alloca %"class.std::__1::vector.131", align 8
  %8 = getelementptr inbounds %class.scoped_refptr.60, %class.scoped_refptr.60* %0, i64 0, i32 0
  %9 = load %"class.(anonymous namespace)::IconLoadingPipeline"*, %"class.(anonymous namespace)::IconLoadingPipeline"** %8, align 8
  %10 = icmp eq %"class.(anonymous namespace)::IconLoadingPipeline"* %9, null
  br i1 %10, label %138, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.(anonymous namespace)::IconLoadingPipeline", %"class.(anonymous namespace)::IconLoadingPipeline"* %9, i64 0, i32 0
  %13 = getelementptr inbounds %"class.(anonymous namespace)::IconLoadingPipeline", %"class.(anonymous namespace)::IconLoadingPipeline"* %9, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %13) #12
  %14 = getelementptr inbounds %"class.(anonymous namespace)::IconLoadingPipeline", %"class.(anonymous namespace)::IconLoadingPipeline"* %9, i64 0, i32 0, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %138

17:                                               ; preds = %11
  %18 = bitcast %"class.mojo::StructPtr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %12, i64 42
  %20 = bitcast %"class.base::RefCounted"* %19 to %"class.base::internal::CallbackBase"*
  %21 = bitcast %"class.base::RefCounted"* %19 to %"class.base::internal::BindStateBase"**
  %22 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %21, align 8
  %23 = icmp eq %"class.base::internal::BindStateBase"* %22, null
  br i1 %23, label %43, label %24

24:                                               ; preds = %17
  %25 = tail call i8* @_Znwm(i64 56) #11, !noalias !7
  %26 = bitcast i8* %25 to %"class.apps::mojom::IconValue"*
  tail call void @_ZN4apps5mojom9IconValueC1Ev(%"class.apps::mojom::IconValue"* nonnull %26) #12, !noalias !7
  %27 = ptrtoint i8* %25 to i64
  %28 = bitcast %"class.mojo::StructPtr"* %5 to i64*
  store i64 %27, i64* %28, align 8, !alias.scope !7
  %29 = bitcast %"class.base::OnceCallback.59"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #12
  %30 = bitcast %"class.base::RefCounted"* %19 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.base::OnceCallback.59"* %4 to i64*
  store i64 %31, i64* %32, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %21, align 8
  %33 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %4, i64 0, i32 0
  %34 = inttoptr i64 %31 to %"class.base::internal::BindStateBase"*
  %35 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %34, i64 0, i32 1
  %36 = bitcast void ()** %35 to void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr"*)**
  %37 = load void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr"*)*, void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr"*)** %36, align 8
  call void %37(%"class.base::internal::BindStateBase"* %34, %"class.mojo::StructPtr"* nonnull dereferenceable(8) %5) #12
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %33) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #12
  %38 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"class.apps::mojom::IconValue"*, %"class.apps::mojom::IconValue"** %38, align 8
  store %"class.apps::mojom::IconValue"* null, %"class.apps::mojom::IconValue"** %38, align 8
  %40 = icmp eq %"class.apps::mojom::IconValue"* %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %24
  call void @_ZN4apps5mojom9IconValueD1Ev(%"class.apps::mojom::IconValue"* nonnull %39) #12
  %42 = bitcast %"class.apps::mojom::IconValue"* %39 to i8*
  call void @_ZdlPv(i8* %42) #11
  br label %43

43:                                               ; preds = %41, %24, %17
  %44 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %12, i64 86
  %45 = bitcast %"class.base::RefCounted"* %44 to %"class.base::internal::CallbackBase"*
  %46 = bitcast %"class.base::RefCounted"* %44 to %"class.base::internal::BindStateBase"**
  %47 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %46, align 8
  %48 = icmp eq %"class.base::internal::BindStateBase"* %47, null
  br i1 %48, label %60, label %49

49:                                               ; preds = %43
  %50 = bitcast %"class.gfx::ImageSkia"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #12
  call void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"* nonnull %6) #12
  %51 = bitcast %"class.base::OnceCallback.130"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #12
  %52 = bitcast %"class.base::RefCounted"* %44 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"class.base::OnceCallback.130"* %3 to i64*
  store i64 %53, i64* %54, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %46, align 8
  %55 = getelementptr inbounds %"class.base::OnceCallback.130", %"class.base::OnceCallback.130"* %3, i64 0, i32 0
  %56 = inttoptr i64 %53 to %"class.base::internal::BindStateBase"*
  %57 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %56, i64 0, i32 1
  %58 = bitcast void ()** %57 to void (%"class.base::internal::BindStateBase"*, %"class.gfx::ImageSkia"*)**
  %59 = load void (%"class.base::internal::BindStateBase"*, %"class.gfx::ImageSkia"*)*, void (%"class.base::internal::BindStateBase"*, %"class.gfx::ImageSkia"*)** %58, align 8
  call void %59(%"class.base::internal::BindStateBase"* %56, %"class.gfx::ImageSkia"* nonnull dereferenceable(8) %6) #12
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %55) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #12
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #12
  br label %60

60:                                               ; preds = %49, %43
  %61 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %12, i64 96
  %62 = bitcast %"class.base::RefCounted"* %61 to %"class.base::internal::CallbackBase"*
  %63 = bitcast %"class.base::RefCounted"* %61 to %"class.base::internal::BindStateBase"**
  %64 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %63, align 8
  %65 = icmp eq %"class.base::internal::BindStateBase"* %64, null
  br i1 %65, label %93, label %66

66:                                               ; preds = %60
  %67 = ptrtoint %"class.base::internal::BindStateBase"* %64 to i64
  %68 = bitcast %"class.std::__1::vector.131"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %68) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 0, i64 24, i1 false) #12
  %69 = bitcast %"class.base::OnceCallback.138"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #12
  %70 = bitcast %"class.base::OnceCallback.138"* %2 to i64*
  store i64 %67, i64* %70, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %63, align 8
  %71 = getelementptr inbounds %"class.base::OnceCallback.138", %"class.base::OnceCallback.138"* %2, i64 0, i32 0
  %72 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %64, i64 0, i32 1
  %73 = bitcast void ()** %72 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector.131"*)**
  %74 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector.131"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector.131"*)** %73, align 8
  call void %74(%"class.base::internal::BindStateBase"* nonnull %64, %"class.std::__1::vector.131"* nonnull dereferenceable(24) %7) #12
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %71) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #12
  %75 = getelementptr inbounds %"class.std::__1::vector.131", %"class.std::__1::vector.131"* %7, i64 0, i32 0, i32 0
  %76 = load %"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"** %75, align 8
  %77 = icmp eq %"class.gfx::ImageSkia"* %76, null
  br i1 %77, label %92, label %78

78:                                               ; preds = %66
  %79 = bitcast %"class.gfx::ImageSkia"* %76 to i8*
  %80 = getelementptr inbounds %"class.std::__1::vector.131", %"class.std::__1::vector.131"* %7, i64 0, i32 0, i32 1
  %81 = load %"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"** %80, align 8
  %82 = icmp eq %"class.gfx::ImageSkia"* %81, %76
  br i1 %82, label %90, label %83

83:                                               ; preds = %78, %83
  %84 = phi %"class.gfx::ImageSkia"* [ %85, %83 ], [ %81, %78 ]
  %85 = getelementptr inbounds %"class.gfx::ImageSkia", %"class.gfx::ImageSkia"* %84, i64 -1
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* %85) #12
  %86 = icmp eq %"class.gfx::ImageSkia"* %85, %76
  br i1 %86, label %87, label %83

87:                                               ; preds = %83
  %88 = bitcast %"class.std::__1::vector.131"* %7 to i8**
  %89 = load i8*, i8** %88, align 8
  br label %90

90:                                               ; preds = %87, %78
  %91 = phi i8* [ %89, %87 ], [ %79, %78 ]
  store %"class.gfx::ImageSkia"* %76, %"class.gfx::ImageSkia"** %80, align 8
  call void @_ZdlPv(i8* %91) #11
  br label %92

92:                                               ; preds = %90, %66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #12
  br label %93

93:                                               ; preds = %92, %60
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %62) #12
  %94 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %12, i64 88
  %95 = bitcast %"class.base::RefCounted"* %94 to %"class.gfx::ImageSkia"**
  %96 = load %"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"** %95, align 8
  %97 = icmp eq %"class.gfx::ImageSkia"* %96, null
  br i1 %97, label %113, label %98

98:                                               ; preds = %93
  %99 = bitcast %"class.gfx::ImageSkia"* %96 to i8*
  %100 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %12, i64 90
  %101 = bitcast %"class.base::RefCounted"* %100 to %"class.gfx::ImageSkia"**
  %102 = load %"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"** %101, align 8
  %103 = icmp eq %"class.gfx::ImageSkia"* %102, %96
  br i1 %103, label %111, label %104

104:                                              ; preds = %98, %104
  %105 = phi %"class.gfx::ImageSkia"* [ %106, %104 ], [ %102, %98 ]
  %106 = getelementptr inbounds %"class.gfx::ImageSkia", %"class.gfx::ImageSkia"* %105, i64 -1
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* %106) #12
  %107 = icmp eq %"class.gfx::ImageSkia"* %106, %96
  br i1 %107, label %108, label %104

108:                                              ; preds = %104
  %109 = bitcast %"class.base::RefCounted"* %94 to i8**
  %110 = load i8*, i8** %109, align 8
  br label %111

111:                                              ; preds = %108, %98
  %112 = phi i8* [ %110, %108 ], [ %99, %98 ]
  store %"class.gfx::ImageSkia"* %96, %"class.gfx::ImageSkia"** %101, align 8
  call void @_ZdlPv(i8* %112) #11
  br label %113

113:                                              ; preds = %111, %93
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %45) #12
  %114 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %12, i64 82
  %115 = bitcast %"class.base::RefCounted"* %114 to %"class.gfx::ImageSkia"*
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* %115) #12
  %116 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %12, i64 80
  %117 = bitcast %"class.base::RefCounted"* %116 to %"class.gfx::ImageSkia"*
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* %117) #12
  %118 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %12, i64 78
  %119 = bitcast %"class.base::RefCounted"* %118 to %"class.base::SequencedTaskRunner"**
  %120 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %119, align 8
  %121 = icmp eq %"class.base::SequencedTaskRunner"* %120, null
  br i1 %121, label %130, label %122

122:                                              ; preds = %113
  %123 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %120, i64 0, i32 0, i32 1
  %124 = getelementptr inbounds %"class.base::RefCountedThreadSafe.129", %"class.base::RefCountedThreadSafe.129"* %123, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = atomicrmw sub i32* %124, i32 1 acq_rel
  %126 = icmp eq i32 %125, 1
  br i1 %126, label %127, label %130

127:                                              ; preds = %122
  %128 = getelementptr inbounds %"class.base::RefCountedThreadSafe.129", %"class.base::RefCountedThreadSafe.129"* %123, i64 -2
  %129 = bitcast %"class.base::RefCountedThreadSafe.129"* %128 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %129) #12
  br label %130

130:                                              ; preds = %127, %122, %113
  %131 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %12, i64 46
  %132 = bitcast %"class.base::RefCounted"* %131 to %"class.base::CancelableTaskTracker"*
  call void @_ZN4base21CancelableTaskTrackerD1Ev(%"class.base::CancelableTaskTracker"* %132) #12
  %133 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %12, i64 44
  %134 = bitcast %"class.base::RefCounted"* %133 to %"class.base::internal::CallbackBase"*
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %134) #12
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %20) #12
  %135 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %12, i64 8
  %136 = bitcast %"class.base::RefCounted"* %135 to %class.GURL*
  call void @_ZN4GURLD1Ev(%class.GURL* %136) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  %137 = bitcast %"class.(anonymous namespace)::IconLoadingPipeline"* %9 to i8*
  call void @_ZdlPv(i8* %137) #11
  br label %138

138:                                              ; preds = %11, %130, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4apps21LoadIconFromExtensionENS_5mojom8IconTypeEiPN7content14BrowserContextERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS_11IconEffectsEN4base12OnceCallbackIFvN4mojo9StructPtrINS0_9IconValueEEEEEE(i32, i32, %"class.content::BrowserContext"*, %"class.std::__1::basic_string"* dereferenceable(24), i32, %"class.base::OnceCallback.59"* nocapture) local_unnamed_addr #0 {
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = alloca %"class.base::OnceCallback.296", align 8
  %9 = alloca %"class.base::OnceCallback.296", align 8
  %10 = alloca %"class.extensions::ExtensionResource", align 8
  %11 = alloca i32, align 4
  %12 = alloca %"class.std::__1::vector", align 8
  %13 = alloca %"class.base::Location", align 8
  %14 = alloca %"class.base::OnceCallback.479", align 8
  %15 = alloca %"class.base::OnceCallback", align 8
  %16 = alloca %class.GURL, align 8
  %17 = alloca %"class.base::OnceCallback", align 8
  %18 = alloca %class.scoped_refptr.60, align 8
  %19 = alloca %"class.gfx::Size", align 4
  %20 = alloca %"class.base::OnceCallback.357", align 8
  %21 = alloca %"class.base::OnceCallback.1", align 8
  %22 = alloca %class.scoped_refptr.60, align 8
  %23 = alloca %"class.base::OnceCallback.112", align 8
  %24 = alloca %"class.base::OnceCallback.59", align 8
  %25 = alloca %"class.base::OnceCallback.59", align 8
  %26 = alloca %class.scoped_refptr.60, align 8
  %27 = bitcast %class.scoped_refptr.60* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  %28 = bitcast %"class.base::OnceCallback.59"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28)
  %29 = tail call i8* @_Znwm(i64 392) #11
  %30 = bitcast i8* %29 to %"class.(anonymous namespace)::IconLoadingPipeline"*
  %31 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %5, i64 0, i32 0, i32 0, i32 0
  %32 = bitcast %"class.base::OnceCallback.59"* %5 to i64*
  %33 = load i64, i64* %32, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %31, align 8
  %34 = bitcast %"class.base::OnceCallback.112"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = bitcast %"class.base::OnceCallback.59"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35)
  %36 = getelementptr inbounds %"class.base::OnceCallback.112", %"class.base::OnceCallback.112"* %23, i64 0, i32 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %25, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %37, align 8
  %38 = bitcast i8* %29 to i32*
  store i32 0, i32* %38, align 4
  %39 = getelementptr inbounds i8, i8* %29, i64 4
  %40 = bitcast i8* %39 to i32*
  store i32 %0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %29, i64 8
  %42 = bitcast i8* %41 to i32*
  store i32 %1, i32* %42, align 8
  %43 = getelementptr inbounds i8, i8* %29, i64 12
  %44 = bitcast i8* %43 to i32*
  store i32 0, i32* %44, align 4
  %45 = getelementptr inbounds i8, i8* %29, i64 16
  %46 = bitcast i8* %45 to float*
  store float 0.000000e+00, float* %46, align 8
  %47 = getelementptr inbounds i8, i8* %29, i64 20
  %48 = bitcast i8* %47 to float*
  store float 1.000000e+00, float* %48, align 4
  %49 = getelementptr inbounds i8, i8* %29, i64 24
  store i8 0, i8* %49, align 8
  %50 = getelementptr inbounds i8, i8* %29, i64 28
  %51 = bitcast i8* %50 to i32*
  store i32 %4, i32* %51, align 4
  %52 = getelementptr inbounds i8, i8* %29, i64 32
  %53 = bitcast i8* %52 to %class.GURL*
  tail call void @_ZN4GURLC1Ev(%class.GURL* %53) #12
  %54 = getelementptr inbounds i8, i8* %29, i64 152
  %55 = bitcast i8* %54 to %class.Profile**
  store %class.Profile* null, %class.Profile** %55, align 8
  %56 = getelementptr inbounds i8, i8* %29, i64 160
  %57 = bitcast i8* %56 to i32*
  store i32 24210, i32* %57, align 8
  %58 = getelementptr inbounds i8, i8* %29, i64 168
  %59 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %24, i64 0, i32 0, i32 0, i32 0
  %60 = bitcast i8* %58 to i64*
  store i64 %33, i64* %60, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %59, align 8
  %61 = getelementptr inbounds i8, i8* %29, i64 176
  %62 = bitcast i8* %61 to i64*
  store i64 0, i64* %62, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %36, align 8
  %63 = getelementptr inbounds i8, i8* %29, i64 184
  %64 = bitcast i8* %63 to %"class.base::CancelableTaskTracker"*
  tail call void @_ZN4base21CancelableTaskTrackerC1Ev(%"class.base::CancelableTaskTracker"* %64) #12
  %65 = getelementptr inbounds i8, i8* %29, i64 312
  %66 = bitcast i8* %65 to %"class.base::SequencedTaskRunner"**
  store %"class.base::SequencedTaskRunner"* null, %"class.base::SequencedTaskRunner"** %66, align 8
  %67 = getelementptr inbounds i8, i8* %29, i64 320
  %68 = bitcast i8* %67 to %"class.gfx::ImageSkia"*
  tail call void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"* %68) #12
  %69 = getelementptr inbounds i8, i8* %29, i64 328
  %70 = bitcast i8* %69 to %"class.gfx::ImageSkia"*
  tail call void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"* %70) #12
  %71 = getelementptr inbounds i8, i8* %29, i64 336
  store i8 0, i8* %71, align 8
  %72 = getelementptr inbounds i8, i8* %29, i64 337
  store i8 0, i8* %72, align 1
  %73 = getelementptr inbounds i8, i8* %29, i64 344
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 48, i1 false) #12
  %74 = tail call i32 @_ZN9apps_util14ConvertDipToPxEib(i32 %1, i1 zeroext true) #12
  store i32 %74, i32* %44, align 4
  %75 = sitofp i32 %74 to float
  %76 = sitofp i32 %1 to float
  %77 = fdiv float %75, %76
  store float %77, float* %46, align 8
  %78 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %24, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %78) #12
  %79 = getelementptr inbounds %"class.base::OnceCallback.112", %"class.base::OnceCallback.112"* %23, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %79) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35)
  %80 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %25, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %80) #12
  %81 = bitcast i8* %29 to %"class.base::subtle::RefCountedBase"*
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* nonnull %81) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28)
  %82 = bitcast %class.scoped_refptr.60* %26 to i8**
  store i8* %29, i8** %82, align 8
  %83 = call %"class.extensions::ExtensionRegistry"* @_ZN10extensions17ExtensionRegistry3GetEPN7content14BrowserContextE(%"class.content::BrowserContext"* %2) #12
  %84 = call %"class.extensions::Extension"* @_ZNK10extensions17ExtensionRegistry21GetInstalledExtensionERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::ExtensionRegistry"* %83, %"class.std::__1::basic_string"* dereferenceable(24) %3) #12
  %85 = bitcast %"class.base::OnceCallback"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85)
  %86 = bitcast %"class.base::OnceCallback.357"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86)
  %87 = bitcast %"class.base::OnceCallback.1"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87)
  %88 = icmp eq %"class.extensions::Extension"* %84, null
  br i1 %88, label %89, label %90

89:                                               ; preds = %6
  call fastcc void @_ZN12_GLOBAL__N_119IconLoadingPipeline32MaybeLoadFallbackOrCompleteEmptyEv(%"class.(anonymous namespace)::IconLoadingPipeline"* nonnull %30) #12
  br label %343

90:                                               ; preds = %6
  %91 = bitcast %class.GURL* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %91) #12
  call void @_ZN10extensions13AppLaunchInfo16GetFullLaunchURLEPKNS_9ExtensionE(%class.GURL* nonnull sret %16, %"class.extensions::Extension"* nonnull %84) #12
  %92 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* %53, %class.GURL* nonnull dereferenceable(120) %16) #12
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %16) #12
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %91) #12
  %93 = call %class.Profile* @_ZN7Profile18FromBrowserContextEPN7content14BrowserContextE(%"class.content::BrowserContext"* %2) #12
  store %class.Profile* %93, %class.Profile** %55, align 8
  %94 = load i32, i32* %40, align 4
  switch i32 %94, label %342 [
    i32 2, label %95
    i32 1, label %316
    i32 3, label %316
  ]

95:                                               ; preds = %90
  %96 = load i32, i32* %51, align 4
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %316

98:                                               ; preds = %95
  %99 = load i32, i32* %44, align 4
  %100 = bitcast %class.scoped_refptr.60* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100) #12
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* nonnull %81) #12
  %101 = getelementptr inbounds %class.scoped_refptr.60, %class.scoped_refptr.60* %18, i64 0, i32 0
  %102 = call i8* @_Znwm(i64 56) #11, !noalias !10
  %103 = bitcast i8* %102 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %103, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN12_GLOBAL__N_119IconLoadingPipelineEFvNSt3__16vectorIhNS5_9allocatorIhEEEEEJ13scoped_refptrIS4_EEEEFvS9_EE7RunOnceEPNS0_13BindStateBaseEOS9_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN12_GLOBAL__N_119IconLoadingPipelineEFvNSt3__16vectorIhNS4_9allocatorIhEEEEEJ13scoped_refptrIS3_EEE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !10
  %104 = getelementptr inbounds i8, i8* %102, i64 32
  %105 = bitcast i8* %104 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.(anonymous namespace)::IconLoadingPipeline"*, %"class.std::__1::vector"*)* @_ZN12_GLOBAL__N_119IconLoadingPipeline22CompleteWithCompressedENSt3__16vectorIhNS1_9allocatorIhEEEE to i64), i64 0>, <2 x i64>* %105, align 8, !noalias !10
  %106 = getelementptr inbounds i8, i8* %102, i64 48
  %107 = ptrtoint i8* %29 to i64
  %108 = bitcast i8* %106 to i64*
  store i64 %107, i64* %108, align 8, !noalias !10
  store %"class.(anonymous namespace)::IconLoadingPipeline"* null, %"class.(anonymous namespace)::IconLoadingPipeline"** %101, align 8, !noalias !10
  %109 = bitcast %"class.base::OnceCallback"* %17 to i8**
  store i8* %102, i8** %109, align 8, !alias.scope !10
  %110 = bitcast %"class.std::__1::vector"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %110) #12
  %111 = bitcast %"class.base::OnceCallback.479"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %111) #12
  %112 = bitcast %"class.base::OnceCallback"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #12
  %113 = bitcast %"class.extensions::ExtensionResource"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %113) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %113, i8 -86, i64 104, i1 false) #12
  call void @_ZN10extensions9IconsInfo15GetIconResourceEPKNS_9ExtensionEiN16ExtensionIconSet9MatchTypeE(%"class.extensions::ExtensionResource"* nonnull sret %10, %"class.extensions::Extension"* nonnull %84, i32 %99, i32 1) #12
  %114 = call i32 @_ZNK10extensions9Extension8locationEv(%"class.extensions::Extension"* nonnull %84) #12
  %115 = icmp eq i32 %114, 5
  br i1 %115, label %116, label %272

116:                                              ; preds = %98
  %117 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %117) #12
  store i32 0, i32* %11, align 4
  %118 = call %"class.extensions::ExtensionsBrowserClient"* @_ZN10extensions23ExtensionsBrowserClient3GetEv() #12
  %119 = bitcast %"class.extensions::ExtensionsBrowserClient"* %118 to %"class.extensions::ComponentExtensionResourceManager"* (%"class.extensions::ExtensionsBrowserClient"*)***
  %120 = load %"class.extensions::ComponentExtensionResourceManager"* (%"class.extensions::ExtensionsBrowserClient"*)**, %"class.extensions::ComponentExtensionResourceManager"* (%"class.extensions::ExtensionsBrowserClient"*)*** %119, align 8
  %121 = getelementptr inbounds %"class.extensions::ComponentExtensionResourceManager"* (%"class.extensions::ExtensionsBrowserClient"*)*, %"class.extensions::ComponentExtensionResourceManager"* (%"class.extensions::ExtensionsBrowserClient"*)** %120, i64 29
  %122 = load %"class.extensions::ComponentExtensionResourceManager"* (%"class.extensions::ExtensionsBrowserClient"*)*, %"class.extensions::ComponentExtensionResourceManager"* (%"class.extensions::ExtensionsBrowserClient"*)** %121, align 8
  %123 = call %"class.extensions::ComponentExtensionResourceManager"* %122(%"class.extensions::ExtensionsBrowserClient"* %118) #12
  %124 = icmp eq %"class.extensions::ComponentExtensionResourceManager"* %123, null
  br i1 %124, label %271, label %125

125:                                              ; preds = %116
  %126 = getelementptr inbounds %"class.extensions::Extension", %"class.extensions::Extension"* %84, i64 0, i32 5
  %127 = getelementptr inbounds %"class.extensions::ExtensionResource", %"class.extensions::ExtensionResource"* %10, i64 0, i32 2
  %128 = bitcast %"class.extensions::ComponentExtensionResourceManager"* %123 to i1 (%"class.extensions::ComponentExtensionResourceManager"*, %"class.base::FilePath"*, %"class.base::FilePath"*, i32*)***
  %129 = load i1 (%"class.extensions::ComponentExtensionResourceManager"*, %"class.base::FilePath"*, %"class.base::FilePath"*, i32*)**, i1 (%"class.extensions::ComponentExtensionResourceManager"*, %"class.base::FilePath"*, %"class.base::FilePath"*, i32*)*** %128, align 8
  %130 = getelementptr inbounds i1 (%"class.extensions::ComponentExtensionResourceManager"*, %"class.base::FilePath"*, %"class.base::FilePath"*, i32*)*, i1 (%"class.extensions::ComponentExtensionResourceManager"*, %"class.base::FilePath"*, %"class.base::FilePath"*, i32*)** %129, i64 2
  %131 = load i1 (%"class.extensions::ComponentExtensionResourceManager"*, %"class.base::FilePath"*, %"class.base::FilePath"*, i32*)*, i1 (%"class.extensions::ComponentExtensionResourceManager"*, %"class.base::FilePath"*, %"class.base::FilePath"*, i32*)** %130, align 8
  %132 = call zeroext i1 %131(%"class.extensions::ComponentExtensionResourceManager"* nonnull %123, %"class.base::FilePath"* dereferenceable(24) %126, %"class.base::FilePath"* dereferenceable(24) %127, i32* nonnull %11) #12
  br i1 %132, label %133, label %271

133:                                              ; preds = %125
  %134 = call dereferenceable(216) %"class.ui::ResourceBundle"* @_ZN2ui14ResourceBundle17GetSharedInstanceEv() #12
  %135 = load i32, i32* %11, align 4
  %136 = call { i8*, i64 } @_ZNK2ui14ResourceBundle18GetRawDataResourceEi(%"class.ui::ResourceBundle"* %134, i32 %135) #12
  %137 = extractvalue { i8*, i64 } %136, 0
  %138 = extractvalue { i8*, i64 } %136, 1
  %139 = getelementptr inbounds i8, i8* %137, i64 %138
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %110, i8 0, i64 24, i1 false) #12
  %140 = icmp eq i64 %138, 0
  br i1 %140, label %252, label %141

141:                                              ; preds = %133
  %142 = icmp slt i64 %138, 0
  br i1 %142, label %143, label %145

143:                                              ; preds = %141
  %144 = bitcast %"class.std::__1::vector"* %12 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %144) #13
  unreachable

145:                                              ; preds = %141
  %146 = call i8* @_Znwm(i64 %138) #11
  %147 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 1
  store i8* %146, i8** %147, align 8
  %148 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 0
  store i8* %146, i8** %148, align 8
  %149 = getelementptr inbounds i8, i8* %146, i64 %138
  %150 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 2, i32 0, i32 0
  store i8* %149, i8** %150, align 8
  %151 = icmp ult i64 %138, 32
  br i1 %151, label %238, label %152

152:                                              ; preds = %145
  %153 = getelementptr i8, i8* %146, i64 %138
  %154 = icmp ult i8* %146, %139
  %155 = icmp ult i8* %137, %153
  %156 = and i1 %154, %155
  br i1 %156, label %238, label %157

157:                                              ; preds = %152
  %158 = and i64 %138, -32
  %159 = getelementptr i8, i8* %146, i64 %158
  %160 = getelementptr i8, i8* %137, i64 %158
  %161 = add i64 %158, -32
  %162 = lshr exact i64 %161, 5
  %163 = add nuw nsw i64 %162, 1
  %164 = and i64 %163, 3
  %165 = icmp ult i64 %161, 96
  br i1 %165, label %217, label %166

166:                                              ; preds = %157
  %167 = sub nsw i64 %163, %164
  br label %168

168:                                              ; preds = %168, %166
  %169 = phi i64 [ 0, %166 ], [ %214, %168 ]
  %170 = phi i64 [ %167, %166 ], [ %215, %168 ]
  %171 = getelementptr i8, i8* %146, i64 %169
  %172 = getelementptr i8, i8* %137, i64 %169
  %173 = bitcast i8* %172 to <16 x i8>*
  %174 = load <16 x i8>, <16 x i8>* %173, align 1, !alias.scope !15
  %175 = getelementptr i8, i8* %172, i64 16
  %176 = bitcast i8* %175 to <16 x i8>*
  %177 = load <16 x i8>, <16 x i8>* %176, align 1, !alias.scope !15
  %178 = bitcast i8* %171 to <16 x i8>*
  store <16 x i8> %174, <16 x i8>* %178, align 1, !alias.scope !18, !noalias !15
  %179 = getelementptr i8, i8* %171, i64 16
  %180 = bitcast i8* %179 to <16 x i8>*
  store <16 x i8> %177, <16 x i8>* %180, align 1, !alias.scope !18, !noalias !15
  %181 = or i64 %169, 32
  %182 = getelementptr i8, i8* %146, i64 %181
  %183 = getelementptr i8, i8* %137, i64 %181
  %184 = bitcast i8* %183 to <16 x i8>*
  %185 = load <16 x i8>, <16 x i8>* %184, align 1, !alias.scope !15
  %186 = getelementptr i8, i8* %183, i64 16
  %187 = bitcast i8* %186 to <16 x i8>*
  %188 = load <16 x i8>, <16 x i8>* %187, align 1, !alias.scope !15
  %189 = bitcast i8* %182 to <16 x i8>*
  store <16 x i8> %185, <16 x i8>* %189, align 1, !alias.scope !18, !noalias !15
  %190 = getelementptr i8, i8* %182, i64 16
  %191 = bitcast i8* %190 to <16 x i8>*
  store <16 x i8> %188, <16 x i8>* %191, align 1, !alias.scope !18, !noalias !15
  %192 = or i64 %169, 64
  %193 = getelementptr i8, i8* %146, i64 %192
  %194 = getelementptr i8, i8* %137, i64 %192
  %195 = bitcast i8* %194 to <16 x i8>*
  %196 = load <16 x i8>, <16 x i8>* %195, align 1, !alias.scope !15
  %197 = getelementptr i8, i8* %194, i64 16
  %198 = bitcast i8* %197 to <16 x i8>*
  %199 = load <16 x i8>, <16 x i8>* %198, align 1, !alias.scope !15
  %200 = bitcast i8* %193 to <16 x i8>*
  store <16 x i8> %196, <16 x i8>* %200, align 1, !alias.scope !18, !noalias !15
  %201 = getelementptr i8, i8* %193, i64 16
  %202 = bitcast i8* %201 to <16 x i8>*
  store <16 x i8> %199, <16 x i8>* %202, align 1, !alias.scope !18, !noalias !15
  %203 = or i64 %169, 96
  %204 = getelementptr i8, i8* %146, i64 %203
  %205 = getelementptr i8, i8* %137, i64 %203
  %206 = bitcast i8* %205 to <16 x i8>*
  %207 = load <16 x i8>, <16 x i8>* %206, align 1, !alias.scope !15
  %208 = getelementptr i8, i8* %205, i64 16
  %209 = bitcast i8* %208 to <16 x i8>*
  %210 = load <16 x i8>, <16 x i8>* %209, align 1, !alias.scope !15
  %211 = bitcast i8* %204 to <16 x i8>*
  store <16 x i8> %207, <16 x i8>* %211, align 1, !alias.scope !18, !noalias !15
  %212 = getelementptr i8, i8* %204, i64 16
  %213 = bitcast i8* %212 to <16 x i8>*
  store <16 x i8> %210, <16 x i8>* %213, align 1, !alias.scope !18, !noalias !15
  %214 = add i64 %169, 128
  %215 = add i64 %170, -4
  %216 = icmp eq i64 %215, 0
  br i1 %216, label %217, label %168, !llvm.loop !20

217:                                              ; preds = %168, %157
  %218 = phi i64 [ 0, %157 ], [ %214, %168 ]
  %219 = icmp eq i64 %164, 0
  br i1 %219, label %236, label %220

220:                                              ; preds = %217, %220
  %221 = phi i64 [ %233, %220 ], [ %218, %217 ]
  %222 = phi i64 [ %234, %220 ], [ %164, %217 ]
  %223 = getelementptr i8, i8* %146, i64 %221
  %224 = getelementptr i8, i8* %137, i64 %221
  %225 = bitcast i8* %224 to <16 x i8>*
  %226 = load <16 x i8>, <16 x i8>* %225, align 1, !alias.scope !15
  %227 = getelementptr i8, i8* %224, i64 16
  %228 = bitcast i8* %227 to <16 x i8>*
  %229 = load <16 x i8>, <16 x i8>* %228, align 1, !alias.scope !15
  %230 = bitcast i8* %223 to <16 x i8>*
  store <16 x i8> %226, <16 x i8>* %230, align 1, !alias.scope !18, !noalias !15
  %231 = getelementptr i8, i8* %223, i64 16
  %232 = bitcast i8* %231 to <16 x i8>*
  store <16 x i8> %229, <16 x i8>* %232, align 1, !alias.scope !18, !noalias !15
  %233 = add i64 %221, 32
  %234 = add i64 %222, -1
  %235 = icmp eq i64 %234, 0
  br i1 %235, label %236, label %220, !llvm.loop !22

236:                                              ; preds = %220, %217
  %237 = icmp eq i64 %138, %158
  br i1 %237, label %248, label %238

238:                                              ; preds = %236, %152, %145
  %239 = phi i8* [ %146, %152 ], [ %146, %145 ], [ %159, %236 ]
  %240 = phi i8* [ %137, %152 ], [ %137, %145 ], [ %160, %236 ]
  br label %241

241:                                              ; preds = %238, %241
  %242 = phi i8* [ %246, %241 ], [ %239, %238 ]
  %243 = phi i8* [ %245, %241 ], [ %240, %238 ]
  %244 = load i8, i8* %243, align 1
  store i8 %244, i8* %242, align 1
  %245 = getelementptr inbounds i8, i8* %243, i64 1
  %246 = getelementptr inbounds i8, i8* %242, i64 1
  %247 = icmp eq i8* %245, %139
  br i1 %247, label %248, label %241, !llvm.loop !24

248:                                              ; preds = %241, %236
  %249 = phi i8* [ %159, %236 ], [ %246, %241 ]
  %250 = bitcast i8** %147 to i64*
  %251 = ptrtoint i8* %249 to i64
  store i64 %251, i64* %250, align 8
  br label %252

252:                                              ; preds = %248, %133
  %253 = bitcast %"class.base::OnceCallback"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %253) #12
  %254 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %17, i64 0, i32 0, i32 0, i32 0
  %255 = bitcast %"class.base::OnceCallback"* %17 to i64*
  %256 = load i64, i64* %255, align 8
  %257 = bitcast %"class.base::OnceCallback"* %7 to i64*
  store i64 %256, i64* %257, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %254, align 8
  %258 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  %259 = inttoptr i64 %256 to %"class.base::internal::BindStateBase"*
  %260 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %259, i64 0, i32 1
  %261 = bitcast void ()** %260 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector"*)**
  %262 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector"*)** %261, align 8
  call void %262(%"class.base::internal::BindStateBase"* %259, %"class.std::__1::vector"* nonnull dereferenceable(24) %12) #12
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %258) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %253) #12
  %263 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 0
  %264 = load i8*, i8** %263, align 8
  %265 = icmp eq i8* %264, null
  br i1 %265, label %270, label %266

266:                                              ; preds = %252
  %267 = ptrtoint i8* %264 to i64
  %268 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 1
  %269 = bitcast i8** %268 to i64*
  store i64 %267, i64* %269, align 8
  call void @_ZdlPv(i8* nonnull %264) #11
  br label %270

270:                                              ; preds = %266, %252
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %117) #12
  br label %314

271:                                              ; preds = %125, %116
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %117) #12
  br label %272

272:                                              ; preds = %271, %98
  %273 = bitcast %"class.base::Location"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %273) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %13, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 299) #12
  %274 = call i8* @_Znwm(i64 144) #11, !noalias !25
  %275 = bitcast i8* %274 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %275, void ()* bitcast (void (%"class.std::__1::vector"*, %"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFNSt3__16vectorIhNS3_9allocatorIhEEEEN10extensions17ExtensionResourceEEJS9_EEEFS7_vEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFNSt3__16vectorIhNS2_9allocatorIhEEEEN10extensions17ExtensionResourceEEJS8_EE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !25
  %276 = getelementptr inbounds i8, i8* %274, i64 32
  %277 = bitcast i8* %276 to i64*
  store i64 ptrtoint (void (%"class.std::__1::vector"*, %"class.extensions::ExtensionResource"*)* @_ZN12_GLOBAL__N_126CompressedDataFromResourceEN10extensions17ExtensionResourceE to i64), i64* %277, align 8, !noalias !25
  %278 = getelementptr inbounds i8, i8* %274, i64 40
  %279 = bitcast i8* %278 to %"class.extensions::ExtensionResource"*
  call void @_ZN10extensions17ExtensionResourceC1EOS0_(%"class.extensions::ExtensionResource"* %279, %"class.extensions::ExtensionResource"* nonnull dereferenceable(104) %10) #12, !noalias !25
  %280 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %17, i64 0, i32 0, i32 0, i32 0
  %281 = bitcast %"class.base::OnceCallback"* %17 to i64*
  %282 = load i64, i64* %281, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %280, align 8
  %283 = bitcast %"class.base::OnceCallback.296"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %283) #12
  %284 = bitcast %"class.base::OnceCallback.296"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %284) #12
  %285 = call i8* @_Znwm(i64 8) #11
  %286 = bitcast i8* %285 to i64*
  store i64 0, i64* %286, align 8
  %287 = ptrtoint i8* %285 to i64
  %288 = call i8* @_Znwm(i64 56) #11, !noalias !30
  %289 = bitcast i8* %288 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %289, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFNSt3__16vectorIhNS4_9allocatorIhEEEEvEEEPNS4_10unique_ptrIS8_NS4_14default_deleteIS8_EEEEEJSA_SF_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFNSt3__16vectorIhNS3_9allocatorIhEEEEvEEEPNS3_10unique_ptrIS7_NS3_14default_deleteIS7_EEEEEJS9_SE_EE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !30
  %290 = getelementptr inbounds i8, i8* %288, i64 32
  %291 = bitcast i8* %290 to i64*
  store i64 ptrtoint (void (%"class.base::OnceCallback.479"*, %"class.std::__1::unique_ptr.480"*)* @_ZN4base8internal20ReturnAsParamAdapterINSt3__16vectorIhNS2_9allocatorIhEEEEEEvNS_12OnceCallbackIFT_vEEEPNS2_10unique_ptrIS8_NS2_14default_deleteIS8_EEEE to i64), i64* %291, align 8, !noalias !30
  %292 = getelementptr inbounds i8, i8* %288, i64 40
  %293 = getelementptr inbounds %"class.base::OnceCallback.479", %"class.base::OnceCallback.479"* %14, i64 0, i32 0, i32 0, i32 0
  %294 = ptrtoint i8* %274 to i64
  %295 = bitcast i8* %292 to i64*
  store i64 %294, i64* %295, align 8, !noalias !30
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %293, align 8, !noalias !30
  %296 = getelementptr inbounds i8, i8* %288, i64 48
  %297 = bitcast i8* %296 to i64*
  store i64 %287, i64* %297, align 8, !noalias !30
  %298 = bitcast %"class.base::OnceCallback.296"* %8 to i8**
  store i8* %288, i8** %298, align 8, !alias.scope !30
  %299 = call i8* @_Znwm(i64 56) #11, !noalias !35
  %300 = bitcast i8* %299 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %300, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__16vectorIhNS4_9allocatorIhEEEEEEEPNS4_10unique_ptrIS8_NS4_14default_deleteIS8_EEEEEJSA_NS0_12OwnedWrapperISE_NSC_ISE_EEEEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__16vectorIhNS3_9allocatorIhEEEEEEEPNS3_10unique_ptrIS7_NS3_14default_deleteIS7_EEEEEJS9_NS0_12OwnedWrapperISD_NSB_ISD_EEEEEE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !35
  %301 = getelementptr inbounds i8, i8* %299, i64 32
  %302 = bitcast i8* %301 to i64*
  store i64 ptrtoint (void (%"class.base::OnceCallback"*, %"class.std::__1::unique_ptr.480"*)* @_ZN4base8internal12ReplyAdapterINSt3__16vectorIhNS2_9allocatorIhEEEES6_EEvNS_12OnceCallbackIFvT0_EEEPNS2_10unique_ptrIT_NS2_14default_deleteISC_EEEE to i64), i64* %302, align 8, !noalias !35
  %303 = getelementptr inbounds i8, i8* %299, i64 40
  %304 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %15, i64 0, i32 0, i32 0, i32 0
  %305 = bitcast i8* %303 to i64*
  store i64 %282, i64* %305, align 8, !noalias !35
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %304, align 8, !noalias !35
  %306 = getelementptr inbounds i8, i8* %299, i64 48
  %307 = bitcast i8* %306 to i64*
  store i64 %287, i64* %307, align 8, !noalias !35
  %308 = bitcast %"class.base::OnceCallback.296"* %9 to i8**
  store i8* %299, i8** %308, align 8, !alias.scope !35
  %309 = call zeroext i1 @_ZN4base10ThreadPool16PostTaskAndReplyERKNS_8LocationERKNS_10TaskTraitsENS_12OnceCallbackIFvvEEES9_(%"class.base::Location"* nonnull dereferenceable(32) %13, %"class.base::TaskTraits"* nonnull dereferenceable(15) @.ref.tmp.4, %"class.base::OnceCallback.296"* nonnull %8, %"class.base::OnceCallback.296"* nonnull %9) #12
  %310 = getelementptr inbounds %"class.base::OnceCallback.296", %"class.base::OnceCallback.296"* %9, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %310) #12
  %311 = getelementptr inbounds %"class.base::OnceCallback.296", %"class.base::OnceCallback.296"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %311) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %283) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %284) #12
  %312 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %15, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %312) #12
  %313 = getelementptr inbounds %"class.base::OnceCallback.479", %"class.base::OnceCallback.479"* %14, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %313) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %273) #12
  br label %314

314:                                              ; preds = %272, %270
  call void @_ZN10extensions17ExtensionResourceD1Ev(%"class.extensions::ExtensionResource"* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %113) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %110) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %111) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #12
  %315 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %17, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %315) #12
  call fastcc void @_ZN13scoped_refptrIN12_GLOBAL__N_119IconLoadingPipelineEED2Ev(%class.scoped_refptr.60* nonnull %18) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100) #12
  br label %343

316:                                              ; preds = %95, %90, %90
  %317 = call %"class.extensions::ImageLoader"* @_ZN10extensions11ImageLoader3GetEPN7content14BrowserContextE(%"class.content::BrowserContext"* %2) #12
  %318 = bitcast %"class.gfx::Size"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %318) #12
  %319 = load i32, i32* %42, align 8
  %320 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %19, i64 0, i32 0
  %321 = icmp sgt i32 %319, 0
  %322 = select i1 %321, i32 %319, i32 0
  store i32 %322, i32* %320, align 4
  %323 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %19, i64 0, i32 1
  store i32 %322, i32* %323, align 4
  %324 = bitcast %class.scoped_refptr.60* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %324) #12
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* nonnull %81) #12
  %325 = getelementptr inbounds %class.scoped_refptr.60, %class.scoped_refptr.60* %22, i64 0, i32 0
  %326 = call i8* @_Znwm(i64 56) #11, !noalias !40
  %327 = bitcast i8* %326 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %327, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.gfx::ImageSkia"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN12_GLOBAL__N_119IconLoadingPipelineEFvN3gfx9ImageSkiaEEJ13scoped_refptrIS4_EEEEFvS6_EE7RunOnceEPNS0_13BindStateBaseEOS6_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN12_GLOBAL__N_119IconLoadingPipelineEFvN3gfx9ImageSkiaEEJ13scoped_refptrIS3_EEE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !40
  %328 = getelementptr inbounds i8, i8* %326, i64 32
  %329 = bitcast i8* %328 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.(anonymous namespace)::IconLoadingPipeline"*, %"class.gfx::ImageSkia"*)* @_ZN12_GLOBAL__N_119IconLoadingPipeline28MaybeApplyEffectsAndCompleteEN3gfx9ImageSkiaE to i64), i64 0>, <2 x i64>* %329, align 8, !noalias !40
  %330 = getelementptr inbounds i8, i8* %326, i64 48
  %331 = ptrtoint i8* %29 to i64
  %332 = bitcast i8* %330 to i64*
  store i64 %331, i64* %332, align 8, !noalias !40
  store %"class.(anonymous namespace)::IconLoadingPipeline"* null, %"class.(anonymous namespace)::IconLoadingPipeline"** %325, align 8, !noalias !40
  %333 = call i8* @_Znwm(i64 48) #11, !noalias !45
  %334 = bitcast i8* %333 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %334, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.gfx::Image"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN12_GLOBAL__N_116ImageToImageSkiaENS_12OnceCallbackIFvN3gfx9ImageSkiaEEEEE3$_1JS8_EEEFvRKNS5_5ImageEEE7RunOnceEPNS0_13BindStateBaseESD_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN12_GLOBAL__N_116ImageToImageSkiaENS_12OnceCallbackIFvN3gfx9ImageSkiaEEEEE3$_1JS7_EE7DestroyEPKNS0_13BindStateBaseE") #12, !noalias !45
  %335 = getelementptr inbounds i8, i8* %333, i64 40
  %336 = getelementptr inbounds %"class.base::OnceCallback.1", %"class.base::OnceCallback.1"* %21, i64 0, i32 0, i32 0, i32 0
  %337 = ptrtoint i8* %326 to i64
  %338 = bitcast i8* %335 to i64*
  store i64 %337, i64* %338, align 8, !noalias !45
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %336, align 8, !noalias !45
  %339 = bitcast %"class.base::OnceCallback.357"* %20 to i8**
  store i8* %333, i8** %339, align 8, !alias.scope !45
  call void @_ZN10extensions11ImageLoader32LoadImageAtEveryScaleFactorAsyncEPKNS_9ExtensionERKN3gfx4SizeEN4base12OnceCallbackIFvRKNS4_5ImageEEEE(%"class.extensions::ImageLoader"* %317, %"class.extensions::Extension"* nonnull %84, %"class.gfx::Size"* nonnull dereferenceable(8) %19, %"class.base::OnceCallback.357"* nonnull %20) #12
  %340 = getelementptr inbounds %"class.base::OnceCallback.357", %"class.base::OnceCallback.357"* %20, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %340) #12
  %341 = getelementptr inbounds %"class.base::OnceCallback.1", %"class.base::OnceCallback.1"* %21, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %341) #12
  call fastcc void @_ZN13scoped_refptrIN12_GLOBAL__N_119IconLoadingPipelineEED2Ev(%class.scoped_refptr.60* nonnull %22) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %324) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %318) #12
  br label %343

342:                                              ; preds = %90
  call fastcc void @_ZN12_GLOBAL__N_119IconLoadingPipeline32MaybeLoadFallbackOrCompleteEmptyEv(%"class.(anonymous namespace)::IconLoadingPipeline"* nonnull %30) #12
  br label %343

343:                                              ; preds = %89, %314, %316, %342
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87)
  call fastcc void @_ZN13scoped_refptrIN12_GLOBAL__N_119IconLoadingPipelineEED2Ev(%class.scoped_refptr.60* nonnull %26) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #12
  ret void
}

declare %"class.extensions::ExtensionRegistry"* @_ZN10extensions17ExtensionRegistry3GetEPN7content14BrowserContextE(%"class.content::BrowserContext"*) local_unnamed_addr #2

declare %"class.extensions::Extension"* @_ZNK10extensions17ExtensionRegistry21GetInstalledExtensionERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::ExtensionRegistry"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4apps18LoadIconFromWebAppEPN7content14BrowserContextENS_5mojom8IconTypeEiRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS_11IconEffectsEN4base12OnceCallbackIFvN4mojo9StructPtrINS3_9IconValueEEEEEE(%"class.content::BrowserContext"*, i32, i32, %"class.std::__1::basic_string"* dereferenceable(24), i32, %"class.base::OnceCallback.59"* nocapture) local_unnamed_addr #0 {
  %7 = alloca %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare", align 1
  %8 = alloca %"class.gfx::Size", align 4
  %9 = alloca %"class.std::__1::vector.551", align 8
  %10 = alloca %"class.base::OnceCallback", align 8
  %11 = alloca %class.scoped_refptr.60, align 8
  %12 = alloca %"class.std::__1::vector.531", align 8
  %13 = alloca %"class.std::__1::vector.551", align 8
  %14 = alloca %"class.gfx::Size", align 4
  %15 = alloca %"class.base::internal::flat_tree.559", align 8
  %16 = alloca %"class.base::OnceCallback.560", align 8
  %17 = alloca %class.scoped_refptr.60, align 8
  %18 = alloca %"class.base::OnceCallback.112", align 8
  %19 = alloca %"class.base::OnceCallback.59", align 8
  %20 = alloca %"class.base::OnceCallback.59", align 8
  %21 = alloca %class.scoped_refptr.60, align 8
  %22 = tail call %class.Profile* @_ZN7Profile18FromBrowserContextEPN7content14BrowserContextE(%"class.content::BrowserContext"* %0) #12
  %23 = tail call %"class.web_app::WebAppProvider"* @_ZN7web_app14WebAppProvider3GetEP7Profile(%class.Profile* %22) #12
  %24 = bitcast %class.scoped_refptr.60* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #12
  %25 = bitcast %"class.base::OnceCallback.59"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25)
  %26 = tail call i8* @_Znwm(i64 392) #11
  %27 = bitcast i8* %26 to %"class.(anonymous namespace)::IconLoadingPipeline"*
  %28 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %5, i64 0, i32 0, i32 0, i32 0
  %29 = bitcast %"class.base::OnceCallback.59"* %5 to i64*
  %30 = load i64, i64* %29, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %28, align 8
  %31 = bitcast %"class.base::OnceCallback.112"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31)
  %32 = bitcast %"class.base::OnceCallback.59"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32)
  %33 = getelementptr inbounds %"class.base::OnceCallback.112", %"class.base::OnceCallback.112"* %18, i64 0, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %20, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %34, align 8
  %35 = bitcast i8* %26 to i32*
  store i32 0, i32* %35, align 4
  %36 = getelementptr inbounds i8, i8* %26, i64 4
  %37 = bitcast i8* %36 to i32*
  store i32 %1, i32* %37, align 4
  %38 = getelementptr inbounds i8, i8* %26, i64 8
  %39 = bitcast i8* %38 to i32*
  store i32 %2, i32* %39, align 8
  %40 = getelementptr inbounds i8, i8* %26, i64 12
  %41 = bitcast i8* %40 to i32*
  store i32 0, i32* %41, align 4
  %42 = getelementptr inbounds i8, i8* %26, i64 16
  %43 = bitcast i8* %42 to float*
  store float 0.000000e+00, float* %43, align 8
  %44 = getelementptr inbounds i8, i8* %26, i64 20
  %45 = bitcast i8* %44 to float*
  store float 1.000000e+00, float* %45, align 4
  %46 = getelementptr inbounds i8, i8* %26, i64 24
  store i8 0, i8* %46, align 8
  %47 = getelementptr inbounds i8, i8* %26, i64 28
  %48 = bitcast i8* %47 to i32*
  store i32 %4, i32* %48, align 4
  %49 = getelementptr inbounds i8, i8* %26, i64 32
  %50 = bitcast i8* %49 to %class.GURL*
  tail call void @_ZN4GURLC1Ev(%class.GURL* %50) #12
  %51 = getelementptr inbounds i8, i8* %26, i64 152
  %52 = bitcast i8* %51 to %class.Profile**
  store %class.Profile* null, %class.Profile** %52, align 8
  %53 = getelementptr inbounds i8, i8* %26, i64 160
  %54 = bitcast i8* %53 to i32*
  store i32 24210, i32* %54, align 8
  %55 = getelementptr inbounds i8, i8* %26, i64 168
  %56 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %19, i64 0, i32 0, i32 0, i32 0
  %57 = bitcast i8* %55 to i64*
  store i64 %30, i64* %57, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %56, align 8
  %58 = getelementptr inbounds i8, i8* %26, i64 176
  %59 = bitcast i8* %58 to i64*
  store i64 0, i64* %59, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %33, align 8
  %60 = getelementptr inbounds i8, i8* %26, i64 184
  %61 = bitcast i8* %60 to %"class.base::CancelableTaskTracker"*
  tail call void @_ZN4base21CancelableTaskTrackerC1Ev(%"class.base::CancelableTaskTracker"* %61) #12
  %62 = getelementptr inbounds i8, i8* %26, i64 312
  %63 = bitcast i8* %62 to %"class.base::SequencedTaskRunner"**
  store %"class.base::SequencedTaskRunner"* null, %"class.base::SequencedTaskRunner"** %63, align 8
  %64 = getelementptr inbounds i8, i8* %26, i64 320
  %65 = bitcast i8* %64 to %"class.gfx::ImageSkia"*
  tail call void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"* %65) #12
  %66 = getelementptr inbounds i8, i8* %26, i64 328
  %67 = bitcast i8* %66 to %"class.gfx::ImageSkia"*
  tail call void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"* %67) #12
  %68 = getelementptr inbounds i8, i8* %26, i64 336
  store i8 0, i8* %68, align 8
  %69 = getelementptr inbounds i8, i8* %26, i64 337
  store i8 0, i8* %69, align 1
  %70 = getelementptr inbounds i8, i8* %26, i64 344
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 48, i1 false) #12
  %71 = tail call i32 @_ZN9apps_util14ConvertDipToPxEib(i32 %2, i1 zeroext true) #12
  store i32 %71, i32* %41, align 4
  %72 = sitofp i32 %71 to float
  %73 = sitofp i32 %2 to float
  %74 = fdiv float %72, %73
  store float %74, float* %43, align 8
  %75 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %19, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %75) #12
  %76 = getelementptr inbounds %"class.base::OnceCallback.112", %"class.base::OnceCallback.112"* %18, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %76) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32)
  %77 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %20, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %77) #12
  %78 = bitcast i8* %26 to %"class.base::subtle::RefCountedBase"*
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* nonnull %78) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25)
  %79 = bitcast %class.scoped_refptr.60* %21 to i8**
  store i8* %26, i8** %79, align 8
  %80 = bitcast %"class.web_app::WebAppProvider"* %23 to %"class.web_app::AppRegistrar"* (%"class.web_app::WebAppProvider"*)***
  %81 = load %"class.web_app::AppRegistrar"* (%"class.web_app::WebAppProvider"*)**, %"class.web_app::AppRegistrar"* (%"class.web_app::WebAppProvider"*)*** %80, align 8
  %82 = getelementptr inbounds %"class.web_app::AppRegistrar"* (%"class.web_app::WebAppProvider"*)*, %"class.web_app::AppRegistrar"* (%"class.web_app::WebAppProvider"*)** %81, i64 3
  %83 = load %"class.web_app::AppRegistrar"* (%"class.web_app::WebAppProvider"*)*, %"class.web_app::AppRegistrar"* (%"class.web_app::WebAppProvider"*)** %82, align 8
  %84 = call dereferenceable(80) %"class.web_app::AppRegistrar"* %83(%"class.web_app::WebAppProvider"* %23) #12
  %85 = bitcast %"class.web_app::AppRegistrar"* %84 to %class.GURL* (%"class.web_app::AppRegistrar"*, %"class.std::__1::basic_string"*)***
  %86 = load %class.GURL* (%"class.web_app::AppRegistrar"*, %"class.std::__1::basic_string"*)**, %class.GURL* (%"class.web_app::AppRegistrar"*, %"class.std::__1::basic_string"*)*** %85, align 8
  %87 = getelementptr inbounds %class.GURL* (%"class.web_app::AppRegistrar"*, %"class.std::__1::basic_string"*)*, %class.GURL* (%"class.web_app::AppRegistrar"*, %"class.std::__1::basic_string"*)** %86, i64 17
  %88 = load %class.GURL* (%"class.web_app::AppRegistrar"*, %"class.std::__1::basic_string"*)*, %class.GURL* (%"class.web_app::AppRegistrar"*, %"class.std::__1::basic_string"*)** %87, align 8
  %89 = call dereferenceable(120) %class.GURL* %88(%"class.web_app::AppRegistrar"* %84, %"class.std::__1::basic_string"* dereferenceable(24) %3) #12
  %90 = bitcast %"class.web_app::WebAppProvider"* %23 to %"class.web_app::AppIconManager"* (%"class.web_app::WebAppProvider"*)***
  %91 = load %"class.web_app::AppIconManager"* (%"class.web_app::WebAppProvider"*)**, %"class.web_app::AppIconManager"* (%"class.web_app::WebAppProvider"*)*** %90, align 8
  %92 = getelementptr inbounds %"class.web_app::AppIconManager"* (%"class.web_app::WebAppProvider"*)*, %"class.web_app::AppIconManager"* (%"class.web_app::WebAppProvider"*)** %91, i64 12
  %93 = load %"class.web_app::AppIconManager"* (%"class.web_app::WebAppProvider"*)*, %"class.web_app::AppIconManager"* (%"class.web_app::WebAppProvider"*)** %92, align 8
  %94 = call dereferenceable(8) %"class.web_app::AppIconManager"* %93(%"class.web_app::WebAppProvider"* %23) #12
  %95 = call %class.Profile* @_ZN7Profile18FromBrowserContextEPN7content14BrowserContextE(%"class.content::BrowserContext"* %0) #12
  %96 = bitcast %"class.base::OnceCallback"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96)
  %97 = bitcast %"class.base::OnceCallback.560"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97)
  %98 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %50, %class.GURL* dereferenceable(120) %89) #12
  store %class.Profile* %95, %class.Profile** %52, align 8
  %99 = bitcast i8* %42 to i32*
  %100 = load i32, i32* %99, align 8
  %101 = bitcast i8* %44 to i32*
  store i32 %100, i32* %101, align 4
  %102 = load i32, i32* %39, align 8
  %103 = call dereferenceable(24) %"class.std::__1::vector.538"* @_ZN2ui24GetSupportedScaleFactorsEv() #12
  %104 = getelementptr inbounds %"class.std::__1::vector.538", %"class.std::__1::vector.538"* %103, i64 0, i32 0, i32 0
  %105 = load i32*, i32** %104, align 8
  %106 = getelementptr inbounds %"class.std::__1::vector.538", %"class.std::__1::vector.538"* %103, i64 0, i32 0, i32 1
  %107 = load i32*, i32** %106, align 8
  %108 = icmp eq i32* %105, %107
  br i1 %108, label %115, label %109

109:                                              ; preds = %6
  %110 = bitcast %"class.gfx::Size"* %8 to i8*
  %111 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %8, i64 0, i32 0
  %112 = icmp sgt i32 %102, 0
  %113 = select i1 %112, i32 %102, i32 0
  %114 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %8, i64 0, i32 1
  br label %138

115:                                              ; preds = %138, %6
  %116 = phi i32 [ 0, %6 ], [ %146, %138 ]
  %117 = bitcast %"class.std::__1::vector.551"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %117) #12
  %118 = call i8* @_Znwm(i64 4) #11
  %119 = getelementptr inbounds %"class.std::__1::vector.551", %"class.std::__1::vector.551"* %9, i64 0, i32 0, i32 1
  %120 = bitcast %"class.std::__1::vector.551"* %9 to i8**
  store i8* %118, i8** %120, align 8
  %121 = getelementptr inbounds i8, i8* %118, i64 4
  %122 = getelementptr inbounds %"class.std::__1::vector.551", %"class.std::__1::vector.551"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %123 = bitcast i32** %122 to i8**
  store i8* %121, i8** %123, align 8
  %124 = bitcast i32** %119 to i64*
  %125 = bitcast i8* %118 to i32*
  store i32 0, i32* %125, align 4
  %126 = ptrtoint i8* %121 to i64
  store i64 %126, i64* %124, align 8
  %127 = bitcast %"class.web_app::AppIconManager"* %94 to i1 (%"class.web_app::AppIconManager"*, %"class.std::__1::basic_string"*, %"class.std::__1::vector.551"*, i32)***
  %128 = load i1 (%"class.web_app::AppIconManager"*, %"class.std::__1::basic_string"*, %"class.std::__1::vector.551"*, i32)**, i1 (%"class.web_app::AppIconManager"*, %"class.std::__1::basic_string"*, %"class.std::__1::vector.551"*, i32)*** %127, align 8
  %129 = getelementptr inbounds i1 (%"class.web_app::AppIconManager"*, %"class.std::__1::basic_string"*, %"class.std::__1::vector.551"*, i32)*, i1 (%"class.web_app::AppIconManager"*, %"class.std::__1::basic_string"*, %"class.std::__1::vector.551"*, i32)** %128, i64 7
  %130 = load i1 (%"class.web_app::AppIconManager"*, %"class.std::__1::basic_string"*, %"class.std::__1::vector.551"*, i32)*, i1 (%"class.web_app::AppIconManager"*, %"class.std::__1::basic_string"*, %"class.std::__1::vector.551"*, i32)** %129, align 8
  %131 = call zeroext i1 %130(%"class.web_app::AppIconManager"* %94, %"class.std::__1::basic_string"* dereferenceable(24) %3, %"class.std::__1::vector.551"* nonnull dereferenceable(24) %9, i32 %116) #12
  %132 = getelementptr inbounds %"class.std::__1::vector.551", %"class.std::__1::vector.551"* %9, i64 0, i32 0, i32 0
  %133 = load i32*, i32** %132, align 8
  %134 = icmp eq i32* %133, null
  br i1 %134, label %149, label %135

135:                                              ; preds = %115
  %136 = ptrtoint i32* %133 to i64
  store i64 %136, i64* %124, align 8
  %137 = bitcast i32* %133 to i8*
  call void @_ZdlPv(i8* %137) #11
  br label %149

138:                                              ; preds = %138, %109
  %139 = phi i32 [ 0, %109 ], [ %146, %138 ]
  %140 = phi i32* [ %105, %109 ], [ %147, %138 ]
  %141 = load i32, i32* %140, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #12
  store i32 %113, i32* %111, align 4
  store i32 %113, i32* %114, align 4
  %142 = call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %141) #12
  %143 = call i64 @_ZN3gfx18ScaleToFlooredSizeERKNS_4SizeEf(%"class.gfx::Size"* nonnull dereferenceable(8) %8, float %142) #12
  %144 = trunc i64 %143 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110) #12
  %145 = icmp slt i32 %139, %144
  %146 = select i1 %145, i32 %144, i32 %139
  %147 = getelementptr inbounds i32, i32* %140, i64 1
  %148 = icmp eq i32* %147, %107
  br i1 %148, label %115, label %138

149:                                              ; preds = %135, %115
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %117) #12
  br i1 %131, label %151, label %150

150:                                              ; preds = %149
  call fastcc void @_ZN12_GLOBAL__N_119IconLoadingPipeline32MaybeLoadFallbackOrCompleteEmptyEv(%"class.(anonymous namespace)::IconLoadingPipeline"* nonnull %27) #12
  br label %441

151:                                              ; preds = %149
  %152 = load i32, i32* %37, align 4
  switch i32 %152, label %441 [
    i32 2, label %153
    i32 1, label %169
    i32 3, label %173
    i32 0, label %440
  ]

153:                                              ; preds = %151
  %154 = load i32, i32* %48, align 4
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %173

156:                                              ; preds = %153
  %157 = load i32, i32* %41, align 4
  %158 = bitcast %class.scoped_refptr.60* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %158) #12
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* nonnull %78) #12
  %159 = getelementptr inbounds %class.scoped_refptr.60, %class.scoped_refptr.60* %11, i64 0, i32 0
  %160 = call i8* @_Znwm(i64 56) #11, !noalias !52
  %161 = bitcast i8* %160 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %161, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN12_GLOBAL__N_119IconLoadingPipelineEFvNSt3__16vectorIhNS5_9allocatorIhEEEEEJ13scoped_refptrIS4_EEEEFvS9_EE7RunOnceEPNS0_13BindStateBaseEOS9_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN12_GLOBAL__N_119IconLoadingPipelineEFvNSt3__16vectorIhNS4_9allocatorIhEEEEEJ13scoped_refptrIS3_EEE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !52
  %162 = getelementptr inbounds i8, i8* %160, i64 32
  %163 = bitcast i8* %162 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.(anonymous namespace)::IconLoadingPipeline"*, %"class.std::__1::vector"*)* @_ZN12_GLOBAL__N_119IconLoadingPipeline22CompleteWithCompressedENSt3__16vectorIhNS1_9allocatorIhEEEE to i64), i64 0>, <2 x i64>* %163, align 8, !noalias !52
  %164 = getelementptr inbounds i8, i8* %160, i64 48
  %165 = ptrtoint i8* %26 to i64
  %166 = bitcast i8* %164 to i64*
  store i64 %165, i64* %166, align 8, !noalias !52
  store %"class.(anonymous namespace)::IconLoadingPipeline"* null, %"class.(anonymous namespace)::IconLoadingPipeline"** %159, align 8, !noalias !52
  %167 = bitcast %"class.base::OnceCallback"* %10 to i8**
  store i8* %160, i8** %167, align 8, !alias.scope !52
  call void @_ZNK7web_app14AppIconManager29ReadSmallestCompressedIconAnyERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiN4base12OnceCallbackIFvNS1_6vectorIhNS5_IhEEEEEEE(%"class.web_app::AppIconManager"* %94, %"class.std::__1::basic_string"* dereferenceable(24) %3, i32 %157, %"class.base::OnceCallback"* nonnull %10) #12
  %168 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %10, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %168) #12
  call fastcc void @_ZN13scoped_refptrIN12_GLOBAL__N_119IconLoadingPipelineEED2Ev(%class.scoped_refptr.60* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %158) #12
  br label %441

169:                                              ; preds = %151
  %170 = load i32, i32* %48, align 4
  %171 = and i32 %170, -194
  %172 = or i32 %171, 1
  store i32 %172, i32* %48, align 4
  br label %173

173:                                              ; preds = %169, %153, %151
  %174 = bitcast %"class.std::__1::vector.531"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %174) #12
  %175 = getelementptr inbounds %"class.std::__1::vector.531", %"class.std::__1::vector.531"* %12, i64 0, i32 0, i32 0
  %176 = getelementptr inbounds %"class.std::__1::vector.531", %"class.std::__1::vector.531"* %12, i64 0, i32 0, i32 1
  %177 = getelementptr inbounds %"class.std::__1::vector.531", %"class.std::__1::vector.531"* %12, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %174, i8 0, i64 24, i1 false) #12
  %178 = call dereferenceable(24) %"class.std::__1::vector.538"* @_ZN2ui24GetSupportedScaleFactorsEv() #12
  %179 = getelementptr inbounds %"class.std::__1::vector.538", %"class.std::__1::vector.538"* %178, i64 0, i32 0, i32 0
  %180 = load i32*, i32** %179, align 8
  %181 = getelementptr inbounds %"class.std::__1::vector.538", %"class.std::__1::vector.538"* %178, i64 0, i32 0, i32 1
  %182 = load i32*, i32** %181, align 8
  %183 = icmp eq i32* %180, %182
  br i1 %183, label %184, label %186

184:                                              ; preds = %173
  %185 = bitcast i32** %176 to i64*
  br label %205

186:                                              ; preds = %173
  %187 = bitcast %"class.std::__1::vector.551"* %13 to i8*
  %188 = getelementptr inbounds %"class.std::__1::vector.551", %"class.std::__1::vector.551"* %13, i64 0, i32 0, i32 1
  %189 = bitcast %"class.std::__1::vector.551"* %13 to i8**
  %190 = getelementptr inbounds %"class.std::__1::vector.551", %"class.std::__1::vector.551"* %13, i64 0, i32 0, i32 2, i32 0, i32 0
  %191 = bitcast i32** %190 to i8**
  %192 = bitcast i32** %188 to i64*
  %193 = bitcast %"class.gfx::Size"* %14 to i8*
  %194 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %14, i64 0, i32 0
  %195 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %14, i64 0, i32 1
  %196 = bitcast %"class.web_app::AppIconManager"* %94 to { i64, i32 } (%"class.web_app::AppIconManager"*, %"class.std::__1::basic_string"*, %"class.std::__1::vector.551"*, i32)***
  %197 = getelementptr inbounds %"class.std::__1::vector.551", %"class.std::__1::vector.551"* %13, i64 0, i32 0, i32 0
  %198 = bitcast i32** %176 to i64*
  %199 = bitcast %"class.std::__1::vector.531"* %12 to i64*
  %200 = bitcast i32** %177 to i64*
  br label %344

201:                                              ; preds = %437
  %202 = load i64, i64* %198, align 8
  %203 = load i64, i64* %199, align 8
  %204 = inttoptr i64 %203 to i32*
  br label %205

205:                                              ; preds = %201, %184
  %206 = phi i64* [ %185, %184 ], [ %198, %201 ]
  %207 = phi i32* [ null, %184 ], [ %204, %201 ]
  %208 = phi i64 [ 0, %184 ], [ %203, %201 ]
  %209 = phi i64 [ 0, %184 ], [ %202, %201 ]
  %210 = bitcast %"class.base::internal::flat_tree.559"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %210) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %210, i8 0, i64 24, i1 false) #12
  %211 = sub i64 %209, %208
  %212 = ashr exact i64 %211, 2
  %213 = icmp eq i64 %211, 0
  br i1 %213, label %239, label %214

214:                                              ; preds = %205
  %215 = icmp ugt i64 %212, 4611686018427387903
  br i1 %215, label %216, label %218

216:                                              ; preds = %214
  %217 = bitcast %"class.base::internal::flat_tree.559"* %15 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %217) #13
  unreachable

218:                                              ; preds = %214
  %219 = call i8* @_Znwm(i64 %211) #11
  %220 = bitcast i8* %219 to i32*
  %221 = getelementptr inbounds %"class.base::internal::flat_tree.559", %"class.base::internal::flat_tree.559"* %15, i64 0, i32 0, i32 0, i32 1
  %222 = bitcast i32** %221 to i8**
  store i8* %219, i8** %222, align 8
  %223 = bitcast %"class.base::internal::flat_tree.559"* %15 to i8**
  store i8* %219, i8** %223, align 8
  %224 = getelementptr inbounds i32, i32* %220, i64 %212
  %225 = getelementptr inbounds %"class.base::internal::flat_tree.559", %"class.base::internal::flat_tree.559"* %15, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i32* %224, i32** %225, align 8
  %226 = bitcast i32** %221 to i64*
  %227 = ptrtoint i8* %219 to i64
  %228 = ptrtoint i32* %207 to i64
  %229 = sub i64 %209, %228
  %230 = icmp sgt i64 %229, 0
  br i1 %230, label %231, label %236

231:                                              ; preds = %218
  %232 = lshr exact i64 %229, 2
  %233 = bitcast i32* %207 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %219, i8* align 4 %233, i64 %229, i1 false) #12
  %234 = getelementptr inbounds i32, i32* %220, i64 %232
  %235 = ptrtoint i32* %234 to i64
  br label %236

236:                                              ; preds = %231, %218
  %237 = phi i64 [ %235, %231 ], [ %227, %218 ]
  store i64 %237, i64* %226, align 8
  %238 = inttoptr i64 %237 to i32*
  br label %239

239:                                              ; preds = %236, %205
  %240 = phi i32* [ null, %205 ], [ %238, %236 ]
  %241 = phi i32* [ null, %205 ], [ %220, %236 ]
  %242 = getelementptr inbounds %"class.base::internal::flat_tree.559", %"class.base::internal::flat_tree.559"* %15, i64 0, i32 0, i32 0, i32 0
  %243 = getelementptr inbounds %"class.base::internal::flat_tree.559", %"class.base::internal::flat_tree.559"* %15, i64 0, i32 0, i32 0, i32 1
  %244 = ptrtoint i32* %240 to i64
  %245 = getelementptr inbounds %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare", %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %245) #12
  %246 = ptrtoint i32* %241 to i64
  %247 = sub i64 %244, %246
  %248 = ashr exact i64 %247, 2
  %249 = icmp sgt i64 %247, 512
  br i1 %249, label %250, label %261

250:                                              ; preds = %239
  %251 = icmp slt i64 %248, 2305843009213693951
  %252 = select i1 %251, i64 %248, i64 2305843009213693951
  br label %253

253:                                              ; preds = %258, %250
  %254 = phi i64 [ %259, %258 ], [ %252, %250 ]
  %255 = shl i64 %254, 2
  %256 = call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %255, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #12
  %257 = icmp eq i8* %256, null
  br i1 %257, label %258, label %262

258:                                              ; preds = %253
  %259 = lshr i64 %254, 1
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %253

261:                                              ; preds = %258, %239
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i32* %241, i32* %240, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* nonnull dereferenceable(1) %7, i64 %248, i32* null, i64 0) #12
  br label %264

262:                                              ; preds = %253
  %263 = bitcast i8* %256 to i32*
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i32* %241, i32* %240, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* nonnull dereferenceable(1) %7, i64 %248, i32* nonnull %263, i64 %254) #12
  call void @_ZdlPv(i8* nonnull %256) #11
  br label %264

264:                                              ; preds = %262, %261
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %245) #12
  %265 = icmp eq i32* %241, %240
  br i1 %265, label %315, label %266

266:                                              ; preds = %264, %270
  %267 = phi i32* [ %268, %270 ], [ %241, %264 ]
  %268 = getelementptr inbounds i32, i32* %267, i64 1
  %269 = icmp eq i32* %268, %240
  br i1 %269, label %315, label %270

270:                                              ; preds = %266
  %271 = load i32, i32* %267, align 4
  %272 = load i32, i32* %268, align 4
  %273 = icmp slt i32 %271, %272
  br i1 %273, label %266, label %274

274:                                              ; preds = %270
  %275 = icmp eq i32* %267, %240
  br i1 %275, label %315, label %276

276:                                              ; preds = %274
  %277 = getelementptr inbounds i32, i32* %267, i64 2
  %278 = icmp eq i32* %277, %240
  br i1 %278, label %300, label %279

279:                                              ; preds = %276
  %280 = ptrtoint i32* %267 to i64
  br label %281

281:                                              ; preds = %296, %279
  %282 = phi i32 [ %297, %296 ], [ %271, %279 ]
  %283 = phi i32* [ %295, %296 ], [ %267, %279 ]
  %284 = phi i32* [ %293, %296 ], [ %277, %279 ]
  %285 = phi i64 [ %292, %296 ], [ %280, %279 ]
  %286 = load i32, i32* %284, align 4
  %287 = icmp slt i32 %282, %286
  br i1 %287, label %288, label %291

288:                                              ; preds = %281
  %289 = getelementptr inbounds i32, i32* %283, i64 1
  %290 = ptrtoint i32* %289 to i64
  store i32 %286, i32* %289, align 4
  br label %291

291:                                              ; preds = %288, %281
  %292 = phi i64 [ %285, %281 ], [ %290, %288 ]
  %293 = getelementptr inbounds i32, i32* %284, i64 1
  %294 = icmp eq i32* %293, %240
  %295 = inttoptr i64 %292 to i32*
  br i1 %294, label %298, label %296

296:                                              ; preds = %291
  %297 = load i32, i32* %295, align 4
  br label %281

298:                                              ; preds = %291
  %299 = inttoptr i64 %292 to i32*
  br label %300

300:                                              ; preds = %298, %276
  %301 = phi i32* [ %267, %276 ], [ %299, %298 ]
  %302 = getelementptr inbounds i32, i32* %301, i64 1
  %303 = icmp eq i32* %302, %240
  br i1 %303, label %315, label %304

304:                                              ; preds = %300
  %305 = bitcast i32** %243 to i64*
  %306 = load i64, i64* %305, align 8
  %307 = sub i64 %306, %244
  %308 = ashr exact i64 %307, 2
  %309 = icmp eq i64 %307, 0
  br i1 %309, label %313, label %310

310:                                              ; preds = %304
  %311 = bitcast i32* %302 to i8*
  %312 = bitcast i32* %240 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %311, i8* align 4 %312, i64 %307, i1 false) #12
  br label %313

313:                                              ; preds = %310, %304
  %314 = getelementptr inbounds i32, i32* %302, i64 %308
  store i32* %314, i32** %243, align 8
  br label %315

315:                                              ; preds = %266, %313, %300, %274, %264
  %316 = bitcast %class.scoped_refptr.60* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %316) #12
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* nonnull %78) #12
  %317 = getelementptr inbounds %class.scoped_refptr.60, %class.scoped_refptr.60* %17, i64 0, i32 0
  %318 = call i8* @_Znwm(i64 56) #11, !noalias !57
  %319 = bitcast i8* %318 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %319, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.std::__1::map.561"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN12_GLOBAL__N_119IconLoadingPipelineEFvNSt3__13mapIi8SkBitmapNS5_4lessIiEENS5_9allocatorINS5_4pairIKiS7_EEEEEEEJ13scoped_refptrIS4_EEEEFvSF_EE7RunOnceEPNS0_13BindStateBaseEOSF_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN12_GLOBAL__N_119IconLoadingPipelineEFvNSt3__13mapIi8SkBitmapNS4_4lessIiEENS4_9allocatorINS4_4pairIKiS6_EEEEEEEJ13scoped_refptrIS3_EEE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !57
  %320 = getelementptr inbounds i8, i8* %318, i64 32
  %321 = bitcast i8* %320 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.(anonymous namespace)::IconLoadingPipeline"*, %"class.std::__1::map.561"*)* @_ZN12_GLOBAL__N_119IconLoadingPipeline16OnReadWebAppIconENSt3__13mapIi8SkBitmapNS1_4lessIiEENS1_9allocatorINS1_4pairIKiS3_EEEEEE to i64), i64 0>, <2 x i64>* %321, align 8, !noalias !57
  %322 = getelementptr inbounds i8, i8* %318, i64 48
  %323 = ptrtoint i8* %26 to i64
  %324 = bitcast i8* %322 to i64*
  store i64 %323, i64* %324, align 8, !noalias !57
  store %"class.(anonymous namespace)::IconLoadingPipeline"* null, %"class.(anonymous namespace)::IconLoadingPipeline"** %317, align 8, !noalias !57
  %325 = bitcast %"class.base::OnceCallback.560"* %16 to i8**
  store i8* %318, i8** %325, align 8, !alias.scope !57
  %326 = bitcast %"class.web_app::AppIconManager"* %94 to void (%"class.web_app::AppIconManager"*, %"class.std::__1::basic_string"*, i32, %"class.base::internal::flat_tree.559"*, %"class.base::OnceCallback.560"*)***
  %327 = load void (%"class.web_app::AppIconManager"*, %"class.std::__1::basic_string"*, i32, %"class.base::internal::flat_tree.559"*, %"class.base::OnceCallback.560"*)**, void (%"class.web_app::AppIconManager"*, %"class.std::__1::basic_string"*, i32, %"class.base::internal::flat_tree.559"*, %"class.base::OnceCallback.560"*)*** %326, align 8
  %328 = getelementptr inbounds void (%"class.web_app::AppIconManager"*, %"class.std::__1::basic_string"*, i32, %"class.base::internal::flat_tree.559"*, %"class.base::OnceCallback.560"*)*, void (%"class.web_app::AppIconManager"*, %"class.std::__1::basic_string"*, i32, %"class.base::internal::flat_tree.559"*, %"class.base::OnceCallback.560"*)** %327, i64 8
  %329 = load void (%"class.web_app::AppIconManager"*, %"class.std::__1::basic_string"*, i32, %"class.base::internal::flat_tree.559"*, %"class.base::OnceCallback.560"*)*, void (%"class.web_app::AppIconManager"*, %"class.std::__1::basic_string"*, i32, %"class.base::internal::flat_tree.559"*, %"class.base::OnceCallback.560"*)** %328, align 8
  call void %329(%"class.web_app::AppIconManager"* %94, %"class.std::__1::basic_string"* dereferenceable(24) %3, i32 0, %"class.base::internal::flat_tree.559"* nonnull dereferenceable(24) %15, %"class.base::OnceCallback.560"* nonnull %16) #12
  %330 = getelementptr inbounds %"class.base::OnceCallback.560", %"class.base::OnceCallback.560"* %16, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %330) #12
  call fastcc void @_ZN13scoped_refptrIN12_GLOBAL__N_119IconLoadingPipelineEED2Ev(%class.scoped_refptr.60* nonnull %17) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %316) #12
  %331 = load i32*, i32** %242, align 8
  %332 = icmp eq i32* %331, null
  br i1 %332, label %337, label %333

333:                                              ; preds = %315
  %334 = ptrtoint i32* %331 to i64
  %335 = bitcast i32** %243 to i64*
  store i64 %334, i64* %335, align 8
  %336 = bitcast i32* %331 to i8*
  call void @_ZdlPv(i8* %336) #11
  br label %337

337:                                              ; preds = %333, %315
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %210) #12
  %338 = load i32*, i32** %175, align 8
  %339 = icmp eq i32* %338, null
  br i1 %339, label %343, label %340

340:                                              ; preds = %337
  %341 = ptrtoint i32* %338 to i64
  store i64 %341, i64* %206, align 8
  %342 = bitcast i32* %338 to i8*
  call void @_ZdlPv(i8* %342) #11
  br label %343

343:                                              ; preds = %340, %337
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %174) #12
  br label %441

344:                                              ; preds = %437, %186
  %345 = phi i32* [ %180, %186 ], [ %438, %437 ]
  %346 = load i32, i32* %345, align 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %187) #12
  %347 = call i8* @_Znwm(i64 4) #11
  %348 = bitcast i8* %347 to i32*
  store i8* %347, i8** %189, align 8
  %349 = getelementptr inbounds i8, i8* %347, i64 4
  store i8* %349, i8** %191, align 8
  store i32 0, i32* %348, align 4
  %350 = ptrtoint i8* %349 to i64
  store i64 %350, i64* %192, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %193) #12
  %351 = load i32, i32* %39, align 8
  %352 = icmp sgt i32 %351, 0
  %353 = select i1 %352, i32 %351, i32 0
  store i32 %353, i32* %194, align 4
  store i32 %353, i32* %195, align 4
  %354 = call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %346) #12
  %355 = call i64 @_ZN3gfx18ScaleToFlooredSizeERKNS_4SizeEf(%"class.gfx::Size"* nonnull dereferenceable(8) %14, float %354) #12
  %356 = trunc i64 %355 to i32
  %357 = load { i64, i32 } (%"class.web_app::AppIconManager"*, %"class.std::__1::basic_string"*, %"class.std::__1::vector.551"*, i32)**, { i64, i32 } (%"class.web_app::AppIconManager"*, %"class.std::__1::basic_string"*, %"class.std::__1::vector.551"*, i32)*** %196, align 8
  %358 = getelementptr inbounds { i64, i32 } (%"class.web_app::AppIconManager"*, %"class.std::__1::basic_string"*, %"class.std::__1::vector.551"*, i32)*, { i64, i32 } (%"class.web_app::AppIconManager"*, %"class.std::__1::basic_string"*, %"class.std::__1::vector.551"*, i32)** %357, i64 6
  %359 = load { i64, i32 } (%"class.web_app::AppIconManager"*, %"class.std::__1::basic_string"*, %"class.std::__1::vector.551"*, i32)*, { i64, i32 } (%"class.web_app::AppIconManager"*, %"class.std::__1::basic_string"*, %"class.std::__1::vector.551"*, i32)** %358, align 8
  %360 = call { i64, i32 } %359(%"class.web_app::AppIconManager"* %94, %"class.std::__1::basic_string"* dereferenceable(24) %3, %"class.std::__1::vector.551"* nonnull dereferenceable(24) %13, i32 %356) #12
  %361 = extractvalue { i64, i32 } %360, 0
  %362 = trunc i64 %361 to i8
  %363 = lshr i64 %361, 32
  %364 = trunc i64 %363 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %193) #12
  %365 = load i32*, i32** %197, align 8
  %366 = icmp eq i32* %365, null
  br i1 %366, label %370, label %367

367:                                              ; preds = %344
  %368 = ptrtoint i32* %365 to i64
  store i64 %368, i64* %192, align 8
  %369 = bitcast i32* %365 to i8*
  call void @_ZdlPv(i8* %369) #11
  br label %370

370:                                              ; preds = %367, %344
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %187) #12
  %371 = icmp eq i8 %362, 0
  br i1 %371, label %372, label %373, !prof !62

372:                                              ; preds = %370
  call void @llvm.trap() #12
  unreachable

373:                                              ; preds = %370
  %374 = load i32*, i32** %175, align 8
  %375 = load i32*, i32** %176, align 8
  %376 = icmp eq i32* %374, %375
  %377 = ptrtoint i32* %374 to i64
  %378 = ptrtoint i32* %375 to i64
  br i1 %376, label %386, label %379

379:                                              ; preds = %373, %383
  %380 = phi i32* [ %384, %383 ], [ %374, %373 ]
  %381 = load i32, i32* %380, align 4
  %382 = icmp eq i32 %381, %364
  br i1 %382, label %386, label %383

383:                                              ; preds = %379
  %384 = getelementptr inbounds i32, i32* %380, i64 1
  %385 = icmp eq i32* %384, %375
  br i1 %385, label %389, label %379

386:                                              ; preds = %379, %373
  %387 = phi i32* [ %374, %373 ], [ %380, %379 ]
  %388 = icmp eq i32* %387, %375
  br i1 %388, label %389, label %437

389:                                              ; preds = %383, %386
  %390 = load i32*, i32** %177, align 8
  %391 = icmp ult i32* %375, %390
  %392 = ptrtoint i32* %390 to i64
  br i1 %391, label %393, label %396

393:                                              ; preds = %389
  store i32 %364, i32* %375, align 4
  %394 = getelementptr inbounds i32, i32* %375, i64 1
  %395 = ptrtoint i32* %394 to i64
  store i64 %395, i64* %198, align 8
  br label %437

396:                                              ; preds = %389
  %397 = sub i64 %378, %377
  %398 = ashr exact i64 %397, 2
  %399 = add nsw i64 %398, 1
  %400 = icmp ugt i64 %399, 4611686018427387903
  br i1 %400, label %401, label %403

401:                                              ; preds = %396
  %402 = bitcast %"class.std::__1::vector.531"* %12 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %402) #13
  unreachable

403:                                              ; preds = %396
  %404 = sub i64 %392, %377
  %405 = ashr exact i64 %404, 2
  %406 = icmp ult i64 %405, 2305843009213693951
  br i1 %406, label %407, label %415

407:                                              ; preds = %403
  %408 = ashr exact i64 %404, 1
  %409 = icmp ult i64 %408, %399
  %410 = select i1 %409, i64 %399, i64 %408
  %411 = icmp eq i64 %410, 0
  br i1 %411, label %420, label %412

412:                                              ; preds = %407
  %413 = icmp ugt i64 %410, 4611686018427387903
  br i1 %413, label %414, label %415

414:                                              ; preds = %412
  call void @abort() #13
  unreachable

415:                                              ; preds = %412, %403
  %416 = phi i64 [ %410, %412 ], [ 4611686018427387903, %403 ]
  %417 = shl i64 %416, 2
  %418 = call i8* @_Znwm(i64 %417) #11
  %419 = bitcast i8* %418 to i32*
  br label %420

420:                                              ; preds = %415, %407
  %421 = phi i64 [ %416, %415 ], [ 0, %407 ]
  %422 = phi i8* [ %418, %415 ], [ null, %407 ]
  %423 = phi i32* [ %419, %415 ], [ null, %407 ]
  %424 = getelementptr inbounds i32, i32* %423, i64 %398
  %425 = getelementptr inbounds i32, i32* %423, i64 %421
  %426 = ptrtoint i32* %425 to i64
  store i32 %364, i32* %424, align 4
  %427 = getelementptr inbounds i32, i32* %424, i64 1
  %428 = ptrtoint i32* %427 to i64
  %429 = ptrtoint i32* %423 to i64
  %430 = icmp sgt i64 %397, 0
  br i1 %430, label %431, label %433

431:                                              ; preds = %420
  %432 = bitcast i32* %374 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %422, i8* align 4 %432, i64 %397, i1 false) #12
  br label %433

433:                                              ; preds = %431, %420
  store i64 %429, i64* %199, align 8
  store i64 %428, i64* %198, align 8
  store i64 %426, i64* %200, align 8
  %434 = icmp eq i32* %374, null
  br i1 %434, label %437, label %435

435:                                              ; preds = %433
  %436 = bitcast i32* %374 to i8*
  call void @_ZdlPv(i8* %436) #11
  br label %437

437:                                              ; preds = %435, %433, %393, %386
  %438 = getelementptr inbounds i32, i32* %345, i64 1
  %439 = icmp eq i32* %438, %182
  br i1 %439, label %201, label %344

440:                                              ; preds = %151
  call fastcc void @_ZN12_GLOBAL__N_119IconLoadingPipeline32MaybeLoadFallbackOrCompleteEmptyEv(%"class.(anonymous namespace)::IconLoadingPipeline"* nonnull %27) #12
  br label %441

441:                                              ; preds = %150, %151, %156, %343, %440
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97)
  call fastcc void @_ZN13scoped_refptrIN12_GLOBAL__N_119IconLoadingPipelineEED2Ev(%class.scoped_refptr.60* nonnull %21) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #12
  ret void
}

declare %"class.web_app::WebAppProvider"* @_ZN7web_app14WebAppProvider3GetEP7Profile(%class.Profile*) local_unnamed_addr #2

declare %class.Profile* @_ZN7Profile18FromBrowserContextEPN7content14BrowserContextE(%"class.content::BrowserContext"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4apps28LoadIconFromFileWithFallbackENS_5mojom8IconTypeEiRKN4base8FilePathENS_11IconEffectsENS2_12OnceCallbackIFvN4mojo9StructPtrINS0_9IconValueEEEEEENS7_IFvSD_EEE(i32, i32, %"class.base::FilePath"* dereferenceable(24), i32, %"class.base::OnceCallback.59"* nocapture, %"class.base::OnceCallback.112"* nocapture) local_unnamed_addr #0 {
  %7 = alloca %"class.base::OnceCallback.112", align 8
  %8 = alloca %"class.base::OnceCallback.59", align 8
  %9 = alloca %"class.base::OnceCallback.296", align 8
  %10 = alloca %"class.base::OnceCallback.296", align 8
  %11 = alloca %"class.base::Location", align 8
  %12 = alloca %"class.base::OnceCallback.479", align 8
  %13 = alloca %"class.base::OnceCallback", align 8
  %14 = alloca %"class.base::OnceCallback.1", align 8
  %15 = alloca %class.scoped_refptr.60, align 8
  %16 = alloca %class.scoped_refptr.60, align 8
  %17 = bitcast %class.scoped_refptr.60* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  %18 = bitcast %"class.base::OnceCallback.112"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = bitcast %"class.base::OnceCallback.59"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = tail call i8* @_Znwm(i64 392) #11
  %21 = getelementptr inbounds %"class.base::OnceCallback.112", %"class.base::OnceCallback.112"* %5, i64 0, i32 0, i32 0, i32 0
  %22 = bitcast %"class.base::OnceCallback.112"* %5 to i64*
  %23 = load i64, i64* %22, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %21, align 8
  %24 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %4, i64 0, i32 0, i32 0, i32 0
  %25 = bitcast %"class.base::OnceCallback.59"* %4 to i64*
  %26 = load i64, i64* %25, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %24, align 8
  %27 = bitcast i8* %20 to i32*
  store i32 0, i32* %27, align 4
  %28 = getelementptr inbounds i8, i8* %20, i64 4
  %29 = bitcast i8* %28 to i32*
  store i32 %0, i32* %29, align 4
  %30 = getelementptr inbounds i8, i8* %20, i64 8
  %31 = bitcast i8* %30 to i32*
  store i32 %1, i32* %31, align 8
  %32 = getelementptr inbounds i8, i8* %20, i64 12
  %33 = bitcast i8* %32 to i32*
  store i32 0, i32* %33, align 4
  %34 = getelementptr inbounds i8, i8* %20, i64 16
  %35 = bitcast i8* %34 to float*
  store float 0.000000e+00, float* %35, align 8
  %36 = getelementptr inbounds i8, i8* %20, i64 20
  %37 = bitcast i8* %36 to float*
  store float 1.000000e+00, float* %37, align 4
  %38 = getelementptr inbounds i8, i8* %20, i64 24
  store i8 0, i8* %38, align 8
  %39 = getelementptr inbounds i8, i8* %20, i64 28
  %40 = bitcast i8* %39 to i32*
  store i32 %3, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %20, i64 32
  %42 = bitcast i8* %41 to %class.GURL*
  tail call void @_ZN4GURLC1Ev(%class.GURL* %42) #12
  %43 = getelementptr inbounds i8, i8* %20, i64 152
  %44 = bitcast i8* %43 to %class.Profile**
  store %class.Profile* null, %class.Profile** %44, align 8
  %45 = getelementptr inbounds i8, i8* %20, i64 160
  %46 = bitcast i8* %45 to i32*
  store i32 0, i32* %46, align 8
  %47 = getelementptr inbounds i8, i8* %20, i64 168
  %48 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %8, i64 0, i32 0, i32 0, i32 0
  %49 = bitcast i8* %47 to i64*
  store i64 %26, i64* %49, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %48, align 8
  %50 = getelementptr inbounds i8, i8* %20, i64 176
  %51 = getelementptr inbounds %"class.base::OnceCallback.112", %"class.base::OnceCallback.112"* %7, i64 0, i32 0, i32 0, i32 0
  %52 = bitcast i8* %50 to i64*
  store i64 %23, i64* %52, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %51, align 8
  %53 = getelementptr inbounds i8, i8* %20, i64 184
  %54 = bitcast i8* %53 to %"class.base::CancelableTaskTracker"*
  tail call void @_ZN4base21CancelableTaskTrackerC1Ev(%"class.base::CancelableTaskTracker"* %54) #12
  %55 = getelementptr inbounds i8, i8* %20, i64 312
  %56 = bitcast i8* %55 to %"class.base::SequencedTaskRunner"**
  store %"class.base::SequencedTaskRunner"* null, %"class.base::SequencedTaskRunner"** %56, align 8
  %57 = getelementptr inbounds i8, i8* %20, i64 320
  %58 = bitcast i8* %57 to %"class.gfx::ImageSkia"*
  tail call void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"* %58) #12
  %59 = getelementptr inbounds i8, i8* %20, i64 328
  %60 = bitcast i8* %59 to %"class.gfx::ImageSkia"*
  tail call void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"* %60) #12
  %61 = getelementptr inbounds i8, i8* %20, i64 336
  store i8 0, i8* %61, align 8
  %62 = getelementptr inbounds i8, i8* %20, i64 337
  store i8 0, i8* %62, align 1
  %63 = getelementptr inbounds i8, i8* %20, i64 344
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 48, i1 false) #12
  %64 = tail call i32 @_ZN9apps_util14ConvertDipToPxEib(i32 %1, i1 zeroext true) #12
  store i32 %64, i32* %33, align 4
  %65 = sitofp i32 %64 to float
  %66 = sitofp i32 %1 to float
  %67 = fdiv float %65, %66
  store float %67, float* %35, align 8
  %68 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %68) #12
  %69 = getelementptr inbounds %"class.base::OnceCallback.112", %"class.base::OnceCallback.112"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %69) #12
  %70 = bitcast i8* %20 to %"class.base::subtle::RefCountedBase"*
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* nonnull %70) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  %71 = bitcast %class.scoped_refptr.60* %16 to i8**
  store i8* %20, i8** %71, align 8
  %72 = bitcast %"class.base::OnceCallback.479"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72)
  %73 = bitcast %"class.base::OnceCallback"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73)
  %74 = bitcast %"class.base::OnceCallback.1"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74)
  %75 = bitcast i8* %34 to i32*
  %76 = load i32, i32* %75, align 8
  %77 = bitcast i8* %36 to i32*
  store i32 %76, i32* %77, align 4
  %78 = bitcast %"class.base::Location"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %78) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %11, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 790) #12
  %79 = call i8* @_Znwm(i64 64) #11, !noalias !63
  %80 = bitcast i8* %79 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %80, void ()* bitcast (void (%"class.std::__1::vector"*, %"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFNSt3__16vectorIhNS3_9allocatorIhEEEENS_8FilePathEEJS8_EEEFS7_vEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFNSt3__16vectorIhNS2_9allocatorIhEEEENS_8FilePathEEJS7_EE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !63
  %81 = getelementptr inbounds i8, i8* %79, i64 32
  %82 = bitcast i8* %81 to i64*
  store i64 ptrtoint (void (%"class.std::__1::vector"*, %"class.base::FilePath"*)* @_ZN12_GLOBAL__N_124ReadFileAsCompressedDataEN4base8FilePathE to i64), i64* %82, align 8, !noalias !63
  %83 = getelementptr inbounds i8, i8* %79, i64 40
  %84 = bitcast i8* %83 to %"class.base::FilePath"*
  call void @_ZN4base8FilePathC1ERKS0_(%"class.base::FilePath"* %84, %"class.base::FilePath"* dereferenceable(24) %2) #12, !noalias !63
  %85 = bitcast %class.scoped_refptr.60* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85) #12
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* nonnull %70) #12
  %86 = ptrtoint i8* %79 to i64
  %87 = getelementptr inbounds %class.scoped_refptr.60, %class.scoped_refptr.60* %15, i64 0, i32 0
  %88 = call i8* @_Znwm(i64 56) #11, !noalias !68
  %89 = bitcast i8* %88 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %89, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.gfx::ImageSkia"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN12_GLOBAL__N_119IconLoadingPipelineEFvN3gfx9ImageSkiaEEJ13scoped_refptrIS4_EEEEFvS6_EE7RunOnceEPNS0_13BindStateBaseEOS6_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN12_GLOBAL__N_119IconLoadingPipelineEFvN3gfx9ImageSkiaEEJ13scoped_refptrIS3_EEE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !68
  %90 = getelementptr inbounds i8, i8* %88, i64 32
  %91 = bitcast i8* %90 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.(anonymous namespace)::IconLoadingPipeline"*, %"class.gfx::ImageSkia"*)* @_ZN12_GLOBAL__N_119IconLoadingPipeline28MaybeApplyEffectsAndCompleteEN3gfx9ImageSkiaE to i64), i64 0>, <2 x i64>* %91, align 8, !noalias !68
  %92 = getelementptr inbounds i8, i8* %88, i64 48
  %93 = ptrtoint i8* %20 to i64
  %94 = bitcast i8* %92 to i64*
  store i64 %93, i64* %94, align 8, !noalias !68
  store %"class.(anonymous namespace)::IconLoadingPipeline"* null, %"class.(anonymous namespace)::IconLoadingPipeline"** %87, align 8, !noalias !68
  %95 = load i32, i32* %75, align 8
  %96 = call i8* @_Znwm(i64 56) #11, !noalias !73
  %97 = bitcast i8* %96 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %97, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN4apps33CompressedDataToImageSkiaCallbackENS_12OnceCallbackIFvN3gfx9ImageSkiaEEEEfE3$_0JS8_fEEEFvNSt3__16vectorIhNSB_9allocatorIhEEEEEE7RunOnceEPNS0_13BindStateBaseEOSF_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN4apps33CompressedDataToImageSkiaCallbackENS_12OnceCallbackIFvN3gfx9ImageSkiaEEEEfE3$_0JS7_fEE7DestroyEPKNS0_13BindStateBaseE") #12, !noalias !73
  %98 = getelementptr inbounds i8, i8* %96, i64 40
  %99 = getelementptr inbounds %"class.base::OnceCallback.1", %"class.base::OnceCallback.1"* %14, i64 0, i32 0, i32 0, i32 0
  %100 = ptrtoint i8* %88 to i64
  %101 = bitcast i8* %98 to i64*
  store i64 %100, i64* %101, align 8, !noalias !73
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %99, align 8, !noalias !73
  %102 = getelementptr inbounds i8, i8* %96, i64 48
  %103 = bitcast i8* %102 to i32*
  store i32 %95, i32* %103, align 4, !noalias !73
  %104 = bitcast %"class.base::OnceCallback.296"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #12
  %105 = bitcast %"class.base::OnceCallback.296"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #12
  %106 = call i8* @_Znwm(i64 8) #11
  %107 = bitcast i8* %106 to i64*
  store i64 0, i64* %107, align 8
  %108 = ptrtoint i8* %106 to i64
  %109 = call i8* @_Znwm(i64 56) #11, !noalias !80
  %110 = bitcast i8* %109 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %110, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFNSt3__16vectorIhNS4_9allocatorIhEEEEvEEEPNS4_10unique_ptrIS8_NS4_14default_deleteIS8_EEEEEJSA_SF_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFNSt3__16vectorIhNS3_9allocatorIhEEEEvEEEPNS3_10unique_ptrIS7_NS3_14default_deleteIS7_EEEEEJS9_SE_EE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !80
  %111 = getelementptr inbounds i8, i8* %109, i64 32
  %112 = bitcast i8* %111 to i64*
  store i64 ptrtoint (void (%"class.base::OnceCallback.479"*, %"class.std::__1::unique_ptr.480"*)* @_ZN4base8internal20ReturnAsParamAdapterINSt3__16vectorIhNS2_9allocatorIhEEEEEEvNS_12OnceCallbackIFT_vEEEPNS2_10unique_ptrIS8_NS2_14default_deleteIS8_EEEE to i64), i64* %112, align 8, !noalias !80
  %113 = getelementptr inbounds i8, i8* %109, i64 40
  %114 = getelementptr inbounds %"class.base::OnceCallback.479", %"class.base::OnceCallback.479"* %12, i64 0, i32 0, i32 0, i32 0
  %115 = bitcast i8* %113 to i64*
  store i64 %86, i64* %115, align 8, !noalias !80
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %114, align 8, !noalias !80
  %116 = getelementptr inbounds i8, i8* %109, i64 48
  %117 = bitcast i8* %116 to i64*
  store i64 %108, i64* %117, align 8, !noalias !80
  %118 = bitcast %"class.base::OnceCallback.296"* %9 to i8**
  store i8* %109, i8** %118, align 8, !alias.scope !80
  %119 = call i8* @_Znwm(i64 56) #11, !noalias !85
  %120 = bitcast i8* %119 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %120, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__16vectorIhNS4_9allocatorIhEEEEEEEPNS4_10unique_ptrIS8_NS4_14default_deleteIS8_EEEEEJSA_NS0_12OwnedWrapperISE_NSC_ISE_EEEEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__16vectorIhNS3_9allocatorIhEEEEEEEPNS3_10unique_ptrIS7_NS3_14default_deleteIS7_EEEEEJS9_NS0_12OwnedWrapperISD_NSB_ISD_EEEEEE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !85
  %121 = getelementptr inbounds i8, i8* %119, i64 32
  %122 = bitcast i8* %121 to i64*
  store i64 ptrtoint (void (%"class.base::OnceCallback"*, %"class.std::__1::unique_ptr.480"*)* @_ZN4base8internal12ReplyAdapterINSt3__16vectorIhNS2_9allocatorIhEEEES6_EEvNS_12OnceCallbackIFvT0_EEEPNS2_10unique_ptrIT_NS2_14default_deleteISC_EEEE to i64), i64* %122, align 8, !noalias !85
  %123 = getelementptr inbounds i8, i8* %119, i64 40
  %124 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %13, i64 0, i32 0, i32 0, i32 0
  %125 = ptrtoint i8* %96 to i64
  %126 = bitcast i8* %123 to i64*
  store i64 %125, i64* %126, align 8, !noalias !85
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %124, align 8, !noalias !85
  %127 = getelementptr inbounds i8, i8* %119, i64 48
  %128 = bitcast i8* %127 to i64*
  store i64 %108, i64* %128, align 8, !noalias !85
  %129 = bitcast %"class.base::OnceCallback.296"* %10 to i8**
  store i8* %119, i8** %129, align 8, !alias.scope !85
  %130 = call zeroext i1 @_ZN4base10ThreadPool16PostTaskAndReplyERKNS_8LocationERKNS_10TaskTraitsENS_12OnceCallbackIFvvEEES9_(%"class.base::Location"* nonnull dereferenceable(32) %11, %"class.base::TaskTraits"* nonnull dereferenceable(15) @.ref.tmp.11, %"class.base::OnceCallback.296"* nonnull %9, %"class.base::OnceCallback.296"* nonnull %10) #12
  %131 = getelementptr inbounds %"class.base::OnceCallback.296", %"class.base::OnceCallback.296"* %10, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %131) #12
  %132 = getelementptr inbounds %"class.base::OnceCallback.296", %"class.base::OnceCallback.296"* %9, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %132) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #12
  %133 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %13, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %133) #12
  %134 = getelementptr inbounds %"class.base::OnceCallback.1", %"class.base::OnceCallback.1"* %14, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %134) #12
  call fastcc void @_ZN13scoped_refptrIN12_GLOBAL__N_119IconLoadingPipelineEED2Ev(%class.scoped_refptr.60* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85) #12
  %135 = getelementptr inbounds %"class.base::OnceCallback.479", %"class.base::OnceCallback.479"* %12, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %135) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %78) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74)
  call fastcc void @_ZN13scoped_refptrIN12_GLOBAL__N_119IconLoadingPipelineEED2Ev(%class.scoped_refptr.60* nonnull %16) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4apps26LoadIconFromCompressedDataENS_5mojom8IconTypeEiNS_11IconEffectsERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN4base12OnceCallbackIFvN4mojo9StructPtrINS0_9IconValueEEEEEE(i32, i32, i32, %"class.std::__1::basic_string"* readonly dereferenceable(24), %"class.base::OnceCallback.59"* nocapture) local_unnamed_addr #0 {
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.std::__1::vector", align 8
  %8 = alloca %"class.base::OnceCallback", align 8
  %9 = alloca %"class.base::OnceCallback.1", align 8
  %10 = alloca %class.scoped_refptr.60, align 8
  %11 = alloca %"class.std::__1::vector", align 8
  %12 = alloca %"class.base::OnceCallback.112", align 8
  %13 = alloca %"class.base::OnceCallback.59", align 8
  %14 = alloca %"class.base::OnceCallback.59", align 8
  %15 = alloca %class.scoped_refptr.60, align 8
  %16 = bitcast %class.scoped_refptr.60* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = bitcast %"class.base::OnceCallback.59"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17)
  %18 = tail call i8* @_Znwm(i64 392) #11
  %19 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %4, i64 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.base::OnceCallback.59"* %4 to i64*
  %21 = load i64, i64* %20, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %19, align 8
  %22 = bitcast %"class.base::OnceCallback.112"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #12
  %23 = bitcast %"class.base::OnceCallback.59"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #12
  %24 = getelementptr inbounds %"class.base::OnceCallback.112", %"class.base::OnceCallback.112"* %12, i64 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %14, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %25, align 8
  %26 = bitcast i8* %18 to i32*
  store i32 0, i32* %26, align 4
  %27 = getelementptr inbounds i8, i8* %18, i64 4
  %28 = bitcast i8* %27 to i32*
  store i32 %0, i32* %28, align 4
  %29 = getelementptr inbounds i8, i8* %18, i64 8
  %30 = bitcast i8* %29 to i32*
  store i32 %1, i32* %30, align 8
  %31 = getelementptr inbounds i8, i8* %18, i64 12
  %32 = bitcast i8* %31 to i32*
  store i32 0, i32* %32, align 4
  %33 = getelementptr inbounds i8, i8* %18, i64 16
  %34 = bitcast i8* %33 to float*
  store float 0.000000e+00, float* %34, align 8
  %35 = getelementptr inbounds i8, i8* %18, i64 20
  %36 = bitcast i8* %35 to float*
  store float 1.000000e+00, float* %36, align 4
  %37 = getelementptr inbounds i8, i8* %18, i64 24
  store i8 0, i8* %37, align 8
  %38 = getelementptr inbounds i8, i8* %18, i64 28
  %39 = bitcast i8* %38 to i32*
  store i32 %2, i32* %39, align 4
  %40 = getelementptr inbounds i8, i8* %18, i64 32
  %41 = bitcast i8* %40 to %class.GURL*
  tail call void @_ZN4GURLC1Ev(%class.GURL* %41) #12
  %42 = getelementptr inbounds i8, i8* %18, i64 152
  %43 = bitcast i8* %42 to %class.Profile**
  store %class.Profile* null, %class.Profile** %43, align 8
  %44 = getelementptr inbounds i8, i8* %18, i64 160
  %45 = bitcast i8* %44 to i32*
  store i32 0, i32* %45, align 8
  %46 = getelementptr inbounds i8, i8* %18, i64 168
  %47 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %13, i64 0, i32 0, i32 0, i32 0
  %48 = bitcast i8* %46 to i64*
  store i64 %21, i64* %48, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %47, align 8
  %49 = getelementptr inbounds i8, i8* %18, i64 176
  %50 = bitcast i8* %49 to i64*
  store i64 0, i64* %50, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %24, align 8
  %51 = getelementptr inbounds i8, i8* %18, i64 184
  %52 = bitcast i8* %51 to %"class.base::CancelableTaskTracker"*
  tail call void @_ZN4base21CancelableTaskTrackerC1Ev(%"class.base::CancelableTaskTracker"* %52) #12
  %53 = getelementptr inbounds i8, i8* %18, i64 312
  %54 = bitcast i8* %53 to %"class.base::SequencedTaskRunner"**
  store %"class.base::SequencedTaskRunner"* null, %"class.base::SequencedTaskRunner"** %54, align 8
  %55 = getelementptr inbounds i8, i8* %18, i64 320
  %56 = bitcast i8* %55 to %"class.gfx::ImageSkia"*
  tail call void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"* %56) #12
  %57 = getelementptr inbounds i8, i8* %18, i64 328
  %58 = bitcast i8* %57 to %"class.gfx::ImageSkia"*
  tail call void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"* %58) #12
  %59 = getelementptr inbounds i8, i8* %18, i64 336
  store i8 0, i8* %59, align 8
  %60 = getelementptr inbounds i8, i8* %18, i64 337
  store i8 0, i8* %60, align 1
  %61 = getelementptr inbounds i8, i8* %18, i64 344
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 48, i1 false) #12
  %62 = tail call i32 @_ZN9apps_util14ConvertDipToPxEib(i32 %1, i1 zeroext true) #12
  store i32 %62, i32* %32, align 4
  %63 = sitofp i32 %62 to float
  %64 = sitofp i32 %1 to float
  %65 = fdiv float %63, %64
  store float %65, float* %34, align 8
  %66 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %13, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %66) #12
  %67 = getelementptr inbounds %"class.base::OnceCallback.112", %"class.base::OnceCallback.112"* %12, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %67) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #12
  %68 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %14, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %68) #12
  %69 = bitcast i8* %18 to %"class.base::subtle::RefCountedBase"*
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* nonnull %69) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17)
  %70 = bitcast %class.scoped_refptr.60* %15 to i8**
  store i8* %18, i8** %70, align 8
  %71 = bitcast %"class.base::OnceCallback.1"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71)
  %72 = bitcast %"class.std::__1::vector"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %72)
  %73 = bitcast i8* %33 to i32*
  %74 = load i32, i32* %73, align 8
  %75 = bitcast i8* %35 to i32*
  store i32 %74, i32* %75, align 4
  %76 = bitcast %"class.std::__1::vector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %76) #12
  %77 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 1
  %79 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %80 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  %82 = load i8, i8* %81, align 1
  %83 = icmp slt i8 %82, 0
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  %86 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %89 = zext i8 %82 to i64
  %90 = select i1 %83, i8* %85, i8* %88
  %91 = select i1 %83, i64 %87, i64 %89
  %92 = getelementptr inbounds i8, i8* %90, i64 %91
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 0, i64 24, i1 false) #12
  %93 = icmp eq i64 %91, 0
  br i1 %93, label %94, label %96

94:                                               ; preds = %5
  %95 = bitcast i8** %78 to i64*
  br label %204

96:                                               ; preds = %5
  %97 = icmp slt i64 %91, 0
  br i1 %97, label %98, label %100

98:                                               ; preds = %96
  %99 = bitcast %"class.std::__1::vector"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %99) #13
  unreachable

100:                                              ; preds = %96
  %101 = call i8* @_Znwm(i64 %91) #11
  store i8* %101, i8** %78, align 8
  store i8* %101, i8** %77, align 8
  %102 = getelementptr inbounds i8, i8* %101, i64 %91
  store i8* %102, i8** %79, align 8
  %103 = icmp ult i64 %91, 32
  br i1 %103, label %190, label %104

104:                                              ; preds = %100
  %105 = getelementptr i8, i8* %101, i64 %91
  %106 = icmp ult i8* %101, %92
  %107 = icmp ult i8* %90, %105
  %108 = and i1 %106, %107
  br i1 %108, label %190, label %109

109:                                              ; preds = %104
  %110 = and i64 %91, -32
  %111 = getelementptr i8, i8* %101, i64 %110
  %112 = getelementptr i8, i8* %90, i64 %110
  %113 = add i64 %110, -32
  %114 = lshr exact i64 %113, 5
  %115 = add nuw nsw i64 %114, 1
  %116 = and i64 %115, 3
  %117 = icmp ult i64 %113, 96
  br i1 %117, label %169, label %118

118:                                              ; preds = %109
  %119 = sub nsw i64 %115, %116
  br label %120

120:                                              ; preds = %120, %118
  %121 = phi i64 [ 0, %118 ], [ %166, %120 ]
  %122 = phi i64 [ %119, %118 ], [ %167, %120 ]
  %123 = getelementptr i8, i8* %101, i64 %121
  %124 = getelementptr i8, i8* %90, i64 %121
  %125 = bitcast i8* %124 to <16 x i8>*
  %126 = load <16 x i8>, <16 x i8>* %125, align 1, !alias.scope !90
  %127 = getelementptr i8, i8* %124, i64 16
  %128 = bitcast i8* %127 to <16 x i8>*
  %129 = load <16 x i8>, <16 x i8>* %128, align 1, !alias.scope !90
  %130 = bitcast i8* %123 to <16 x i8>*
  store <16 x i8> %126, <16 x i8>* %130, align 1, !alias.scope !93, !noalias !90
  %131 = getelementptr i8, i8* %123, i64 16
  %132 = bitcast i8* %131 to <16 x i8>*
  store <16 x i8> %129, <16 x i8>* %132, align 1, !alias.scope !93, !noalias !90
  %133 = or i64 %121, 32
  %134 = getelementptr i8, i8* %101, i64 %133
  %135 = getelementptr i8, i8* %90, i64 %133
  %136 = bitcast i8* %135 to <16 x i8>*
  %137 = load <16 x i8>, <16 x i8>* %136, align 1, !alias.scope !90
  %138 = getelementptr i8, i8* %135, i64 16
  %139 = bitcast i8* %138 to <16 x i8>*
  %140 = load <16 x i8>, <16 x i8>* %139, align 1, !alias.scope !90
  %141 = bitcast i8* %134 to <16 x i8>*
  store <16 x i8> %137, <16 x i8>* %141, align 1, !alias.scope !93, !noalias !90
  %142 = getelementptr i8, i8* %134, i64 16
  %143 = bitcast i8* %142 to <16 x i8>*
  store <16 x i8> %140, <16 x i8>* %143, align 1, !alias.scope !93, !noalias !90
  %144 = or i64 %121, 64
  %145 = getelementptr i8, i8* %101, i64 %144
  %146 = getelementptr i8, i8* %90, i64 %144
  %147 = bitcast i8* %146 to <16 x i8>*
  %148 = load <16 x i8>, <16 x i8>* %147, align 1, !alias.scope !90
  %149 = getelementptr i8, i8* %146, i64 16
  %150 = bitcast i8* %149 to <16 x i8>*
  %151 = load <16 x i8>, <16 x i8>* %150, align 1, !alias.scope !90
  %152 = bitcast i8* %145 to <16 x i8>*
  store <16 x i8> %148, <16 x i8>* %152, align 1, !alias.scope !93, !noalias !90
  %153 = getelementptr i8, i8* %145, i64 16
  %154 = bitcast i8* %153 to <16 x i8>*
  store <16 x i8> %151, <16 x i8>* %154, align 1, !alias.scope !93, !noalias !90
  %155 = or i64 %121, 96
  %156 = getelementptr i8, i8* %101, i64 %155
  %157 = getelementptr i8, i8* %90, i64 %155
  %158 = bitcast i8* %157 to <16 x i8>*
  %159 = load <16 x i8>, <16 x i8>* %158, align 1, !alias.scope !90
  %160 = getelementptr i8, i8* %157, i64 16
  %161 = bitcast i8* %160 to <16 x i8>*
  %162 = load <16 x i8>, <16 x i8>* %161, align 1, !alias.scope !90
  %163 = bitcast i8* %156 to <16 x i8>*
  store <16 x i8> %159, <16 x i8>* %163, align 1, !alias.scope !93, !noalias !90
  %164 = getelementptr i8, i8* %156, i64 16
  %165 = bitcast i8* %164 to <16 x i8>*
  store <16 x i8> %162, <16 x i8>* %165, align 1, !alias.scope !93, !noalias !90
  %166 = add i64 %121, 128
  %167 = add i64 %122, -4
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %169, label %120, !llvm.loop !95

169:                                              ; preds = %120, %109
  %170 = phi i64 [ 0, %109 ], [ %166, %120 ]
  %171 = icmp eq i64 %116, 0
  br i1 %171, label %188, label %172

172:                                              ; preds = %169, %172
  %173 = phi i64 [ %185, %172 ], [ %170, %169 ]
  %174 = phi i64 [ %186, %172 ], [ %116, %169 ]
  %175 = getelementptr i8, i8* %101, i64 %173
  %176 = getelementptr i8, i8* %90, i64 %173
  %177 = bitcast i8* %176 to <16 x i8>*
  %178 = load <16 x i8>, <16 x i8>* %177, align 1, !alias.scope !90
  %179 = getelementptr i8, i8* %176, i64 16
  %180 = bitcast i8* %179 to <16 x i8>*
  %181 = load <16 x i8>, <16 x i8>* %180, align 1, !alias.scope !90
  %182 = bitcast i8* %175 to <16 x i8>*
  store <16 x i8> %178, <16 x i8>* %182, align 1, !alias.scope !93, !noalias !90
  %183 = getelementptr i8, i8* %175, i64 16
  %184 = bitcast i8* %183 to <16 x i8>*
  store <16 x i8> %181, <16 x i8>* %184, align 1, !alias.scope !93, !noalias !90
  %185 = add i64 %173, 32
  %186 = add i64 %174, -1
  %187 = icmp eq i64 %186, 0
  br i1 %187, label %188, label %172, !llvm.loop !96

188:                                              ; preds = %172, %169
  %189 = icmp eq i64 %91, %110
  br i1 %189, label %200, label %190

190:                                              ; preds = %188, %104, %100
  %191 = phi i8* [ %101, %104 ], [ %101, %100 ], [ %111, %188 ]
  %192 = phi i8* [ %90, %104 ], [ %90, %100 ], [ %112, %188 ]
  br label %193

193:                                              ; preds = %190, %193
  %194 = phi i8* [ %198, %193 ], [ %191, %190 ]
  %195 = phi i8* [ %197, %193 ], [ %192, %190 ]
  %196 = load i8, i8* %195, align 1
  store i8 %196, i8* %194, align 1
  %197 = getelementptr inbounds i8, i8* %195, i64 1
  %198 = getelementptr inbounds i8, i8* %194, i64 1
  %199 = icmp eq i8* %197, %92
  br i1 %199, label %200, label %193, !llvm.loop !97

200:                                              ; preds = %193, %188
  %201 = phi i8* [ %111, %188 ], [ %198, %193 ]
  %202 = bitcast i8** %78 to i64*
  %203 = ptrtoint i8* %201 to i64
  store i64 %203, i64* %202, align 8
  br label %204

204:                                              ; preds = %94, %200
  %205 = phi i64* [ %95, %94 ], [ %202, %200 ]
  %206 = phi i64 [ 0, %94 ], [ %203, %200 ]
  %207 = bitcast %"class.base::OnceCallback"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %207) #12
  %208 = bitcast %class.scoped_refptr.60* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %208) #12
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* nonnull %69) #12
  %209 = getelementptr inbounds %class.scoped_refptr.60, %class.scoped_refptr.60* %10, i64 0, i32 0
  %210 = call i8* @_Znwm(i64 56) #11, !noalias !98
  %211 = bitcast i8* %210 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %211, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.gfx::ImageSkia"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN12_GLOBAL__N_119IconLoadingPipelineEFvN3gfx9ImageSkiaEEJ13scoped_refptrIS4_EEEEFvS6_EE7RunOnceEPNS0_13BindStateBaseEOS6_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN12_GLOBAL__N_119IconLoadingPipelineEFvN3gfx9ImageSkiaEEJ13scoped_refptrIS3_EEE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !98
  %212 = getelementptr inbounds i8, i8* %210, i64 32
  %213 = bitcast i8* %212 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.(anonymous namespace)::IconLoadingPipeline"*, %"class.gfx::ImageSkia"*)* @_ZN12_GLOBAL__N_119IconLoadingPipeline28MaybeApplyEffectsAndCompleteEN3gfx9ImageSkiaE to i64), i64 0>, <2 x i64>* %213, align 8, !noalias !98
  %214 = getelementptr inbounds i8, i8* %210, i64 48
  %215 = ptrtoint i8* %18 to i64
  %216 = bitcast i8* %214 to i64*
  store i64 %215, i64* %216, align 8, !noalias !98
  store %"class.(anonymous namespace)::IconLoadingPipeline"* null, %"class.(anonymous namespace)::IconLoadingPipeline"** %209, align 8, !noalias !98
  %217 = load i32, i32* %73, align 8
  %218 = call i8* @_Znwm(i64 56) #11, !noalias !103
  %219 = bitcast i8* %218 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %219, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN4apps33CompressedDataToImageSkiaCallbackENS_12OnceCallbackIFvN3gfx9ImageSkiaEEEEfE3$_0JS8_fEEEFvNSt3__16vectorIhNSB_9allocatorIhEEEEEE7RunOnceEPNS0_13BindStateBaseEOSF_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN4apps33CompressedDataToImageSkiaCallbackENS_12OnceCallbackIFvN3gfx9ImageSkiaEEEEfE3$_0JS7_fEE7DestroyEPKNS0_13BindStateBaseE") #12, !noalias !103
  %220 = getelementptr inbounds i8, i8* %218, i64 40
  %221 = getelementptr inbounds %"class.base::OnceCallback.1", %"class.base::OnceCallback.1"* %9, i64 0, i32 0, i32 0, i32 0
  %222 = ptrtoint i8* %210 to i64
  %223 = bitcast i8* %220 to i64*
  store i64 %222, i64* %223, align 8, !noalias !103
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %221, align 8, !noalias !103
  %224 = getelementptr inbounds i8, i8* %218, i64 48
  %225 = bitcast i8* %224 to i32*
  store i32 %217, i32* %225, align 4, !noalias !103
  %226 = bitcast %"class.std::__1::vector"* %7 to i64*
  %227 = load i64, i64* %226, align 8
  %228 = bitcast %"class.std::__1::vector"* %11 to i64*
  store i64 %227, i64* %228, align 8
  %229 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 1
  %230 = bitcast i8** %229 to i64*
  store i64 %206, i64* %230, align 8
  %231 = bitcast i8** %79 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  %234 = bitcast i8** %233 to i64*
  store i64 %232, i64* %234, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 0, i64 24, i1 false) #12
  %235 = bitcast %"class.base::OnceCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %235) #12
  %236 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0, i32 0, i32 0
  %237 = ptrtoint i8* %218 to i64
  %238 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %237, i64* %238, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %236, align 8
  %239 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  %240 = getelementptr inbounds i8, i8* %218, i64 8
  %241 = bitcast i8* %240 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector"*)**
  %242 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector"*)** %241, align 8
  call void %242(%"class.base::internal::BindStateBase"* nonnull %219, %"class.std::__1::vector"* nonnull dereferenceable(24) %11) #12
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %239) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %235) #12
  %243 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 0
  %244 = load i8*, i8** %243, align 8
  %245 = icmp eq i8* %244, null
  br i1 %245, label %248, label %246

246:                                              ; preds = %204
  %247 = ptrtoint i8* %244 to i64
  store i64 %247, i64* %230, align 8
  call void @_ZdlPv(i8* nonnull %244) #11
  br label %248

248:                                              ; preds = %246, %204
  %249 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %249) #12
  %250 = getelementptr inbounds %"class.base::OnceCallback.1", %"class.base::OnceCallback.1"* %9, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %250) #12
  call fastcc void @_ZN13scoped_refptrIN12_GLOBAL__N_119IconLoadingPipelineEED2Ev(%class.scoped_refptr.60* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %208) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %207) #12
  %251 = load i8*, i8** %77, align 8
  %252 = icmp eq i8* %251, null
  br i1 %252, label %255, label %253

253:                                              ; preds = %248
  %254 = ptrtoint i8* %251 to i64
  store i64 %254, i64* %205, align 8
  call void @_ZdlPv(i8* nonnull %251) #11
  br label %255

255:                                              ; preds = %248, %253
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %76) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %72)
  call fastcc void @_ZN13scoped_refptrIN12_GLOBAL__N_119IconLoadingPipelineEED2Ev(%class.scoped_refptr.60* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4apps20LoadIconFromResourceENS_5mojom8IconTypeEiibNS_11IconEffectsEN4base12OnceCallbackIFvN4mojo9StructPtrINS0_9IconValueEEEEEE(i32, i32, i32, i1 zeroext, i32, %"class.base::OnceCallback.59"* nocapture) local_unnamed_addr #0 {
  %7 = alloca %"class.base::OnceCallback.112", align 8
  %8 = alloca %"class.base::OnceCallback.59", align 8
  %9 = alloca %"class.base::OnceCallback.59", align 8
  %10 = alloca %class.scoped_refptr.60, align 8
  %11 = zext i1 %3 to i8
  %12 = bitcast %class.scoped_refptr.60* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #12
  %13 = bitcast %"class.base::OnceCallback.59"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = tail call i8* @_Znwm(i64 392) #11
  %15 = bitcast i8* %14 to %"class.(anonymous namespace)::IconLoadingPipeline"*
  %16 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %5, i64 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.base::OnceCallback.59"* %5 to i64*
  %18 = load i64, i64* %17, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %16, align 8
  %19 = bitcast %"class.base::OnceCallback.112"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #12
  %20 = bitcast %"class.base::OnceCallback.59"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  %21 = getelementptr inbounds %"class.base::OnceCallback.112", %"class.base::OnceCallback.112"* %7, i64 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %22, align 8
  %23 = bitcast i8* %14 to i32*
  store i32 0, i32* %23, align 4
  %24 = getelementptr inbounds i8, i8* %14, i64 4
  %25 = bitcast i8* %24 to i32*
  store i32 %0, i32* %25, align 4
  %26 = getelementptr inbounds i8, i8* %14, i64 8
  %27 = bitcast i8* %26 to i32*
  store i32 %1, i32* %27, align 8
  %28 = getelementptr inbounds i8, i8* %14, i64 12
  %29 = bitcast i8* %28 to i32*
  store i32 0, i32* %29, align 4
  %30 = getelementptr inbounds i8, i8* %14, i64 16
  %31 = bitcast i8* %30 to float*
  store float 0.000000e+00, float* %31, align 8
  %32 = getelementptr inbounds i8, i8* %14, i64 20
  %33 = bitcast i8* %32 to float*
  store float 1.000000e+00, float* %33, align 4
  %34 = getelementptr inbounds i8, i8* %14, i64 24
  store i8 %11, i8* %34, align 8
  %35 = getelementptr inbounds i8, i8* %14, i64 28
  %36 = bitcast i8* %35 to i32*
  store i32 %4, i32* %36, align 4
  %37 = getelementptr inbounds i8, i8* %14, i64 32
  %38 = bitcast i8* %37 to %class.GURL*
  tail call void @_ZN4GURLC1Ev(%class.GURL* %38) #12
  %39 = getelementptr inbounds i8, i8* %14, i64 152
  %40 = bitcast i8* %39 to %class.Profile**
  store %class.Profile* null, %class.Profile** %40, align 8
  %41 = getelementptr inbounds i8, i8* %14, i64 160
  %42 = bitcast i8* %41 to i32*
  store i32 0, i32* %42, align 8
  %43 = getelementptr inbounds i8, i8* %14, i64 168
  %44 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %8, i64 0, i32 0, i32 0, i32 0
  %45 = bitcast i8* %43 to i64*
  store i64 %18, i64* %45, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %44, align 8
  %46 = getelementptr inbounds i8, i8* %14, i64 176
  %47 = bitcast i8* %46 to i64*
  store i64 0, i64* %47, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %21, align 8
  %48 = getelementptr inbounds i8, i8* %14, i64 184
  %49 = bitcast i8* %48 to %"class.base::CancelableTaskTracker"*
  tail call void @_ZN4base21CancelableTaskTrackerC1Ev(%"class.base::CancelableTaskTracker"* %49) #12
  %50 = getelementptr inbounds i8, i8* %14, i64 312
  %51 = bitcast i8* %50 to %"class.base::SequencedTaskRunner"**
  store %"class.base::SequencedTaskRunner"* null, %"class.base::SequencedTaskRunner"** %51, align 8
  %52 = getelementptr inbounds i8, i8* %14, i64 320
  %53 = bitcast i8* %52 to %"class.gfx::ImageSkia"*
  tail call void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"* %53) #12
  %54 = getelementptr inbounds i8, i8* %14, i64 328
  %55 = bitcast i8* %54 to %"class.gfx::ImageSkia"*
  tail call void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"* %55) #12
  %56 = getelementptr inbounds i8, i8* %14, i64 336
  store i8 0, i8* %56, align 8
  %57 = getelementptr inbounds i8, i8* %14, i64 337
  store i8 0, i8* %57, align 1
  %58 = getelementptr inbounds i8, i8* %14, i64 344
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 48, i1 false) #12
  %59 = tail call i32 @_ZN9apps_util14ConvertDipToPxEib(i32 %1, i1 zeroext true) #12
  store i32 %59, i32* %29, align 4
  %60 = sitofp i32 %59 to float
  %61 = sitofp i32 %1 to float
  %62 = fdiv float %60, %61
  store float %62, float* %31, align 8
  %63 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %63) #12
  %64 = getelementptr inbounds %"class.base::OnceCallback.112", %"class.base::OnceCallback.112"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %64) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  %65 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %9, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %65) #12
  %66 = bitcast i8* %14 to %"class.base::subtle::RefCountedBase"*
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* nonnull %66) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  %67 = bitcast %class.scoped_refptr.60* %10 to i8**
  store i8* %14, i8** %67, align 8
  call fastcc void @_ZN12_GLOBAL__N_119IconLoadingPipeline20LoadIconFromResourceEi(%"class.(anonymous namespace)::IconLoadingPipeline"* nonnull %15, i32 %2)
  call fastcc void @_ZN13scoped_refptrIN12_GLOBAL__N_119IconLoadingPipelineEED2Ev(%class.scoped_refptr.60* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_119IconLoadingPipeline20LoadIconFromResourceEi(%"class.(anonymous namespace)::IconLoadingPipeline"*, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = alloca %"class.gfx::ImageSkia", align 8
  %5 = alloca %"class.gfx::ImageSkia", align 8
  %6 = alloca %"class.gfx::Size", align 4
  %7 = alloca %"struct.std::__1::pair.614", align 8
  %8 = alloca %"class.gfx::ImageSkia", align 8
  %9 = icmp eq i32 %1, 0
  br i1 %9, label %10, label %11

10:                                               ; preds = %2
  tail call fastcc void @_ZN12_GLOBAL__N_119IconLoadingPipeline32MaybeLoadFallbackOrCompleteEmptyEv(%"class.(anonymous namespace)::IconLoadingPipeline"* %0)
  br label %224

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.(anonymous namespace)::IconLoadingPipeline", %"class.(anonymous namespace)::IconLoadingPipeline"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  switch i32 %13, label %223 [
    i32 2, label %14
    i32 1, label %145
    i32 3, label %145
  ]

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.(anonymous namespace)::IconLoadingPipeline", %"class.(anonymous namespace)::IconLoadingPipeline"* %0, i64 0, i32 7
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %145

18:                                               ; preds = %14
  %19 = tail call dereferenceable(216) %"class.ui::ResourceBundle"* @_ZN2ui14ResourceBundle17GetSharedInstanceEv() #12
  %20 = tail call { i8*, i64 } @_ZNK2ui14ResourceBundle18GetRawDataResourceEi(%"class.ui::ResourceBundle"* %19, i32 %1) #12
  %21 = extractvalue { i8*, i64 } %20, 0
  %22 = extractvalue { i8*, i64 } %20, 1
  %23 = getelementptr inbounds i8, i8* %21, i64 %22
  %24 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 0, i64 24, i1 false) #12
  %25 = icmp eq i64 %22, 0
  br i1 %25, label %137, label %26

26:                                               ; preds = %18
  %27 = icmp slt i64 %22, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %26
  %29 = bitcast %"class.std::__1::vector"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %29) #13
  unreachable

30:                                               ; preds = %26
  %31 = tail call i8* @_Znwm(i64 %22) #11
  %32 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  store i8* %31, i8** %32, align 8
  %33 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  store i8* %31, i8** %33, align 8
  %34 = getelementptr inbounds i8, i8* %31, i64 %22
  %35 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  store i8* %34, i8** %35, align 8
  %36 = bitcast i8** %32 to i64*
  %37 = icmp ult i64 %22, 32
  br i1 %37, label %124, label %38

38:                                               ; preds = %30
  %39 = getelementptr i8, i8* %31, i64 %22
  %40 = icmp ult i8* %31, %23
  %41 = icmp ult i8* %21, %39
  %42 = and i1 %40, %41
  br i1 %42, label %124, label %43

43:                                               ; preds = %38
  %44 = and i64 %22, -32
  %45 = getelementptr i8, i8* %31, i64 %44
  %46 = getelementptr i8, i8* %21, i64 %44
  %47 = add i64 %44, -32
  %48 = lshr exact i64 %47, 5
  %49 = add nuw nsw i64 %48, 1
  %50 = and i64 %49, 3
  %51 = icmp ult i64 %47, 96
  br i1 %51, label %103, label %52

52:                                               ; preds = %43
  %53 = sub nsw i64 %49, %50
  br label %54

54:                                               ; preds = %54, %52
  %55 = phi i64 [ 0, %52 ], [ %100, %54 ]
  %56 = phi i64 [ %53, %52 ], [ %101, %54 ]
  %57 = getelementptr i8, i8* %31, i64 %55
  %58 = getelementptr i8, i8* %21, i64 %55
  %59 = bitcast i8* %58 to <16 x i8>*
  %60 = load <16 x i8>, <16 x i8>* %59, align 1, !alias.scope !110
  %61 = getelementptr i8, i8* %58, i64 16
  %62 = bitcast i8* %61 to <16 x i8>*
  %63 = load <16 x i8>, <16 x i8>* %62, align 1, !alias.scope !110
  %64 = bitcast i8* %57 to <16 x i8>*
  store <16 x i8> %60, <16 x i8>* %64, align 1, !alias.scope !113, !noalias !110
  %65 = getelementptr i8, i8* %57, i64 16
  %66 = bitcast i8* %65 to <16 x i8>*
  store <16 x i8> %63, <16 x i8>* %66, align 1, !alias.scope !113, !noalias !110
  %67 = or i64 %55, 32
  %68 = getelementptr i8, i8* %31, i64 %67
  %69 = getelementptr i8, i8* %21, i64 %67
  %70 = bitcast i8* %69 to <16 x i8>*
  %71 = load <16 x i8>, <16 x i8>* %70, align 1, !alias.scope !110
  %72 = getelementptr i8, i8* %69, i64 16
  %73 = bitcast i8* %72 to <16 x i8>*
  %74 = load <16 x i8>, <16 x i8>* %73, align 1, !alias.scope !110
  %75 = bitcast i8* %68 to <16 x i8>*
  store <16 x i8> %71, <16 x i8>* %75, align 1, !alias.scope !113, !noalias !110
  %76 = getelementptr i8, i8* %68, i64 16
  %77 = bitcast i8* %76 to <16 x i8>*
  store <16 x i8> %74, <16 x i8>* %77, align 1, !alias.scope !113, !noalias !110
  %78 = or i64 %55, 64
  %79 = getelementptr i8, i8* %31, i64 %78
  %80 = getelementptr i8, i8* %21, i64 %78
  %81 = bitcast i8* %80 to <16 x i8>*
  %82 = load <16 x i8>, <16 x i8>* %81, align 1, !alias.scope !110
  %83 = getelementptr i8, i8* %80, i64 16
  %84 = bitcast i8* %83 to <16 x i8>*
  %85 = load <16 x i8>, <16 x i8>* %84, align 1, !alias.scope !110
  %86 = bitcast i8* %79 to <16 x i8>*
  store <16 x i8> %82, <16 x i8>* %86, align 1, !alias.scope !113, !noalias !110
  %87 = getelementptr i8, i8* %79, i64 16
  %88 = bitcast i8* %87 to <16 x i8>*
  store <16 x i8> %85, <16 x i8>* %88, align 1, !alias.scope !113, !noalias !110
  %89 = or i64 %55, 96
  %90 = getelementptr i8, i8* %31, i64 %89
  %91 = getelementptr i8, i8* %21, i64 %89
  %92 = bitcast i8* %91 to <16 x i8>*
  %93 = load <16 x i8>, <16 x i8>* %92, align 1, !alias.scope !110
  %94 = getelementptr i8, i8* %91, i64 16
  %95 = bitcast i8* %94 to <16 x i8>*
  %96 = load <16 x i8>, <16 x i8>* %95, align 1, !alias.scope !110
  %97 = bitcast i8* %90 to <16 x i8>*
  store <16 x i8> %93, <16 x i8>* %97, align 1, !alias.scope !113, !noalias !110
  %98 = getelementptr i8, i8* %90, i64 16
  %99 = bitcast i8* %98 to <16 x i8>*
  store <16 x i8> %96, <16 x i8>* %99, align 1, !alias.scope !113, !noalias !110
  %100 = add i64 %55, 128
  %101 = add i64 %56, -4
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %103, label %54, !llvm.loop !115

103:                                              ; preds = %54, %43
  %104 = phi i64 [ 0, %43 ], [ %100, %54 ]
  %105 = icmp eq i64 %50, 0
  br i1 %105, label %122, label %106

106:                                              ; preds = %103, %106
  %107 = phi i64 [ %119, %106 ], [ %104, %103 ]
  %108 = phi i64 [ %120, %106 ], [ %50, %103 ]
  %109 = getelementptr i8, i8* %31, i64 %107
  %110 = getelementptr i8, i8* %21, i64 %107
  %111 = bitcast i8* %110 to <16 x i8>*
  %112 = load <16 x i8>, <16 x i8>* %111, align 1, !alias.scope !110
  %113 = getelementptr i8, i8* %110, i64 16
  %114 = bitcast i8* %113 to <16 x i8>*
  %115 = load <16 x i8>, <16 x i8>* %114, align 1, !alias.scope !110
  %116 = bitcast i8* %109 to <16 x i8>*
  store <16 x i8> %112, <16 x i8>* %116, align 1, !alias.scope !113, !noalias !110
  %117 = getelementptr i8, i8* %109, i64 16
  %118 = bitcast i8* %117 to <16 x i8>*
  store <16 x i8> %115, <16 x i8>* %118, align 1, !alias.scope !113, !noalias !110
  %119 = add i64 %107, 32
  %120 = add i64 %108, -1
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %106, !llvm.loop !116

122:                                              ; preds = %106, %103
  %123 = icmp eq i64 %22, %44
  br i1 %123, label %134, label %124

124:                                              ; preds = %122, %38, %30
  %125 = phi i8* [ %31, %38 ], [ %31, %30 ], [ %45, %122 ]
  %126 = phi i8* [ %21, %38 ], [ %21, %30 ], [ %46, %122 ]
  br label %127

127:                                              ; preds = %124, %127
  %128 = phi i8* [ %132, %127 ], [ %125, %124 ]
  %129 = phi i8* [ %131, %127 ], [ %126, %124 ]
  %130 = load i8, i8* %129, align 1
  store i8 %130, i8* %128, align 1
  %131 = getelementptr inbounds i8, i8* %129, i64 1
  %132 = getelementptr inbounds i8, i8* %128, i64 1
  %133 = icmp eq i8* %131, %23
  br i1 %133, label %134, label %127, !llvm.loop !117

134:                                              ; preds = %127, %122
  %135 = phi i8* [ %45, %122 ], [ %132, %127 ]
  %136 = ptrtoint i8* %135 to i64
  store i64 %136, i64* %36, align 8
  br label %137

137:                                              ; preds = %18, %134
  call void @_ZN12_GLOBAL__N_119IconLoadingPipeline22CompleteWithCompressedENSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.(anonymous namespace)::IconLoadingPipeline"* %0, %"class.std::__1::vector"* nonnull %3)
  %138 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %139 = load i8*, i8** %138, align 8
  %140 = icmp eq i8* %139, null
  br i1 %140, label %224, label %141

141:                                              ; preds = %137
  %142 = ptrtoint i8* %139 to i64
  %143 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %144 = bitcast i8** %143 to i64*
  store i64 %142, i64* %144, align 8
  tail call void @_ZdlPv(i8* nonnull %139) #11
  br label %224

145:                                              ; preds = %11, %14, %11
  %146 = bitcast %"class.gfx::ImageSkia"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %146) #12
  %147 = getelementptr inbounds %"class.gfx::ImageSkia", %"class.gfx::ImageSkia"* %4, i64 0, i32 0, i32 0
  store %"class.gfx::internal::ImageSkiaStorage"* inttoptr (i64 -6148914691236517206 to %"class.gfx::internal::ImageSkiaStorage"*), %"class.gfx::internal::ImageSkiaStorage"** %147, align 8
  call void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"* nonnull %4) #12
  %148 = load atomic i8, i8* bitcast (i64* @_ZGVZN12_GLOBAL__N_120GetResourceIconCacheEvE5cache to i8*) acquire, align 8
  %149 = icmp eq i8 %148, 0
  br i1 %149, label %150, label %154, !prof !118

150:                                              ; preds = %145
  %151 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN12_GLOBAL__N_120GetResourceIconCacheEvE5cache) #12
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %154, label %153

153:                                              ; preds = %150
  call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN12_GLOBAL__N_120GetResourceIconCacheEvE5cache, i64 0, i32 0, i64 8), i8 0, i64 16, i1 false) #12
  store i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN12_GLOBAL__N_120GetResourceIconCacheEvE5cache, i64 0, i32 0, i64 8), i8** bitcast (%"class.base::NoDestructor"* @_ZZN12_GLOBAL__N_120GetResourceIconCacheEvE5cache to i8**), align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN12_GLOBAL__N_120GetResourceIconCacheEvE5cache) #12
  br label %154

154:                                              ; preds = %145, %150, %153
  %155 = getelementptr inbounds %"class.(anonymous namespace)::IconLoadingPipeline", %"class.(anonymous namespace)::IconLoadingPipeline"* %0, i64 0, i32 2
  %156 = load i32, i32* %155, align 4
  %157 = zext i32 %156 to i64
  %158 = shl nuw i64 %157, 32
  %159 = load %"class.std::__1::__tree_node.615"*, %"class.std::__1::__tree_node.615"** bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN12_GLOBAL__N_120GetResourceIconCacheEvE5cache, i64 0, i32 0, i64 8) to %"class.std::__1::__tree_node.615"**), align 8
  %160 = icmp eq %"class.std::__1::__tree_node.615"* %159, null
  br i1 %160, label %204, label %161

161:                                              ; preds = %154, %181
  %162 = phi %"class.std::__1::__tree_end_node"* [ %183, %181 ], [ bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN12_GLOBAL__N_120GetResourceIconCacheEvE5cache, i64 0, i32 0, i64 8) to %"class.std::__1::__tree_end_node"*), %154 ]
  %163 = phi %"class.std::__1::__tree_node.615"* [ %184, %181 ], [ %159, %154 ]
  %164 = getelementptr inbounds %"class.std::__1::__tree_node.615", %"class.std::__1::__tree_node.615"* %163, i64 0, i32 1, i32 0, i32 0, i32 0
  %165 = load i32, i32* %164, align 4
  %166 = icmp slt i32 %165, %1
  br i1 %166, label %167, label %170

167:                                              ; preds = %161
  %168 = getelementptr inbounds %"class.std::__1::__tree_node.615", %"class.std::__1::__tree_node.615"* %163, i64 0, i32 0, i32 1
  %169 = bitcast %"class.std::__1::__tree_node_base"** %168 to %"class.std::__1::__tree_node.615"**
  br label %181

170:                                              ; preds = %161
  %171 = icmp sgt i32 %165, %1
  br i1 %171, label %178, label %172

172:                                              ; preds = %170
  %173 = getelementptr inbounds %"class.std::__1::__tree_node.615", %"class.std::__1::__tree_node.615"* %163, i64 0, i32 1, i32 0, i32 0, i32 1
  %174 = load i32, i32* %173, align 4
  %175 = icmp slt i32 %174, %156
  %176 = getelementptr inbounds %"class.std::__1::__tree_node.615", %"class.std::__1::__tree_node.615"* %163, i64 0, i32 0, i32 1
  %177 = bitcast %"class.std::__1::__tree_node_base"** %176 to %"class.std::__1::__tree_node.615"**
  br i1 %175, label %181, label %178

178:                                              ; preds = %172, %170
  %179 = bitcast %"class.std::__1::__tree_node.615"* %163 to %"class.std::__1::__tree_node.615"**
  %180 = getelementptr inbounds %"class.std::__1::__tree_node.615", %"class.std::__1::__tree_node.615"* %163, i64 0, i32 0, i32 0
  br label %181

181:                                              ; preds = %178, %172, %167
  %182 = phi %"class.std::__1::__tree_node.615"** [ %179, %178 ], [ %169, %167 ], [ %177, %172 ]
  %183 = phi %"class.std::__1::__tree_end_node"* [ %180, %178 ], [ %162, %167 ], [ %162, %172 ]
  %184 = load %"class.std::__1::__tree_node.615"*, %"class.std::__1::__tree_node.615"** %182, align 8
  %185 = icmp eq %"class.std::__1::__tree_node.615"* %184, null
  br i1 %185, label %186, label %161

186:                                              ; preds = %181
  %187 = icmp eq %"class.std::__1::__tree_end_node"* %183, bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN12_GLOBAL__N_120GetResourceIconCacheEvE5cache, i64 0, i32 0, i64 8) to %"class.std::__1::__tree_end_node"*)
  br i1 %187, label %204, label %188

188:                                              ; preds = %186
  %189 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %183, i64 4
  %190 = bitcast %"class.std::__1::__tree_end_node"* %189 to %"struct.std::__1::__value_type.616"*
  %191 = bitcast %"class.std::__1::__tree_end_node"* %189 to i32*
  %192 = load i32, i32* %191, align 4
  %193 = icmp sgt i32 %192, %1
  br i1 %193, label %204, label %194

194:                                              ; preds = %188
  %195 = icmp slt i32 %192, %1
  br i1 %195, label %200, label %196

196:                                              ; preds = %194
  %197 = getelementptr inbounds %"struct.std::__1::__value_type.616", %"struct.std::__1::__value_type.616"* %190, i64 0, i32 0, i32 0, i32 1
  %198 = load i32, i32* %197, align 4
  %199 = icmp slt i32 %156, %198
  br i1 %199, label %204, label %200

200:                                              ; preds = %196, %194
  %201 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %183, i64 5
  %202 = bitcast %"class.std::__1::__tree_end_node"* %201 to %"class.gfx::ImageSkia"*
  %203 = call dereferenceable(8) %"class.gfx::ImageSkia"* @_ZN3gfx9ImageSkiaaSERKS0_(%"class.gfx::ImageSkia"* nonnull %4, %"class.gfx::ImageSkia"* dereferenceable(8) %202) #12
  br label %222

204:                                              ; preds = %196, %188, %186, %154
  %205 = call dereferenceable(216) %"class.ui::ResourceBundle"* @_ZN2ui14ResourceBundle17GetSharedInstanceEv() #12
  %206 = call %"class.gfx::ImageSkia"* @_ZN2ui14ResourceBundle17GetImageSkiaNamedEi(%"class.ui::ResourceBundle"* %205, i32 %1) #12
  %207 = bitcast %"class.gfx::ImageSkia"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %207) #12
  %208 = bitcast %"class.gfx::Size"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %208) #12
  %209 = load i32, i32* %155, align 8
  %210 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %6, i64 0, i32 0
  %211 = icmp sgt i32 %209, 0
  %212 = select i1 %211, i32 %209, i32 0
  store i32 %212, i32* %210, align 4
  %213 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %6, i64 0, i32 1
  store i32 %212, i32* %213, align 4
  call void @_ZN3gfx19ImageSkiaOperations18CreateResizedImageERKNS_9ImageSkiaEN4skia15ImageOperations12ResizeMethodERKNS_4SizeE(%"class.gfx::ImageSkia"* nonnull sret %5, %"class.gfx::ImageSkia"* dereferenceable(8) %206, i32 2, %"class.gfx::Size"* nonnull dereferenceable(8) %6) #12
  %214 = call dereferenceable(8) %"class.gfx::ImageSkia"* @_ZN3gfx9ImageSkiaaSERKS0_(%"class.gfx::ImageSkia"* nonnull %4, %"class.gfx::ImageSkia"* nonnull dereferenceable(8) %5) #12
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %208) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %207) #12
  %215 = bitcast %"struct.std::__1::pair.614"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %215) #12
  %216 = bitcast %"struct.std::__1::pair.614"* %7 to i64*
  %217 = zext i32 %1 to i64
  %218 = or i64 %158, %217
  store i64 %218, i64* %216, align 8, !alias.scope !119
  %219 = getelementptr inbounds %"struct.std::__1::pair.614", %"struct.std::__1::pair.614"* %7, i64 0, i32 1
  call void @_ZN3gfx9ImageSkiaC1ERKS0_(%"class.gfx::ImageSkia"* %219, %"class.gfx::ImageSkia"* nonnull dereferenceable(8) %4) #12
  %220 = getelementptr inbounds %"struct.std::__1::pair.614", %"struct.std::__1::pair.614"* %7, i64 0, i32 0
  %221 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_4pairIiiEEN3gfx9ImageSkiaEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS3_JNS2_IS3_S5_EEEEENS2_INS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.599"* bitcast (%"class.base::NoDestructor"* @_ZZN12_GLOBAL__N_120GetResourceIconCacheEvE5cache to %"class.std::__1::__tree.599"*), %"struct.std::__1::pair.609"* nonnull dereferenceable(8) %220, %"struct.std::__1::pair.614"* nonnull dereferenceable(16) %7) #12
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* %219) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %215) #12
  br label %222

222:                                              ; preds = %204, %200
  call void @_ZN3gfx9ImageSkiaC1ERKS0_(%"class.gfx::ImageSkia"* nonnull %8, %"class.gfx::ImageSkia"* nonnull dereferenceable(8) %4) #12
  call void @_ZN12_GLOBAL__N_119IconLoadingPipeline28MaybeApplyEffectsAndCompleteEN3gfx9ImageSkiaE(%"class.(anonymous namespace)::IconLoadingPipeline"* %0, %"class.gfx::ImageSkia"* nonnull %8)
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* nonnull %8) #12
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %146) #12
  br label %224

223:                                              ; preds = %11
  tail call fastcc void @_ZN12_GLOBAL__N_119IconLoadingPipeline32MaybeLoadFallbackOrCompleteEmptyEv(%"class.(anonymous namespace)::IconLoadingPipeline"* %0)
  br label %224

224:                                              ; preds = %141, %137, %223, %222, %10
  ret void
}

declare void @_ZN10extensions13ChromeAppIcon12ApplyEffectsEiRKN4base17RepeatingCallbackIFvRKN3gfx4SizeEPNS3_9ImageSkiaEEEEbbNS0_5BadgeES8_(i32, %"class.base::RepeatingCallback.355"* dereferenceable(8), i1 zeroext, i1 zeroext, i32, %"class.gfx::ImageSkia"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4apps5mojom9IconValueD1Ev(%"class.apps::mojom::IconValue"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_119IconLoadingPipeline32MaybeLoadFallbackOrCompleteEmptyEv(%"class.(anonymous namespace)::IconLoadingPipeline"*) unnamed_addr #0 align 2 {
  %2 = alloca %"struct.base::internal::flat_tree<favicon_base::IconType, base::identity, std::__1::less<void>, std::__1::vector<favicon_base::IconType, std::__1::allocator<favicon_base::IconType> > >::value_compare", align 1
  %3 = alloca %"class.base::OnceCallback.296", align 8
  %4 = alloca %"class.base::OnceCallback.59", align 8
  %5 = alloca %"class.base::OnceCallback.112", align 8
  %6 = alloca %"class.base::OnceCallback.59", align 8
  %7 = alloca %class.GURL, align 8
  %8 = alloca %class.GURL, align 8
  %9 = alloca %"class.base::internal::flat_tree.358", align 8
  %10 = alloca %"class.base::OnceCallback.366", align 8
  %11 = alloca %"class.base::OnceCallback.1", align 8
  %12 = alloca %class.scoped_refptr.60, align 8
  %13 = alloca %"class.base::OnceCallback.59", align 8
  %14 = alloca %class.scoped_refptr.60, align 8
  %15 = alloca %"class.base::OnceCallback.59", align 8
  %16 = alloca %"class.base::OnceCallback.59", align 8
  %17 = alloca %"class.base::OnceCallback.59", align 8
  %18 = alloca %"class.mojo::StructPtr", align 8
  %19 = getelementptr inbounds %"class.(anonymous namespace)::IconLoadingPipeline", %"class.(anonymous namespace)::IconLoadingPipeline"* %0, i64 0, i32 8
  %20 = getelementptr inbounds %"class.(anonymous namespace)::IconLoadingPipeline", %"class.(anonymous namespace)::IconLoadingPipeline"* %0, i64 0, i32 8, i32 1
  %21 = load i8, i8* %20, align 8, !range !122
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %90, label %23

23:                                               ; preds = %1
  %24 = getelementptr inbounds %"class.(anonymous namespace)::IconLoadingPipeline", %"class.(anonymous namespace)::IconLoadingPipeline"* %0, i64 0, i32 3
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 16
  br i1 %26, label %27, label %90

27:                                               ; preds = %23
  %28 = bitcast %class.GURL* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %28) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 120, i1 false)
  call void @_ZN4GURLC1ERKS_(%class.GURL* nonnull %7, %class.GURL* dereferenceable(120) %19) #12
  %29 = bitcast %class.GURL* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %29) #12
  call void @_ZN4GURLC1Ev(%class.GURL* nonnull %8) #12
  %30 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* %19, %class.GURL* nonnull dereferenceable(120) %8) #12
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %29) #12
  %31 = getelementptr inbounds %"class.(anonymous namespace)::IconLoadingPipeline", %"class.(anonymous namespace)::IconLoadingPipeline"* %0, i64 0, i32 9
  %32 = load %class.Profile*, %class.Profile** %31, align 8
  %33 = call %"class.favicon::FaviconService"* @_ZN21FaviconServiceFactory13GetForProfileEP7Profile17ServiceAccessType(%class.Profile* %32, i32 0) #12
  %34 = icmp eq %"class.favicon::FaviconService"* %33, null
  br i1 %34, label %89, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.base::internal::flat_tree.358"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #12
  %37 = call i8* @_Znwm(i64 4) #11
  %38 = getelementptr inbounds %"class.base::internal::flat_tree.358", %"class.base::internal::flat_tree.358"* %9, i64 0, i32 0, i32 0, i32 1
  %39 = bitcast %"class.base::internal::flat_tree.358"* %9 to i8**
  store i8* %37, i8** %39, align 8
  %40 = getelementptr inbounds i8, i8* %37, i64 4
  %41 = getelementptr inbounds %"class.base::internal::flat_tree.358", %"class.base::internal::flat_tree.358"* %9, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %42 = bitcast i32** %41 to i8**
  store i8* %40, i8** %42, align 8
  %43 = bitcast i32** %38 to i64*
  %44 = bitcast i8* %37 to i32*
  store i32 1, i32* %44, align 4
  %45 = ptrtoint i8* %40 to i64
  store i64 %45, i64* %43, align 8
  %46 = getelementptr inbounds %"class.base::internal::flat_tree.358", %"class.base::internal::flat_tree.358"* %9, i64 0, i32 0, i32 0, i32 0
  %47 = bitcast i8* %40 to i32*
  %48 = getelementptr inbounds %"struct.base::internal::flat_tree<favicon_base::IconType, base::identity, std::__1::less<void>, std::__1::vector<favicon_base::IconType, std::__1::allocator<favicon_base::IconType> > >::value_compare", %"struct.base::internal::flat_tree<favicon_base::IconType, base::identity, std::__1::less<void>, std::__1::vector<favicon_base::IconType, std::__1::allocator<favicon_base::IconType> > >::value_compare"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %48)
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN12favicon_base8IconTypeENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeEl(i32* nonnull %44, i32* %47, %"struct.base::internal::flat_tree<favicon_base::IconType, base::identity, std::__1::less<void>, std::__1::vector<favicon_base::IconType, std::__1::allocator<favicon_base::IconType> > >::value_compare"* nonnull dereferenceable(1) %2, i64 1, i32* null, i64 0) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %48)
  %49 = load i32, i32* @_ZN3gfx12kFaviconSizeE, align 4
  %50 = bitcast %class.scoped_refptr.60* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #12
  %51 = icmp eq %"class.(anonymous namespace)::IconLoadingPipeline"* %0, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %35
  %53 = getelementptr inbounds %"class.(anonymous namespace)::IconLoadingPipeline", %"class.(anonymous namespace)::IconLoadingPipeline"* %0, i64 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %53) #12
  br label %54

54:                                               ; preds = %35, %52
  %55 = getelementptr inbounds %class.scoped_refptr.60, %class.scoped_refptr.60* %12, i64 0, i32 0
  %56 = call i8* @_Znwm(i64 56) #11, !noalias !123
  %57 = bitcast i8* %56 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %57, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.gfx::ImageSkia"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN12_GLOBAL__N_119IconLoadingPipelineEFvN3gfx9ImageSkiaEEJ13scoped_refptrIS4_EEEEFvS6_EE7RunOnceEPNS0_13BindStateBaseEOS6_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN12_GLOBAL__N_119IconLoadingPipelineEFvN3gfx9ImageSkiaEEJ13scoped_refptrIS3_EEE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !123
  %58 = getelementptr inbounds i8, i8* %56, i64 32
  %59 = bitcast i8* %58 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.(anonymous namespace)::IconLoadingPipeline"*, %"class.gfx::ImageSkia"*)* @_ZN12_GLOBAL__N_119IconLoadingPipeline28MaybeApplyEffectsAndCompleteEN3gfx9ImageSkiaE to i64), i64 0>, <2 x i64>* %59, align 8, !noalias !123
  %60 = getelementptr inbounds i8, i8* %56, i64 48
  %61 = ptrtoint %"class.(anonymous namespace)::IconLoadingPipeline"* %0 to i64
  %62 = bitcast i8* %60 to i64*
  store i64 %61, i64* %62, align 8, !noalias !123
  store %"class.(anonymous namespace)::IconLoadingPipeline"* null, %"class.(anonymous namespace)::IconLoadingPipeline"** %55, align 8, !noalias !123
  %63 = getelementptr inbounds %"class.(anonymous namespace)::IconLoadingPipeline", %"class.(anonymous namespace)::IconLoadingPipeline"* %0, i64 0, i32 4
  %64 = bitcast float* %63 to i32*
  %65 = load i32, i32* %64, align 8
  %66 = call i8* @_Znwm(i64 56) #11, !noalias !128
  %67 = bitcast i8* %66 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %67, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"struct.favicon_base::FaviconRawBitmapResult"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN12_GLOBAL__N_124FaviconResultToImageSkiaENS_12OnceCallbackIFvN3gfx9ImageSkiaEEEEfE3$_2JS8_fEEEFvRKN12favicon_base22FaviconRawBitmapResultEEE7RunOnceEPNS0_13BindStateBaseESE_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN12_GLOBAL__N_124FaviconResultToImageSkiaENS_12OnceCallbackIFvN3gfx9ImageSkiaEEEEfE3$_2JS7_fEE7DestroyEPKNS0_13BindStateBaseE") #12, !noalias !128
  %68 = getelementptr inbounds i8, i8* %66, i64 40
  %69 = getelementptr inbounds %"class.base::OnceCallback.1", %"class.base::OnceCallback.1"* %11, i64 0, i32 0, i32 0, i32 0
  %70 = ptrtoint i8* %56 to i64
  %71 = bitcast i8* %68 to i64*
  store i64 %70, i64* %71, align 8, !noalias !128
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %69, align 8, !noalias !128
  %72 = getelementptr inbounds i8, i8* %66, i64 48
  %73 = bitcast i8* %72 to i32*
  store i32 %65, i32* %73, align 4, !noalias !128
  %74 = bitcast %"class.base::OnceCallback.366"* %10 to i8**
  store i8* %66, i8** %74, align 8, !alias.scope !128
  %75 = getelementptr inbounds %"class.(anonymous namespace)::IconLoadingPipeline", %"class.(anonymous namespace)::IconLoadingPipeline"* %0, i64 0, i32 13
  %76 = bitcast %"class.favicon::FaviconService"* %33 to i64 (%"class.favicon::FaviconService"*, %class.GURL*, %"class.base::internal::flat_tree.358"*, i32, i1, %"class.base::OnceCallback.366"*, %"class.base::CancelableTaskTracker"*)***
  %77 = load i64 (%"class.favicon::FaviconService"*, %class.GURL*, %"class.base::internal::flat_tree.358"*, i32, i1, %"class.base::OnceCallback.366"*, %"class.base::CancelableTaskTracker"*)**, i64 (%"class.favicon::FaviconService"*, %class.GURL*, %"class.base::internal::flat_tree.358"*, i32, i1, %"class.base::OnceCallback.366"*, %"class.base::CancelableTaskTracker"*)*** %76, align 8
  %78 = getelementptr inbounds i64 (%"class.favicon::FaviconService"*, %class.GURL*, %"class.base::internal::flat_tree.358"*, i32, i1, %"class.base::OnceCallback.366"*, %"class.base::CancelableTaskTracker"*)*, i64 (%"class.favicon::FaviconService"*, %class.GURL*, %"class.base::internal::flat_tree.358"*, i32, i1, %"class.base::OnceCallback.366"*, %"class.base::CancelableTaskTracker"*)** %77, i64 16
  %79 = load i64 (%"class.favicon::FaviconService"*, %class.GURL*, %"class.base::internal::flat_tree.358"*, i32, i1, %"class.base::OnceCallback.366"*, %"class.base::CancelableTaskTracker"*)*, i64 (%"class.favicon::FaviconService"*, %class.GURL*, %"class.base::internal::flat_tree.358"*, i32, i1, %"class.base::OnceCallback.366"*, %"class.base::CancelableTaskTracker"*)** %78, align 8
  %80 = call i64 %79(%"class.favicon::FaviconService"* nonnull %33, %class.GURL* nonnull dereferenceable(120) %7, %"class.base::internal::flat_tree.358"* nonnull dereferenceable(24) %9, i32 %49, i1 zeroext false, %"class.base::OnceCallback.366"* nonnull %10, %"class.base::CancelableTaskTracker"* %75) #12
  %81 = getelementptr inbounds %"class.base::OnceCallback.366", %"class.base::OnceCallback.366"* %10, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %81) #12
  %82 = getelementptr inbounds %"class.base::OnceCallback.1", %"class.base::OnceCallback.1"* %11, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %82) #12
  call fastcc void @_ZN13scoped_refptrIN12_GLOBAL__N_119IconLoadingPipelineEED2Ev(%class.scoped_refptr.60* nonnull %12) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #12
  %83 = load i32*, i32** %46, align 8
  %84 = icmp eq i32* %83, null
  br i1 %84, label %88, label %85

85:                                               ; preds = %54
  %86 = ptrtoint i32* %83 to i64
  store i64 %86, i64* %43, align 8
  %87 = bitcast i32* %83 to i8*
  call void @_ZdlPv(i8* %87) #11
  br label %88

88:                                               ; preds = %54, %85
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #12
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %28) #12
  br label %183

89:                                               ; preds = %27
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %28) #12
  br label %90

90:                                               ; preds = %1, %89, %23
  %91 = getelementptr inbounds %"class.(anonymous namespace)::IconLoadingPipeline", %"class.(anonymous namespace)::IconLoadingPipeline"* %0, i64 0, i32 12
  %92 = getelementptr inbounds %"class.base::OnceCallback.112", %"class.base::OnceCallback.112"* %91, i64 0, i32 0, i32 0, i32 0
  %93 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %92, align 8
  %94 = icmp eq %"class.base::internal::BindStateBase"* %93, null
  br i1 %94, label %157, label %95

95:                                               ; preds = %90
  %96 = bitcast %"class.base::OnceCallback.59"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96) #12
  %97 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %13, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*), %"class.base::internal::BindStateBase"** %97, align 8
  %98 = bitcast %class.scoped_refptr.60* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98) #12
  %99 = icmp eq %"class.(anonymous namespace)::IconLoadingPipeline"* %0, null
  br i1 %99, label %102, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.(anonymous namespace)::IconLoadingPipeline", %"class.(anonymous namespace)::IconLoadingPipeline"* %0, i64 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %101) #12
  br label %102

102:                                              ; preds = %95, %100
  %103 = getelementptr inbounds %class.scoped_refptr.60, %class.scoped_refptr.60* %14, i64 0, i32 0
  %104 = call i8* @_Znwm(i64 48) #11, !noalias !135
  %105 = bitcast i8* %104 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %105, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN12_GLOBAL__N_119IconLoadingPipeline32MaybeLoadFallbackOrCompleteEmptyEvE3$_3J13scoped_refptrIS4_EEEEFvN4mojo9StructPtrIN4apps5mojom9IconValueEEEEE7RunOnceEPNS0_13BindStateBaseEOSE_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN12_GLOBAL__N_119IconLoadingPipeline32MaybeLoadFallbackOrCompleteEmptyEvE3$_3J13scoped_refptrIS3_EEE7DestroyEPKNS0_13BindStateBaseE") #12, !noalias !135
  %106 = getelementptr inbounds i8, i8* %104, i64 40
  %107 = ptrtoint %"class.(anonymous namespace)::IconLoadingPipeline"* %0 to i64
  %108 = bitcast i8* %106 to i64*
  store i64 %107, i64* %108, align 8, !noalias !135
  store %"class.(anonymous namespace)::IconLoadingPipeline"* null, %"class.(anonymous namespace)::IconLoadingPipeline"** %103, align 8, !noalias !135
  call fastcc void @_ZN13scoped_refptrIN12_GLOBAL__N_119IconLoadingPipelineEED2Ev(%class.scoped_refptr.60* nonnull %14) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #12
  %109 = bitcast %"class.base::OnceCallback.59"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %109) #12
  %110 = bitcast %"class.base::OnceCallback.59"* %13 to i64*
  %111 = ptrtoint i8* %104 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %97, align 8
  %112 = bitcast %"class.base::OnceCallback.59"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #12, !noalias !140
  %113 = call i8* @_Znwm(i64 16) #11, !noalias !140
  %114 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %16, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %114, align 8, !noalias !140
  %115 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %4, i64 0, i32 0, i32 0, i32 0
  %116 = bitcast i8* %113 to i64*
  store i64 %111, i64* %116, align 8, !noalias !140
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %115, align 8, !noalias !140
  %117 = getelementptr inbounds i8, i8* %113, i64 8
  %118 = bitcast i8* %117 to %"class.base::internal::BindStateBase"**
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %118, align 8, !noalias !140
  %119 = bitcast %"class.base::OnceCallback.296"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %119) #12, !noalias !140
  %120 = ptrtoint i8* %113 to i64
  %121 = call i8* @_Znwm(i64 64) #11, !noalias !143
  %122 = bitcast i8* %121 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %122, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN4mojo8internal24CallbackWithDeleteHelperIFvNS3_9StructPtrIN4apps5mojom9IconValueEEEEEEFvSA_EJNS0_17UnretainedWrapperISC_EEDnEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN4mojo8internal24CallbackWithDeleteHelperIFvNS2_9StructPtrIN4apps5mojom9IconValueEEEEEEFvS9_EJNS0_17UnretainedWrapperISB_EEDnEE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !143
  %123 = getelementptr inbounds i8, i8* %121, i64 32
  %124 = bitcast i8* %123 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.mojo::internal::CallbackWithDeleteHelper"*, %"class.mojo::StructPtr"*)* @_ZN4mojo8internal24CallbackWithDeleteHelperIFvNS_9StructPtrIN4apps5mojom9IconValueEEEEE3RunES6_ to i64), i64 0>, <2 x i64>* %124, align 8, !noalias !143
  %125 = getelementptr inbounds i8, i8* %121, i64 48
  %126 = bitcast i8* %125 to i64*
  store i64 %120, i64* %126, align 8, !noalias !143
  %127 = getelementptr inbounds i8, i8* %121, i64 56
  %128 = bitcast i8* %127 to i8**
  store i8* null, i8** %128, align 8, !noalias !143
  %129 = bitcast %"class.base::OnceCallback.296"* %3 to i8**
  store i8* %121, i8** %129, align 8, !alias.scope !148, !noalias !140
  %130 = bitcast i8* %117 to %"class.base::internal::CallbackBase"*
  %131 = getelementptr inbounds %"class.base::OnceCallback.296", %"class.base::OnceCallback.296"* %3, i64 0, i32 0
  %132 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %130, %"class.base::internal::CallbackBase"* nonnull dereferenceable(8) %131) #12, !noalias !140
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %131) #12, !noalias !140
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %119) #12, !noalias !140
  %133 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %133) #12, !noalias !140
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #12, !noalias !140
  %134 = call i8* @_Znwm(i64 56) #11, !noalias !149
  %135 = bitcast i8* %134 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %135, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN4mojo8internal24CallbackWithDeleteHelperIFvNS3_9StructPtrIN4apps5mojom9IconValueEEEEEEFvSA_EJNSt3__110unique_ptrISC_NSF_14default_deleteISC_EEEEEEESB_E7RunOnceEPNS0_13BindStateBaseEOSA_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN4mojo8internal24CallbackWithDeleteHelperIFvNS2_9StructPtrIN4apps5mojom9IconValueEEEEEEFvS9_EJNSt3__110unique_ptrISB_NSE_14default_deleteISB_EEEEEE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !149
  %136 = getelementptr inbounds i8, i8* %134, i64 32
  %137 = bitcast i8* %136 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.mojo::internal::CallbackWithDeleteHelper"*, %"class.mojo::StructPtr"*)* @_ZN4mojo8internal24CallbackWithDeleteHelperIFvNS_9StructPtrIN4apps5mojom9IconValueEEEEE3RunES6_ to i64), i64 0>, <2 x i64>* %137, align 8, !noalias !149
  %138 = getelementptr inbounds i8, i8* %134, i64 48
  %139 = bitcast i8* %138 to i64*
  store i64 %120, i64* %139, align 8, !noalias !149
  %140 = bitcast %"class.base::OnceCallback.59"* %15 to i8**
  store i8* %134, i8** %140, align 8, !alias.scope !149
  %141 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %13, i64 0, i32 0
  %142 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %15, i64 0, i32 0
  %143 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* nonnull %141, %"class.base::internal::CallbackBase"* nonnull dereferenceable(8) %142) #12
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %142) #12
  %144 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %16, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %144) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #12
  %145 = load i64, i64* %110, align 8
  %146 = bitcast %"class.base::OnceCallback.59"* %17 to i64*
  store i64 %145, i64* %146, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %97, align 8
  %147 = bitcast %"class.base::OnceCallback.112"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %147) #12
  %148 = bitcast %"class.base::OnceCallback.112"* %91 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast %"class.base::OnceCallback.112"* %5 to i64*
  store i64 %149, i64* %150, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %92, align 8
  %151 = getelementptr inbounds %"class.base::OnceCallback.112", %"class.base::OnceCallback.112"* %5, i64 0, i32 0
  %152 = inttoptr i64 %149 to %"class.base::internal::BindStateBase"*
  %153 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %152, i64 0, i32 1
  %154 = bitcast void ()** %153 to void (%"class.base::internal::BindStateBase"*, %"class.base::OnceCallback.59"*)**
  %155 = load void (%"class.base::internal::BindStateBase"*, %"class.base::OnceCallback.59"*)*, void (%"class.base::internal::BindStateBase"*, %"class.base::OnceCallback.59"*)** %154, align 8
  call void %155(%"class.base::internal::BindStateBase"* %152, %"class.base::OnceCallback.59"* nonnull dereferenceable(8) %17) #12
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %151) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %147) #12
  %156 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %17, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %156) #12
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %141) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96) #12
  br label %183

157:                                              ; preds = %90
  %158 = getelementptr inbounds %"class.(anonymous namespace)::IconLoadingPipeline", %"class.(anonymous namespace)::IconLoadingPipeline"* %0, i64 0, i32 10
  %159 = load i32, i32* %158, align 8
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %162, label %161

161:                                              ; preds = %157
  store i32 0, i32* %158, align 8
  call fastcc void @_ZN12_GLOBAL__N_119IconLoadingPipeline20LoadIconFromResourceEi(%"class.(anonymous namespace)::IconLoadingPipeline"* %0, i32 %159)
  br label %183

162:                                              ; preds = %157
  %163 = getelementptr inbounds %"class.(anonymous namespace)::IconLoadingPipeline", %"class.(anonymous namespace)::IconLoadingPipeline"* %0, i64 0, i32 11
  %164 = call i8* @_Znwm(i64 56) #11, !noalias !154
  %165 = bitcast i8* %164 to %"class.apps::mojom::IconValue"*
  call void @_ZN4apps5mojom9IconValueC1Ev(%"class.apps::mojom::IconValue"* nonnull %165) #12, !noalias !154
  %166 = ptrtoint i8* %164 to i64
  %167 = bitcast %"class.mojo::StructPtr"* %18 to i64*
  store i64 %166, i64* %167, align 8, !alias.scope !154
  %168 = bitcast %"class.base::OnceCallback.59"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %168) #12
  %169 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %163, i64 0, i32 0, i32 0, i32 0
  %170 = bitcast %"class.base::OnceCallback.59"* %163 to i64*
  %171 = load i64, i64* %170, align 8
  %172 = bitcast %"class.base::OnceCallback.59"* %6 to i64*
  store i64 %171, i64* %172, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %169, align 8
  %173 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %6, i64 0, i32 0
  %174 = inttoptr i64 %171 to %"class.base::internal::BindStateBase"*
  %175 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %174, i64 0, i32 1
  %176 = bitcast void ()** %175 to void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr"*)**
  %177 = load void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr"*)*, void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr"*)** %176, align 8
  call void %177(%"class.base::internal::BindStateBase"* %174, %"class.mojo::StructPtr"* nonnull dereferenceable(8) %18) #12
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %173) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %168) #12
  %178 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %179 = load %"class.apps::mojom::IconValue"*, %"class.apps::mojom::IconValue"** %178, align 8
  store %"class.apps::mojom::IconValue"* null, %"class.apps::mojom::IconValue"** %178, align 8
  %180 = icmp eq %"class.apps::mojom::IconValue"* %179, null
  br i1 %180, label %183, label %181

181:                                              ; preds = %162
  call void @_ZN4apps5mojom9IconValueD1Ev(%"class.apps::mojom::IconValue"* nonnull %179) #12
  %182 = bitcast %"class.apps::mojom::IconValue"* %179 to i8*
  call void @_ZdlPv(i8* %182) #11
  br label %183

183:                                              ; preds = %181, %162, %88, %161, %102
  ret void
}

declare void @_ZN10extensions13AppLaunchInfo16GetFullLaunchURLEPKNS_9ExtensionE(%class.GURL* sret, %"class.extensions::Extension"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_119IconLoadingPipeline22CompleteWithCompressedENSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.(anonymous namespace)::IconLoadingPipeline"*, %"class.std::__1::vector"* nocapture) #0 align 2 {
  %3 = alloca %"class.base::OnceCallback.59", align 8
  %4 = alloca %"class.mojo::StructPtr", align 8
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %6, %8
  br i1 %9, label %10, label %11

10:                                               ; preds = %2
  tail call fastcc void @_ZN12_GLOBAL__N_119IconLoadingPipeline32MaybeLoadFallbackOrCompleteEmptyEv(%"class.(anonymous namespace)::IconLoadingPipeline"* %0)
  br label %69

11:                                               ; preds = %2
  %12 = tail call i8* @_Znwm(i64 56) #11, !noalias !157
  %13 = bitcast i8* %12 to %"class.apps::mojom::IconValue"*
  tail call void @_ZN4apps5mojom9IconValueC1Ev(%"class.apps::mojom::IconValue"* nonnull %13) #12, !noalias !157
  %14 = ptrtoint i8* %12 to i64
  %15 = bitcast i8* %12 to i32*
  store i32 2, i32* %15, align 8
  %16 = getelementptr inbounds i8, i8* %12, i64 16
  %17 = load i8, i8* %16, align 8, !range !122
  %18 = icmp eq i8 %17, 0
  %19 = getelementptr inbounds i8, i8* %12, i64 24
  br i1 %18, label %38, label %20

20:                                               ; preds = %11
  %21 = bitcast i8* %19 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %28, label %24

24:                                               ; preds = %20
  %25 = ptrtoint i8* %22 to i64
  %26 = getelementptr inbounds i8, i8* %12, i64 32
  %27 = bitcast i8* %26 to i64*
  store i64 %25, i64* %27, align 8
  tail call void @_ZdlPv(i8* nonnull %22) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #12
  br label %28

28:                                               ; preds = %20, %24
  %29 = bitcast %"class.std::__1::vector"* %1 to <2 x i64>*
  %30 = load <2 x i64>, <2 x i64>* %29, align 8
  %31 = bitcast i8* %19 to <2 x i64>*
  store <2 x i64> %30, <2 x i64>* %31, align 8
  %32 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %33 = bitcast i8** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds i8, i8* %12, i64 40
  %36 = bitcast i8* %35 to i64*
  store i64 %34, i64* %36, align 8
  %37 = bitcast %"class.std::__1::vector"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #12
  br label %48

38:                                               ; preds = %11
  %39 = bitcast %"class.std::__1::vector"* %1 to <2 x i64>*
  %40 = load <2 x i64>, <2 x i64>* %39, align 8
  %41 = bitcast i8* %19 to <2 x i64>*
  store <2 x i64> %40, <2 x i64>* %41, align 8
  %42 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %43 = bitcast i8** %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds i8, i8* %12, i64 40
  %46 = bitcast i8* %45 to i64*
  store i64 %44, i64* %46, align 8
  %47 = bitcast %"class.std::__1::vector"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 24, i1 false) #12
  store i8 1, i8* %16, align 8
  br label %48

48:                                               ; preds = %28, %38
  %49 = getelementptr inbounds %"class.(anonymous namespace)::IconLoadingPipeline", %"class.(anonymous namespace)::IconLoadingPipeline"* %0, i64 0, i32 6
  %50 = load i8, i8* %49, align 8, !range !122
  %51 = getelementptr inbounds i8, i8* %12, i64 48
  store i8 %50, i8* %51, align 8
  %52 = getelementptr inbounds %"class.(anonymous namespace)::IconLoadingPipeline", %"class.(anonymous namespace)::IconLoadingPipeline"* %0, i64 0, i32 11
  %53 = bitcast %"class.mojo::StructPtr"* %4 to i64*
  %54 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %14, i64* %53, align 8
  %55 = bitcast %"class.base::OnceCallback.59"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #12
  %56 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %52, i64 0, i32 0, i32 0, i32 0
  %57 = bitcast %"class.base::OnceCallback.59"* %52 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"class.base::OnceCallback.59"* %3 to i64*
  store i64 %58, i64* %59, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %56, align 8
  %60 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %3, i64 0, i32 0
  %61 = inttoptr i64 %58 to %"class.base::internal::BindStateBase"*
  %62 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %61, i64 0, i32 1
  %63 = bitcast void ()** %62 to void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr"*)**
  %64 = load void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr"*)*, void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr"*)** %63, align 8
  call void %64(%"class.base::internal::BindStateBase"* %61, %"class.mojo::StructPtr"* nonnull dereferenceable(8) %4) #12
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %60) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #12
  %65 = load %"class.apps::mojom::IconValue"*, %"class.apps::mojom::IconValue"** %54, align 8
  store %"class.apps::mojom::IconValue"* null, %"class.apps::mojom::IconValue"** %54, align 8
  %66 = icmp eq %"class.apps::mojom::IconValue"* %65, null
  br i1 %66, label %69, label %67

67:                                               ; preds = %48
  call void @_ZN4apps5mojom9IconValueD1Ev(%"class.apps::mojom::IconValue"* nonnull %65) #12
  %68 = bitcast %"class.apps::mojom::IconValue"* %65 to i8*
  call void @_ZdlPv(i8* %68) #11
  br label %69

69:                                               ; preds = %48, %67, %10
  ret void
}

declare %"class.extensions::ImageLoader"* @_ZN10extensions11ImageLoader3GetEPN7content14BrowserContextE(%"class.content::BrowserContext"*) local_unnamed_addr #2

declare void @_ZN10extensions11ImageLoader32LoadImageAtEveryScaleFactorAsyncEPKNS_9ExtensionERKN3gfx4SizeEN4base12OnceCallbackIFvRKNS4_5ImageEEEE(%"class.extensions::ImageLoader"*, %"class.extensions::Extension"*, %"class.gfx::Size"* dereferenceable(8), %"class.base::OnceCallback.357"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_119IconLoadingPipeline28MaybeApplyEffectsAndCompleteEN3gfx9ImageSkiaE(%"class.(anonymous namespace)::IconLoadingPipeline"*, %"class.gfx::ImageSkia"*) #0 align 2 {
  %3 = alloca %"class.mojo::StructPtr", align 8
  %4 = alloca %"class.base::OnceCallback.59", align 8
  %5 = alloca %class.scoped_refptr.60, align 8
  %6 = alloca %"class.mojo::StructPtr", align 8
  %7 = getelementptr inbounds %"class.gfx::ImageSkia", %"class.gfx::ImageSkia"* %1, i64 0, i32 0, i32 0
  %8 = load %"class.gfx::internal::ImageSkiaStorage"*, %"class.gfx::internal::ImageSkiaStorage"** %7, align 8
  %9 = icmp eq %"class.gfx::internal::ImageSkiaStorage"* %8, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %2
  tail call fastcc void @_ZN12_GLOBAL__N_119IconLoadingPipeline32MaybeLoadFallbackOrCompleteEmptyEv(%"class.(anonymous namespace)::IconLoadingPipeline"* %0)
  br label %58

11:                                               ; preds = %2
  %12 = tail call i8* @_Znwm(i64 56) #11, !noalias !160
  %13 = bitcast i8* %12 to %"class.apps::mojom::IconValue"*
  tail call void @_ZN4apps5mojom9IconValueC1Ev(%"class.apps::mojom::IconValue"* nonnull %13) #12, !noalias !160
  %14 = ptrtoint i8* %12 to i64
  %15 = getelementptr inbounds %"class.(anonymous namespace)::IconLoadingPipeline", %"class.(anonymous namespace)::IconLoadingPipeline"* %0, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = bitcast i8* %12 to i32*
  store i32 %16, i32* %17, align 8
  %18 = getelementptr inbounds i8, i8* %12, i64 8
  %19 = bitcast i8* %18 to %"class.gfx::ImageSkia"*
  %20 = tail call dereferenceable(8) %"class.gfx::ImageSkia"* @_ZN3gfx9ImageSkiaaSERKS0_(%"class.gfx::ImageSkia"* %19, %"class.gfx::ImageSkia"* dereferenceable(8) %1) #12
  %21 = getelementptr inbounds %"class.(anonymous namespace)::IconLoadingPipeline", %"class.(anonymous namespace)::IconLoadingPipeline"* %0, i64 0, i32 6
  %22 = load i8, i8* %21, align 8, !range !122
  %23 = getelementptr inbounds i8, i8* %12, i64 48
  store i8 %22, i8* %23, align 8
  %24 = getelementptr inbounds %"class.(anonymous namespace)::IconLoadingPipeline", %"class.(anonymous namespace)::IconLoadingPipeline"* %0, i64 0, i32 7
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %51, label %27

27:                                               ; preds = %11
  %28 = getelementptr inbounds %"class.(anonymous namespace)::IconLoadingPipeline", %"class.(anonymous namespace)::IconLoadingPipeline"* %0, i64 0, i32 2
  %29 = load i32, i32* %28, align 8
  %30 = bitcast %"class.mojo::StructPtr"* %3 to i64*
  %31 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %14, i64* %30, align 8
  %32 = bitcast %class.scoped_refptr.60* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #12
  %33 = icmp eq %"class.(anonymous namespace)::IconLoadingPipeline"* %0, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"class.(anonymous namespace)::IconLoadingPipeline", %"class.(anonymous namespace)::IconLoadingPipeline"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %35) #12
  br label %36

36:                                               ; preds = %27, %34
  %37 = getelementptr inbounds %class.scoped_refptr.60, %class.scoped_refptr.60* %5, i64 0, i32 0
  %38 = tail call i8* @_Znwm(i64 56) #11, !noalias !163
  %39 = bitcast i8* %38 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %39, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN12_GLOBAL__N_119IconLoadingPipelineEFvN4mojo9StructPtrIN4apps5mojom9IconValueEEEEJ13scoped_refptrIS4_EEEEFvSA_EE7RunOnceEPNS0_13BindStateBaseEOSA_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN12_GLOBAL__N_119IconLoadingPipelineEFvN4mojo9StructPtrIN4apps5mojom9IconValueEEEEJ13scoped_refptrIS3_EEE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !163
  %40 = getelementptr inbounds i8, i8* %38, i64 32
  %41 = bitcast i8* %40 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.(anonymous namespace)::IconLoadingPipeline"*, %"class.mojo::StructPtr"*)* @_ZN12_GLOBAL__N_119IconLoadingPipeline21CompleteWithIconValueEN4mojo9StructPtrIN4apps5mojom9IconValueEEE to i64), i64 0>, <2 x i64>* %41, align 8, !noalias !163
  %42 = getelementptr inbounds i8, i8* %38, i64 48
  %43 = ptrtoint %"class.(anonymous namespace)::IconLoadingPipeline"* %0 to i64
  %44 = bitcast i8* %42 to i64*
  store i64 %43, i64* %44, align 8, !noalias !163
  store %"class.(anonymous namespace)::IconLoadingPipeline"* null, %"class.(anonymous namespace)::IconLoadingPipeline"** %37, align 8, !noalias !163
  %45 = bitcast %"class.base::OnceCallback.59"* %4 to i8**
  store i8* %38, i8** %45, align 8, !alias.scope !163
  call void @_ZN4apps16ApplyIconEffectsENS_11IconEffectsEiN4mojo9StructPtrINS_5mojom9IconValueEEEN4base12OnceCallbackIFvS5_EEE(i32 %25, i32 %29, %"class.mojo::StructPtr"* nonnull %3, %"class.base::OnceCallback.59"* nonnull %4)
  %46 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %46) #12
  call fastcc void @_ZN13scoped_refptrIN12_GLOBAL__N_119IconLoadingPipelineEED2Ev(%class.scoped_refptr.60* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #12
  %47 = load %"class.apps::mojom::IconValue"*, %"class.apps::mojom::IconValue"** %31, align 8
  store %"class.apps::mojom::IconValue"* null, %"class.apps::mojom::IconValue"** %31, align 8
  %48 = icmp eq %"class.apps::mojom::IconValue"* %47, null
  br i1 %48, label %58, label %49

49:                                               ; preds = %36
  call void @_ZN4apps5mojom9IconValueD1Ev(%"class.apps::mojom::IconValue"* nonnull %47) #12
  %50 = bitcast %"class.apps::mojom::IconValue"* %47 to i8*
  call void @_ZdlPv(i8* %50) #11
  br label %58

51:                                               ; preds = %11
  %52 = bitcast %"class.mojo::StructPtr"* %6 to i64*
  %53 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %14, i64* %52, align 8
  call void @_ZN12_GLOBAL__N_119IconLoadingPipeline21CompleteWithIconValueEN4mojo9StructPtrIN4apps5mojom9IconValueEEE(%"class.(anonymous namespace)::IconLoadingPipeline"* %0, %"class.mojo::StructPtr"* nonnull %6)
  %54 = load %"class.apps::mojom::IconValue"*, %"class.apps::mojom::IconValue"** %53, align 8
  store %"class.apps::mojom::IconValue"* null, %"class.apps::mojom::IconValue"** %53, align 8
  %55 = icmp eq %"class.apps::mojom::IconValue"* %54, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %51
  tail call void @_ZN4apps5mojom9IconValueD1Ev(%"class.apps::mojom::IconValue"* nonnull %54) #12
  %57 = bitcast %"class.apps::mojom::IconValue"* %54 to i8*
  tail call void @_ZdlPv(i8* %57) #11
  br label %58

58:                                               ; preds = %56, %51, %49, %36, %10
  ret void
}

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #2

declare void @_ZN4GURLC1Ev(%class.GURL*) unnamed_addr #2

declare %"class.favicon::FaviconService"* @_ZN21FaviconServiceFactory13GetForProfileEP7Profile17ServiceAccessType(%class.Profile*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN12favicon_base8IconTypeENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeEl(i32*, i32*, %"struct.base::internal::flat_tree<favicon_base::IconType, base::identity, std::__1::less<void>, std::__1::vector<favicon_base::IconType, std::__1::allocator<favicon_base::IconType> > >::value_compare"* dereferenceable(1), i64, i32*, i64) local_unnamed_addr #0 comdat {
  %7 = ptrtoint i32* %0 to i64
  switch i64 %3, label %14 [
    i64 0, label %400
    i64 1, label %400
    i64 2, label %8
  ]

8:                                                ; preds = %6
  %9 = getelementptr inbounds i32, i32* %1, i64 -1
  %10 = load i32, i32* %9, align 4
  %11 = load i32, i32* %0, align 4
  %12 = icmp slt i32 %10, %11
  br i1 %12, label %13, label %400

13:                                               ; preds = %8
  store i32 %10, i32* %0, align 4
  store i32 %11, i32* %9, align 4
  br label %400

14:                                               ; preds = %6
  %15 = icmp slt i64 %3, 129
  br i1 %15, label %16, label %58

16:                                               ; preds = %14
  %17 = icmp eq i32* %0, %1
  br i1 %17, label %400, label %18

18:                                               ; preds = %16
  %19 = getelementptr inbounds i32, i32* %0, i64 1
  %20 = icmp eq i32* %19, %1
  br i1 %20, label %400, label %21

21:                                               ; preds = %18
  %22 = getelementptr i32, i32* %1, i64 -2
  %23 = ptrtoint i32* %22 to i64
  %24 = sub i64 %23, %7
  %25 = and i64 %24, 4
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %39

27:                                               ; preds = %21
  %28 = load i32, i32* %19, align 4
  br label %29

29:                                               ; preds = %34, %27
  %30 = phi i32* [ %31, %34 ], [ %19, %27 ]
  %31 = getelementptr inbounds i32, i32* %30, i64 -1
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %28, %32
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  store i32 %32, i32* %30, align 4
  %35 = icmp eq i32* %31, %0
  br i1 %35, label %36, label %29

36:                                               ; preds = %29, %34
  %37 = phi i32* [ %30, %29 ], [ %0, %34 ]
  store i32 %28, i32* %37, align 4
  %38 = getelementptr inbounds i32, i32* %0, i64 2
  br label %39

39:                                               ; preds = %36, %21
  %40 = phi i32* [ %19, %21 ], [ %38, %36 ]
  %41 = icmp ult i64 %24, 4
  br i1 %41, label %400, label %42

42:                                               ; preds = %39, %408
  %43 = phi i32* [ %410, %408 ], [ %40, %39 ]
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32* %43, %0
  br i1 %45, label %51, label %46

46:                                               ; preds = %42, %56
  %47 = phi i32* [ %48, %56 ], [ %43, %42 ]
  %48 = getelementptr inbounds i32, i32* %47, i64 -1
  %49 = load i32, i32* %48, align 4
  %50 = icmp slt i32 %44, %49
  br i1 %50, label %56, label %51

51:                                               ; preds = %56, %46, %42
  %52 = phi i32* [ %0, %42 ], [ %47, %46 ], [ %0, %56 ]
  store i32 %44, i32* %52, align 4
  %53 = getelementptr inbounds i32, i32* %43, i64 1
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32* %53, %0
  br i1 %55, label %408, label %401

56:                                               ; preds = %46
  store i32 %49, i32* %47, align 4
  %57 = icmp eq i32* %48, %0
  br i1 %57, label %51, label %46

58:                                               ; preds = %14
  %59 = lshr i64 %3, 1
  %60 = getelementptr inbounds i32, i32* %0, i64 %59
  %61 = icmp sgt i64 %3, %5
  br i1 %61, label %398, label %62

62:                                               ; preds = %58
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIN12favicon_base8IconTypeENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeE(i32* %0, i32* %60, %"struct.base::internal::flat_tree<favicon_base::IconType, base::identity, std::__1::less<void>, std::__1::vector<favicon_base::IconType, std::__1::allocator<favicon_base::IconType> > >::value_compare"* dereferenceable(1) %2, i64 %59, i32* %4)
  %63 = sub nsw i64 %3, %59
  %64 = getelementptr inbounds i32, i32* %4, i64 %59
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIN12favicon_base8IconTypeENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeE(i32* %60, i32* %1, %"struct.base::internal::flat_tree<favicon_base::IconType, base::identity, std::__1::less<void>, std::__1::vector<favicon_base::IconType, std::__1::allocator<favicon_base::IconType> > >::value_compare"* dereferenceable(1) %2, i64 %63, i32* %64)
  %65 = getelementptr inbounds i32, i32* %4, i64 %3
  br label %195

66:                                               ; preds = %365
  %67 = ptrtoint i32* %366 to i64
  %68 = icmp eq i32* %366, %65
  br i1 %68, label %400, label %69

69:                                               ; preds = %66
  %70 = add i64 %3, -1
  %71 = getelementptr i32, i32* %4, i64 %70
  %72 = ptrtoint i32* %71 to i64
  %73 = sub i64 %72, %67
  %74 = lshr i64 %73, 2
  %75 = add nuw nsw i64 %74, 1
  %76 = icmp ult i64 %75, 8
  br i1 %76, label %77, label %102

77:                                               ; preds = %193, %102, %69
  %78 = phi i32* [ %366, %102 ], [ %366, %69 ], [ %116, %193 ]
  %79 = phi i32* [ %368, %102 ], [ %368, %69 ], [ %117, %193 ]
  %80 = ptrtoint i32* %78 to i64
  %81 = add i64 %3, -1
  %82 = getelementptr i32, i32* %4, i64 %81
  %83 = ptrtoint i32* %82 to i64
  %84 = sub i64 %83, %80
  %85 = lshr i64 %84, 2
  %86 = add nuw nsw i64 %85, 1
  %87 = and i64 %86, 7
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %98, label %89

89:                                               ; preds = %77, %89
  %90 = phi i32* [ %94, %89 ], [ %78, %77 ]
  %91 = phi i32* [ %95, %89 ], [ %79, %77 ]
  %92 = phi i64 [ %96, %89 ], [ %87, %77 ]
  %93 = load i32, i32* %90, align 4
  store i32 %93, i32* %91, align 4
  %94 = getelementptr inbounds i32, i32* %90, i64 1
  %95 = getelementptr inbounds i32, i32* %91, i64 1
  %96 = add i64 %92, -1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %89, !llvm.loop !168

98:                                               ; preds = %89, %77
  %99 = phi i32* [ %78, %77 ], [ %94, %89 ]
  %100 = phi i32* [ %79, %77 ], [ %95, %89 ]
  %101 = icmp ult i64 %84, 28
  br i1 %101, label %400, label %370

102:                                              ; preds = %69
  %103 = add i64 %3, -1
  %104 = getelementptr i32, i32* %4, i64 %103
  %105 = ptrtoint i32* %104 to i64
  %106 = sub i64 %105, %67
  %107 = lshr i64 %106, 2
  %108 = add nuw nsw i64 %107, 1
  %109 = getelementptr i32, i32* %368, i64 %108
  %110 = getelementptr i32, i32* %366, i64 %108
  %111 = icmp ult i32* %368, %110
  %112 = icmp ult i32* %366, %109
  %113 = and i1 %111, %112
  br i1 %113, label %77, label %114

114:                                              ; preds = %102
  %115 = and i64 %75, 9223372036854775800
  %116 = getelementptr i32, i32* %366, i64 %115
  %117 = getelementptr i32, i32* %368, i64 %115
  %118 = add nsw i64 %115, -8
  %119 = lshr exact i64 %118, 3
  %120 = add nuw nsw i64 %119, 1
  %121 = and i64 %120, 3
  %122 = icmp ult i64 %118, 24
  br i1 %122, label %174, label %123

123:                                              ; preds = %114
  %124 = sub nsw i64 %120, %121
  br label %125

125:                                              ; preds = %125, %123
  %126 = phi i64 [ 0, %123 ], [ %171, %125 ]
  %127 = phi i64 [ %124, %123 ], [ %172, %125 ]
  %128 = getelementptr i32, i32* %366, i64 %126
  %129 = getelementptr i32, i32* %368, i64 %126
  %130 = bitcast i32* %128 to <4 x i32>*
  %131 = load <4 x i32>, <4 x i32>* %130, align 4, !alias.scope !169
  %132 = getelementptr i32, i32* %128, i64 4
  %133 = bitcast i32* %132 to <4 x i32>*
  %134 = load <4 x i32>, <4 x i32>* %133, align 4, !alias.scope !169
  %135 = bitcast i32* %129 to <4 x i32>*
  store <4 x i32> %131, <4 x i32>* %135, align 4, !alias.scope !172, !noalias !169
  %136 = getelementptr i32, i32* %129, i64 4
  %137 = bitcast i32* %136 to <4 x i32>*
  store <4 x i32> %134, <4 x i32>* %137, align 4, !alias.scope !172, !noalias !169
  %138 = or i64 %126, 8
  %139 = getelementptr i32, i32* %366, i64 %138
  %140 = getelementptr i32, i32* %368, i64 %138
  %141 = bitcast i32* %139 to <4 x i32>*
  %142 = load <4 x i32>, <4 x i32>* %141, align 4, !alias.scope !169
  %143 = getelementptr i32, i32* %139, i64 4
  %144 = bitcast i32* %143 to <4 x i32>*
  %145 = load <4 x i32>, <4 x i32>* %144, align 4, !alias.scope !169
  %146 = bitcast i32* %140 to <4 x i32>*
  store <4 x i32> %142, <4 x i32>* %146, align 4, !alias.scope !172, !noalias !169
  %147 = getelementptr i32, i32* %140, i64 4
  %148 = bitcast i32* %147 to <4 x i32>*
  store <4 x i32> %145, <4 x i32>* %148, align 4, !alias.scope !172, !noalias !169
  %149 = or i64 %126, 16
  %150 = getelementptr i32, i32* %366, i64 %149
  %151 = getelementptr i32, i32* %368, i64 %149
  %152 = bitcast i32* %150 to <4 x i32>*
  %153 = load <4 x i32>, <4 x i32>* %152, align 4, !alias.scope !169
  %154 = getelementptr i32, i32* %150, i64 4
  %155 = bitcast i32* %154 to <4 x i32>*
  %156 = load <4 x i32>, <4 x i32>* %155, align 4, !alias.scope !169
  %157 = bitcast i32* %151 to <4 x i32>*
  store <4 x i32> %153, <4 x i32>* %157, align 4, !alias.scope !172, !noalias !169
  %158 = getelementptr i32, i32* %151, i64 4
  %159 = bitcast i32* %158 to <4 x i32>*
  store <4 x i32> %156, <4 x i32>* %159, align 4, !alias.scope !172, !noalias !169
  %160 = or i64 %126, 24
  %161 = getelementptr i32, i32* %366, i64 %160
  %162 = getelementptr i32, i32* %368, i64 %160
  %163 = bitcast i32* %161 to <4 x i32>*
  %164 = load <4 x i32>, <4 x i32>* %163, align 4, !alias.scope !169
  %165 = getelementptr i32, i32* %161, i64 4
  %166 = bitcast i32* %165 to <4 x i32>*
  %167 = load <4 x i32>, <4 x i32>* %166, align 4, !alias.scope !169
  %168 = bitcast i32* %162 to <4 x i32>*
  store <4 x i32> %164, <4 x i32>* %168, align 4, !alias.scope !172, !noalias !169
  %169 = getelementptr i32, i32* %162, i64 4
  %170 = bitcast i32* %169 to <4 x i32>*
  store <4 x i32> %167, <4 x i32>* %170, align 4, !alias.scope !172, !noalias !169
  %171 = add i64 %126, 32
  %172 = add i64 %127, -4
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %174, label %125, !llvm.loop !174

174:                                              ; preds = %125, %114
  %175 = phi i64 [ 0, %114 ], [ %171, %125 ]
  %176 = icmp eq i64 %121, 0
  br i1 %176, label %193, label %177

177:                                              ; preds = %174, %177
  %178 = phi i64 [ %190, %177 ], [ %175, %174 ]
  %179 = phi i64 [ %191, %177 ], [ %121, %174 ]
  %180 = getelementptr i32, i32* %366, i64 %178
  %181 = getelementptr i32, i32* %368, i64 %178
  %182 = bitcast i32* %180 to <4 x i32>*
  %183 = load <4 x i32>, <4 x i32>* %182, align 4, !alias.scope !169
  %184 = getelementptr i32, i32* %180, i64 4
  %185 = bitcast i32* %184 to <4 x i32>*
  %186 = load <4 x i32>, <4 x i32>* %185, align 4, !alias.scope !169
  %187 = bitcast i32* %181 to <4 x i32>*
  store <4 x i32> %183, <4 x i32>* %187, align 4, !alias.scope !172, !noalias !169
  %188 = getelementptr i32, i32* %181, i64 4
  %189 = bitcast i32* %188 to <4 x i32>*
  store <4 x i32> %186, <4 x i32>* %189, align 4, !alias.scope !172, !noalias !169
  %190 = add i64 %178, 8
  %191 = add i64 %179, -1
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %193, label %177, !llvm.loop !175

193:                                              ; preds = %177, %174
  %194 = icmp eq i64 %75, %115
  br i1 %194, label %400, label %77

195:                                              ; preds = %62, %365
  %196 = phi i32* [ %367, %365 ], [ %4, %62 ]
  %197 = phi i32* [ %366, %365 ], [ %64, %62 ]
  %198 = phi i32* [ %368, %365 ], [ %0, %62 ]
  %199 = icmp eq i32* %197, %65
  br i1 %199, label %200, label %357

200:                                              ; preds = %195
  %201 = ptrtoint i32* %196 to i64
  %202 = icmp eq i32* %196, %64
  br i1 %202, label %400, label %203

203:                                              ; preds = %200
  %204 = add nsw i64 %59, -1
  %205 = getelementptr i32, i32* %4, i64 %204
  %206 = ptrtoint i32* %205 to i64
  %207 = sub i64 %206, %201
  %208 = lshr i64 %207, 2
  %209 = add nuw nsw i64 %208, 1
  %210 = icmp ult i64 %209, 8
  br i1 %210, label %304, label %211

211:                                              ; preds = %203
  %212 = add nsw i64 %59, -1
  %213 = getelementptr i32, i32* %4, i64 %212
  %214 = ptrtoint i32* %213 to i64
  %215 = sub i64 %214, %201
  %216 = lshr i64 %215, 2
  %217 = add nuw nsw i64 %216, 1
  %218 = getelementptr i32, i32* %198, i64 %217
  %219 = getelementptr i32, i32* %196, i64 %217
  %220 = icmp ult i32* %198, %219
  %221 = icmp ult i32* %196, %218
  %222 = and i1 %220, %221
  br i1 %222, label %304, label %223

223:                                              ; preds = %211
  %224 = and i64 %209, 9223372036854775800
  %225 = getelementptr i32, i32* %196, i64 %224
  %226 = getelementptr i32, i32* %198, i64 %224
  %227 = add nsw i64 %224, -8
  %228 = lshr exact i64 %227, 3
  %229 = add nuw nsw i64 %228, 1
  %230 = and i64 %229, 3
  %231 = icmp ult i64 %227, 24
  br i1 %231, label %283, label %232

232:                                              ; preds = %223
  %233 = sub nsw i64 %229, %230
  br label %234

234:                                              ; preds = %234, %232
  %235 = phi i64 [ 0, %232 ], [ %280, %234 ]
  %236 = phi i64 [ %233, %232 ], [ %281, %234 ]
  %237 = getelementptr i32, i32* %196, i64 %235
  %238 = getelementptr i32, i32* %198, i64 %235
  %239 = bitcast i32* %237 to <4 x i32>*
  %240 = load <4 x i32>, <4 x i32>* %239, align 4, !alias.scope !176
  %241 = getelementptr i32, i32* %237, i64 4
  %242 = bitcast i32* %241 to <4 x i32>*
  %243 = load <4 x i32>, <4 x i32>* %242, align 4, !alias.scope !176
  %244 = bitcast i32* %238 to <4 x i32>*
  store <4 x i32> %240, <4 x i32>* %244, align 4, !alias.scope !179, !noalias !176
  %245 = getelementptr i32, i32* %238, i64 4
  %246 = bitcast i32* %245 to <4 x i32>*
  store <4 x i32> %243, <4 x i32>* %246, align 4, !alias.scope !179, !noalias !176
  %247 = or i64 %235, 8
  %248 = getelementptr i32, i32* %196, i64 %247
  %249 = getelementptr i32, i32* %198, i64 %247
  %250 = bitcast i32* %248 to <4 x i32>*
  %251 = load <4 x i32>, <4 x i32>* %250, align 4, !alias.scope !176
  %252 = getelementptr i32, i32* %248, i64 4
  %253 = bitcast i32* %252 to <4 x i32>*
  %254 = load <4 x i32>, <4 x i32>* %253, align 4, !alias.scope !176
  %255 = bitcast i32* %249 to <4 x i32>*
  store <4 x i32> %251, <4 x i32>* %255, align 4, !alias.scope !179, !noalias !176
  %256 = getelementptr i32, i32* %249, i64 4
  %257 = bitcast i32* %256 to <4 x i32>*
  store <4 x i32> %254, <4 x i32>* %257, align 4, !alias.scope !179, !noalias !176
  %258 = or i64 %235, 16
  %259 = getelementptr i32, i32* %196, i64 %258
  %260 = getelementptr i32, i32* %198, i64 %258
  %261 = bitcast i32* %259 to <4 x i32>*
  %262 = load <4 x i32>, <4 x i32>* %261, align 4, !alias.scope !176
  %263 = getelementptr i32, i32* %259, i64 4
  %264 = bitcast i32* %263 to <4 x i32>*
  %265 = load <4 x i32>, <4 x i32>* %264, align 4, !alias.scope !176
  %266 = bitcast i32* %260 to <4 x i32>*
  store <4 x i32> %262, <4 x i32>* %266, align 4, !alias.scope !179, !noalias !176
  %267 = getelementptr i32, i32* %260, i64 4
  %268 = bitcast i32* %267 to <4 x i32>*
  store <4 x i32> %265, <4 x i32>* %268, align 4, !alias.scope !179, !noalias !176
  %269 = or i64 %235, 24
  %270 = getelementptr i32, i32* %196, i64 %269
  %271 = getelementptr i32, i32* %198, i64 %269
  %272 = bitcast i32* %270 to <4 x i32>*
  %273 = load <4 x i32>, <4 x i32>* %272, align 4, !alias.scope !176
  %274 = getelementptr i32, i32* %270, i64 4
  %275 = bitcast i32* %274 to <4 x i32>*
  %276 = load <4 x i32>, <4 x i32>* %275, align 4, !alias.scope !176
  %277 = bitcast i32* %271 to <4 x i32>*
  store <4 x i32> %273, <4 x i32>* %277, align 4, !alias.scope !179, !noalias !176
  %278 = getelementptr i32, i32* %271, i64 4
  %279 = bitcast i32* %278 to <4 x i32>*
  store <4 x i32> %276, <4 x i32>* %279, align 4, !alias.scope !179, !noalias !176
  %280 = add i64 %235, 32
  %281 = add i64 %236, -4
  %282 = icmp eq i64 %281, 0
  br i1 %282, label %283, label %234, !llvm.loop !181

283:                                              ; preds = %234, %223
  %284 = phi i64 [ 0, %223 ], [ %280, %234 ]
  %285 = icmp eq i64 %230, 0
  br i1 %285, label %302, label %286

286:                                              ; preds = %283, %286
  %287 = phi i64 [ %299, %286 ], [ %284, %283 ]
  %288 = phi i64 [ %300, %286 ], [ %230, %283 ]
  %289 = getelementptr i32, i32* %196, i64 %287
  %290 = getelementptr i32, i32* %198, i64 %287
  %291 = bitcast i32* %289 to <4 x i32>*
  %292 = load <4 x i32>, <4 x i32>* %291, align 4, !alias.scope !176
  %293 = getelementptr i32, i32* %289, i64 4
  %294 = bitcast i32* %293 to <4 x i32>*
  %295 = load <4 x i32>, <4 x i32>* %294, align 4, !alias.scope !176
  %296 = bitcast i32* %290 to <4 x i32>*
  store <4 x i32> %292, <4 x i32>* %296, align 4, !alias.scope !179, !noalias !176
  %297 = getelementptr i32, i32* %290, i64 4
  %298 = bitcast i32* %297 to <4 x i32>*
  store <4 x i32> %295, <4 x i32>* %298, align 4, !alias.scope !179, !noalias !176
  %299 = add i64 %287, 8
  %300 = add i64 %288, -1
  %301 = icmp eq i64 %300, 0
  br i1 %301, label %302, label %286, !llvm.loop !182

302:                                              ; preds = %286, %283
  %303 = icmp eq i64 %209, %224
  br i1 %303, label %400, label %304

304:                                              ; preds = %302, %211, %203
  %305 = phi i32* [ %196, %211 ], [ %196, %203 ], [ %225, %302 ]
  %306 = phi i32* [ %198, %211 ], [ %198, %203 ], [ %226, %302 ]
  %307 = ptrtoint i32* %305 to i64
  %308 = add nsw i64 %59, -1
  %309 = getelementptr i32, i32* %4, i64 %308
  %310 = ptrtoint i32* %309 to i64
  %311 = sub i64 %310, %307
  %312 = lshr i64 %311, 2
  %313 = add nuw nsw i64 %312, 1
  %314 = and i64 %313, 7
  %315 = icmp eq i64 %314, 0
  br i1 %315, label %325, label %316

316:                                              ; preds = %304, %316
  %317 = phi i32* [ %321, %316 ], [ %305, %304 ]
  %318 = phi i32* [ %322, %316 ], [ %306, %304 ]
  %319 = phi i64 [ %323, %316 ], [ %314, %304 ]
  %320 = load i32, i32* %317, align 4
  store i32 %320, i32* %318, align 4
  %321 = getelementptr inbounds i32, i32* %317, i64 1
  %322 = getelementptr inbounds i32, i32* %318, i64 1
  %323 = add i64 %319, -1
  %324 = icmp eq i64 %323, 0
  br i1 %324, label %325, label %316, !llvm.loop !183

325:                                              ; preds = %316, %304
  %326 = phi i32* [ %305, %304 ], [ %321, %316 ]
  %327 = phi i32* [ %306, %304 ], [ %322, %316 ]
  %328 = icmp ult i64 %311, 28
  br i1 %328, label %400, label %329

329:                                              ; preds = %325, %329
  %330 = phi i32* [ %354, %329 ], [ %326, %325 ]
  %331 = phi i32* [ %355, %329 ], [ %327, %325 ]
  %332 = load i32, i32* %330, align 4
  store i32 %332, i32* %331, align 4
  %333 = getelementptr inbounds i32, i32* %330, i64 1
  %334 = getelementptr inbounds i32, i32* %331, i64 1
  %335 = load i32, i32* %333, align 4
  store i32 %335, i32* %334, align 4
  %336 = getelementptr inbounds i32, i32* %330, i64 2
  %337 = getelementptr inbounds i32, i32* %331, i64 2
  %338 = load i32, i32* %336, align 4
  store i32 %338, i32* %337, align 4
  %339 = getelementptr inbounds i32, i32* %330, i64 3
  %340 = getelementptr inbounds i32, i32* %331, i64 3
  %341 = load i32, i32* %339, align 4
  store i32 %341, i32* %340, align 4
  %342 = getelementptr inbounds i32, i32* %330, i64 4
  %343 = getelementptr inbounds i32, i32* %331, i64 4
  %344 = load i32, i32* %342, align 4
  store i32 %344, i32* %343, align 4
  %345 = getelementptr inbounds i32, i32* %330, i64 5
  %346 = getelementptr inbounds i32, i32* %331, i64 5
  %347 = load i32, i32* %345, align 4
  store i32 %347, i32* %346, align 4
  %348 = getelementptr inbounds i32, i32* %330, i64 6
  %349 = getelementptr inbounds i32, i32* %331, i64 6
  %350 = load i32, i32* %348, align 4
  store i32 %350, i32* %349, align 4
  %351 = getelementptr inbounds i32, i32* %330, i64 7
  %352 = getelementptr inbounds i32, i32* %331, i64 7
  %353 = load i32, i32* %351, align 4
  store i32 %353, i32* %352, align 4
  %354 = getelementptr inbounds i32, i32* %330, i64 8
  %355 = getelementptr inbounds i32, i32* %331, i64 8
  %356 = icmp eq i32* %354, %64
  br i1 %356, label %400, label %329, !llvm.loop !184

357:                                              ; preds = %195
  %358 = load i32, i32* %197, align 4
  %359 = load i32, i32* %196, align 4
  %360 = icmp slt i32 %358, %359
  br i1 %360, label %361, label %363

361:                                              ; preds = %357
  store i32 %358, i32* %198, align 4
  %362 = getelementptr inbounds i32, i32* %197, i64 1
  br label %365

363:                                              ; preds = %357
  store i32 %359, i32* %198, align 4
  %364 = getelementptr inbounds i32, i32* %196, i64 1
  br label %365

365:                                              ; preds = %363, %361
  %366 = phi i32* [ %362, %361 ], [ %197, %363 ]
  %367 = phi i32* [ %196, %361 ], [ %364, %363 ]
  %368 = getelementptr inbounds i32, i32* %198, i64 1
  %369 = icmp eq i32* %367, %64
  br i1 %369, label %66, label %195

370:                                              ; preds = %98, %370
  %371 = phi i32* [ %395, %370 ], [ %99, %98 ]
  %372 = phi i32* [ %396, %370 ], [ %100, %98 ]
  %373 = load i32, i32* %371, align 4
  store i32 %373, i32* %372, align 4
  %374 = getelementptr inbounds i32, i32* %371, i64 1
  %375 = getelementptr inbounds i32, i32* %372, i64 1
  %376 = load i32, i32* %374, align 4
  store i32 %376, i32* %375, align 4
  %377 = getelementptr inbounds i32, i32* %371, i64 2
  %378 = getelementptr inbounds i32, i32* %372, i64 2
  %379 = load i32, i32* %377, align 4
  store i32 %379, i32* %378, align 4
  %380 = getelementptr inbounds i32, i32* %371, i64 3
  %381 = getelementptr inbounds i32, i32* %372, i64 3
  %382 = load i32, i32* %380, align 4
  store i32 %382, i32* %381, align 4
  %383 = getelementptr inbounds i32, i32* %371, i64 4
  %384 = getelementptr inbounds i32, i32* %372, i64 4
  %385 = load i32, i32* %383, align 4
  store i32 %385, i32* %384, align 4
  %386 = getelementptr inbounds i32, i32* %371, i64 5
  %387 = getelementptr inbounds i32, i32* %372, i64 5
  %388 = load i32, i32* %386, align 4
  store i32 %388, i32* %387, align 4
  %389 = getelementptr inbounds i32, i32* %371, i64 6
  %390 = getelementptr inbounds i32, i32* %372, i64 6
  %391 = load i32, i32* %389, align 4
  store i32 %391, i32* %390, align 4
  %392 = getelementptr inbounds i32, i32* %371, i64 7
  %393 = getelementptr inbounds i32, i32* %372, i64 7
  %394 = load i32, i32* %392, align 4
  store i32 %394, i32* %393, align 4
  %395 = getelementptr inbounds i32, i32* %371, i64 8
  %396 = getelementptr inbounds i32, i32* %372, i64 8
  %397 = icmp eq i32* %395, %65
  br i1 %397, label %400, label %370, !llvm.loop !185

398:                                              ; preds = %58
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN12favicon_base8IconTypeENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeEl(i32* %0, i32* %60, %"struct.base::internal::flat_tree<favicon_base::IconType, base::identity, std::__1::less<void>, std::__1::vector<favicon_base::IconType, std::__1::allocator<favicon_base::IconType> > >::value_compare"* dereferenceable(1) %2, i64 %59, i32* %4, i64 %5)
  %399 = sub nsw i64 %3, %59
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN12favicon_base8IconTypeENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeEl(i32* %60, i32* %1, %"struct.base::internal::flat_tree<favicon_base::IconType, base::identity, std::__1::less<void>, std::__1::vector<favicon_base::IconType, std::__1::allocator<favicon_base::IconType> > >::value_compare"* dereferenceable(1) %2, i64 %399, i32* %4, i64 %5)
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN12favicon_base8IconTypeENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_SJ_T_NS_15iterator_traitsISJ_E15difference_typeESN_PNSM_10value_typeEl(i32* %0, i32* %60, i32* %1, %"struct.base::internal::flat_tree<favicon_base::IconType, base::identity, std::__1::less<void>, std::__1::vector<favicon_base::IconType, std::__1::allocator<favicon_base::IconType> > >::value_compare"* dereferenceable(1) %2, i64 %59, i64 %399, i32* %4, i64 %5)
  ret void

400:                                              ; preds = %98, %370, %325, %329, %39, %408, %193, %302, %200, %66, %18, %16, %8, %13, %6, %6
  ret void

401:                                              ; preds = %51, %406
  %402 = phi i32* [ %403, %406 ], [ %53, %51 ]
  %403 = getelementptr inbounds i32, i32* %402, i64 -1
  %404 = load i32, i32* %403, align 4
  %405 = icmp slt i32 %54, %404
  br i1 %405, label %406, label %408

406:                                              ; preds = %401
  store i32 %404, i32* %402, align 4
  %407 = icmp eq i32* %403, %0
  br i1 %407, label %408, label %401

408:                                              ; preds = %401, %406, %51
  %409 = phi i32* [ %0, %51 ], [ %402, %401 ], [ %0, %406 ]
  store i32 %54, i32* %409, align 4
  %410 = getelementptr inbounds i32, i32* %43, i64 2
  %411 = icmp eq i32* %410, %1
  br i1 %411, label %400, label %42
}

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnwmRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIN12favicon_base8IconTypeENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeE(i32*, i32*, %"struct.base::internal::flat_tree<favicon_base::IconType, base::identity, std::__1::less<void>, std::__1::vector<favicon_base::IconType, std::__1::allocator<favicon_base::IconType> > >::value_compare"* dereferenceable(1), i64, i32*) local_unnamed_addr #0 comdat {
  switch i64 %3, label %19 [
    i64 0, label %390
    i64 1, label %6
    i64 2, label %8
  ]

6:                                                ; preds = %5
  %7 = load i32, i32* %0, align 4
  store i32 %7, i32* %4, align 4
  br label %390

8:                                                ; preds = %5
  %9 = getelementptr inbounds i32, i32* %1, i64 -1
  %10 = load i32, i32* %9, align 4
  %11 = load i32, i32* %0, align 4
  %12 = icmp slt i32 %10, %11
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  store i32 %10, i32* %4, align 4
  %14 = getelementptr inbounds i32, i32* %4, i64 1
  %15 = load i32, i32* %0, align 4
  store i32 %15, i32* %14, align 4
  br label %390

16:                                               ; preds = %8
  store i32 %11, i32* %4, align 4
  %17 = getelementptr inbounds i32, i32* %4, i64 1
  %18 = load i32, i32* %9, align 4
  store i32 %18, i32* %17, align 4
  br label %390

19:                                               ; preds = %5
  %20 = icmp slt i64 %3, 9
  br i1 %20, label %21, label %53

21:                                               ; preds = %19
  %22 = icmp eq i32* %0, %1
  br i1 %22, label %390, label %23

23:                                               ; preds = %21
  %24 = load i32, i32* %0, align 4
  store i32 %24, i32* %4, align 4
  %25 = getelementptr inbounds i32, i32* %0, i64 1
  %26 = icmp eq i32* %25, %1
  br i1 %26, label %390, label %27

27:                                               ; preds = %23, %51
  %28 = phi i32 [ %52, %51 ], [ %24, %23 ]
  %29 = phi i32* [ %49, %51 ], [ %25, %23 ]
  %30 = phi i32* [ %31, %51 ], [ %4, %23 ]
  %31 = getelementptr inbounds i32, i32* %30, i64 1
  %32 = load i32, i32* %29, align 4
  %33 = icmp slt i32 %32, %28
  br i1 %33, label %34, label %47

34:                                               ; preds = %27
  store i32 %28, i32* %31, align 4
  %35 = icmp eq i32* %30, %4
  br i1 %35, label %44, label %36

36:                                               ; preds = %34, %42
  %37 = phi i32* [ %38, %42 ], [ %30, %34 ]
  %38 = getelementptr inbounds i32, i32* %37, i64 -1
  %39 = load i32, i32* %29, align 4
  %40 = load i32, i32* %38, align 4
  %41 = icmp slt i32 %39, %40
  br i1 %41, label %42, label %44

42:                                               ; preds = %36
  store i32 %40, i32* %37, align 4
  %43 = icmp eq i32* %38, %4
  br i1 %43, label %44, label %36

44:                                               ; preds = %42, %36, %34
  %45 = phi i32* [ %4, %34 ], [ %37, %36 ], [ %4, %42 ]
  %46 = load i32, i32* %29, align 4
  store i32 %46, i32* %45, align 4
  br label %48

47:                                               ; preds = %27
  store i32 %32, i32* %31, align 4
  br label %48

48:                                               ; preds = %47, %44
  %49 = getelementptr inbounds i32, i32* %29, i64 1
  %50 = icmp eq i32* %49, %1
  br i1 %50, label %390, label %51

51:                                               ; preds = %48
  %52 = load i32, i32* %31, align 4
  br label %27

53:                                               ; preds = %19
  %54 = lshr i64 %3, 1
  %55 = getelementptr inbounds i32, i32* %0, i64 %54
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN12favicon_base8IconTypeENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeEl(i32* %0, i32* %55, %"struct.base::internal::flat_tree<favicon_base::IconType, base::identity, std::__1::less<void>, std::__1::vector<favicon_base::IconType, std::__1::allocator<favicon_base::IconType> > >::value_compare"* dereferenceable(1) %2, i64 %54, i32* %4, i64 %54)
  %56 = sub nsw i64 %3, %54
  %57 = getelementptr inbounds i32, i32* %4, i64 %54
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN12favicon_base8IconTypeENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeEl(i32* %55, i32* %1, %"struct.base::internal::flat_tree<favicon_base::IconType, base::identity, std::__1::less<void>, std::__1::vector<favicon_base::IconType, std::__1::allocator<favicon_base::IconType> > >::value_compare"* dereferenceable(1) %2, i64 %56, i32* %57, i64 %56)
  %58 = icmp eq i64 %54, 0
  br i1 %58, label %59, label %215

59:                                               ; preds = %385, %53
  %60 = phi i32* [ %55, %53 ], [ %386, %385 ]
  %61 = phi i32* [ %4, %53 ], [ %388, %385 ]
  %62 = ptrtoint i32* %60 to i64
  %63 = icmp eq i32* %60, %1
  br i1 %63, label %390, label %64

64:                                               ; preds = %59
  %65 = getelementptr i32, i32* %1, i64 -1
  %66 = ptrtoint i32* %65 to i64
  %67 = sub i64 %66, %62
  %68 = lshr i64 %67, 2
  %69 = add nuw nsw i64 %68, 1
  %70 = icmp ult i64 %69, 8
  br i1 %70, label %163, label %71

71:                                               ; preds = %64
  %72 = getelementptr i32, i32* %1, i64 -1
  %73 = ptrtoint i32* %72 to i64
  %74 = sub i64 %73, %62
  %75 = lshr i64 %74, 2
  %76 = add nuw nsw i64 %75, 1
  %77 = getelementptr i32, i32* %61, i64 %76
  %78 = getelementptr i32, i32* %60, i64 %76
  %79 = icmp ult i32* %61, %78
  %80 = icmp ult i32* %60, %77
  %81 = and i1 %79, %80
  br i1 %81, label %163, label %82

82:                                               ; preds = %71
  %83 = and i64 %69, 9223372036854775800
  %84 = getelementptr i32, i32* %61, i64 %83
  %85 = getelementptr i32, i32* %60, i64 %83
  %86 = add nsw i64 %83, -8
  %87 = lshr exact i64 %86, 3
  %88 = add nuw nsw i64 %87, 1
  %89 = and i64 %88, 3
  %90 = icmp ult i64 %86, 24
  br i1 %90, label %142, label %91

91:                                               ; preds = %82
  %92 = sub nsw i64 %88, %89
  br label %93

93:                                               ; preds = %93, %91
  %94 = phi i64 [ 0, %91 ], [ %139, %93 ]
  %95 = phi i64 [ %92, %91 ], [ %140, %93 ]
  %96 = getelementptr i32, i32* %61, i64 %94
  %97 = getelementptr i32, i32* %60, i64 %94
  %98 = bitcast i32* %97 to <4 x i32>*
  %99 = load <4 x i32>, <4 x i32>* %98, align 4, !alias.scope !186
  %100 = getelementptr i32, i32* %97, i64 4
  %101 = bitcast i32* %100 to <4 x i32>*
  %102 = load <4 x i32>, <4 x i32>* %101, align 4, !alias.scope !186
  %103 = bitcast i32* %96 to <4 x i32>*
  store <4 x i32> %99, <4 x i32>* %103, align 4, !alias.scope !189, !noalias !186
  %104 = getelementptr i32, i32* %96, i64 4
  %105 = bitcast i32* %104 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %105, align 4, !alias.scope !189, !noalias !186
  %106 = or i64 %94, 8
  %107 = getelementptr i32, i32* %61, i64 %106
  %108 = getelementptr i32, i32* %60, i64 %106
  %109 = bitcast i32* %108 to <4 x i32>*
  %110 = load <4 x i32>, <4 x i32>* %109, align 4, !alias.scope !186
  %111 = getelementptr i32, i32* %108, i64 4
  %112 = bitcast i32* %111 to <4 x i32>*
  %113 = load <4 x i32>, <4 x i32>* %112, align 4, !alias.scope !186
  %114 = bitcast i32* %107 to <4 x i32>*
  store <4 x i32> %110, <4 x i32>* %114, align 4, !alias.scope !189, !noalias !186
  %115 = getelementptr i32, i32* %107, i64 4
  %116 = bitcast i32* %115 to <4 x i32>*
  store <4 x i32> %113, <4 x i32>* %116, align 4, !alias.scope !189, !noalias !186
  %117 = or i64 %94, 16
  %118 = getelementptr i32, i32* %61, i64 %117
  %119 = getelementptr i32, i32* %60, i64 %117
  %120 = bitcast i32* %119 to <4 x i32>*
  %121 = load <4 x i32>, <4 x i32>* %120, align 4, !alias.scope !186
  %122 = getelementptr i32, i32* %119, i64 4
  %123 = bitcast i32* %122 to <4 x i32>*
  %124 = load <4 x i32>, <4 x i32>* %123, align 4, !alias.scope !186
  %125 = bitcast i32* %118 to <4 x i32>*
  store <4 x i32> %121, <4 x i32>* %125, align 4, !alias.scope !189, !noalias !186
  %126 = getelementptr i32, i32* %118, i64 4
  %127 = bitcast i32* %126 to <4 x i32>*
  store <4 x i32> %124, <4 x i32>* %127, align 4, !alias.scope !189, !noalias !186
  %128 = or i64 %94, 24
  %129 = getelementptr i32, i32* %61, i64 %128
  %130 = getelementptr i32, i32* %60, i64 %128
  %131 = bitcast i32* %130 to <4 x i32>*
  %132 = load <4 x i32>, <4 x i32>* %131, align 4, !alias.scope !186
  %133 = getelementptr i32, i32* %130, i64 4
  %134 = bitcast i32* %133 to <4 x i32>*
  %135 = load <4 x i32>, <4 x i32>* %134, align 4, !alias.scope !186
  %136 = bitcast i32* %129 to <4 x i32>*
  store <4 x i32> %132, <4 x i32>* %136, align 4, !alias.scope !189, !noalias !186
  %137 = getelementptr i32, i32* %129, i64 4
  %138 = bitcast i32* %137 to <4 x i32>*
  store <4 x i32> %135, <4 x i32>* %138, align 4, !alias.scope !189, !noalias !186
  %139 = add i64 %94, 32
  %140 = add i64 %95, -4
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %142, label %93, !llvm.loop !191

142:                                              ; preds = %93, %82
  %143 = phi i64 [ 0, %82 ], [ %139, %93 ]
  %144 = icmp eq i64 %89, 0
  br i1 %144, label %161, label %145

145:                                              ; preds = %142, %145
  %146 = phi i64 [ %158, %145 ], [ %143, %142 ]
  %147 = phi i64 [ %159, %145 ], [ %89, %142 ]
  %148 = getelementptr i32, i32* %61, i64 %146
  %149 = getelementptr i32, i32* %60, i64 %146
  %150 = bitcast i32* %149 to <4 x i32>*
  %151 = load <4 x i32>, <4 x i32>* %150, align 4, !alias.scope !186
  %152 = getelementptr i32, i32* %149, i64 4
  %153 = bitcast i32* %152 to <4 x i32>*
  %154 = load <4 x i32>, <4 x i32>* %153, align 4, !alias.scope !186
  %155 = bitcast i32* %148 to <4 x i32>*
  store <4 x i32> %151, <4 x i32>* %155, align 4, !alias.scope !189, !noalias !186
  %156 = getelementptr i32, i32* %148, i64 4
  %157 = bitcast i32* %156 to <4 x i32>*
  store <4 x i32> %154, <4 x i32>* %157, align 4, !alias.scope !189, !noalias !186
  %158 = add i64 %146, 8
  %159 = add i64 %147, -1
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %161, label %145, !llvm.loop !192

161:                                              ; preds = %145, %142
  %162 = icmp eq i64 %69, %83
  br i1 %162, label %390, label %163

163:                                              ; preds = %161, %71, %64
  %164 = phi i32* [ %61, %71 ], [ %61, %64 ], [ %84, %161 ]
  %165 = phi i32* [ %60, %71 ], [ %60, %64 ], [ %85, %161 ]
  %166 = ptrtoint i32* %165 to i64
  %167 = getelementptr i32, i32* %1, i64 -1
  %168 = ptrtoint i32* %167 to i64
  %169 = sub i64 %168, %166
  %170 = lshr i64 %169, 2
  %171 = add nuw nsw i64 %170, 1
  %172 = and i64 %171, 7
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %183, label %174

174:                                              ; preds = %163, %174
  %175 = phi i32* [ %180, %174 ], [ %164, %163 ]
  %176 = phi i32* [ %179, %174 ], [ %165, %163 ]
  %177 = phi i64 [ %181, %174 ], [ %172, %163 ]
  %178 = load i32, i32* %176, align 4
  store i32 %178, i32* %175, align 4
  %179 = getelementptr inbounds i32, i32* %176, i64 1
  %180 = getelementptr inbounds i32, i32* %175, i64 1
  %181 = add i64 %177, -1
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %183, label %174, !llvm.loop !193

183:                                              ; preds = %174, %163
  %184 = phi i32* [ %164, %163 ], [ %180, %174 ]
  %185 = phi i32* [ %165, %163 ], [ %179, %174 ]
  %186 = icmp ult i64 %169, 28
  br i1 %186, label %390, label %187

187:                                              ; preds = %183, %187
  %188 = phi i32* [ %213, %187 ], [ %184, %183 ]
  %189 = phi i32* [ %212, %187 ], [ %185, %183 ]
  %190 = load i32, i32* %189, align 4
  store i32 %190, i32* %188, align 4
  %191 = getelementptr inbounds i32, i32* %189, i64 1
  %192 = getelementptr inbounds i32, i32* %188, i64 1
  %193 = load i32, i32* %191, align 4
  store i32 %193, i32* %192, align 4
  %194 = getelementptr inbounds i32, i32* %189, i64 2
  %195 = getelementptr inbounds i32, i32* %188, i64 2
  %196 = load i32, i32* %194, align 4
  store i32 %196, i32* %195, align 4
  %197 = getelementptr inbounds i32, i32* %189, i64 3
  %198 = getelementptr inbounds i32, i32* %188, i64 3
  %199 = load i32, i32* %197, align 4
  store i32 %199, i32* %198, align 4
  %200 = getelementptr inbounds i32, i32* %189, i64 4
  %201 = getelementptr inbounds i32, i32* %188, i64 4
  %202 = load i32, i32* %200, align 4
  store i32 %202, i32* %201, align 4
  %203 = getelementptr inbounds i32, i32* %189, i64 5
  %204 = getelementptr inbounds i32, i32* %188, i64 5
  %205 = load i32, i32* %203, align 4
  store i32 %205, i32* %204, align 4
  %206 = getelementptr inbounds i32, i32* %189, i64 6
  %207 = getelementptr inbounds i32, i32* %188, i64 6
  %208 = load i32, i32* %206, align 4
  store i32 %208, i32* %207, align 4
  %209 = getelementptr inbounds i32, i32* %189, i64 7
  %210 = getelementptr inbounds i32, i32* %188, i64 7
  %211 = load i32, i32* %209, align 4
  store i32 %211, i32* %210, align 4
  %212 = getelementptr inbounds i32, i32* %189, i64 8
  %213 = getelementptr inbounds i32, i32* %188, i64 8
  %214 = icmp eq i32* %212, %1
  br i1 %214, label %390, label %187, !llvm.loop !194

215:                                              ; preds = %53, %385
  %216 = phi i32* [ %388, %385 ], [ %4, %53 ]
  %217 = phi i32* [ %387, %385 ], [ %0, %53 ]
  %218 = phi i32* [ %386, %385 ], [ %55, %53 ]
  %219 = icmp eq i32* %218, %1
  br i1 %219, label %220, label %377

220:                                              ; preds = %215
  %221 = ptrtoint i32* %217 to i64
  %222 = icmp eq i32* %217, %55
  br i1 %222, label %390, label %223

223:                                              ; preds = %220
  %224 = add nsw i64 %54, -1
  %225 = getelementptr i32, i32* %0, i64 %224
  %226 = ptrtoint i32* %225 to i64
  %227 = sub i64 %226, %221
  %228 = lshr i64 %227, 2
  %229 = add nuw nsw i64 %228, 1
  %230 = icmp ult i64 %229, 8
  br i1 %230, label %324, label %231

231:                                              ; preds = %223
  %232 = add nsw i64 %54, -1
  %233 = getelementptr i32, i32* %0, i64 %232
  %234 = ptrtoint i32* %233 to i64
  %235 = sub i64 %234, %221
  %236 = lshr i64 %235, 2
  %237 = add nuw nsw i64 %236, 1
  %238 = getelementptr i32, i32* %216, i64 %237
  %239 = getelementptr i32, i32* %217, i64 %237
  %240 = icmp ult i32* %216, %239
  %241 = icmp ult i32* %217, %238
  %242 = and i1 %240, %241
  br i1 %242, label %324, label %243

243:                                              ; preds = %231
  %244 = and i64 %229, 9223372036854775800
  %245 = getelementptr i32, i32* %216, i64 %244
  %246 = getelementptr i32, i32* %217, i64 %244
  %247 = add nsw i64 %244, -8
  %248 = lshr exact i64 %247, 3
  %249 = add nuw nsw i64 %248, 1
  %250 = and i64 %249, 3
  %251 = icmp ult i64 %247, 24
  br i1 %251, label %303, label %252

252:                                              ; preds = %243
  %253 = sub nsw i64 %249, %250
  br label %254

254:                                              ; preds = %254, %252
  %255 = phi i64 [ 0, %252 ], [ %300, %254 ]
  %256 = phi i64 [ %253, %252 ], [ %301, %254 ]
  %257 = getelementptr i32, i32* %216, i64 %255
  %258 = getelementptr i32, i32* %217, i64 %255
  %259 = bitcast i32* %258 to <4 x i32>*
  %260 = load <4 x i32>, <4 x i32>* %259, align 4, !alias.scope !195
  %261 = getelementptr i32, i32* %258, i64 4
  %262 = bitcast i32* %261 to <4 x i32>*
  %263 = load <4 x i32>, <4 x i32>* %262, align 4, !alias.scope !195
  %264 = bitcast i32* %257 to <4 x i32>*
  store <4 x i32> %260, <4 x i32>* %264, align 4, !alias.scope !198, !noalias !195
  %265 = getelementptr i32, i32* %257, i64 4
  %266 = bitcast i32* %265 to <4 x i32>*
  store <4 x i32> %263, <4 x i32>* %266, align 4, !alias.scope !198, !noalias !195
  %267 = or i64 %255, 8
  %268 = getelementptr i32, i32* %216, i64 %267
  %269 = getelementptr i32, i32* %217, i64 %267
  %270 = bitcast i32* %269 to <4 x i32>*
  %271 = load <4 x i32>, <4 x i32>* %270, align 4, !alias.scope !195
  %272 = getelementptr i32, i32* %269, i64 4
  %273 = bitcast i32* %272 to <4 x i32>*
  %274 = load <4 x i32>, <4 x i32>* %273, align 4, !alias.scope !195
  %275 = bitcast i32* %268 to <4 x i32>*
  store <4 x i32> %271, <4 x i32>* %275, align 4, !alias.scope !198, !noalias !195
  %276 = getelementptr i32, i32* %268, i64 4
  %277 = bitcast i32* %276 to <4 x i32>*
  store <4 x i32> %274, <4 x i32>* %277, align 4, !alias.scope !198, !noalias !195
  %278 = or i64 %255, 16
  %279 = getelementptr i32, i32* %216, i64 %278
  %280 = getelementptr i32, i32* %217, i64 %278
  %281 = bitcast i32* %280 to <4 x i32>*
  %282 = load <4 x i32>, <4 x i32>* %281, align 4, !alias.scope !195
  %283 = getelementptr i32, i32* %280, i64 4
  %284 = bitcast i32* %283 to <4 x i32>*
  %285 = load <4 x i32>, <4 x i32>* %284, align 4, !alias.scope !195
  %286 = bitcast i32* %279 to <4 x i32>*
  store <4 x i32> %282, <4 x i32>* %286, align 4, !alias.scope !198, !noalias !195
  %287 = getelementptr i32, i32* %279, i64 4
  %288 = bitcast i32* %287 to <4 x i32>*
  store <4 x i32> %285, <4 x i32>* %288, align 4, !alias.scope !198, !noalias !195
  %289 = or i64 %255, 24
  %290 = getelementptr i32, i32* %216, i64 %289
  %291 = getelementptr i32, i32* %217, i64 %289
  %292 = bitcast i32* %291 to <4 x i32>*
  %293 = load <4 x i32>, <4 x i32>* %292, align 4, !alias.scope !195
  %294 = getelementptr i32, i32* %291, i64 4
  %295 = bitcast i32* %294 to <4 x i32>*
  %296 = load <4 x i32>, <4 x i32>* %295, align 4, !alias.scope !195
  %297 = bitcast i32* %290 to <4 x i32>*
  store <4 x i32> %293, <4 x i32>* %297, align 4, !alias.scope !198, !noalias !195
  %298 = getelementptr i32, i32* %290, i64 4
  %299 = bitcast i32* %298 to <4 x i32>*
  store <4 x i32> %296, <4 x i32>* %299, align 4, !alias.scope !198, !noalias !195
  %300 = add i64 %255, 32
  %301 = add i64 %256, -4
  %302 = icmp eq i64 %301, 0
  br i1 %302, label %303, label %254, !llvm.loop !200

303:                                              ; preds = %254, %243
  %304 = phi i64 [ 0, %243 ], [ %300, %254 ]
  %305 = icmp eq i64 %250, 0
  br i1 %305, label %322, label %306

306:                                              ; preds = %303, %306
  %307 = phi i64 [ %319, %306 ], [ %304, %303 ]
  %308 = phi i64 [ %320, %306 ], [ %250, %303 ]
  %309 = getelementptr i32, i32* %216, i64 %307
  %310 = getelementptr i32, i32* %217, i64 %307
  %311 = bitcast i32* %310 to <4 x i32>*
  %312 = load <4 x i32>, <4 x i32>* %311, align 4, !alias.scope !195
  %313 = getelementptr i32, i32* %310, i64 4
  %314 = bitcast i32* %313 to <4 x i32>*
  %315 = load <4 x i32>, <4 x i32>* %314, align 4, !alias.scope !195
  %316 = bitcast i32* %309 to <4 x i32>*
  store <4 x i32> %312, <4 x i32>* %316, align 4, !alias.scope !198, !noalias !195
  %317 = getelementptr i32, i32* %309, i64 4
  %318 = bitcast i32* %317 to <4 x i32>*
  store <4 x i32> %315, <4 x i32>* %318, align 4, !alias.scope !198, !noalias !195
  %319 = add i64 %307, 8
  %320 = add i64 %308, -1
  %321 = icmp eq i64 %320, 0
  br i1 %321, label %322, label %306, !llvm.loop !201

322:                                              ; preds = %306, %303
  %323 = icmp eq i64 %229, %244
  br i1 %323, label %390, label %324

324:                                              ; preds = %322, %231, %223
  %325 = phi i32* [ %216, %231 ], [ %216, %223 ], [ %245, %322 ]
  %326 = phi i32* [ %217, %231 ], [ %217, %223 ], [ %246, %322 ]
  %327 = ptrtoint i32* %326 to i64
  %328 = add nsw i64 %54, -1
  %329 = getelementptr i32, i32* %0, i64 %328
  %330 = ptrtoint i32* %329 to i64
  %331 = sub i64 %330, %327
  %332 = lshr i64 %331, 2
  %333 = add nuw nsw i64 %332, 1
  %334 = and i64 %333, 7
  %335 = icmp eq i64 %334, 0
  br i1 %335, label %345, label %336

336:                                              ; preds = %324, %336
  %337 = phi i32* [ %342, %336 ], [ %325, %324 ]
  %338 = phi i32* [ %341, %336 ], [ %326, %324 ]
  %339 = phi i64 [ %343, %336 ], [ %334, %324 ]
  %340 = load i32, i32* %338, align 4
  store i32 %340, i32* %337, align 4
  %341 = getelementptr inbounds i32, i32* %338, i64 1
  %342 = getelementptr inbounds i32, i32* %337, i64 1
  %343 = add i64 %339, -1
  %344 = icmp eq i64 %343, 0
  br i1 %344, label %345, label %336, !llvm.loop !202

345:                                              ; preds = %336, %324
  %346 = phi i32* [ %325, %324 ], [ %342, %336 ]
  %347 = phi i32* [ %326, %324 ], [ %341, %336 ]
  %348 = icmp ult i64 %331, 28
  br i1 %348, label %390, label %349

349:                                              ; preds = %345, %349
  %350 = phi i32* [ %375, %349 ], [ %346, %345 ]
  %351 = phi i32* [ %374, %349 ], [ %347, %345 ]
  %352 = load i32, i32* %351, align 4
  store i32 %352, i32* %350, align 4
  %353 = getelementptr inbounds i32, i32* %351, i64 1
  %354 = getelementptr inbounds i32, i32* %350, i64 1
  %355 = load i32, i32* %353, align 4
  store i32 %355, i32* %354, align 4
  %356 = getelementptr inbounds i32, i32* %351, i64 2
  %357 = getelementptr inbounds i32, i32* %350, i64 2
  %358 = load i32, i32* %356, align 4
  store i32 %358, i32* %357, align 4
  %359 = getelementptr inbounds i32, i32* %351, i64 3
  %360 = getelementptr inbounds i32, i32* %350, i64 3
  %361 = load i32, i32* %359, align 4
  store i32 %361, i32* %360, align 4
  %362 = getelementptr inbounds i32, i32* %351, i64 4
  %363 = getelementptr inbounds i32, i32* %350, i64 4
  %364 = load i32, i32* %362, align 4
  store i32 %364, i32* %363, align 4
  %365 = getelementptr inbounds i32, i32* %351, i64 5
  %366 = getelementptr inbounds i32, i32* %350, i64 5
  %367 = load i32, i32* %365, align 4
  store i32 %367, i32* %366, align 4
  %368 = getelementptr inbounds i32, i32* %351, i64 6
  %369 = getelementptr inbounds i32, i32* %350, i64 6
  %370 = load i32, i32* %368, align 4
  store i32 %370, i32* %369, align 4
  %371 = getelementptr inbounds i32, i32* %351, i64 7
  %372 = getelementptr inbounds i32, i32* %350, i64 7
  %373 = load i32, i32* %371, align 4
  store i32 %373, i32* %372, align 4
  %374 = getelementptr inbounds i32, i32* %351, i64 8
  %375 = getelementptr inbounds i32, i32* %350, i64 8
  %376 = icmp eq i32* %374, %55
  br i1 %376, label %390, label %349, !llvm.loop !203

377:                                              ; preds = %215
  %378 = load i32, i32* %218, align 4
  %379 = load i32, i32* %217, align 4
  %380 = icmp slt i32 %378, %379
  br i1 %380, label %381, label %383

381:                                              ; preds = %377
  store i32 %378, i32* %216, align 4
  %382 = getelementptr inbounds i32, i32* %218, i64 1
  br label %385

383:                                              ; preds = %377
  store i32 %379, i32* %216, align 4
  %384 = getelementptr inbounds i32, i32* %217, i64 1
  br label %385

385:                                              ; preds = %383, %381
  %386 = phi i32* [ %382, %381 ], [ %218, %383 ]
  %387 = phi i32* [ %217, %381 ], [ %384, %383 ]
  %388 = getelementptr inbounds i32, i32* %216, i64 1
  %389 = icmp eq i32* %387, %55
  br i1 %389, label %59, label %215

390:                                              ; preds = %345, %349, %183, %187, %48, %322, %161, %220, %59, %23, %21, %13, %16, %5, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN12favicon_base8IconTypeENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_SJ_T_NS_15iterator_traitsISJ_E15difference_typeESN_PNSM_10value_typeEl(i32*, i32*, i32*, %"struct.base::internal::flat_tree<favicon_base::IconType, base::identity, std::__1::less<void>, std::__1::vector<favicon_base::IconType, std::__1::allocator<favicon_base::IconType> > >::value_compare"* dereferenceable(1), i64, i64, i32*, i64) local_unnamed_addr #0 comdat {
  %9 = ptrtoint i32* %6 to i64
  %10 = icmp eq i64 %5, 0
  br i1 %10, label %887, label %11

11:                                               ; preds = %8
  %12 = ptrtoint i32* %1 to i64
  %13 = ptrtoint i32* %0 to i64
  br label %14

14:                                               ; preds = %11, %880
  %15 = phi i32* [ %885, %880 ], [ %2, %11 ]
  %16 = phi i64 [ %884, %880 ], [ %4, %11 ]
  %17 = phi i64 [ %883, %880 ], [ %5, %11 ]
  %18 = phi i64 [ %882, %880 ], [ %12, %11 ]
  %19 = phi i64 [ %881, %880 ], [ %13, %11 ]
  %20 = icmp sgt i64 %16, %7
  %21 = icmp sgt i64 %17, %7
  %22 = and i1 %21, %20
  br i1 %22, label %23, label %28

23:                                               ; preds = %14
  %24 = icmp eq i64 %16, 0
  br i1 %24, label %887, label %25

25:                                               ; preds = %23
  %26 = inttoptr i64 %18 to i32*
  %27 = load i32, i32* %26, align 4
  br label %548

28:                                               ; preds = %14
  %29 = inttoptr i64 %19 to i32*
  %30 = inttoptr i64 %19 to i8*
  %31 = inttoptr i64 %18 to i32*
  %32 = inttoptr i64 %18 to i8*
  %33 = icmp sgt i64 %16, %17
  br i1 %33, label %165, label %34

34:                                               ; preds = %28
  %35 = icmp eq i32* %29, %31
  br i1 %35, label %887, label %36

36:                                               ; preds = %34
  %37 = getelementptr i32, i32* %31, i64 -1
  %38 = bitcast i32* %37 to i8*
  %39 = sub i64 0, %19
  %40 = getelementptr i8, i8* %38, i64 %39
  %41 = ptrtoint i8* %40 to i64
  %42 = lshr i64 %41, 2
  %43 = add nuw nsw i64 %42, 1
  %44 = icmp ult i64 %43, 8
  br i1 %44, label %45, label %70

45:                                               ; preds = %163, %70, %36
  %46 = phi i32* [ %6, %70 ], [ %6, %36 ], [ %86, %163 ]
  %47 = phi i32* [ %29, %70 ], [ %29, %36 ], [ %87, %163 ]
  %48 = ptrtoint i32* %47 to i64
  %49 = getelementptr i32, i32* %31, i64 -1
  %50 = ptrtoint i32* %49 to i64
  %51 = sub i64 %50, %48
  %52 = lshr i64 %51, 2
  %53 = add nuw nsw i64 %52, 1
  %54 = and i64 %53, 7
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %65, label %56

56:                                               ; preds = %45, %56
  %57 = phi i32* [ %62, %56 ], [ %46, %45 ]
  %58 = phi i32* [ %61, %56 ], [ %47, %45 ]
  %59 = phi i64 [ %63, %56 ], [ %54, %45 ]
  %60 = load i32, i32* %58, align 4
  store i32 %60, i32* %57, align 4
  %61 = getelementptr inbounds i32, i32* %58, i64 1
  %62 = getelementptr inbounds i32, i32* %57, i64 1
  %63 = add i64 %59, -1
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %56, !llvm.loop !204

65:                                               ; preds = %56, %45
  %66 = phi i32* [ undef, %45 ], [ %62, %56 ]
  %67 = phi i32* [ %46, %45 ], [ %62, %56 ]
  %68 = phi i32* [ %47, %45 ], [ %61, %56 ]
  %69 = icmp ult i64 %51, 28
  br i1 %69, label %296, label %325

70:                                               ; preds = %36
  %71 = getelementptr i32, i32* %31, i64 -1
  %72 = bitcast i32* %71 to i8*
  %73 = sub i64 0, %19
  %74 = getelementptr i8, i8* %72, i64 %73
  %75 = ptrtoint i8* %74 to i64
  %76 = lshr i64 %75, 2
  %77 = add nuw nsw i64 %76, 1
  %78 = getelementptr i32, i32* %6, i64 %77
  %79 = bitcast i32* %78 to i8*
  %80 = getelementptr i32, i32* %29, i64 %77
  %81 = icmp ugt i32* %80, %6
  %82 = icmp ult i8* %30, %79
  %83 = and i1 %81, %82
  br i1 %83, label %45, label %84

84:                                               ; preds = %70
  %85 = and i64 %43, 9223372036854775800
  %86 = getelementptr i32, i32* %6, i64 %85
  %87 = getelementptr i32, i32* %29, i64 %85
  %88 = add nsw i64 %85, -8
  %89 = lshr exact i64 %88, 3
  %90 = add nuw nsw i64 %89, 1
  %91 = and i64 %90, 3
  %92 = icmp ult i64 %88, 24
  br i1 %92, label %144, label %93

93:                                               ; preds = %84
  %94 = sub nsw i64 %90, %91
  br label %95

95:                                               ; preds = %95, %93
  %96 = phi i64 [ 0, %93 ], [ %141, %95 ]
  %97 = phi i64 [ %94, %93 ], [ %142, %95 ]
  %98 = getelementptr i32, i32* %6, i64 %96
  %99 = getelementptr i32, i32* %29, i64 %96
  %100 = bitcast i32* %99 to <4 x i32>*
  %101 = load <4 x i32>, <4 x i32>* %100, align 4, !alias.scope !205
  %102 = getelementptr i32, i32* %99, i64 4
  %103 = bitcast i32* %102 to <4 x i32>*
  %104 = load <4 x i32>, <4 x i32>* %103, align 4, !alias.scope !205
  %105 = bitcast i32* %98 to <4 x i32>*
  store <4 x i32> %101, <4 x i32>* %105, align 4, !alias.scope !208, !noalias !205
  %106 = getelementptr i32, i32* %98, i64 4
  %107 = bitcast i32* %106 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %107, align 4, !alias.scope !208, !noalias !205
  %108 = or i64 %96, 8
  %109 = getelementptr i32, i32* %6, i64 %108
  %110 = getelementptr i32, i32* %29, i64 %108
  %111 = bitcast i32* %110 to <4 x i32>*
  %112 = load <4 x i32>, <4 x i32>* %111, align 4, !alias.scope !205
  %113 = getelementptr i32, i32* %110, i64 4
  %114 = bitcast i32* %113 to <4 x i32>*
  %115 = load <4 x i32>, <4 x i32>* %114, align 4, !alias.scope !205
  %116 = bitcast i32* %109 to <4 x i32>*
  store <4 x i32> %112, <4 x i32>* %116, align 4, !alias.scope !208, !noalias !205
  %117 = getelementptr i32, i32* %109, i64 4
  %118 = bitcast i32* %117 to <4 x i32>*
  store <4 x i32> %115, <4 x i32>* %118, align 4, !alias.scope !208, !noalias !205
  %119 = or i64 %96, 16
  %120 = getelementptr i32, i32* %6, i64 %119
  %121 = getelementptr i32, i32* %29, i64 %119
  %122 = bitcast i32* %121 to <4 x i32>*
  %123 = load <4 x i32>, <4 x i32>* %122, align 4, !alias.scope !205
  %124 = getelementptr i32, i32* %121, i64 4
  %125 = bitcast i32* %124 to <4 x i32>*
  %126 = load <4 x i32>, <4 x i32>* %125, align 4, !alias.scope !205
  %127 = bitcast i32* %120 to <4 x i32>*
  store <4 x i32> %123, <4 x i32>* %127, align 4, !alias.scope !208, !noalias !205
  %128 = getelementptr i32, i32* %120, i64 4
  %129 = bitcast i32* %128 to <4 x i32>*
  store <4 x i32> %126, <4 x i32>* %129, align 4, !alias.scope !208, !noalias !205
  %130 = or i64 %96, 24
  %131 = getelementptr i32, i32* %6, i64 %130
  %132 = getelementptr i32, i32* %29, i64 %130
  %133 = bitcast i32* %132 to <4 x i32>*
  %134 = load <4 x i32>, <4 x i32>* %133, align 4, !alias.scope !205
  %135 = getelementptr i32, i32* %132, i64 4
  %136 = bitcast i32* %135 to <4 x i32>*
  %137 = load <4 x i32>, <4 x i32>* %136, align 4, !alias.scope !205
  %138 = bitcast i32* %131 to <4 x i32>*
  store <4 x i32> %134, <4 x i32>* %138, align 4, !alias.scope !208, !noalias !205
  %139 = getelementptr i32, i32* %131, i64 4
  %140 = bitcast i32* %139 to <4 x i32>*
  store <4 x i32> %137, <4 x i32>* %140, align 4, !alias.scope !208, !noalias !205
  %141 = add i64 %96, 32
  %142 = add i64 %97, -4
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %95, !llvm.loop !210

144:                                              ; preds = %95, %84
  %145 = phi i64 [ 0, %84 ], [ %141, %95 ]
  %146 = icmp eq i64 %91, 0
  br i1 %146, label %163, label %147

147:                                              ; preds = %144, %147
  %148 = phi i64 [ %160, %147 ], [ %145, %144 ]
  %149 = phi i64 [ %161, %147 ], [ %91, %144 ]
  %150 = getelementptr i32, i32* %6, i64 %148
  %151 = getelementptr i32, i32* %29, i64 %148
  %152 = bitcast i32* %151 to <4 x i32>*
  %153 = load <4 x i32>, <4 x i32>* %152, align 4, !alias.scope !205
  %154 = getelementptr i32, i32* %151, i64 4
  %155 = bitcast i32* %154 to <4 x i32>*
  %156 = load <4 x i32>, <4 x i32>* %155, align 4, !alias.scope !205
  %157 = bitcast i32* %150 to <4 x i32>*
  store <4 x i32> %153, <4 x i32>* %157, align 4, !alias.scope !208, !noalias !205
  %158 = getelementptr i32, i32* %150, i64 4
  %159 = bitcast i32* %158 to <4 x i32>*
  store <4 x i32> %156, <4 x i32>* %159, align 4, !alias.scope !208, !noalias !205
  %160 = add i64 %148, 8
  %161 = add i64 %149, -1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %147, !llvm.loop !211

163:                                              ; preds = %147, %144
  %164 = icmp eq i64 %43, %85
  br i1 %164, label %296, label %45

165:                                              ; preds = %28
  %166 = icmp eq i32* %15, %31
  br i1 %166, label %887, label %167

167:                                              ; preds = %165
  %168 = getelementptr i32, i32* %15, i64 -1
  %169 = bitcast i32* %168 to i8*
  %170 = sub i64 0, %18
  %171 = getelementptr i8, i8* %169, i64 %170
  %172 = ptrtoint i8* %171 to i64
  %173 = lshr i64 %172, 2
  %174 = add nuw nsw i64 %173, 1
  %175 = icmp ult i64 %174, 8
  br i1 %175, label %176, label %201

176:                                              ; preds = %294, %201, %167
  %177 = phi i32* [ %6, %201 ], [ %6, %167 ], [ %217, %294 ]
  %178 = phi i32* [ %31, %201 ], [ %31, %167 ], [ %218, %294 ]
  %179 = ptrtoint i32* %178 to i64
  %180 = getelementptr i32, i32* %15, i64 -1
  %181 = ptrtoint i32* %180 to i64
  %182 = sub i64 %181, %179
  %183 = lshr i64 %182, 2
  %184 = add nuw nsw i64 %183, 1
  %185 = and i64 %184, 7
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %196, label %187

187:                                              ; preds = %176, %187
  %188 = phi i32* [ %193, %187 ], [ %177, %176 ]
  %189 = phi i32* [ %192, %187 ], [ %178, %176 ]
  %190 = phi i64 [ %194, %187 ], [ %185, %176 ]
  %191 = load i32, i32* %189, align 4
  store i32 %191, i32* %188, align 4
  %192 = getelementptr inbounds i32, i32* %189, i64 1
  %193 = getelementptr inbounds i32, i32* %188, i64 1
  %194 = add i64 %190, -1
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %196, label %187, !llvm.loop !212

196:                                              ; preds = %187, %176
  %197 = phi i32* [ undef, %176 ], [ %193, %187 ]
  %198 = phi i32* [ %177, %176 ], [ %193, %187 ]
  %199 = phi i32* [ %178, %176 ], [ %192, %187 ]
  %200 = icmp ult i64 %182, 28
  br i1 %200, label %353, label %520

201:                                              ; preds = %167
  %202 = getelementptr i32, i32* %15, i64 -1
  %203 = bitcast i32* %202 to i8*
  %204 = sub i64 0, %18
  %205 = getelementptr i8, i8* %203, i64 %204
  %206 = ptrtoint i8* %205 to i64
  %207 = lshr i64 %206, 2
  %208 = add nuw nsw i64 %207, 1
  %209 = getelementptr i32, i32* %6, i64 %208
  %210 = bitcast i32* %209 to i8*
  %211 = getelementptr i32, i32* %31, i64 %208
  %212 = icmp ugt i32* %211, %6
  %213 = icmp ult i8* %32, %210
  %214 = and i1 %212, %213
  br i1 %214, label %176, label %215

215:                                              ; preds = %201
  %216 = and i64 %174, 9223372036854775800
  %217 = getelementptr i32, i32* %6, i64 %216
  %218 = getelementptr i32, i32* %31, i64 %216
  %219 = add nsw i64 %216, -8
  %220 = lshr exact i64 %219, 3
  %221 = add nuw nsw i64 %220, 1
  %222 = and i64 %221, 3
  %223 = icmp ult i64 %219, 24
  br i1 %223, label %275, label %224

224:                                              ; preds = %215
  %225 = sub nsw i64 %221, %222
  br label %226

226:                                              ; preds = %226, %224
  %227 = phi i64 [ 0, %224 ], [ %272, %226 ]
  %228 = phi i64 [ %225, %224 ], [ %273, %226 ]
  %229 = getelementptr i32, i32* %6, i64 %227
  %230 = getelementptr i32, i32* %31, i64 %227
  %231 = bitcast i32* %230 to <4 x i32>*
  %232 = load <4 x i32>, <4 x i32>* %231, align 4, !alias.scope !213
  %233 = getelementptr i32, i32* %230, i64 4
  %234 = bitcast i32* %233 to <4 x i32>*
  %235 = load <4 x i32>, <4 x i32>* %234, align 4, !alias.scope !213
  %236 = bitcast i32* %229 to <4 x i32>*
  store <4 x i32> %232, <4 x i32>* %236, align 4, !alias.scope !216, !noalias !213
  %237 = getelementptr i32, i32* %229, i64 4
  %238 = bitcast i32* %237 to <4 x i32>*
  store <4 x i32> %235, <4 x i32>* %238, align 4, !alias.scope !216, !noalias !213
  %239 = or i64 %227, 8
  %240 = getelementptr i32, i32* %6, i64 %239
  %241 = getelementptr i32, i32* %31, i64 %239
  %242 = bitcast i32* %241 to <4 x i32>*
  %243 = load <4 x i32>, <4 x i32>* %242, align 4, !alias.scope !213
  %244 = getelementptr i32, i32* %241, i64 4
  %245 = bitcast i32* %244 to <4 x i32>*
  %246 = load <4 x i32>, <4 x i32>* %245, align 4, !alias.scope !213
  %247 = bitcast i32* %240 to <4 x i32>*
  store <4 x i32> %243, <4 x i32>* %247, align 4, !alias.scope !216, !noalias !213
  %248 = getelementptr i32, i32* %240, i64 4
  %249 = bitcast i32* %248 to <4 x i32>*
  store <4 x i32> %246, <4 x i32>* %249, align 4, !alias.scope !216, !noalias !213
  %250 = or i64 %227, 16
  %251 = getelementptr i32, i32* %6, i64 %250
  %252 = getelementptr i32, i32* %31, i64 %250
  %253 = bitcast i32* %252 to <4 x i32>*
  %254 = load <4 x i32>, <4 x i32>* %253, align 4, !alias.scope !213
  %255 = getelementptr i32, i32* %252, i64 4
  %256 = bitcast i32* %255 to <4 x i32>*
  %257 = load <4 x i32>, <4 x i32>* %256, align 4, !alias.scope !213
  %258 = bitcast i32* %251 to <4 x i32>*
  store <4 x i32> %254, <4 x i32>* %258, align 4, !alias.scope !216, !noalias !213
  %259 = getelementptr i32, i32* %251, i64 4
  %260 = bitcast i32* %259 to <4 x i32>*
  store <4 x i32> %257, <4 x i32>* %260, align 4, !alias.scope !216, !noalias !213
  %261 = or i64 %227, 24
  %262 = getelementptr i32, i32* %6, i64 %261
  %263 = getelementptr i32, i32* %31, i64 %261
  %264 = bitcast i32* %263 to <4 x i32>*
  %265 = load <4 x i32>, <4 x i32>* %264, align 4, !alias.scope !213
  %266 = getelementptr i32, i32* %263, i64 4
  %267 = bitcast i32* %266 to <4 x i32>*
  %268 = load <4 x i32>, <4 x i32>* %267, align 4, !alias.scope !213
  %269 = bitcast i32* %262 to <4 x i32>*
  store <4 x i32> %265, <4 x i32>* %269, align 4, !alias.scope !216, !noalias !213
  %270 = getelementptr i32, i32* %262, i64 4
  %271 = bitcast i32* %270 to <4 x i32>*
  store <4 x i32> %268, <4 x i32>* %271, align 4, !alias.scope !216, !noalias !213
  %272 = add i64 %227, 32
  %273 = add i64 %228, -4
  %274 = icmp eq i64 %273, 0
  br i1 %274, label %275, label %226, !llvm.loop !218

275:                                              ; preds = %226, %215
  %276 = phi i64 [ 0, %215 ], [ %272, %226 ]
  %277 = icmp eq i64 %222, 0
  br i1 %277, label %294, label %278

278:                                              ; preds = %275, %278
  %279 = phi i64 [ %291, %278 ], [ %276, %275 ]
  %280 = phi i64 [ %292, %278 ], [ %222, %275 ]
  %281 = getelementptr i32, i32* %6, i64 %279
  %282 = getelementptr i32, i32* %31, i64 %279
  %283 = bitcast i32* %282 to <4 x i32>*
  %284 = load <4 x i32>, <4 x i32>* %283, align 4, !alias.scope !213
  %285 = getelementptr i32, i32* %282, i64 4
  %286 = bitcast i32* %285 to <4 x i32>*
  %287 = load <4 x i32>, <4 x i32>* %286, align 4, !alias.scope !213
  %288 = bitcast i32* %281 to <4 x i32>*
  store <4 x i32> %284, <4 x i32>* %288, align 4, !alias.scope !216, !noalias !213
  %289 = getelementptr i32, i32* %281, i64 4
  %290 = bitcast i32* %289 to <4 x i32>*
  store <4 x i32> %287, <4 x i32>* %290, align 4, !alias.scope !216, !noalias !213
  %291 = add i64 %279, 8
  %292 = add i64 %280, -1
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %294, label %278, !llvm.loop !219

294:                                              ; preds = %278, %275
  %295 = icmp eq i64 %174, %216
  br i1 %295, label %353, label %176

296:                                              ; preds = %65, %325, %163
  %297 = phi i32* [ %86, %163 ], [ %66, %65 ], [ %351, %325 ]
  %298 = icmp eq i32* %297, %6
  br i1 %298, label %887, label %299

299:                                              ; preds = %296, %320
  %300 = phi i32* [ %322, %320 ], [ %6, %296 ]
  %301 = phi i32* [ %323, %320 ], [ %29, %296 ]
  %302 = phi i32* [ %321, %320 ], [ %31, %296 ]
  %303 = icmp eq i32* %302, %15
  br i1 %303, label %304, label %312

304:                                              ; preds = %299
  %305 = ptrtoint i32* %297 to i64
  %306 = ptrtoint i32* %300 to i64
  %307 = sub i64 %305, %306
  %308 = icmp eq i64 %307, 0
  br i1 %308, label %887, label %309

309:                                              ; preds = %304
  %310 = bitcast i32* %301 to i8*
  %311 = bitcast i32* %300 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %310, i8* align 4 %311, i64 %307, i1 false) #12
  br label %887

312:                                              ; preds = %299
  %313 = load i32, i32* %302, align 4
  %314 = load i32, i32* %300, align 4
  %315 = icmp slt i32 %313, %314
  br i1 %315, label %316, label %318

316:                                              ; preds = %312
  store i32 %313, i32* %301, align 4
  %317 = getelementptr inbounds i32, i32* %302, i64 1
  br label %320

318:                                              ; preds = %312
  store i32 %314, i32* %301, align 4
  %319 = getelementptr inbounds i32, i32* %300, i64 1
  br label %320

320:                                              ; preds = %318, %316
  %321 = phi i32* [ %317, %316 ], [ %302, %318 ]
  %322 = phi i32* [ %300, %316 ], [ %319, %318 ]
  %323 = getelementptr inbounds i32, i32* %301, i64 1
  %324 = icmp eq i32* %322, %297
  br i1 %324, label %887, label %299

325:                                              ; preds = %65, %325
  %326 = phi i32* [ %351, %325 ], [ %67, %65 ]
  %327 = phi i32* [ %350, %325 ], [ %68, %65 ]
  %328 = load i32, i32* %327, align 4
  store i32 %328, i32* %326, align 4
  %329 = getelementptr inbounds i32, i32* %327, i64 1
  %330 = getelementptr inbounds i32, i32* %326, i64 1
  %331 = load i32, i32* %329, align 4
  store i32 %331, i32* %330, align 4
  %332 = getelementptr inbounds i32, i32* %327, i64 2
  %333 = getelementptr inbounds i32, i32* %326, i64 2
  %334 = load i32, i32* %332, align 4
  store i32 %334, i32* %333, align 4
  %335 = getelementptr inbounds i32, i32* %327, i64 3
  %336 = getelementptr inbounds i32, i32* %326, i64 3
  %337 = load i32, i32* %335, align 4
  store i32 %337, i32* %336, align 4
  %338 = getelementptr inbounds i32, i32* %327, i64 4
  %339 = getelementptr inbounds i32, i32* %326, i64 4
  %340 = load i32, i32* %338, align 4
  store i32 %340, i32* %339, align 4
  %341 = getelementptr inbounds i32, i32* %327, i64 5
  %342 = getelementptr inbounds i32, i32* %326, i64 5
  %343 = load i32, i32* %341, align 4
  store i32 %343, i32* %342, align 4
  %344 = getelementptr inbounds i32, i32* %327, i64 6
  %345 = getelementptr inbounds i32, i32* %326, i64 6
  %346 = load i32, i32* %344, align 4
  store i32 %346, i32* %345, align 4
  %347 = getelementptr inbounds i32, i32* %327, i64 7
  %348 = getelementptr inbounds i32, i32* %326, i64 7
  %349 = load i32, i32* %347, align 4
  store i32 %349, i32* %348, align 4
  %350 = getelementptr inbounds i32, i32* %327, i64 8
  %351 = getelementptr inbounds i32, i32* %326, i64 8
  %352 = icmp eq i32* %350, %31
  br i1 %352, label %296, label %325, !llvm.loop !220

353:                                              ; preds = %196, %520, %294
  %354 = phi i32* [ %217, %294 ], [ %197, %196 ], [ %546, %520 ]
  %355 = icmp eq i32* %354, %6
  br i1 %355, label %887, label %356

356:                                              ; preds = %353, %509
  %357 = phi i32* [ %515, %509 ], [ %15, %353 ]
  %358 = phi i32* [ %518, %509 ], [ %354, %353 ]
  %359 = phi i32* [ %517, %509 ], [ %31, %353 ]
  %360 = icmp eq i32* %359, %29
  br i1 %360, label %361, label %509

361:                                              ; preds = %356
  %362 = getelementptr i32, i32* %358, i64 -1
  %363 = ptrtoint i32* %362 to i64
  %364 = sub i64 %363, %9
  %365 = lshr i64 %364, 2
  %366 = add nuw nsw i64 %365, 1
  %367 = icmp ult i64 %366, 8
  br i1 %367, label %458, label %368

368:                                              ; preds = %361
  %369 = getelementptr i32, i32* %358, i64 -1
  %370 = ptrtoint i32* %369 to i64
  %371 = sub i64 %370, %9
  %372 = lshr i64 %371, 2
  %373 = xor i64 %372, -1
  %374 = getelementptr i32, i32* %357, i64 %373
  %375 = getelementptr i32, i32* %358, i64 %373
  %376 = icmp ult i32* %374, %358
  %377 = icmp ult i32* %375, %357
  %378 = and i1 %376, %377
  br i1 %378, label %458, label %379

379:                                              ; preds = %368
  %380 = and i64 %366, 9223372036854775800
  %381 = sub nsw i64 0, %380
  %382 = getelementptr i32, i32* %358, i64 %381
  %383 = sub nsw i64 0, %380
  %384 = getelementptr i32, i32* %357, i64 %383
  %385 = add nsw i64 %380, -8
  %386 = lshr exact i64 %385, 3
  %387 = add nuw nsw i64 %386, 1
  %388 = and i64 %387, 1
  %389 = icmp eq i64 %385, 0
  br i1 %389, label %436, label %390

390:                                              ; preds = %379
  %391 = sub nuw nsw i64 %387, %388
  %392 = getelementptr i32, i32* %358, i64 -1
  %393 = getelementptr i32, i32* %357, i64 -1
  %394 = getelementptr i32, i32* %358, i64 -1
  %395 = getelementptr i32, i32* %357, i64 -1
  br label %396

396:                                              ; preds = %396, %390
  %397 = phi i64 [ 0, %390 ], [ %431, %396 ]
  %398 = phi i64 [ %391, %390 ], [ %432, %396 ]
  %399 = sub i64 0, %397
  %400 = sub i64 0, %397
  %401 = getelementptr inbounds i32, i32* %392, i64 %399
  %402 = getelementptr inbounds i32, i32* %401, i64 -3
  %403 = bitcast i32* %402 to <4 x i32>*
  %404 = load <4 x i32>, <4 x i32>* %403, align 4, !alias.scope !221
  %405 = getelementptr inbounds i32, i32* %401, i64 -4
  %406 = getelementptr inbounds i32, i32* %405, i64 -3
  %407 = bitcast i32* %406 to <4 x i32>*
  %408 = load <4 x i32>, <4 x i32>* %407, align 4, !alias.scope !221
  %409 = getelementptr inbounds i32, i32* %393, i64 %400
  %410 = getelementptr inbounds i32, i32* %409, i64 -3
  %411 = bitcast i32* %410 to <4 x i32>*
  store <4 x i32> %404, <4 x i32>* %411, align 4, !alias.scope !224, !noalias !221
  %412 = getelementptr inbounds i32, i32* %409, i64 -4
  %413 = getelementptr inbounds i32, i32* %412, i64 -3
  %414 = bitcast i32* %413 to <4 x i32>*
  store <4 x i32> %408, <4 x i32>* %414, align 4, !alias.scope !224, !noalias !221
  %415 = sub nuw nsw i64 -8, %397
  %416 = sub nuw nsw i64 -8, %397
  %417 = getelementptr inbounds i32, i32* %394, i64 %415
  %418 = getelementptr inbounds i32, i32* %417, i64 -3
  %419 = bitcast i32* %418 to <4 x i32>*
  %420 = load <4 x i32>, <4 x i32>* %419, align 4, !alias.scope !221
  %421 = getelementptr inbounds i32, i32* %417, i64 -4
  %422 = getelementptr inbounds i32, i32* %421, i64 -3
  %423 = bitcast i32* %422 to <4 x i32>*
  %424 = load <4 x i32>, <4 x i32>* %423, align 4, !alias.scope !221
  %425 = getelementptr inbounds i32, i32* %395, i64 %416
  %426 = getelementptr inbounds i32, i32* %425, i64 -3
  %427 = bitcast i32* %426 to <4 x i32>*
  store <4 x i32> %420, <4 x i32>* %427, align 4, !alias.scope !224, !noalias !221
  %428 = getelementptr inbounds i32, i32* %425, i64 -4
  %429 = getelementptr inbounds i32, i32* %428, i64 -3
  %430 = bitcast i32* %429 to <4 x i32>*
  store <4 x i32> %424, <4 x i32>* %430, align 4, !alias.scope !224, !noalias !221
  %431 = add i64 %397, 16
  %432 = add i64 %398, -2
  %433 = icmp eq i64 %432, 0
  br i1 %433, label %434, label %396, !llvm.loop !226

434:                                              ; preds = %396
  %435 = sub nuw nsw i64 -16, %397
  br label %436

436:                                              ; preds = %434, %379
  %437 = phi i64 [ 0, %379 ], [ %435, %434 ]
  %438 = icmp eq i64 %388, 0
  br i1 %438, label %456, label %439

439:                                              ; preds = %436
  %440 = getelementptr i32, i32* %358, i64 -1
  %441 = getelementptr i32, i32* %357, i64 -1
  %442 = getelementptr inbounds i32, i32* %440, i64 %437
  %443 = getelementptr inbounds i32, i32* %442, i64 -3
  %444 = bitcast i32* %443 to <4 x i32>*
  %445 = load <4 x i32>, <4 x i32>* %444, align 4, !alias.scope !221
  %446 = getelementptr inbounds i32, i32* %442, i64 -4
  %447 = getelementptr inbounds i32, i32* %446, i64 -3
  %448 = bitcast i32* %447 to <4 x i32>*
  %449 = load <4 x i32>, <4 x i32>* %448, align 4, !alias.scope !221
  %450 = getelementptr inbounds i32, i32* %441, i64 %437
  %451 = getelementptr inbounds i32, i32* %450, i64 -3
  %452 = bitcast i32* %451 to <4 x i32>*
  store <4 x i32> %445, <4 x i32>* %452, align 4, !alias.scope !224, !noalias !221
  %453 = getelementptr inbounds i32, i32* %450, i64 -4
  %454 = getelementptr inbounds i32, i32* %453, i64 -3
  %455 = bitcast i32* %454 to <4 x i32>*
  store <4 x i32> %449, <4 x i32>* %455, align 4, !alias.scope !224, !noalias !221
  br label %456

456:                                              ; preds = %436, %439
  %457 = icmp eq i64 %366, %380
  br i1 %457, label %887, label %458

458:                                              ; preds = %456, %368, %361
  %459 = phi i32* [ %358, %368 ], [ %358, %361 ], [ %382, %456 ]
  %460 = phi i32* [ %357, %368 ], [ %357, %361 ], [ %384, %456 ]
  %461 = getelementptr i32, i32* %459, i64 -1
  %462 = ptrtoint i32* %461 to i64
  %463 = sub i64 %462, %9
  %464 = lshr i64 %463, 2
  %465 = add nuw nsw i64 %464, 1
  %466 = and i64 %465, 7
  %467 = icmp eq i64 %466, 0
  br i1 %467, label %477, label %468

468:                                              ; preds = %458, %468
  %469 = phi i32* [ %472, %468 ], [ %459, %458 ]
  %470 = phi i32* [ %474, %468 ], [ %460, %458 ]
  %471 = phi i64 [ %475, %468 ], [ %466, %458 ]
  %472 = getelementptr inbounds i32, i32* %469, i64 -1
  %473 = load i32, i32* %472, align 4
  %474 = getelementptr inbounds i32, i32* %470, i64 -1
  store i32 %473, i32* %474, align 4
  %475 = add i64 %471, -1
  %476 = icmp eq i64 %475, 0
  br i1 %476, label %477, label %468, !llvm.loop !227

477:                                              ; preds = %468, %458
  %478 = phi i32* [ %459, %458 ], [ %472, %468 ]
  %479 = phi i32* [ %460, %458 ], [ %474, %468 ]
  %480 = icmp ult i64 %463, 28
  br i1 %480, label %887, label %481

481:                                              ; preds = %477, %481
  %482 = phi i32* [ %505, %481 ], [ %478, %477 ]
  %483 = phi i32* [ %507, %481 ], [ %479, %477 ]
  %484 = getelementptr inbounds i32, i32* %482, i64 -1
  %485 = load i32, i32* %484, align 4
  %486 = getelementptr inbounds i32, i32* %483, i64 -1
  store i32 %485, i32* %486, align 4
  %487 = getelementptr inbounds i32, i32* %482, i64 -2
  %488 = load i32, i32* %487, align 4
  %489 = getelementptr inbounds i32, i32* %483, i64 -2
  store i32 %488, i32* %489, align 4
  %490 = getelementptr inbounds i32, i32* %482, i64 -3
  %491 = load i32, i32* %490, align 4
  %492 = getelementptr inbounds i32, i32* %483, i64 -3
  store i32 %491, i32* %492, align 4
  %493 = getelementptr inbounds i32, i32* %482, i64 -4
  %494 = load i32, i32* %493, align 4
  %495 = getelementptr inbounds i32, i32* %483, i64 -4
  store i32 %494, i32* %495, align 4
  %496 = getelementptr inbounds i32, i32* %482, i64 -5
  %497 = load i32, i32* %496, align 4
  %498 = getelementptr inbounds i32, i32* %483, i64 -5
  store i32 %497, i32* %498, align 4
  %499 = getelementptr inbounds i32, i32* %482, i64 -6
  %500 = load i32, i32* %499, align 4
  %501 = getelementptr inbounds i32, i32* %483, i64 -6
  store i32 %500, i32* %501, align 4
  %502 = getelementptr inbounds i32, i32* %482, i64 -7
  %503 = load i32, i32* %502, align 4
  %504 = getelementptr inbounds i32, i32* %483, i64 -7
  store i32 %503, i32* %504, align 4
  %505 = getelementptr inbounds i32, i32* %482, i64 -8
  %506 = load i32, i32* %505, align 4
  %507 = getelementptr inbounds i32, i32* %483, i64 -8
  store i32 %506, i32* %507, align 4
  %508 = icmp eq i32* %505, %6
  br i1 %508, label %887, label %481, !llvm.loop !228

509:                                              ; preds = %356
  %510 = getelementptr inbounds i32, i32* %359, i64 -1
  %511 = getelementptr inbounds i32, i32* %358, i64 -1
  %512 = load i32, i32* %511, align 4
  %513 = load i32, i32* %510, align 4
  %514 = icmp slt i32 %512, %513
  %515 = getelementptr inbounds i32, i32* %357, i64 -1
  %516 = select i1 %514, i32 %513, i32 %512
  %517 = select i1 %514, i32* %510, i32* %359
  %518 = select i1 %514, i32* %358, i32* %511
  store i32 %516, i32* %515, align 4
  %519 = icmp eq i32* %518, %6
  br i1 %519, label %887, label %356

520:                                              ; preds = %196, %520
  %521 = phi i32* [ %546, %520 ], [ %198, %196 ]
  %522 = phi i32* [ %545, %520 ], [ %199, %196 ]
  %523 = load i32, i32* %522, align 4
  store i32 %523, i32* %521, align 4
  %524 = getelementptr inbounds i32, i32* %522, i64 1
  %525 = getelementptr inbounds i32, i32* %521, i64 1
  %526 = load i32, i32* %524, align 4
  store i32 %526, i32* %525, align 4
  %527 = getelementptr inbounds i32, i32* %522, i64 2
  %528 = getelementptr inbounds i32, i32* %521, i64 2
  %529 = load i32, i32* %527, align 4
  store i32 %529, i32* %528, align 4
  %530 = getelementptr inbounds i32, i32* %522, i64 3
  %531 = getelementptr inbounds i32, i32* %521, i64 3
  %532 = load i32, i32* %530, align 4
  store i32 %532, i32* %531, align 4
  %533 = getelementptr inbounds i32, i32* %522, i64 4
  %534 = getelementptr inbounds i32, i32* %521, i64 4
  %535 = load i32, i32* %533, align 4
  store i32 %535, i32* %534, align 4
  %536 = getelementptr inbounds i32, i32* %522, i64 5
  %537 = getelementptr inbounds i32, i32* %521, i64 5
  %538 = load i32, i32* %536, align 4
  store i32 %538, i32* %537, align 4
  %539 = getelementptr inbounds i32, i32* %522, i64 6
  %540 = getelementptr inbounds i32, i32* %521, i64 6
  %541 = load i32, i32* %539, align 4
  store i32 %541, i32* %540, align 4
  %542 = getelementptr inbounds i32, i32* %522, i64 7
  %543 = getelementptr inbounds i32, i32* %521, i64 7
  %544 = load i32, i32* %542, align 4
  store i32 %544, i32* %543, align 4
  %545 = getelementptr inbounds i32, i32* %522, i64 8
  %546 = getelementptr inbounds i32, i32* %521, i64 8
  %547 = icmp eq i32* %545, %15
  br i1 %547, label %353, label %520, !llvm.loop !229

548:                                              ; preds = %25, %554
  %549 = phi i64 [ %16, %25 ], [ %557, %554 ]
  %550 = phi i64 [ %19, %25 ], [ %556, %554 ]
  %551 = inttoptr i64 %550 to i32*
  %552 = load i32, i32* %551, align 4
  %553 = icmp slt i32 %27, %552
  br i1 %553, label %559, label %554

554:                                              ; preds = %548
  %555 = getelementptr inbounds i32, i32* %551, i64 1
  %556 = ptrtoint i32* %555 to i64
  %557 = add nsw i64 %549, -1
  %558 = icmp eq i64 %557, 0
  br i1 %558, label %887, label %548

559:                                              ; preds = %548
  %560 = inttoptr i64 %550 to i32*
  %561 = icmp slt i64 %549, %17
  br i1 %561, label %562, label %589

562:                                              ; preds = %559
  %563 = sdiv i64 %17, 2
  %564 = getelementptr inbounds i32, i32* %26, i64 %563
  %565 = ptrtoint i32* %564 to i64
  %566 = sub i64 %18, %550
  %567 = icmp eq i64 %566, 0
  br i1 %567, label %584, label %568

568:                                              ; preds = %562
  %569 = ashr exact i64 %566, 2
  %570 = load i32, i32* %564, align 4
  br label %571

571:                                              ; preds = %571, %568
  %572 = phi i32* [ %560, %568 ], [ %582, %571 ]
  %573 = phi i64 [ %569, %568 ], [ %581, %571 ]
  %574 = lshr i64 %573, 1
  %575 = getelementptr inbounds i32, i32* %572, i64 %574
  %576 = load i32, i32* %575, align 4
  %577 = icmp slt i32 %570, %576
  %578 = getelementptr inbounds i32, i32* %575, i64 1
  %579 = xor i64 %574, -1
  %580 = add i64 %573, %579
  %581 = select i1 %577, i64 %574, i64 %580
  %582 = select i1 %577, i32* %572, i32* %578
  %583 = icmp eq i64 %581, 0
  br i1 %583, label %584, label %571

584:                                              ; preds = %571, %562
  %585 = phi i32* [ %560, %562 ], [ %582, %571 ]
  %586 = ptrtoint i32* %585 to i64
  %587 = sub i64 %586, %550
  %588 = ashr exact i64 %587, 2
  br label %622

589:                                              ; preds = %559
  %590 = icmp eq i64 %549, 1
  br i1 %590, label %591, label %594

591:                                              ; preds = %589
  %592 = inttoptr i64 %18 to i32*
  %593 = inttoptr i64 %550 to i32*
  store i32 %27, i32* %593, align 4
  store i32 %552, i32* %592, align 4
  br label %887

594:                                              ; preds = %589
  %595 = sdiv i64 %549, 2
  %596 = getelementptr inbounds i32, i32* %560, i64 %595
  %597 = ptrtoint i32* %596 to i64
  %598 = ptrtoint i32* %15 to i64
  %599 = sub i64 %598, %18
  %600 = icmp eq i64 %599, 0
  br i1 %600, label %617, label %601

601:                                              ; preds = %594
  %602 = ashr exact i64 %599, 2
  %603 = load i32, i32* %596, align 4
  br label %604

604:                                              ; preds = %604, %601
  %605 = phi i32* [ %26, %601 ], [ %615, %604 ]
  %606 = phi i64 [ %602, %601 ], [ %614, %604 ]
  %607 = lshr i64 %606, 1
  %608 = getelementptr inbounds i32, i32* %605, i64 %607
  %609 = load i32, i32* %608, align 4
  %610 = icmp slt i32 %609, %603
  %611 = getelementptr inbounds i32, i32* %608, i64 1
  %612 = xor i64 %607, -1
  %613 = add i64 %606, %612
  %614 = select i1 %610, i64 %613, i64 %607
  %615 = select i1 %610, i32* %611, i32* %605
  %616 = icmp eq i64 %614, 0
  br i1 %616, label %617, label %604

617:                                              ; preds = %604, %594
  %618 = phi i32* [ %26, %594 ], [ %615, %604 ]
  %619 = ptrtoint i32* %618 to i64
  %620 = sub i64 %619, %18
  %621 = ashr exact i64 %620, 2
  br label %622

622:                                              ; preds = %617, %584
  %623 = phi i64 [ %586, %584 ], [ %597, %617 ]
  %624 = phi i64 [ %565, %584 ], [ %619, %617 ]
  %625 = phi i64 [ %563, %584 ], [ %621, %617 ]
  %626 = phi i64 [ %588, %584 ], [ %595, %617 ]
  %627 = sub nsw i64 %549, %626
  %628 = sub nsw i64 %17, %625
  %629 = inttoptr i64 %623 to i32*
  %630 = inttoptr i64 %624 to i32*
  %631 = inttoptr i64 %623 to i8*
  %632 = inttoptr i64 %18 to i8*
  %633 = icmp eq i32* %629, %26
  br i1 %633, label %872, label %634

634:                                              ; preds = %622
  %635 = icmp eq i32* %26, %630
  br i1 %635, label %872, label %636

636:                                              ; preds = %634
  %637 = getelementptr inbounds i32, i32* %629, i64 1
  %638 = icmp eq i32* %637, %26
  br i1 %638, label %639, label %647

639:                                              ; preds = %636
  %640 = load i32, i32* %629, align 4
  %641 = sub i64 %624, %18
  %642 = ashr exact i64 %641, 2
  %643 = icmp eq i64 %641, 0
  br i1 %643, label %645, label %644

644:                                              ; preds = %639
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %631, i8* align 4 %632, i64 %641, i1 false) #12
  br label %645

645:                                              ; preds = %644, %639
  %646 = getelementptr inbounds i32, i32* %629, i64 %642
  store i32 %640, i32* %646, align 4
  br label %872

647:                                              ; preds = %636
  %648 = getelementptr inbounds i32, i32* %26, i64 1
  %649 = icmp eq i32* %648, %630
  br i1 %649, label %650, label %663

650:                                              ; preds = %647
  %651 = getelementptr inbounds i32, i32* %630, i64 -1
  %652 = load i32, i32* %651, align 4
  %653 = ptrtoint i32* %651 to i64
  %654 = sub i64 %653, %623
  %655 = icmp eq i64 %654, 0
  br i1 %655, label %661, label %656

656:                                              ; preds = %650
  %657 = ashr exact i64 %654, 2
  %658 = sub nsw i64 0, %657
  %659 = getelementptr inbounds i32, i32* %630, i64 %658
  %660 = bitcast i32* %659 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %660, i8* align 4 %631, i64 %654, i1 false) #12
  br label %661

661:                                              ; preds = %656, %650
  %662 = phi i32* [ %659, %656 ], [ %630, %650 ]
  store i32 %652, i32* %629, align 4
  br label %872

663:                                              ; preds = %647
  %664 = sub i64 %18, %623
  %665 = ashr exact i64 %664, 2
  %666 = sub i64 %624, %18
  %667 = ashr exact i64 %666, 2
  %668 = icmp eq i64 %665, %667
  br i1 %668, label %669, label %814

669:                                              ; preds = %663
  %670 = load i32, i32* %629, align 4
  store i32 %27, i32* %629, align 4
  store i32 %670, i32* %26, align 4
  %671 = getelementptr inbounds i32, i32* %629, i64 1
  %672 = getelementptr inbounds i32, i32* %26, i64 1
  %673 = icmp eq i32* %671, %26
  br i1 %673, label %872, label %674

674:                                              ; preds = %669
  %675 = getelementptr i32, i32* %26, i64 -2
  %676 = bitcast i32* %675 to i8*
  %677 = sub i64 0, %623
  %678 = getelementptr i8, i8* %676, i64 %677
  %679 = ptrtoint i8* %678 to i64
  %680 = lshr i64 %679, 2
  %681 = add nuw nsw i64 %680, 1
  %682 = icmp ult i64 %681, 8
  br i1 %682, label %769, label %683

683:                                              ; preds = %674
  %684 = getelementptr i32, i32* %629, i64 2
  %685 = getelementptr i32, i32* %26, i64 -2
  %686 = bitcast i32* %685 to i8*
  %687 = sub i64 0, %623
  %688 = getelementptr i8, i8* %686, i64 %687
  %689 = ptrtoint i8* %688 to i64
  %690 = lshr i64 %689, 2
  %691 = getelementptr i32, i32* %684, i64 %690
  %692 = getelementptr i32, i32* %26, i64 2
  %693 = getelementptr i32, i32* %692, i64 %690
  %694 = icmp ult i32* %671, %693
  %695 = icmp ult i32* %672, %691
  %696 = and i1 %694, %695
  br i1 %696, label %769, label %697

697:                                              ; preds = %683
  %698 = and i64 %681, 9223372036854775800
  %699 = getelementptr i32, i32* %672, i64 %698
  %700 = getelementptr i32, i32* %671, i64 %698
  %701 = add nsw i64 %698, -8
  %702 = lshr exact i64 %701, 3
  %703 = add nuw nsw i64 %702, 1
  %704 = and i64 %703, 1
  %705 = icmp eq i64 %701, 0
  br i1 %705, label %747, label %706

706:                                              ; preds = %697
  %707 = sub nuw nsw i64 %703, %704
  br label %708

708:                                              ; preds = %708, %706
  %709 = phi i64 [ 0, %706 ], [ %744, %708 ]
  %710 = phi i64 [ %707, %706 ], [ %745, %708 ]
  %711 = getelementptr i32, i32* %672, i64 %709
  %712 = getelementptr i32, i32* %671, i64 %709
  %713 = bitcast i32* %711 to <4 x i32>*
  %714 = load <4 x i32>, <4 x i32>* %713, align 4, !alias.scope !230
  %715 = getelementptr i32, i32* %711, i64 4
  %716 = bitcast i32* %715 to <4 x i32>*
  %717 = load <4 x i32>, <4 x i32>* %716, align 4, !alias.scope !230
  %718 = bitcast i32* %712 to <4 x i32>*
  %719 = load <4 x i32>, <4 x i32>* %718, align 4, !alias.scope !233, !noalias !230
  %720 = getelementptr i32, i32* %712, i64 4
  %721 = bitcast i32* %720 to <4 x i32>*
  %722 = load <4 x i32>, <4 x i32>* %721, align 4, !alias.scope !233, !noalias !230
  %723 = bitcast i32* %712 to <4 x i32>*
  store <4 x i32> %714, <4 x i32>* %723, align 4, !alias.scope !233, !noalias !230
  %724 = bitcast i32* %720 to <4 x i32>*
  store <4 x i32> %717, <4 x i32>* %724, align 4, !alias.scope !233, !noalias !230
  %725 = bitcast i32* %711 to <4 x i32>*
  store <4 x i32> %719, <4 x i32>* %725, align 4, !alias.scope !230
  %726 = bitcast i32* %715 to <4 x i32>*
  store <4 x i32> %722, <4 x i32>* %726, align 4, !alias.scope !230
  %727 = or i64 %709, 8
  %728 = getelementptr i32, i32* %672, i64 %727
  %729 = getelementptr i32, i32* %671, i64 %727
  %730 = bitcast i32* %728 to <4 x i32>*
  %731 = load <4 x i32>, <4 x i32>* %730, align 4, !alias.scope !230
  %732 = getelementptr i32, i32* %728, i64 4
  %733 = bitcast i32* %732 to <4 x i32>*
  %734 = load <4 x i32>, <4 x i32>* %733, align 4, !alias.scope !230
  %735 = bitcast i32* %729 to <4 x i32>*
  %736 = load <4 x i32>, <4 x i32>* %735, align 4, !alias.scope !233, !noalias !230
  %737 = getelementptr i32, i32* %729, i64 4
  %738 = bitcast i32* %737 to <4 x i32>*
  %739 = load <4 x i32>, <4 x i32>* %738, align 4, !alias.scope !233, !noalias !230
  %740 = bitcast i32* %729 to <4 x i32>*
  store <4 x i32> %731, <4 x i32>* %740, align 4, !alias.scope !233, !noalias !230
  %741 = bitcast i32* %737 to <4 x i32>*
  store <4 x i32> %734, <4 x i32>* %741, align 4, !alias.scope !233, !noalias !230
  %742 = bitcast i32* %728 to <4 x i32>*
  store <4 x i32> %736, <4 x i32>* %742, align 4, !alias.scope !230
  %743 = bitcast i32* %732 to <4 x i32>*
  store <4 x i32> %739, <4 x i32>* %743, align 4, !alias.scope !230
  %744 = add i64 %709, 16
  %745 = add i64 %710, -2
  %746 = icmp eq i64 %745, 0
  br i1 %746, label %747, label %708, !llvm.loop !235

747:                                              ; preds = %708, %697
  %748 = phi i64 [ 0, %697 ], [ %744, %708 ]
  %749 = icmp eq i64 %704, 0
  br i1 %749, label %767, label %750

750:                                              ; preds = %747
  %751 = getelementptr i32, i32* %672, i64 %748
  %752 = getelementptr i32, i32* %671, i64 %748
  %753 = bitcast i32* %751 to <4 x i32>*
  %754 = load <4 x i32>, <4 x i32>* %753, align 4, !alias.scope !230
  %755 = getelementptr i32, i32* %751, i64 4
  %756 = bitcast i32* %755 to <4 x i32>*
  %757 = load <4 x i32>, <4 x i32>* %756, align 4, !alias.scope !230
  %758 = bitcast i32* %752 to <4 x i32>*
  %759 = load <4 x i32>, <4 x i32>* %758, align 4, !alias.scope !233, !noalias !230
  %760 = getelementptr i32, i32* %752, i64 4
  %761 = bitcast i32* %760 to <4 x i32>*
  %762 = load <4 x i32>, <4 x i32>* %761, align 4, !alias.scope !233, !noalias !230
  %763 = bitcast i32* %752 to <4 x i32>*
  store <4 x i32> %754, <4 x i32>* %763, align 4, !alias.scope !233, !noalias !230
  %764 = bitcast i32* %760 to <4 x i32>*
  store <4 x i32> %757, <4 x i32>* %764, align 4, !alias.scope !233, !noalias !230
  %765 = bitcast i32* %751 to <4 x i32>*
  store <4 x i32> %759, <4 x i32>* %765, align 4, !alias.scope !230
  %766 = bitcast i32* %755 to <4 x i32>*
  store <4 x i32> %762, <4 x i32>* %766, align 4, !alias.scope !230
  br label %767

767:                                              ; preds = %747, %750
  %768 = icmp eq i64 %681, %698
  br i1 %768, label %872, label %769

769:                                              ; preds = %767, %683, %674
  %770 = phi i32* [ %672, %683 ], [ %672, %674 ], [ %699, %767 ]
  %771 = phi i32* [ %671, %683 ], [ %671, %674 ], [ %700, %767 ]
  %772 = ptrtoint i32* %771 to i64
  %773 = getelementptr i32, i32* %26, i64 -1
  %774 = ptrtoint i32* %773 to i64
  %775 = sub i64 %774, %772
  %776 = lshr i64 %775, 2
  %777 = add nuw nsw i64 %776, 1
  %778 = and i64 %777, 3
  %779 = icmp eq i64 %778, 0
  br i1 %779, label %790, label %780

780:                                              ; preds = %769, %780
  %781 = phi i32* [ %787, %780 ], [ %770, %769 ]
  %782 = phi i32* [ %786, %780 ], [ %771, %769 ]
  %783 = phi i64 [ %788, %780 ], [ %778, %769 ]
  %784 = load i32, i32* %781, align 4
  %785 = load i32, i32* %782, align 4
  store i32 %784, i32* %782, align 4
  store i32 %785, i32* %781, align 4
  %786 = getelementptr inbounds i32, i32* %782, i64 1
  %787 = getelementptr inbounds i32, i32* %781, i64 1
  %788 = add i64 %783, -1
  %789 = icmp eq i64 %788, 0
  br i1 %789, label %790, label %780, !llvm.loop !236

790:                                              ; preds = %780, %769
  %791 = phi i32* [ %770, %769 ], [ %787, %780 ]
  %792 = phi i32* [ %771, %769 ], [ %786, %780 ]
  %793 = icmp ult i64 %775, 12
  br i1 %793, label %872, label %794

794:                                              ; preds = %790, %794
  %795 = phi i32* [ %812, %794 ], [ %791, %790 ]
  %796 = phi i32* [ %811, %794 ], [ %792, %790 ]
  %797 = load i32, i32* %795, align 4
  %798 = load i32, i32* %796, align 4
  store i32 %797, i32* %796, align 4
  store i32 %798, i32* %795, align 4
  %799 = getelementptr inbounds i32, i32* %796, i64 1
  %800 = getelementptr inbounds i32, i32* %795, i64 1
  %801 = load i32, i32* %800, align 4
  %802 = load i32, i32* %799, align 4
  store i32 %801, i32* %799, align 4
  store i32 %802, i32* %800, align 4
  %803 = getelementptr inbounds i32, i32* %796, i64 2
  %804 = getelementptr inbounds i32, i32* %795, i64 2
  %805 = load i32, i32* %804, align 4
  %806 = load i32, i32* %803, align 4
  store i32 %805, i32* %803, align 4
  store i32 %806, i32* %804, align 4
  %807 = getelementptr inbounds i32, i32* %796, i64 3
  %808 = getelementptr inbounds i32, i32* %795, i64 3
  %809 = load i32, i32* %808, align 4
  %810 = load i32, i32* %807, align 4
  store i32 %809, i32* %807, align 4
  store i32 %810, i32* %808, align 4
  %811 = getelementptr inbounds i32, i32* %796, i64 4
  %812 = getelementptr inbounds i32, i32* %795, i64 4
  %813 = icmp eq i32* %811, %26
  br i1 %813, label %872, label %794, !llvm.loop !237

814:                                              ; preds = %663, %814
  %815 = phi i64 [ %817, %814 ], [ %667, %663 ]
  %816 = phi i64 [ %815, %814 ], [ %665, %663 ]
  %817 = srem i64 %816, %815
  %818 = icmp eq i64 %817, 0
  br i1 %818, label %819, label %814

819:                                              ; preds = %814
  %820 = icmp eq i64 %815, 0
  br i1 %820, label %848, label %821

821:                                              ; preds = %819
  %822 = getelementptr inbounds i32, i32* %629, i64 %815
  %823 = shl nsw i64 %815, 2
  %824 = add i64 %823, -4
  %825 = and i64 %824, 4
  %826 = icmp eq i64 %825, 0
  br i1 %826, label %827, label %845

827:                                              ; preds = %821
  %828 = getelementptr inbounds i32, i32* %822, i64 -1
  %829 = load i32, i32* %828, align 4
  %830 = getelementptr inbounds i32, i32* %828, i64 %665
  br label %831

831:                                              ; preds = %831, %827
  %832 = phi i32* [ %828, %827 ], [ %833, %831 ]
  %833 = phi i32* [ %830, %827 ], [ %842, %831 ]
  %834 = ptrtoint i32* %833 to i64
  %835 = load i32, i32* %833, align 4
  store i32 %835, i32* %832, align 4
  %836 = sub i64 %624, %834
  %837 = ashr exact i64 %836, 2
  %838 = icmp slt i64 %665, %837
  %839 = getelementptr inbounds i32, i32* %833, i64 %665
  %840 = sub nsw i64 %665, %837
  %841 = getelementptr inbounds i32, i32* %629, i64 %840
  %842 = select i1 %838, i32* %839, i32* %841
  %843 = icmp eq i32* %842, %828
  br i1 %843, label %844, label %831

844:                                              ; preds = %831
  store i32 %829, i32* %833, align 4
  br label %845

845:                                              ; preds = %844, %821
  %846 = phi i32* [ %828, %844 ], [ %822, %821 ]
  %847 = icmp eq i64 %824, 0
  br i1 %847, label %848, label %850

848:                                              ; preds = %845, %901, %819
  %849 = getelementptr inbounds i32, i32* %629, i64 %667
  br label %872

850:                                              ; preds = %845, %901
  %851 = phi i32* [ %869, %901 ], [ %846, %845 ]
  %852 = getelementptr inbounds i32, i32* %851, i64 -1
  %853 = load i32, i32* %852, align 4
  %854 = getelementptr inbounds i32, i32* %852, i64 %665
  br label %855

855:                                              ; preds = %855, %850
  %856 = phi i32* [ %852, %850 ], [ %857, %855 ]
  %857 = phi i32* [ %854, %850 ], [ %866, %855 ]
  %858 = ptrtoint i32* %857 to i64
  %859 = load i32, i32* %857, align 4
  store i32 %859, i32* %856, align 4
  %860 = sub i64 %624, %858
  %861 = ashr exact i64 %860, 2
  %862 = icmp slt i64 %665, %861
  %863 = getelementptr inbounds i32, i32* %857, i64 %665
  %864 = sub nsw i64 %665, %861
  %865 = getelementptr inbounds i32, i32* %629, i64 %864
  %866 = select i1 %862, i32* %863, i32* %865
  %867 = icmp eq i32* %866, %852
  br i1 %867, label %868, label %855

868:                                              ; preds = %855
  store i32 %853, i32* %857, align 4
  %869 = getelementptr inbounds i32, i32* %851, i64 -2
  %870 = load i32, i32* %869, align 4
  %871 = getelementptr inbounds i32, i32* %869, i64 %665
  br label %888

872:                                              ; preds = %790, %794, %669, %767, %622, %634, %645, %661, %848
  %873 = phi i32* [ %629, %634 ], [ %630, %622 ], [ %646, %645 ], [ %662, %661 ], [ %849, %848 ], [ %26, %767 ], [ %26, %669 ], [ %26, %794 ], [ %26, %790 ]
  %874 = add nsw i64 %626, %625
  %875 = add nsw i64 %627, %628
  %876 = icmp slt i64 %874, %875
  br i1 %876, label %877, label %879

877:                                              ; preds = %872
  %878 = ptrtoint i32* %873 to i64
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN12favicon_base8IconTypeENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_SJ_T_NS_15iterator_traitsISJ_E15difference_typeESN_PNSM_10value_typeEl(i32* %560, i32* %629, i32* %873, %"struct.base::internal::flat_tree<favicon_base::IconType, base::identity, std::__1::less<void>, std::__1::vector<favicon_base::IconType, std::__1::allocator<favicon_base::IconType> > >::value_compare"* dereferenceable(1) %3, i64 %626, i64 %625, i32* %6, i64 %7)
  br label %880

879:                                              ; preds = %872
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN12favicon_base8IconTypeENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_SJ_T_NS_15iterator_traitsISJ_E15difference_typeESN_PNSM_10value_typeEl(i32* %873, i32* %630, i32* %15, %"struct.base::internal::flat_tree<favicon_base::IconType, base::identity, std::__1::less<void>, std::__1::vector<favicon_base::IconType, std::__1::allocator<favicon_base::IconType> > >::value_compare"* dereferenceable(1) %3, i64 %627, i64 %628, i32* %6, i64 %7)
  br label %880

880:                                              ; preds = %877, %879
  %881 = phi i64 [ %878, %877 ], [ %550, %879 ]
  %882 = phi i64 [ %624, %877 ], [ %623, %879 ]
  %883 = phi i64 [ %628, %877 ], [ %625, %879 ]
  %884 = phi i64 [ %627, %877 ], [ %626, %879 ]
  %885 = phi i32* [ %15, %877 ], [ %873, %879 ]
  %886 = icmp eq i64 %883, 0
  br i1 %886, label %887, label %14

887:                                              ; preds = %880, %23, %554, %320, %509, %477, %481, %456, %8, %591, %353, %309, %304, %296, %165, %34
  ret void

888:                                              ; preds = %888, %868
  %889 = phi i32* [ %869, %868 ], [ %890, %888 ]
  %890 = phi i32* [ %871, %868 ], [ %899, %888 ]
  %891 = ptrtoint i32* %890 to i64
  %892 = load i32, i32* %890, align 4
  store i32 %892, i32* %889, align 4
  %893 = sub i64 %624, %891
  %894 = ashr exact i64 %893, 2
  %895 = icmp slt i64 %665, %894
  %896 = getelementptr inbounds i32, i32* %890, i64 %665
  %897 = sub nsw i64 %665, %894
  %898 = getelementptr inbounds i32, i32* %629, i64 %897
  %899 = select i1 %895, i32* %896, i32* %898
  %900 = icmp eq i32* %899, %869
  br i1 %900, label %901, label %888

901:                                              ; preds = %888
  store i32 %870, i32* %890, align 4
  %902 = icmp eq i32* %869, %629
  br i1 %902, label %848, label %850
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN12_GLOBAL__N_124FaviconResultToImageSkiaENS_12OnceCallbackIFvN3gfx9ImageSkiaEEEEfE3$_2JS8_fEEEFvRKN12favicon_base22FaviconRawBitmapResultEEE7RunOnceEPNS0_13BindStateBaseESE_"(%"class.base::internal::BindStateBase"* nocapture, %"struct.favicon_base::FaviconRawBitmapResult"* nocapture readonly dereferenceable(152)) #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.base::OnceCallback.1", align 8
  %5 = alloca %"class.gfx::ImageSkia", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.base::OnceCallback.1", align 8
  %8 = alloca %"class.std::__1::vector", align 8
  %9 = alloca %"class.base::OnceCallback.1", align 8
  %10 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %11 = getelementptr inbounds void ()*, void ()** %10, i64 1
  %12 = bitcast %"class.base::OnceCallback.1"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #12
  %13 = bitcast void ()** %10 to %"class.base::internal::BindStateBase"**
  %14 = bitcast void ()** %10 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.base::OnceCallback.1"* %9 to i64*
  store i64 %15, i64* %16, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8
  %17 = bitcast void ()** %11 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = bitcast %"class.gfx::ImageSkia"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #12
  %20 = bitcast %"class.base::OnceCallback.1"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  %21 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #12
  %22 = getelementptr inbounds %"struct.favicon_base::FaviconRawBitmapResult", %"struct.favicon_base::FaviconRawBitmapResult"* %1, i64 0, i32 2, i32 0
  %23 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %22, align 8
  %24 = icmp eq %"class.base::RefCountedMemory"* %23, null
  br i1 %24, label %32, label %25

25:                                               ; preds = %2
  %26 = bitcast %"class.base::RefCountedMemory"* %23 to i64 (%"class.base::RefCountedMemory"*)***
  %27 = load i64 (%"class.base::RefCountedMemory"*)**, i64 (%"class.base::RefCountedMemory"*)*** %26, align 8
  %28 = getelementptr inbounds i64 (%"class.base::RefCountedMemory"*)*, i64 (%"class.base::RefCountedMemory"*)** %27, i64 1
  %29 = load i64 (%"class.base::RefCountedMemory"*)*, i64 (%"class.base::RefCountedMemory"*)** %28, align 8
  %30 = tail call i64 %29(%"class.base::RefCountedMemory"* nonnull %23) #12
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %42

32:                                               ; preds = %25, %2
  call void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"* nonnull %5) #12
  %33 = bitcast %"class.base::OnceCallback.1"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  %34 = getelementptr inbounds %"class.base::OnceCallback.1", %"class.base::OnceCallback.1"* %9, i64 0, i32 0, i32 0, i32 0
  %35 = load i64, i64* %16, align 8
  %36 = bitcast %"class.base::OnceCallback.1"* %4 to i64*
  store i64 %35, i64* %36, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %34, align 8
  %37 = getelementptr inbounds %"class.base::OnceCallback.1", %"class.base::OnceCallback.1"* %4, i64 0, i32 0
  %38 = inttoptr i64 %35 to %"class.base::internal::BindStateBase"*
  %39 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %38, i64 0, i32 1
  %40 = bitcast void ()** %39 to void (%"class.base::internal::BindStateBase"*, %"class.gfx::ImageSkia"*)**
  %41 = load void (%"class.base::internal::BindStateBase"*, %"class.gfx::ImageSkia"*)*, void (%"class.base::internal::BindStateBase"*, %"class.gfx::ImageSkia"*)** %40, align 8
  call void %41(%"class.base::internal::BindStateBase"* %38, %"class.gfx::ImageSkia"* nonnull dereferenceable(8) %5) #12
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %37) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* nonnull %5) #12
  br label %105

42:                                               ; preds = %25
  %43 = bitcast %"class.base::OnceCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #12
  %44 = getelementptr inbounds %"class.base::OnceCallback.1", %"class.base::OnceCallback.1"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %44, align 8
  %45 = tail call i8* @_Znwm(i64 56) #11, !noalias !238
  %46 = bitcast i8* %45 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %46, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN4apps33CompressedDataToImageSkiaCallbackENS_12OnceCallbackIFvN3gfx9ImageSkiaEEEEfE3$_0JS8_fEEEFvNSt3__16vectorIhNSB_9allocatorIhEEEEEE7RunOnceEPNS0_13BindStateBaseEOSF_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN4apps33CompressedDataToImageSkiaCallbackENS_12OnceCallbackIFvN3gfx9ImageSkiaEEEEfE3$_0JS7_fEE7DestroyEPKNS0_13BindStateBaseE") #12, !noalias !238
  %47 = getelementptr inbounds i8, i8* %45, i64 40
  %48 = getelementptr inbounds %"class.base::OnceCallback.1", %"class.base::OnceCallback.1"* %7, i64 0, i32 0, i32 0, i32 0
  %49 = bitcast i8* %47 to i64*
  store i64 %15, i64* %49, align 8, !noalias !238
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %48, align 8, !noalias !238
  %50 = getelementptr inbounds i8, i8* %45, i64 48
  %51 = bitcast i8* %50 to i32*
  store i32 %18, i32* %51, align 4, !noalias !238
  %52 = bitcast %"class.base::OnceCallback"* %6 to i8**
  store i8* %45, i8** %52, align 8, !alias.scope !238
  %53 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %22, align 8
  %54 = bitcast %"class.base::RefCountedMemory"* %53 to i8* (%"class.base::RefCountedMemory"*)***
  %55 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %54, align 8
  %56 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %55, align 8
  %57 = tail call i8* %56(%"class.base::RefCountedMemory"* %53) #12
  %58 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %22, align 8
  %59 = bitcast %"class.base::RefCountedMemory"* %58 to i8* (%"class.base::RefCountedMemory"*)***
  %60 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %59, align 8
  %61 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %60, align 8
  %62 = tail call i8* %61(%"class.base::RefCountedMemory"* %58) #12
  %63 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %22, align 8
  %64 = bitcast %"class.base::RefCountedMemory"* %63 to i64 (%"class.base::RefCountedMemory"*)***
  %65 = load i64 (%"class.base::RefCountedMemory"*)**, i64 (%"class.base::RefCountedMemory"*)*** %64, align 8
  %66 = getelementptr inbounds i64 (%"class.base::RefCountedMemory"*)*, i64 (%"class.base::RefCountedMemory"*)** %65, i64 1
  %67 = load i64 (%"class.base::RefCountedMemory"*)*, i64 (%"class.base::RefCountedMemory"*)** %66, align 8
  %68 = tail call i64 %67(%"class.base::RefCountedMemory"* %63) #12
  %69 = getelementptr inbounds i8, i8* %62, i64 %68
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 24, i1 false) #12
  %70 = ptrtoint i8* %69 to i64
  %71 = ptrtoint i8* %57 to i64
  %72 = sub i64 %70, %71
  %73 = icmp eq i64 %72, 0
  %74 = ptrtoint i8* %45 to i64
  br i1 %73, label %87, label %75

75:                                               ; preds = %42
  %76 = icmp slt i64 %72, 0
  br i1 %76, label %77, label %79

77:                                               ; preds = %75
  %78 = bitcast %"class.std::__1::vector"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %78) #13
  unreachable

79:                                               ; preds = %75
  %80 = tail call i8* @_Znwm(i64 %72) #11
  %81 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  %82 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  store i8* %80, i8** %82, align 8
  %83 = getelementptr inbounds i8, i8* %80, i64 %72
  %84 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  store i8* %83, i8** %84, align 8
  %85 = bitcast i8** %81 to i64*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %80, i8* align 1 %57, i64 %72, i1 false) #12
  %86 = ptrtoint i8* %83 to i64
  store i64 %86, i64* %85, align 8
  br label %87

87:                                               ; preds = %79, %42
  %88 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #12
  %89 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0, i32 0, i32 0
  %90 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %74, i64* %90, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %89, align 8
  %91 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %92 = getelementptr inbounds i8, i8* %45, i64 8
  %93 = bitcast i8* %92 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector"*)**
  %94 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector"*)** %93, align 8
  call void %94(%"class.base::internal::BindStateBase"* nonnull %46, %"class.std::__1::vector"* nonnull dereferenceable(24) %8) #12
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %91) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #12
  %95 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %96 = load i8*, i8** %95, align 8
  %97 = icmp eq i8* %96, null
  br i1 %97, label %102, label %98

98:                                               ; preds = %87
  %99 = ptrtoint i8* %96 to i64
  %100 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  %101 = bitcast i8** %100 to i64*
  store i64 %99, i64* %101, align 8
  call void @_ZdlPv(i8* nonnull %96) #11
  br label %102

102:                                              ; preds = %98, %87
  %103 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %103) #12
  %104 = getelementptr inbounds %"class.base::OnceCallback.1", %"class.base::OnceCallback.1"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %104) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #12
  br label %105

105:                                              ; preds = %32, %102
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #12
  %106 = getelementptr inbounds %"class.base::OnceCallback.1", %"class.base::OnceCallback.1"* %9, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %106) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #12
  ret void
}

declare void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN12_GLOBAL__N_124FaviconResultToImageSkiaENS_12OnceCallbackIFvN3gfx9ImageSkiaEEEEfE3$_2JS7_fEE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #12
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #11
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN12_GLOBAL__N_119IconLoadingPipeline32MaybeLoadFallbackOrCompleteEmptyEvE3$_3J13scoped_refptrIS4_EEEEFvN4mojo9StructPtrIN4apps5mojom9IconValueEEEEE7RunOnceEPNS0_13BindStateBaseEOSE_"(%"class.base::internal::BindStateBase"* nocapture, %"class.mojo::StructPtr"* nocapture dereferenceable(8)) #0 align 2 {
  %3 = alloca %"class.base::OnceCallback.59", align 8
  %4 = alloca %class.scoped_refptr.60, align 8
  %5 = alloca %"class.mojo::StructPtr", align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to %"class.(anonymous namespace)::IconLoadingPipeline"**
  %8 = load %"class.(anonymous namespace)::IconLoadingPipeline"*, %"class.(anonymous namespace)::IconLoadingPipeline"** %7, align 8
  store %"class.(anonymous namespace)::IconLoadingPipeline"* null, %"class.(anonymous namespace)::IconLoadingPipeline"** %7, align 8
  %9 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  store i64 0, i64* %9, align 8
  %11 = bitcast %class.scoped_refptr.60* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #12
  %12 = bitcast %"class.mojo::StructPtr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #12
  %13 = getelementptr inbounds %class.scoped_refptr.60, %class.scoped_refptr.60* %4, i64 0, i32 0
  store %"class.(anonymous namespace)::IconLoadingPipeline"* %8, %"class.(anonymous namespace)::IconLoadingPipeline"** %13, align 8
  %14 = icmp eq i64 %10, 0
  br i1 %14, label %33, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.(anonymous namespace)::IconLoadingPipeline", %"class.(anonymous namespace)::IconLoadingPipeline"* %8, i64 0, i32 11
  %17 = bitcast %"class.mojo::StructPtr"* %5 to i64*
  %18 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %10, i64* %17, align 8
  %19 = bitcast %"class.base::OnceCallback.59"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #12
  %20 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %16, i64 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.base::OnceCallback.59"* %16 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.base::OnceCallback.59"* %3 to i64*
  store i64 %22, i64* %23, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %20, align 8
  %24 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %3, i64 0, i32 0
  %25 = inttoptr i64 %22 to %"class.base::internal::BindStateBase"*
  %26 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %25, i64 0, i32 1
  %27 = bitcast void ()** %26 to void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr"*)**
  %28 = load void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr"*)*, void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr"*)** %27, align 8
  call void %28(%"class.base::internal::BindStateBase"* %25, %"class.mojo::StructPtr"* nonnull dereferenceable(8) %5) #12
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %24) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #12
  %29 = load %"class.apps::mojom::IconValue"*, %"class.apps::mojom::IconValue"** %18, align 8
  store %"class.apps::mojom::IconValue"* null, %"class.apps::mojom::IconValue"** %18, align 8
  %30 = icmp eq %"class.apps::mojom::IconValue"* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %15
  call void @_ZN4apps5mojom9IconValueD1Ev(%"class.apps::mojom::IconValue"* nonnull %29) #12
  %32 = bitcast %"class.apps::mojom::IconValue"* %29 to i8*
  call void @_ZdlPv(i8* %32) #11
  br label %34

33:                                               ; preds = %2
  tail call fastcc void @_ZN12_GLOBAL__N_119IconLoadingPipeline32MaybeLoadFallbackOrCompleteEmptyEv(%"class.(anonymous namespace)::IconLoadingPipeline"* %8) #12
  br label %34

34:                                               ; preds = %15, %31, %33
  call fastcc void @_ZN13scoped_refptrIN12_GLOBAL__N_119IconLoadingPipelineEED2Ev(%class.scoped_refptr.60* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN12_GLOBAL__N_119IconLoadingPipeline32MaybeLoadFallbackOrCompleteEmptyEvE3$_3J13scoped_refptrIS3_EEE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %class.scoped_refptr.60*
  tail call fastcc void @_ZN13scoped_refptrIN12_GLOBAL__N_119IconLoadingPipelineEED2Ev(%class.scoped_refptr.60* %5) #12
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #11
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo8internal24CallbackWithDeleteHelperIFvNS_9StructPtrIN4apps5mojom9IconValueEEEEE3RunES6_(%"class.mojo::internal::CallbackWithDeleteHelper"*, %"class.mojo::StructPtr"*) #0 comdat align 2 {
  %3 = alloca %"class.base::OnceCallback.59", align 8
  %4 = alloca %"class.mojo::StructPtr", align 8
  %5 = getelementptr inbounds %"class.mojo::internal::CallbackWithDeleteHelper", %"class.mojo::internal::CallbackWithDeleteHelper"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %5) #12
  %6 = bitcast %"class.mojo::StructPtr"* %4 to i64*
  %7 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %6, align 8
  store i64 0, i64* %8, align 8
  %10 = bitcast %"class.base::OnceCallback.59"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #12
  %11 = getelementptr inbounds %"class.mojo::internal::CallbackWithDeleteHelper", %"class.mojo::internal::CallbackWithDeleteHelper"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.mojo::internal::CallbackWithDeleteHelper"* %0 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::OnceCallback.59"* %3 to i64*
  store i64 %13, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  %15 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %3, i64 0, i32 0
  %16 = inttoptr i64 %13 to %"class.base::internal::BindStateBase"*
  %17 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %16, i64 0, i32 1
  %18 = bitcast void ()** %17 to void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr"*)**
  %19 = load void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr"*)*, void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr"*)** %18, align 8
  call void %19(%"class.base::internal::BindStateBase"* %16, %"class.mojo::StructPtr"* nonnull dereferenceable(8) %4) #12
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #12
  %20 = load %"class.apps::mojom::IconValue"*, %"class.apps::mojom::IconValue"** %7, align 8
  store %"class.apps::mojom::IconValue"* null, %"class.apps::mojom::IconValue"** %7, align 8
  %21 = icmp eq %"class.apps::mojom::IconValue"* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %2
  call void @_ZN4apps5mojom9IconValueD1Ev(%"class.apps::mojom::IconValue"* nonnull %20) #12
  %23 = bitcast %"class.apps::mojom::IconValue"* %20 to i8*
  call void @_ZdlPv(i8* %23) #11
  br label %24

24:                                               ; preds = %2, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN4mojo8internal24CallbackWithDeleteHelperIFvNS3_9StructPtrIN4apps5mojom9IconValueEEEEEEFvSA_EJNSt3__110unique_ptrISC_NSF_14default_deleteISC_EEEEEEESB_E7RunOnceEPNS0_13BindStateBaseEOSA_(%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr"* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"class.mojo::StructPtr", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %6 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.mojo::StructPtr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #12
  %12 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds i8, i8* %13, i64 %10
  %15 = bitcast i8* %14 to %"class.mojo::internal::CallbackWithDeleteHelper"*
  %16 = and i64 %7, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %2
  %19 = bitcast i8* %14 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = add i64 %7, -1
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = bitcast i8* %22 to void (%"class.mojo::internal::CallbackWithDeleteHelper"*, %"class.mojo::StructPtr"*)**
  %24 = load void (%"class.mojo::internal::CallbackWithDeleteHelper"*, %"class.mojo::StructPtr"*)*, void (%"class.mojo::internal::CallbackWithDeleteHelper"*, %"class.mojo::StructPtr"*)** %23, align 8
  br label %27

25:                                               ; preds = %2
  %26 = inttoptr i64 %7 to void (%"class.mojo::internal::CallbackWithDeleteHelper"*, %"class.mojo::StructPtr"*)*
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi void (%"class.mojo::internal::CallbackWithDeleteHelper"*, %"class.mojo::StructPtr"*)* [ %24, %18 ], [ %26, %25 ]
  %29 = bitcast %"class.mojo::StructPtr"* %3 to i64*
  %30 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %32 = load i64, i64* %31, align 8
  store i64 %32, i64* %29, align 8
  store i64 0, i64* %31, align 8
  call void %28(%"class.mojo::internal::CallbackWithDeleteHelper"* %15, %"class.mojo::StructPtr"* nonnull %3) #12
  %33 = load %"class.apps::mojom::IconValue"*, %"class.apps::mojom::IconValue"** %30, align 8
  store %"class.apps::mojom::IconValue"* null, %"class.apps::mojom::IconValue"** %30, align 8
  %34 = icmp eq %"class.apps::mojom::IconValue"* %33, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %27
  call void @_ZN4apps5mojom9IconValueD1Ev(%"class.apps::mojom::IconValue"* nonnull %33) #12
  %36 = bitcast %"class.apps::mojom::IconValue"* %33 to i8*
  call void @_ZdlPv(i8* %36) #11
  br label %37

37:                                               ; preds = %27, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN4mojo8internal24CallbackWithDeleteHelperIFvNS2_9StructPtrIN4apps5mojom9IconValueEEEEEEFvS9_EJNSt3__110unique_ptrISB_NSE_14default_deleteISB_EEEEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback.296", align 8
  %3 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %3, label %28, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to %"class.mojo::internal::CallbackWithDeleteHelper"**
  %7 = load %"class.mojo::internal::CallbackWithDeleteHelper"*, %"class.mojo::internal::CallbackWithDeleteHelper"** %6, align 8
  store %"class.mojo::internal::CallbackWithDeleteHelper"* null, %"class.mojo::internal::CallbackWithDeleteHelper"** %6, align 8
  %8 = icmp eq %"class.mojo::internal::CallbackWithDeleteHelper"* %7, null
  br i1 %8, label %26, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.mojo::internal::CallbackWithDeleteHelper", %"class.mojo::internal::CallbackWithDeleteHelper"* %7, i64 0, i32 1
  %11 = getelementptr inbounds %"class.base::OnceCallback.296", %"class.base::OnceCallback.296"* %10, i64 0, i32 0
  %12 = getelementptr inbounds %"class.base::OnceCallback.296", %"class.base::OnceCallback.296"* %10, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %12, align 8
  %14 = icmp eq %"class.base::internal::BindStateBase"* %13, null
  br i1 %14, label %23, label %15

15:                                               ; preds = %9
  %16 = ptrtoint %"class.base::internal::BindStateBase"* %13 to i64
  %17 = bitcast %"class.base::OnceCallback.296"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  %18 = bitcast %"class.base::OnceCallback.296"* %2 to i64*
  store i64 %16, i64* %18, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %12, align 8
  %19 = getelementptr inbounds %"class.base::OnceCallback.296", %"class.base::OnceCallback.296"* %2, i64 0, i32 0
  %20 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %13, i64 0, i32 1
  %21 = bitcast void ()** %20 to void (%"class.base::internal::BindStateBase"*)**
  %22 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %21, align 8
  tail call void %22(%"class.base::internal::BindStateBase"* nonnull %13) #12
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %19) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %23

23:                                               ; preds = %15, %9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %11) #12
  %24 = getelementptr inbounds %"class.mojo::internal::CallbackWithDeleteHelper", %"class.mojo::internal::CallbackWithDeleteHelper"* %7, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %24) #12
  %25 = bitcast %"class.mojo::internal::CallbackWithDeleteHelper"* %7 to i8*
  call void @_ZdlPv(i8* %25) #11
  br label %26

26:                                               ; preds = %4, %23
  %27 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  call void @_ZdlPv(i8* %27) #11
  br label %28

28:                                               ; preds = %26, %1
  ret void
}

declare void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN4mojo8internal24CallbackWithDeleteHelperIFvNS3_9StructPtrIN4apps5mojom9IconValueEEEEEEFvSA_EJNS0_17UnretainedWrapperISC_EEDnEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.mojo::StructPtr", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %10 = bitcast void ()** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.mojo::StructPtr"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #12
  %13 = getelementptr inbounds i8, i8* %6, i64 %11
  %14 = bitcast i8* %13 to %"class.mojo::internal::CallbackWithDeleteHelper"*
  %15 = and i64 %8, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %1
  %18 = bitcast i8* %13 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = add i64 %8, -1
  %21 = getelementptr i8, i8* %19, i64 %20
  %22 = bitcast i8* %21 to void (%"class.mojo::internal::CallbackWithDeleteHelper"*, %"class.mojo::StructPtr"*)**
  %23 = load void (%"class.mojo::internal::CallbackWithDeleteHelper"*, %"class.mojo::StructPtr"*)*, void (%"class.mojo::internal::CallbackWithDeleteHelper"*, %"class.mojo::StructPtr"*)** %22, align 8
  br label %26

24:                                               ; preds = %1
  %25 = inttoptr i64 %8 to void (%"class.mojo::internal::CallbackWithDeleteHelper"*, %"class.mojo::StructPtr"*)*
  br label %26

26:                                               ; preds = %24, %17
  %27 = phi void (%"class.mojo::internal::CallbackWithDeleteHelper"*, %"class.mojo::StructPtr"*)* [ %23, %17 ], [ %25, %24 ]
  %28 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  store i64 0, i64* %28, align 8
  call void %27(%"class.mojo::internal::CallbackWithDeleteHelper"* %14, %"class.mojo::StructPtr"* nonnull %2) #12
  %29 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"class.apps::mojom::IconValue"*, %"class.apps::mojom::IconValue"** %29, align 8
  store %"class.apps::mojom::IconValue"* null, %"class.apps::mojom::IconValue"** %29, align 8
  %31 = icmp eq %"class.apps::mojom::IconValue"* %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %26
  call void @_ZN4apps5mojom9IconValueD1Ev(%"class.apps::mojom::IconValue"* nonnull %30) #12
  %33 = bitcast %"class.apps::mojom::IconValue"* %30 to i8*
  call void @_ZdlPv(i8* %33) #11
  br label %34

34:                                               ; preds = %26, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN4mojo8internal24CallbackWithDeleteHelperIFvNS2_9StructPtrIN4apps5mojom9IconValueEEEEEEFvS9_EJNS0_17UnretainedWrapperISB_EEDnEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBase"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN4apps5mojom9IconValueC1Ev(%"class.apps::mojom::IconValue"*) unnamed_addr #2

declare void @_ZN10extensions9IconsInfo15GetIconResourceEPKNS_9ExtensionEiN16ExtensionIconSet9MatchTypeE(%"class.extensions::ExtensionResource"* sret, %"class.extensions::Extension"*, i32, i32) local_unnamed_addr #2

declare i32 @_ZNK10extensions9Extension8locationEv(%"class.extensions::Extension"*) local_unnamed_addr #2

declare %"class.extensions::ExtensionsBrowserClient"* @_ZN10extensions23ExtensionsBrowserClient3GetEv() local_unnamed_addr #2

declare dereferenceable(216) %"class.ui::ResourceBundle"* @_ZN2ui14ResourceBundle17GetSharedInstanceEv() local_unnamed_addr #2

declare { i8*, i64 } @_ZNK2ui14ResourceBundle18GetRawDataResourceEi(%"class.ui::ResourceBundle"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_126CompressedDataFromResourceEN10extensions17ExtensionResourceE(%"class.std::__1::vector"* noalias sret, %"class.extensions::ExtensionResource"*) #0 {
  %3 = alloca %"class.base::ScopedBlockingCall", align 8
  %4 = alloca %"class.base::Location", align 8
  %5 = alloca %"class.base::FilePath", align 8
  %6 = bitcast %"class.base::ScopedBlockingCall"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %6) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 80, i1 false)
  %7 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 211) #12
  call void @_ZN4base18ScopedBlockingCallC1ERKNS_8LocationENS_12BlockingTypeE(%"class.base::ScopedBlockingCall"* nonnull %3, %"class.base::Location"* nonnull dereferenceable(32) %4, i32 0) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #12
  %8 = call dereferenceable(24) %"class.base::FilePath"* @_ZNK10extensions17ExtensionResource11GetFilePathEv(%"class.extensions::ExtensionResource"* %1) #12
  %9 = bitcast %"class.base::FilePath"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = zext i8 %11 to i64
  %16 = select i1 %12, i64 %14, i64 %15
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %2
  %19 = bitcast %"class.std::__1::vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #12
  br label %21

20:                                               ; preds = %2
  call void @_ZN4base8FilePathC1ERKS0_(%"class.base::FilePath"* nonnull %5, %"class.base::FilePath"* dereferenceable(24) %8) #12
  call void @_ZN12_GLOBAL__N_124ReadFileAsCompressedDataEN4base8FilePathE(%"class.std::__1::vector"* sret %0, %"class.base::FilePath"* nonnull %5)
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %5) #12
  br label %21

21:                                               ; preds = %20, %18
  call void @_ZN4base18ScopedBlockingCallD1Ev(%"class.base::ScopedBlockingCall"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %6) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN10extensions17ExtensionResourceD1Ev(%"class.extensions::ExtensionResource"*) unnamed_addr #3

declare zeroext i1 @_ZN4base10ThreadPool16PostTaskAndReplyERKNS_8LocationERKNS_10TaskTraitsENS_12OnceCallbackIFvvEEES9_(%"class.base::Location"* dereferenceable(32), %"class.base::TaskTraits"* dereferenceable(15), %"class.base::OnceCallback.296"*, %"class.base::OnceCallback.296"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal20ReturnAsParamAdapterINSt3__16vectorIhNS2_9allocatorIhEEEEEEvNS_12OnceCallbackIFT_vEEEPNS2_10unique_ptrIS8_NS2_14default_deleteIS8_EEEE(%"class.base::OnceCallback.479"*, %"class.std::__1::unique_ptr.480"*) #0 comdat {
  %3 = alloca %"class.base::OnceCallback.479", align 8
  %4 = tail call i8* @_Znwm(i64 24) #11
  %5 = bitcast i8* %4 to %"class.std::__1::vector"*
  %6 = bitcast %"class.base::OnceCallback.479"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12, !noalias !245
  %7 = getelementptr inbounds %"class.base::OnceCallback.479", %"class.base::OnceCallback.479"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.base::OnceCallback.479"* %0 to i64*
  %9 = load i64, i64* %8, align 8, !noalias !245
  %10 = bitcast %"class.base::OnceCallback.479"* %3 to i64*
  store i64 %9, i64* %10, align 8, !noalias !245
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %7, align 8, !noalias !245
  %11 = getelementptr inbounds %"class.base::OnceCallback.479", %"class.base::OnceCallback.479"* %3, i64 0, i32 0
  %12 = inttoptr i64 %9 to %"class.base::internal::BindStateBase"*
  %13 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %12, i64 0, i32 1
  %14 = bitcast void ()** %13 to void (%"class.std::__1::vector"*, %"class.base::internal::BindStateBase"*)**
  %15 = load void (%"class.std::__1::vector"*, %"class.base::internal::BindStateBase"*)*, void (%"class.std::__1::vector"*, %"class.base::internal::BindStateBase"*)** %14, align 8, !noalias !245
  tail call void %15(%"class.std::__1::vector"* nonnull sret %5, %"class.base::internal::BindStateBase"* %12) #12
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12, !noalias !245
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %16, align 8
  %18 = bitcast %"class.std::__1::unique_ptr.480"* %1 to i8**
  store i8* %4, i8** %18, align 8
  %19 = icmp eq %"class.std::__1::vector"* %17, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %17, i64 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %28, label %24

24:                                               ; preds = %20
  %25 = ptrtoint i8* %22 to i64
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %17, i64 0, i32 0, i32 1
  %27 = bitcast i8** %26 to i64*
  store i64 %25, i64* %27, align 8
  call void @_ZdlPv(i8* nonnull %22) #11
  br label %28

28:                                               ; preds = %24, %20
  %29 = bitcast %"class.std::__1::vector"* %17 to i8*
  call void @_ZdlPv(i8* %29) #11
  br label %30

30:                                               ; preds = %2, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12ReplyAdapterINSt3__16vectorIhNS2_9allocatorIhEEEES6_EEvNS_12OnceCallbackIFvT0_EEEPNS2_10unique_ptrIT_NS2_14default_deleteISC_EEEE(%"class.base::OnceCallback"*, %"class.std::__1::unique_ptr.480"*) #0 comdat {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.std::__1::vector", align 16
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 0, i64 24, i1 false) #12
  %8 = bitcast %"class.std::__1::vector"* %6 to <2 x i64>*
  %9 = load <2 x i64>, <2 x i64>* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %4 to <2 x i64>*
  store <2 x i64> %9, <2 x i64>* %10, align 16
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %12 = bitcast i8** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast i8** %14 to i64*
  store i64 %13, i64* %15, align 16
  %16 = bitcast %"class.std::__1::vector"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #12
  %17 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  %18 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %0, i64 0, i32 0, i32 0, i32 0
  %19 = bitcast %"class.base::OnceCallback"* %0 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %20, i64* %21, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %18, align 8
  %22 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %23 = inttoptr i64 %20 to %"class.base::internal::BindStateBase"*
  %24 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %23, i64 0, i32 1
  %25 = bitcast void ()** %24 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector"*)**
  %26 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector"*)** %25, align 8
  call void %26(%"class.base::internal::BindStateBase"* %23, %"class.std::__1::vector"* nonnull dereferenceable(24) %4) #12
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %22) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  %27 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 16
  %29 = icmp eq i8* %28, null
  br i1 %29, label %34, label %30

30:                                               ; preds = %2
  %31 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %32 = bitcast i8** %31 to i64*
  %33 = ptrtoint i8* %28 to i64
  store i64 %33, i64* %32, align 8
  call void @_ZdlPv(i8* nonnull %28) #11
  br label %34

34:                                               ; preds = %2, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFNSt3__16vectorIhNS4_9allocatorIhEEEEvEEEPNS4_10unique_ptrIS8_NS4_14default_deleteIS8_EEEEEJSA_SF_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback.479", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = bitcast %"class.base::internal::BindStateBase"* %3 to void (%"class.base::OnceCallback.479"*, %"class.std::__1::unique_ptr.480"*)**
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = getelementptr inbounds void ()*, void ()** %5, i64 1
  %7 = bitcast void ()** %6 to %"class.std::__1::unique_ptr.480"**
  %8 = bitcast %"class.base::OnceCallback.479"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #12
  %9 = load void (%"class.base::OnceCallback.479"*, %"class.std::__1::unique_ptr.480"*)*, void (%"class.base::OnceCallback.479"*, %"class.std::__1::unique_ptr.480"*)** %4, align 8
  %10 = bitcast void ()** %5 to %"class.base::internal::BindStateBase"**
  %11 = bitcast void ()** %5 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback.479"* %2 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = load %"class.std::__1::unique_ptr.480"*, %"class.std::__1::unique_ptr.480"** %7, align 8
  call void %9(%"class.base::OnceCallback.479"* nonnull %2, %"class.std::__1::unique_ptr.480"* %14) #12
  %15 = getelementptr inbounds %"class.base::OnceCallback.479", %"class.base::OnceCallback.479"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFNSt3__16vectorIhNS3_9allocatorIhEEEEvEEEPNS3_10unique_ptrIS7_NS3_14default_deleteIS7_EEEEEJS9_SE_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #12
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #11
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__16vectorIhNS4_9allocatorIhEEEEEEEPNS4_10unique_ptrIS8_NS4_14default_deleteIS8_EEEEEJSA_NS0_12OwnedWrapperISE_NSC_ISE_EEEEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = bitcast %"class.base::internal::BindStateBase"* %3 to void (%"class.base::OnceCallback"*, %"class.std::__1::unique_ptr.480"*)**
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = getelementptr inbounds void ()*, void ()** %5, i64 1
  %7 = bitcast void ()** %6 to %"class.std::__1::unique_ptr.480"**
  %8 = load %"class.std::__1::unique_ptr.480"*, %"class.std::__1::unique_ptr.480"** %7, align 8
  %9 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = load void (%"class.base::OnceCallback"*, %"class.std::__1::unique_ptr.480"*)*, void (%"class.base::OnceCallback"*, %"class.std::__1::unique_ptr.480"*)** %4, align 8
  %11 = bitcast void ()** %5 to %"class.base::internal::BindStateBase"**
  %12 = bitcast void ()** %5 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %13, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  call void %10(%"class.base::OnceCallback"* nonnull %2, %"class.std::__1::unique_ptr.480"* %8) #12
  %15 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__16vectorIhNS3_9allocatorIhEEEEEEEPNS3_10unique_ptrIS7_NS3_14default_deleteIS7_EEEEEJS9_NS0_12OwnedWrapperISD_NSB_ISD_EEEEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %28, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.std::__1::unique_ptr.480"**
  %6 = load %"class.std::__1::unique_ptr.480"*, %"class.std::__1::unique_ptr.480"** %5, align 8
  store %"class.std::__1::unique_ptr.480"* null, %"class.std::__1::unique_ptr.480"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.480"* %6, null
  br i1 %7, label %24, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %6, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %9, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %9, align 8
  %11 = icmp eq %"class.std::__1::vector"* %10, null
  br i1 %11, label %22, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %12
  %17 = ptrtoint i8* %14 to i64
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 1
  %19 = bitcast i8** %18 to i64*
  store i64 %17, i64* %19, align 8
  tail call void @_ZdlPv(i8* nonnull %14) #11
  br label %20

20:                                               ; preds = %16, %12
  %21 = bitcast %"class.std::__1::vector"* %10 to i8*
  tail call void @_ZdlPv(i8* %21) #11
  br label %22

22:                                               ; preds = %20, %8
  %23 = bitcast %"class.std::__1::unique_ptr.480"* %6 to i8*
  tail call void @_ZdlPv(i8* %23) #11
  br label %24

24:                                               ; preds = %3, %22
  %25 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %26 = bitcast void ()** %25 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %26) #12
  %27 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %27) #11
  br label %28

28:                                               ; preds = %24, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFNSt3__16vectorIhNS3_9allocatorIhEEEEN10extensions17ExtensionResourceEEJS9_EEEFS7_vEE7RunOnceEPNS0_13BindStateBaseE(%"class.std::__1::vector"* noalias sret, %"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %3 = alloca %"class.extensions::ExtensionResource", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %1, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to void (%"class.std::__1::vector"*, %"class.extensions::ExtensionResource"*)**
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %1, i64 1, i32 1
  %7 = bitcast void ()** %6 to %"class.extensions::ExtensionResource"*
  %8 = bitcast %"class.extensions::ExtensionResource"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %8) #12, !noalias !248
  %9 = load void (%"class.std::__1::vector"*, %"class.extensions::ExtensionResource"*)*, void (%"class.std::__1::vector"*, %"class.extensions::ExtensionResource"*)** %5, align 8, !noalias !253
  call void @_ZN10extensions17ExtensionResourceC1EOS0_(%"class.extensions::ExtensionResource"* nonnull %3, %"class.extensions::ExtensionResource"* dereferenceable(104) %7) #12, !noalias !253
  call void %9(%"class.std::__1::vector"* sret %0, %"class.extensions::ExtensionResource"* nonnull %3) #12
  call void @_ZN10extensions17ExtensionResourceD1Ev(%"class.extensions::ExtensionResource"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %8) #12, !noalias !248
  ret void
}

declare void @_ZN10extensions17ExtensionResourceC1EOS0_(%"class.extensions::ExtensionResource"*, %"class.extensions::ExtensionResource"* dereferenceable(104)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFNSt3__16vectorIhNS2_9allocatorIhEEEEN10extensions17ExtensionResourceEEJS8_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.extensions::ExtensionResource"*
  tail call void @_ZN10extensions17ExtensionResourceD1Ev(%"class.extensions::ExtensionResource"* %5) #12
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #11
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

declare dereferenceable(24) %"class.base::FilePath"* @_ZNK10extensions17ExtensionResource11GetFilePathEv(%"class.extensions::ExtensionResource"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_124ReadFileAsCompressedDataEN4base8FilePathE(%"class.std::__1::vector"* noalias sret, %"class.base::FilePath"*) #0 {
  %3 = alloca %"class.base::ScopedBlockingCall", align 8
  %4 = alloca %"class.base::Location", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.base::ScopedBlockingCall"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %6) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 80, i1 false)
  %7 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 201) #12
  call void @_ZN4base18ScopedBlockingCallC1ERKNS_8LocationENS_12BlockingTypeE(%"class.base::ScopedBlockingCall"* nonnull %3, %"class.base::Location"* nonnull dereferenceable(32) %4, i32 0) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #12
  %8 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #12
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #12
  %11 = call zeroext i1 @_ZN4base16ReadFileToStringERKNS_8FilePathEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.base::FilePath"* dereferenceable(24) %1, %"class.std::__1::basic_string"* nonnull %5) #12
  %12 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  %16 = load i8*, i8** %9, align 8
  %17 = load i64, i64* %10, align 8
  %18 = zext i8 %14 to i64
  %19 = select i1 %15, i8* %16, i8* %8
  %20 = select i1 %15, i64 %17, i64 %18
  %21 = getelementptr inbounds i8, i8* %19, i64 %20
  %22 = bitcast %"class.std::__1::vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false) #12
  %23 = icmp eq i64 %20, 0
  br i1 %23, label %136, label %24

24:                                               ; preds = %2
  %25 = icmp slt i64 %20, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %24
  %27 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %27) #13
  unreachable

28:                                               ; preds = %24
  %29 = call i8* @_Znwm(i64 %20) #11
  %30 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  store i8* %29, i8** %30, align 8
  %31 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  store i8* %29, i8** %31, align 8
  %32 = getelementptr inbounds i8, i8* %29, i64 %20
  %33 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store i8* %32, i8** %33, align 8
  %34 = bitcast i8** %30 to i64*
  %35 = icmp ult i64 %20, 32
  br i1 %35, label %122, label %36

36:                                               ; preds = %28
  %37 = getelementptr i8, i8* %29, i64 %20
  %38 = icmp ult i8* %29, %21
  %39 = icmp ult i8* %19, %37
  %40 = and i1 %38, %39
  br i1 %40, label %122, label %41

41:                                               ; preds = %36
  %42 = and i64 %20, -32
  %43 = getelementptr i8, i8* %29, i64 %42
  %44 = getelementptr i8, i8* %19, i64 %42
  %45 = add i64 %42, -32
  %46 = lshr exact i64 %45, 5
  %47 = add nuw nsw i64 %46, 1
  %48 = and i64 %47, 3
  %49 = icmp ult i64 %45, 96
  br i1 %49, label %101, label %50

50:                                               ; preds = %41
  %51 = sub nsw i64 %47, %48
  br label %52

52:                                               ; preds = %52, %50
  %53 = phi i64 [ 0, %50 ], [ %98, %52 ]
  %54 = phi i64 [ %51, %50 ], [ %99, %52 ]
  %55 = getelementptr i8, i8* %29, i64 %53
  %56 = getelementptr i8, i8* %19, i64 %53
  %57 = bitcast i8* %56 to <16 x i8>*
  %58 = load <16 x i8>, <16 x i8>* %57, align 1, !alias.scope !256
  %59 = getelementptr i8, i8* %56, i64 16
  %60 = bitcast i8* %59 to <16 x i8>*
  %61 = load <16 x i8>, <16 x i8>* %60, align 1, !alias.scope !256
  %62 = bitcast i8* %55 to <16 x i8>*
  store <16 x i8> %58, <16 x i8>* %62, align 1, !alias.scope !259, !noalias !256
  %63 = getelementptr i8, i8* %55, i64 16
  %64 = bitcast i8* %63 to <16 x i8>*
  store <16 x i8> %61, <16 x i8>* %64, align 1, !alias.scope !259, !noalias !256
  %65 = or i64 %53, 32
  %66 = getelementptr i8, i8* %29, i64 %65
  %67 = getelementptr i8, i8* %19, i64 %65
  %68 = bitcast i8* %67 to <16 x i8>*
  %69 = load <16 x i8>, <16 x i8>* %68, align 1, !alias.scope !256
  %70 = getelementptr i8, i8* %67, i64 16
  %71 = bitcast i8* %70 to <16 x i8>*
  %72 = load <16 x i8>, <16 x i8>* %71, align 1, !alias.scope !256
  %73 = bitcast i8* %66 to <16 x i8>*
  store <16 x i8> %69, <16 x i8>* %73, align 1, !alias.scope !259, !noalias !256
  %74 = getelementptr i8, i8* %66, i64 16
  %75 = bitcast i8* %74 to <16 x i8>*
  store <16 x i8> %72, <16 x i8>* %75, align 1, !alias.scope !259, !noalias !256
  %76 = or i64 %53, 64
  %77 = getelementptr i8, i8* %29, i64 %76
  %78 = getelementptr i8, i8* %19, i64 %76
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1, !alias.scope !256
  %81 = getelementptr i8, i8* %78, i64 16
  %82 = bitcast i8* %81 to <16 x i8>*
  %83 = load <16 x i8>, <16 x i8>* %82, align 1, !alias.scope !256
  %84 = bitcast i8* %77 to <16 x i8>*
  store <16 x i8> %80, <16 x i8>* %84, align 1, !alias.scope !259, !noalias !256
  %85 = getelementptr i8, i8* %77, i64 16
  %86 = bitcast i8* %85 to <16 x i8>*
  store <16 x i8> %83, <16 x i8>* %86, align 1, !alias.scope !259, !noalias !256
  %87 = or i64 %53, 96
  %88 = getelementptr i8, i8* %29, i64 %87
  %89 = getelementptr i8, i8* %19, i64 %87
  %90 = bitcast i8* %89 to <16 x i8>*
  %91 = load <16 x i8>, <16 x i8>* %90, align 1, !alias.scope !256
  %92 = getelementptr i8, i8* %89, i64 16
  %93 = bitcast i8* %92 to <16 x i8>*
  %94 = load <16 x i8>, <16 x i8>* %93, align 1, !alias.scope !256
  %95 = bitcast i8* %88 to <16 x i8>*
  store <16 x i8> %91, <16 x i8>* %95, align 1, !alias.scope !259, !noalias !256
  %96 = getelementptr i8, i8* %88, i64 16
  %97 = bitcast i8* %96 to <16 x i8>*
  store <16 x i8> %94, <16 x i8>* %97, align 1, !alias.scope !259, !noalias !256
  %98 = add i64 %53, 128
  %99 = add i64 %54, -4
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %52, !llvm.loop !261

101:                                              ; preds = %52, %41
  %102 = phi i64 [ 0, %41 ], [ %98, %52 ]
  %103 = icmp eq i64 %48, 0
  br i1 %103, label %120, label %104

104:                                              ; preds = %101, %104
  %105 = phi i64 [ %117, %104 ], [ %102, %101 ]
  %106 = phi i64 [ %118, %104 ], [ %48, %101 ]
  %107 = getelementptr i8, i8* %29, i64 %105
  %108 = getelementptr i8, i8* %19, i64 %105
  %109 = bitcast i8* %108 to <16 x i8>*
  %110 = load <16 x i8>, <16 x i8>* %109, align 1, !alias.scope !256
  %111 = getelementptr i8, i8* %108, i64 16
  %112 = bitcast i8* %111 to <16 x i8>*
  %113 = load <16 x i8>, <16 x i8>* %112, align 1, !alias.scope !256
  %114 = bitcast i8* %107 to <16 x i8>*
  store <16 x i8> %110, <16 x i8>* %114, align 1, !alias.scope !259, !noalias !256
  %115 = getelementptr i8, i8* %107, i64 16
  %116 = bitcast i8* %115 to <16 x i8>*
  store <16 x i8> %113, <16 x i8>* %116, align 1, !alias.scope !259, !noalias !256
  %117 = add i64 %105, 32
  %118 = add i64 %106, -1
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %104, !llvm.loop !262

120:                                              ; preds = %104, %101
  %121 = icmp eq i64 %20, %42
  br i1 %121, label %132, label %122

122:                                              ; preds = %120, %36, %28
  %123 = phi i8* [ %29, %36 ], [ %29, %28 ], [ %43, %120 ]
  %124 = phi i8* [ %19, %36 ], [ %19, %28 ], [ %44, %120 ]
  br label %125

125:                                              ; preds = %122, %125
  %126 = phi i8* [ %130, %125 ], [ %123, %122 ]
  %127 = phi i8* [ %129, %125 ], [ %124, %122 ]
  %128 = load i8, i8* %127, align 1
  store i8 %128, i8* %126, align 1
  %129 = getelementptr inbounds i8, i8* %127, i64 1
  %130 = getelementptr inbounds i8, i8* %126, i64 1
  %131 = icmp eq i8* %129, %21
  br i1 %131, label %132, label %125, !llvm.loop !263

132:                                              ; preds = %125, %120
  %133 = phi i8* [ %43, %120 ], [ %130, %125 ]
  %134 = load i8, i8* %13, align 1
  %135 = ptrtoint i8* %133 to i64
  store i64 %135, i64* %34, align 8
  br label %136

136:                                              ; preds = %2, %132
  %137 = phi i8 [ %14, %2 ], [ %134, %132 ]
  %138 = icmp slt i8 %137, 0
  br i1 %138, label %139, label %141

139:                                              ; preds = %136
  %140 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %140) #11
  br label %141

141:                                              ; preds = %136, %139
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #12
  call void @_ZN4base18ScopedBlockingCallD1Ev(%"class.base::ScopedBlockingCall"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %6) #12
  ret void
}

declare void @_ZN4base8FilePathC1ERKS0_(%"class.base::FilePath"*, %"class.base::FilePath"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #3

declare zeroext i1 @_ZN4base16ReadFileToStringERKNS_8FilePathEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.base::FilePath"* dereferenceable(24), %"class.std::__1::basic_string"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIMN12_GLOBAL__N_119IconLoadingPipelineEFvNSt3__16vectorIhNS5_9allocatorIhEEEEEJ13scoped_refptrIS4_EEEEFvS9_EE7RunOnceEPNS0_13BindStateBaseEOS9_(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.std::__1::vector"* nocapture dereferenceable(24)) #0 align 2 {
  %3 = alloca %"class.std::__1::vector", align 16
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %6 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #12
  %12 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds i8, i8* %13, i64 %10
  %15 = bitcast i8* %14 to %"class.(anonymous namespace)::IconLoadingPipeline"*
  %16 = and i64 %7, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %2
  %19 = bitcast i8* %14 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = add i64 %7, -1
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = bitcast i8* %22 to void (%"class.(anonymous namespace)::IconLoadingPipeline"*, %"class.std::__1::vector"*)**
  %24 = load void (%"class.(anonymous namespace)::IconLoadingPipeline"*, %"class.std::__1::vector"*)*, void (%"class.(anonymous namespace)::IconLoadingPipeline"*, %"class.std::__1::vector"*)** %23, align 8
  br label %27

25:                                               ; preds = %2
  %26 = inttoptr i64 %7 to void (%"class.(anonymous namespace)::IconLoadingPipeline"*, %"class.std::__1::vector"*)*
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi void (%"class.(anonymous namespace)::IconLoadingPipeline"*, %"class.std::__1::vector"*)* [ %24, %18 ], [ %26, %25 ]
  %29 = bitcast %"class.std::__1::vector"* %1 to <2 x i64>*
  %30 = load <2 x i64>, <2 x i64>* %29, align 8
  %31 = bitcast %"class.std::__1::vector"* %3 to <2 x i64>*
  store <2 x i64> %30, <2 x i64>* %31, align 16
  %32 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %33 = bitcast i8** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %36 = bitcast i8** %35 to i64*
  store i64 %34, i64* %36, align 16
  %37 = bitcast %"class.std::__1::vector"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #12
  call void %28(%"class.(anonymous namespace)::IconLoadingPipeline"* %15, %"class.std::__1::vector"* nonnull %3) #12
  %38 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 16
  %40 = icmp eq i8* %39, null
  br i1 %40, label %45, label %41

41:                                               ; preds = %27
  %42 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %43 = bitcast i8** %42 to i64*
  %44 = ptrtoint i8* %39 to i64
  store i64 %44, i64* %43, align 8
  call void @_ZdlPv(i8* nonnull %39) #11
  br label %45

45:                                               ; preds = %27, %41
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIMN12_GLOBAL__N_119IconLoadingPipelineEFvNSt3__16vectorIhNS4_9allocatorIhEEEEEJ13scoped_refptrIS3_EEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %class.scoped_refptr.60*
  tail call fastcc void @_ZN13scoped_refptrIN12_GLOBAL__N_119IconLoadingPipelineEED2Ev(%class.scoped_refptr.60* %5) #12
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #11
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN12_GLOBAL__N_116ImageToImageSkiaENS_12OnceCallbackIFvN3gfx9ImageSkiaEEEEE3$_1JS8_EEEFvRKNS5_5ImageEEE7RunOnceEPNS0_13BindStateBaseESD_"(%"class.base::internal::BindStateBase"* nocapture, %"class.gfx::Image"* dereferenceable(8)) #0 align 2 {
  %3 = alloca %"class.base::OnceCallback.1", align 8
  %4 = alloca %"class.gfx::ImageSkia", align 8
  %5 = alloca %"class.base::OnceCallback.1", align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast %"class.base::OnceCallback.1"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  %8 = bitcast void ()** %6 to %"class.base::internal::BindStateBase"**
  %9 = bitcast void ()** %6 to i64*
  %10 = load i64, i64* %9, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %11 = bitcast %"class.gfx::ImageSkia"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #12
  call void @_ZNK3gfx5Image11AsImageSkiaEv(%"class.gfx::ImageSkia"* nonnull sret %4, %"class.gfx::Image"* %1) #12
  %12 = bitcast %"class.base::OnceCallback.1"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #12
  %13 = getelementptr inbounds %"class.base::OnceCallback.1", %"class.base::OnceCallback.1"* %5, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.base::OnceCallback.1"* %3 to i64*
  store i64 %10, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8
  %15 = getelementptr inbounds %"class.base::OnceCallback.1", %"class.base::OnceCallback.1"* %3, i64 0, i32 0
  %16 = inttoptr i64 %10 to %"class.base::internal::BindStateBase"*
  %17 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %16, i64 0, i32 1
  %18 = bitcast void ()** %17 to void (%"class.base::internal::BindStateBase"*, %"class.gfx::ImageSkia"*)**
  %19 = load void (%"class.base::internal::BindStateBase"*, %"class.gfx::ImageSkia"*)*, void (%"class.base::internal::BindStateBase"*, %"class.gfx::ImageSkia"*)** %18, align 8
  call void %19(%"class.base::internal::BindStateBase"* %16, %"class.gfx::ImageSkia"* nonnull dereferenceable(8) %4) #12
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #12
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #12
  %20 = getelementptr inbounds %"class.base::OnceCallback.1", %"class.base::OnceCallback.1"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %20) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  ret void
}

declare void @_ZNK3gfx5Image11AsImageSkiaEv(%"class.gfx::ImageSkia"* sret, %"class.gfx::Image"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN12_GLOBAL__N_116ImageToImageSkiaENS_12OnceCallbackIFvN3gfx9ImageSkiaEEEEE3$_1JS7_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #12
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #11
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIMN12_GLOBAL__N_119IconLoadingPipelineEFvN3gfx9ImageSkiaEEJ13scoped_refptrIS4_EEEEFvS6_EE7RunOnceEPNS0_13BindStateBaseEOS6_(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.gfx::ImageSkia"* dereferenceable(8)) #0 align 2 {
  %3 = alloca %"class.gfx::ImageSkia", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %6 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.gfx::ImageSkia"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #12
  %12 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds i8, i8* %13, i64 %10
  %15 = bitcast i8* %14 to %"class.(anonymous namespace)::IconLoadingPipeline"*
  %16 = and i64 %7, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %2
  %19 = bitcast i8* %14 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = add i64 %7, -1
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = bitcast i8* %22 to void (%"class.(anonymous namespace)::IconLoadingPipeline"*, %"class.gfx::ImageSkia"*)**
  %24 = load void (%"class.(anonymous namespace)::IconLoadingPipeline"*, %"class.gfx::ImageSkia"*)*, void (%"class.(anonymous namespace)::IconLoadingPipeline"*, %"class.gfx::ImageSkia"*)** %23, align 8
  br label %27

25:                                               ; preds = %2
  %26 = inttoptr i64 %7 to void (%"class.(anonymous namespace)::IconLoadingPipeline"*, %"class.gfx::ImageSkia"*)*
  br label %27

27:                                               ; preds = %18, %25
  %28 = phi void (%"class.(anonymous namespace)::IconLoadingPipeline"*, %"class.gfx::ImageSkia"*)* [ %24, %18 ], [ %26, %25 ]
  call void @_ZN3gfx9ImageSkiaC1ERKS0_(%"class.gfx::ImageSkia"* nonnull %3, %"class.gfx::ImageSkia"* dereferenceable(8) %1) #12
  call void %28(%"class.(anonymous namespace)::IconLoadingPipeline"* %15, %"class.gfx::ImageSkia"* nonnull %3) #12
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #12
  ret void
}

declare void @_ZN3gfx9ImageSkiaC1ERKS0_(%"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIMN12_GLOBAL__N_119IconLoadingPipelineEFvN3gfx9ImageSkiaEEJ13scoped_refptrIS3_EEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %class.scoped_refptr.60*
  tail call fastcc void @_ZN13scoped_refptrIN12_GLOBAL__N_119IconLoadingPipelineEED2Ev(%class.scoped_refptr.60* %5) #12
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #11
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

declare dereferenceable(8) %"class.gfx::ImageSkia"* @_ZN3gfx9ImageSkiaaSERKS0_(%"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_119IconLoadingPipeline21CompleteWithIconValueEN4mojo9StructPtrIN4apps5mojom9IconValueEEE(%"class.(anonymous namespace)::IconLoadingPipeline"*, %"class.mojo::StructPtr"* nocapture) #0 align 2 {
  %3 = alloca %"class.base::OnceCallback.59", align 8
  %4 = alloca %"class.mojo::StructPtr", align 8
  %5 = alloca %"class.base::OnceCallback.296", align 8
  %6 = alloca %"class.base::OnceCallback.296", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = alloca %"class.base::OnceCallback.479", align 8
  %9 = alloca %"class.base::OnceCallback", align 8
  %10 = alloca %class.scoped_refptr.60, align 8
  %11 = getelementptr inbounds %"class.(anonymous namespace)::IconLoadingPipeline", %"class.(anonymous namespace)::IconLoadingPipeline"* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  switch i32 %12, label %44 [
    i32 1, label %13
    i32 3, label %13
  ]

13:                                               ; preds = %2, %2
  %14 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %15 = load i64, i64* %14, align 8
  store i64 0, i64* %14, align 8
  %16 = bitcast %"class.mojo::StructPtr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16)
  %17 = inttoptr i64 %15 to %"class.apps::mojom::IconValue"*
  %18 = getelementptr inbounds %"class.apps::mojom::IconValue", %"class.apps::mojom::IconValue"* %17, i64 0, i32 2, i32 0, i32 0
  %19 = load %"class.gfx::internal::ImageSkiaStorage"*, %"class.gfx::internal::ImageSkiaStorage"** %18, align 8
  %20 = icmp eq %"class.gfx::internal::ImageSkiaStorage"* %19, null
  br i1 %20, label %40, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.(anonymous namespace)::IconLoadingPipeline", %"class.(anonymous namespace)::IconLoadingPipeline"* %0, i64 0, i32 11
  %23 = bitcast %"class.mojo::StructPtr"* %4 to i64*
  %24 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %15, i64* %23, align 8
  %25 = bitcast %"class.base::OnceCallback.59"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #12
  %26 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %22, i64 0, i32 0, i32 0, i32 0
  %27 = bitcast %"class.base::OnceCallback.59"* %22 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.base::OnceCallback.59"* %3 to i64*
  store i64 %28, i64* %29, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %26, align 8
  %30 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %3, i64 0, i32 0
  %31 = inttoptr i64 %28 to %"class.base::internal::BindStateBase"*
  %32 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %31, i64 0, i32 1
  %33 = bitcast void ()** %32 to void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr"*)**
  %34 = load void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr"*)*, void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr"*)** %33, align 8
  call void %34(%"class.base::internal::BindStateBase"* %31, %"class.mojo::StructPtr"* nonnull dereferenceable(8) %4) #12
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %30) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #12
  %35 = load %"class.apps::mojom::IconValue"*, %"class.apps::mojom::IconValue"** %24, align 8
  store %"class.apps::mojom::IconValue"* null, %"class.apps::mojom::IconValue"** %24, align 8
  %36 = icmp eq %"class.apps::mojom::IconValue"* %35, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %21
  call void @_ZN4apps5mojom9IconValueD1Ev(%"class.apps::mojom::IconValue"* nonnull %35) #12
  %38 = bitcast %"class.apps::mojom::IconValue"* %35 to i8*
  call void @_ZdlPv(i8* %38) #11
  br label %39

39:                                               ; preds = %37, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16)
  br label %112

40:                                               ; preds = %13
  tail call fastcc void @_ZN12_GLOBAL__N_119IconLoadingPipeline32MaybeLoadFallbackOrCompleteEmptyEv(%"class.(anonymous namespace)::IconLoadingPipeline"* %0) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16)
  %41 = icmp eq i64 %15, 0
  br i1 %41, label %112, label %42

42:                                               ; preds = %40
  tail call void @_ZN4apps5mojom9IconValueD1Ev(%"class.apps::mojom::IconValue"* nonnull %17) #12
  %43 = inttoptr i64 %15 to i8*
  tail call void @_ZdlPv(i8* %43) #11
  br label %112

44:                                               ; preds = %2
  %45 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"class.apps::mojom::IconValue"*, %"class.apps::mojom::IconValue"** %45, align 8
  %47 = getelementptr inbounds %"class.apps::mojom::IconValue", %"class.apps::mojom::IconValue"* %46, i64 0, i32 2
  tail call void @_ZN3gfx9ImageSkia14MakeThreadSafeEv(%"class.gfx::ImageSkia"* %47) #12
  %48 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %48) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 1060) #12
  %49 = load %"class.apps::mojom::IconValue"*, %"class.apps::mojom::IconValue"** %45, align 8
  %50 = getelementptr inbounds %"class.apps::mojom::IconValue", %"class.apps::mojom::IconValue"* %49, i64 0, i32 2
  %51 = getelementptr inbounds %"class.(anonymous namespace)::IconLoadingPipeline", %"class.(anonymous namespace)::IconLoadingPipeline"* %0, i64 0, i32 5
  %52 = call i8* @_Znwm(i64 56) #11, !noalias !264
  %53 = bitcast i8* %52 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %53, void ()* bitcast (void (%"class.std::__1::vector"*, %"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFNSt3__16vectorIhNS3_9allocatorIhEEEEN3gfx9ImageSkiaEfEJS9_fEEEFS7_vEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFNSt3__16vectorIhNS2_9allocatorIhEEEEN3gfx9ImageSkiaEfEJS8_fEE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !264
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i64*
  store i64 ptrtoint (void (%"class.std::__1::vector"*, %"class.gfx::ImageSkia"*, float)* @_ZN4apps21EncodeImageToPngBytesEN3gfx9ImageSkiaEf to i64), i64* %55, align 8, !noalias !264
  %56 = getelementptr inbounds i8, i8* %52, i64 40
  %57 = bitcast i8* %56 to %"class.gfx::ImageSkia"*
  call void @_ZN3gfx9ImageSkiaC1ERKS0_(%"class.gfx::ImageSkia"* %57, %"class.gfx::ImageSkia"* dereferenceable(8) %50) #12, !noalias !264
  %58 = getelementptr inbounds i8, i8* %52, i64 48
  %59 = bitcast float* %51 to i32*
  %60 = load i32, i32* %59, align 4, !noalias !264
  %61 = bitcast i8* %58 to i32*
  store i32 %60, i32* %61, align 4, !noalias !264
  %62 = bitcast %"class.base::OnceCallback.479"* %8 to i8**
  store i8* %52, i8** %62, align 8, !alias.scope !264
  %63 = bitcast %class.scoped_refptr.60* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #12
  %64 = icmp eq %"class.(anonymous namespace)::IconLoadingPipeline"* %0, null
  br i1 %64, label %65, label %67

65:                                               ; preds = %44
  %66 = ptrtoint i8* %52 to i64
  br label %71

67:                                               ; preds = %44
  %68 = getelementptr inbounds %"class.(anonymous namespace)::IconLoadingPipeline", %"class.(anonymous namespace)::IconLoadingPipeline"* %0, i64 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %68) #12
  %69 = bitcast %"class.base::OnceCallback.479"* %8 to i64*
  %70 = load i64, i64* %69, align 8, !noalias !269
  br label %71

71:                                               ; preds = %65, %67
  %72 = phi i64 [ %66, %65 ], [ %70, %67 ]
  %73 = getelementptr inbounds %class.scoped_refptr.60, %class.scoped_refptr.60* %10, i64 0, i32 0
  %74 = call i8* @_Znwm(i64 56) #11, !noalias !274
  %75 = bitcast i8* %74 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %75, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN12_GLOBAL__N_119IconLoadingPipelineEFvNSt3__16vectorIhNS5_9allocatorIhEEEEEJ13scoped_refptrIS4_EEEEFvS9_EE7RunOnceEPNS0_13BindStateBaseEOS9_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN12_GLOBAL__N_119IconLoadingPipelineEFvNSt3__16vectorIhNS4_9allocatorIhEEEEEJ13scoped_refptrIS3_EEE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !274
  %76 = getelementptr inbounds i8, i8* %74, i64 32
  %77 = bitcast i8* %76 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.(anonymous namespace)::IconLoadingPipeline"*, %"class.std::__1::vector"*)* @_ZN12_GLOBAL__N_119IconLoadingPipeline22CompleteWithCompressedENSt3__16vectorIhNS1_9allocatorIhEEEE to i64), i64 0>, <2 x i64>* %77, align 8, !noalias !274
  %78 = getelementptr inbounds i8, i8* %74, i64 48
  %79 = ptrtoint %"class.(anonymous namespace)::IconLoadingPipeline"* %0 to i64
  %80 = bitcast i8* %78 to i64*
  store i64 %79, i64* %80, align 8, !noalias !274
  store %"class.(anonymous namespace)::IconLoadingPipeline"* null, %"class.(anonymous namespace)::IconLoadingPipeline"** %73, align 8, !noalias !274
  %81 = bitcast %"class.base::OnceCallback.296"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81)
  %82 = bitcast %"class.base::OnceCallback.296"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82)
  %83 = call i8* @_Znwm(i64 8) #11
  %84 = bitcast i8* %83 to i64*
  store i64 0, i64* %84, align 8
  %85 = ptrtoint i8* %83 to i64
  %86 = call i8* @_Znwm(i64 56) #11, !noalias !269
  %87 = bitcast i8* %86 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %87, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFNSt3__16vectorIhNS4_9allocatorIhEEEEvEEEPNS4_10unique_ptrIS8_NS4_14default_deleteIS8_EEEEEJSA_SF_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFNSt3__16vectorIhNS3_9allocatorIhEEEEvEEEPNS3_10unique_ptrIS7_NS3_14default_deleteIS7_EEEEEJS9_SE_EE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !269
  %88 = getelementptr inbounds i8, i8* %86, i64 32
  %89 = bitcast i8* %88 to i64*
  store i64 ptrtoint (void (%"class.base::OnceCallback.479"*, %"class.std::__1::unique_ptr.480"*)* @_ZN4base8internal20ReturnAsParamAdapterINSt3__16vectorIhNS2_9allocatorIhEEEEEEvNS_12OnceCallbackIFT_vEEEPNS2_10unique_ptrIS8_NS2_14default_deleteIS8_EEEE to i64), i64* %89, align 8, !noalias !269
  %90 = getelementptr inbounds i8, i8* %86, i64 40
  %91 = getelementptr inbounds %"class.base::OnceCallback.479", %"class.base::OnceCallback.479"* %8, i64 0, i32 0, i32 0, i32 0
  %92 = bitcast i8* %90 to i64*
  store i64 %72, i64* %92, align 8, !noalias !269
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %91, align 8, !noalias !269
  %93 = getelementptr inbounds i8, i8* %86, i64 48
  %94 = bitcast i8* %93 to i64*
  store i64 %85, i64* %94, align 8, !noalias !269
  %95 = bitcast %"class.base::OnceCallback.296"* %5 to i8**
  store i8* %86, i8** %95, align 8, !alias.scope !269
  %96 = call i8* @_Znwm(i64 56) #11, !noalias !279
  %97 = bitcast i8* %96 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %97, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__16vectorIhNS4_9allocatorIhEEEEEEEPNS4_10unique_ptrIS8_NS4_14default_deleteIS8_EEEEEJSA_NS0_12OwnedWrapperISE_NSC_ISE_EEEEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__16vectorIhNS3_9allocatorIhEEEEEEEPNS3_10unique_ptrIS7_NS3_14default_deleteIS7_EEEEEJS9_NS0_12OwnedWrapperISD_NSB_ISD_EEEEEE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !279
  %98 = getelementptr inbounds i8, i8* %96, i64 32
  %99 = bitcast i8* %98 to i64*
  store i64 ptrtoint (void (%"class.base::OnceCallback"*, %"class.std::__1::unique_ptr.480"*)* @_ZN4base8internal12ReplyAdapterINSt3__16vectorIhNS2_9allocatorIhEEEES6_EEvNS_12OnceCallbackIFvT0_EEEPNS2_10unique_ptrIT_NS2_14default_deleteISC_EEEE to i64), i64* %99, align 8, !noalias !279
  %100 = getelementptr inbounds i8, i8* %96, i64 40
  %101 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %9, i64 0, i32 0, i32 0, i32 0
  %102 = ptrtoint i8* %74 to i64
  %103 = bitcast i8* %100 to i64*
  store i64 %102, i64* %103, align 8, !noalias !279
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %101, align 8, !noalias !279
  %104 = getelementptr inbounds i8, i8* %96, i64 48
  %105 = bitcast i8* %104 to i64*
  store i64 %85, i64* %105, align 8, !noalias !279
  %106 = bitcast %"class.base::OnceCallback.296"* %6 to i8**
  store i8* %96, i8** %106, align 8, !alias.scope !279
  %107 = call zeroext i1 @_ZN4base10ThreadPool16PostTaskAndReplyERKNS_8LocationERKNS_10TaskTraitsENS_12OnceCallbackIFvvEEES9_(%"class.base::Location"* nonnull dereferenceable(32) %7, %"class.base::TaskTraits"* nonnull dereferenceable(15) @.ref.tmp.8, %"class.base::OnceCallback.296"* nonnull %5, %"class.base::OnceCallback.296"* nonnull %6) #12
  %108 = getelementptr inbounds %"class.base::OnceCallback.296", %"class.base::OnceCallback.296"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %108) #12
  %109 = getelementptr inbounds %"class.base::OnceCallback.296", %"class.base::OnceCallback.296"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %109) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82)
  %110 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %9, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %110) #12
  call fastcc void @_ZN13scoped_refptrIN12_GLOBAL__N_119IconLoadingPipelineEED2Ev(%class.scoped_refptr.60* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #12
  %111 = getelementptr inbounds %"class.base::OnceCallback.479", %"class.base::OnceCallback.479"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %111) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %48) #12
  br label %112

112:                                              ; preds = %42, %40, %39, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIMN12_GLOBAL__N_119IconLoadingPipelineEFvN4mojo9StructPtrIN4apps5mojom9IconValueEEEEJ13scoped_refptrIS4_EEEEFvSA_EE7RunOnceEPNS0_13BindStateBaseEOSA_(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.mojo::StructPtr"* nocapture dereferenceable(8)) #0 align 2 {
  %3 = alloca %"class.mojo::StructPtr", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %6 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.mojo::StructPtr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #12
  %12 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds i8, i8* %13, i64 %10
  %15 = bitcast i8* %14 to %"class.(anonymous namespace)::IconLoadingPipeline"*
  %16 = and i64 %7, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %2
  %19 = bitcast i8* %14 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = add i64 %7, -1
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = bitcast i8* %22 to void (%"class.(anonymous namespace)::IconLoadingPipeline"*, %"class.mojo::StructPtr"*)**
  %24 = load void (%"class.(anonymous namespace)::IconLoadingPipeline"*, %"class.mojo::StructPtr"*)*, void (%"class.(anonymous namespace)::IconLoadingPipeline"*, %"class.mojo::StructPtr"*)** %23, align 8
  br label %27

25:                                               ; preds = %2
  %26 = inttoptr i64 %7 to void (%"class.(anonymous namespace)::IconLoadingPipeline"*, %"class.mojo::StructPtr"*)*
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi void (%"class.(anonymous namespace)::IconLoadingPipeline"*, %"class.mojo::StructPtr"*)* [ %24, %18 ], [ %26, %25 ]
  %29 = bitcast %"class.mojo::StructPtr"* %3 to i64*
  %30 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %32 = load i64, i64* %31, align 8
  store i64 %32, i64* %29, align 8
  store i64 0, i64* %31, align 8
  call void %28(%"class.(anonymous namespace)::IconLoadingPipeline"* %15, %"class.mojo::StructPtr"* nonnull %3) #12
  %33 = load %"class.apps::mojom::IconValue"*, %"class.apps::mojom::IconValue"** %30, align 8
  store %"class.apps::mojom::IconValue"* null, %"class.apps::mojom::IconValue"** %30, align 8
  %34 = icmp eq %"class.apps::mojom::IconValue"* %33, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %27
  call void @_ZN4apps5mojom9IconValueD1Ev(%"class.apps::mojom::IconValue"* nonnull %33) #12
  %36 = bitcast %"class.apps::mojom::IconValue"* %33 to i8*
  call void @_ZdlPv(i8* %36) #11
  br label %37

37:                                               ; preds = %27, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIMN12_GLOBAL__N_119IconLoadingPipelineEFvN4mojo9StructPtrIN4apps5mojom9IconValueEEEEJ13scoped_refptrIS3_EEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %class.scoped_refptr.60*
  tail call fastcc void @_ZN13scoped_refptrIN12_GLOBAL__N_119IconLoadingPipelineEED2Ev(%class.scoped_refptr.60* %5) #12
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #11
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN3gfx9ImageSkia14MakeThreadSafeEv(%"class.gfx::ImageSkia"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFNSt3__16vectorIhNS3_9allocatorIhEEEEN3gfx9ImageSkiaEfEJS9_fEEEFS7_vEE7RunOnceEPNS0_13BindStateBaseE(%"class.std::__1::vector"* noalias sret, %"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %3 = alloca %"class.gfx::ImageSkia", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %1, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to void (%"class.std::__1::vector"*, %"class.gfx::ImageSkia"*, float)**
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %1, i64 1, i32 1
  %7 = bitcast void ()** %6 to %"class.gfx::ImageSkia"*
  %8 = getelementptr inbounds void ()*, void ()** %6, i64 1
  %9 = bitcast void ()** %8 to float*
  %10 = bitcast %"class.gfx::ImageSkia"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #12, !noalias !284
  %11 = load void (%"class.std::__1::vector"*, %"class.gfx::ImageSkia"*, float)*, void (%"class.std::__1::vector"*, %"class.gfx::ImageSkia"*, float)** %5, align 8, !noalias !289
  call void @_ZN3gfx9ImageSkiaC1ERKS0_(%"class.gfx::ImageSkia"* nonnull %3, %"class.gfx::ImageSkia"* dereferenceable(8) %7) #12, !noalias !289
  %12 = load float, float* %9, align 4, !noalias !289
  call void %11(%"class.std::__1::vector"* sret %0, %"class.gfx::ImageSkia"* nonnull %3, float %12) #12
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #12, !noalias !284
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFNSt3__16vectorIhNS2_9allocatorIhEEEEN3gfx9ImageSkiaEfEJS8_fEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.gfx::ImageSkia"*
  tail call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* %5) #12
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #11
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

declare dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #2

declare void @_ZNK7web_app14AppIconManager29ReadSmallestCompressedIconAnyERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiN4base12OnceCallbackIFvNS1_6vectorIhNS5_IhEEEEEEE(%"class.web_app::AppIconManager"*, %"class.std::__1::basic_string"* dereferenceable(24), i32, %"class.base::OnceCallback"*) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::vector.538"* @_ZN2ui24GetSupportedScaleFactorsEv() local_unnamed_addr #2

declare i64 @_ZN3gfx18ScaleToFlooredSizeERKNS_4SizeEf(%"class.gfx::Size"* dereferenceable(8), float) local_unnamed_addr #2

declare float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_119IconLoadingPipeline16OnReadWebAppIconENSt3__13mapIi8SkBitmapNS1_4lessIiEENS1_9allocatorINS1_4pairIKiS3_EEEEEE(%"class.(anonymous namespace)::IconLoadingPipeline"*, %"class.std::__1::map.561"*) #0 align 2 {
  %3 = alloca %"class.gfx::ImageSkia", align 8
  %4 = alloca %"class.gfx::ImageSkia", align 8
  %5 = alloca %"class.gfx::Size", align 4
  %6 = alloca %"class.gfx::ImageSkia", align 8
  %7 = alloca %class.SkBitmap, align 8
  %8 = alloca %class.SkBitmap, align 8
  %9 = alloca %"class.gfx::ImageSkiaRep", align 8
  %10 = alloca %"class.gfx::ImageSkia", align 8
  %11 = getelementptr inbounds %"class.std::__1::map.561", %"class.std::__1::map.561"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %2
  call void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"* nonnull %3) #12
  call void @_ZN12_GLOBAL__N_119IconLoadingPipeline28MaybeApplyEffectsAndCompleteEN3gfx9ImageSkiaE(%"class.(anonymous namespace)::IconLoadingPipeline"* %0, %"class.gfx::ImageSkia"* nonnull %3)
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* nonnull %3) #12
  br label %109

15:                                               ; preds = %2
  %16 = bitcast %"class.gfx::ImageSkia"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = getelementptr inbounds %"class.gfx::ImageSkia", %"class.gfx::ImageSkia"* %4, i64 0, i32 0, i32 0
  store %"class.gfx::internal::ImageSkiaStorage"* inttoptr (i64 -6148914691236517206 to %"class.gfx::internal::ImageSkiaStorage"*), %"class.gfx::internal::ImageSkiaStorage"** %17, align 8
  call void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"* nonnull %4) #12
  %18 = getelementptr inbounds %"class.std::__1::map.561", %"class.std::__1::map.561"* %1, i64 0, i32 0, i32 0
  %19 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %18, align 8
  %20 = call dereferenceable(24) %"class.std::__1::vector.538"* @_ZN2ui24GetSupportedScaleFactorsEv() #12
  %21 = getelementptr inbounds %"class.std::__1::vector.538", %"class.std::__1::vector.538"* %20, i64 0, i32 0, i32 0
  %22 = load i32*, i32** %21, align 8
  %23 = getelementptr inbounds %"class.std::__1::vector.538", %"class.std::__1::vector.538"* %20, i64 0, i32 0, i32 1
  %24 = load i32*, i32** %23, align 8
  %25 = icmp eq i32* %22, %24
  br i1 %25, label %106, label %26

26:                                               ; preds = %15
  %27 = bitcast %"class.gfx::Size"* %5 to i8*
  %28 = getelementptr inbounds %"class.(anonymous namespace)::IconLoadingPipeline", %"class.(anonymous namespace)::IconLoadingPipeline"* %0, i64 0, i32 2
  %29 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %5, i64 0, i32 0
  %30 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %5, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::map.561", %"class.std::__1::map.561"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %32 = bitcast %class.SkBitmap* %7 to i8*
  %33 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %7, i64 0, i32 1, i32 2, i32 1, i32 0
  %34 = bitcast %class.SkBitmap* %8 to i8*
  %35 = bitcast %"class.gfx::ImageSkiaRep"* %9 to i8*
  br label %36

36:                                               ; preds = %26, %102
  %37 = phi %"class.std::__1::__tree_end_node"* [ %19, %26 ], [ %48, %102 ]
  %38 = phi i32* [ %22, %26 ], [ %103, %102 ]
  %39 = load i32, i32* %38, align 4
  %40 = call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %39) #12
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  %41 = load i32, i32* %28, align 8
  %42 = icmp sgt i32 %41, 0
  %43 = select i1 %42, i32 %41, i32 0
  store i32 %43, i32* %29, align 4
  store i32 %43, i32* %30, align 4
  %44 = call i64 @_ZN3gfx18ScaleToFlooredSizeERKNS_4SizeEf(%"class.gfx::Size"* nonnull dereferenceable(8) %5, float %40) #12
  %45 = trunc i64 %44 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #12
  %46 = icmp eq %"class.std::__1::__tree_end_node"* %37, %31
  br i1 %46, label %105, label %47

47:                                               ; preds = %36, %81
  %48 = phi %"class.std::__1::__tree_end_node"* [ %82, %81 ], [ %37, %36 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %48, i64 4
  %50 = bitcast %"class.std::__1::__tree_end_node"* %49 to i32*
  %51 = load i32, i32* %50, align 8
  %52 = icmp slt i32 %51, %45
  br i1 %52, label %53, label %84

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %48, i64 1, i32 0
  %55 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %54, align 8
  %56 = icmp eq %"class.std::__1::__tree_node_base"* %55, null
  br i1 %56, label %57, label %65

57:                                               ; preds = %53
  %58 = bitcast %"class.std::__1::__tree_end_node"* %48 to %"class.std::__1::__tree_node_base"*
  %59 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %48, i64 2
  %60 = bitcast %"class.std::__1::__tree_end_node"* %59 to %"class.std::__1::__tree_end_node"**
  %61 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %60, align 8
  %62 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %61, i64 0, i32 0
  %63 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %62, align 8
  %64 = icmp eq %"class.std::__1::__tree_node_base"* %63, %58
  br i1 %64, label %81, label %72

65:                                               ; preds = %53, %65
  %66 = phi %"class.std::__1::__tree_node_base"* [ %68, %65 ], [ %55, %53 ]
  %67 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %66, i64 0, i32 0, i32 0
  %68 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %67, align 8
  %69 = icmp eq %"class.std::__1::__tree_node_base"* %68, null
  br i1 %69, label %70, label %65

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %66, i64 0, i32 0
  br label %81

72:                                               ; preds = %57, %72
  %73 = phi %"class.std::__1::__tree_end_node"** [ %76, %72 ], [ %60, %57 ]
  %74 = bitcast %"class.std::__1::__tree_end_node"** %73 to %"class.std::__1::__tree_node_base"**
  %75 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %74, align 8
  %76 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %75, i64 0, i32 2
  %77 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %77, i64 0, i32 0
  %79 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %78, align 8
  %80 = icmp eq %"class.std::__1::__tree_node_base"* %79, %75
  br i1 %80, label %81, label %72

81:                                               ; preds = %72, %57, %70
  %82 = phi %"class.std::__1::__tree_end_node"* [ %71, %70 ], [ %61, %57 ], [ %77, %72 ]
  %83 = icmp eq %"class.std::__1::__tree_end_node"* %82, %31
  br i1 %83, label %105, label %47

84:                                               ; preds = %47
  %85 = icmp eq %"class.std::__1::__tree_end_node"* %48, %31
  br i1 %85, label %105, label %86

86:                                               ; preds = %84
  %87 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %48, i64 5
  %88 = bitcast %"class.std::__1::__tree_end_node"* %87 to %class.SkBitmap*
  %89 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %48, i64 10
  %90 = bitcast %"class.std::__1::__tree_end_node"* %89 to i32*
  %91 = load i32, i32* %90, align 4
  %92 = icmp slt i32 %91, 1
  br i1 %92, label %105, label %93

93:                                               ; preds = %86
  %94 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %88, i64 0, i32 1, i32 2, i32 1, i32 1
  %95 = load i32, i32* %94, align 4
  %96 = icmp slt i32 %95, 1
  br i1 %96, label %105, label %97

97:                                               ; preds = %93
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %32) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap* nonnull %7, %class.SkBitmap* dereferenceable(56) %88) #12
  %98 = load i32, i32* %33, align 8
  %99 = icmp eq i32 %98, %45
  br i1 %99, label %102, label %100

100:                                              ; preds = %97
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %34) #12
  call void @_ZN4skia15ImageOperations6ResizeERK8SkBitmapNS0_12ResizeMethodEiiPNS1_9AllocatorE(%class.SkBitmap* nonnull sret %8, %class.SkBitmap* nonnull dereferenceable(56) %7, i32 5, i32 %45, i32 %45, %"class.SkBitmap::Allocator"* null) #12
  %101 = call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSEOS_(%class.SkBitmap* nonnull %7, %class.SkBitmap* nonnull dereferenceable(56) %8) #12
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %34) #12
  br label %102

102:                                              ; preds = %100, %97
  call void @llvm.lifetime.start.p0i8(i64 192, i8* nonnull %35) #12
  call void @_ZN3gfx12ImageSkiaRepC1ERK8SkBitmapf(%"class.gfx::ImageSkiaRep"* nonnull %9, %class.SkBitmap* nonnull dereferenceable(56) %7, float %40) #12
  call void @_ZN3gfx9ImageSkia17AddRepresentationERKNS_12ImageSkiaRepE(%"class.gfx::ImageSkia"* nonnull %4, %"class.gfx::ImageSkiaRep"* nonnull dereferenceable(192) %9) #12
  call void @_ZN3gfx12ImageSkiaRepD1Ev(%"class.gfx::ImageSkiaRep"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 192, i8* nonnull %35) #12
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %32) #12
  %103 = getelementptr inbounds i32, i32* %38, i64 1
  %104 = icmp eq i32* %103, %24
  br i1 %104, label %106, label %36

105:                                              ; preds = %36, %86, %84, %93, %81
  call void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"* nonnull %6) #12
  br label %107

106:                                              ; preds = %102, %15
  call void @_ZN3gfx9ImageSkiaC1ERKS0_(%"class.gfx::ImageSkia"* nonnull %10, %"class.gfx::ImageSkia"* nonnull dereferenceable(8) %4) #12
  br label %107

107:                                              ; preds = %105, %106
  %108 = phi %"class.gfx::ImageSkia"* [ %6, %105 ], [ %10, %106 ]
  call void @_ZN12_GLOBAL__N_119IconLoadingPipeline28MaybeApplyEffectsAndCompleteEN3gfx9ImageSkiaE(%"class.(anonymous namespace)::IconLoadingPipeline"* %0, %"class.gfx::ImageSkia"* nonnull %108)
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* nonnull %108) #12
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  br label %109

109:                                              ; preds = %107, %14
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i32*, i32*, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1), i64, i32*, i64) local_unnamed_addr #0 comdat {
  %7 = ptrtoint i32* %0 to i64
  switch i64 %3, label %14 [
    i64 0, label %400
    i64 1, label %400
    i64 2, label %8
  ]

8:                                                ; preds = %6
  %9 = getelementptr inbounds i32, i32* %1, i64 -1
  %10 = load i32, i32* %9, align 4
  %11 = load i32, i32* %0, align 4
  %12 = icmp slt i32 %10, %11
  br i1 %12, label %13, label %400

13:                                               ; preds = %8
  store i32 %10, i32* %0, align 4
  store i32 %11, i32* %9, align 4
  br label %400

14:                                               ; preds = %6
  %15 = icmp slt i64 %3, 129
  br i1 %15, label %16, label %58

16:                                               ; preds = %14
  %17 = icmp eq i32* %0, %1
  br i1 %17, label %400, label %18

18:                                               ; preds = %16
  %19 = getelementptr inbounds i32, i32* %0, i64 1
  %20 = icmp eq i32* %19, %1
  br i1 %20, label %400, label %21

21:                                               ; preds = %18
  %22 = getelementptr i32, i32* %1, i64 -2
  %23 = ptrtoint i32* %22 to i64
  %24 = sub i64 %23, %7
  %25 = and i64 %24, 4
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %39

27:                                               ; preds = %21
  %28 = load i32, i32* %19, align 4
  br label %29

29:                                               ; preds = %34, %27
  %30 = phi i32* [ %31, %34 ], [ %19, %27 ]
  %31 = getelementptr inbounds i32, i32* %30, i64 -1
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %28, %32
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  store i32 %32, i32* %30, align 4
  %35 = icmp eq i32* %31, %0
  br i1 %35, label %36, label %29

36:                                               ; preds = %29, %34
  %37 = phi i32* [ %30, %29 ], [ %0, %34 ]
  store i32 %28, i32* %37, align 4
  %38 = getelementptr inbounds i32, i32* %0, i64 2
  br label %39

39:                                               ; preds = %36, %21
  %40 = phi i32* [ %19, %21 ], [ %38, %36 ]
  %41 = icmp ult i64 %24, 4
  br i1 %41, label %400, label %42

42:                                               ; preds = %39, %408
  %43 = phi i32* [ %410, %408 ], [ %40, %39 ]
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32* %43, %0
  br i1 %45, label %51, label %46

46:                                               ; preds = %42, %56
  %47 = phi i32* [ %48, %56 ], [ %43, %42 ]
  %48 = getelementptr inbounds i32, i32* %47, i64 -1
  %49 = load i32, i32* %48, align 4
  %50 = icmp slt i32 %44, %49
  br i1 %50, label %56, label %51

51:                                               ; preds = %56, %46, %42
  %52 = phi i32* [ %0, %42 ], [ %47, %46 ], [ %0, %56 ]
  store i32 %44, i32* %52, align 4
  %53 = getelementptr inbounds i32, i32* %43, i64 1
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32* %53, %0
  br i1 %55, label %408, label %401

56:                                               ; preds = %46
  store i32 %49, i32* %47, align 4
  %57 = icmp eq i32* %48, %0
  br i1 %57, label %51, label %46

58:                                               ; preds = %14
  %59 = lshr i64 %3, 1
  %60 = getelementptr inbounds i32, i32* %0, i64 %59
  %61 = icmp sgt i64 %3, %5
  br i1 %61, label %398, label %62

62:                                               ; preds = %58
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeE(i32* %0, i32* %60, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1) %2, i64 %59, i32* %4)
  %63 = sub nsw i64 %3, %59
  %64 = getelementptr inbounds i32, i32* %4, i64 %59
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeE(i32* %60, i32* %1, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1) %2, i64 %63, i32* %64)
  %65 = getelementptr inbounds i32, i32* %4, i64 %3
  br label %195

66:                                               ; preds = %365
  %67 = ptrtoint i32* %366 to i64
  %68 = icmp eq i32* %366, %65
  br i1 %68, label %400, label %69

69:                                               ; preds = %66
  %70 = add i64 %3, -1
  %71 = getelementptr i32, i32* %4, i64 %70
  %72 = ptrtoint i32* %71 to i64
  %73 = sub i64 %72, %67
  %74 = lshr i64 %73, 2
  %75 = add nuw nsw i64 %74, 1
  %76 = icmp ult i64 %75, 8
  br i1 %76, label %77, label %102

77:                                               ; preds = %193, %102, %69
  %78 = phi i32* [ %366, %102 ], [ %366, %69 ], [ %116, %193 ]
  %79 = phi i32* [ %368, %102 ], [ %368, %69 ], [ %117, %193 ]
  %80 = ptrtoint i32* %78 to i64
  %81 = add i64 %3, -1
  %82 = getelementptr i32, i32* %4, i64 %81
  %83 = ptrtoint i32* %82 to i64
  %84 = sub i64 %83, %80
  %85 = lshr i64 %84, 2
  %86 = add nuw nsw i64 %85, 1
  %87 = and i64 %86, 7
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %98, label %89

89:                                               ; preds = %77, %89
  %90 = phi i32* [ %94, %89 ], [ %78, %77 ]
  %91 = phi i32* [ %95, %89 ], [ %79, %77 ]
  %92 = phi i64 [ %96, %89 ], [ %87, %77 ]
  %93 = load i32, i32* %90, align 4
  store i32 %93, i32* %91, align 4
  %94 = getelementptr inbounds i32, i32* %90, i64 1
  %95 = getelementptr inbounds i32, i32* %91, i64 1
  %96 = add i64 %92, -1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %89, !llvm.loop !292

98:                                               ; preds = %89, %77
  %99 = phi i32* [ %78, %77 ], [ %94, %89 ]
  %100 = phi i32* [ %79, %77 ], [ %95, %89 ]
  %101 = icmp ult i64 %84, 28
  br i1 %101, label %400, label %370

102:                                              ; preds = %69
  %103 = add i64 %3, -1
  %104 = getelementptr i32, i32* %4, i64 %103
  %105 = ptrtoint i32* %104 to i64
  %106 = sub i64 %105, %67
  %107 = lshr i64 %106, 2
  %108 = add nuw nsw i64 %107, 1
  %109 = getelementptr i32, i32* %368, i64 %108
  %110 = getelementptr i32, i32* %366, i64 %108
  %111 = icmp ult i32* %368, %110
  %112 = icmp ult i32* %366, %109
  %113 = and i1 %111, %112
  br i1 %113, label %77, label %114

114:                                              ; preds = %102
  %115 = and i64 %75, 9223372036854775800
  %116 = getelementptr i32, i32* %366, i64 %115
  %117 = getelementptr i32, i32* %368, i64 %115
  %118 = add nsw i64 %115, -8
  %119 = lshr exact i64 %118, 3
  %120 = add nuw nsw i64 %119, 1
  %121 = and i64 %120, 3
  %122 = icmp ult i64 %118, 24
  br i1 %122, label %174, label %123

123:                                              ; preds = %114
  %124 = sub nsw i64 %120, %121
  br label %125

125:                                              ; preds = %125, %123
  %126 = phi i64 [ 0, %123 ], [ %171, %125 ]
  %127 = phi i64 [ %124, %123 ], [ %172, %125 ]
  %128 = getelementptr i32, i32* %366, i64 %126
  %129 = getelementptr i32, i32* %368, i64 %126
  %130 = bitcast i32* %128 to <4 x i32>*
  %131 = load <4 x i32>, <4 x i32>* %130, align 4, !alias.scope !293
  %132 = getelementptr i32, i32* %128, i64 4
  %133 = bitcast i32* %132 to <4 x i32>*
  %134 = load <4 x i32>, <4 x i32>* %133, align 4, !alias.scope !293
  %135 = bitcast i32* %129 to <4 x i32>*
  store <4 x i32> %131, <4 x i32>* %135, align 4, !alias.scope !296, !noalias !293
  %136 = getelementptr i32, i32* %129, i64 4
  %137 = bitcast i32* %136 to <4 x i32>*
  store <4 x i32> %134, <4 x i32>* %137, align 4, !alias.scope !296, !noalias !293
  %138 = or i64 %126, 8
  %139 = getelementptr i32, i32* %366, i64 %138
  %140 = getelementptr i32, i32* %368, i64 %138
  %141 = bitcast i32* %139 to <4 x i32>*
  %142 = load <4 x i32>, <4 x i32>* %141, align 4, !alias.scope !293
  %143 = getelementptr i32, i32* %139, i64 4
  %144 = bitcast i32* %143 to <4 x i32>*
  %145 = load <4 x i32>, <4 x i32>* %144, align 4, !alias.scope !293
  %146 = bitcast i32* %140 to <4 x i32>*
  store <4 x i32> %142, <4 x i32>* %146, align 4, !alias.scope !296, !noalias !293
  %147 = getelementptr i32, i32* %140, i64 4
  %148 = bitcast i32* %147 to <4 x i32>*
  store <4 x i32> %145, <4 x i32>* %148, align 4, !alias.scope !296, !noalias !293
  %149 = or i64 %126, 16
  %150 = getelementptr i32, i32* %366, i64 %149
  %151 = getelementptr i32, i32* %368, i64 %149
  %152 = bitcast i32* %150 to <4 x i32>*
  %153 = load <4 x i32>, <4 x i32>* %152, align 4, !alias.scope !293
  %154 = getelementptr i32, i32* %150, i64 4
  %155 = bitcast i32* %154 to <4 x i32>*
  %156 = load <4 x i32>, <4 x i32>* %155, align 4, !alias.scope !293
  %157 = bitcast i32* %151 to <4 x i32>*
  store <4 x i32> %153, <4 x i32>* %157, align 4, !alias.scope !296, !noalias !293
  %158 = getelementptr i32, i32* %151, i64 4
  %159 = bitcast i32* %158 to <4 x i32>*
  store <4 x i32> %156, <4 x i32>* %159, align 4, !alias.scope !296, !noalias !293
  %160 = or i64 %126, 24
  %161 = getelementptr i32, i32* %366, i64 %160
  %162 = getelementptr i32, i32* %368, i64 %160
  %163 = bitcast i32* %161 to <4 x i32>*
  %164 = load <4 x i32>, <4 x i32>* %163, align 4, !alias.scope !293
  %165 = getelementptr i32, i32* %161, i64 4
  %166 = bitcast i32* %165 to <4 x i32>*
  %167 = load <4 x i32>, <4 x i32>* %166, align 4, !alias.scope !293
  %168 = bitcast i32* %162 to <4 x i32>*
  store <4 x i32> %164, <4 x i32>* %168, align 4, !alias.scope !296, !noalias !293
  %169 = getelementptr i32, i32* %162, i64 4
  %170 = bitcast i32* %169 to <4 x i32>*
  store <4 x i32> %167, <4 x i32>* %170, align 4, !alias.scope !296, !noalias !293
  %171 = add i64 %126, 32
  %172 = add i64 %127, -4
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %174, label %125, !llvm.loop !298

174:                                              ; preds = %125, %114
  %175 = phi i64 [ 0, %114 ], [ %171, %125 ]
  %176 = icmp eq i64 %121, 0
  br i1 %176, label %193, label %177

177:                                              ; preds = %174, %177
  %178 = phi i64 [ %190, %177 ], [ %175, %174 ]
  %179 = phi i64 [ %191, %177 ], [ %121, %174 ]
  %180 = getelementptr i32, i32* %366, i64 %178
  %181 = getelementptr i32, i32* %368, i64 %178
  %182 = bitcast i32* %180 to <4 x i32>*
  %183 = load <4 x i32>, <4 x i32>* %182, align 4, !alias.scope !293
  %184 = getelementptr i32, i32* %180, i64 4
  %185 = bitcast i32* %184 to <4 x i32>*
  %186 = load <4 x i32>, <4 x i32>* %185, align 4, !alias.scope !293
  %187 = bitcast i32* %181 to <4 x i32>*
  store <4 x i32> %183, <4 x i32>* %187, align 4, !alias.scope !296, !noalias !293
  %188 = getelementptr i32, i32* %181, i64 4
  %189 = bitcast i32* %188 to <4 x i32>*
  store <4 x i32> %186, <4 x i32>* %189, align 4, !alias.scope !296, !noalias !293
  %190 = add i64 %178, 8
  %191 = add i64 %179, -1
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %193, label %177, !llvm.loop !299

193:                                              ; preds = %177, %174
  %194 = icmp eq i64 %75, %115
  br i1 %194, label %400, label %77

195:                                              ; preds = %62, %365
  %196 = phi i32* [ %367, %365 ], [ %4, %62 ]
  %197 = phi i32* [ %366, %365 ], [ %64, %62 ]
  %198 = phi i32* [ %368, %365 ], [ %0, %62 ]
  %199 = icmp eq i32* %197, %65
  br i1 %199, label %200, label %357

200:                                              ; preds = %195
  %201 = ptrtoint i32* %196 to i64
  %202 = icmp eq i32* %196, %64
  br i1 %202, label %400, label %203

203:                                              ; preds = %200
  %204 = add nsw i64 %59, -1
  %205 = getelementptr i32, i32* %4, i64 %204
  %206 = ptrtoint i32* %205 to i64
  %207 = sub i64 %206, %201
  %208 = lshr i64 %207, 2
  %209 = add nuw nsw i64 %208, 1
  %210 = icmp ult i64 %209, 8
  br i1 %210, label %304, label %211

211:                                              ; preds = %203
  %212 = add nsw i64 %59, -1
  %213 = getelementptr i32, i32* %4, i64 %212
  %214 = ptrtoint i32* %213 to i64
  %215 = sub i64 %214, %201
  %216 = lshr i64 %215, 2
  %217 = add nuw nsw i64 %216, 1
  %218 = getelementptr i32, i32* %198, i64 %217
  %219 = getelementptr i32, i32* %196, i64 %217
  %220 = icmp ult i32* %198, %219
  %221 = icmp ult i32* %196, %218
  %222 = and i1 %220, %221
  br i1 %222, label %304, label %223

223:                                              ; preds = %211
  %224 = and i64 %209, 9223372036854775800
  %225 = getelementptr i32, i32* %196, i64 %224
  %226 = getelementptr i32, i32* %198, i64 %224
  %227 = add nsw i64 %224, -8
  %228 = lshr exact i64 %227, 3
  %229 = add nuw nsw i64 %228, 1
  %230 = and i64 %229, 3
  %231 = icmp ult i64 %227, 24
  br i1 %231, label %283, label %232

232:                                              ; preds = %223
  %233 = sub nsw i64 %229, %230
  br label %234

234:                                              ; preds = %234, %232
  %235 = phi i64 [ 0, %232 ], [ %280, %234 ]
  %236 = phi i64 [ %233, %232 ], [ %281, %234 ]
  %237 = getelementptr i32, i32* %196, i64 %235
  %238 = getelementptr i32, i32* %198, i64 %235
  %239 = bitcast i32* %237 to <4 x i32>*
  %240 = load <4 x i32>, <4 x i32>* %239, align 4, !alias.scope !300
  %241 = getelementptr i32, i32* %237, i64 4
  %242 = bitcast i32* %241 to <4 x i32>*
  %243 = load <4 x i32>, <4 x i32>* %242, align 4, !alias.scope !300
  %244 = bitcast i32* %238 to <4 x i32>*
  store <4 x i32> %240, <4 x i32>* %244, align 4, !alias.scope !303, !noalias !300
  %245 = getelementptr i32, i32* %238, i64 4
  %246 = bitcast i32* %245 to <4 x i32>*
  store <4 x i32> %243, <4 x i32>* %246, align 4, !alias.scope !303, !noalias !300
  %247 = or i64 %235, 8
  %248 = getelementptr i32, i32* %196, i64 %247
  %249 = getelementptr i32, i32* %198, i64 %247
  %250 = bitcast i32* %248 to <4 x i32>*
  %251 = load <4 x i32>, <4 x i32>* %250, align 4, !alias.scope !300
  %252 = getelementptr i32, i32* %248, i64 4
  %253 = bitcast i32* %252 to <4 x i32>*
  %254 = load <4 x i32>, <4 x i32>* %253, align 4, !alias.scope !300
  %255 = bitcast i32* %249 to <4 x i32>*
  store <4 x i32> %251, <4 x i32>* %255, align 4, !alias.scope !303, !noalias !300
  %256 = getelementptr i32, i32* %249, i64 4
  %257 = bitcast i32* %256 to <4 x i32>*
  store <4 x i32> %254, <4 x i32>* %257, align 4, !alias.scope !303, !noalias !300
  %258 = or i64 %235, 16
  %259 = getelementptr i32, i32* %196, i64 %258
  %260 = getelementptr i32, i32* %198, i64 %258
  %261 = bitcast i32* %259 to <4 x i32>*
  %262 = load <4 x i32>, <4 x i32>* %261, align 4, !alias.scope !300
  %263 = getelementptr i32, i32* %259, i64 4
  %264 = bitcast i32* %263 to <4 x i32>*
  %265 = load <4 x i32>, <4 x i32>* %264, align 4, !alias.scope !300
  %266 = bitcast i32* %260 to <4 x i32>*
  store <4 x i32> %262, <4 x i32>* %266, align 4, !alias.scope !303, !noalias !300
  %267 = getelementptr i32, i32* %260, i64 4
  %268 = bitcast i32* %267 to <4 x i32>*
  store <4 x i32> %265, <4 x i32>* %268, align 4, !alias.scope !303, !noalias !300
  %269 = or i64 %235, 24
  %270 = getelementptr i32, i32* %196, i64 %269
  %271 = getelementptr i32, i32* %198, i64 %269
  %272 = bitcast i32* %270 to <4 x i32>*
  %273 = load <4 x i32>, <4 x i32>* %272, align 4, !alias.scope !300
  %274 = getelementptr i32, i32* %270, i64 4
  %275 = bitcast i32* %274 to <4 x i32>*
  %276 = load <4 x i32>, <4 x i32>* %275, align 4, !alias.scope !300
  %277 = bitcast i32* %271 to <4 x i32>*
  store <4 x i32> %273, <4 x i32>* %277, align 4, !alias.scope !303, !noalias !300
  %278 = getelementptr i32, i32* %271, i64 4
  %279 = bitcast i32* %278 to <4 x i32>*
  store <4 x i32> %276, <4 x i32>* %279, align 4, !alias.scope !303, !noalias !300
  %280 = add i64 %235, 32
  %281 = add i64 %236, -4
  %282 = icmp eq i64 %281, 0
  br i1 %282, label %283, label %234, !llvm.loop !305

283:                                              ; preds = %234, %223
  %284 = phi i64 [ 0, %223 ], [ %280, %234 ]
  %285 = icmp eq i64 %230, 0
  br i1 %285, label %302, label %286

286:                                              ; preds = %283, %286
  %287 = phi i64 [ %299, %286 ], [ %284, %283 ]
  %288 = phi i64 [ %300, %286 ], [ %230, %283 ]
  %289 = getelementptr i32, i32* %196, i64 %287
  %290 = getelementptr i32, i32* %198, i64 %287
  %291 = bitcast i32* %289 to <4 x i32>*
  %292 = load <4 x i32>, <4 x i32>* %291, align 4, !alias.scope !300
  %293 = getelementptr i32, i32* %289, i64 4
  %294 = bitcast i32* %293 to <4 x i32>*
  %295 = load <4 x i32>, <4 x i32>* %294, align 4, !alias.scope !300
  %296 = bitcast i32* %290 to <4 x i32>*
  store <4 x i32> %292, <4 x i32>* %296, align 4, !alias.scope !303, !noalias !300
  %297 = getelementptr i32, i32* %290, i64 4
  %298 = bitcast i32* %297 to <4 x i32>*
  store <4 x i32> %295, <4 x i32>* %298, align 4, !alias.scope !303, !noalias !300
  %299 = add i64 %287, 8
  %300 = add i64 %288, -1
  %301 = icmp eq i64 %300, 0
  br i1 %301, label %302, label %286, !llvm.loop !306

302:                                              ; preds = %286, %283
  %303 = icmp eq i64 %209, %224
  br i1 %303, label %400, label %304

304:                                              ; preds = %302, %211, %203
  %305 = phi i32* [ %196, %211 ], [ %196, %203 ], [ %225, %302 ]
  %306 = phi i32* [ %198, %211 ], [ %198, %203 ], [ %226, %302 ]
  %307 = ptrtoint i32* %305 to i64
  %308 = add nsw i64 %59, -1
  %309 = getelementptr i32, i32* %4, i64 %308
  %310 = ptrtoint i32* %309 to i64
  %311 = sub i64 %310, %307
  %312 = lshr i64 %311, 2
  %313 = add nuw nsw i64 %312, 1
  %314 = and i64 %313, 7
  %315 = icmp eq i64 %314, 0
  br i1 %315, label %325, label %316

316:                                              ; preds = %304, %316
  %317 = phi i32* [ %321, %316 ], [ %305, %304 ]
  %318 = phi i32* [ %322, %316 ], [ %306, %304 ]
  %319 = phi i64 [ %323, %316 ], [ %314, %304 ]
  %320 = load i32, i32* %317, align 4
  store i32 %320, i32* %318, align 4
  %321 = getelementptr inbounds i32, i32* %317, i64 1
  %322 = getelementptr inbounds i32, i32* %318, i64 1
  %323 = add i64 %319, -1
  %324 = icmp eq i64 %323, 0
  br i1 %324, label %325, label %316, !llvm.loop !307

325:                                              ; preds = %316, %304
  %326 = phi i32* [ %305, %304 ], [ %321, %316 ]
  %327 = phi i32* [ %306, %304 ], [ %322, %316 ]
  %328 = icmp ult i64 %311, 28
  br i1 %328, label %400, label %329

329:                                              ; preds = %325, %329
  %330 = phi i32* [ %354, %329 ], [ %326, %325 ]
  %331 = phi i32* [ %355, %329 ], [ %327, %325 ]
  %332 = load i32, i32* %330, align 4
  store i32 %332, i32* %331, align 4
  %333 = getelementptr inbounds i32, i32* %330, i64 1
  %334 = getelementptr inbounds i32, i32* %331, i64 1
  %335 = load i32, i32* %333, align 4
  store i32 %335, i32* %334, align 4
  %336 = getelementptr inbounds i32, i32* %330, i64 2
  %337 = getelementptr inbounds i32, i32* %331, i64 2
  %338 = load i32, i32* %336, align 4
  store i32 %338, i32* %337, align 4
  %339 = getelementptr inbounds i32, i32* %330, i64 3
  %340 = getelementptr inbounds i32, i32* %331, i64 3
  %341 = load i32, i32* %339, align 4
  store i32 %341, i32* %340, align 4
  %342 = getelementptr inbounds i32, i32* %330, i64 4
  %343 = getelementptr inbounds i32, i32* %331, i64 4
  %344 = load i32, i32* %342, align 4
  store i32 %344, i32* %343, align 4
  %345 = getelementptr inbounds i32, i32* %330, i64 5
  %346 = getelementptr inbounds i32, i32* %331, i64 5
  %347 = load i32, i32* %345, align 4
  store i32 %347, i32* %346, align 4
  %348 = getelementptr inbounds i32, i32* %330, i64 6
  %349 = getelementptr inbounds i32, i32* %331, i64 6
  %350 = load i32, i32* %348, align 4
  store i32 %350, i32* %349, align 4
  %351 = getelementptr inbounds i32, i32* %330, i64 7
  %352 = getelementptr inbounds i32, i32* %331, i64 7
  %353 = load i32, i32* %351, align 4
  store i32 %353, i32* %352, align 4
  %354 = getelementptr inbounds i32, i32* %330, i64 8
  %355 = getelementptr inbounds i32, i32* %331, i64 8
  %356 = icmp eq i32* %354, %64
  br i1 %356, label %400, label %329, !llvm.loop !308

357:                                              ; preds = %195
  %358 = load i32, i32* %197, align 4
  %359 = load i32, i32* %196, align 4
  %360 = icmp slt i32 %358, %359
  br i1 %360, label %361, label %363

361:                                              ; preds = %357
  store i32 %358, i32* %198, align 4
  %362 = getelementptr inbounds i32, i32* %197, i64 1
  br label %365

363:                                              ; preds = %357
  store i32 %359, i32* %198, align 4
  %364 = getelementptr inbounds i32, i32* %196, i64 1
  br label %365

365:                                              ; preds = %363, %361
  %366 = phi i32* [ %362, %361 ], [ %197, %363 ]
  %367 = phi i32* [ %196, %361 ], [ %364, %363 ]
  %368 = getelementptr inbounds i32, i32* %198, i64 1
  %369 = icmp eq i32* %367, %64
  br i1 %369, label %66, label %195

370:                                              ; preds = %98, %370
  %371 = phi i32* [ %395, %370 ], [ %99, %98 ]
  %372 = phi i32* [ %396, %370 ], [ %100, %98 ]
  %373 = load i32, i32* %371, align 4
  store i32 %373, i32* %372, align 4
  %374 = getelementptr inbounds i32, i32* %371, i64 1
  %375 = getelementptr inbounds i32, i32* %372, i64 1
  %376 = load i32, i32* %374, align 4
  store i32 %376, i32* %375, align 4
  %377 = getelementptr inbounds i32, i32* %371, i64 2
  %378 = getelementptr inbounds i32, i32* %372, i64 2
  %379 = load i32, i32* %377, align 4
  store i32 %379, i32* %378, align 4
  %380 = getelementptr inbounds i32, i32* %371, i64 3
  %381 = getelementptr inbounds i32, i32* %372, i64 3
  %382 = load i32, i32* %380, align 4
  store i32 %382, i32* %381, align 4
  %383 = getelementptr inbounds i32, i32* %371, i64 4
  %384 = getelementptr inbounds i32, i32* %372, i64 4
  %385 = load i32, i32* %383, align 4
  store i32 %385, i32* %384, align 4
  %386 = getelementptr inbounds i32, i32* %371, i64 5
  %387 = getelementptr inbounds i32, i32* %372, i64 5
  %388 = load i32, i32* %386, align 4
  store i32 %388, i32* %387, align 4
  %389 = getelementptr inbounds i32, i32* %371, i64 6
  %390 = getelementptr inbounds i32, i32* %372, i64 6
  %391 = load i32, i32* %389, align 4
  store i32 %391, i32* %390, align 4
  %392 = getelementptr inbounds i32, i32* %371, i64 7
  %393 = getelementptr inbounds i32, i32* %372, i64 7
  %394 = load i32, i32* %392, align 4
  store i32 %394, i32* %393, align 4
  %395 = getelementptr inbounds i32, i32* %371, i64 8
  %396 = getelementptr inbounds i32, i32* %372, i64 8
  %397 = icmp eq i32* %395, %65
  br i1 %397, label %400, label %370, !llvm.loop !309

398:                                              ; preds = %58
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i32* %0, i32* %60, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1) %2, i64 %59, i32* %4, i64 %5)
  %399 = sub nsw i64 %3, %59
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i32* %60, i32* %1, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1) %2, i64 %399, i32* %4, i64 %5)
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl(i32* %0, i32* %60, i32* %1, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1) %2, i64 %59, i64 %399, i32* %4, i64 %5)
  ret void

400:                                              ; preds = %98, %370, %325, %329, %39, %408, %193, %302, %200, %66, %18, %16, %8, %13, %6, %6
  ret void

401:                                              ; preds = %51, %406
  %402 = phi i32* [ %403, %406 ], [ %53, %51 ]
  %403 = getelementptr inbounds i32, i32* %402, i64 -1
  %404 = load i32, i32* %403, align 4
  %405 = icmp slt i32 %54, %404
  br i1 %405, label %406, label %408

406:                                              ; preds = %401
  store i32 %404, i32* %402, align 4
  %407 = icmp eq i32* %403, %0
  br i1 %407, label %408, label %401

408:                                              ; preds = %401, %406, %51
  %409 = phi i32* [ %0, %51 ], [ %402, %401 ], [ %0, %406 ]
  store i32 %54, i32* %409, align 4
  %410 = getelementptr inbounds i32, i32* %43, i64 2
  %411 = icmp eq i32* %410, %1
  br i1 %411, label %400, label %42
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeE(i32*, i32*, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1), i64, i32*) local_unnamed_addr #0 comdat {
  switch i64 %3, label %19 [
    i64 0, label %390
    i64 1, label %6
    i64 2, label %8
  ]

6:                                                ; preds = %5
  %7 = load i32, i32* %0, align 4
  store i32 %7, i32* %4, align 4
  br label %390

8:                                                ; preds = %5
  %9 = getelementptr inbounds i32, i32* %1, i64 -1
  %10 = load i32, i32* %9, align 4
  %11 = load i32, i32* %0, align 4
  %12 = icmp slt i32 %10, %11
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  store i32 %10, i32* %4, align 4
  %14 = getelementptr inbounds i32, i32* %4, i64 1
  %15 = load i32, i32* %0, align 4
  store i32 %15, i32* %14, align 4
  br label %390

16:                                               ; preds = %8
  store i32 %11, i32* %4, align 4
  %17 = getelementptr inbounds i32, i32* %4, i64 1
  %18 = load i32, i32* %9, align 4
  store i32 %18, i32* %17, align 4
  br label %390

19:                                               ; preds = %5
  %20 = icmp slt i64 %3, 9
  br i1 %20, label %21, label %53

21:                                               ; preds = %19
  %22 = icmp eq i32* %0, %1
  br i1 %22, label %390, label %23

23:                                               ; preds = %21
  %24 = load i32, i32* %0, align 4
  store i32 %24, i32* %4, align 4
  %25 = getelementptr inbounds i32, i32* %0, i64 1
  %26 = icmp eq i32* %25, %1
  br i1 %26, label %390, label %27

27:                                               ; preds = %23, %51
  %28 = phi i32 [ %52, %51 ], [ %24, %23 ]
  %29 = phi i32* [ %49, %51 ], [ %25, %23 ]
  %30 = phi i32* [ %31, %51 ], [ %4, %23 ]
  %31 = getelementptr inbounds i32, i32* %30, i64 1
  %32 = load i32, i32* %29, align 4
  %33 = icmp slt i32 %32, %28
  br i1 %33, label %34, label %47

34:                                               ; preds = %27
  store i32 %28, i32* %31, align 4
  %35 = icmp eq i32* %30, %4
  br i1 %35, label %44, label %36

36:                                               ; preds = %34, %42
  %37 = phi i32* [ %38, %42 ], [ %30, %34 ]
  %38 = getelementptr inbounds i32, i32* %37, i64 -1
  %39 = load i32, i32* %29, align 4
  %40 = load i32, i32* %38, align 4
  %41 = icmp slt i32 %39, %40
  br i1 %41, label %42, label %44

42:                                               ; preds = %36
  store i32 %40, i32* %37, align 4
  %43 = icmp eq i32* %38, %4
  br i1 %43, label %44, label %36

44:                                               ; preds = %42, %36, %34
  %45 = phi i32* [ %4, %34 ], [ %37, %36 ], [ %4, %42 ]
  %46 = load i32, i32* %29, align 4
  store i32 %46, i32* %45, align 4
  br label %48

47:                                               ; preds = %27
  store i32 %32, i32* %31, align 4
  br label %48

48:                                               ; preds = %47, %44
  %49 = getelementptr inbounds i32, i32* %29, i64 1
  %50 = icmp eq i32* %49, %1
  br i1 %50, label %390, label %51

51:                                               ; preds = %48
  %52 = load i32, i32* %31, align 4
  br label %27

53:                                               ; preds = %19
  %54 = lshr i64 %3, 1
  %55 = getelementptr inbounds i32, i32* %0, i64 %54
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i32* %0, i32* %55, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1) %2, i64 %54, i32* %4, i64 %54)
  %56 = sub nsw i64 %3, %54
  %57 = getelementptr inbounds i32, i32* %4, i64 %54
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i32* %55, i32* %1, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1) %2, i64 %56, i32* %57, i64 %56)
  %58 = icmp eq i64 %54, 0
  br i1 %58, label %59, label %215

59:                                               ; preds = %385, %53
  %60 = phi i32* [ %55, %53 ], [ %386, %385 ]
  %61 = phi i32* [ %4, %53 ], [ %388, %385 ]
  %62 = ptrtoint i32* %60 to i64
  %63 = icmp eq i32* %60, %1
  br i1 %63, label %390, label %64

64:                                               ; preds = %59
  %65 = getelementptr i32, i32* %1, i64 -1
  %66 = ptrtoint i32* %65 to i64
  %67 = sub i64 %66, %62
  %68 = lshr i64 %67, 2
  %69 = add nuw nsw i64 %68, 1
  %70 = icmp ult i64 %69, 8
  br i1 %70, label %163, label %71

71:                                               ; preds = %64
  %72 = getelementptr i32, i32* %1, i64 -1
  %73 = ptrtoint i32* %72 to i64
  %74 = sub i64 %73, %62
  %75 = lshr i64 %74, 2
  %76 = add nuw nsw i64 %75, 1
  %77 = getelementptr i32, i32* %61, i64 %76
  %78 = getelementptr i32, i32* %60, i64 %76
  %79 = icmp ult i32* %61, %78
  %80 = icmp ult i32* %60, %77
  %81 = and i1 %79, %80
  br i1 %81, label %163, label %82

82:                                               ; preds = %71
  %83 = and i64 %69, 9223372036854775800
  %84 = getelementptr i32, i32* %61, i64 %83
  %85 = getelementptr i32, i32* %60, i64 %83
  %86 = add nsw i64 %83, -8
  %87 = lshr exact i64 %86, 3
  %88 = add nuw nsw i64 %87, 1
  %89 = and i64 %88, 3
  %90 = icmp ult i64 %86, 24
  br i1 %90, label %142, label %91

91:                                               ; preds = %82
  %92 = sub nsw i64 %88, %89
  br label %93

93:                                               ; preds = %93, %91
  %94 = phi i64 [ 0, %91 ], [ %139, %93 ]
  %95 = phi i64 [ %92, %91 ], [ %140, %93 ]
  %96 = getelementptr i32, i32* %61, i64 %94
  %97 = getelementptr i32, i32* %60, i64 %94
  %98 = bitcast i32* %97 to <4 x i32>*
  %99 = load <4 x i32>, <4 x i32>* %98, align 4, !alias.scope !310
  %100 = getelementptr i32, i32* %97, i64 4
  %101 = bitcast i32* %100 to <4 x i32>*
  %102 = load <4 x i32>, <4 x i32>* %101, align 4, !alias.scope !310
  %103 = bitcast i32* %96 to <4 x i32>*
  store <4 x i32> %99, <4 x i32>* %103, align 4, !alias.scope !313, !noalias !310
  %104 = getelementptr i32, i32* %96, i64 4
  %105 = bitcast i32* %104 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %105, align 4, !alias.scope !313, !noalias !310
  %106 = or i64 %94, 8
  %107 = getelementptr i32, i32* %61, i64 %106
  %108 = getelementptr i32, i32* %60, i64 %106
  %109 = bitcast i32* %108 to <4 x i32>*
  %110 = load <4 x i32>, <4 x i32>* %109, align 4, !alias.scope !310
  %111 = getelementptr i32, i32* %108, i64 4
  %112 = bitcast i32* %111 to <4 x i32>*
  %113 = load <4 x i32>, <4 x i32>* %112, align 4, !alias.scope !310
  %114 = bitcast i32* %107 to <4 x i32>*
  store <4 x i32> %110, <4 x i32>* %114, align 4, !alias.scope !313, !noalias !310
  %115 = getelementptr i32, i32* %107, i64 4
  %116 = bitcast i32* %115 to <4 x i32>*
  store <4 x i32> %113, <4 x i32>* %116, align 4, !alias.scope !313, !noalias !310
  %117 = or i64 %94, 16
  %118 = getelementptr i32, i32* %61, i64 %117
  %119 = getelementptr i32, i32* %60, i64 %117
  %120 = bitcast i32* %119 to <4 x i32>*
  %121 = load <4 x i32>, <4 x i32>* %120, align 4, !alias.scope !310
  %122 = getelementptr i32, i32* %119, i64 4
  %123 = bitcast i32* %122 to <4 x i32>*
  %124 = load <4 x i32>, <4 x i32>* %123, align 4, !alias.scope !310
  %125 = bitcast i32* %118 to <4 x i32>*
  store <4 x i32> %121, <4 x i32>* %125, align 4, !alias.scope !313, !noalias !310
  %126 = getelementptr i32, i32* %118, i64 4
  %127 = bitcast i32* %126 to <4 x i32>*
  store <4 x i32> %124, <4 x i32>* %127, align 4, !alias.scope !313, !noalias !310
  %128 = or i64 %94, 24
  %129 = getelementptr i32, i32* %61, i64 %128
  %130 = getelementptr i32, i32* %60, i64 %128
  %131 = bitcast i32* %130 to <4 x i32>*
  %132 = load <4 x i32>, <4 x i32>* %131, align 4, !alias.scope !310
  %133 = getelementptr i32, i32* %130, i64 4
  %134 = bitcast i32* %133 to <4 x i32>*
  %135 = load <4 x i32>, <4 x i32>* %134, align 4, !alias.scope !310
  %136 = bitcast i32* %129 to <4 x i32>*
  store <4 x i32> %132, <4 x i32>* %136, align 4, !alias.scope !313, !noalias !310
  %137 = getelementptr i32, i32* %129, i64 4
  %138 = bitcast i32* %137 to <4 x i32>*
  store <4 x i32> %135, <4 x i32>* %138, align 4, !alias.scope !313, !noalias !310
  %139 = add i64 %94, 32
  %140 = add i64 %95, -4
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %142, label %93, !llvm.loop !315

142:                                              ; preds = %93, %82
  %143 = phi i64 [ 0, %82 ], [ %139, %93 ]
  %144 = icmp eq i64 %89, 0
  br i1 %144, label %161, label %145

145:                                              ; preds = %142, %145
  %146 = phi i64 [ %158, %145 ], [ %143, %142 ]
  %147 = phi i64 [ %159, %145 ], [ %89, %142 ]
  %148 = getelementptr i32, i32* %61, i64 %146
  %149 = getelementptr i32, i32* %60, i64 %146
  %150 = bitcast i32* %149 to <4 x i32>*
  %151 = load <4 x i32>, <4 x i32>* %150, align 4, !alias.scope !310
  %152 = getelementptr i32, i32* %149, i64 4
  %153 = bitcast i32* %152 to <4 x i32>*
  %154 = load <4 x i32>, <4 x i32>* %153, align 4, !alias.scope !310
  %155 = bitcast i32* %148 to <4 x i32>*
  store <4 x i32> %151, <4 x i32>* %155, align 4, !alias.scope !313, !noalias !310
  %156 = getelementptr i32, i32* %148, i64 4
  %157 = bitcast i32* %156 to <4 x i32>*
  store <4 x i32> %154, <4 x i32>* %157, align 4, !alias.scope !313, !noalias !310
  %158 = add i64 %146, 8
  %159 = add i64 %147, -1
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %161, label %145, !llvm.loop !316

161:                                              ; preds = %145, %142
  %162 = icmp eq i64 %69, %83
  br i1 %162, label %390, label %163

163:                                              ; preds = %161, %71, %64
  %164 = phi i32* [ %61, %71 ], [ %61, %64 ], [ %84, %161 ]
  %165 = phi i32* [ %60, %71 ], [ %60, %64 ], [ %85, %161 ]
  %166 = ptrtoint i32* %165 to i64
  %167 = getelementptr i32, i32* %1, i64 -1
  %168 = ptrtoint i32* %167 to i64
  %169 = sub i64 %168, %166
  %170 = lshr i64 %169, 2
  %171 = add nuw nsw i64 %170, 1
  %172 = and i64 %171, 7
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %183, label %174

174:                                              ; preds = %163, %174
  %175 = phi i32* [ %180, %174 ], [ %164, %163 ]
  %176 = phi i32* [ %179, %174 ], [ %165, %163 ]
  %177 = phi i64 [ %181, %174 ], [ %172, %163 ]
  %178 = load i32, i32* %176, align 4
  store i32 %178, i32* %175, align 4
  %179 = getelementptr inbounds i32, i32* %176, i64 1
  %180 = getelementptr inbounds i32, i32* %175, i64 1
  %181 = add i64 %177, -1
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %183, label %174, !llvm.loop !317

183:                                              ; preds = %174, %163
  %184 = phi i32* [ %164, %163 ], [ %180, %174 ]
  %185 = phi i32* [ %165, %163 ], [ %179, %174 ]
  %186 = icmp ult i64 %169, 28
  br i1 %186, label %390, label %187

187:                                              ; preds = %183, %187
  %188 = phi i32* [ %213, %187 ], [ %184, %183 ]
  %189 = phi i32* [ %212, %187 ], [ %185, %183 ]
  %190 = load i32, i32* %189, align 4
  store i32 %190, i32* %188, align 4
  %191 = getelementptr inbounds i32, i32* %189, i64 1
  %192 = getelementptr inbounds i32, i32* %188, i64 1
  %193 = load i32, i32* %191, align 4
  store i32 %193, i32* %192, align 4
  %194 = getelementptr inbounds i32, i32* %189, i64 2
  %195 = getelementptr inbounds i32, i32* %188, i64 2
  %196 = load i32, i32* %194, align 4
  store i32 %196, i32* %195, align 4
  %197 = getelementptr inbounds i32, i32* %189, i64 3
  %198 = getelementptr inbounds i32, i32* %188, i64 3
  %199 = load i32, i32* %197, align 4
  store i32 %199, i32* %198, align 4
  %200 = getelementptr inbounds i32, i32* %189, i64 4
  %201 = getelementptr inbounds i32, i32* %188, i64 4
  %202 = load i32, i32* %200, align 4
  store i32 %202, i32* %201, align 4
  %203 = getelementptr inbounds i32, i32* %189, i64 5
  %204 = getelementptr inbounds i32, i32* %188, i64 5
  %205 = load i32, i32* %203, align 4
  store i32 %205, i32* %204, align 4
  %206 = getelementptr inbounds i32, i32* %189, i64 6
  %207 = getelementptr inbounds i32, i32* %188, i64 6
  %208 = load i32, i32* %206, align 4
  store i32 %208, i32* %207, align 4
  %209 = getelementptr inbounds i32, i32* %189, i64 7
  %210 = getelementptr inbounds i32, i32* %188, i64 7
  %211 = load i32, i32* %209, align 4
  store i32 %211, i32* %210, align 4
  %212 = getelementptr inbounds i32, i32* %189, i64 8
  %213 = getelementptr inbounds i32, i32* %188, i64 8
  %214 = icmp eq i32* %212, %1
  br i1 %214, label %390, label %187, !llvm.loop !318

215:                                              ; preds = %53, %385
  %216 = phi i32* [ %388, %385 ], [ %4, %53 ]
  %217 = phi i32* [ %387, %385 ], [ %0, %53 ]
  %218 = phi i32* [ %386, %385 ], [ %55, %53 ]
  %219 = icmp eq i32* %218, %1
  br i1 %219, label %220, label %377

220:                                              ; preds = %215
  %221 = ptrtoint i32* %217 to i64
  %222 = icmp eq i32* %217, %55
  br i1 %222, label %390, label %223

223:                                              ; preds = %220
  %224 = add nsw i64 %54, -1
  %225 = getelementptr i32, i32* %0, i64 %224
  %226 = ptrtoint i32* %225 to i64
  %227 = sub i64 %226, %221
  %228 = lshr i64 %227, 2
  %229 = add nuw nsw i64 %228, 1
  %230 = icmp ult i64 %229, 8
  br i1 %230, label %324, label %231

231:                                              ; preds = %223
  %232 = add nsw i64 %54, -1
  %233 = getelementptr i32, i32* %0, i64 %232
  %234 = ptrtoint i32* %233 to i64
  %235 = sub i64 %234, %221
  %236 = lshr i64 %235, 2
  %237 = add nuw nsw i64 %236, 1
  %238 = getelementptr i32, i32* %216, i64 %237
  %239 = getelementptr i32, i32* %217, i64 %237
  %240 = icmp ult i32* %216, %239
  %241 = icmp ult i32* %217, %238
  %242 = and i1 %240, %241
  br i1 %242, label %324, label %243

243:                                              ; preds = %231
  %244 = and i64 %229, 9223372036854775800
  %245 = getelementptr i32, i32* %216, i64 %244
  %246 = getelementptr i32, i32* %217, i64 %244
  %247 = add nsw i64 %244, -8
  %248 = lshr exact i64 %247, 3
  %249 = add nuw nsw i64 %248, 1
  %250 = and i64 %249, 3
  %251 = icmp ult i64 %247, 24
  br i1 %251, label %303, label %252

252:                                              ; preds = %243
  %253 = sub nsw i64 %249, %250
  br label %254

254:                                              ; preds = %254, %252
  %255 = phi i64 [ 0, %252 ], [ %300, %254 ]
  %256 = phi i64 [ %253, %252 ], [ %301, %254 ]
  %257 = getelementptr i32, i32* %216, i64 %255
  %258 = getelementptr i32, i32* %217, i64 %255
  %259 = bitcast i32* %258 to <4 x i32>*
  %260 = load <4 x i32>, <4 x i32>* %259, align 4, !alias.scope !319
  %261 = getelementptr i32, i32* %258, i64 4
  %262 = bitcast i32* %261 to <4 x i32>*
  %263 = load <4 x i32>, <4 x i32>* %262, align 4, !alias.scope !319
  %264 = bitcast i32* %257 to <4 x i32>*
  store <4 x i32> %260, <4 x i32>* %264, align 4, !alias.scope !322, !noalias !319
  %265 = getelementptr i32, i32* %257, i64 4
  %266 = bitcast i32* %265 to <4 x i32>*
  store <4 x i32> %263, <4 x i32>* %266, align 4, !alias.scope !322, !noalias !319
  %267 = or i64 %255, 8
  %268 = getelementptr i32, i32* %216, i64 %267
  %269 = getelementptr i32, i32* %217, i64 %267
  %270 = bitcast i32* %269 to <4 x i32>*
  %271 = load <4 x i32>, <4 x i32>* %270, align 4, !alias.scope !319
  %272 = getelementptr i32, i32* %269, i64 4
  %273 = bitcast i32* %272 to <4 x i32>*
  %274 = load <4 x i32>, <4 x i32>* %273, align 4, !alias.scope !319
  %275 = bitcast i32* %268 to <4 x i32>*
  store <4 x i32> %271, <4 x i32>* %275, align 4, !alias.scope !322, !noalias !319
  %276 = getelementptr i32, i32* %268, i64 4
  %277 = bitcast i32* %276 to <4 x i32>*
  store <4 x i32> %274, <4 x i32>* %277, align 4, !alias.scope !322, !noalias !319
  %278 = or i64 %255, 16
  %279 = getelementptr i32, i32* %216, i64 %278
  %280 = getelementptr i32, i32* %217, i64 %278
  %281 = bitcast i32* %280 to <4 x i32>*
  %282 = load <4 x i32>, <4 x i32>* %281, align 4, !alias.scope !319
  %283 = getelementptr i32, i32* %280, i64 4
  %284 = bitcast i32* %283 to <4 x i32>*
  %285 = load <4 x i32>, <4 x i32>* %284, align 4, !alias.scope !319
  %286 = bitcast i32* %279 to <4 x i32>*
  store <4 x i32> %282, <4 x i32>* %286, align 4, !alias.scope !322, !noalias !319
  %287 = getelementptr i32, i32* %279, i64 4
  %288 = bitcast i32* %287 to <4 x i32>*
  store <4 x i32> %285, <4 x i32>* %288, align 4, !alias.scope !322, !noalias !319
  %289 = or i64 %255, 24
  %290 = getelementptr i32, i32* %216, i64 %289
  %291 = getelementptr i32, i32* %217, i64 %289
  %292 = bitcast i32* %291 to <4 x i32>*
  %293 = load <4 x i32>, <4 x i32>* %292, align 4, !alias.scope !319
  %294 = getelementptr i32, i32* %291, i64 4
  %295 = bitcast i32* %294 to <4 x i32>*
  %296 = load <4 x i32>, <4 x i32>* %295, align 4, !alias.scope !319
  %297 = bitcast i32* %290 to <4 x i32>*
  store <4 x i32> %293, <4 x i32>* %297, align 4, !alias.scope !322, !noalias !319
  %298 = getelementptr i32, i32* %290, i64 4
  %299 = bitcast i32* %298 to <4 x i32>*
  store <4 x i32> %296, <4 x i32>* %299, align 4, !alias.scope !322, !noalias !319
  %300 = add i64 %255, 32
  %301 = add i64 %256, -4
  %302 = icmp eq i64 %301, 0
  br i1 %302, label %303, label %254, !llvm.loop !324

303:                                              ; preds = %254, %243
  %304 = phi i64 [ 0, %243 ], [ %300, %254 ]
  %305 = icmp eq i64 %250, 0
  br i1 %305, label %322, label %306

306:                                              ; preds = %303, %306
  %307 = phi i64 [ %319, %306 ], [ %304, %303 ]
  %308 = phi i64 [ %320, %306 ], [ %250, %303 ]
  %309 = getelementptr i32, i32* %216, i64 %307
  %310 = getelementptr i32, i32* %217, i64 %307
  %311 = bitcast i32* %310 to <4 x i32>*
  %312 = load <4 x i32>, <4 x i32>* %311, align 4, !alias.scope !319
  %313 = getelementptr i32, i32* %310, i64 4
  %314 = bitcast i32* %313 to <4 x i32>*
  %315 = load <4 x i32>, <4 x i32>* %314, align 4, !alias.scope !319
  %316 = bitcast i32* %309 to <4 x i32>*
  store <4 x i32> %312, <4 x i32>* %316, align 4, !alias.scope !322, !noalias !319
  %317 = getelementptr i32, i32* %309, i64 4
  %318 = bitcast i32* %317 to <4 x i32>*
  store <4 x i32> %315, <4 x i32>* %318, align 4, !alias.scope !322, !noalias !319
  %319 = add i64 %307, 8
  %320 = add i64 %308, -1
  %321 = icmp eq i64 %320, 0
  br i1 %321, label %322, label %306, !llvm.loop !325

322:                                              ; preds = %306, %303
  %323 = icmp eq i64 %229, %244
  br i1 %323, label %390, label %324

324:                                              ; preds = %322, %231, %223
  %325 = phi i32* [ %216, %231 ], [ %216, %223 ], [ %245, %322 ]
  %326 = phi i32* [ %217, %231 ], [ %217, %223 ], [ %246, %322 ]
  %327 = ptrtoint i32* %326 to i64
  %328 = add nsw i64 %54, -1
  %329 = getelementptr i32, i32* %0, i64 %328
  %330 = ptrtoint i32* %329 to i64
  %331 = sub i64 %330, %327
  %332 = lshr i64 %331, 2
  %333 = add nuw nsw i64 %332, 1
  %334 = and i64 %333, 7
  %335 = icmp eq i64 %334, 0
  br i1 %335, label %345, label %336

336:                                              ; preds = %324, %336
  %337 = phi i32* [ %342, %336 ], [ %325, %324 ]
  %338 = phi i32* [ %341, %336 ], [ %326, %324 ]
  %339 = phi i64 [ %343, %336 ], [ %334, %324 ]
  %340 = load i32, i32* %338, align 4
  store i32 %340, i32* %337, align 4
  %341 = getelementptr inbounds i32, i32* %338, i64 1
  %342 = getelementptr inbounds i32, i32* %337, i64 1
  %343 = add i64 %339, -1
  %344 = icmp eq i64 %343, 0
  br i1 %344, label %345, label %336, !llvm.loop !326

345:                                              ; preds = %336, %324
  %346 = phi i32* [ %325, %324 ], [ %342, %336 ]
  %347 = phi i32* [ %326, %324 ], [ %341, %336 ]
  %348 = icmp ult i64 %331, 28
  br i1 %348, label %390, label %349

349:                                              ; preds = %345, %349
  %350 = phi i32* [ %375, %349 ], [ %346, %345 ]
  %351 = phi i32* [ %374, %349 ], [ %347, %345 ]
  %352 = load i32, i32* %351, align 4
  store i32 %352, i32* %350, align 4
  %353 = getelementptr inbounds i32, i32* %351, i64 1
  %354 = getelementptr inbounds i32, i32* %350, i64 1
  %355 = load i32, i32* %353, align 4
  store i32 %355, i32* %354, align 4
  %356 = getelementptr inbounds i32, i32* %351, i64 2
  %357 = getelementptr inbounds i32, i32* %350, i64 2
  %358 = load i32, i32* %356, align 4
  store i32 %358, i32* %357, align 4
  %359 = getelementptr inbounds i32, i32* %351, i64 3
  %360 = getelementptr inbounds i32, i32* %350, i64 3
  %361 = load i32, i32* %359, align 4
  store i32 %361, i32* %360, align 4
  %362 = getelementptr inbounds i32, i32* %351, i64 4
  %363 = getelementptr inbounds i32, i32* %350, i64 4
  %364 = load i32, i32* %362, align 4
  store i32 %364, i32* %363, align 4
  %365 = getelementptr inbounds i32, i32* %351, i64 5
  %366 = getelementptr inbounds i32, i32* %350, i64 5
  %367 = load i32, i32* %365, align 4
  store i32 %367, i32* %366, align 4
  %368 = getelementptr inbounds i32, i32* %351, i64 6
  %369 = getelementptr inbounds i32, i32* %350, i64 6
  %370 = load i32, i32* %368, align 4
  store i32 %370, i32* %369, align 4
  %371 = getelementptr inbounds i32, i32* %351, i64 7
  %372 = getelementptr inbounds i32, i32* %350, i64 7
  %373 = load i32, i32* %371, align 4
  store i32 %373, i32* %372, align 4
  %374 = getelementptr inbounds i32, i32* %351, i64 8
  %375 = getelementptr inbounds i32, i32* %350, i64 8
  %376 = icmp eq i32* %374, %55
  br i1 %376, label %390, label %349, !llvm.loop !327

377:                                              ; preds = %215
  %378 = load i32, i32* %218, align 4
  %379 = load i32, i32* %217, align 4
  %380 = icmp slt i32 %378, %379
  br i1 %380, label %381, label %383

381:                                              ; preds = %377
  store i32 %378, i32* %216, align 4
  %382 = getelementptr inbounds i32, i32* %218, i64 1
  br label %385

383:                                              ; preds = %377
  store i32 %379, i32* %216, align 4
  %384 = getelementptr inbounds i32, i32* %217, i64 1
  br label %385

385:                                              ; preds = %383, %381
  %386 = phi i32* [ %382, %381 ], [ %218, %383 ]
  %387 = phi i32* [ %217, %381 ], [ %384, %383 ]
  %388 = getelementptr inbounds i32, i32* %216, i64 1
  %389 = icmp eq i32* %387, %55
  br i1 %389, label %59, label %215

390:                                              ; preds = %345, %349, %183, %187, %48, %322, %161, %220, %59, %23, %21, %13, %16, %5, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl(i32*, i32*, i32*, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1), i64, i64, i32*, i64) local_unnamed_addr #0 comdat {
  %9 = ptrtoint i32* %6 to i64
  %10 = icmp eq i64 %5, 0
  br i1 %10, label %887, label %11

11:                                               ; preds = %8
  %12 = ptrtoint i32* %1 to i64
  %13 = ptrtoint i32* %0 to i64
  br label %14

14:                                               ; preds = %11, %880
  %15 = phi i32* [ %885, %880 ], [ %2, %11 ]
  %16 = phi i64 [ %884, %880 ], [ %4, %11 ]
  %17 = phi i64 [ %883, %880 ], [ %5, %11 ]
  %18 = phi i64 [ %882, %880 ], [ %12, %11 ]
  %19 = phi i64 [ %881, %880 ], [ %13, %11 ]
  %20 = icmp sgt i64 %16, %7
  %21 = icmp sgt i64 %17, %7
  %22 = and i1 %21, %20
  br i1 %22, label %23, label %28

23:                                               ; preds = %14
  %24 = icmp eq i64 %16, 0
  br i1 %24, label %887, label %25

25:                                               ; preds = %23
  %26 = inttoptr i64 %18 to i32*
  %27 = load i32, i32* %26, align 4
  br label %548

28:                                               ; preds = %14
  %29 = inttoptr i64 %19 to i32*
  %30 = inttoptr i64 %19 to i8*
  %31 = inttoptr i64 %18 to i32*
  %32 = inttoptr i64 %18 to i8*
  %33 = icmp sgt i64 %16, %17
  br i1 %33, label %165, label %34

34:                                               ; preds = %28
  %35 = icmp eq i32* %29, %31
  br i1 %35, label %887, label %36

36:                                               ; preds = %34
  %37 = getelementptr i32, i32* %31, i64 -1
  %38 = bitcast i32* %37 to i8*
  %39 = sub i64 0, %19
  %40 = getelementptr i8, i8* %38, i64 %39
  %41 = ptrtoint i8* %40 to i64
  %42 = lshr i64 %41, 2
  %43 = add nuw nsw i64 %42, 1
  %44 = icmp ult i64 %43, 8
  br i1 %44, label %45, label %70

45:                                               ; preds = %163, %70, %36
  %46 = phi i32* [ %6, %70 ], [ %6, %36 ], [ %86, %163 ]
  %47 = phi i32* [ %29, %70 ], [ %29, %36 ], [ %87, %163 ]
  %48 = ptrtoint i32* %47 to i64
  %49 = getelementptr i32, i32* %31, i64 -1
  %50 = ptrtoint i32* %49 to i64
  %51 = sub i64 %50, %48
  %52 = lshr i64 %51, 2
  %53 = add nuw nsw i64 %52, 1
  %54 = and i64 %53, 7
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %65, label %56

56:                                               ; preds = %45, %56
  %57 = phi i32* [ %62, %56 ], [ %46, %45 ]
  %58 = phi i32* [ %61, %56 ], [ %47, %45 ]
  %59 = phi i64 [ %63, %56 ], [ %54, %45 ]
  %60 = load i32, i32* %58, align 4
  store i32 %60, i32* %57, align 4
  %61 = getelementptr inbounds i32, i32* %58, i64 1
  %62 = getelementptr inbounds i32, i32* %57, i64 1
  %63 = add i64 %59, -1
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %56, !llvm.loop !328

65:                                               ; preds = %56, %45
  %66 = phi i32* [ undef, %45 ], [ %62, %56 ]
  %67 = phi i32* [ %46, %45 ], [ %62, %56 ]
  %68 = phi i32* [ %47, %45 ], [ %61, %56 ]
  %69 = icmp ult i64 %51, 28
  br i1 %69, label %296, label %325

70:                                               ; preds = %36
  %71 = getelementptr i32, i32* %31, i64 -1
  %72 = bitcast i32* %71 to i8*
  %73 = sub i64 0, %19
  %74 = getelementptr i8, i8* %72, i64 %73
  %75 = ptrtoint i8* %74 to i64
  %76 = lshr i64 %75, 2
  %77 = add nuw nsw i64 %76, 1
  %78 = getelementptr i32, i32* %6, i64 %77
  %79 = bitcast i32* %78 to i8*
  %80 = getelementptr i32, i32* %29, i64 %77
  %81 = icmp ugt i32* %80, %6
  %82 = icmp ult i8* %30, %79
  %83 = and i1 %81, %82
  br i1 %83, label %45, label %84

84:                                               ; preds = %70
  %85 = and i64 %43, 9223372036854775800
  %86 = getelementptr i32, i32* %6, i64 %85
  %87 = getelementptr i32, i32* %29, i64 %85
  %88 = add nsw i64 %85, -8
  %89 = lshr exact i64 %88, 3
  %90 = add nuw nsw i64 %89, 1
  %91 = and i64 %90, 3
  %92 = icmp ult i64 %88, 24
  br i1 %92, label %144, label %93

93:                                               ; preds = %84
  %94 = sub nsw i64 %90, %91
  br label %95

95:                                               ; preds = %95, %93
  %96 = phi i64 [ 0, %93 ], [ %141, %95 ]
  %97 = phi i64 [ %94, %93 ], [ %142, %95 ]
  %98 = getelementptr i32, i32* %6, i64 %96
  %99 = getelementptr i32, i32* %29, i64 %96
  %100 = bitcast i32* %99 to <4 x i32>*
  %101 = load <4 x i32>, <4 x i32>* %100, align 4, !alias.scope !329
  %102 = getelementptr i32, i32* %99, i64 4
  %103 = bitcast i32* %102 to <4 x i32>*
  %104 = load <4 x i32>, <4 x i32>* %103, align 4, !alias.scope !329
  %105 = bitcast i32* %98 to <4 x i32>*
  store <4 x i32> %101, <4 x i32>* %105, align 4, !alias.scope !332, !noalias !329
  %106 = getelementptr i32, i32* %98, i64 4
  %107 = bitcast i32* %106 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %107, align 4, !alias.scope !332, !noalias !329
  %108 = or i64 %96, 8
  %109 = getelementptr i32, i32* %6, i64 %108
  %110 = getelementptr i32, i32* %29, i64 %108
  %111 = bitcast i32* %110 to <4 x i32>*
  %112 = load <4 x i32>, <4 x i32>* %111, align 4, !alias.scope !329
  %113 = getelementptr i32, i32* %110, i64 4
  %114 = bitcast i32* %113 to <4 x i32>*
  %115 = load <4 x i32>, <4 x i32>* %114, align 4, !alias.scope !329
  %116 = bitcast i32* %109 to <4 x i32>*
  store <4 x i32> %112, <4 x i32>* %116, align 4, !alias.scope !332, !noalias !329
  %117 = getelementptr i32, i32* %109, i64 4
  %118 = bitcast i32* %117 to <4 x i32>*
  store <4 x i32> %115, <4 x i32>* %118, align 4, !alias.scope !332, !noalias !329
  %119 = or i64 %96, 16
  %120 = getelementptr i32, i32* %6, i64 %119
  %121 = getelementptr i32, i32* %29, i64 %119
  %122 = bitcast i32* %121 to <4 x i32>*
  %123 = load <4 x i32>, <4 x i32>* %122, align 4, !alias.scope !329
  %124 = getelementptr i32, i32* %121, i64 4
  %125 = bitcast i32* %124 to <4 x i32>*
  %126 = load <4 x i32>, <4 x i32>* %125, align 4, !alias.scope !329
  %127 = bitcast i32* %120 to <4 x i32>*
  store <4 x i32> %123, <4 x i32>* %127, align 4, !alias.scope !332, !noalias !329
  %128 = getelementptr i32, i32* %120, i64 4
  %129 = bitcast i32* %128 to <4 x i32>*
  store <4 x i32> %126, <4 x i32>* %129, align 4, !alias.scope !332, !noalias !329
  %130 = or i64 %96, 24
  %131 = getelementptr i32, i32* %6, i64 %130
  %132 = getelementptr i32, i32* %29, i64 %130
  %133 = bitcast i32* %132 to <4 x i32>*
  %134 = load <4 x i32>, <4 x i32>* %133, align 4, !alias.scope !329
  %135 = getelementptr i32, i32* %132, i64 4
  %136 = bitcast i32* %135 to <4 x i32>*
  %137 = load <4 x i32>, <4 x i32>* %136, align 4, !alias.scope !329
  %138 = bitcast i32* %131 to <4 x i32>*
  store <4 x i32> %134, <4 x i32>* %138, align 4, !alias.scope !332, !noalias !329
  %139 = getelementptr i32, i32* %131, i64 4
  %140 = bitcast i32* %139 to <4 x i32>*
  store <4 x i32> %137, <4 x i32>* %140, align 4, !alias.scope !332, !noalias !329
  %141 = add i64 %96, 32
  %142 = add i64 %97, -4
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %95, !llvm.loop !334

144:                                              ; preds = %95, %84
  %145 = phi i64 [ 0, %84 ], [ %141, %95 ]
  %146 = icmp eq i64 %91, 0
  br i1 %146, label %163, label %147

147:                                              ; preds = %144, %147
  %148 = phi i64 [ %160, %147 ], [ %145, %144 ]
  %149 = phi i64 [ %161, %147 ], [ %91, %144 ]
  %150 = getelementptr i32, i32* %6, i64 %148
  %151 = getelementptr i32, i32* %29, i64 %148
  %152 = bitcast i32* %151 to <4 x i32>*
  %153 = load <4 x i32>, <4 x i32>* %152, align 4, !alias.scope !329
  %154 = getelementptr i32, i32* %151, i64 4
  %155 = bitcast i32* %154 to <4 x i32>*
  %156 = load <4 x i32>, <4 x i32>* %155, align 4, !alias.scope !329
  %157 = bitcast i32* %150 to <4 x i32>*
  store <4 x i32> %153, <4 x i32>* %157, align 4, !alias.scope !332, !noalias !329
  %158 = getelementptr i32, i32* %150, i64 4
  %159 = bitcast i32* %158 to <4 x i32>*
  store <4 x i32> %156, <4 x i32>* %159, align 4, !alias.scope !332, !noalias !329
  %160 = add i64 %148, 8
  %161 = add i64 %149, -1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %147, !llvm.loop !335

163:                                              ; preds = %147, %144
  %164 = icmp eq i64 %43, %85
  br i1 %164, label %296, label %45

165:                                              ; preds = %28
  %166 = icmp eq i32* %15, %31
  br i1 %166, label %887, label %167

167:                                              ; preds = %165
  %168 = getelementptr i32, i32* %15, i64 -1
  %169 = bitcast i32* %168 to i8*
  %170 = sub i64 0, %18
  %171 = getelementptr i8, i8* %169, i64 %170
  %172 = ptrtoint i8* %171 to i64
  %173 = lshr i64 %172, 2
  %174 = add nuw nsw i64 %173, 1
  %175 = icmp ult i64 %174, 8
  br i1 %175, label %176, label %201

176:                                              ; preds = %294, %201, %167
  %177 = phi i32* [ %6, %201 ], [ %6, %167 ], [ %217, %294 ]
  %178 = phi i32* [ %31, %201 ], [ %31, %167 ], [ %218, %294 ]
  %179 = ptrtoint i32* %178 to i64
  %180 = getelementptr i32, i32* %15, i64 -1
  %181 = ptrtoint i32* %180 to i64
  %182 = sub i64 %181, %179
  %183 = lshr i64 %182, 2
  %184 = add nuw nsw i64 %183, 1
  %185 = and i64 %184, 7
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %196, label %187

187:                                              ; preds = %176, %187
  %188 = phi i32* [ %193, %187 ], [ %177, %176 ]
  %189 = phi i32* [ %192, %187 ], [ %178, %176 ]
  %190 = phi i64 [ %194, %187 ], [ %185, %176 ]
  %191 = load i32, i32* %189, align 4
  store i32 %191, i32* %188, align 4
  %192 = getelementptr inbounds i32, i32* %189, i64 1
  %193 = getelementptr inbounds i32, i32* %188, i64 1
  %194 = add i64 %190, -1
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %196, label %187, !llvm.loop !336

196:                                              ; preds = %187, %176
  %197 = phi i32* [ undef, %176 ], [ %193, %187 ]
  %198 = phi i32* [ %177, %176 ], [ %193, %187 ]
  %199 = phi i32* [ %178, %176 ], [ %192, %187 ]
  %200 = icmp ult i64 %182, 28
  br i1 %200, label %353, label %520

201:                                              ; preds = %167
  %202 = getelementptr i32, i32* %15, i64 -1
  %203 = bitcast i32* %202 to i8*
  %204 = sub i64 0, %18
  %205 = getelementptr i8, i8* %203, i64 %204
  %206 = ptrtoint i8* %205 to i64
  %207 = lshr i64 %206, 2
  %208 = add nuw nsw i64 %207, 1
  %209 = getelementptr i32, i32* %6, i64 %208
  %210 = bitcast i32* %209 to i8*
  %211 = getelementptr i32, i32* %31, i64 %208
  %212 = icmp ugt i32* %211, %6
  %213 = icmp ult i8* %32, %210
  %214 = and i1 %212, %213
  br i1 %214, label %176, label %215

215:                                              ; preds = %201
  %216 = and i64 %174, 9223372036854775800
  %217 = getelementptr i32, i32* %6, i64 %216
  %218 = getelementptr i32, i32* %31, i64 %216
  %219 = add nsw i64 %216, -8
  %220 = lshr exact i64 %219, 3
  %221 = add nuw nsw i64 %220, 1
  %222 = and i64 %221, 3
  %223 = icmp ult i64 %219, 24
  br i1 %223, label %275, label %224

224:                                              ; preds = %215
  %225 = sub nsw i64 %221, %222
  br label %226

226:                                              ; preds = %226, %224
  %227 = phi i64 [ 0, %224 ], [ %272, %226 ]
  %228 = phi i64 [ %225, %224 ], [ %273, %226 ]
  %229 = getelementptr i32, i32* %6, i64 %227
  %230 = getelementptr i32, i32* %31, i64 %227
  %231 = bitcast i32* %230 to <4 x i32>*
  %232 = load <4 x i32>, <4 x i32>* %231, align 4, !alias.scope !337
  %233 = getelementptr i32, i32* %230, i64 4
  %234 = bitcast i32* %233 to <4 x i32>*
  %235 = load <4 x i32>, <4 x i32>* %234, align 4, !alias.scope !337
  %236 = bitcast i32* %229 to <4 x i32>*
  store <4 x i32> %232, <4 x i32>* %236, align 4, !alias.scope !340, !noalias !337
  %237 = getelementptr i32, i32* %229, i64 4
  %238 = bitcast i32* %237 to <4 x i32>*
  store <4 x i32> %235, <4 x i32>* %238, align 4, !alias.scope !340, !noalias !337
  %239 = or i64 %227, 8
  %240 = getelementptr i32, i32* %6, i64 %239
  %241 = getelementptr i32, i32* %31, i64 %239
  %242 = bitcast i32* %241 to <4 x i32>*
  %243 = load <4 x i32>, <4 x i32>* %242, align 4, !alias.scope !337
  %244 = getelementptr i32, i32* %241, i64 4
  %245 = bitcast i32* %244 to <4 x i32>*
  %246 = load <4 x i32>, <4 x i32>* %245, align 4, !alias.scope !337
  %247 = bitcast i32* %240 to <4 x i32>*
  store <4 x i32> %243, <4 x i32>* %247, align 4, !alias.scope !340, !noalias !337
  %248 = getelementptr i32, i32* %240, i64 4
  %249 = bitcast i32* %248 to <4 x i32>*
  store <4 x i32> %246, <4 x i32>* %249, align 4, !alias.scope !340, !noalias !337
  %250 = or i64 %227, 16
  %251 = getelementptr i32, i32* %6, i64 %250
  %252 = getelementptr i32, i32* %31, i64 %250
  %253 = bitcast i32* %252 to <4 x i32>*
  %254 = load <4 x i32>, <4 x i32>* %253, align 4, !alias.scope !337
  %255 = getelementptr i32, i32* %252, i64 4
  %256 = bitcast i32* %255 to <4 x i32>*
  %257 = load <4 x i32>, <4 x i32>* %256, align 4, !alias.scope !337
  %258 = bitcast i32* %251 to <4 x i32>*
  store <4 x i32> %254, <4 x i32>* %258, align 4, !alias.scope !340, !noalias !337
  %259 = getelementptr i32, i32* %251, i64 4
  %260 = bitcast i32* %259 to <4 x i32>*
  store <4 x i32> %257, <4 x i32>* %260, align 4, !alias.scope !340, !noalias !337
  %261 = or i64 %227, 24
  %262 = getelementptr i32, i32* %6, i64 %261
  %263 = getelementptr i32, i32* %31, i64 %261
  %264 = bitcast i32* %263 to <4 x i32>*
  %265 = load <4 x i32>, <4 x i32>* %264, align 4, !alias.scope !337
  %266 = getelementptr i32, i32* %263, i64 4
  %267 = bitcast i32* %266 to <4 x i32>*
  %268 = load <4 x i32>, <4 x i32>* %267, align 4, !alias.scope !337
  %269 = bitcast i32* %262 to <4 x i32>*
  store <4 x i32> %265, <4 x i32>* %269, align 4, !alias.scope !340, !noalias !337
  %270 = getelementptr i32, i32* %262, i64 4
  %271 = bitcast i32* %270 to <4 x i32>*
  store <4 x i32> %268, <4 x i32>* %271, align 4, !alias.scope !340, !noalias !337
  %272 = add i64 %227, 32
  %273 = add i64 %228, -4
  %274 = icmp eq i64 %273, 0
  br i1 %274, label %275, label %226, !llvm.loop !342

275:                                              ; preds = %226, %215
  %276 = phi i64 [ 0, %215 ], [ %272, %226 ]
  %277 = icmp eq i64 %222, 0
  br i1 %277, label %294, label %278

278:                                              ; preds = %275, %278
  %279 = phi i64 [ %291, %278 ], [ %276, %275 ]
  %280 = phi i64 [ %292, %278 ], [ %222, %275 ]
  %281 = getelementptr i32, i32* %6, i64 %279
  %282 = getelementptr i32, i32* %31, i64 %279
  %283 = bitcast i32* %282 to <4 x i32>*
  %284 = load <4 x i32>, <4 x i32>* %283, align 4, !alias.scope !337
  %285 = getelementptr i32, i32* %282, i64 4
  %286 = bitcast i32* %285 to <4 x i32>*
  %287 = load <4 x i32>, <4 x i32>* %286, align 4, !alias.scope !337
  %288 = bitcast i32* %281 to <4 x i32>*
  store <4 x i32> %284, <4 x i32>* %288, align 4, !alias.scope !340, !noalias !337
  %289 = getelementptr i32, i32* %281, i64 4
  %290 = bitcast i32* %289 to <4 x i32>*
  store <4 x i32> %287, <4 x i32>* %290, align 4, !alias.scope !340, !noalias !337
  %291 = add i64 %279, 8
  %292 = add i64 %280, -1
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %294, label %278, !llvm.loop !343

294:                                              ; preds = %278, %275
  %295 = icmp eq i64 %174, %216
  br i1 %295, label %353, label %176

296:                                              ; preds = %65, %325, %163
  %297 = phi i32* [ %86, %163 ], [ %66, %65 ], [ %351, %325 ]
  %298 = icmp eq i32* %297, %6
  br i1 %298, label %887, label %299

299:                                              ; preds = %296, %320
  %300 = phi i32* [ %322, %320 ], [ %6, %296 ]
  %301 = phi i32* [ %323, %320 ], [ %29, %296 ]
  %302 = phi i32* [ %321, %320 ], [ %31, %296 ]
  %303 = icmp eq i32* %302, %15
  br i1 %303, label %304, label %312

304:                                              ; preds = %299
  %305 = ptrtoint i32* %297 to i64
  %306 = ptrtoint i32* %300 to i64
  %307 = sub i64 %305, %306
  %308 = icmp eq i64 %307, 0
  br i1 %308, label %887, label %309

309:                                              ; preds = %304
  %310 = bitcast i32* %301 to i8*
  %311 = bitcast i32* %300 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %310, i8* align 4 %311, i64 %307, i1 false) #12
  br label %887

312:                                              ; preds = %299
  %313 = load i32, i32* %302, align 4
  %314 = load i32, i32* %300, align 4
  %315 = icmp slt i32 %313, %314
  br i1 %315, label %316, label %318

316:                                              ; preds = %312
  store i32 %313, i32* %301, align 4
  %317 = getelementptr inbounds i32, i32* %302, i64 1
  br label %320

318:                                              ; preds = %312
  store i32 %314, i32* %301, align 4
  %319 = getelementptr inbounds i32, i32* %300, i64 1
  br label %320

320:                                              ; preds = %318, %316
  %321 = phi i32* [ %317, %316 ], [ %302, %318 ]
  %322 = phi i32* [ %300, %316 ], [ %319, %318 ]
  %323 = getelementptr inbounds i32, i32* %301, i64 1
  %324 = icmp eq i32* %322, %297
  br i1 %324, label %887, label %299

325:                                              ; preds = %65, %325
  %326 = phi i32* [ %351, %325 ], [ %67, %65 ]
  %327 = phi i32* [ %350, %325 ], [ %68, %65 ]
  %328 = load i32, i32* %327, align 4
  store i32 %328, i32* %326, align 4
  %329 = getelementptr inbounds i32, i32* %327, i64 1
  %330 = getelementptr inbounds i32, i32* %326, i64 1
  %331 = load i32, i32* %329, align 4
  store i32 %331, i32* %330, align 4
  %332 = getelementptr inbounds i32, i32* %327, i64 2
  %333 = getelementptr inbounds i32, i32* %326, i64 2
  %334 = load i32, i32* %332, align 4
  store i32 %334, i32* %333, align 4
  %335 = getelementptr inbounds i32, i32* %327, i64 3
  %336 = getelementptr inbounds i32, i32* %326, i64 3
  %337 = load i32, i32* %335, align 4
  store i32 %337, i32* %336, align 4
  %338 = getelementptr inbounds i32, i32* %327, i64 4
  %339 = getelementptr inbounds i32, i32* %326, i64 4
  %340 = load i32, i32* %338, align 4
  store i32 %340, i32* %339, align 4
  %341 = getelementptr inbounds i32, i32* %327, i64 5
  %342 = getelementptr inbounds i32, i32* %326, i64 5
  %343 = load i32, i32* %341, align 4
  store i32 %343, i32* %342, align 4
  %344 = getelementptr inbounds i32, i32* %327, i64 6
  %345 = getelementptr inbounds i32, i32* %326, i64 6
  %346 = load i32, i32* %344, align 4
  store i32 %346, i32* %345, align 4
  %347 = getelementptr inbounds i32, i32* %327, i64 7
  %348 = getelementptr inbounds i32, i32* %326, i64 7
  %349 = load i32, i32* %347, align 4
  store i32 %349, i32* %348, align 4
  %350 = getelementptr inbounds i32, i32* %327, i64 8
  %351 = getelementptr inbounds i32, i32* %326, i64 8
  %352 = icmp eq i32* %350, %31
  br i1 %352, label %296, label %325, !llvm.loop !344

353:                                              ; preds = %196, %520, %294
  %354 = phi i32* [ %217, %294 ], [ %197, %196 ], [ %546, %520 ]
  %355 = icmp eq i32* %354, %6
  br i1 %355, label %887, label %356

356:                                              ; preds = %353, %509
  %357 = phi i32* [ %515, %509 ], [ %15, %353 ]
  %358 = phi i32* [ %518, %509 ], [ %354, %353 ]
  %359 = phi i32* [ %517, %509 ], [ %31, %353 ]
  %360 = icmp eq i32* %359, %29
  br i1 %360, label %361, label %509

361:                                              ; preds = %356
  %362 = getelementptr i32, i32* %358, i64 -1
  %363 = ptrtoint i32* %362 to i64
  %364 = sub i64 %363, %9
  %365 = lshr i64 %364, 2
  %366 = add nuw nsw i64 %365, 1
  %367 = icmp ult i64 %366, 8
  br i1 %367, label %458, label %368

368:                                              ; preds = %361
  %369 = getelementptr i32, i32* %358, i64 -1
  %370 = ptrtoint i32* %369 to i64
  %371 = sub i64 %370, %9
  %372 = lshr i64 %371, 2
  %373 = xor i64 %372, -1
  %374 = getelementptr i32, i32* %357, i64 %373
  %375 = getelementptr i32, i32* %358, i64 %373
  %376 = icmp ult i32* %374, %358
  %377 = icmp ult i32* %375, %357
  %378 = and i1 %376, %377
  br i1 %378, label %458, label %379

379:                                              ; preds = %368
  %380 = and i64 %366, 9223372036854775800
  %381 = sub nsw i64 0, %380
  %382 = getelementptr i32, i32* %358, i64 %381
  %383 = sub nsw i64 0, %380
  %384 = getelementptr i32, i32* %357, i64 %383
  %385 = add nsw i64 %380, -8
  %386 = lshr exact i64 %385, 3
  %387 = add nuw nsw i64 %386, 1
  %388 = and i64 %387, 1
  %389 = icmp eq i64 %385, 0
  br i1 %389, label %436, label %390

390:                                              ; preds = %379
  %391 = sub nuw nsw i64 %387, %388
  %392 = getelementptr i32, i32* %358, i64 -1
  %393 = getelementptr i32, i32* %357, i64 -1
  %394 = getelementptr i32, i32* %358, i64 -1
  %395 = getelementptr i32, i32* %357, i64 -1
  br label %396

396:                                              ; preds = %396, %390
  %397 = phi i64 [ 0, %390 ], [ %431, %396 ]
  %398 = phi i64 [ %391, %390 ], [ %432, %396 ]
  %399 = sub i64 0, %397
  %400 = sub i64 0, %397
  %401 = getelementptr inbounds i32, i32* %392, i64 %399
  %402 = getelementptr inbounds i32, i32* %401, i64 -3
  %403 = bitcast i32* %402 to <4 x i32>*
  %404 = load <4 x i32>, <4 x i32>* %403, align 4, !alias.scope !345
  %405 = getelementptr inbounds i32, i32* %401, i64 -4
  %406 = getelementptr inbounds i32, i32* %405, i64 -3
  %407 = bitcast i32* %406 to <4 x i32>*
  %408 = load <4 x i32>, <4 x i32>* %407, align 4, !alias.scope !345
  %409 = getelementptr inbounds i32, i32* %393, i64 %400
  %410 = getelementptr inbounds i32, i32* %409, i64 -3
  %411 = bitcast i32* %410 to <4 x i32>*
  store <4 x i32> %404, <4 x i32>* %411, align 4, !alias.scope !348, !noalias !345
  %412 = getelementptr inbounds i32, i32* %409, i64 -4
  %413 = getelementptr inbounds i32, i32* %412, i64 -3
  %414 = bitcast i32* %413 to <4 x i32>*
  store <4 x i32> %408, <4 x i32>* %414, align 4, !alias.scope !348, !noalias !345
  %415 = sub nuw nsw i64 -8, %397
  %416 = sub nuw nsw i64 -8, %397
  %417 = getelementptr inbounds i32, i32* %394, i64 %415
  %418 = getelementptr inbounds i32, i32* %417, i64 -3
  %419 = bitcast i32* %418 to <4 x i32>*
  %420 = load <4 x i32>, <4 x i32>* %419, align 4, !alias.scope !345
  %421 = getelementptr inbounds i32, i32* %417, i64 -4
  %422 = getelementptr inbounds i32, i32* %421, i64 -3
  %423 = bitcast i32* %422 to <4 x i32>*
  %424 = load <4 x i32>, <4 x i32>* %423, align 4, !alias.scope !345
  %425 = getelementptr inbounds i32, i32* %395, i64 %416
  %426 = getelementptr inbounds i32, i32* %425, i64 -3
  %427 = bitcast i32* %426 to <4 x i32>*
  store <4 x i32> %420, <4 x i32>* %427, align 4, !alias.scope !348, !noalias !345
  %428 = getelementptr inbounds i32, i32* %425, i64 -4
  %429 = getelementptr inbounds i32, i32* %428, i64 -3
  %430 = bitcast i32* %429 to <4 x i32>*
  store <4 x i32> %424, <4 x i32>* %430, align 4, !alias.scope !348, !noalias !345
  %431 = add i64 %397, 16
  %432 = add i64 %398, -2
  %433 = icmp eq i64 %432, 0
  br i1 %433, label %434, label %396, !llvm.loop !350

434:                                              ; preds = %396
  %435 = sub nuw nsw i64 -16, %397
  br label %436

436:                                              ; preds = %434, %379
  %437 = phi i64 [ 0, %379 ], [ %435, %434 ]
  %438 = icmp eq i64 %388, 0
  br i1 %438, label %456, label %439

439:                                              ; preds = %436
  %440 = getelementptr i32, i32* %358, i64 -1
  %441 = getelementptr i32, i32* %357, i64 -1
  %442 = getelementptr inbounds i32, i32* %440, i64 %437
  %443 = getelementptr inbounds i32, i32* %442, i64 -3
  %444 = bitcast i32* %443 to <4 x i32>*
  %445 = load <4 x i32>, <4 x i32>* %444, align 4, !alias.scope !345
  %446 = getelementptr inbounds i32, i32* %442, i64 -4
  %447 = getelementptr inbounds i32, i32* %446, i64 -3
  %448 = bitcast i32* %447 to <4 x i32>*
  %449 = load <4 x i32>, <4 x i32>* %448, align 4, !alias.scope !345
  %450 = getelementptr inbounds i32, i32* %441, i64 %437
  %451 = getelementptr inbounds i32, i32* %450, i64 -3
  %452 = bitcast i32* %451 to <4 x i32>*
  store <4 x i32> %445, <4 x i32>* %452, align 4, !alias.scope !348, !noalias !345
  %453 = getelementptr inbounds i32, i32* %450, i64 -4
  %454 = getelementptr inbounds i32, i32* %453, i64 -3
  %455 = bitcast i32* %454 to <4 x i32>*
  store <4 x i32> %449, <4 x i32>* %455, align 4, !alias.scope !348, !noalias !345
  br label %456

456:                                              ; preds = %436, %439
  %457 = icmp eq i64 %366, %380
  br i1 %457, label %887, label %458

458:                                              ; preds = %456, %368, %361
  %459 = phi i32* [ %358, %368 ], [ %358, %361 ], [ %382, %456 ]
  %460 = phi i32* [ %357, %368 ], [ %357, %361 ], [ %384, %456 ]
  %461 = getelementptr i32, i32* %459, i64 -1
  %462 = ptrtoint i32* %461 to i64
  %463 = sub i64 %462, %9
  %464 = lshr i64 %463, 2
  %465 = add nuw nsw i64 %464, 1
  %466 = and i64 %465, 7
  %467 = icmp eq i64 %466, 0
  br i1 %467, label %477, label %468

468:                                              ; preds = %458, %468
  %469 = phi i32* [ %472, %468 ], [ %459, %458 ]
  %470 = phi i32* [ %474, %468 ], [ %460, %458 ]
  %471 = phi i64 [ %475, %468 ], [ %466, %458 ]
  %472 = getelementptr inbounds i32, i32* %469, i64 -1
  %473 = load i32, i32* %472, align 4
  %474 = getelementptr inbounds i32, i32* %470, i64 -1
  store i32 %473, i32* %474, align 4
  %475 = add i64 %471, -1
  %476 = icmp eq i64 %475, 0
  br i1 %476, label %477, label %468, !llvm.loop !351

477:                                              ; preds = %468, %458
  %478 = phi i32* [ %459, %458 ], [ %472, %468 ]
  %479 = phi i32* [ %460, %458 ], [ %474, %468 ]
  %480 = icmp ult i64 %463, 28
  br i1 %480, label %887, label %481

481:                                              ; preds = %477, %481
  %482 = phi i32* [ %505, %481 ], [ %478, %477 ]
  %483 = phi i32* [ %507, %481 ], [ %479, %477 ]
  %484 = getelementptr inbounds i32, i32* %482, i64 -1
  %485 = load i32, i32* %484, align 4
  %486 = getelementptr inbounds i32, i32* %483, i64 -1
  store i32 %485, i32* %486, align 4
  %487 = getelementptr inbounds i32, i32* %482, i64 -2
  %488 = load i32, i32* %487, align 4
  %489 = getelementptr inbounds i32, i32* %483, i64 -2
  store i32 %488, i32* %489, align 4
  %490 = getelementptr inbounds i32, i32* %482, i64 -3
  %491 = load i32, i32* %490, align 4
  %492 = getelementptr inbounds i32, i32* %483, i64 -3
  store i32 %491, i32* %492, align 4
  %493 = getelementptr inbounds i32, i32* %482, i64 -4
  %494 = load i32, i32* %493, align 4
  %495 = getelementptr inbounds i32, i32* %483, i64 -4
  store i32 %494, i32* %495, align 4
  %496 = getelementptr inbounds i32, i32* %482, i64 -5
  %497 = load i32, i32* %496, align 4
  %498 = getelementptr inbounds i32, i32* %483, i64 -5
  store i32 %497, i32* %498, align 4
  %499 = getelementptr inbounds i32, i32* %482, i64 -6
  %500 = load i32, i32* %499, align 4
  %501 = getelementptr inbounds i32, i32* %483, i64 -6
  store i32 %500, i32* %501, align 4
  %502 = getelementptr inbounds i32, i32* %482, i64 -7
  %503 = load i32, i32* %502, align 4
  %504 = getelementptr inbounds i32, i32* %483, i64 -7
  store i32 %503, i32* %504, align 4
  %505 = getelementptr inbounds i32, i32* %482, i64 -8
  %506 = load i32, i32* %505, align 4
  %507 = getelementptr inbounds i32, i32* %483, i64 -8
  store i32 %506, i32* %507, align 4
  %508 = icmp eq i32* %505, %6
  br i1 %508, label %887, label %481, !llvm.loop !352

509:                                              ; preds = %356
  %510 = getelementptr inbounds i32, i32* %359, i64 -1
  %511 = getelementptr inbounds i32, i32* %358, i64 -1
  %512 = load i32, i32* %511, align 4
  %513 = load i32, i32* %510, align 4
  %514 = icmp slt i32 %512, %513
  %515 = getelementptr inbounds i32, i32* %357, i64 -1
  %516 = select i1 %514, i32 %513, i32 %512
  %517 = select i1 %514, i32* %510, i32* %359
  %518 = select i1 %514, i32* %358, i32* %511
  store i32 %516, i32* %515, align 4
  %519 = icmp eq i32* %518, %6
  br i1 %519, label %887, label %356

520:                                              ; preds = %196, %520
  %521 = phi i32* [ %546, %520 ], [ %198, %196 ]
  %522 = phi i32* [ %545, %520 ], [ %199, %196 ]
  %523 = load i32, i32* %522, align 4
  store i32 %523, i32* %521, align 4
  %524 = getelementptr inbounds i32, i32* %522, i64 1
  %525 = getelementptr inbounds i32, i32* %521, i64 1
  %526 = load i32, i32* %524, align 4
  store i32 %526, i32* %525, align 4
  %527 = getelementptr inbounds i32, i32* %522, i64 2
  %528 = getelementptr inbounds i32, i32* %521, i64 2
  %529 = load i32, i32* %527, align 4
  store i32 %529, i32* %528, align 4
  %530 = getelementptr inbounds i32, i32* %522, i64 3
  %531 = getelementptr inbounds i32, i32* %521, i64 3
  %532 = load i32, i32* %530, align 4
  store i32 %532, i32* %531, align 4
  %533 = getelementptr inbounds i32, i32* %522, i64 4
  %534 = getelementptr inbounds i32, i32* %521, i64 4
  %535 = load i32, i32* %533, align 4
  store i32 %535, i32* %534, align 4
  %536 = getelementptr inbounds i32, i32* %522, i64 5
  %537 = getelementptr inbounds i32, i32* %521, i64 5
  %538 = load i32, i32* %536, align 4
  store i32 %538, i32* %537, align 4
  %539 = getelementptr inbounds i32, i32* %522, i64 6
  %540 = getelementptr inbounds i32, i32* %521, i64 6
  %541 = load i32, i32* %539, align 4
  store i32 %541, i32* %540, align 4
  %542 = getelementptr inbounds i32, i32* %522, i64 7
  %543 = getelementptr inbounds i32, i32* %521, i64 7
  %544 = load i32, i32* %542, align 4
  store i32 %544, i32* %543, align 4
  %545 = getelementptr inbounds i32, i32* %522, i64 8
  %546 = getelementptr inbounds i32, i32* %521, i64 8
  %547 = icmp eq i32* %545, %15
  br i1 %547, label %353, label %520, !llvm.loop !353

548:                                              ; preds = %25, %554
  %549 = phi i64 [ %16, %25 ], [ %557, %554 ]
  %550 = phi i64 [ %19, %25 ], [ %556, %554 ]
  %551 = inttoptr i64 %550 to i32*
  %552 = load i32, i32* %551, align 4
  %553 = icmp slt i32 %27, %552
  br i1 %553, label %559, label %554

554:                                              ; preds = %548
  %555 = getelementptr inbounds i32, i32* %551, i64 1
  %556 = ptrtoint i32* %555 to i64
  %557 = add nsw i64 %549, -1
  %558 = icmp eq i64 %557, 0
  br i1 %558, label %887, label %548

559:                                              ; preds = %548
  %560 = inttoptr i64 %550 to i32*
  %561 = icmp slt i64 %549, %17
  br i1 %561, label %562, label %589

562:                                              ; preds = %559
  %563 = sdiv i64 %17, 2
  %564 = getelementptr inbounds i32, i32* %26, i64 %563
  %565 = ptrtoint i32* %564 to i64
  %566 = sub i64 %18, %550
  %567 = icmp eq i64 %566, 0
  br i1 %567, label %584, label %568

568:                                              ; preds = %562
  %569 = ashr exact i64 %566, 2
  %570 = load i32, i32* %564, align 4
  br label %571

571:                                              ; preds = %571, %568
  %572 = phi i32* [ %560, %568 ], [ %582, %571 ]
  %573 = phi i64 [ %569, %568 ], [ %581, %571 ]
  %574 = lshr i64 %573, 1
  %575 = getelementptr inbounds i32, i32* %572, i64 %574
  %576 = load i32, i32* %575, align 4
  %577 = icmp slt i32 %570, %576
  %578 = getelementptr inbounds i32, i32* %575, i64 1
  %579 = xor i64 %574, -1
  %580 = add i64 %573, %579
  %581 = select i1 %577, i64 %574, i64 %580
  %582 = select i1 %577, i32* %572, i32* %578
  %583 = icmp eq i64 %581, 0
  br i1 %583, label %584, label %571

584:                                              ; preds = %571, %562
  %585 = phi i32* [ %560, %562 ], [ %582, %571 ]
  %586 = ptrtoint i32* %585 to i64
  %587 = sub i64 %586, %550
  %588 = ashr exact i64 %587, 2
  br label %622

589:                                              ; preds = %559
  %590 = icmp eq i64 %549, 1
  br i1 %590, label %591, label %594

591:                                              ; preds = %589
  %592 = inttoptr i64 %18 to i32*
  %593 = inttoptr i64 %550 to i32*
  store i32 %27, i32* %593, align 4
  store i32 %552, i32* %592, align 4
  br label %887

594:                                              ; preds = %589
  %595 = sdiv i64 %549, 2
  %596 = getelementptr inbounds i32, i32* %560, i64 %595
  %597 = ptrtoint i32* %596 to i64
  %598 = ptrtoint i32* %15 to i64
  %599 = sub i64 %598, %18
  %600 = icmp eq i64 %599, 0
  br i1 %600, label %617, label %601

601:                                              ; preds = %594
  %602 = ashr exact i64 %599, 2
  %603 = load i32, i32* %596, align 4
  br label %604

604:                                              ; preds = %604, %601
  %605 = phi i32* [ %26, %601 ], [ %615, %604 ]
  %606 = phi i64 [ %602, %601 ], [ %614, %604 ]
  %607 = lshr i64 %606, 1
  %608 = getelementptr inbounds i32, i32* %605, i64 %607
  %609 = load i32, i32* %608, align 4
  %610 = icmp slt i32 %609, %603
  %611 = getelementptr inbounds i32, i32* %608, i64 1
  %612 = xor i64 %607, -1
  %613 = add i64 %606, %612
  %614 = select i1 %610, i64 %613, i64 %607
  %615 = select i1 %610, i32* %611, i32* %605
  %616 = icmp eq i64 %614, 0
  br i1 %616, label %617, label %604

617:                                              ; preds = %604, %594
  %618 = phi i32* [ %26, %594 ], [ %615, %604 ]
  %619 = ptrtoint i32* %618 to i64
  %620 = sub i64 %619, %18
  %621 = ashr exact i64 %620, 2
  br label %622

622:                                              ; preds = %617, %584
  %623 = phi i64 [ %586, %584 ], [ %597, %617 ]
  %624 = phi i64 [ %565, %584 ], [ %619, %617 ]
  %625 = phi i64 [ %563, %584 ], [ %621, %617 ]
  %626 = phi i64 [ %588, %584 ], [ %595, %617 ]
  %627 = sub nsw i64 %549, %626
  %628 = sub nsw i64 %17, %625
  %629 = inttoptr i64 %623 to i32*
  %630 = inttoptr i64 %624 to i32*
  %631 = inttoptr i64 %623 to i8*
  %632 = inttoptr i64 %18 to i8*
  %633 = icmp eq i32* %629, %26
  br i1 %633, label %872, label %634

634:                                              ; preds = %622
  %635 = icmp eq i32* %26, %630
  br i1 %635, label %872, label %636

636:                                              ; preds = %634
  %637 = getelementptr inbounds i32, i32* %629, i64 1
  %638 = icmp eq i32* %637, %26
  br i1 %638, label %639, label %647

639:                                              ; preds = %636
  %640 = load i32, i32* %629, align 4
  %641 = sub i64 %624, %18
  %642 = ashr exact i64 %641, 2
  %643 = icmp eq i64 %641, 0
  br i1 %643, label %645, label %644

644:                                              ; preds = %639
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %631, i8* align 4 %632, i64 %641, i1 false) #12
  br label %645

645:                                              ; preds = %644, %639
  %646 = getelementptr inbounds i32, i32* %629, i64 %642
  store i32 %640, i32* %646, align 4
  br label %872

647:                                              ; preds = %636
  %648 = getelementptr inbounds i32, i32* %26, i64 1
  %649 = icmp eq i32* %648, %630
  br i1 %649, label %650, label %663

650:                                              ; preds = %647
  %651 = getelementptr inbounds i32, i32* %630, i64 -1
  %652 = load i32, i32* %651, align 4
  %653 = ptrtoint i32* %651 to i64
  %654 = sub i64 %653, %623
  %655 = icmp eq i64 %654, 0
  br i1 %655, label %661, label %656

656:                                              ; preds = %650
  %657 = ashr exact i64 %654, 2
  %658 = sub nsw i64 0, %657
  %659 = getelementptr inbounds i32, i32* %630, i64 %658
  %660 = bitcast i32* %659 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %660, i8* align 4 %631, i64 %654, i1 false) #12
  br label %661

661:                                              ; preds = %656, %650
  %662 = phi i32* [ %659, %656 ], [ %630, %650 ]
  store i32 %652, i32* %629, align 4
  br label %872

663:                                              ; preds = %647
  %664 = sub i64 %18, %623
  %665 = ashr exact i64 %664, 2
  %666 = sub i64 %624, %18
  %667 = ashr exact i64 %666, 2
  %668 = icmp eq i64 %665, %667
  br i1 %668, label %669, label %814

669:                                              ; preds = %663
  %670 = load i32, i32* %629, align 4
  store i32 %27, i32* %629, align 4
  store i32 %670, i32* %26, align 4
  %671 = getelementptr inbounds i32, i32* %629, i64 1
  %672 = getelementptr inbounds i32, i32* %26, i64 1
  %673 = icmp eq i32* %671, %26
  br i1 %673, label %872, label %674

674:                                              ; preds = %669
  %675 = getelementptr i32, i32* %26, i64 -2
  %676 = bitcast i32* %675 to i8*
  %677 = sub i64 0, %623
  %678 = getelementptr i8, i8* %676, i64 %677
  %679 = ptrtoint i8* %678 to i64
  %680 = lshr i64 %679, 2
  %681 = add nuw nsw i64 %680, 1
  %682 = icmp ult i64 %681, 8
  br i1 %682, label %769, label %683

683:                                              ; preds = %674
  %684 = getelementptr i32, i32* %629, i64 2
  %685 = getelementptr i32, i32* %26, i64 -2
  %686 = bitcast i32* %685 to i8*
  %687 = sub i64 0, %623
  %688 = getelementptr i8, i8* %686, i64 %687
  %689 = ptrtoint i8* %688 to i64
  %690 = lshr i64 %689, 2
  %691 = getelementptr i32, i32* %684, i64 %690
  %692 = getelementptr i32, i32* %26, i64 2
  %693 = getelementptr i32, i32* %692, i64 %690
  %694 = icmp ult i32* %671, %693
  %695 = icmp ult i32* %672, %691
  %696 = and i1 %694, %695
  br i1 %696, label %769, label %697

697:                                              ; preds = %683
  %698 = and i64 %681, 9223372036854775800
  %699 = getelementptr i32, i32* %672, i64 %698
  %700 = getelementptr i32, i32* %671, i64 %698
  %701 = add nsw i64 %698, -8
  %702 = lshr exact i64 %701, 3
  %703 = add nuw nsw i64 %702, 1
  %704 = and i64 %703, 1
  %705 = icmp eq i64 %701, 0
  br i1 %705, label %747, label %706

706:                                              ; preds = %697
  %707 = sub nuw nsw i64 %703, %704
  br label %708

708:                                              ; preds = %708, %706
  %709 = phi i64 [ 0, %706 ], [ %744, %708 ]
  %710 = phi i64 [ %707, %706 ], [ %745, %708 ]
  %711 = getelementptr i32, i32* %672, i64 %709
  %712 = getelementptr i32, i32* %671, i64 %709
  %713 = bitcast i32* %711 to <4 x i32>*
  %714 = load <4 x i32>, <4 x i32>* %713, align 4, !alias.scope !354
  %715 = getelementptr i32, i32* %711, i64 4
  %716 = bitcast i32* %715 to <4 x i32>*
  %717 = load <4 x i32>, <4 x i32>* %716, align 4, !alias.scope !354
  %718 = bitcast i32* %712 to <4 x i32>*
  %719 = load <4 x i32>, <4 x i32>* %718, align 4, !alias.scope !357, !noalias !354
  %720 = getelementptr i32, i32* %712, i64 4
  %721 = bitcast i32* %720 to <4 x i32>*
  %722 = load <4 x i32>, <4 x i32>* %721, align 4, !alias.scope !357, !noalias !354
  %723 = bitcast i32* %712 to <4 x i32>*
  store <4 x i32> %714, <4 x i32>* %723, align 4, !alias.scope !357, !noalias !354
  %724 = bitcast i32* %720 to <4 x i32>*
  store <4 x i32> %717, <4 x i32>* %724, align 4, !alias.scope !357, !noalias !354
  %725 = bitcast i32* %711 to <4 x i32>*
  store <4 x i32> %719, <4 x i32>* %725, align 4, !alias.scope !354
  %726 = bitcast i32* %715 to <4 x i32>*
  store <4 x i32> %722, <4 x i32>* %726, align 4, !alias.scope !354
  %727 = or i64 %709, 8
  %728 = getelementptr i32, i32* %672, i64 %727
  %729 = getelementptr i32, i32* %671, i64 %727
  %730 = bitcast i32* %728 to <4 x i32>*
  %731 = load <4 x i32>, <4 x i32>* %730, align 4, !alias.scope !354
  %732 = getelementptr i32, i32* %728, i64 4
  %733 = bitcast i32* %732 to <4 x i32>*
  %734 = load <4 x i32>, <4 x i32>* %733, align 4, !alias.scope !354
  %735 = bitcast i32* %729 to <4 x i32>*
  %736 = load <4 x i32>, <4 x i32>* %735, align 4, !alias.scope !357, !noalias !354
  %737 = getelementptr i32, i32* %729, i64 4
  %738 = bitcast i32* %737 to <4 x i32>*
  %739 = load <4 x i32>, <4 x i32>* %738, align 4, !alias.scope !357, !noalias !354
  %740 = bitcast i32* %729 to <4 x i32>*
  store <4 x i32> %731, <4 x i32>* %740, align 4, !alias.scope !357, !noalias !354
  %741 = bitcast i32* %737 to <4 x i32>*
  store <4 x i32> %734, <4 x i32>* %741, align 4, !alias.scope !357, !noalias !354
  %742 = bitcast i32* %728 to <4 x i32>*
  store <4 x i32> %736, <4 x i32>* %742, align 4, !alias.scope !354
  %743 = bitcast i32* %732 to <4 x i32>*
  store <4 x i32> %739, <4 x i32>* %743, align 4, !alias.scope !354
  %744 = add i64 %709, 16
  %745 = add i64 %710, -2
  %746 = icmp eq i64 %745, 0
  br i1 %746, label %747, label %708, !llvm.loop !359

747:                                              ; preds = %708, %697
  %748 = phi i64 [ 0, %697 ], [ %744, %708 ]
  %749 = icmp eq i64 %704, 0
  br i1 %749, label %767, label %750

750:                                              ; preds = %747
  %751 = getelementptr i32, i32* %672, i64 %748
  %752 = getelementptr i32, i32* %671, i64 %748
  %753 = bitcast i32* %751 to <4 x i32>*
  %754 = load <4 x i32>, <4 x i32>* %753, align 4, !alias.scope !354
  %755 = getelementptr i32, i32* %751, i64 4
  %756 = bitcast i32* %755 to <4 x i32>*
  %757 = load <4 x i32>, <4 x i32>* %756, align 4, !alias.scope !354
  %758 = bitcast i32* %752 to <4 x i32>*
  %759 = load <4 x i32>, <4 x i32>* %758, align 4, !alias.scope !357, !noalias !354
  %760 = getelementptr i32, i32* %752, i64 4
  %761 = bitcast i32* %760 to <4 x i32>*
  %762 = load <4 x i32>, <4 x i32>* %761, align 4, !alias.scope !357, !noalias !354
  %763 = bitcast i32* %752 to <4 x i32>*
  store <4 x i32> %754, <4 x i32>* %763, align 4, !alias.scope !357, !noalias !354
  %764 = bitcast i32* %760 to <4 x i32>*
  store <4 x i32> %757, <4 x i32>* %764, align 4, !alias.scope !357, !noalias !354
  %765 = bitcast i32* %751 to <4 x i32>*
  store <4 x i32> %759, <4 x i32>* %765, align 4, !alias.scope !354
  %766 = bitcast i32* %755 to <4 x i32>*
  store <4 x i32> %762, <4 x i32>* %766, align 4, !alias.scope !354
  br label %767

767:                                              ; preds = %747, %750
  %768 = icmp eq i64 %681, %698
  br i1 %768, label %872, label %769

769:                                              ; preds = %767, %683, %674
  %770 = phi i32* [ %672, %683 ], [ %672, %674 ], [ %699, %767 ]
  %771 = phi i32* [ %671, %683 ], [ %671, %674 ], [ %700, %767 ]
  %772 = ptrtoint i32* %771 to i64
  %773 = getelementptr i32, i32* %26, i64 -1
  %774 = ptrtoint i32* %773 to i64
  %775 = sub i64 %774, %772
  %776 = lshr i64 %775, 2
  %777 = add nuw nsw i64 %776, 1
  %778 = and i64 %777, 3
  %779 = icmp eq i64 %778, 0
  br i1 %779, label %790, label %780

780:                                              ; preds = %769, %780
  %781 = phi i32* [ %787, %780 ], [ %770, %769 ]
  %782 = phi i32* [ %786, %780 ], [ %771, %769 ]
  %783 = phi i64 [ %788, %780 ], [ %778, %769 ]
  %784 = load i32, i32* %781, align 4
  %785 = load i32, i32* %782, align 4
  store i32 %784, i32* %782, align 4
  store i32 %785, i32* %781, align 4
  %786 = getelementptr inbounds i32, i32* %782, i64 1
  %787 = getelementptr inbounds i32, i32* %781, i64 1
  %788 = add i64 %783, -1
  %789 = icmp eq i64 %788, 0
  br i1 %789, label %790, label %780, !llvm.loop !360

790:                                              ; preds = %780, %769
  %791 = phi i32* [ %770, %769 ], [ %787, %780 ]
  %792 = phi i32* [ %771, %769 ], [ %786, %780 ]
  %793 = icmp ult i64 %775, 12
  br i1 %793, label %872, label %794

794:                                              ; preds = %790, %794
  %795 = phi i32* [ %812, %794 ], [ %791, %790 ]
  %796 = phi i32* [ %811, %794 ], [ %792, %790 ]
  %797 = load i32, i32* %795, align 4
  %798 = load i32, i32* %796, align 4
  store i32 %797, i32* %796, align 4
  store i32 %798, i32* %795, align 4
  %799 = getelementptr inbounds i32, i32* %796, i64 1
  %800 = getelementptr inbounds i32, i32* %795, i64 1
  %801 = load i32, i32* %800, align 4
  %802 = load i32, i32* %799, align 4
  store i32 %801, i32* %799, align 4
  store i32 %802, i32* %800, align 4
  %803 = getelementptr inbounds i32, i32* %796, i64 2
  %804 = getelementptr inbounds i32, i32* %795, i64 2
  %805 = load i32, i32* %804, align 4
  %806 = load i32, i32* %803, align 4
  store i32 %805, i32* %803, align 4
  store i32 %806, i32* %804, align 4
  %807 = getelementptr inbounds i32, i32* %796, i64 3
  %808 = getelementptr inbounds i32, i32* %795, i64 3
  %809 = load i32, i32* %808, align 4
  %810 = load i32, i32* %807, align 4
  store i32 %809, i32* %807, align 4
  store i32 %810, i32* %808, align 4
  %811 = getelementptr inbounds i32, i32* %796, i64 4
  %812 = getelementptr inbounds i32, i32* %795, i64 4
  %813 = icmp eq i32* %811, %26
  br i1 %813, label %872, label %794, !llvm.loop !361

814:                                              ; preds = %663, %814
  %815 = phi i64 [ %817, %814 ], [ %667, %663 ]
  %816 = phi i64 [ %815, %814 ], [ %665, %663 ]
  %817 = srem i64 %816, %815
  %818 = icmp eq i64 %817, 0
  br i1 %818, label %819, label %814

819:                                              ; preds = %814
  %820 = icmp eq i64 %815, 0
  br i1 %820, label %848, label %821

821:                                              ; preds = %819
  %822 = getelementptr inbounds i32, i32* %629, i64 %815
  %823 = shl nsw i64 %815, 2
  %824 = add i64 %823, -4
  %825 = and i64 %824, 4
  %826 = icmp eq i64 %825, 0
  br i1 %826, label %827, label %845

827:                                              ; preds = %821
  %828 = getelementptr inbounds i32, i32* %822, i64 -1
  %829 = load i32, i32* %828, align 4
  %830 = getelementptr inbounds i32, i32* %828, i64 %665
  br label %831

831:                                              ; preds = %831, %827
  %832 = phi i32* [ %828, %827 ], [ %833, %831 ]
  %833 = phi i32* [ %830, %827 ], [ %842, %831 ]
  %834 = ptrtoint i32* %833 to i64
  %835 = load i32, i32* %833, align 4
  store i32 %835, i32* %832, align 4
  %836 = sub i64 %624, %834
  %837 = ashr exact i64 %836, 2
  %838 = icmp slt i64 %665, %837
  %839 = getelementptr inbounds i32, i32* %833, i64 %665
  %840 = sub nsw i64 %665, %837
  %841 = getelementptr inbounds i32, i32* %629, i64 %840
  %842 = select i1 %838, i32* %839, i32* %841
  %843 = icmp eq i32* %842, %828
  br i1 %843, label %844, label %831

844:                                              ; preds = %831
  store i32 %829, i32* %833, align 4
  br label %845

845:                                              ; preds = %844, %821
  %846 = phi i32* [ %828, %844 ], [ %822, %821 ]
  %847 = icmp eq i64 %824, 0
  br i1 %847, label %848, label %850

848:                                              ; preds = %845, %901, %819
  %849 = getelementptr inbounds i32, i32* %629, i64 %667
  br label %872

850:                                              ; preds = %845, %901
  %851 = phi i32* [ %869, %901 ], [ %846, %845 ]
  %852 = getelementptr inbounds i32, i32* %851, i64 -1
  %853 = load i32, i32* %852, align 4
  %854 = getelementptr inbounds i32, i32* %852, i64 %665
  br label %855

855:                                              ; preds = %855, %850
  %856 = phi i32* [ %852, %850 ], [ %857, %855 ]
  %857 = phi i32* [ %854, %850 ], [ %866, %855 ]
  %858 = ptrtoint i32* %857 to i64
  %859 = load i32, i32* %857, align 4
  store i32 %859, i32* %856, align 4
  %860 = sub i64 %624, %858
  %861 = ashr exact i64 %860, 2
  %862 = icmp slt i64 %665, %861
  %863 = getelementptr inbounds i32, i32* %857, i64 %665
  %864 = sub nsw i64 %665, %861
  %865 = getelementptr inbounds i32, i32* %629, i64 %864
  %866 = select i1 %862, i32* %863, i32* %865
  %867 = icmp eq i32* %866, %852
  br i1 %867, label %868, label %855

868:                                              ; preds = %855
  store i32 %853, i32* %857, align 4
  %869 = getelementptr inbounds i32, i32* %851, i64 -2
  %870 = load i32, i32* %869, align 4
  %871 = getelementptr inbounds i32, i32* %869, i64 %665
  br label %888

872:                                              ; preds = %790, %794, %669, %767, %622, %634, %645, %661, %848
  %873 = phi i32* [ %629, %634 ], [ %630, %622 ], [ %646, %645 ], [ %662, %661 ], [ %849, %848 ], [ %26, %767 ], [ %26, %669 ], [ %26, %794 ], [ %26, %790 ]
  %874 = add nsw i64 %626, %625
  %875 = add nsw i64 %627, %628
  %876 = icmp slt i64 %874, %875
  br i1 %876, label %877, label %879

877:                                              ; preds = %872
  %878 = ptrtoint i32* %873 to i64
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl(i32* %560, i32* %629, i32* %873, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1) %3, i64 %626, i64 %625, i32* %6, i64 %7)
  br label %880

879:                                              ; preds = %872
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIiNS1_8identityENS_4lessIvEENS_6vectorIiNS_9allocatorIiEEEEE13value_compareENS_11__wrap_iterIPiEEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl(i32* %873, i32* %630, i32* %15, %"struct.base::internal::flat_tree<int, base::identity, std::__1::less<void>, std::__1::vector<int, std::__1::allocator<int> > >::value_compare"* dereferenceable(1) %3, i64 %627, i64 %628, i32* %6, i64 %7)
  br label %880

880:                                              ; preds = %877, %879
  %881 = phi i64 [ %878, %877 ], [ %550, %879 ]
  %882 = phi i64 [ %624, %877 ], [ %623, %879 ]
  %883 = phi i64 [ %628, %877 ], [ %625, %879 ]
  %884 = phi i64 [ %627, %877 ], [ %626, %879 ]
  %885 = phi i32* [ %15, %877 ], [ %873, %879 ]
  %886 = icmp eq i64 %883, 0
  br i1 %886, label %887, label %14

887:                                              ; preds = %880, %23, %554, %320, %509, %477, %481, %456, %8, %591, %353, %309, %304, %296, %165, %34
  ret void

888:                                              ; preds = %888, %868
  %889 = phi i32* [ %869, %868 ], [ %890, %888 ]
  %890 = phi i32* [ %871, %868 ], [ %899, %888 ]
  %891 = ptrtoint i32* %890 to i64
  %892 = load i32, i32* %890, align 4
  store i32 %892, i32* %889, align 4
  %893 = sub i64 %624, %891
  %894 = ashr exact i64 %893, 2
  %895 = icmp slt i64 %665, %894
  %896 = getelementptr inbounds i32, i32* %890, i64 %665
  %897 = sub nsw i64 %665, %894
  %898 = getelementptr inbounds i32, i32* %629, i64 %897
  %899 = select i1 %895, i32* %896, i32* %898
  %900 = icmp eq i32* %899, %869
  br i1 %900, label %901, label %888

901:                                              ; preds = %888
  store i32 %870, i32* %890, align 4
  %902 = icmp eq i32* %869, %629
  br i1 %902, label %848, label %850
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIMN12_GLOBAL__N_119IconLoadingPipelineEFvNSt3__13mapIi8SkBitmapNS5_4lessIiEENS5_9allocatorINS5_4pairIKiS7_EEEEEEEJ13scoped_refptrIS4_EEEEFvSF_EE7RunOnceEPNS0_13BindStateBaseEOSF_(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.std::__1::map.561"* dereferenceable(24)) #0 align 2 {
  %3 = alloca %"class.std::__1::map.561", align 16
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %6 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::map.561"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #12
  %12 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds i8, i8* %13, i64 %10
  %15 = bitcast i8* %14 to %"class.(anonymous namespace)::IconLoadingPipeline"*
  %16 = and i64 %7, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %2
  %19 = bitcast i8* %14 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = add i64 %7, -1
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = bitcast i8* %22 to void (%"class.(anonymous namespace)::IconLoadingPipeline"*, %"class.std::__1::map.561"*)**
  %24 = load void (%"class.(anonymous namespace)::IconLoadingPipeline"*, %"class.std::__1::map.561"*)*, void (%"class.(anonymous namespace)::IconLoadingPipeline"*, %"class.std::__1::map.561"*)** %23, align 8
  br label %27

25:                                               ; preds = %2
  %26 = inttoptr i64 %7 to void (%"class.(anonymous namespace)::IconLoadingPipeline"*, %"class.std::__1::map.561"*)*
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi void (%"class.(anonymous namespace)::IconLoadingPipeline"*, %"class.std::__1::map.561"*)* [ %24, %18 ], [ %26, %25 ]
  %29 = bitcast %"class.std::__1::map.561"* %1 to <2 x i64>*
  %30 = load <2 x i64>, <2 x i64>* %29, align 8
  %31 = bitcast %"class.std::__1::map.561"* %3 to <2 x i64>*
  store <2 x i64> %30, <2 x i64>* %31, align 16
  %32 = getelementptr inbounds %"class.std::__1::map.561", %"class.std::__1::map.561"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %33 = getelementptr inbounds %"class.std::__1::map.561", %"class.std::__1::map.561"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %34 = load i64, i64* %32, align 8
  store i64 %34, i64* %33, align 16
  %35 = icmp eq i64 %34, 0
  %36 = getelementptr inbounds %"class.std::__1::map.561", %"class.std::__1::map.561"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  br i1 %35, label %37, label %39

37:                                               ; preds = %27
  %38 = getelementptr inbounds %"class.std::__1::map.561", %"class.std::__1::map.561"* %3, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %36, %"class.std::__1::__tree_end_node"** %38, align 16
  br label %46

39:                                               ; preds = %27
  %40 = extractelement <2 x i64> %30, i32 1
  %41 = inttoptr i64 %40 to %"class.std::__1::__tree_node_base"*
  %42 = getelementptr inbounds %"class.std::__1::map.561", %"class.std::__1::map.561"* %1, i64 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %41, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %36, %"class.std::__1::__tree_end_node"** %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::map.561", %"class.std::__1::map.561"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %44, %"class.std::__1::__tree_end_node"** %42, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"* %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 16, i1 false) #12
  br label %46

46:                                               ; preds = %37, %39
  call void %28(%"class.(anonymous namespace)::IconLoadingPipeline"* %15, %"class.std::__1::map.561"* nonnull %3) #12
  %47 = getelementptr inbounds %"class.std::__1::map.561", %"class.std::__1::map.561"* %3, i64 0, i32 0
  %48 = bitcast %"class.std::__1::__tree_end_node"* %36 to %"class.std::__1::__tree_node"**
  %49 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %48, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIi8SkBitmapEENS_19__map_value_compareIiS3_NS_4lessIiEELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.562"* nonnull %47, %"class.std::__1::__tree_node"* %49) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIi8SkBitmapEENS_19__map_value_compareIiS3_NS_4lessIiEELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.562"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIi8SkBitmapEENS_19__map_value_compareIiS3_NS_4lessIiEELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.562"* %0, %"class.std::__1::__tree_node"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIi8SkBitmapEENS_19__map_value_compareIiS3_NS_4lessIiEELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.562"* %0, %"class.std::__1::__tree_node"* %9) #12
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %10) #12
  %11 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %11) #11
  ret void

12:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIMN12_GLOBAL__N_119IconLoadingPipelineEFvNSt3__13mapIi8SkBitmapNS4_4lessIiEENS4_9allocatorINS4_4pairIKiS6_EEEEEEEJ13scoped_refptrIS3_EEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %class.scoped_refptr.60*
  tail call fastcc void @_ZN13scoped_refptrIN12_GLOBAL__N_119IconLoadingPipelineEED2Ev(%class.scoped_refptr.60* %5) #12
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #11
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) unnamed_addr #2

declare void @_ZN4skia15ImageOperations6ResizeERK8SkBitmapNS0_12ResizeMethodEiiPNS1_9AllocatorE(%class.SkBitmap* sret, %class.SkBitmap* dereferenceable(56), i32, i32, i32, %"class.SkBitmap::Allocator"*) local_unnamed_addr #2

declare dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSEOS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #2

declare void @_ZN3gfx9ImageSkia17AddRepresentationERKNS_12ImageSkiaRepE(%"class.gfx::ImageSkia"*, %"class.gfx::ImageSkiaRep"* dereferenceable(192)) local_unnamed_addr #2

declare void @_ZN3gfx12ImageSkiaRepC1ERK8SkBitmapf(%"class.gfx::ImageSkiaRep"*, %class.SkBitmap* dereferenceable(56), float) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3gfx12ImageSkiaRepD1Ev(%"class.gfx::ImageSkiaRep"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFNSt3__16vectorIhNS3_9allocatorIhEEEENS_8FilePathEEJS8_EEEFS7_vEE7RunOnceEPNS0_13BindStateBaseE(%"class.std::__1::vector"* noalias sret, %"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %3 = alloca %"class.base::FilePath", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %1, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to void (%"class.std::__1::vector"*, %"class.base::FilePath"*)**
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %1, i64 1, i32 1
  %7 = bitcast void ()** %6 to %"class.base::FilePath"*
  %8 = bitcast %"class.base::FilePath"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #12, !noalias !362
  %9 = load void (%"class.std::__1::vector"*, %"class.base::FilePath"*)*, void (%"class.std::__1::vector"*, %"class.base::FilePath"*)** %5, align 8, !noalias !367
  call void @_ZN4base8FilePathC1EOS0_(%"class.base::FilePath"* nonnull %3, %"class.base::FilePath"* dereferenceable(24) %7) #12, !noalias !367
  call void %9(%"class.std::__1::vector"* sret %0, %"class.base::FilePath"* nonnull %3) #12
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #12, !noalias !362
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8FilePathC1EOS0_(%"class.base::FilePath"*, %"class.base::FilePath"* dereferenceable(24)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFNSt3__16vectorIhNS2_9allocatorIhEEEENS_8FilePathEEJS7_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::FilePath"*
  tail call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* %5) #12
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #11
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

declare %"class.gfx::ImageSkia"* @_ZN2ui14ResourceBundle17GetImageSkiaNamedEi(%"class.ui::ResourceBundle"*, i32) local_unnamed_addr #2

declare void @_ZN3gfx19ImageSkiaOperations18CreateResizedImageERKNS_9ImageSkiaEN4skia15ImageOperations12ResizeMethodERKNS_4SizeE(%"class.gfx::ImageSkia"* sret, %"class.gfx::ImageSkia"* dereferenceable(8), i32, %"class.gfx::Size"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #10

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_4pairIiiEEN3gfx9ImageSkiaEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS3_JNS2_IS3_S5_EEEEENS2_INS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.599"*, %"struct.std::__1::pair.609"* dereferenceable(8), %"struct.std::__1::pair.614"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.599", %"class.std::__1::__tree.599"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node.615"**
  %6 = load %"class.std::__1::__tree_node.615"*, %"class.std::__1::__tree_node.615"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node.615"* %6, null
  br i1 %7, label %46, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.599", %"class.std::__1::__tree.599"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::__1::pair.609", %"struct.std::__1::pair.609"* %1, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"struct.std::__1::pair.609", %"struct.std::__1::pair.609"* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  br label %14

14:                                               ; preds = %42, %8
  %15 = phi %"class.std::__1::__tree_node.615"* [ %45, %42 ], [ %6, %8 ]
  %16 = phi %"class.std::__1::__tree_node_base"** [ %44, %42 ], [ %9, %8 ]
  %17 = getelementptr inbounds %"class.std::__1::__tree_node.615", %"class.std::__1::__tree_node.615"* %15, i64 0, i32 1, i32 0, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %11, %18
  br i1 %19, label %26, label %20

20:                                               ; preds = %14
  %21 = icmp slt i32 %18, %11
  br i1 %21, label %34, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"class.std::__1::__tree_node.615", %"class.std::__1::__tree_node.615"* %15, i64 0, i32 1, i32 0, i32 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = icmp slt i32 %13, %24
  br i1 %25, label %26, label %32

26:                                               ; preds = %22, %14
  %27 = getelementptr inbounds %"class.std::__1::__tree_node.615", %"class.std::__1::__tree_node.615"* %15, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %28, null
  br i1 %29, label %30, label %42

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.std::__1::__tree_node.615", %"class.std::__1::__tree_node.615"* %15, i64 0, i32 0, i32 0
  br label %48

32:                                               ; preds = %22
  %33 = icmp slt i32 %24, %13
  br i1 %33, label %34, label %40

34:                                               ; preds = %32, %20
  %35 = getelementptr inbounds %"class.std::__1::__tree_node.615", %"class.std::__1::__tree_node.615"* %15, i64 0, i32 0, i32 1
  %36 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %35, align 8
  %37 = icmp eq %"class.std::__1::__tree_node_base"* %36, null
  br i1 %37, label %38, label %42

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.std::__1::__tree_node.615", %"class.std::__1::__tree_node.615"* %15, i64 0, i32 0, i32 0
  br label %48

40:                                               ; preds = %32
  %41 = getelementptr inbounds %"class.std::__1::__tree_node.615", %"class.std::__1::__tree_node.615"* %15, i64 0, i32 0, i32 0
  br label %48

42:                                               ; preds = %34, %26
  %43 = phi %"class.std::__1::__tree_node_base"* [ %28, %26 ], [ %36, %34 ]
  %44 = phi %"class.std::__1::__tree_node_base"** [ %27, %26 ], [ %35, %34 ]
  %45 = bitcast %"class.std::__1::__tree_node_base"* %43 to %"class.std::__1::__tree_node.615"*
  br label %14

46:                                               ; preds = %3
  %47 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %48

48:                                               ; preds = %30, %38, %40, %46
  %49 = phi %"class.std::__1::__tree_end_node"* [ %4, %46 ], [ %31, %30 ], [ %39, %38 ], [ %41, %40 ]
  %50 = phi %"class.std::__1::__tree_node_base"** [ %47, %46 ], [ %27, %30 ], [ %35, %38 ], [ %16, %40 ]
  %51 = bitcast %"class.std::__1::__tree_node_base"** %50 to %"class.std::__1::__tree_node.615"**
  %52 = load %"class.std::__1::__tree_node.615"*, %"class.std::__1::__tree_node.615"** %51, align 8
  %53 = icmp eq %"class.std::__1::__tree_node.615"* %52, null
  br i1 %53, label %54, label %84

54:                                               ; preds = %48
  %55 = tail call i8* @_Znwm(i64 48) #11, !noalias !370
  %56 = getelementptr inbounds i8, i8* %55, i64 32
  %57 = bitcast %"struct.std::__1::pair.614"* %2 to i64*
  %58 = bitcast i8* %56 to i64*
  %59 = load i64, i64* %57, align 4, !noalias !370
  store i64 %59, i64* %58, align 8, !noalias !370
  %60 = getelementptr inbounds i8, i8* %55, i64 40
  %61 = bitcast i8* %60 to %"class.gfx::ImageSkia"*
  %62 = getelementptr inbounds %"struct.std::__1::pair.614", %"struct.std::__1::pair.614"* %2, i64 0, i32 1
  tail call void @_ZN3gfx9ImageSkiaC1ERKS0_(%"class.gfx::ImageSkia"* %61, %"class.gfx::ImageSkia"* dereferenceable(8) %62) #12, !noalias !370
  %63 = bitcast i8* %55 to %"class.std::__1::__tree_node.615"*
  %64 = bitcast i8* %55 to %"class.std::__1::__tree_node_base"*
  %65 = getelementptr inbounds i8, i8* %55, i64 16
  %66 = bitcast i8* %65 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %49, %"class.std::__1::__tree_end_node"** %66, align 8
  %67 = bitcast %"class.std::__1::__tree_node_base"** %50 to i8**
  store i8* %55, i8** %67, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree.599", %"class.std::__1::__tree.599"* %0, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %68, align 8
  %70 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %69, i64 0, i32 0
  %71 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %70, align 8
  %72 = icmp eq %"class.std::__1::__tree_node_base"* %71, null
  br i1 %72, label %77, label %73

73:                                               ; preds = %54
  %74 = ptrtoint %"class.std::__1::__tree_node_base"* %71 to i64
  %75 = bitcast %"class.std::__1::__tree.599"* %0 to i64*
  store i64 %74, i64* %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %50, align 8
  br label %77

77:                                               ; preds = %73, %54
  %78 = phi %"class.std::__1::__tree_node_base"* [ %64, %54 ], [ %76, %73 ]
  %79 = getelementptr inbounds %"class.std::__1::__tree.599", %"class.std::__1::__tree.599"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"* %78) #12
  %81 = getelementptr inbounds %"class.std::__1::__tree.599", %"class.std::__1::__tree.599"* %0, i64 0, i32 2, i32 0, i32 0
  %82 = load i64, i64* %81, align 8
  %83 = add i64 %82, 1
  store i64 %83, i64* %81, align 8
  br label %84

84:                                               ; preds = %77, %48
  %85 = phi i8 [ 1, %77 ], [ 0, %48 ]
  %86 = phi %"class.std::__1::__tree_node.615"* [ %63, %77 ], [ %52, %48 ]
  %87 = getelementptr inbounds %"class.std::__1::__tree_node.615", %"class.std::__1::__tree_node.615"* %86, i64 0, i32 0, i32 0
  %88 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %87, 0
  %89 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %88, i8 %85, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %89
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !122
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !122
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !122
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base21CancelableTaskTrackerD1Ev(%"class.base::CancelableTaskTracker"*) unnamed_addr #3

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN4apps33CompressedDataToImageSkiaCallbackENS_12OnceCallbackIFvN3gfx9ImageSkiaEEEEfE3$_0JS8_fEEEFvNSt3__16vectorIhNSB_9allocatorIhEEEEEE7RunOnceEPNS0_13BindStateBaseEOSF_"(%"class.base::internal::BindStateBase"* nocapture, %"class.std::__1::vector"* nocapture dereferenceable(24)) #0 align 2 {
  %3 = alloca %"class.base::OnceCallback.1", align 8
  %4 = alloca %"class.base::OnceCallback.296", align 8
  %5 = alloca %"class.base::OnceCallback.296", align 8
  %6 = alloca %"class.gfx::ImageSkia", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = alloca %"class.base::OnceCallback.624", align 8
  %9 = alloca %"class.base::OnceCallback.1", align 8
  %10 = alloca %"class.base::OnceCallback.1", align 8
  %11 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %12 = getelementptr inbounds void ()*, void ()** %11, i64 1
  %13 = bitcast %"class.base::OnceCallback.1"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #12
  %14 = bitcast void ()** %11 to %"class.base::internal::BindStateBase"**
  %15 = bitcast void ()** %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.base::OnceCallback.1"* %10 to i64*
  store i64 %16, i64* %17, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %14, align 8
  %18 = bitcast void ()** %12 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = bitcast %"class.std::__1::vector"* %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %23 = bitcast i8** %22 to <2 x i64>*
  %24 = load <2 x i64>, <2 x i64>* %23, align 8
  %25 = bitcast %"class.std::__1::vector"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 24, i1 false) #12
  %26 = bitcast %"class.gfx::ImageSkia"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #12
  %27 = bitcast %"class.base::OnceCallback.624"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  %28 = bitcast %"class.base::OnceCallback.1"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #12
  %29 = inttoptr i64 %21 to i8*
  %30 = extractelement <2 x i64> %24, i32 0
  %31 = inttoptr i64 %30 to i8*
  %32 = icmp eq i8* %29, %31
  br i1 %32, label %33, label %43

33:                                               ; preds = %2
  call void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"* nonnull %6) #12
  %34 = bitcast %"class.base::OnceCallback.1"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #12
  %35 = getelementptr inbounds %"class.base::OnceCallback.1", %"class.base::OnceCallback.1"* %10, i64 0, i32 0, i32 0, i32 0
  %36 = load i64, i64* %17, align 8
  %37 = bitcast %"class.base::OnceCallback.1"* %3 to i64*
  store i64 %36, i64* %37, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %35, align 8
  %38 = getelementptr inbounds %"class.base::OnceCallback.1", %"class.base::OnceCallback.1"* %3, i64 0, i32 0
  %39 = inttoptr i64 %36 to %"class.base::internal::BindStateBase"*
  %40 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %39, i64 0, i32 1
  %41 = bitcast void ()** %40 to void (%"class.base::internal::BindStateBase"*, %"class.gfx::ImageSkia"*)**
  %42 = load void (%"class.base::internal::BindStateBase"*, %"class.gfx::ImageSkia"*)*, void (%"class.base::internal::BindStateBase"*, %"class.gfx::ImageSkia"*)** %41, align 8
  call void %42(%"class.base::internal::BindStateBase"* %39, %"class.gfx::ImageSkia"* nonnull dereferenceable(8) %6) #12
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %38) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #12
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* nonnull %6) #12
  br label %86

43:                                               ; preds = %2
  %44 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %44) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 1186) #12
  %45 = call i8* @_Znwm(i64 72) #11, !noalias !373
  %46 = bitcast i8* %45 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %46, void ()* bitcast (void (%"class.gfx::ImageSkia"*, %"class.base::internal::BindStateBase"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZZN4apps33CompressedDataToImageSkiaCallbackENS_12OnceCallbackIFvN3gfx9ImageSkiaEEEEfENK3$_0clES8_fNSt3__16vectorIhNSA_9allocatorIhEEEEEUlSE_fE_JSE_fEEEFS6_vEE7RunOnceEPNS0_13BindStateBaseE" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZZN4apps33CompressedDataToImageSkiaCallbackENS_12OnceCallbackIFvN3gfx9ImageSkiaEEEEfENK3$_0clES7_fNSt3__16vectorIhNS9_9allocatorIhEEEEEUlSD_fE_JSD_fEE7DestroyEPKNS0_13BindStateBaseE") #12, !noalias !373
  %47 = getelementptr inbounds i8, i8* %45, i64 40
  %48 = bitcast i8* %47 to i64*
  store i64 %21, i64* %48, align 8, !noalias !373
  %49 = getelementptr inbounds i8, i8* %45, i64 48
  %50 = bitcast i8* %49 to <2 x i64>*
  store <2 x i64> %24, <2 x i64>* %50, align 8, !noalias !373
  %51 = getelementptr inbounds i8, i8* %45, i64 64
  %52 = bitcast i8* %51 to i32*
  store i32 %19, i32* %52, align 4, !noalias !373
  %53 = getelementptr inbounds %"class.base::OnceCallback.1", %"class.base::OnceCallback.1"* %10, i64 0, i32 0, i32 0, i32 0
  %54 = load i64, i64* %17, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %53, align 8
  %55 = bitcast %"class.base::OnceCallback.296"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #12
  %56 = bitcast %"class.base::OnceCallback.296"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #12
  %57 = call i8* @_Znwm(i64 8) #11
  %58 = bitcast i8* %57 to i64*
  store i64 0, i64* %58, align 8
  %59 = ptrtoint i8* %57 to i64
  %60 = call i8* @_Znwm(i64 56) #11, !noalias !378
  %61 = bitcast i8* %60 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %61, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFN3gfx9ImageSkiaEvEEEPNSt3__110unique_ptrIS5_NS8_14default_deleteIS5_EEEEEJS7_SD_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFN3gfx9ImageSkiaEvEEEPNSt3__110unique_ptrIS4_NS7_14default_deleteIS4_EEEEEJS6_SC_EE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !378
  %62 = getelementptr inbounds i8, i8* %60, i64 32
  %63 = bitcast i8* %62 to i64*
  store i64 ptrtoint (void (%"class.base::OnceCallback.624"*, %"class.std::__1::unique_ptr.627"*)* @_ZN4base8internal20ReturnAsParamAdapterIN3gfx9ImageSkiaEEEvNS_12OnceCallbackIFT_vEEEPNSt3__110unique_ptrIS5_NS8_14default_deleteIS5_EEEE to i64), i64* %63, align 8, !noalias !378
  %64 = getelementptr inbounds i8, i8* %60, i64 40
  %65 = getelementptr inbounds %"class.base::OnceCallback.624", %"class.base::OnceCallback.624"* %8, i64 0, i32 0, i32 0, i32 0
  %66 = ptrtoint i8* %45 to i64
  %67 = bitcast i8* %64 to i64*
  store i64 %66, i64* %67, align 8, !noalias !378
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %65, align 8, !noalias !378
  %68 = getelementptr inbounds i8, i8* %60, i64 48
  %69 = bitcast i8* %68 to i64*
  store i64 %59, i64* %69, align 8, !noalias !378
  %70 = bitcast %"class.base::OnceCallback.296"* %4 to i8**
  store i8* %60, i8** %70, align 8, !alias.scope !378
  %71 = call i8* @_Znwm(i64 56) #11, !noalias !383
  %72 = bitcast i8* %71 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %72, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvN3gfx9ImageSkiaEEEEPNSt3__110unique_ptrIS5_NS8_14default_deleteIS5_EEEEEJS7_NS0_12OwnedWrapperISC_NSA_ISC_EEEEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvN3gfx9ImageSkiaEEEEPNSt3__110unique_ptrIS4_NS7_14default_deleteIS4_EEEEEJS6_NS0_12OwnedWrapperISB_NS9_ISB_EEEEEE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !383
  %73 = getelementptr inbounds i8, i8* %71, i64 32
  %74 = bitcast i8* %73 to i64*
  store i64 ptrtoint (void (%"class.base::OnceCallback.1"*, %"class.std::__1::unique_ptr.627"*)* @_ZN4base8internal12ReplyAdapterIN3gfx9ImageSkiaES3_EEvNS_12OnceCallbackIFvT0_EEEPNSt3__110unique_ptrIT_NS8_14default_deleteISA_EEEE to i64), i64* %74, align 8, !noalias !383
  %75 = getelementptr inbounds i8, i8* %71, i64 40
  %76 = getelementptr inbounds %"class.base::OnceCallback.1", %"class.base::OnceCallback.1"* %9, i64 0, i32 0, i32 0, i32 0
  %77 = bitcast i8* %75 to i64*
  store i64 %54, i64* %77, align 8, !noalias !383
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %76, align 8, !noalias !383
  %78 = getelementptr inbounds i8, i8* %71, i64 48
  %79 = bitcast i8* %78 to i64*
  store i64 %59, i64* %79, align 8, !noalias !383
  %80 = bitcast %"class.base::OnceCallback.296"* %5 to i8**
  store i8* %71, i8** %80, align 8, !alias.scope !383
  %81 = call zeroext i1 @_ZN4base10ThreadPool16PostTaskAndReplyERKNS_8LocationERKNS_10TaskTraitsENS_12OnceCallbackIFvvEEES9_(%"class.base::Location"* nonnull dereferenceable(32) %7, %"class.base::TaskTraits"* nonnull dereferenceable(15) @.ref.tmp.13, %"class.base::OnceCallback.296"* nonnull %4, %"class.base::OnceCallback.296"* nonnull %5) #12
  %82 = getelementptr inbounds %"class.base::OnceCallback.296", %"class.base::OnceCallback.296"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %82) #12
  %83 = getelementptr inbounds %"class.base::OnceCallback.296", %"class.base::OnceCallback.296"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %83) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #12
  %84 = getelementptr inbounds %"class.base::OnceCallback.1", %"class.base::OnceCallback.1"* %9, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %84) #12
  %85 = getelementptr inbounds %"class.base::OnceCallback.624", %"class.base::OnceCallback.624"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %85) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %44) #12
  br label %86

86:                                               ; preds = %43, %33
  %87 = phi i8* [ %29, %33 ], [ null, %43 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #12
  %88 = icmp eq i8* %87, null
  br i1 %88, label %90, label %89

89:                                               ; preds = %86
  call void @_ZdlPv(i8* nonnull %87) #11
  br label %90

90:                                               ; preds = %86, %89
  %91 = getelementptr inbounds %"class.base::OnceCallback.1", %"class.base::OnceCallback.1"* %10, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %91) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal20ReturnAsParamAdapterIN3gfx9ImageSkiaEEEvNS_12OnceCallbackIFT_vEEEPNSt3__110unique_ptrIS5_NS8_14default_deleteIS5_EEEE(%"class.base::OnceCallback.624"*, %"class.std::__1::unique_ptr.627"*) #0 comdat {
  %3 = alloca %"class.base::OnceCallback.624", align 8
  %4 = tail call i8* @_Znwm(i64 8) #11
  %5 = bitcast i8* %4 to %"class.gfx::ImageSkia"*
  %6 = bitcast %"class.base::OnceCallback.624"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12, !noalias !388
  %7 = getelementptr inbounds %"class.base::OnceCallback.624", %"class.base::OnceCallback.624"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.base::OnceCallback.624"* %0 to i64*
  %9 = load i64, i64* %8, align 8, !noalias !388
  %10 = bitcast %"class.base::OnceCallback.624"* %3 to i64*
  store i64 %9, i64* %10, align 8, !noalias !388
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %7, align 8, !noalias !388
  %11 = getelementptr inbounds %"class.base::OnceCallback.624", %"class.base::OnceCallback.624"* %3, i64 0, i32 0
  %12 = inttoptr i64 %9 to %"class.base::internal::BindStateBase"*
  %13 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %12, i64 0, i32 1
  %14 = bitcast void ()** %13 to void (%"class.gfx::ImageSkia"*, %"class.base::internal::BindStateBase"*)**
  %15 = load void (%"class.gfx::ImageSkia"*, %"class.base::internal::BindStateBase"*)*, void (%"class.gfx::ImageSkia"*, %"class.base::internal::BindStateBase"*)** %14, align 8, !noalias !388
  tail call void %15(%"class.gfx::ImageSkia"* nonnull sret %5, %"class.base::internal::BindStateBase"* %12) #12
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12, !noalias !388
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.627", %"class.std::__1::unique_ptr.627"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"** %16, align 8
  %18 = bitcast %"class.std::__1::unique_ptr.627"* %1 to i8**
  store i8* %4, i8** %18, align 8
  %19 = icmp eq %"class.gfx::ImageSkia"* %17, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %2
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* nonnull %17) #12
  %21 = bitcast %"class.gfx::ImageSkia"* %17 to i8*
  call void @_ZdlPv(i8* %21) #11
  br label %22

22:                                               ; preds = %2, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12ReplyAdapterIN3gfx9ImageSkiaES3_EEvNS_12OnceCallbackIFvT0_EEEPNSt3__110unique_ptrIT_NS8_14default_deleteISA_EEEE(%"class.base::OnceCallback.1"*, %"class.std::__1::unique_ptr.627"*) #0 comdat {
  %3 = alloca %"class.base::OnceCallback.1", align 8
  %4 = alloca %"class.gfx::ImageSkia", align 8
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.627", %"class.std::__1::unique_ptr.627"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"** %5, align 8
  call void @_ZN3gfx9ImageSkiaC1ERKS0_(%"class.gfx::ImageSkia"* nonnull %4, %"class.gfx::ImageSkia"* dereferenceable(8) %6) #12
  %7 = bitcast %"class.base::OnceCallback.1"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.base::OnceCallback.1", %"class.base::OnceCallback.1"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.base::OnceCallback.1"* %0 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.base::OnceCallback.1"* %3 to i64*
  store i64 %10, i64* %11, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %12 = getelementptr inbounds %"class.base::OnceCallback.1", %"class.base::OnceCallback.1"* %3, i64 0, i32 0
  %13 = inttoptr i64 %10 to %"class.base::internal::BindStateBase"*
  %14 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %13, i64 0, i32 1
  %15 = bitcast void ()** %14 to void (%"class.base::internal::BindStateBase"*, %"class.gfx::ImageSkia"*)**
  %16 = load void (%"class.base::internal::BindStateBase"*, %"class.gfx::ImageSkia"*)*, void (%"class.base::internal::BindStateBase"*, %"class.gfx::ImageSkia"*)** %15, align 8
  call void %16(%"class.base::internal::BindStateBase"* %13, %"class.gfx::ImageSkia"* nonnull dereferenceable(8) %4) #12
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %12) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* nonnull %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFN3gfx9ImageSkiaEvEEEPNSt3__110unique_ptrIS5_NS8_14default_deleteIS5_EEEEEJS7_SD_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback.624", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = bitcast %"class.base::internal::BindStateBase"* %3 to void (%"class.base::OnceCallback.624"*, %"class.std::__1::unique_ptr.627"*)**
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = getelementptr inbounds void ()*, void ()** %5, i64 1
  %7 = bitcast void ()** %6 to %"class.std::__1::unique_ptr.627"**
  %8 = bitcast %"class.base::OnceCallback.624"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #12
  %9 = load void (%"class.base::OnceCallback.624"*, %"class.std::__1::unique_ptr.627"*)*, void (%"class.base::OnceCallback.624"*, %"class.std::__1::unique_ptr.627"*)** %4, align 8
  %10 = bitcast void ()** %5 to %"class.base::internal::BindStateBase"**
  %11 = bitcast void ()** %5 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback.624"* %2 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = load %"class.std::__1::unique_ptr.627"*, %"class.std::__1::unique_ptr.627"** %7, align 8
  call void %9(%"class.base::OnceCallback.624"* nonnull %2, %"class.std::__1::unique_ptr.627"* %14) #12
  %15 = getelementptr inbounds %"class.base::OnceCallback.624", %"class.base::OnceCallback.624"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFN3gfx9ImageSkiaEvEEEPNSt3__110unique_ptrIS4_NS7_14default_deleteIS4_EEEEEJS6_SC_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #12
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #11
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvN3gfx9ImageSkiaEEEEPNSt3__110unique_ptrIS5_NS8_14default_deleteIS5_EEEEEJS7_NS0_12OwnedWrapperISC_NSA_ISC_EEEEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback.1", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = bitcast %"class.base::internal::BindStateBase"* %3 to void (%"class.base::OnceCallback.1"*, %"class.std::__1::unique_ptr.627"*)**
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = getelementptr inbounds void ()*, void ()** %5, i64 1
  %7 = bitcast void ()** %6 to %"class.std::__1::unique_ptr.627"**
  %8 = load %"class.std::__1::unique_ptr.627"*, %"class.std::__1::unique_ptr.627"** %7, align 8
  %9 = bitcast %"class.base::OnceCallback.1"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = load void (%"class.base::OnceCallback.1"*, %"class.std::__1::unique_ptr.627"*)*, void (%"class.base::OnceCallback.1"*, %"class.std::__1::unique_ptr.627"*)** %4, align 8
  %11 = bitcast void ()** %5 to %"class.base::internal::BindStateBase"**
  %12 = bitcast void ()** %5 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::OnceCallback.1"* %2 to i64*
  store i64 %13, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  call void %10(%"class.base::OnceCallback.1"* nonnull %2, %"class.std::__1::unique_ptr.627"* %8) #12
  %15 = getelementptr inbounds %"class.base::OnceCallback.1", %"class.base::OnceCallback.1"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvN3gfx9ImageSkiaEEEEPNSt3__110unique_ptrIS4_NS7_14default_deleteIS4_EEEEEJS6_NS0_12OwnedWrapperISB_NS9_ISB_EEEEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %20, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.std::__1::unique_ptr.627"**
  %6 = load %"class.std::__1::unique_ptr.627"*, %"class.std::__1::unique_ptr.627"** %5, align 8
  store %"class.std::__1::unique_ptr.627"* null, %"class.std::__1::unique_ptr.627"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.627"* %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr.627", %"class.std::__1::unique_ptr.627"* %6, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"** %9, align 8
  store %"class.gfx::ImageSkia"* null, %"class.gfx::ImageSkia"** %9, align 8
  %11 = icmp eq %"class.gfx::ImageSkia"* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  tail call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* nonnull %10) #12
  %13 = bitcast %"class.gfx::ImageSkia"* %10 to i8*
  tail call void @_ZdlPv(i8* %13) #11
  br label %14

14:                                               ; preds = %12, %8
  %15 = bitcast %"class.std::__1::unique_ptr.627"* %6 to i8*
  tail call void @_ZdlPv(i8* %15) #11
  br label %16

16:                                               ; preds = %3, %14
  %17 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %18 = bitcast void ()** %17 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %18) #12
  %19 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %19) #11
  br label %20

20:                                               ; preds = %16, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZZN4apps33CompressedDataToImageSkiaCallbackENS_12OnceCallbackIFvN3gfx9ImageSkiaEEEEfENK3$_0clES8_fNSt3__16vectorIhNSA_9allocatorIhEEEEEUlSE_fE_JSE_fEEEFS6_vEE7RunOnceEPNS0_13BindStateBaseE"(%"class.gfx::ImageSkia"* noalias sret, %"class.base::internal::BindStateBase"* nocapture) #0 align 2 {
  %3 = alloca %class.SkBitmap, align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %1, i64 1, i32 1
  %5 = getelementptr inbounds void ()*, void ()** %4, i64 3
  %6 = bitcast void ()** %5 to float*
  %7 = bitcast void ()** %4 to i64*
  %8 = load i64, i64* %7, align 8, !noalias !391
  %9 = getelementptr inbounds void ()*, void ()** %4, i64 1
  %10 = bitcast void ()** %9 to i64*
  %11 = load i64, i64* %10, align 8, !noalias !391
  %12 = bitcast void ()** %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #12, !noalias !391
  %13 = load float, float* %6, align 4, !noalias !391
  %14 = bitcast %class.SkBitmap* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %14) #12, !noalias !391
  %15 = inttoptr i64 %8 to i8*
  %16 = sub i64 %11, %8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 56, i1 false) #12, !alias.scope !398, !noalias !401
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %3) #12, !noalias !401
  %17 = call zeroext i1 @_ZN3gfx8PNGCodec6DecodeEPKhmP8SkBitmap(i8* %15, i64 %16, %class.SkBitmap* nonnull %3) #12, !noalias !401
  call void @_ZN3gfx9ImageSkia16CreateFromBitmapERK8SkBitmapf(%"class.gfx::ImageSkia"* sret %0, %class.SkBitmap* nonnull dereferenceable(56) %3, float %13) #12
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %14) #12, !noalias !391
  %18 = icmp eq i64 %8, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %2
  call void @_ZdlPv(i8* nonnull %15) #11
  br label %20

20:                                               ; preds = %2, %19
  ret void
}

declare void @_ZN3gfx9ImageSkia16CreateFromBitmapERK8SkBitmapf(%"class.gfx::ImageSkia"* sret, %class.SkBitmap* dereferenceable(56), float) local_unnamed_addr #2

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #2

declare zeroext i1 @_ZN3gfx8PNGCodec6DecodeEPKhmP8SkBitmap(i8*, i64, %class.SkBitmap*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZZN4apps33CompressedDataToImageSkiaCallbackENS_12OnceCallbackIFvN3gfx9ImageSkiaEEEEfENK3$_0clES7_fNSt3__16vectorIhNS9_9allocatorIhEEEEEUlSD_fE_JSD_fEE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %14, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %3
  %9 = ptrtoint i8* %6 to i64
  %10 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %11 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to i64*
  store i64 %9, i64* %11, align 8
  tail call void @_ZdlPv(i8* nonnull %6) #11
  br label %12

12:                                               ; preds = %3, %8
  %13 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #11
  br label %14

14:                                               ; preds = %12, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN4apps33CompressedDataToImageSkiaCallbackENS_12OnceCallbackIFvN3gfx9ImageSkiaEEEEfE3$_0JS7_fEE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #12
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #11
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base21CancelableTaskTrackerC1Ev(%"class.base::CancelableTaskTracker"*) unnamed_addr #2

declare i32 @_ZN9apps_util14ConvertDipToPxEib(i32, i1 zeroext) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nofree nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN4apps33CompressedDataToImageSkiaCallbackENS2_IFvN3gfx9ImageSkiaEEEEfE3$_0JS7_RfEEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN4apps33CompressedDataToImageSkiaCallbackENS2_IFvN3gfx9ImageSkiaEEEEfE3$_0JS7_RfEEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIZN4apps33CompressedDataToImageSkiaCallbackENS_12OnceCallbackIFvN3gfx9ImageSkiaEEEEfE3$_0JS6_RfEEENS2_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIZN4apps33CompressedDataToImageSkiaCallbackENS_12OnceCallbackIFvN3gfx9ImageSkiaEEEEfE3$_0JS6_RfEEENS2_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN4apps5mojom9IconValue3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_: argument 0"}
!9 = distinct !{!9, !"_ZN4apps5mojom9IconValue3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_"}
!10 = !{!11, !13}
!11 = distinct !{!11, !12, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN12_GLOBAL__N_119IconLoadingPipelineEFvNSt3__16vectorIhNS5_9allocatorIhEEEEEJ13scoped_refptrIS4_EEEEDcOT0_DpOT1_: argument 0"}
!12 = distinct !{!12, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN12_GLOBAL__N_119IconLoadingPipelineEFvNSt3__16vectorIhNS5_9allocatorIhEEEEEJ13scoped_refptrIS4_EEEEDcOT0_DpOT1_"}
!13 = distinct !{!13, !14, !"_ZN4base8BindOnceIMN12_GLOBAL__N_119IconLoadingPipelineEFvNSt3__16vectorIhNS3_9allocatorIhEEEEEJ13scoped_refptrIS2_EEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_: argument 0"}
!14 = distinct !{!14, !"_ZN4base8BindOnceIMN12_GLOBAL__N_119IconLoadingPipelineEFvNSt3__16vectorIhNS3_9allocatorIhEEEEEJ13scoped_refptrIS2_EEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_"}
!15 = !{!16}
!16 = distinct !{!16, !17}
!17 = distinct !{!17, !"LVerDomain"}
!18 = !{!19}
!19 = distinct !{!19, !17}
!20 = distinct !{!20, !21}
!21 = !{!"llvm.loop.isvectorized", i32 1}
!22 = distinct !{!22, !23}
!23 = !{!"llvm.loop.unroll.disable"}
!24 = distinct !{!24, !21}
!25 = !{!26, !28}
!26 = distinct !{!26, !27, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFNSt3__16vectorIhNS3_9allocatorIhEEEEN10extensions17ExtensionResourceEEJS9_EEEDcOT0_DpOT1_: argument 0"}
!27 = distinct !{!27, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFNSt3__16vectorIhNS3_9allocatorIhEEEEN10extensions17ExtensionResourceEEJS9_EEEDcOT0_DpOT1_"}
!28 = distinct !{!28, !29, !"_ZN4base8BindOnceIPFNSt3__16vectorIhNS1_9allocatorIhEEEEN10extensions17ExtensionResourceEEJS7_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!29 = distinct !{!29, !"_ZN4base8BindOnceIPFNSt3__16vectorIhNS1_9allocatorIhEEEEN10extensions17ExtensionResourceEEJS7_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
!30 = !{!31, !33}
!31 = distinct !{!31, !32, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFNSt3__16vectorIhNS3_9allocatorIhEEEEvEEEPNS3_10unique_ptrIS7_NS3_14default_deleteIS7_EEEEEJS9_RSE_EEEDcOT0_DpOT1_: argument 0"}
!32 = distinct !{!32, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFNSt3__16vectorIhNS3_9allocatorIhEEEEvEEEPNS3_10unique_ptrIS7_NS3_14default_deleteIS7_EEEEEJS9_RSE_EEEDcOT0_DpOT1_"}
!33 = distinct !{!33, !34, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFNSt3__16vectorIhNS2_9allocatorIhEEEEvEEEPNS2_10unique_ptrIS6_NS2_14default_deleteIS6_EEEEEJS8_RSD_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!34 = distinct !{!34, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFNSt3__16vectorIhNS2_9allocatorIhEEEEvEEEPNS2_10unique_ptrIS6_NS2_14default_deleteIS6_EEEEEJS8_RSD_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
!35 = !{!36, !38}
!36 = distinct !{!36, !37, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__16vectorIhNS3_9allocatorIhEEEEEEEPNS3_10unique_ptrIS7_NS3_14default_deleteIS7_EEEEEJS9_NS0_12OwnedWrapperISD_NSB_ISD_EEEEEEEDcOT0_DpOT1_: argument 0"}
!37 = distinct !{!37, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__16vectorIhNS3_9allocatorIhEEEEEEEPNS3_10unique_ptrIS7_NS3_14default_deleteIS7_EEEEEJS9_NS0_12OwnedWrapperISD_NSB_ISD_EEEEEEEDcOT0_DpOT1_"}
!38 = distinct !{!38, !39, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__16vectorIhNS2_9allocatorIhEEEEEEEPNS2_10unique_ptrIS6_NS2_14default_deleteIS6_EEEEEJS8_NS_8internal12OwnedWrapperISC_NSA_ISC_EEEEEEENS1_INSG_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_: argument 0"}
!39 = distinct !{!39, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__16vectorIhNS2_9allocatorIhEEEEEEEPNS2_10unique_ptrIS6_NS2_14default_deleteIS6_EEEEEJS8_NS_8internal12OwnedWrapperISC_NSA_ISC_EEEEEEENS1_INSG_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_"}
!40 = !{!41, !43}
!41 = distinct !{!41, !42, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN12_GLOBAL__N_119IconLoadingPipelineEFvN3gfx9ImageSkiaEEJ13scoped_refptrIS4_EEEEDcOT0_DpOT1_: argument 0"}
!42 = distinct !{!42, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN12_GLOBAL__N_119IconLoadingPipelineEFvN3gfx9ImageSkiaEEJ13scoped_refptrIS4_EEEEDcOT0_DpOT1_"}
!43 = distinct !{!43, !44, !"_ZN4base8BindOnceIMN12_GLOBAL__N_119IconLoadingPipelineEFvN3gfx9ImageSkiaEEJ13scoped_refptrIS2_EEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_: argument 0"}
!44 = distinct !{!44, !"_ZN4base8BindOnceIMN12_GLOBAL__N_119IconLoadingPipelineEFvN3gfx9ImageSkiaEEJ13scoped_refptrIS2_EEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_"}
!45 = !{!46, !48, !50}
!46 = distinct !{!46, !47, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN12_GLOBAL__N_116ImageToImageSkiaENS2_IFvN3gfx9ImageSkiaEEEEE3$_1JS7_EEEDcOT0_DpOT1_: argument 0"}
!47 = distinct !{!47, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN12_GLOBAL__N_116ImageToImageSkiaENS2_IFvN3gfx9ImageSkiaEEEEE3$_1JS7_EEEDcOT0_DpOT1_"}
!48 = distinct !{!48, !49, !"_ZN4base8BindOnceIZN12_GLOBAL__N_116ImageToImageSkiaENS_12OnceCallbackIFvN3gfx9ImageSkiaEEEEE3$_1JS6_EEENS2_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!49 = distinct !{!49, !"_ZN4base8BindOnceIZN12_GLOBAL__N_116ImageToImageSkiaENS_12OnceCallbackIFvN3gfx9ImageSkiaEEEEE3$_1JS6_EEENS2_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!50 = distinct !{!50, !51, !"_ZN12_GLOBAL__N_116ImageToImageSkiaEN4base12OnceCallbackIFvN3gfx9ImageSkiaEEEE: argument 0"}
!51 = distinct !{!51, !"_ZN12_GLOBAL__N_116ImageToImageSkiaEN4base12OnceCallbackIFvN3gfx9ImageSkiaEEEE"}
!52 = !{!53, !55}
!53 = distinct !{!53, !54, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN12_GLOBAL__N_119IconLoadingPipelineEFvNSt3__16vectorIhNS5_9allocatorIhEEEEEJ13scoped_refptrIS4_EEEEDcOT0_DpOT1_: argument 0"}
!54 = distinct !{!54, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN12_GLOBAL__N_119IconLoadingPipelineEFvNSt3__16vectorIhNS5_9allocatorIhEEEEEJ13scoped_refptrIS4_EEEEDcOT0_DpOT1_"}
!55 = distinct !{!55, !56, !"_ZN4base8BindOnceIMN12_GLOBAL__N_119IconLoadingPipelineEFvNSt3__16vectorIhNS3_9allocatorIhEEEEEJ13scoped_refptrIS2_EEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_: argument 0"}
!56 = distinct !{!56, !"_ZN4base8BindOnceIMN12_GLOBAL__N_119IconLoadingPipelineEFvNSt3__16vectorIhNS3_9allocatorIhEEEEEJ13scoped_refptrIS2_EEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_"}
!57 = !{!58, !60}
!58 = distinct !{!58, !59, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN12_GLOBAL__N_119IconLoadingPipelineEFvNSt3__13mapIi8SkBitmapNS5_4lessIiEENS5_9allocatorINS5_4pairIKiS7_EEEEEEEJ13scoped_refptrIS4_EEEEDcOT0_DpOT1_: argument 0"}
!59 = distinct !{!59, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN12_GLOBAL__N_119IconLoadingPipelineEFvNSt3__13mapIi8SkBitmapNS5_4lessIiEENS5_9allocatorINS5_4pairIKiS7_EEEEEEEJ13scoped_refptrIS4_EEEEDcOT0_DpOT1_"}
!60 = distinct !{!60, !61, !"_ZN4base8BindOnceIMN12_GLOBAL__N_119IconLoadingPipelineEFvNSt3__13mapIi8SkBitmapNS3_4lessIiEENS3_9allocatorINS3_4pairIKiS5_EEEEEEEJ13scoped_refptrIS2_EEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_: argument 0"}
!61 = distinct !{!61, !"_ZN4base8BindOnceIMN12_GLOBAL__N_119IconLoadingPipelineEFvNSt3__13mapIi8SkBitmapNS3_4lessIiEENS3_9allocatorINS3_4pairIKiS5_EEEEEEEJ13scoped_refptrIS2_EEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_"}
!62 = !{!"branch_weights", i32 1, i32 2000}
!63 = !{!64, !66}
!64 = distinct !{!64, !65, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFNSt3__16vectorIhNS3_9allocatorIhEEEENS_8FilePathEEJRKS8_EEEDcOT0_DpOT1_: argument 0"}
!65 = distinct !{!65, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFNSt3__16vectorIhNS3_9allocatorIhEEEENS_8FilePathEEJRKS8_EEEDcOT0_DpOT1_"}
!66 = distinct !{!66, !67, !"_ZN4base8BindOnceIPFNSt3__16vectorIhNS1_9allocatorIhEEEENS_8FilePathEEJRKS6_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!67 = distinct !{!67, !"_ZN4base8BindOnceIPFNSt3__16vectorIhNS1_9allocatorIhEEEENS_8FilePathEEJRKS6_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!68 = !{!69, !71}
!69 = distinct !{!69, !70, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN12_GLOBAL__N_119IconLoadingPipelineEFvN3gfx9ImageSkiaEEJ13scoped_refptrIS4_EEEEDcOT0_DpOT1_: argument 0"}
!70 = distinct !{!70, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN12_GLOBAL__N_119IconLoadingPipelineEFvN3gfx9ImageSkiaEEJ13scoped_refptrIS4_EEEEDcOT0_DpOT1_"}
!71 = distinct !{!71, !72, !"_ZN4base8BindOnceIMN12_GLOBAL__N_119IconLoadingPipelineEFvN3gfx9ImageSkiaEEJ13scoped_refptrIS2_EEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_: argument 0"}
!72 = distinct !{!72, !"_ZN4base8BindOnceIMN12_GLOBAL__N_119IconLoadingPipelineEFvN3gfx9ImageSkiaEEJ13scoped_refptrIS2_EEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_"}
!73 = !{!74, !76, !78}
!74 = distinct !{!74, !75, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN4apps33CompressedDataToImageSkiaCallbackENS2_IFvN3gfx9ImageSkiaEEEEfE3$_0JS7_RfEEEDcOT0_DpOT1_: argument 0"}
!75 = distinct !{!75, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN4apps33CompressedDataToImageSkiaCallbackENS2_IFvN3gfx9ImageSkiaEEEEfE3$_0JS7_RfEEEDcOT0_DpOT1_"}
!76 = distinct !{!76, !77, !"_ZN4base8BindOnceIZN4apps33CompressedDataToImageSkiaCallbackENS_12OnceCallbackIFvN3gfx9ImageSkiaEEEEfE3$_0JS6_RfEEENS2_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!77 = distinct !{!77, !"_ZN4base8BindOnceIZN4apps33CompressedDataToImageSkiaCallbackENS_12OnceCallbackIFvN3gfx9ImageSkiaEEEEfE3$_0JS6_RfEEENS2_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!78 = distinct !{!78, !79, !"_ZN4apps33CompressedDataToImageSkiaCallbackEN4base12OnceCallbackIFvN3gfx9ImageSkiaEEEEf: argument 0"}
!79 = distinct !{!79, !"_ZN4apps33CompressedDataToImageSkiaCallbackEN4base12OnceCallbackIFvN3gfx9ImageSkiaEEEEf"}
!80 = !{!81, !83}
!81 = distinct !{!81, !82, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFNSt3__16vectorIhNS3_9allocatorIhEEEEvEEEPNS3_10unique_ptrIS7_NS3_14default_deleteIS7_EEEEEJS9_RSE_EEEDcOT0_DpOT1_: argument 0"}
!82 = distinct !{!82, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFNSt3__16vectorIhNS3_9allocatorIhEEEEvEEEPNS3_10unique_ptrIS7_NS3_14default_deleteIS7_EEEEEJS9_RSE_EEEDcOT0_DpOT1_"}
!83 = distinct !{!83, !84, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFNSt3__16vectorIhNS2_9allocatorIhEEEEvEEEPNS2_10unique_ptrIS6_NS2_14default_deleteIS6_EEEEEJS8_RSD_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!84 = distinct !{!84, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFNSt3__16vectorIhNS2_9allocatorIhEEEEvEEEPNS2_10unique_ptrIS6_NS2_14default_deleteIS6_EEEEEJS8_RSD_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
!85 = !{!86, !88}
!86 = distinct !{!86, !87, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__16vectorIhNS3_9allocatorIhEEEEEEEPNS3_10unique_ptrIS7_NS3_14default_deleteIS7_EEEEEJS9_NS0_12OwnedWrapperISD_NSB_ISD_EEEEEEEDcOT0_DpOT1_: argument 0"}
!87 = distinct !{!87, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__16vectorIhNS3_9allocatorIhEEEEEEEPNS3_10unique_ptrIS7_NS3_14default_deleteIS7_EEEEEJS9_NS0_12OwnedWrapperISD_NSB_ISD_EEEEEEEDcOT0_DpOT1_"}
!88 = distinct !{!88, !89, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__16vectorIhNS2_9allocatorIhEEEEEEEPNS2_10unique_ptrIS6_NS2_14default_deleteIS6_EEEEEJS8_NS_8internal12OwnedWrapperISC_NSA_ISC_EEEEEEENS1_INSG_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_: argument 0"}
!89 = distinct !{!89, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__16vectorIhNS2_9allocatorIhEEEEEEEPNS2_10unique_ptrIS6_NS2_14default_deleteIS6_EEEEEJS8_NS_8internal12OwnedWrapperISC_NSA_ISC_EEEEEEENS1_INSG_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_"}
!90 = !{!91}
!91 = distinct !{!91, !92}
!92 = distinct !{!92, !"LVerDomain"}
!93 = !{!94}
!94 = distinct !{!94, !92}
!95 = distinct !{!95, !21}
!96 = distinct !{!96, !23}
!97 = distinct !{!97, !21}
!98 = !{!99, !101}
!99 = distinct !{!99, !100, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN12_GLOBAL__N_119IconLoadingPipelineEFvN3gfx9ImageSkiaEEJ13scoped_refptrIS4_EEEEDcOT0_DpOT1_: argument 0"}
!100 = distinct !{!100, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN12_GLOBAL__N_119IconLoadingPipelineEFvN3gfx9ImageSkiaEEJ13scoped_refptrIS4_EEEEDcOT0_DpOT1_"}
!101 = distinct !{!101, !102, !"_ZN4base8BindOnceIMN12_GLOBAL__N_119IconLoadingPipelineEFvN3gfx9ImageSkiaEEJ13scoped_refptrIS2_EEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_: argument 0"}
!102 = distinct !{!102, !"_ZN4base8BindOnceIMN12_GLOBAL__N_119IconLoadingPipelineEFvN3gfx9ImageSkiaEEJ13scoped_refptrIS2_EEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_"}
!103 = !{!104, !106, !108}
!104 = distinct !{!104, !105, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN4apps33CompressedDataToImageSkiaCallbackENS2_IFvN3gfx9ImageSkiaEEEEfE3$_0JS7_RfEEEDcOT0_DpOT1_: argument 0"}
!105 = distinct !{!105, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN4apps33CompressedDataToImageSkiaCallbackENS2_IFvN3gfx9ImageSkiaEEEEfE3$_0JS7_RfEEEDcOT0_DpOT1_"}
!106 = distinct !{!106, !107, !"_ZN4base8BindOnceIZN4apps33CompressedDataToImageSkiaCallbackENS_12OnceCallbackIFvN3gfx9ImageSkiaEEEEfE3$_0JS6_RfEEENS2_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!107 = distinct !{!107, !"_ZN4base8BindOnceIZN4apps33CompressedDataToImageSkiaCallbackENS_12OnceCallbackIFvN3gfx9ImageSkiaEEEEfE3$_0JS6_RfEEENS2_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!108 = distinct !{!108, !109, !"_ZN4apps33CompressedDataToImageSkiaCallbackEN4base12OnceCallbackIFvN3gfx9ImageSkiaEEEEf: argument 0"}
!109 = distinct !{!109, !"_ZN4apps33CompressedDataToImageSkiaCallbackEN4base12OnceCallbackIFvN3gfx9ImageSkiaEEEEf"}
!110 = !{!111}
!111 = distinct !{!111, !112}
!112 = distinct !{!112, !"LVerDomain"}
!113 = !{!114}
!114 = distinct !{!114, !112}
!115 = distinct !{!115, !21}
!116 = distinct !{!116, !23}
!117 = distinct !{!117, !21}
!118 = !{!"branch_weights", i32 1, i32 1048575}
!119 = !{!120}
!120 = distinct !{!120, !121, !"_ZNSt3__19make_pairIRKNS_4pairIiiEERN3gfx9ImageSkiaEEENS1_INS_18__unwrap_ref_decayIT_E4typeENS8_IT0_E4typeEEEOS9_OSC_: argument 0"}
!121 = distinct !{!121, !"_ZNSt3__19make_pairIRKNS_4pairIiiEERN3gfx9ImageSkiaEEENS1_INS_18__unwrap_ref_decayIT_E4typeENS8_IT0_E4typeEEEOS9_OSC_"}
!122 = !{i8 0, i8 2}
!123 = !{!124, !126}
!124 = distinct !{!124, !125, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN12_GLOBAL__N_119IconLoadingPipelineEFvN3gfx9ImageSkiaEEJ13scoped_refptrIS4_EEEEDcOT0_DpOT1_: argument 0"}
!125 = distinct !{!125, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN12_GLOBAL__N_119IconLoadingPipelineEFvN3gfx9ImageSkiaEEJ13scoped_refptrIS4_EEEEDcOT0_DpOT1_"}
!126 = distinct !{!126, !127, !"_ZN4base8BindOnceIMN12_GLOBAL__N_119IconLoadingPipelineEFvN3gfx9ImageSkiaEEJ13scoped_refptrIS2_EEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_: argument 0"}
!127 = distinct !{!127, !"_ZN4base8BindOnceIMN12_GLOBAL__N_119IconLoadingPipelineEFvN3gfx9ImageSkiaEEJ13scoped_refptrIS2_EEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_"}
!128 = !{!129, !131, !133}
!129 = distinct !{!129, !130, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN12_GLOBAL__N_124FaviconResultToImageSkiaENS2_IFvN3gfx9ImageSkiaEEEEfE3$_2JS7_RfEEEDcOT0_DpOT1_: argument 0"}
!130 = distinct !{!130, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN12_GLOBAL__N_124FaviconResultToImageSkiaENS2_IFvN3gfx9ImageSkiaEEEEfE3$_2JS7_RfEEEDcOT0_DpOT1_"}
!131 = distinct !{!131, !132, !"_ZN4base8BindOnceIZN12_GLOBAL__N_124FaviconResultToImageSkiaENS_12OnceCallbackIFvN3gfx9ImageSkiaEEEEfE3$_2JS6_RfEEENS2_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!132 = distinct !{!132, !"_ZN4base8BindOnceIZN12_GLOBAL__N_124FaviconResultToImageSkiaENS_12OnceCallbackIFvN3gfx9ImageSkiaEEEEfE3$_2JS6_RfEEENS2_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!133 = distinct !{!133, !134, !"_ZN12_GLOBAL__N_124FaviconResultToImageSkiaEN4base12OnceCallbackIFvN3gfx9ImageSkiaEEEEf: argument 0"}
!134 = distinct !{!134, !"_ZN12_GLOBAL__N_124FaviconResultToImageSkiaEN4base12OnceCallbackIFvN3gfx9ImageSkiaEEEEf"}
!135 = !{!136, !138}
!136 = distinct !{!136, !137, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN12_GLOBAL__N_119IconLoadingPipeline32MaybeLoadFallbackOrCompleteEmptyEvE3$_3J13scoped_refptrIS4_EEEEDcOT0_DpOT1_: argument 0"}
!137 = distinct !{!137, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN12_GLOBAL__N_119IconLoadingPipeline32MaybeLoadFallbackOrCompleteEmptyEvE3$_3J13scoped_refptrIS4_EEEEDcOT0_DpOT1_"}
!138 = distinct !{!138, !139, !"_ZN4base8BindOnceIZN12_GLOBAL__N_119IconLoadingPipeline32MaybeLoadFallbackOrCompleteEmptyEvE3$_3J13scoped_refptrIS2_EEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_: argument 0"}
!139 = distinct !{!139, !"_ZN4base8BindOnceIZN12_GLOBAL__N_119IconLoadingPipeline32MaybeLoadFallbackOrCompleteEmptyEvE3$_3J13scoped_refptrIS2_EEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_"}
!140 = !{!141}
!141 = distinct !{!141, !142, !"_ZN4mojo37WrapCallbackWithDefaultInvokeIfNotRunIFvNS_9StructPtrIN4apps5mojom9IconValueEEEEJDnEEEN4base12OnceCallbackIT_EESA_DpOT0_: argument 0"}
!142 = distinct !{!142, !"_ZN4mojo37WrapCallbackWithDefaultInvokeIfNotRunIFvNS_9StructPtrIN4apps5mojom9IconValueEEEEJDnEEEN4base12OnceCallbackIT_EESA_DpOT0_"}
!143 = !{!144, !146, !141}
!144 = distinct !{!144, !145, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN4mojo8internal24CallbackWithDeleteHelperIFvNS3_9StructPtrIN4apps5mojom9IconValueEEEEEEFvSA_EJNS0_17UnretainedWrapperISC_EEDnEEEDcOT0_DpOT1_: argument 0"}
!145 = distinct !{!145, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN4mojo8internal24CallbackWithDeleteHelperIFvNS3_9StructPtrIN4apps5mojom9IconValueEEEEEEFvSA_EJNS0_17UnretainedWrapperISC_EEDnEEEDcOT0_DpOT1_"}
!146 = distinct !{!146, !147, !"_ZN4base8BindOnceIMN4mojo8internal24CallbackWithDeleteHelperIFvNS1_9StructPtrIN4apps5mojom9IconValueEEEEEEFvS8_EJNS_8internal17UnretainedWrapperISA_EEDnEEENS_12OnceCallbackINSD_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_: argument 0"}
!147 = distinct !{!147, !"_ZN4base8BindOnceIMN4mojo8internal24CallbackWithDeleteHelperIFvNS1_9StructPtrIN4apps5mojom9IconValueEEEEEEFvS8_EJNS_8internal17UnretainedWrapperISA_EEDnEEENS_12OnceCallbackINSD_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_"}
!148 = !{!144, !146}
!149 = !{!150, !152, !141}
!150 = distinct !{!150, !151, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN4mojo8internal24CallbackWithDeleteHelperIFvNS3_9StructPtrIN4apps5mojom9IconValueEEEEEEFvSA_EJNSt3__110unique_ptrISC_NSF_14default_deleteISC_EEEEEEEDcOT0_DpOT1_: argument 0"}
!151 = distinct !{!151, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN4mojo8internal24CallbackWithDeleteHelperIFvNS3_9StructPtrIN4apps5mojom9IconValueEEEEEEFvSA_EJNSt3__110unique_ptrISC_NSF_14default_deleteISC_EEEEEEEDcOT0_DpOT1_"}
!152 = distinct !{!152, !153, !"_ZN4base8BindOnceIMN4mojo8internal24CallbackWithDeleteHelperIFvNS1_9StructPtrIN4apps5mojom9IconValueEEEEEEFvS8_EJNSt3__110unique_ptrISA_NSD_14default_deleteISA_EEEEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_: argument 0"}
!153 = distinct !{!153, !"_ZN4base8BindOnceIMN4mojo8internal24CallbackWithDeleteHelperIFvNS1_9StructPtrIN4apps5mojom9IconValueEEEEEEFvS8_EJNSt3__110unique_ptrISA_NSD_14default_deleteISA_EEEEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_"}
!154 = !{!155}
!155 = distinct !{!155, !156, !"_ZN4apps5mojom9IconValue3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_: argument 0"}
!156 = distinct !{!156, !"_ZN4apps5mojom9IconValue3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_"}
!157 = !{!158}
!158 = distinct !{!158, !159, !"_ZN4apps5mojom9IconValue3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_: argument 0"}
!159 = distinct !{!159, !"_ZN4apps5mojom9IconValue3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_"}
!160 = !{!161}
!161 = distinct !{!161, !162, !"_ZN4apps5mojom9IconValue3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_: argument 0"}
!162 = distinct !{!162, !"_ZN4apps5mojom9IconValue3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_"}
!163 = !{!164, !166}
!164 = distinct !{!164, !165, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN12_GLOBAL__N_119IconLoadingPipelineEFvN4mojo9StructPtrIN4apps5mojom9IconValueEEEEJ13scoped_refptrIS4_EEEEDcOT0_DpOT1_: argument 0"}
!165 = distinct !{!165, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN12_GLOBAL__N_119IconLoadingPipelineEFvN4mojo9StructPtrIN4apps5mojom9IconValueEEEEJ13scoped_refptrIS4_EEEEDcOT0_DpOT1_"}
!166 = distinct !{!166, !167, !"_ZN4base8BindOnceIMN12_GLOBAL__N_119IconLoadingPipelineEFvN4mojo9StructPtrIN4apps5mojom9IconValueEEEEJ13scoped_refptrIS2_EEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_: argument 0"}
!167 = distinct !{!167, !"_ZN4base8BindOnceIMN12_GLOBAL__N_119IconLoadingPipelineEFvN4mojo9StructPtrIN4apps5mojom9IconValueEEEEJ13scoped_refptrIS2_EEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_"}
!168 = distinct !{!168, !23}
!169 = !{!170}
!170 = distinct !{!170, !171}
!171 = distinct !{!171, !"LVerDomain"}
!172 = !{!173}
!173 = distinct !{!173, !171}
!174 = distinct !{!174, !21}
!175 = distinct !{!175, !23}
!176 = !{!177}
!177 = distinct !{!177, !178}
!178 = distinct !{!178, !"LVerDomain"}
!179 = !{!180}
!180 = distinct !{!180, !178}
!181 = distinct !{!181, !21}
!182 = distinct !{!182, !23}
!183 = distinct !{!183, !23}
!184 = distinct !{!184, !21}
!185 = distinct !{!185, !21}
!186 = !{!187}
!187 = distinct !{!187, !188}
!188 = distinct !{!188, !"LVerDomain"}
!189 = !{!190}
!190 = distinct !{!190, !188}
!191 = distinct !{!191, !21}
!192 = distinct !{!192, !23}
!193 = distinct !{!193, !23}
!194 = distinct !{!194, !21}
!195 = !{!196}
!196 = distinct !{!196, !197}
!197 = distinct !{!197, !"LVerDomain"}
!198 = !{!199}
!199 = distinct !{!199, !197}
!200 = distinct !{!200, !21}
!201 = distinct !{!201, !23}
!202 = distinct !{!202, !23}
!203 = distinct !{!203, !21}
!204 = distinct !{!204, !23}
!205 = !{!206}
!206 = distinct !{!206, !207}
!207 = distinct !{!207, !"LVerDomain"}
!208 = !{!209}
!209 = distinct !{!209, !207}
!210 = distinct !{!210, !21}
!211 = distinct !{!211, !23}
!212 = distinct !{!212, !23}
!213 = !{!214}
!214 = distinct !{!214, !215}
!215 = distinct !{!215, !"LVerDomain"}
!216 = !{!217}
!217 = distinct !{!217, !215}
!218 = distinct !{!218, !21}
!219 = distinct !{!219, !23}
!220 = distinct !{!220, !21}
!221 = !{!222}
!222 = distinct !{!222, !223}
!223 = distinct !{!223, !"LVerDomain"}
!224 = !{!225}
!225 = distinct !{!225, !223}
!226 = distinct !{!226, !21}
!227 = distinct !{!227, !23}
!228 = distinct !{!228, !21}
!229 = distinct !{!229, !21}
!230 = !{!231}
!231 = distinct !{!231, !232}
!232 = distinct !{!232, !"LVerDomain"}
!233 = !{!234}
!234 = distinct !{!234, !232}
!235 = distinct !{!235, !21}
!236 = distinct !{!236, !23}
!237 = distinct !{!237, !21}
!238 = !{!239, !241, !243}
!239 = distinct !{!239, !240, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN4apps33CompressedDataToImageSkiaCallbackENS2_IFvN3gfx9ImageSkiaEEEEfE3$_0JS7_RfEEEDcOT0_DpOT1_: argument 0"}
!240 = distinct !{!240, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN4apps33CompressedDataToImageSkiaCallbackENS2_IFvN3gfx9ImageSkiaEEEEfE3$_0JS7_RfEEEDcOT0_DpOT1_"}
!241 = distinct !{!241, !242, !"_ZN4base8BindOnceIZN4apps33CompressedDataToImageSkiaCallbackENS_12OnceCallbackIFvN3gfx9ImageSkiaEEEEfE3$_0JS6_RfEEENS2_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!242 = distinct !{!242, !"_ZN4base8BindOnceIZN4apps33CompressedDataToImageSkiaCallbackENS_12OnceCallbackIFvN3gfx9ImageSkiaEEEEfE3$_0JS6_RfEEENS2_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!243 = distinct !{!243, !244, !"_ZN4apps33CompressedDataToImageSkiaCallbackEN4base12OnceCallbackIFvN3gfx9ImageSkiaEEEEf: argument 0"}
!244 = distinct !{!244, !"_ZN4apps33CompressedDataToImageSkiaCallbackEN4base12OnceCallbackIFvN3gfx9ImageSkiaEEEEf"}
!245 = !{!246}
!246 = distinct !{!246, !247, !"_ZNO4base12OnceCallbackIFNSt3__16vectorIhNS1_9allocatorIhEEEEvEE3RunEv: argument 0"}
!247 = distinct !{!247, !"_ZNO4base12OnceCallbackIFNSt3__16vectorIhNS1_9allocatorIhEEEEvEE3RunEv"}
!248 = !{!249, !251}
!249 = distinct !{!249, !250, !"_ZN4base8internal12InvokeHelperILb0ENSt3__16vectorIhNS2_9allocatorIhEEEEE8MakeItSoIPFS6_N10extensions17ExtensionResourceEEJSA_EEES6_OT_DpOT0_: argument 0"}
!250 = distinct !{!250, !"_ZN4base8internal12InvokeHelperILb0ENSt3__16vectorIhNS2_9allocatorIhEEEEE8MakeItSoIPFS6_N10extensions17ExtensionResourceEEJSA_EEES6_OT_DpOT0_"}
!251 = distinct !{!251, !252, !"_ZN4base8internal7InvokerINS0_9BindStateIPFNSt3__16vectorIhNS3_9allocatorIhEEEEN10extensions17ExtensionResourceEEJS9_EEEFS7_vEE7RunImplISB_NS3_5tupleIJS9_EEEJLm0EEEES7_OT_OT0_NS3_16integer_sequenceImJXspT1_EEEE: argument 0"}
!252 = distinct !{!252, !"_ZN4base8internal7InvokerINS0_9BindStateIPFNSt3__16vectorIhNS3_9allocatorIhEEEEN10extensions17ExtensionResourceEEJS9_EEEFS7_vEE7RunImplISB_NS3_5tupleIJS9_EEEJLm0EEEES7_OT_OT0_NS3_16integer_sequenceImJXspT1_EEEE"}
!253 = !{!254, !249, !251}
!254 = distinct !{!254, !255, !"_ZN4base8internal13FunctorTraitsIPFNSt3__16vectorIhNS2_9allocatorIhEEEEN10extensions17ExtensionResourceEEvE6InvokeISA_JS8_EEES6_OT_DpOT0_: argument 0"}
!255 = distinct !{!255, !"_ZN4base8internal13FunctorTraitsIPFNSt3__16vectorIhNS2_9allocatorIhEEEEN10extensions17ExtensionResourceEEvE6InvokeISA_JS8_EEES6_OT_DpOT0_"}
!256 = !{!257}
!257 = distinct !{!257, !258}
!258 = distinct !{!258, !"LVerDomain"}
!259 = !{!260}
!260 = distinct !{!260, !258}
!261 = distinct !{!261, !21}
!262 = distinct !{!262, !23}
!263 = distinct !{!263, !21}
!264 = !{!265, !267}
!265 = distinct !{!265, !266, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFNSt3__16vectorIhNS3_9allocatorIhEEEEN3gfx9ImageSkiaEfEJRS9_RfEEEDcOT0_DpOT1_: argument 0"}
!266 = distinct !{!266, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFNSt3__16vectorIhNS3_9allocatorIhEEEEN3gfx9ImageSkiaEfEJRS9_RfEEEDcOT0_DpOT1_"}
!267 = distinct !{!267, !268, !"_ZN4base8BindOnceIPFNSt3__16vectorIhNS1_9allocatorIhEEEEN3gfx9ImageSkiaEfEJRS7_RfEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_: argument 0"}
!268 = distinct !{!268, !"_ZN4base8BindOnceIPFNSt3__16vectorIhNS1_9allocatorIhEEEEN3gfx9ImageSkiaEfEJRS7_RfEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_"}
!269 = !{!270, !272}
!270 = distinct !{!270, !271, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFNSt3__16vectorIhNS3_9allocatorIhEEEEvEEEPNS3_10unique_ptrIS7_NS3_14default_deleteIS7_EEEEEJS9_RSE_EEEDcOT0_DpOT1_: argument 0"}
!271 = distinct !{!271, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFNSt3__16vectorIhNS3_9allocatorIhEEEEvEEEPNS3_10unique_ptrIS7_NS3_14default_deleteIS7_EEEEEJS9_RSE_EEEDcOT0_DpOT1_"}
!272 = distinct !{!272, !273, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFNSt3__16vectorIhNS2_9allocatorIhEEEEvEEEPNS2_10unique_ptrIS6_NS2_14default_deleteIS6_EEEEEJS8_RSD_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!273 = distinct !{!273, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFNSt3__16vectorIhNS2_9allocatorIhEEEEvEEEPNS2_10unique_ptrIS6_NS2_14default_deleteIS6_EEEEEJS8_RSD_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
!274 = !{!275, !277}
!275 = distinct !{!275, !276, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN12_GLOBAL__N_119IconLoadingPipelineEFvNSt3__16vectorIhNS5_9allocatorIhEEEEEJ13scoped_refptrIS4_EEEEDcOT0_DpOT1_: argument 0"}
!276 = distinct !{!276, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN12_GLOBAL__N_119IconLoadingPipelineEFvNSt3__16vectorIhNS5_9allocatorIhEEEEEJ13scoped_refptrIS4_EEEEDcOT0_DpOT1_"}
!277 = distinct !{!277, !278, !"_ZN4base8BindOnceIMN12_GLOBAL__N_119IconLoadingPipelineEFvNSt3__16vectorIhNS3_9allocatorIhEEEEEJ13scoped_refptrIS2_EEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_: argument 0"}
!278 = distinct !{!278, !"_ZN4base8BindOnceIMN12_GLOBAL__N_119IconLoadingPipelineEFvNSt3__16vectorIhNS3_9allocatorIhEEEEEJ13scoped_refptrIS2_EEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_"}
!279 = !{!280, !282}
!280 = distinct !{!280, !281, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__16vectorIhNS3_9allocatorIhEEEEEEEPNS3_10unique_ptrIS7_NS3_14default_deleteIS7_EEEEEJS9_NS0_12OwnedWrapperISD_NSB_ISD_EEEEEEEDcOT0_DpOT1_: argument 0"}
!281 = distinct !{!281, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__16vectorIhNS3_9allocatorIhEEEEEEEPNS3_10unique_ptrIS7_NS3_14default_deleteIS7_EEEEEJS9_NS0_12OwnedWrapperISD_NSB_ISD_EEEEEEEDcOT0_DpOT1_"}
!282 = distinct !{!282, !283, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__16vectorIhNS2_9allocatorIhEEEEEEEPNS2_10unique_ptrIS6_NS2_14default_deleteIS6_EEEEEJS8_NS_8internal12OwnedWrapperISC_NSA_ISC_EEEEEEENS1_INSG_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_: argument 0"}
!283 = distinct !{!283, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__16vectorIhNS2_9allocatorIhEEEEEEEPNS2_10unique_ptrIS6_NS2_14default_deleteIS6_EEEEEJS8_NS_8internal12OwnedWrapperISC_NSA_ISC_EEEEEEENS1_INSG_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_"}
!284 = !{!285, !287}
!285 = distinct !{!285, !286, !"_ZN4base8internal12InvokeHelperILb0ENSt3__16vectorIhNS2_9allocatorIhEEEEE8MakeItSoIPFS6_N3gfx9ImageSkiaEfEJSA_fEEES6_OT_DpOT0_: argument 0"}
!286 = distinct !{!286, !"_ZN4base8internal12InvokeHelperILb0ENSt3__16vectorIhNS2_9allocatorIhEEEEE8MakeItSoIPFS6_N3gfx9ImageSkiaEfEJSA_fEEES6_OT_DpOT0_"}
!287 = distinct !{!287, !288, !"_ZN4base8internal7InvokerINS0_9BindStateIPFNSt3__16vectorIhNS3_9allocatorIhEEEEN3gfx9ImageSkiaEfEJS9_fEEEFS7_vEE7RunImplISB_NS3_5tupleIJS9_fEEEJLm0ELm1EEEES7_OT_OT0_NS3_16integer_sequenceImJXspT1_EEEE: argument 0"}
!288 = distinct !{!288, !"_ZN4base8internal7InvokerINS0_9BindStateIPFNSt3__16vectorIhNS3_9allocatorIhEEEEN3gfx9ImageSkiaEfEJS9_fEEEFS7_vEE7RunImplISB_NS3_5tupleIJS9_fEEEJLm0ELm1EEEES7_OT_OT0_NS3_16integer_sequenceImJXspT1_EEEE"}
!289 = !{!290, !285, !287}
!290 = distinct !{!290, !291, !"_ZN4base8internal13FunctorTraitsIPFNSt3__16vectorIhNS2_9allocatorIhEEEEN3gfx9ImageSkiaEfEvE6InvokeISA_JS8_fEEES6_OT_DpOT0_: argument 0"}
!291 = distinct !{!291, !"_ZN4base8internal13FunctorTraitsIPFNSt3__16vectorIhNS2_9allocatorIhEEEEN3gfx9ImageSkiaEfEvE6InvokeISA_JS8_fEEES6_OT_DpOT0_"}
!292 = distinct !{!292, !23}
!293 = !{!294}
!294 = distinct !{!294, !295}
!295 = distinct !{!295, !"LVerDomain"}
!296 = !{!297}
!297 = distinct !{!297, !295}
!298 = distinct !{!298, !21}
!299 = distinct !{!299, !23}
!300 = !{!301}
!301 = distinct !{!301, !302}
!302 = distinct !{!302, !"LVerDomain"}
!303 = !{!304}
!304 = distinct !{!304, !302}
!305 = distinct !{!305, !21}
!306 = distinct !{!306, !23}
!307 = distinct !{!307, !23}
!308 = distinct !{!308, !21}
!309 = distinct !{!309, !21}
!310 = !{!311}
!311 = distinct !{!311, !312}
!312 = distinct !{!312, !"LVerDomain"}
!313 = !{!314}
!314 = distinct !{!314, !312}
!315 = distinct !{!315, !21}
!316 = distinct !{!316, !23}
!317 = distinct !{!317, !23}
!318 = distinct !{!318, !21}
!319 = !{!320}
!320 = distinct !{!320, !321}
!321 = distinct !{!321, !"LVerDomain"}
!322 = !{!323}
!323 = distinct !{!323, !321}
!324 = distinct !{!324, !21}
!325 = distinct !{!325, !23}
!326 = distinct !{!326, !23}
!327 = distinct !{!327, !21}
!328 = distinct !{!328, !23}
!329 = !{!330}
!330 = distinct !{!330, !331}
!331 = distinct !{!331, !"LVerDomain"}
!332 = !{!333}
!333 = distinct !{!333, !331}
!334 = distinct !{!334, !21}
!335 = distinct !{!335, !23}
!336 = distinct !{!336, !23}
!337 = !{!338}
!338 = distinct !{!338, !339}
!339 = distinct !{!339, !"LVerDomain"}
!340 = !{!341}
!341 = distinct !{!341, !339}
!342 = distinct !{!342, !21}
!343 = distinct !{!343, !23}
!344 = distinct !{!344, !21}
!345 = !{!346}
!346 = distinct !{!346, !347}
!347 = distinct !{!347, !"LVerDomain"}
!348 = !{!349}
!349 = distinct !{!349, !347}
!350 = distinct !{!350, !21}
!351 = distinct !{!351, !23}
!352 = distinct !{!352, !21}
!353 = distinct !{!353, !21}
!354 = !{!355}
!355 = distinct !{!355, !356}
!356 = distinct !{!356, !"LVerDomain"}
!357 = !{!358}
!358 = distinct !{!358, !356}
!359 = distinct !{!359, !21}
!360 = distinct !{!360, !23}
!361 = distinct !{!361, !21}
!362 = !{!363, !365}
!363 = distinct !{!363, !364, !"_ZN4base8internal12InvokeHelperILb0ENSt3__16vectorIhNS2_9allocatorIhEEEEE8MakeItSoIPFS6_NS_8FilePathEEJS9_EEES6_OT_DpOT0_: argument 0"}
!364 = distinct !{!364, !"_ZN4base8internal12InvokeHelperILb0ENSt3__16vectorIhNS2_9allocatorIhEEEEE8MakeItSoIPFS6_NS_8FilePathEEJS9_EEES6_OT_DpOT0_"}
!365 = distinct !{!365, !366, !"_ZN4base8internal7InvokerINS0_9BindStateIPFNSt3__16vectorIhNS3_9allocatorIhEEEENS_8FilePathEEJS8_EEEFS7_vEE7RunImplISA_NS3_5tupleIJS8_EEEJLm0EEEES7_OT_OT0_NS3_16integer_sequenceImJXspT1_EEEE: argument 0"}
!366 = distinct !{!366, !"_ZN4base8internal7InvokerINS0_9BindStateIPFNSt3__16vectorIhNS3_9allocatorIhEEEENS_8FilePathEEJS8_EEEFS7_vEE7RunImplISA_NS3_5tupleIJS8_EEEJLm0EEEES7_OT_OT0_NS3_16integer_sequenceImJXspT1_EEEE"}
!367 = !{!368, !363, !365}
!368 = distinct !{!368, !369, !"_ZN4base8internal13FunctorTraitsIPFNSt3__16vectorIhNS2_9allocatorIhEEEENS_8FilePathEEvE6InvokeIS9_JS7_EEES6_OT_DpOT0_: argument 0"}
!369 = distinct !{!369, !"_ZN4base8internal13FunctorTraitsIPFNSt3__16vectorIhNS2_9allocatorIhEEEENS_8FilePathEEvE6InvokeIS9_JS7_EEES6_OT_DpOT0_"}
!370 = !{!371}
!371 = distinct !{!371, !372, !"_ZNSt3__16__treeINS_12__value_typeINS_4pairIiiEEN3gfx9ImageSkiaEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJNS2_IS3_S5_EEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISJ_EEEEEEDpOT_: argument 0"}
!372 = distinct !{!372, !"_ZNSt3__16__treeINS_12__value_typeINS_4pairIiiEEN3gfx9ImageSkiaEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJNS2_IS3_S5_EEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISJ_EEEEEEDpOT_"}
!373 = !{!374, !376}
!374 = distinct !{!374, !375, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZZN4apps33CompressedDataToImageSkiaCallbackENS2_IFvN3gfx9ImageSkiaEEEEfENK3$_0clES7_fNSt3__16vectorIhNS9_9allocatorIhEEEEEUlSD_fE_JSD_RfEEEDcOT0_DpOT1_: argument 0"}
!375 = distinct !{!375, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZZN4apps33CompressedDataToImageSkiaCallbackENS2_IFvN3gfx9ImageSkiaEEEEfENK3$_0clES7_fNSt3__16vectorIhNS9_9allocatorIhEEEEEUlSD_fE_JSD_RfEEEDcOT0_DpOT1_"}
!376 = distinct !{!376, !377, !"_ZN4base8BindOnceIZZN4apps33CompressedDataToImageSkiaCallbackENS_12OnceCallbackIFvN3gfx9ImageSkiaEEEEfENK3$_0clES6_fNSt3__16vectorIhNS8_9allocatorIhEEEEEUlSC_fE_JSC_RfEEENS2_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_: argument 0"}
!377 = distinct !{!377, !"_ZN4base8BindOnceIZZN4apps33CompressedDataToImageSkiaCallbackENS_12OnceCallbackIFvN3gfx9ImageSkiaEEEEfENK3$_0clES6_fNSt3__16vectorIhNS8_9allocatorIhEEEEEUlSC_fE_JSC_RfEEENS2_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_"}
!378 = !{!379, !381}
!379 = distinct !{!379, !380, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFN3gfx9ImageSkiaEvEEEPNSt3__110unique_ptrIS4_NS7_14default_deleteIS4_EEEEEJS6_RSC_EEEDcOT0_DpOT1_: argument 0"}
!380 = distinct !{!380, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFN3gfx9ImageSkiaEvEEEPNSt3__110unique_ptrIS4_NS7_14default_deleteIS4_EEEEEJS6_RSC_EEEDcOT0_DpOT1_"}
!381 = distinct !{!381, !382, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFN3gfx9ImageSkiaEvEEEPNSt3__110unique_ptrIS3_NS6_14default_deleteIS3_EEEEEJS5_RSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_: argument 0"}
!382 = distinct !{!382, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFN3gfx9ImageSkiaEvEEEPNSt3__110unique_ptrIS3_NS6_14default_deleteIS3_EEEEEJS5_RSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_"}
!383 = !{!384, !386}
!384 = distinct !{!384, !385, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvN3gfx9ImageSkiaEEEEPNSt3__110unique_ptrIS4_NS7_14default_deleteIS4_EEEEEJS6_NS0_12OwnedWrapperISB_NS9_ISB_EEEEEEEDcOT0_DpOT1_: argument 0"}
!385 = distinct !{!385, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvN3gfx9ImageSkiaEEEEPNSt3__110unique_ptrIS4_NS7_14default_deleteIS4_EEEEEJS6_NS0_12OwnedWrapperISB_NS9_ISB_EEEEEEEDcOT0_DpOT1_"}
!386 = distinct !{!386, !387, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvN3gfx9ImageSkiaEEEEPNSt3__110unique_ptrIS3_NS6_14default_deleteIS3_EEEEEJS5_NS_8internal12OwnedWrapperISA_NS8_ISA_EEEEEEENS1_INSE_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!387 = distinct !{!387, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvN3gfx9ImageSkiaEEEEPNSt3__110unique_ptrIS3_NS6_14default_deleteIS3_EEEEEJS5_NS_8internal12OwnedWrapperISA_NS8_ISA_EEEEEEENS1_INSE_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
!388 = !{!389}
!389 = distinct !{!389, !390, !"_ZNO4base12OnceCallbackIFN3gfx9ImageSkiaEvEE3RunEv: argument 0"}
!390 = distinct !{!390, !"_ZNO4base12OnceCallbackIFN3gfx9ImageSkiaEvEE3RunEv"}
!391 = !{!392, !394, !396}
!392 = distinct !{!392, !393, !"_ZN4base8internal13FunctorTraitsIZZN4apps33CompressedDataToImageSkiaCallbackENS_12OnceCallbackIFvN3gfx9ImageSkiaEEEEfENK3$_0clES7_fNSt3__16vectorIhNS9_9allocatorIhEEEEEUlSD_fE_vE6InvokeISE_JSD_fEEES5_OT_DpOT0_: argument 0"}
!393 = distinct !{!393, !"_ZN4base8internal13FunctorTraitsIZZN4apps33CompressedDataToImageSkiaCallbackENS_12OnceCallbackIFvN3gfx9ImageSkiaEEEEfENK3$_0clES7_fNSt3__16vectorIhNS9_9allocatorIhEEEEEUlSD_fE_vE6InvokeISE_JSD_fEEES5_OT_DpOT0_"}
!394 = distinct !{!394, !395, !"_ZN4base8internal12InvokeHelperILb0EN3gfx9ImageSkiaEE8MakeItSoIZZN4apps33CompressedDataToImageSkiaCallbackENS_12OnceCallbackIFvS3_EEEfENK3$_0clES9_fNSt3__16vectorIhNSB_9allocatorIhEEEEEUlSF_fE_JSF_fEEES3_OT_DpOT0_: argument 0"}
!395 = distinct !{!395, !"_ZN4base8internal12InvokeHelperILb0EN3gfx9ImageSkiaEE8MakeItSoIZZN4apps33CompressedDataToImageSkiaCallbackENS_12OnceCallbackIFvS3_EEEfENK3$_0clES9_fNSt3__16vectorIhNSB_9allocatorIhEEEEEUlSF_fE_JSF_fEEES3_OT_DpOT0_"}
!396 = distinct !{!396, !397, !"_ZN4base8internal7InvokerINS0_9BindStateIZZN4apps33CompressedDataToImageSkiaCallbackENS_12OnceCallbackIFvN3gfx9ImageSkiaEEEEfENK3$_0clES8_fNSt3__16vectorIhNSA_9allocatorIhEEEEEUlSE_fE_JSE_fEEEFS6_vEE7RunImplISF_NSA_5tupleIJSE_fEEEJLm0ELm1EEEES6_OT_OT0_NSA_16integer_sequenceImJXspT1_EEEE: argument 0"}
!397 = distinct !{!397, !"_ZN4base8internal7InvokerINS0_9BindStateIZZN4apps33CompressedDataToImageSkiaCallbackENS_12OnceCallbackIFvN3gfx9ImageSkiaEEEEfENK3$_0clES8_fNSt3__16vectorIhNSA_9allocatorIhEEEEEUlSE_fE_JSE_fEEEFS6_vEE7RunImplISF_NSA_5tupleIJSE_fEEEJLm0ELm1EEEES6_OT_OT0_NSA_16integer_sequenceImJXspT1_EEEE"}
!398 = !{!399}
!399 = distinct !{!399, !400, !"_ZN12_GLOBAL__N_120DecompressToSkBitmapEPKhm: argument 0"}
!400 = distinct !{!400, !"_ZN12_GLOBAL__N_120DecompressToSkBitmapEPKhm"}
!401 = !{!402, !392, !394, !396}
!402 = distinct !{!402, !403, !"_ZZZN4apps33CompressedDataToImageSkiaCallbackEN4base12OnceCallbackIFvN3gfx9ImageSkiaEEEEfENK3$_0clES5_fNSt3__16vectorIhNS7_9allocatorIhEEEEENKUlSB_fE_clESB_f: argument 0"}
!403 = distinct !{!403, !"_ZZZN4apps33CompressedDataToImageSkiaCallbackEN4base12OnceCallbackIFvN3gfx9ImageSkiaEEEEfENK3$_0clES5_fNSt3__16vectorIhNS7_9allocatorIhEEEEENKUlSB_fE_clESB_f"}
