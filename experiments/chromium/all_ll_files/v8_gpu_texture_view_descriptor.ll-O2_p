; ModuleID = 'gen/third_party/blink/renderer/bindings/modules/v8/v8_gpu_texture_view_descriptor.cc'
source_filename = "gen/third_party/blink/renderer/bindings/modules/v8/v8_gpu_texture_view_descriptor.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.77", i32, [4 x i8], %"class.std::__1::unique_ptr.213", %"class.std::__1::unique_ptr.213", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.223", %"class.std::__1::unique_ptr.229", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.241", %"class.std::__1::unique_ptr.247", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.254", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.98", %"class.std::__1::unique_ptr.104", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.156", %"class.std::__1::unique_ptr.163", %"class.std::__1::unique_ptr.170", %"class.std::__1::unique_ptr.193", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, {}* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.113" = type { %"struct.std::__1::__atomic_base.114" }
%"struct.std::__1::__atomic_base.114" = type { %"struct.std::__1::__atomic_base.115" }
%"struct.std::__1::__atomic_base.115" = type { %"struct.std::__1::__cxx_atomic_impl.116" }
%"struct.std::__1::__cxx_atomic_impl.116" = type { %"struct.std::__1::__cxx_atomic_base_impl.117" }
%"struct.std::__1::__cxx_atomic_base_impl.117" = type { i64 }
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.blink::Worklist.124"* }
%"class.blink::Worklist.124" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.blink::Worklist.131"* }
%"class.blink::Worklist.131" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.blink::Worklist.138"* }
%"class.blink::Worklist.138" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.blink::Worklist.145"* }
%"class.blink::Worklist.145" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::Worklist.152"* }
%"class.blink::Worklist.152" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.blink::Worklist.159"* }
%"class.blink::Worklist.159" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.blink::Worklist.166"* }
%"class.blink::Worklist.166" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.173", %"class.std::__1::__compressed_pair.180", %"class.std::__1::__compressed_pair.185", %"class.std::__1::__compressed_pair.187", [4 x i8] }>
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175", %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { i64 }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { float }
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.196", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.205" }
%"class.WTF::Vector.205" = type { %"class.WTF::VectorBuffer.206" }
%"class.WTF::VectorBuffer.206" = type { %"class.WTF::VectorBufferBase.207" }
%"class.WTF::VectorBufferBase.207" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.221" }
%"class.WTF::VectorBuffer.221" = type { %"class.WTF::VectorBufferBase.222" }
%"class.WTF::VectorBufferBase.222" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.235" }
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.124"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.131"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.138"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.145"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.152"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.285" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.253 }
%class.scoped_refptr.253 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.254" = type { %"struct.std::__1::__atomic_base.255" }
%"struct.std::__1::__atomic_base.255" = type { %"struct.std::__1::__cxx_atomic_impl.256" }
%"struct.std::__1::__cxx_atomic_impl.256" = type { %"struct.std::__1::__cxx_atomic_base_impl.257" }
%"struct.std::__1::__cxx_atomic_base_impl.257" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.v8::Value" = type { i8 }
%"class.blink::GPUTextureViewDescriptor" = type <{ %"class.blink::GPUObjectDescriptorBase", i8, i8, i8, i8, i32, %"class.WTF::String", i32, i32, %"class.WTF::String", %"class.WTF::String", i32, [4 x i8] }>
%"class.blink::GPUObjectDescriptorBase" = type { %"class.blink::IDLDictionaryBase", %"class.WTF::String" }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::internal::Isolate" = type opaque
%"class.blink::V8StringResource" = type { %"class.v8::Local", i32, %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.v8::Local" = type { %"class.v8::Value"* }
%"class.WTF::StringView::StackBackingStore" = type { [64 x i16], %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.v8::Object" = type { i8 }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap", %"class.WTF::HashMap", %"class.WTF::HashMap.24", %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.71", %"class.blink::Persistent", i8, i8, i8, %"class.WTF::Vector.258", %"class.std::__1::unique_ptr.263", %"class.blink::Persistent.269", %"class.blink::Persistent.273", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.8", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.18", i32, i32 }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.WTF::HashMap.24" = type { %"class.WTF::HashTable.25" }
%"class.WTF::HashTable.25" = type <{ %"struct.WTF::KeyValuePair.28"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.28" = type opaque
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.37", %class.scoped_refptr }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.32", i8* }
%"class.WTF::HashMap.32" = type { %"class.WTF::HashTable.33" }
%"class.WTF::HashTable.33" = type <{ %"struct.WTF::KeyValuePair.36"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.36" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.37" = type { %"class.v8::PersistentValueMapBase.38" }
%"class.v8::PersistentValueMapBase.38" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.39", i8* }
%"class.WTF::HashMap.39" = type { %"class.WTF::HashTable.40" }
%"class.WTF::HashTable.40" = type <{ %"struct.WTF::KeyValuePair.43"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.43" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.std::__1::unique_ptr.44" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.47", %"class.std::__1::unique_ptr.55", %"class.WTF::Vector.61", i8, i32 }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.WTF::Vector"* }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.61" = type { %"class.WTF::VectorBuffer.62" }
%"class.WTF::VectorBuffer.62" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type opaque
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.292, %"class.blink::Member.311", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.292 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.293", i32, i32, %"class.blink::Persistent.295" }
%"class.WTF::RefCounted.293" = type { %"class.base::RefCounted.294" }
%"class.base::RefCounted.294" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.295" = type { %"class.blink::PersistentBase.296" }
%"class.blink::PersistentBase.296" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.301" }
%"class.WTF::HashMap.301" = type { %"class.WTF::HashTable.302" }
%"class.WTF::HashTable.302" = type <{ %"struct.WTF::KeyValuePair.304"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.304" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference.308" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.305" }
%"class.blink::MemberBase.305" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference.308" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference.308" = type { %"class.v8::TracedReference.309" }
%"class.v8::TracedReference.309" = type { %"class.v8::BasicTracedReference.310" }
%"class.v8::BasicTracedReference.310" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::Member.311" = type { %"class.blink::MemberBase.312" }
%"class.blink::MemberBase.312" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.WTF::Vector.258" = type { %"class.WTF::VectorBuffer.259" }
%"class.WTF::VectorBuffer.259" = type { %"class.WTF::VectorBufferBase.260" }
%"class.WTF::VectorBufferBase.260" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type opaque
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.269" = type { %"class.blink::PersistentBase.270" }
%"class.blink::PersistentBase.270" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.273" = type { %"class.blink::PersistentBase.274" }
%"class.blink::PersistentBase.274" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector", i64 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.279" }
%"class.WTF::Vector.279" = type { %"class.WTF::VectorBuffer.280" }
%"class.WTF::VectorBuffer.280" = type { %"class.WTF::VectorBufferBase.281" }
%"class.WTF::VectorBufferBase.281" = type { %"struct.std::__1::pair.282"*, i32, i32 }
%"struct.std::__1::pair.282" = type { %"class.blink::UntracedMember", %"class.blink::Member" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase.283" }
%"class.blink::MemberBase.283" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.v8::Eternal" = type { %"class.v8::Name"* }
%"class.v8::Name" = type { i8 }
%"class.base::span.313" = type { %"struct.base::internal::ExtentStorage", i8** }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.v8::Uint32" = type { i8 }
%"class.v8::String" = type { i8 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.v8::Integer" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.335" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.v8::Int32" = type { i8 }

$_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE = comdat any

$_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [30 x i8] c"cannot convert to dictionary.\00", align 1
@_ZZN5blink26V8GPUTextureViewDescriptor6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_24GPUTextureViewDescriptorERNS_14ExceptionStateEE12kValidValues = internal constant [3 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i32 0, i32 0)], align 16
@.str.1 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@.str.2 = private unnamed_addr constant [13 x i8] c"stencil-only\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"depth-only\00", align 1
@.str.4 = private unnamed_addr constant [17 x i8] c"GPUTextureAspect\00", align 1
@_ZZN5blink26V8GPUTextureViewDescriptor6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_24GPUTextureViewDescriptorERNS_14ExceptionStateEE12kValidValues_0 = internal constant [6 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i32 0, i32 0)], align 16
@.str.5 = private unnamed_addr constant [3 x i8] c"1d\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c"2d\00", align 1
@.str.7 = private unnamed_addr constant [9 x i8] c"2d-array\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"cube\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"cube-array\00", align 1
@.str.10 = private unnamed_addr constant [3 x i8] c"3d\00", align 1
@.str.11 = private unnamed_addr constant [24 x i8] c"GPUTextureViewDimension\00", align 1
@_ZZN5blink26V8GPUTextureViewDescriptor6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_24GPUTextureViewDescriptorERNS_14ExceptionStateEE12kValidValues_1 = internal constant [53 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.50, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.54, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.58, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.59, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.60, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.62, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.63, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.64, i32 0, i32 0)], align 16
@.str.12 = private unnamed_addr constant [8 x i8] c"r8unorm\00", align 1
@.str.13 = private unnamed_addr constant [8 x i8] c"r8snorm\00", align 1
@.str.14 = private unnamed_addr constant [7 x i8] c"r8uint\00", align 1
@.str.15 = private unnamed_addr constant [7 x i8] c"r8sint\00", align 1
@.str.16 = private unnamed_addr constant [8 x i8] c"r16uint\00", align 1
@.str.17 = private unnamed_addr constant [8 x i8] c"r16sint\00", align 1
@.str.18 = private unnamed_addr constant [9 x i8] c"r16float\00", align 1
@.str.19 = private unnamed_addr constant [9 x i8] c"rg8unorm\00", align 1
@.str.20 = private unnamed_addr constant [9 x i8] c"rg8snorm\00", align 1
@.str.21 = private unnamed_addr constant [8 x i8] c"rg8uint\00", align 1
@.str.22 = private unnamed_addr constant [8 x i8] c"rg8sint\00", align 1
@.str.23 = private unnamed_addr constant [8 x i8] c"r32uint\00", align 1
@.str.24 = private unnamed_addr constant [8 x i8] c"r32sint\00", align 1
@.str.25 = private unnamed_addr constant [9 x i8] c"r32float\00", align 1
@.str.26 = private unnamed_addr constant [9 x i8] c"rg16uint\00", align 1
@.str.27 = private unnamed_addr constant [9 x i8] c"rg16sint\00", align 1
@.str.28 = private unnamed_addr constant [10 x i8] c"rg16float\00", align 1
@.str.29 = private unnamed_addr constant [11 x i8] c"rgba8unorm\00", align 1
@.str.30 = private unnamed_addr constant [16 x i8] c"rgba8unorm-srgb\00", align 1
@.str.31 = private unnamed_addr constant [11 x i8] c"rgba8snorm\00", align 1
@.str.32 = private unnamed_addr constant [10 x i8] c"rgba8uint\00", align 1
@.str.33 = private unnamed_addr constant [10 x i8] c"rgba8sint\00", align 1
@.str.34 = private unnamed_addr constant [11 x i8] c"bgra8unorm\00", align 1
@.str.35 = private unnamed_addr constant [16 x i8] c"bgra8unorm-srgb\00", align 1
@.str.36 = private unnamed_addr constant [13 x i8] c"rgb9e5ufloat\00", align 1
@.str.37 = private unnamed_addr constant [13 x i8] c"rgb10a2unorm\00", align 1
@.str.38 = private unnamed_addr constant [14 x i8] c"rg11b10ufloat\00", align 1
@.str.39 = private unnamed_addr constant [9 x i8] c"rg32uint\00", align 1
@.str.40 = private unnamed_addr constant [9 x i8] c"rg32sint\00", align 1
@.str.41 = private unnamed_addr constant [10 x i8] c"rg32float\00", align 1
@.str.42 = private unnamed_addr constant [11 x i8] c"rgba16uint\00", align 1
@.str.43 = private unnamed_addr constant [11 x i8] c"rgba16sint\00", align 1
@.str.44 = private unnamed_addr constant [12 x i8] c"rgba16float\00", align 1
@.str.45 = private unnamed_addr constant [11 x i8] c"rgba32uint\00", align 1
@.str.46 = private unnamed_addr constant [11 x i8] c"rgba32sint\00", align 1
@.str.47 = private unnamed_addr constant [12 x i8] c"rgba32float\00", align 1
@.str.48 = private unnamed_addr constant [13 x i8] c"depth32float\00", align 1
@.str.49 = private unnamed_addr constant [12 x i8] c"depth24plus\00", align 1
@.str.50 = private unnamed_addr constant [21 x i8] c"depth24plus-stencil8\00", align 1
@.str.51 = private unnamed_addr constant [15 x i8] c"bc1-rgba-unorm\00", align 1
@.str.52 = private unnamed_addr constant [20 x i8] c"bc1-rgba-unorm-srgb\00", align 1
@.str.53 = private unnamed_addr constant [15 x i8] c"bc2-rgba-unorm\00", align 1
@.str.54 = private unnamed_addr constant [20 x i8] c"bc2-rgba-unorm-srgb\00", align 1
@.str.55 = private unnamed_addr constant [15 x i8] c"bc3-rgba-unorm\00", align 1
@.str.56 = private unnamed_addr constant [20 x i8] c"bc3-rgba-unorm-srgb\00", align 1
@.str.57 = private unnamed_addr constant [12 x i8] c"bc4-r-unorm\00", align 1
@.str.58 = private unnamed_addr constant [12 x i8] c"bc4-r-snorm\00", align 1
@.str.59 = private unnamed_addr constant [13 x i8] c"bc5-rg-unorm\00", align 1
@.str.60 = private unnamed_addr constant [13 x i8] c"bc5-rg-snorm\00", align 1
@.str.61 = private unnamed_addr constant [16 x i8] c"bc6h-rgb-ufloat\00", align 1
@.str.62 = private unnamed_addr constant [15 x i8] c"bc6h-rgb-float\00", align 1
@.str.63 = private unnamed_addr constant [15 x i8] c"bc7-rgba-unorm\00", align 1
@.str.64 = private unnamed_addr constant [20 x i8] c"bc7-rgba-unorm-srgb\00", align 1
@.str.65 = private unnamed_addr constant [17 x i8] c"GPUTextureFormat\00", align 1
@_ZZN5blinkL37eternalV8GPUTextureViewDescriptorKeysEPN2v87IsolateEE5kKeys = internal constant [7 x i8*] [i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.66, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.67, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.68, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.70, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.72, i32 0, i32 0)], align 16
@.str.66 = private unnamed_addr constant [16 x i8] c"arrayLayerCount\00", align 1
@.str.67 = private unnamed_addr constant [7 x i8] c"aspect\00", align 1
@.str.68 = private unnamed_addr constant [15 x i8] c"baseArrayLayer\00", align 1
@.str.69 = private unnamed_addr constant [13 x i8] c"baseMipLevel\00", align 1
@.str.70 = private unnamed_addr constant [10 x i8] c"dimension\00", align 1
@.str.71 = private unnamed_addr constant [7 x i8] c"format\00", align 1
@.str.72 = private unnamed_addr constant [14 x i8] c"mipLevelCount\00", align 1
@.ref.tmp = private constant { i64, i8** } { i64 7, i8** getelementptr inbounds ([7 x i8*], [7 x i8*]* @_ZZN5blinkL37eternalV8GPUTextureViewDescriptorKeysEPN2v87IsolateEE5kKeys, i32 0, i32 0) }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.73 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.74 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.75 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26V8GPUTextureViewDescriptor6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_24GPUTextureViewDescriptorERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::GPUTextureViewDescriptor"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = alloca %"class.blink::V8StringResource", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.blink::V8StringResource", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.blink::V8StringResource", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = icmp eq %"class.v8::Value"* %1, null
  br i1 %15, label %970, label %16

16:                                               ; preds = %4
  %17 = bitcast %"class.v8::Value"* %1 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = and i64 %18, 3
  %20 = icmp eq i64 %19, 1
  br i1 %20, label %21, label %37

21:                                               ; preds = %16
  %22 = add i64 %18, -1
  %23 = inttoptr i64 %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = and i64 %18, -4294967296
  %26 = zext i32 %24 to i64
  %27 = or i64 %25, %26
  %28 = add i64 %27, 7
  %29 = inttoptr i64 %28 to i16*
  %30 = load i16, i16* %29, align 2
  %31 = icmp eq i16 %30, 67
  br i1 %31, label %32, label %37

32:                                               ; preds = %21
  %33 = add i64 %18, 23
  %34 = inttoptr i64 %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = ashr i32 %35, 1
  switch i32 %36, label %37 [
    i32 5, label %970
    i32 3, label %970
  ]

37:                                               ; preds = %32, %21, %16
  %38 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %1) #7
  br i1 %38, label %40, label %39

39:                                               ; preds = %37
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0)) #7
  br label %970

40:                                               ; preds = %37
  %41 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %42 = getelementptr inbounds %"class.blink::GPUTextureViewDescriptor", %"class.blink::GPUTextureViewDescriptor"* %2, i64 0, i32 0
  tail call void @_ZN5blink25V8GPUObjectDescriptorBase6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_23GPUObjectDescriptorBaseERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %1, %"class.blink::GPUObjectDescriptorBase"* %42, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %43 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %970

46:                                               ; preds = %40
  %47 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %48 = add i64 %47, 8
  %49 = inttoptr i64 %48 to %"class.blink::V8PerIsolateData"**
  %50 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %49, align 8
  %51 = tail call { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"* %50, i8* bitcast ([7 x i8*]* @_ZZN5blinkL37eternalV8GPUTextureViewDescriptorKeysEPN2v87IsolateEE5kKeys to i8*), %"class.base::span.313"* dereferenceable(16) bitcast ({ i64, i8** }* @.ref.tmp to %"class.base::span.313"*)) #7
  %52 = extractvalue { i64, %"class.v8::Eternal"* } %51, 1
  %53 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %53) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %0) #7
  %54 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #7
  %55 = bitcast %"class.v8::Eternal"* %52 to %"class.v8::Value"**
  %56 = load %"class.v8::Value"*, %"class.v8::Value"** %55, align 8
  %57 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %41, %"class.v8::Context"* %54, %"class.v8::Value"* %56) #7
  %58 = icmp eq %"class.v8::Value"* %57, null
  br i1 %58, label %59, label %65

59:                                               ; preds = %46
  %60 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %61 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %62 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %62, i64 5
  %64 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %63, align 8
  call void %64(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %60) #7
  br label %969

65:                                               ; preds = %46
  %66 = bitcast %"class.v8::Value"* %57 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = and i64 %67, 3
  %69 = icmp eq i64 %68, 1
  br i1 %69, label %70, label %87

70:                                               ; preds = %65
  %71 = add i64 %67, -1
  %72 = inttoptr i64 %71 to i32*
  %73 = load i32, i32* %72, align 4
  %74 = and i64 %67, -4294967296
  %75 = zext i32 %73 to i64
  %76 = or i64 %74, %75
  %77 = add i64 %76, 7
  %78 = inttoptr i64 %77 to i16*
  %79 = load i16, i16* %78, align 2
  %80 = icmp eq i16 %79, 67
  br i1 %80, label %81, label %87

81:                                               ; preds = %70
  %82 = add i64 %67, 23
  %83 = inttoptr i64 %82 to i32*
  %84 = load i32, i32* %83, align 4
  %85 = and i32 %84, -2
  %86 = icmp eq i32 %85, 10
  br i1 %86, label %102, label %87

87:                                               ; preds = %70, %65, %81
  %88 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* nonnull %57) #7
  br i1 %88, label %89, label %92, !prof !2

89:                                               ; preds = %87
  %90 = bitcast %"class.v8::Value"* %57 to %"class.v8::Uint32"*
  %91 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* nonnull %90) #7
  br label %95

92:                                               ; preds = %87
  %93 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %57) #7
  %94 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %57, i32 2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  br label %95

95:                                               ; preds = %89, %92
  %96 = phi i32 [ %91, %89 ], [ %94, %92 ]
  %97 = load i32, i32* %43, align 8
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %969

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.blink::GPUTextureViewDescriptor", %"class.blink::GPUTextureViewDescriptor"* %2, i64 0, i32 5
  store i32 %96, i32* %100, align 4
  %101 = getelementptr inbounds %"class.blink::GPUTextureViewDescriptor", %"class.blink::GPUTextureViewDescriptor"* %2, i64 0, i32 1
  store i8 1, i8* %101, align 8
  br label %102

102:                                              ; preds = %99, %81
  %103 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %52, i64 1, i32 0
  %104 = bitcast %"class.v8::Name"** %103 to %"class.v8::Value"**
  %105 = load %"class.v8::Value"*, %"class.v8::Value"** %104, align 8
  %106 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %41, %"class.v8::Context"* %54, %"class.v8::Value"* %105) #7
  %107 = icmp eq %"class.v8::Value"* %106, null
  br i1 %107, label %108, label %114

108:                                              ; preds = %102
  %109 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %110 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %111 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %110, align 8
  %112 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %111, i64 5
  %113 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %112, align 8
  call void %113(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %109) #7
  br label %969

114:                                              ; preds = %102
  %115 = bitcast %"class.v8::Value"* %106 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = and i64 %116, 3
  %118 = icmp eq i64 %117, 1
  br i1 %118, label %119, label %136

119:                                              ; preds = %114
  %120 = add i64 %116, -1
  %121 = inttoptr i64 %120 to i32*
  %122 = load i32, i32* %121, align 4
  %123 = and i64 %116, -4294967296
  %124 = zext i32 %122 to i64
  %125 = or i64 %123, %124
  %126 = add i64 %125, 7
  %127 = inttoptr i64 %126 to i16*
  %128 = load i16, i16* %127, align 2
  %129 = icmp eq i16 %128, 67
  br i1 %129, label %130, label %136

130:                                              ; preds = %119
  %131 = add i64 %116, 23
  %132 = inttoptr i64 %131 to i32*
  %133 = load i32, i32* %132, align 4
  %134 = and i32 %133, -2
  %135 = icmp eq i32 %134, 10
  br i1 %135, label %342, label %136

136:                                              ; preds = %119, %114, %130
  %137 = bitcast %"class.blink::V8StringResource"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %137) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %137, i8 -86, i64 152, i1 false)
  %138 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %106, %"class.v8::Value"** %138, align 8
  %139 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 1
  store i32 0, i32* %139, align 8
  %140 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %140, align 8
  %141 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 3, i32 1
  %142 = bitcast %"class.std::__1::unique_ptr"* %141 to i64*
  store i64 0, i64* %142, align 8
  %143 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %6, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %143, label %144, label %320

144:                                              ; preds = %136
  %145 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %145) #7
  %146 = load %"class.v8::Value"*, %"class.v8::Value"** %138, align 8
  %147 = icmp eq %"class.v8::Value"* %146, null
  br i1 %147, label %152, label %148, !prof !3

148:                                              ; preds = %144
  %149 = bitcast %"class.v8::Value"* %146 to %"class.v8::String"*
  %150 = load i32, i32* %139, align 8
  %151 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %149, i32 %150) #7
  br label %172

152:                                              ; preds = %144
  %153 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %140, align 8
  %154 = icmp eq %"class.WTF::StringImpl"* %153, null
  br i1 %154, label %172, label %155

155:                                              ; preds = %152
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load atomic i32, i32* %156 monotonic, align 4
  %158 = and i32 %157, 2
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %172

160:                                              ; preds = %155
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 0
  %162 = load i32, i32* %161, align 4
  %163 = zext i32 %162 to i33
  %164 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %163, i33 1) #7
  %165 = extractvalue { i33, i1 } %164, 1
  %166 = extractvalue { i33, i1 } %164, 0
  %167 = icmp slt i33 %166, 0
  %168 = or i1 %165, %167
  br i1 %168, label %169, label %170, !prof !3

169:                                              ; preds = %160
  call void @llvm.trap() #7
  unreachable

170:                                              ; preds = %160
  %171 = trunc i33 %166 to i32
  store i32 %171, i32* %161, align 4
  br label %172

172:                                              ; preds = %148, %152, %155, %170
  %173 = phi %"class.WTF::StringImpl"* [ %151, %148 ], [ null, %152 ], [ %153, %155 ], [ %153, %170 ]
  %174 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %173, %"class.WTF::StringImpl"** %174, align 8
  %175 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %175) #7
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0), i64 16) #7
  %176 = call zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* nonnull dereferenceable(8) %7, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @_ZZN5blink26V8GPUTextureViewDescriptor6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_24GPUTextureViewDescriptorERNS_14ExceptionStateEE12kValidValues, i64 0, i64 0), i64 3, %"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %177 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %178 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %177, align 8
  %179 = icmp eq %"class.WTF::StringImpl"* %178, null
  br i1 %179, label %193, label %180

180:                                              ; preds = %172
  %181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = load atomic i32, i32* %181 monotonic, align 4
  %183 = and i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 0
  %186 = load i32, i32* %185, align 4
  br i1 %184, label %187, label %189

187:                                              ; preds = %180
  %188 = add i32 %186, -1
  store i32 %188, i32* %185, align 4
  br label %189

189:                                              ; preds = %187, %180
  %190 = phi i32 [ %188, %187 ], [ %186, %180 ]
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %193

192:                                              ; preds = %189
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %178) #7
  br label %193

193:                                              ; preds = %172, %189, %192
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %175) #7
  %194 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %174, align 8
  %195 = icmp eq %"class.WTF::StringImpl"* %194, null
  br i1 %195, label %209, label %196

196:                                              ; preds = %193
  %197 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %198 = load atomic i32, i32* %197 monotonic, align 4
  %199 = and i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 0, i32 0
  %202 = load i32, i32* %201, align 4
  br i1 %200, label %203, label %205

203:                                              ; preds = %196
  %204 = add i32 %202, -1
  store i32 %204, i32* %201, align 4
  br label %205

205:                                              ; preds = %203, %196
  %206 = phi i32 [ %204, %203 ], [ %202, %196 ]
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %208, label %209

208:                                              ; preds = %205
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %194) #7
  br label %209

209:                                              ; preds = %193, %205, %208
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %145) #7
  br i1 %176, label %210, label %320

210:                                              ; preds = %209
  %211 = load %"class.v8::Value"*, %"class.v8::Value"** %138, align 8
  %212 = icmp eq %"class.v8::Value"* %211, null
  br i1 %212, label %213, label %237, !prof !3

213:                                              ; preds = %210
  %214 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %140, align 8
  %215 = icmp eq %"class.WTF::StringImpl"* %214, null
  br i1 %215, label %216, label %218

216:                                              ; preds = %213
  %217 = getelementptr inbounds %"class.blink::GPUTextureViewDescriptor", %"class.blink::GPUTextureViewDescriptor"* %2, i64 0, i32 6
  br label %262

218:                                              ; preds = %213
  %219 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %214, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %220 = load atomic i32, i32* %219 monotonic, align 4
  %221 = and i32 %220, 2
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %235

223:                                              ; preds = %218
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %214, i64 0, i32 0
  %225 = load i32, i32* %224, align 4
  %226 = zext i32 %225 to i33
  %227 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %226, i33 1) #7
  %228 = extractvalue { i33, i1 } %227, 1
  %229 = extractvalue { i33, i1 } %227, 0
  %230 = icmp slt i33 %229, 0
  %231 = or i1 %228, %230
  br i1 %231, label %232, label %233, !prof !3

232:                                              ; preds = %223
  call void @llvm.trap() #7
  unreachable

233:                                              ; preds = %223
  %234 = trunc i33 %229 to i32
  store i32 %234, i32* %224, align 4
  br label %235

235:                                              ; preds = %218, %233
  %236 = getelementptr inbounds %"class.blink::GPUTextureViewDescriptor", %"class.blink::GPUTextureViewDescriptor"* %2, i64 0, i32 6
  br label %243

237:                                              ; preds = %210
  %238 = bitcast %"class.v8::Value"* %211 to %"class.v8::String"*
  %239 = load i32, i32* %139, align 8
  %240 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %238, i32 %239) #7
  %241 = getelementptr inbounds %"class.blink::GPUTextureViewDescriptor", %"class.blink::GPUTextureViewDescriptor"* %2, i64 0, i32 6
  %242 = icmp eq %"class.WTF::StringImpl"* %240, null
  br i1 %242, label %262, label %243

243:                                              ; preds = %235, %237
  %244 = phi %"class.WTF::String"* [ %236, %235 ], [ %241, %237 ]
  %245 = phi %"class.WTF::StringImpl"* [ %214, %235 ], [ %240, %237 ]
  %246 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %245, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %247 = load atomic i32, i32* %246 monotonic, align 4
  %248 = and i32 %247, 2
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %250, label %262

250:                                              ; preds = %243
  %251 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %245, i64 0, i32 0
  %252 = load i32, i32* %251, align 4
  %253 = zext i32 %252 to i33
  %254 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %253, i33 1) #7
  %255 = extractvalue { i33, i1 } %254, 1
  %256 = extractvalue { i33, i1 } %254, 0
  %257 = icmp slt i33 %256, 0
  %258 = or i1 %255, %257
  br i1 %258, label %259, label %260, !prof !3

259:                                              ; preds = %250
  call void @llvm.trap() #7
  unreachable

260:                                              ; preds = %250
  %261 = trunc i33 %256 to i32
  store i32 %261, i32* %251, align 4
  br label %262

262:                                              ; preds = %216, %260, %243, %237
  %263 = phi i1 [ false, %260 ], [ false, %243 ], [ true, %237 ], [ true, %216 ]
  %264 = phi %"class.WTF::String"* [ %244, %260 ], [ %244, %243 ], [ %241, %237 ], [ %217, %216 ]
  %265 = phi %"class.WTF::StringImpl"* [ %245, %260 ], [ %245, %243 ], [ null, %237 ], [ null, %216 ]
  %266 = ptrtoint %"class.WTF::StringImpl"* %265 to i64
  %267 = bitcast %"class.WTF::String"* %264 to i64*
  %268 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %264, i64 0, i32 0, i32 0
  %269 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %268, align 8
  store i64 %266, i64* %267, align 8
  %270 = icmp eq %"class.WTF::StringImpl"* %269, null
  br i1 %270, label %284, label %271

271:                                              ; preds = %262
  %272 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %269, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %273 = load atomic i32, i32* %272 monotonic, align 4
  %274 = and i32 %273, 2
  %275 = icmp eq i32 %274, 0
  %276 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %269, i64 0, i32 0
  %277 = load i32, i32* %276, align 4
  br i1 %275, label %278, label %280

278:                                              ; preds = %271
  %279 = add i32 %277, -1
  store i32 %279, i32* %276, align 4
  br label %280

280:                                              ; preds = %278, %271
  %281 = phi i32 [ %279, %278 ], [ %277, %271 ]
  %282 = icmp eq i32 %281, 0
  br i1 %282, label %283, label %284

283:                                              ; preds = %280
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %269) #7
  br label %284

284:                                              ; preds = %262, %280, %283
  br i1 %263, label %298, label %285

285:                                              ; preds = %284
  %286 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %265, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %287 = load atomic i32, i32* %286 monotonic, align 4
  %288 = and i32 %287, 2
  %289 = icmp eq i32 %288, 0
  %290 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %265, i64 0, i32 0
  %291 = load i32, i32* %290, align 4
  br i1 %289, label %292, label %294

292:                                              ; preds = %285
  %293 = add i32 %291, -1
  store i32 %293, i32* %290, align 4
  br label %294

294:                                              ; preds = %292, %285
  %295 = phi i32 [ %293, %292 ], [ %291, %285 ]
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %297, label %298

297:                                              ; preds = %294
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %265) #7
  br label %298

298:                                              ; preds = %284, %294, %297
  %299 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %300 = load i8*, i8** %299, align 8
  store i8* null, i8** %299, align 8
  %301 = icmp eq i8* %300, null
  br i1 %301, label %303, label %302

302:                                              ; preds = %298
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %300) #7
  br label %303

303:                                              ; preds = %302, %298
  %304 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %140, align 8
  %305 = icmp eq %"class.WTF::StringImpl"* %304, null
  br i1 %305, label %319, label %306

306:                                              ; preds = %303
  %307 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %304, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %308 = load atomic i32, i32* %307 monotonic, align 4
  %309 = and i32 %308, 2
  %310 = icmp eq i32 %309, 0
  %311 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %304, i64 0, i32 0
  %312 = load i32, i32* %311, align 4
  br i1 %310, label %313, label %315

313:                                              ; preds = %306
  %314 = add i32 %312, -1
  store i32 %314, i32* %311, align 4
  br label %315

315:                                              ; preds = %313, %306
  %316 = phi i32 [ %314, %313 ], [ %312, %306 ]
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %318, label %319

318:                                              ; preds = %315
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %304) #7
  br label %319

319:                                              ; preds = %303, %315, %318
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %137) #7
  br label %342

320:                                              ; preds = %209, %136
  %321 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %322 = load i8*, i8** %321, align 8
  store i8* null, i8** %321, align 8
  %323 = icmp eq i8* %322, null
  br i1 %323, label %325, label %324

324:                                              ; preds = %320
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %322) #7
  br label %325

325:                                              ; preds = %324, %320
  %326 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %140, align 8
  %327 = icmp eq %"class.WTF::StringImpl"* %326, null
  br i1 %327, label %341, label %328

328:                                              ; preds = %325
  %329 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %326, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %330 = load atomic i32, i32* %329 monotonic, align 4
  %331 = and i32 %330, 2
  %332 = icmp eq i32 %331, 0
  %333 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %326, i64 0, i32 0
  %334 = load i32, i32* %333, align 4
  br i1 %332, label %335, label %337

335:                                              ; preds = %328
  %336 = add i32 %334, -1
  store i32 %336, i32* %333, align 4
  br label %337

337:                                              ; preds = %335, %328
  %338 = phi i32 [ %336, %335 ], [ %334, %328 ]
  %339 = icmp eq i32 %338, 0
  br i1 %339, label %340, label %341

340:                                              ; preds = %337
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %326) #7
  br label %341

341:                                              ; preds = %325, %337, %340
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %137) #7
  br label %969

342:                                              ; preds = %319, %130
  %343 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %52, i64 2, i32 0
  %344 = bitcast %"class.v8::Name"** %343 to %"class.v8::Value"**
  %345 = load %"class.v8::Value"*, %"class.v8::Value"** %344, align 8
  %346 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %41, %"class.v8::Context"* %54, %"class.v8::Value"* %345) #7
  %347 = icmp eq %"class.v8::Value"* %346, null
  br i1 %347, label %348, label %354

348:                                              ; preds = %342
  %349 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %350 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %351 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %350, align 8
  %352 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %351, i64 5
  %353 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %352, align 8
  call void %353(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %349) #7
  br label %969

354:                                              ; preds = %342
  %355 = bitcast %"class.v8::Value"* %346 to i64*
  %356 = load i64, i64* %355, align 8
  %357 = and i64 %356, 3
  %358 = icmp eq i64 %357, 1
  br i1 %358, label %359, label %376

359:                                              ; preds = %354
  %360 = add i64 %356, -1
  %361 = inttoptr i64 %360 to i32*
  %362 = load i32, i32* %361, align 4
  %363 = and i64 %356, -4294967296
  %364 = zext i32 %362 to i64
  %365 = or i64 %363, %364
  %366 = add i64 %365, 7
  %367 = inttoptr i64 %366 to i16*
  %368 = load i16, i16* %367, align 2
  %369 = icmp eq i16 %368, 67
  br i1 %369, label %370, label %376

370:                                              ; preds = %359
  %371 = add i64 %356, 23
  %372 = inttoptr i64 %371 to i32*
  %373 = load i32, i32* %372, align 4
  %374 = and i32 %373, -2
  %375 = icmp eq i32 %374, 10
  br i1 %375, label %391, label %376

376:                                              ; preds = %359, %354, %370
  %377 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* nonnull %346) #7
  br i1 %377, label %378, label %381, !prof !2

378:                                              ; preds = %376
  %379 = bitcast %"class.v8::Value"* %346 to %"class.v8::Uint32"*
  %380 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* nonnull %379) #7
  br label %384

381:                                              ; preds = %376
  %382 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %346) #7
  %383 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %346, i32 2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  br label %384

384:                                              ; preds = %378, %381
  %385 = phi i32 [ %380, %378 ], [ %383, %381 ]
  %386 = load i32, i32* %43, align 8
  %387 = icmp eq i32 %386, 0
  br i1 %387, label %388, label %969

388:                                              ; preds = %384
  %389 = getelementptr inbounds %"class.blink::GPUTextureViewDescriptor", %"class.blink::GPUTextureViewDescriptor"* %2, i64 0, i32 7
  store i32 %385, i32* %389, align 8
  %390 = getelementptr inbounds %"class.blink::GPUTextureViewDescriptor", %"class.blink::GPUTextureViewDescriptor"* %2, i64 0, i32 2
  store i8 1, i8* %390, align 1
  br label %391

391:                                              ; preds = %388, %370
  %392 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %52, i64 3, i32 0
  %393 = bitcast %"class.v8::Name"** %392 to %"class.v8::Value"**
  %394 = load %"class.v8::Value"*, %"class.v8::Value"** %393, align 8
  %395 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %41, %"class.v8::Context"* %54, %"class.v8::Value"* %394) #7
  %396 = icmp eq %"class.v8::Value"* %395, null
  br i1 %396, label %397, label %403

397:                                              ; preds = %391
  %398 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %399 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %400 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %399, align 8
  %401 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %400, i64 5
  %402 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %401, align 8
  call void %402(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %398) #7
  br label %969

403:                                              ; preds = %391
  %404 = bitcast %"class.v8::Value"* %395 to i64*
  %405 = load i64, i64* %404, align 8
  %406 = and i64 %405, 3
  %407 = icmp eq i64 %406, 1
  br i1 %407, label %408, label %425

408:                                              ; preds = %403
  %409 = add i64 %405, -1
  %410 = inttoptr i64 %409 to i32*
  %411 = load i32, i32* %410, align 4
  %412 = and i64 %405, -4294967296
  %413 = zext i32 %411 to i64
  %414 = or i64 %412, %413
  %415 = add i64 %414, 7
  %416 = inttoptr i64 %415 to i16*
  %417 = load i16, i16* %416, align 2
  %418 = icmp eq i16 %417, 67
  br i1 %418, label %419, label %425

419:                                              ; preds = %408
  %420 = add i64 %405, 23
  %421 = inttoptr i64 %420 to i32*
  %422 = load i32, i32* %421, align 4
  %423 = and i32 %422, -2
  %424 = icmp eq i32 %423, 10
  br i1 %424, label %440, label %425

425:                                              ; preds = %408, %403, %419
  %426 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* nonnull %395) #7
  br i1 %426, label %427, label %430, !prof !2

427:                                              ; preds = %425
  %428 = bitcast %"class.v8::Value"* %395 to %"class.v8::Uint32"*
  %429 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* nonnull %428) #7
  br label %433

430:                                              ; preds = %425
  %431 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %395) #7
  %432 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %395, i32 2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  br label %433

433:                                              ; preds = %427, %430
  %434 = phi i32 [ %429, %427 ], [ %432, %430 ]
  %435 = load i32, i32* %43, align 8
  %436 = icmp eq i32 %435, 0
  br i1 %436, label %437, label %969

437:                                              ; preds = %433
  %438 = getelementptr inbounds %"class.blink::GPUTextureViewDescriptor", %"class.blink::GPUTextureViewDescriptor"* %2, i64 0, i32 8
  store i32 %434, i32* %438, align 4
  %439 = getelementptr inbounds %"class.blink::GPUTextureViewDescriptor", %"class.blink::GPUTextureViewDescriptor"* %2, i64 0, i32 3
  store i8 1, i8* %439, align 2
  br label %440

440:                                              ; preds = %437, %419
  %441 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %52, i64 4, i32 0
  %442 = bitcast %"class.v8::Name"** %441 to %"class.v8::Value"**
  %443 = load %"class.v8::Value"*, %"class.v8::Value"** %442, align 8
  %444 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %41, %"class.v8::Context"* %54, %"class.v8::Value"* %443) #7
  %445 = icmp eq %"class.v8::Value"* %444, null
  br i1 %445, label %446, label %452

446:                                              ; preds = %440
  %447 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %448 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %449 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %448, align 8
  %450 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %449, i64 5
  %451 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %450, align 8
  call void %451(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %447) #7
  br label %969

452:                                              ; preds = %440
  %453 = bitcast %"class.v8::Value"* %444 to i64*
  %454 = load i64, i64* %453, align 8
  %455 = and i64 %454, 3
  %456 = icmp eq i64 %455, 1
  br i1 %456, label %457, label %474

457:                                              ; preds = %452
  %458 = add i64 %454, -1
  %459 = inttoptr i64 %458 to i32*
  %460 = load i32, i32* %459, align 4
  %461 = and i64 %454, -4294967296
  %462 = zext i32 %460 to i64
  %463 = or i64 %461, %462
  %464 = add i64 %463, 7
  %465 = inttoptr i64 %464 to i16*
  %466 = load i16, i16* %465, align 2
  %467 = icmp eq i16 %466, 67
  br i1 %467, label %468, label %474

468:                                              ; preds = %457
  %469 = add i64 %454, 23
  %470 = inttoptr i64 %469 to i32*
  %471 = load i32, i32* %470, align 4
  %472 = and i32 %471, -2
  %473 = icmp eq i32 %472, 10
  br i1 %473, label %680, label %474

474:                                              ; preds = %457, %452, %468
  %475 = bitcast %"class.blink::V8StringResource"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %475) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %475, i8 -86, i64 152, i1 false)
  %476 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %444, %"class.v8::Value"** %476, align 8
  %477 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 1
  store i32 0, i32* %477, align 8
  %478 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %478, align 8
  %479 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 3, i32 1
  %480 = bitcast %"class.std::__1::unique_ptr"* %479 to i64*
  store i64 0, i64* %480, align 8
  %481 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %9, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %481, label %482, label %658

482:                                              ; preds = %474
  %483 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %483) #7
  %484 = load %"class.v8::Value"*, %"class.v8::Value"** %476, align 8
  %485 = icmp eq %"class.v8::Value"* %484, null
  br i1 %485, label %490, label %486, !prof !3

486:                                              ; preds = %482
  %487 = bitcast %"class.v8::Value"* %484 to %"class.v8::String"*
  %488 = load i32, i32* %477, align 8
  %489 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %487, i32 %488) #7
  br label %510

490:                                              ; preds = %482
  %491 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %478, align 8
  %492 = icmp eq %"class.WTF::StringImpl"* %491, null
  br i1 %492, label %510, label %493

493:                                              ; preds = %490
  %494 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %491, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %495 = load atomic i32, i32* %494 monotonic, align 4
  %496 = and i32 %495, 2
  %497 = icmp eq i32 %496, 0
  br i1 %497, label %498, label %510

498:                                              ; preds = %493
  %499 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %491, i64 0, i32 0
  %500 = load i32, i32* %499, align 4
  %501 = zext i32 %500 to i33
  %502 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %501, i33 1) #7
  %503 = extractvalue { i33, i1 } %502, 1
  %504 = extractvalue { i33, i1 } %502, 0
  %505 = icmp slt i33 %504, 0
  %506 = or i1 %503, %505
  br i1 %506, label %507, label %508, !prof !3

507:                                              ; preds = %498
  call void @llvm.trap() #7
  unreachable

508:                                              ; preds = %498
  %509 = trunc i33 %504 to i32
  store i32 %509, i32* %499, align 4
  br label %510

510:                                              ; preds = %486, %490, %493, %508
  %511 = phi %"class.WTF::StringImpl"* [ %489, %486 ], [ null, %490 ], [ %491, %493 ], [ %491, %508 ]
  %512 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %511, %"class.WTF::StringImpl"** %512, align 8
  %513 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %513) #7
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %11, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.11, i64 0, i64 0), i64 23) #7
  %514 = call zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* nonnull dereferenceable(8) %10, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZZN5blink26V8GPUTextureViewDescriptor6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_24GPUTextureViewDescriptorERNS_14ExceptionStateEE12kValidValues_0, i64 0, i64 0), i64 6, %"class.WTF::String"* nonnull dereferenceable(8) %11, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %515 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %516 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %515, align 8
  %517 = icmp eq %"class.WTF::StringImpl"* %516, null
  br i1 %517, label %531, label %518

518:                                              ; preds = %510
  %519 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %516, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %520 = load atomic i32, i32* %519 monotonic, align 4
  %521 = and i32 %520, 2
  %522 = icmp eq i32 %521, 0
  %523 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %516, i64 0, i32 0
  %524 = load i32, i32* %523, align 4
  br i1 %522, label %525, label %527

525:                                              ; preds = %518
  %526 = add i32 %524, -1
  store i32 %526, i32* %523, align 4
  br label %527

527:                                              ; preds = %525, %518
  %528 = phi i32 [ %526, %525 ], [ %524, %518 ]
  %529 = icmp eq i32 %528, 0
  br i1 %529, label %530, label %531

530:                                              ; preds = %527
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %516) #7
  br label %531

531:                                              ; preds = %510, %527, %530
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %513) #7
  %532 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %512, align 8
  %533 = icmp eq %"class.WTF::StringImpl"* %532, null
  br i1 %533, label %547, label %534

534:                                              ; preds = %531
  %535 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %532, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %536 = load atomic i32, i32* %535 monotonic, align 4
  %537 = and i32 %536, 2
  %538 = icmp eq i32 %537, 0
  %539 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %532, i64 0, i32 0
  %540 = load i32, i32* %539, align 4
  br i1 %538, label %541, label %543

541:                                              ; preds = %534
  %542 = add i32 %540, -1
  store i32 %542, i32* %539, align 4
  br label %543

543:                                              ; preds = %541, %534
  %544 = phi i32 [ %542, %541 ], [ %540, %534 ]
  %545 = icmp eq i32 %544, 0
  br i1 %545, label %546, label %547

546:                                              ; preds = %543
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %532) #7
  br label %547

547:                                              ; preds = %531, %543, %546
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %483) #7
  br i1 %514, label %548, label %658

548:                                              ; preds = %547
  %549 = load %"class.v8::Value"*, %"class.v8::Value"** %476, align 8
  %550 = icmp eq %"class.v8::Value"* %549, null
  br i1 %550, label %551, label %575, !prof !3

551:                                              ; preds = %548
  %552 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %478, align 8
  %553 = icmp eq %"class.WTF::StringImpl"* %552, null
  br i1 %553, label %554, label %556

554:                                              ; preds = %551
  %555 = getelementptr inbounds %"class.blink::GPUTextureViewDescriptor", %"class.blink::GPUTextureViewDescriptor"* %2, i64 0, i32 9
  br label %600

556:                                              ; preds = %551
  %557 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %552, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %558 = load atomic i32, i32* %557 monotonic, align 4
  %559 = and i32 %558, 2
  %560 = icmp eq i32 %559, 0
  br i1 %560, label %561, label %573

561:                                              ; preds = %556
  %562 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %552, i64 0, i32 0
  %563 = load i32, i32* %562, align 4
  %564 = zext i32 %563 to i33
  %565 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %564, i33 1) #7
  %566 = extractvalue { i33, i1 } %565, 1
  %567 = extractvalue { i33, i1 } %565, 0
  %568 = icmp slt i33 %567, 0
  %569 = or i1 %566, %568
  br i1 %569, label %570, label %571, !prof !3

570:                                              ; preds = %561
  call void @llvm.trap() #7
  unreachable

571:                                              ; preds = %561
  %572 = trunc i33 %567 to i32
  store i32 %572, i32* %562, align 4
  br label %573

573:                                              ; preds = %556, %571
  %574 = getelementptr inbounds %"class.blink::GPUTextureViewDescriptor", %"class.blink::GPUTextureViewDescriptor"* %2, i64 0, i32 9
  br label %581

575:                                              ; preds = %548
  %576 = bitcast %"class.v8::Value"* %549 to %"class.v8::String"*
  %577 = load i32, i32* %477, align 8
  %578 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %576, i32 %577) #7
  %579 = getelementptr inbounds %"class.blink::GPUTextureViewDescriptor", %"class.blink::GPUTextureViewDescriptor"* %2, i64 0, i32 9
  %580 = icmp eq %"class.WTF::StringImpl"* %578, null
  br i1 %580, label %600, label %581

581:                                              ; preds = %573, %575
  %582 = phi %"class.WTF::String"* [ %574, %573 ], [ %579, %575 ]
  %583 = phi %"class.WTF::StringImpl"* [ %552, %573 ], [ %578, %575 ]
  %584 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %583, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %585 = load atomic i32, i32* %584 monotonic, align 4
  %586 = and i32 %585, 2
  %587 = icmp eq i32 %586, 0
  br i1 %587, label %588, label %600

588:                                              ; preds = %581
  %589 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %583, i64 0, i32 0
  %590 = load i32, i32* %589, align 4
  %591 = zext i32 %590 to i33
  %592 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %591, i33 1) #7
  %593 = extractvalue { i33, i1 } %592, 1
  %594 = extractvalue { i33, i1 } %592, 0
  %595 = icmp slt i33 %594, 0
  %596 = or i1 %593, %595
  br i1 %596, label %597, label %598, !prof !3

597:                                              ; preds = %588
  call void @llvm.trap() #7
  unreachable

598:                                              ; preds = %588
  %599 = trunc i33 %594 to i32
  store i32 %599, i32* %589, align 4
  br label %600

600:                                              ; preds = %554, %598, %581, %575
  %601 = phi i1 [ false, %598 ], [ false, %581 ], [ true, %575 ], [ true, %554 ]
  %602 = phi %"class.WTF::String"* [ %582, %598 ], [ %582, %581 ], [ %579, %575 ], [ %555, %554 ]
  %603 = phi %"class.WTF::StringImpl"* [ %583, %598 ], [ %583, %581 ], [ null, %575 ], [ null, %554 ]
  %604 = ptrtoint %"class.WTF::StringImpl"* %603 to i64
  %605 = bitcast %"class.WTF::String"* %602 to i64*
  %606 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %602, i64 0, i32 0, i32 0
  %607 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %606, align 8
  store i64 %604, i64* %605, align 8
  %608 = icmp eq %"class.WTF::StringImpl"* %607, null
  br i1 %608, label %622, label %609

609:                                              ; preds = %600
  %610 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %607, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %611 = load atomic i32, i32* %610 monotonic, align 4
  %612 = and i32 %611, 2
  %613 = icmp eq i32 %612, 0
  %614 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %607, i64 0, i32 0
  %615 = load i32, i32* %614, align 4
  br i1 %613, label %616, label %618

616:                                              ; preds = %609
  %617 = add i32 %615, -1
  store i32 %617, i32* %614, align 4
  br label %618

618:                                              ; preds = %616, %609
  %619 = phi i32 [ %617, %616 ], [ %615, %609 ]
  %620 = icmp eq i32 %619, 0
  br i1 %620, label %621, label %622

621:                                              ; preds = %618
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %607) #7
  br label %622

622:                                              ; preds = %600, %618, %621
  br i1 %601, label %636, label %623

623:                                              ; preds = %622
  %624 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %603, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %625 = load atomic i32, i32* %624 monotonic, align 4
  %626 = and i32 %625, 2
  %627 = icmp eq i32 %626, 0
  %628 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %603, i64 0, i32 0
  %629 = load i32, i32* %628, align 4
  br i1 %627, label %630, label %632

630:                                              ; preds = %623
  %631 = add i32 %629, -1
  store i32 %631, i32* %628, align 4
  br label %632

632:                                              ; preds = %630, %623
  %633 = phi i32 [ %631, %630 ], [ %629, %623 ]
  %634 = icmp eq i32 %633, 0
  br i1 %634, label %635, label %636

635:                                              ; preds = %632
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %603) #7
  br label %636

636:                                              ; preds = %622, %632, %635
  %637 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %638 = load i8*, i8** %637, align 8
  store i8* null, i8** %637, align 8
  %639 = icmp eq i8* %638, null
  br i1 %639, label %641, label %640

640:                                              ; preds = %636
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %638) #7
  br label %641

641:                                              ; preds = %640, %636
  %642 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %478, align 8
  %643 = icmp eq %"class.WTF::StringImpl"* %642, null
  br i1 %643, label %657, label %644

644:                                              ; preds = %641
  %645 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %642, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %646 = load atomic i32, i32* %645 monotonic, align 4
  %647 = and i32 %646, 2
  %648 = icmp eq i32 %647, 0
  %649 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %642, i64 0, i32 0
  %650 = load i32, i32* %649, align 4
  br i1 %648, label %651, label %653

651:                                              ; preds = %644
  %652 = add i32 %650, -1
  store i32 %652, i32* %649, align 4
  br label %653

653:                                              ; preds = %651, %644
  %654 = phi i32 [ %652, %651 ], [ %650, %644 ]
  %655 = icmp eq i32 %654, 0
  br i1 %655, label %656, label %657

656:                                              ; preds = %653
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %642) #7
  br label %657

657:                                              ; preds = %641, %653, %656
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %475) #7
  br label %680

658:                                              ; preds = %547, %474
  %659 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %660 = load i8*, i8** %659, align 8
  store i8* null, i8** %659, align 8
  %661 = icmp eq i8* %660, null
  br i1 %661, label %663, label %662

662:                                              ; preds = %658
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %660) #7
  br label %663

663:                                              ; preds = %662, %658
  %664 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %478, align 8
  %665 = icmp eq %"class.WTF::StringImpl"* %664, null
  br i1 %665, label %679, label %666

666:                                              ; preds = %663
  %667 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %664, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %668 = load atomic i32, i32* %667 monotonic, align 4
  %669 = and i32 %668, 2
  %670 = icmp eq i32 %669, 0
  %671 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %664, i64 0, i32 0
  %672 = load i32, i32* %671, align 4
  br i1 %670, label %673, label %675

673:                                              ; preds = %666
  %674 = add i32 %672, -1
  store i32 %674, i32* %671, align 4
  br label %675

675:                                              ; preds = %673, %666
  %676 = phi i32 [ %674, %673 ], [ %672, %666 ]
  %677 = icmp eq i32 %676, 0
  br i1 %677, label %678, label %679

678:                                              ; preds = %675
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %664) #7
  br label %679

679:                                              ; preds = %663, %675, %678
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %475) #7
  br label %969

680:                                              ; preds = %657, %468
  %681 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %52, i64 5, i32 0
  %682 = bitcast %"class.v8::Name"** %681 to %"class.v8::Value"**
  %683 = load %"class.v8::Value"*, %"class.v8::Value"** %682, align 8
  %684 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %41, %"class.v8::Context"* %54, %"class.v8::Value"* %683) #7
  %685 = icmp eq %"class.v8::Value"* %684, null
  br i1 %685, label %686, label %692

686:                                              ; preds = %680
  %687 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %688 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %689 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %688, align 8
  %690 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %689, i64 5
  %691 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %690, align 8
  call void %691(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %687) #7
  br label %969

692:                                              ; preds = %680
  %693 = bitcast %"class.v8::Value"* %684 to i64*
  %694 = load i64, i64* %693, align 8
  %695 = and i64 %694, 3
  %696 = icmp eq i64 %695, 1
  br i1 %696, label %697, label %714

697:                                              ; preds = %692
  %698 = add i64 %694, -1
  %699 = inttoptr i64 %698 to i32*
  %700 = load i32, i32* %699, align 4
  %701 = and i64 %694, -4294967296
  %702 = zext i32 %700 to i64
  %703 = or i64 %701, %702
  %704 = add i64 %703, 7
  %705 = inttoptr i64 %704 to i16*
  %706 = load i16, i16* %705, align 2
  %707 = icmp eq i16 %706, 67
  br i1 %707, label %708, label %714

708:                                              ; preds = %697
  %709 = add i64 %694, 23
  %710 = inttoptr i64 %709 to i32*
  %711 = load i32, i32* %710, align 4
  %712 = and i32 %711, -2
  %713 = icmp eq i32 %712, 10
  br i1 %713, label %920, label %714

714:                                              ; preds = %697, %692, %708
  %715 = bitcast %"class.blink::V8StringResource"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %715) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %715, i8 -86, i64 152, i1 false)
  %716 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %12, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %684, %"class.v8::Value"** %716, align 8
  %717 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %12, i64 0, i32 1
  store i32 0, i32* %717, align 8
  %718 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %12, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %718, align 8
  %719 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %12, i64 0, i32 3, i32 1
  %720 = bitcast %"class.std::__1::unique_ptr"* %719 to i64*
  store i64 0, i64* %720, align 8
  %721 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %12, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %721, label %722, label %898

722:                                              ; preds = %714
  %723 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %723) #7
  %724 = load %"class.v8::Value"*, %"class.v8::Value"** %716, align 8
  %725 = icmp eq %"class.v8::Value"* %724, null
  br i1 %725, label %730, label %726, !prof !3

726:                                              ; preds = %722
  %727 = bitcast %"class.v8::Value"* %724 to %"class.v8::String"*
  %728 = load i32, i32* %717, align 8
  %729 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %727, i32 %728) #7
  br label %750

730:                                              ; preds = %722
  %731 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %718, align 8
  %732 = icmp eq %"class.WTF::StringImpl"* %731, null
  br i1 %732, label %750, label %733

733:                                              ; preds = %730
  %734 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %731, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %735 = load atomic i32, i32* %734 monotonic, align 4
  %736 = and i32 %735, 2
  %737 = icmp eq i32 %736, 0
  br i1 %737, label %738, label %750

738:                                              ; preds = %733
  %739 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %731, i64 0, i32 0
  %740 = load i32, i32* %739, align 4
  %741 = zext i32 %740 to i33
  %742 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %741, i33 1) #7
  %743 = extractvalue { i33, i1 } %742, 1
  %744 = extractvalue { i33, i1 } %742, 0
  %745 = icmp slt i33 %744, 0
  %746 = or i1 %743, %745
  br i1 %746, label %747, label %748, !prof !3

747:                                              ; preds = %738
  call void @llvm.trap() #7
  unreachable

748:                                              ; preds = %738
  %749 = trunc i33 %744 to i32
  store i32 %749, i32* %739, align 4
  br label %750

750:                                              ; preds = %726, %730, %733, %748
  %751 = phi %"class.WTF::StringImpl"* [ %729, %726 ], [ null, %730 ], [ %731, %733 ], [ %731, %748 ]
  %752 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %751, %"class.WTF::StringImpl"** %752, align 8
  %753 = bitcast %"class.WTF::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %753) #7
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %14, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.65, i64 0, i64 0), i64 16) #7
  %754 = call zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* nonnull dereferenceable(8) %13, i8** getelementptr inbounds ([53 x i8*], [53 x i8*]* @_ZZN5blink26V8GPUTextureViewDescriptor6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_24GPUTextureViewDescriptorERNS_14ExceptionStateEE12kValidValues_1, i64 0, i64 0), i64 53, %"class.WTF::String"* nonnull dereferenceable(8) %14, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %755 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  %756 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %755, align 8
  %757 = icmp eq %"class.WTF::StringImpl"* %756, null
  br i1 %757, label %771, label %758

758:                                              ; preds = %750
  %759 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %756, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %760 = load atomic i32, i32* %759 monotonic, align 4
  %761 = and i32 %760, 2
  %762 = icmp eq i32 %761, 0
  %763 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %756, i64 0, i32 0
  %764 = load i32, i32* %763, align 4
  br i1 %762, label %765, label %767

765:                                              ; preds = %758
  %766 = add i32 %764, -1
  store i32 %766, i32* %763, align 4
  br label %767

767:                                              ; preds = %765, %758
  %768 = phi i32 [ %766, %765 ], [ %764, %758 ]
  %769 = icmp eq i32 %768, 0
  br i1 %769, label %770, label %771

770:                                              ; preds = %767
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %756) #7
  br label %771

771:                                              ; preds = %750, %767, %770
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %753) #7
  %772 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %752, align 8
  %773 = icmp eq %"class.WTF::StringImpl"* %772, null
  br i1 %773, label %787, label %774

774:                                              ; preds = %771
  %775 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %772, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %776 = load atomic i32, i32* %775 monotonic, align 4
  %777 = and i32 %776, 2
  %778 = icmp eq i32 %777, 0
  %779 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %772, i64 0, i32 0
  %780 = load i32, i32* %779, align 4
  br i1 %778, label %781, label %783

781:                                              ; preds = %774
  %782 = add i32 %780, -1
  store i32 %782, i32* %779, align 4
  br label %783

783:                                              ; preds = %781, %774
  %784 = phi i32 [ %782, %781 ], [ %780, %774 ]
  %785 = icmp eq i32 %784, 0
  br i1 %785, label %786, label %787

786:                                              ; preds = %783
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %772) #7
  br label %787

787:                                              ; preds = %771, %783, %786
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %723) #7
  br i1 %754, label %788, label %898

788:                                              ; preds = %787
  %789 = load %"class.v8::Value"*, %"class.v8::Value"** %716, align 8
  %790 = icmp eq %"class.v8::Value"* %789, null
  br i1 %790, label %791, label %815, !prof !3

791:                                              ; preds = %788
  %792 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %718, align 8
  %793 = icmp eq %"class.WTF::StringImpl"* %792, null
  br i1 %793, label %794, label %796

794:                                              ; preds = %791
  %795 = getelementptr inbounds %"class.blink::GPUTextureViewDescriptor", %"class.blink::GPUTextureViewDescriptor"* %2, i64 0, i32 10
  br label %840

796:                                              ; preds = %791
  %797 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %792, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %798 = load atomic i32, i32* %797 monotonic, align 4
  %799 = and i32 %798, 2
  %800 = icmp eq i32 %799, 0
  br i1 %800, label %801, label %813

801:                                              ; preds = %796
  %802 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %792, i64 0, i32 0
  %803 = load i32, i32* %802, align 4
  %804 = zext i32 %803 to i33
  %805 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %804, i33 1) #7
  %806 = extractvalue { i33, i1 } %805, 1
  %807 = extractvalue { i33, i1 } %805, 0
  %808 = icmp slt i33 %807, 0
  %809 = or i1 %806, %808
  br i1 %809, label %810, label %811, !prof !3

810:                                              ; preds = %801
  call void @llvm.trap() #7
  unreachable

811:                                              ; preds = %801
  %812 = trunc i33 %807 to i32
  store i32 %812, i32* %802, align 4
  br label %813

813:                                              ; preds = %796, %811
  %814 = getelementptr inbounds %"class.blink::GPUTextureViewDescriptor", %"class.blink::GPUTextureViewDescriptor"* %2, i64 0, i32 10
  br label %821

815:                                              ; preds = %788
  %816 = bitcast %"class.v8::Value"* %789 to %"class.v8::String"*
  %817 = load i32, i32* %717, align 8
  %818 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %816, i32 %817) #7
  %819 = getelementptr inbounds %"class.blink::GPUTextureViewDescriptor", %"class.blink::GPUTextureViewDescriptor"* %2, i64 0, i32 10
  %820 = icmp eq %"class.WTF::StringImpl"* %818, null
  br i1 %820, label %840, label %821

821:                                              ; preds = %813, %815
  %822 = phi %"class.WTF::String"* [ %814, %813 ], [ %819, %815 ]
  %823 = phi %"class.WTF::StringImpl"* [ %792, %813 ], [ %818, %815 ]
  %824 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %823, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %825 = load atomic i32, i32* %824 monotonic, align 4
  %826 = and i32 %825, 2
  %827 = icmp eq i32 %826, 0
  br i1 %827, label %828, label %840

828:                                              ; preds = %821
  %829 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %823, i64 0, i32 0
  %830 = load i32, i32* %829, align 4
  %831 = zext i32 %830 to i33
  %832 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %831, i33 1) #7
  %833 = extractvalue { i33, i1 } %832, 1
  %834 = extractvalue { i33, i1 } %832, 0
  %835 = icmp slt i33 %834, 0
  %836 = or i1 %833, %835
  br i1 %836, label %837, label %838, !prof !3

837:                                              ; preds = %828
  call void @llvm.trap() #7
  unreachable

838:                                              ; preds = %828
  %839 = trunc i33 %834 to i32
  store i32 %839, i32* %829, align 4
  br label %840

840:                                              ; preds = %794, %838, %821, %815
  %841 = phi i1 [ false, %838 ], [ false, %821 ], [ true, %815 ], [ true, %794 ]
  %842 = phi %"class.WTF::String"* [ %822, %838 ], [ %822, %821 ], [ %819, %815 ], [ %795, %794 ]
  %843 = phi %"class.WTF::StringImpl"* [ %823, %838 ], [ %823, %821 ], [ null, %815 ], [ null, %794 ]
  %844 = ptrtoint %"class.WTF::StringImpl"* %843 to i64
  %845 = bitcast %"class.WTF::String"* %842 to i64*
  %846 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %842, i64 0, i32 0, i32 0
  %847 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %846, align 8
  store i64 %844, i64* %845, align 8
  %848 = icmp eq %"class.WTF::StringImpl"* %847, null
  br i1 %848, label %862, label %849

849:                                              ; preds = %840
  %850 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %847, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %851 = load atomic i32, i32* %850 monotonic, align 4
  %852 = and i32 %851, 2
  %853 = icmp eq i32 %852, 0
  %854 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %847, i64 0, i32 0
  %855 = load i32, i32* %854, align 4
  br i1 %853, label %856, label %858

856:                                              ; preds = %849
  %857 = add i32 %855, -1
  store i32 %857, i32* %854, align 4
  br label %858

858:                                              ; preds = %856, %849
  %859 = phi i32 [ %857, %856 ], [ %855, %849 ]
  %860 = icmp eq i32 %859, 0
  br i1 %860, label %861, label %862

861:                                              ; preds = %858
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %847) #7
  br label %862

862:                                              ; preds = %840, %858, %861
  br i1 %841, label %876, label %863

863:                                              ; preds = %862
  %864 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %843, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %865 = load atomic i32, i32* %864 monotonic, align 4
  %866 = and i32 %865, 2
  %867 = icmp eq i32 %866, 0
  %868 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %843, i64 0, i32 0
  %869 = load i32, i32* %868, align 4
  br i1 %867, label %870, label %872

870:                                              ; preds = %863
  %871 = add i32 %869, -1
  store i32 %871, i32* %868, align 4
  br label %872

872:                                              ; preds = %870, %863
  %873 = phi i32 [ %871, %870 ], [ %869, %863 ]
  %874 = icmp eq i32 %873, 0
  br i1 %874, label %875, label %876

875:                                              ; preds = %872
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %843) #7
  br label %876

876:                                              ; preds = %862, %872, %875
  %877 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %12, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %878 = load i8*, i8** %877, align 8
  store i8* null, i8** %877, align 8
  %879 = icmp eq i8* %878, null
  br i1 %879, label %881, label %880

880:                                              ; preds = %876
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %878) #7
  br label %881

881:                                              ; preds = %880, %876
  %882 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %718, align 8
  %883 = icmp eq %"class.WTF::StringImpl"* %882, null
  br i1 %883, label %897, label %884

884:                                              ; preds = %881
  %885 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %882, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %886 = load atomic i32, i32* %885 monotonic, align 4
  %887 = and i32 %886, 2
  %888 = icmp eq i32 %887, 0
  %889 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %882, i64 0, i32 0
  %890 = load i32, i32* %889, align 4
  br i1 %888, label %891, label %893

891:                                              ; preds = %884
  %892 = add i32 %890, -1
  store i32 %892, i32* %889, align 4
  br label %893

893:                                              ; preds = %891, %884
  %894 = phi i32 [ %892, %891 ], [ %890, %884 ]
  %895 = icmp eq i32 %894, 0
  br i1 %895, label %896, label %897

896:                                              ; preds = %893
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %882) #7
  br label %897

897:                                              ; preds = %881, %893, %896
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %715) #7
  br label %920

898:                                              ; preds = %787, %714
  %899 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %12, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %900 = load i8*, i8** %899, align 8
  store i8* null, i8** %899, align 8
  %901 = icmp eq i8* %900, null
  br i1 %901, label %903, label %902

902:                                              ; preds = %898
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %900) #7
  br label %903

903:                                              ; preds = %902, %898
  %904 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %718, align 8
  %905 = icmp eq %"class.WTF::StringImpl"* %904, null
  br i1 %905, label %919, label %906

906:                                              ; preds = %903
  %907 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %904, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %908 = load atomic i32, i32* %907 monotonic, align 4
  %909 = and i32 %908, 2
  %910 = icmp eq i32 %909, 0
  %911 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %904, i64 0, i32 0
  %912 = load i32, i32* %911, align 4
  br i1 %910, label %913, label %915

913:                                              ; preds = %906
  %914 = add i32 %912, -1
  store i32 %914, i32* %911, align 4
  br label %915

915:                                              ; preds = %913, %906
  %916 = phi i32 [ %914, %913 ], [ %912, %906 ]
  %917 = icmp eq i32 %916, 0
  br i1 %917, label %918, label %919

918:                                              ; preds = %915
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %904) #7
  br label %919

919:                                              ; preds = %903, %915, %918
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %715) #7
  br label %969

920:                                              ; preds = %897, %708
  %921 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %52, i64 6, i32 0
  %922 = bitcast %"class.v8::Name"** %921 to %"class.v8::Value"**
  %923 = load %"class.v8::Value"*, %"class.v8::Value"** %922, align 8
  %924 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %41, %"class.v8::Context"* %54, %"class.v8::Value"* %923) #7
  %925 = icmp eq %"class.v8::Value"* %924, null
  br i1 %925, label %926, label %932

926:                                              ; preds = %920
  %927 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %928 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %929 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %928, align 8
  %930 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %929, i64 5
  %931 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %930, align 8
  call void %931(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %927) #7
  br label %969

932:                                              ; preds = %920
  %933 = bitcast %"class.v8::Value"* %924 to i64*
  %934 = load i64, i64* %933, align 8
  %935 = and i64 %934, 3
  %936 = icmp eq i64 %935, 1
  br i1 %936, label %937, label %954

937:                                              ; preds = %932
  %938 = add i64 %934, -1
  %939 = inttoptr i64 %938 to i32*
  %940 = load i32, i32* %939, align 4
  %941 = and i64 %934, -4294967296
  %942 = zext i32 %940 to i64
  %943 = or i64 %941, %942
  %944 = add i64 %943, 7
  %945 = inttoptr i64 %944 to i16*
  %946 = load i16, i16* %945, align 2
  %947 = icmp eq i16 %946, 67
  br i1 %947, label %948, label %954

948:                                              ; preds = %937
  %949 = add i64 %934, 23
  %950 = inttoptr i64 %949 to i32*
  %951 = load i32, i32* %950, align 4
  %952 = and i32 %951, -2
  %953 = icmp eq i32 %952, 10
  br i1 %953, label %969, label %954

954:                                              ; preds = %937, %932, %948
  %955 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* nonnull %924) #7
  br i1 %955, label %956, label %959, !prof !2

956:                                              ; preds = %954
  %957 = bitcast %"class.v8::Value"* %924 to %"class.v8::Uint32"*
  %958 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* nonnull %957) #7
  br label %962

959:                                              ; preds = %954
  %960 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %924) #7
  %961 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %924, i32 2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  br label %962

962:                                              ; preds = %956, %959
  %963 = phi i32 [ %958, %956 ], [ %961, %959 ]
  %964 = load i32, i32* %43, align 8
  %965 = icmp eq i32 %964, 0
  br i1 %965, label %966, label %969

966:                                              ; preds = %962
  %967 = getelementptr inbounds %"class.blink::GPUTextureViewDescriptor", %"class.blink::GPUTextureViewDescriptor"* %2, i64 0, i32 11
  store i32 %963, i32* %967, align 8
  %968 = getelementptr inbounds %"class.blink::GPUTextureViewDescriptor", %"class.blink::GPUTextureViewDescriptor"* %2, i64 0, i32 4
  store i8 1, i8* %968, align 1
  br label %969

969:                                              ; preds = %962, %433, %384, %95, %108, %341, %397, %686, %919, %948, %966, %926, %679, %446, %348, %59
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %53) #7
  br label %970

970:                                              ; preds = %40, %32, %32, %4, %969, %39
  ret void
}

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #1

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN5blink25V8GPUObjectDescriptorBase6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_23GPUObjectDescriptorBaseERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::GPUObjectDescriptorBase"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #1

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8::TryCatch", align 8
  %4 = tail call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"* %0)
  br i1 %4, label %23, label %5

5:                                                ; preds = %2
  %6 = tail call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #7
  %7 = bitcast %"class.v8::TryCatch"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 48, i1 false) #7
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %3, %"class.v8::Isolate"* %6) #7
  %8 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 0, i32 0
  %9 = load %"class.v8::Value"*, %"class.v8::Value"** %8, align 8
  %10 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %6) #7
  %11 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %9, %"class.v8::Context"* %10) #7
  %12 = ptrtoint %"class.v8::String"* %11 to i64
  %13 = bitcast %"class.blink::V8StringResource"* %0 to i64*
  store i64 %12, i64* %13, align 8
  %14 = icmp eq %"class.v8::String"* %11, null
  br i1 %14, label %15, label %21

15:                                               ; preds = %5
  %16 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %3) #7
  %17 = bitcast %"class.blink::ExceptionState"* %1 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %18 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %18, i64 5
  %20 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %19, align 8
  call void %20(%"class.blink::ExceptionState"* %1, %"class.v8::Value"* %16) #7
  br label %21

21:                                               ; preds = %5, %15
  %22 = phi i1 [ false, %15 ], [ true, %5 ]
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #7
  br label %23

23:                                               ; preds = %21, %2
  %24 = phi i1 [ true, %2 ], [ %22, %21 ]
  ret i1 %24
}

declare zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* dereferenceable(8), i8**, i64, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZNK5blink24GPUTextureViewDescriptor8ToV8ImplEN2v85LocalINS1_6ObjectEEEPNS1_7IsolateE(%"class.blink::GPUTextureViewDescriptor"*, %"class.v8::Object"*, %"class.v8::Isolate"*) unnamed_addr #0 align 2 {
  %4 = tail call %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"* %2) #7
  %5 = tail call zeroext i1 @_ZN5blink28toV8GPUTextureViewDescriptorEPKNS_24GPUTextureViewDescriptorEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::GPUTextureViewDescriptor"* %0, %"class.v8::Object"* %4, %"class.v8::Object"* %1, %"class.v8::Isolate"* %2)
  %6 = bitcast %"class.v8::Object"* %4 to %"class.v8::Value"*
  %7 = ptrtoint %"class.v8::Isolate"* %2 to i64
  %8 = add i64 %7, 160
  %9 = inttoptr i64 %8 to %"class.v8::Value"*
  %10 = select i1 %5, %"class.v8::Value"* %6, %"class.v8::Value"* %9
  ret %"class.v8::Value"* %10
}

declare %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink28toV8GPUTextureViewDescriptorEPKNS_24GPUTextureViewDescriptorEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::GPUTextureViewDescriptor"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Isolate"*) local_unnamed_addr #0 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = getelementptr inbounds %"class.blink::GPUTextureViewDescriptor", %"class.blink::GPUTextureViewDescriptor"* %0, i64 0, i32 0
  %9 = tail call zeroext i1 @_ZN5blink27toV8GPUObjectDescriptorBaseEPKNS_23GPUObjectDescriptorBaseEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::GPUObjectDescriptorBase"* %8, %"class.v8::Object"* %1, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #7
  br i1 %9, label %10, label %161

10:                                               ; preds = %4
  %11 = ptrtoint %"class.v8::Isolate"* %3 to i64
  %12 = add i64 %11, 8
  %13 = inttoptr i64 %12 to %"class.blink::V8PerIsolateData"**
  %14 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %13, align 8
  %15 = tail call { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"* %14, i8* bitcast ([7 x i8*]* @_ZZN5blinkL37eternalV8GPUTextureViewDescriptorKeysEPN2v87IsolateEE5kKeys to i8*), %"class.base::span.313"* dereferenceable(16) bitcast ({ i64, i8** }* @.ref.tmp to %"class.base::span.313"*)) #7
  %16 = extractvalue { i64, %"class.v8::Eternal"* } %15, 1
  %17 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %3) #7
  %18 = getelementptr inbounds %"class.blink::GPUTextureViewDescriptor", %"class.blink::GPUTextureViewDescriptor"* %0, i64 0, i32 1
  %19 = load i8, i8* %18, align 8, !range !4
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %10
  %22 = getelementptr inbounds %"class.blink::GPUTextureViewDescriptor", %"class.blink::GPUTextureViewDescriptor"* %0, i64 0, i32 5
  %23 = load i32, i32* %22, align 4
  br label %24

24:                                               ; preds = %10, %21
  %25 = phi i32 [ %23, %21 ], [ 0, %10 ]
  %26 = tail call %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"* %3, i32 %25) #7
  %27 = bitcast %"class.v8::Integer"* %26 to %"class.v8::Value"*
  %28 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %16, i64 0, i32 0
  %29 = load %"class.v8::Name"*, %"class.v8::Name"** %28, align 8
  %30 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %17, %"class.v8::Name"* %29, %"class.v8::Value"* %27) #7
  %31 = trunc i16 %30 to i8
  %32 = icmp ne i8 %31, 0
  %33 = icmp ugt i16 %30, 255
  %34 = and i1 %33, %32
  br i1 %34, label %35, label %161

35:                                               ; preds = %24
  %36 = getelementptr inbounds %"class.blink::GPUTextureViewDescriptor", %"class.blink::GPUTextureViewDescriptor"* %0, i64 0, i32 6, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %49, label %39

39:                                               ; preds = %35
  %40 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #7
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %37, %"class.WTF::StringImpl"** %41, align 8
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 1
  %45 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %46 = bitcast i8** %45 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %44, %"class.WTF::StringImpl"** %46, align 8
  %47 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %43, i32* %47, align 8
  %48 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #7
  br label %53

49:                                               ; preds = %35
  %50 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %3, i8* nonnull getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i32 0, i32 3) #7
  %51 = icmp eq %"class.v8::String"* %50, null
  br i1 %51, label %52, label %53, !prof !3

52:                                               ; preds = %49
  tail call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %53

53:                                               ; preds = %52, %49, %39
  %54 = phi %"class.v8::String"* [ %48, %39 ], [ %50, %49 ], [ null, %52 ]
  %55 = bitcast %"class.v8::String"* %54 to %"class.v8::Value"*
  %56 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %16, i64 1, i32 0
  %57 = load %"class.v8::Name"*, %"class.v8::Name"** %56, align 8
  %58 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %17, %"class.v8::Name"* %57, %"class.v8::Value"* %55) #7
  %59 = trunc i16 %58 to i8
  %60 = icmp ne i8 %59, 0
  %61 = icmp ugt i16 %58, 255
  %62 = and i1 %61, %60
  br i1 %62, label %63, label %161

63:                                               ; preds = %53
  %64 = getelementptr inbounds %"class.blink::GPUTextureViewDescriptor", %"class.blink::GPUTextureViewDescriptor"* %0, i64 0, i32 2
  %65 = load i8, i8* %64, align 1, !range !4
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %70, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.blink::GPUTextureViewDescriptor", %"class.blink::GPUTextureViewDescriptor"* %0, i64 0, i32 7
  %69 = load i32, i32* %68, align 8
  br label %70

70:                                               ; preds = %63, %67
  %71 = phi i32 [ %69, %67 ], [ 0, %63 ]
  %72 = call %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"* %3, i32 %71) #7
  %73 = bitcast %"class.v8::Integer"* %72 to %"class.v8::Value"*
  %74 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %16, i64 2, i32 0
  %75 = load %"class.v8::Name"*, %"class.v8::Name"** %74, align 8
  %76 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %17, %"class.v8::Name"* %75, %"class.v8::Value"* %73) #7
  %77 = trunc i16 %76 to i8
  %78 = icmp ne i8 %77, 0
  %79 = icmp ugt i16 %76, 255
  %80 = and i1 %79, %78
  br i1 %80, label %81, label %161

81:                                               ; preds = %70
  %82 = getelementptr inbounds %"class.blink::GPUTextureViewDescriptor", %"class.blink::GPUTextureViewDescriptor"* %0, i64 0, i32 3
  %83 = load i8, i8* %82, align 2, !range !4
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %88, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.blink::GPUTextureViewDescriptor", %"class.blink::GPUTextureViewDescriptor"* %0, i64 0, i32 8
  %87 = load i32, i32* %86, align 4
  br label %88

88:                                               ; preds = %81, %85
  %89 = phi i32 [ %87, %85 ], [ 0, %81 ]
  %90 = call %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"* %3, i32 %89) #7
  %91 = bitcast %"class.v8::Integer"* %90 to %"class.v8::Value"*
  %92 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %16, i64 3, i32 0
  %93 = load %"class.v8::Name"*, %"class.v8::Name"** %92, align 8
  %94 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %17, %"class.v8::Name"* %93, %"class.v8::Value"* %91) #7
  %95 = trunc i16 %94 to i8
  %96 = icmp ne i8 %95, 0
  %97 = icmp ugt i16 %94, 255
  %98 = and i1 %97, %96
  br i1 %98, label %99, label %161

99:                                               ; preds = %88
  %100 = getelementptr inbounds %"class.blink::GPUTextureViewDescriptor", %"class.blink::GPUTextureViewDescriptor"* %0, i64 0, i32 9, i32 0, i32 0
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  %102 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %102, label %121, label %103

103:                                              ; preds = %99
  %104 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %104) #7
  %105 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %101, %"class.WTF::StringImpl"** %105, align 8
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 1
  %107 = load i32, i32* %106, align 4
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 1
  %109 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %110 = bitcast i8** %109 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %108, %"class.WTF::StringImpl"** %110, align 8
  %111 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %107, i32* %111, align 8
  %112 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %104) #7
  %113 = bitcast %"class.v8::String"* %112 to %"class.v8::Value"*
  %114 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %16, i64 4, i32 0
  %115 = load %"class.v8::Name"*, %"class.v8::Name"** %114, align 8
  %116 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %17, %"class.v8::Name"* %115, %"class.v8::Value"* %113) #7
  %117 = trunc i16 %116 to i8
  %118 = icmp ne i8 %117, 0
  %119 = icmp ugt i16 %116, 255
  %120 = and i1 %119, %118
  br i1 %120, label %121, label %161

121:                                              ; preds = %99, %103
  %122 = getelementptr inbounds %"class.blink::GPUTextureViewDescriptor", %"class.blink::GPUTextureViewDescriptor"* %0, i64 0, i32 10, i32 0, i32 0
  %123 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %122, align 8
  %124 = icmp eq %"class.WTF::StringImpl"* %123, null
  br i1 %124, label %143, label %125

125:                                              ; preds = %121
  %126 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %126) #7
  %127 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %123, %"class.WTF::StringImpl"** %127, align 8
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 1
  %129 = load i32, i32* %128, align 4
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 1
  %131 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %132 = bitcast i8** %131 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %130, %"class.WTF::StringImpl"** %132, align 8
  %133 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %129, i32* %133, align 8
  %134 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %126) #7
  %135 = bitcast %"class.v8::String"* %134 to %"class.v8::Value"*
  %136 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %16, i64 5, i32 0
  %137 = load %"class.v8::Name"*, %"class.v8::Name"** %136, align 8
  %138 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %17, %"class.v8::Name"* %137, %"class.v8::Value"* %135) #7
  %139 = trunc i16 %138 to i8
  %140 = icmp ne i8 %139, 0
  %141 = icmp ugt i16 %138, 255
  %142 = and i1 %141, %140
  br i1 %142, label %143, label %161

143:                                              ; preds = %121, %125
  %144 = getelementptr inbounds %"class.blink::GPUTextureViewDescriptor", %"class.blink::GPUTextureViewDescriptor"* %0, i64 0, i32 4
  %145 = load i8, i8* %144, align 1, !range !4
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %150, label %147

147:                                              ; preds = %143
  %148 = getelementptr inbounds %"class.blink::GPUTextureViewDescriptor", %"class.blink::GPUTextureViewDescriptor"* %0, i64 0, i32 11
  %149 = load i32, i32* %148, align 8
  br label %150

150:                                              ; preds = %143, %147
  %151 = phi i32 [ %149, %147 ], [ 0, %143 ]
  %152 = call %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"* %3, i32 %151) #7
  %153 = bitcast %"class.v8::Integer"* %152 to %"class.v8::Value"*
  %154 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %16, i64 6, i32 0
  %155 = load %"class.v8::Name"*, %"class.v8::Name"** %154, align 8
  %156 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %17, %"class.v8::Name"* %155, %"class.v8::Value"* %153) #7
  %157 = trunc i16 %156 to i8
  %158 = icmp ne i8 %157, 0
  %159 = icmp ugt i16 %156, 255
  %160 = and i1 %159, %158
  br label %161

161:                                              ; preds = %24, %70, %103, %125, %150, %88, %53, %4
  %162 = phi i1 [ false, %4 ], [ false, %24 ], [ false, %53 ], [ false, %70 ], [ false, %88 ], [ false, %103 ], [ %160, %150 ], [ false, %125 ]
  ret i1 %162
}

declare zeroext i1 @_ZN5blink27toV8GPUObjectDescriptorBaseEPKNS_23GPUObjectDescriptorBaseEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::GPUObjectDescriptorBase"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  %6 = bitcast i8* %4 to i16*
  br i1 %5, label %7, label %11

7:                                                ; preds = %2
  %8 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %9 = add i64 %8, 200
  %10 = inttoptr i64 %9 to %"class.v8::String"*
  br label %63

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  %15 = bitcast %"class.WTF::StringImpl"* %14 to i8*
  %16 = icmp eq i8* %4, %15
  br i1 %16, label %17, label %48

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %19, %21
  %23 = icmp eq %"class.WTF::StringImpl"* %13, null
  %24 = or i1 %23, %22
  br i1 %24, label %48, label %25

25:                                               ; preds = %17
  %26 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %27 = add i64 %26, 8
  %28 = inttoptr i64 %27 to %"class.blink::V8PerIsolateData"**
  %29 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %29, i64 0, i32 5, i32 0, i32 0, i32 0
  %31 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 3, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, %13
  br i1 %34, label %35, label %46

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 1
  %37 = bitcast %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference"* %36 to %"class.v8::String"**
  %38 = load %"class.v8::String"*, %"class.v8::String"** %37, align 8
  %39 = icmp eq %"class.v8::String"* %38, null
  br i1 %39, label %63, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.v8::String"* %38 to i64*
  %42 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %43 = load i64, i64* %41, align 8
  %44 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %43) #7
  %45 = bitcast i64* %44 to %"class.v8::String"*
  br label %63

46:                                               ; preds = %25
  %47 = tail call %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"* %31, %"class.v8::Isolate"* %0, %"class.WTF::StringImpl"* nonnull %13) #7
  br label %63

48:                                               ; preds = %17, %11
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  br i1 %52, label %59, label %55

55:                                               ; preds = %48
  %56 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* nonnull %4, i32 0, i32 %54) #7
  %57 = icmp eq %"class.v8::String"* %56, null
  br i1 %57, label %58, label %63, !prof !3

58:                                               ; preds = %55
  tail call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %63

59:                                               ; preds = %48
  %60 = tail call %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i16* nonnull %6, i32 0, i32 %54) #7
  %61 = icmp eq %"class.v8::String"* %60, null
  br i1 %61, label %62, label %63, !prof !3

62:                                               ; preds = %59
  tail call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %63

63:                                               ; preds = %46, %40, %35, %62, %59, %58, %55, %7
  %64 = phi %"class.v8::String"* [ %10, %7 ], [ %56, %55 ], [ null, %58 ], [ %60, %59 ], [ null, %62 ], [ null, %35 ], [ %45, %40 ], [ %47, %46 ]
  ret %"class.v8::String"* %64
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::GPUTextureViewDescriptor"* @_ZN5blink17NativeValueTraitsINS_24GPUTextureViewDescriptorEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 64) #7
  %5 = bitcast i8* %4 to %"class.blink::GPUTextureViewDescriptor"*
  tail call void @_ZN5blink24GPUTextureViewDescriptorC1Ev(%"class.blink::GPUTextureViewDescriptor"* %5) #7
  %6 = getelementptr inbounds i8, i8* %4, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  tail call void @_ZN5blink26V8GPUTextureViewDescriptor6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_24GPUTextureViewDescriptorERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %1, %"class.blink::GPUTextureViewDescriptor"* %5, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  ret %"class.blink::GPUTextureViewDescriptor"* %5
}

declare { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"*, i8*, %"class.base::span.313"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #1

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Name"*, %"class.v8::Value"*) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"*, i16*, i32, i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"*, %"class.v8::Isolate"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #1

declare void @_ZN5blink24GPUTextureViewDescriptorC1Ev(%"class.blink::GPUTextureViewDescriptor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #7
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #7
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #7
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #7
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #7
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.73, i64 0, i64 0), i8* %40, i8* %41) #7
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.74, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #7
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #7
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #7
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !3

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #7
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.75, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"*) local_unnamed_addr #1

declare i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #1

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #1

declare i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.v8::Value"*, %"class.v8::Value"** %2, align 8
  %4 = icmp eq %"class.v8::Value"* %3, null
  br i1 %4, label %82, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.v8::Value"* %3 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %21, !prof !5

10:                                               ; preds = %5
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %82, label %21, !prof !2

21:                                               ; preds = %5, %10
  %22 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %3) #7
  br i1 %22, label %23, label %80, !prof !2

23:                                               ; preds = %21
  %24 = bitcast %"class.blink::V8StringResource"* %0 to %"class.v8::Int32"**
  %25 = load %"class.v8::Int32"*, %"class.v8::Int32"** %24, align 8
  %26 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %25) #7
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %26) #7
  %28 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 2
  %29 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %29, label %47, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #7
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !3

44:                                               ; preds = %35
  tail call void @llvm.trap() #7
  unreachable

45:                                               ; preds = %35
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %36, align 4
  br label %47

47:                                               ; preds = %45, %30, %23
  %48 = ptrtoint %"class.WTF::StringImpl"* %27 to i64
  %49 = bitcast %"class.WTF::String"* %28 to i64*
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  store i64 %48, i64* %49, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #7
  br label %66

66:                                               ; preds = %47, %62, %65
  store %"class.v8::Value"* null, %"class.v8::Value"** %2, align 8
  br i1 %29, label %82, label %67

67:                                               ; preds = %66
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %76
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #7
  br label %82

80:                                               ; preds = %21
  %81 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 1
  store i32 1, i32* %81, align 8
  br label %82

82:                                               ; preds = %79, %76, %66, %10, %1, %80
  %83 = phi i1 [ false, %80 ], [ true, %1 ], [ true, %10 ], [ true, %66 ], [ true, %76 ], [ true, %79 ]
  ret i1 %83
}

declare %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!"branch_weights", i32 2146410443, i32 1073205}
