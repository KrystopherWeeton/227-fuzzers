; ModuleID = '../../third_party/skia/src/gpu/GrBufferAllocPool.cpp'
source_filename = "../../third_party/skia/src/gpu/GrBufferAllocPool.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.GrBufferAllocPool::CpuBufferCache" = type <{ %class.GrNonAtomicRef, [4 x i8], %"class.std::__1::unique_ptr", i32, [4 x i8] }>
%class.GrNonAtomicRef = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* }
%"struct.GrBufferAllocPool::CpuBufferCache::Buffer" = type <{ %class.sk_sp.0, i8, [7 x i8] }>
%class.sk_sp.0 = type { %class.GrCpuBuffer* }
%class.GrCpuBuffer = type { %class.GrBuffer, %class.GrNonAtomicRef.1, i8*, i64 }
%class.GrBuffer = type { i32 (...)** }
%class.GrNonAtomicRef.1 = type { i32 }
%class.GrBufferAllocPool = type { i32 (...)**, i64, %class.SkTArray, %class.sk_sp, %class.sk_sp.0, %class.GrGpu*, i32, i8* }
%class.SkTArray = type { %"struct.GrBufferAllocPool::BufferBlock"*, i64 }
%"struct.GrBufferAllocPool::BufferBlock" = type { i64, %class.sk_sp.3 }
%class.sk_sp.3 = type { %class.GrBuffer* }
%class.sk_sp = type { %"class.GrBufferAllocPool::CpuBufferCache"* }
%class.GrGpu = type { %class.SkRefCnt.base, %"class.GrGpu::Stats", %class.sk_sp.5, %"class.std::__1::unique_ptr.7", i32, %class.GrDirectContext*, %class.SkSTArray, i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.GrGpu::Stats" = type { i8 }
%class.sk_sp.5 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.6, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.6 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.SkSL::Compiler"* }
%"class.SkSL::Compiler" = type opaque
%class.GrDirectContext = type { %class.GrRecordingContext, %"class.GrDirectContext::DirectContextID", %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.72", %class.sk_sp.78, %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.121", i8, i8, %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::ShaderErrorHandler"*, %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.134", %"class.std::__1::unique_ptr.140" }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.14", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.60" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.13 }
%class.sk_sp.13 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray.17, %class.SkTHashMap, %class.SkTHashMap.25, %class.SkTArray.34, %class.SkTArray.36, i32, i8, [3 x i8] }>
%class.SkTArray.17 = type { %"class.std::__1::unique_ptr.18"*, i64 }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.36, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.37 }
%class.sk_sp.37 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%struct.SkRect = type { float, float, float, float }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.19" }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.25 = type { %class.SkTHashTable.26 }
%class.SkTHashTable.26 = type { i32, i32, %class.SkAutoTArray.27 }
%class.SkAutoTArray.27 = type { %"class.std::__1::unique_ptr.28" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.159" }
%"struct.std::__1::pair.159" = type { i32, %class.SkTArray.160* }
%class.SkTArray.160 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.34 = type { %"class.std::__1::unique_ptr.35"*, i64 }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.160, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.36 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.47" }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.50 }
%class.SkFibBlockSizes.50 = type { i32 }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %class.SkTaskGroup* }
%class.SkTaskGroup = type opaque
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %class.GrStrikeCache* }
%class.GrStrikeCache = type opaque
%class.sk_sp.78 = type { %class.GrGpu* }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %class.GrResourceCache* }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.91, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.109, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon, [4 x i8] }>
%union.anon = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.82, i8* }
%class.sk_sp.82 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.83 }
%class.SkTHashTable.83 = type { i32, i32, %class.SkAutoTArray.84 }
%class.SkAutoTArray.84 = type { %"class.std::__1::unique_ptr.85" }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.91 = type { %class.SkTHashTable.92 }
%class.SkTHashTable.92 = type { i32, i32, %class.SkAutoTArray.93 }
%class.SkAutoTArray.93 = type { %"class.std::__1::unique_ptr.94" }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.100, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.100 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.101" }
%"struct.std::__1::atomic.101" = type { %"struct.std::__1::__atomic_base.102" }
%"struct.std::__1::__atomic_base.102" = type { %"struct.std::__1::__atomic_base.103" }
%"struct.std::__1::__atomic_base.103" = type { %"struct.std::__1::__cxx_atomic_impl.104" }
%"struct.std::__1::__cxx_atomic_impl.104" = type { %"struct.std::__1::__cxx_atomic_base_impl.105" }
%"struct.std::__1::__cxx_atomic_base_impl.105" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.106, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.106 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.107 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.107 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.108, void (i8*)*, i8* }
%class.SkNVRefCnt.108 = type { %"struct.std::__1::atomic" }
%class.SkTHashMap.109 = type { %class.SkTHashTable.110 }
%class.SkTHashTable.110 = type { i32, i32, %class.SkAutoTArray.111 }
%class.SkAutoTArray.111 = type { %"class.std::__1::unique_ptr.112" }
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %class.GrResourceProvider* }
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.5, %class.sk_sp.124, %class.sk_sp.124 }
%class.sk_sp.124 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %class.GrClientMappedBufferManager* }
%class.GrClientMappedBufferManager = type opaque
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %class.GrAtlasManager* }
%class.GrAtlasManager = type opaque
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %class.GrSmallPathAtlasMgr* }
%class.GrSmallPathAtlasMgr = type opaque
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.146 }
%class.SkAlignedSTStorage = type { [64 x i8] }
%class.SkTArray.146 = type { %"struct.GrGpu::SubmittedProc"*, i64 }
%"struct.GrGpu::SubmittedProc" = type { void (i8*, i1)*, i8* }
%class.GrVertexBufferAllocPool = type { %class.GrBufferAllocPool }
%class.GrIndexBufferAllocPool = type { %class.GrBufferAllocPool }
%class.SkEventTracer = type { i32 (...)** }
%class.sk_sp.152 = type { %class.GrBuffer* }
%class.sk_sp.153 = type { %class.GrGpuBuffer* }

$_ZNK11GrCpuBuffer4sizeEv = comdat any

$_ZN23GrVertexBufferAllocPoolD0Ev = comdat any

$_ZN22GrIndexBufferAllocPoolD0Ev = comdat any

$_ZN8GrBufferD2Ev = comdat any

$_ZN11GrCpuBufferD0Ev = comdat any

$_ZNK11GrCpuBuffer3refEv = comdat any

$_ZNK11GrCpuBuffer5unrefEv = comdat any

$_ZNK11GrCpuBuffer11isCpuBufferEv = comdat any

$_ZN8SkTArrayIN17GrBufferAllocPool11BufferBlockELb0EE12checkReallocEiNS2_11ReallocTypeE = comdat any

$_ZN17GrBufferAllocPool18kDefaultBufferSizeE = comdat any

$_ZTV23GrVertexBufferAllocPool = comdat any

$_ZTV22GrIndexBufferAllocPool = comdat any

$_ZTV11GrCpuBuffer = comdat any

@_ZN17GrBufferAllocPool18kDefaultBufferSizeE = weak_odr hidden local_unnamed_addr constant i64 32768, comdat, align 8
@_ZTV17GrBufferAllocPool = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrBufferAllocPool*)* @_ZN17GrBufferAllocPoolD2Ev to i8*), i8* bitcast (void (%class.GrBufferAllocPool*)* @_ZN17GrBufferAllocPoolD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [29 x i8] c"disabled-by-default-skia.gpu\00", align 1
@.str.1 = private unnamed_addr constant [35 x i8] c"GrBufferAllocPool Unmapping Buffer\00", align 1
@.str.2 = private unnamed_addr constant [18 x i8] c"percent_unwritten\00", align 1
@_ZTV23GrVertexBufferAllocPool = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrBufferAllocPool*)* @_ZN17GrBufferAllocPoolD2Ev to i8*), i8* bitcast (void (%class.GrVertexBufferAllocPool*)* @_ZN23GrVertexBufferAllocPoolD0Ev to i8*)] }, comdat, align 8
@_ZTV22GrIndexBufferAllocPool = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrBufferAllocPool*)* @_ZN17GrBufferAllocPoolD2Ev to i8*), i8* bitcast (void (%class.GrIndexBufferAllocPool*)* @_ZN22GrIndexBufferAllocPoolD0Ev to i8*)] }, comdat, align 8
@.str.3 = private unnamed_addr constant [45 x i8] c"../../third_party/skia/src/gpu/GrCpuBuffer.h\00", align 1
@.str.4 = private unnamed_addr constant [24 x i8] c"Buffer size is too big.\00", align 1
@_ZTV11GrCpuBuffer = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrBuffer*)* @_ZN8GrBufferD2Ev to i8*), i8* bitcast (void (%class.GrCpuBuffer*)* @_ZN11GrCpuBufferD0Ev to i8*), i8* bitcast (void (%class.GrCpuBuffer*)* @_ZNK11GrCpuBuffer3refEv to i8*), i8* bitcast (void (%class.GrCpuBuffer*)* @_ZNK11GrCpuBuffer5unrefEv to i8*), i8* bitcast (i64 (%class.GrCpuBuffer*)* @_ZNK11GrCpuBuffer4sizeEv to i8*), i8* bitcast (i1 (%class.GrCpuBuffer*)* @_ZNK11GrCpuBuffer11isCpuBufferEv to i8*)] }, comdat, align 8
@_ZZN17GrBufferAllocPool12deleteBlocksEvE28trace_event_unique_atomic101.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN17GrBufferAllocPool5unmapEvE28trace_event_unique_atomic131.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN17GrBufferAllocPool7putBackEmE28trace_event_unique_atomic301.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN17GrBufferAllocPool11createBlockEmE28trace_event_unique_atomic335.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN17GrBufferAllocPool12flushCpuDataERKNS_11BufferBlockEmE28trace_event_unique_atomic403.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN17GrBufferAllocPool14CpuBufferCacheC1Ei = hidden unnamed_addr alias void (%"class.GrBufferAllocPool::CpuBufferCache"*, i32), void (%"class.GrBufferAllocPool::CpuBufferCache"*, i32)* @_ZN17GrBufferAllocPool14CpuBufferCacheC2Ei
@_ZN17GrBufferAllocPoolC1EP5GrGpu15GrGpuBufferType5sk_spINS_14CpuBufferCacheEE = hidden unnamed_addr alias void (%class.GrBufferAllocPool*, %class.GrGpu*, i32, %class.sk_sp*), void (%class.GrBufferAllocPool*, %class.GrGpu*, i32, %class.sk_sp*)* @_ZN17GrBufferAllocPoolC2EP5GrGpu15GrGpuBufferType5sk_spINS_14CpuBufferCacheEE
@_ZN17GrBufferAllocPoolD1Ev = hidden unnamed_addr alias void (%class.GrBufferAllocPool*), void (%class.GrBufferAllocPool*)* @_ZN17GrBufferAllocPoolD2Ev
@_ZN23GrVertexBufferAllocPoolC1EP5GrGpu5sk_spIN17GrBufferAllocPool14CpuBufferCacheEE = hidden unnamed_addr alias void (%class.GrVertexBufferAllocPool*, %class.GrGpu*, %class.sk_sp*), void (%class.GrVertexBufferAllocPool*, %class.GrGpu*, %class.sk_sp*)* @_ZN23GrVertexBufferAllocPoolC2EP5GrGpu5sk_spIN17GrBufferAllocPool14CpuBufferCacheEE
@_ZN22GrIndexBufferAllocPoolC1EP5GrGpu5sk_spIN17GrBufferAllocPool14CpuBufferCacheEE = hidden unnamed_addr alias void (%class.GrIndexBufferAllocPool*, %class.GrGpu*, %class.sk_sp*), void (%class.GrIndexBufferAllocPool*, %class.GrGpu*, %class.sk_sp*)* @_ZN22GrIndexBufferAllocPoolC2EP5GrGpu5sk_spIN17GrBufferAllocPool14CpuBufferCacheEE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrBufferAllocPool14CpuBufferCache4MakeEi(%class.sk_sp* noalias nocapture sret, i32) local_unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 24) #8
  %4 = bitcast i8* %3 to i32*
  store i32 1, i32* %4, align 4
  %5 = getelementptr inbounds i8, i8* %3, i64 8
  %6 = bitcast i8* %5 to i64*
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds i8, i8* %3, i64 16
  %8 = bitcast i8* %7 to i32*
  store i32 %1, i32* %8, align 8
  %9 = icmp eq i32 %1, 0
  br i1 %9, label %22, label %10

10:                                               ; preds = %2
  %11 = sext i32 %1 to i64
  %12 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %11, i64 16) #9
  %13 = extractvalue { i64, i1 } %12, 1
  %14 = extractvalue { i64, i1 } %12, 0
  %15 = or i64 %14, 8
  %16 = select i1 %13, i64 -1, i64 %15
  %17 = tail call i8* @_Znam(i64 %16) #8
  %18 = bitcast i8* %17 to i64*
  store i64 %11, i64* %18, align 16
  %19 = getelementptr inbounds i8, i8* %17, i64 8
  %20 = shl nsw i64 %11, 4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 %20, i1 false) #9
  %21 = ptrtoint i8* %19 to i64
  store i64 %21, i64* %6, align 8
  br label %22

22:                                               ; preds = %2, %10
  %23 = bitcast %class.sk_sp* %0 to i8**
  store i8* %3, i8** %23, align 8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrBufferAllocPool14CpuBufferCacheC2Ei(%"class.GrBufferAllocPool::CpuBufferCache"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.GrBufferAllocPool::CpuBufferCache", %"class.GrBufferAllocPool::CpuBufferCache"* %0, i64 0, i32 0, i32 0
  store i32 1, i32* %3, align 4
  %4 = getelementptr inbounds %"class.GrBufferAllocPool::CpuBufferCache", %"class.GrBufferAllocPool::CpuBufferCache"* %0, i64 0, i32 2
  %5 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  store i64 0, i64* %5, align 8
  %6 = getelementptr inbounds %"class.GrBufferAllocPool::CpuBufferCache", %"class.GrBufferAllocPool::CpuBufferCache"* %0, i64 0, i32 3
  store i32 %1, i32* %6, align 8
  %7 = icmp eq i32 %1, 0
  br i1 %7, label %20, label %8

8:                                                ; preds = %2
  %9 = sext i32 %1 to i64
  %10 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %9, i64 16) #9
  %11 = extractvalue { i64, i1 } %10, 1
  %12 = extractvalue { i64, i1 } %10, 0
  %13 = or i64 %12, 8
  %14 = select i1 %11, i64 -1, i64 %13
  %15 = tail call i8* @_Znam(i64 %14) #8
  %16 = bitcast i8* %15 to i64*
  store i64 %9, i64* %16, align 16
  %17 = getelementptr inbounds i8, i8* %15, i64 8
  %18 = shl nsw i64 %9, 4
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %18, i1 false)
  %19 = ptrtoint i8* %17 to i64
  store i64 %19, i64* %5, align 8
  br label %20

20:                                               ; preds = %8, %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrBufferAllocPool14CpuBufferCache10makeBufferEmb(%class.sk_sp.0* noalias nocapture sret, %"class.GrBufferAllocPool::CpuBufferCache"* nocapture readonly, i64, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.GrBufferAllocPool::CpuBufferCache::Buffer", align 8
  %6 = icmp eq i64 %2, 32768
  br i1 %6, label %7, label %66

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.GrBufferAllocPool::CpuBufferCache", %"class.GrBufferAllocPool::CpuBufferCache"* %1, i64 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %66

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.GrBufferAllocPool::CpuBufferCache", %"class.GrBufferAllocPool::CpuBufferCache"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %13 = load %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"*, %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"** %12, align 8
  %14 = sext i32 %9 to i64
  br label %15

15:                                               ; preds = %11, %22
  %16 = phi i64 [ 0, %11 ], [ %27, %22 ]
  %17 = phi %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* [ null, %11 ], [ %26, %22 ]
  %18 = getelementptr inbounds %"struct.GrBufferAllocPool::CpuBufferCache::Buffer", %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* %13, i64 %16
  %19 = getelementptr inbounds %"struct.GrBufferAllocPool::CpuBufferCache::Buffer", %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* %18, i64 0, i32 0, i32 0
  %20 = load %class.GrCpuBuffer*, %class.GrCpuBuffer** %19, align 8
  %21 = icmp eq %class.GrCpuBuffer* %20, null
  br i1 %21, label %29, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %class.GrCpuBuffer, %class.GrCpuBuffer* %20, i64 0, i32 1, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 1
  %26 = select i1 %25, %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* %18, %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* %17
  %27 = add nuw nsw i64 %16, 1
  %28 = icmp slt i64 %27, %14
  br i1 %28, label %15, label %66

29:                                               ; preds = %15
  %30 = icmp eq %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* %17, null
  br i1 %30, label %31, label %66

31:                                               ; preds = %29
  %32 = tail call i8* @_Znwm(i64 32800) #9, !noalias !2
  %33 = getelementptr inbounds i8, i8* %32, i64 32
  %34 = getelementptr inbounds i8, i8* %32, i64 8
  %35 = bitcast i8* %34 to i32*
  store i32 1, i32* %35, align 4, !noalias !2
  %36 = bitcast i8* %32 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV11GrCpuBuffer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8, !noalias !2
  %37 = getelementptr inbounds i8, i8* %32, i64 16
  %38 = bitcast i8* %37 to i8**
  store i8* %33, i8** %38, align 8, !noalias !2
  %39 = getelementptr inbounds i8, i8* %32, i64 24
  %40 = bitcast i8* %39 to i64*
  store i64 32768, i64* %40, align 8, !noalias !2
  %41 = ptrtoint i8* %32 to i64
  %42 = and i64 %16, 4294967295
  %43 = getelementptr inbounds %"class.GrBufferAllocPool::CpuBufferCache", %"class.GrBufferAllocPool::CpuBufferCache"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %44 = load %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"*, %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"** %43, align 8
  %45 = getelementptr inbounds %"struct.GrBufferAllocPool::CpuBufferCache::Buffer", %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* %44, i64 %42, i32 0
  %46 = getelementptr inbounds %class.sk_sp.0, %class.sk_sp.0* %45, i64 0, i32 0
  %47 = load %class.GrCpuBuffer*, %class.GrCpuBuffer** %46, align 8
  %48 = bitcast %class.sk_sp.0* %45 to i64*
  store i64 %41, i64* %48, align 8
  %49 = icmp eq %class.GrCpuBuffer* %47, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %31
  %51 = getelementptr inbounds %class.GrCpuBuffer, %class.GrCpuBuffer* %47, i64 0, i32 1
  %52 = getelementptr inbounds %class.GrNonAtomicRef.1, %class.GrNonAtomicRef.1* %51, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = add nsw i32 %53, -1
  store i32 %54, i32* %52, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %63

56:                                               ; preds = %50
  %57 = getelementptr inbounds %class.GrNonAtomicRef.1, %class.GrNonAtomicRef.1* %51, i64 -2
  %58 = bitcast %class.GrNonAtomicRef.1* %57 to %class.GrCpuBuffer*
  %59 = bitcast %class.GrNonAtomicRef.1* %57 to void (%class.GrCpuBuffer*)***
  %60 = load void (%class.GrCpuBuffer*)**, void (%class.GrCpuBuffer*)*** %59, align 8
  %61 = getelementptr inbounds void (%class.GrCpuBuffer*)*, void (%class.GrCpuBuffer*)** %60, i64 1
  %62 = load void (%class.GrCpuBuffer*)*, void (%class.GrCpuBuffer*)** %61, align 8
  tail call void %62(%class.GrCpuBuffer* nonnull %58) #9
  br label %63

63:                                               ; preds = %56, %50, %31
  %64 = load %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"*, %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"** %43, align 8
  %65 = getelementptr inbounds %"struct.GrBufferAllocPool::CpuBufferCache::Buffer", %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* %64, i64 %42
  br label %66

66:                                               ; preds = %22, %29, %7, %63, %4
  %67 = phi %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* [ null, %4 ], [ %17, %29 ], [ %65, %63 ], [ null, %7 ], [ %26, %22 ]
  %68 = bitcast %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68) #9
  %69 = getelementptr inbounds %"struct.GrBufferAllocPool::CpuBufferCache::Buffer", %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* %5, i64 0, i32 0, i32 0
  %70 = getelementptr inbounds %"struct.GrBufferAllocPool::CpuBufferCache::Buffer", %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* %5, i64 0, i32 1
  %71 = bitcast %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 -86, i64 16, i1 false)
  store %class.GrCpuBuffer* null, %class.GrCpuBuffer** %69, align 8
  store i8 0, i8* %70, align 8
  %72 = icmp eq %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* %67, null
  br i1 %72, label %73, label %90

73:                                               ; preds = %66
  %74 = add i64 %2, 32
  %75 = icmp ugt i64 %74, 31
  br i1 %75, label %77, label %76

76:                                               ; preds = %73
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3, i64 0, i64 0), i32 22, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4, i64 0, i64 0)) #10, !noalias !5
  unreachable

77:                                               ; preds = %73
  %78 = tail call i8* @_Znwm(i64 %74) #9, !noalias !5
  %79 = getelementptr inbounds i8, i8* %78, i64 32
  %80 = getelementptr inbounds i8, i8* %78, i64 8
  %81 = bitcast i8* %80 to i32*
  store i32 1, i32* %81, align 4, !noalias !5
  %82 = bitcast i8* %78 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV11GrCpuBuffer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %82, align 8, !noalias !5
  %83 = getelementptr inbounds i8, i8* %78, i64 16
  %84 = bitcast i8* %83 to i8**
  store i8* %79, i8** %84, align 8, !noalias !5
  %85 = getelementptr inbounds i8, i8* %78, i64 24
  %86 = bitcast i8* %85 to i64*
  store i64 %2, i64* %86, align 8, !noalias !5
  %87 = ptrtoint i8* %78 to i64
  %88 = bitcast %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* %5 to i64*
  store i64 %87, i64* %88, align 8
  %89 = bitcast i8* %78 to %class.GrCpuBuffer*
  br label %90

90:                                               ; preds = %77, %66
  %91 = phi %class.GrCpuBuffer* [ null, %66 ], [ %89, %77 ]
  %92 = phi %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* [ %67, %66 ], [ %5, %77 ]
  br i1 %3, label %93, label %104

93:                                               ; preds = %90
  %94 = getelementptr inbounds %"struct.GrBufferAllocPool::CpuBufferCache::Buffer", %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* %92, i64 0, i32 1
  %95 = load i8, i8* %94, align 8, !range !8
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %97, label %104

97:                                               ; preds = %93
  store i8 1, i8* %94, align 8
  %98 = getelementptr inbounds %"struct.GrBufferAllocPool::CpuBufferCache::Buffer", %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* %92, i64 0, i32 0, i32 0
  %99 = load %class.GrCpuBuffer*, %class.GrCpuBuffer** %98, align 8
  %100 = getelementptr inbounds %class.GrCpuBuffer, %class.GrCpuBuffer* %99, i64 0, i32 2
  %101 = load i8*, i8** %100, align 8
  %102 = getelementptr inbounds %class.GrCpuBuffer, %class.GrCpuBuffer* %99, i64 0, i32 3
  %103 = load i64, i64* %102, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %101, i8 0, i64 %103, i1 false)
  br label %104

104:                                              ; preds = %93, %97, %90
  %105 = getelementptr inbounds %class.sk_sp.0, %class.sk_sp.0* %0, i64 0, i32 0
  %106 = getelementptr inbounds %"struct.GrBufferAllocPool::CpuBufferCache::Buffer", %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* %92, i64 0, i32 0, i32 0
  %107 = load %class.GrCpuBuffer*, %class.GrCpuBuffer** %106, align 8
  %108 = icmp eq %class.GrCpuBuffer* %107, null
  br i1 %108, label %113, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %class.GrCpuBuffer, %class.GrCpuBuffer* %107, i64 0, i32 1, i32 0
  %111 = load i32, i32* %110, align 4
  %112 = add nsw i32 %111, 1
  store i32 %112, i32* %110, align 4
  br label %113

113:                                              ; preds = %104, %109
  store %class.GrCpuBuffer* %107, %class.GrCpuBuffer** %105, align 8
  %114 = icmp eq %class.GrCpuBuffer* %91, null
  br i1 %114, label %128, label %115

115:                                              ; preds = %113
  %116 = getelementptr inbounds %class.GrCpuBuffer, %class.GrCpuBuffer* %91, i64 0, i32 1
  %117 = getelementptr inbounds %class.GrNonAtomicRef.1, %class.GrNonAtomicRef.1* %116, i64 0, i32 0
  %118 = load i32, i32* %117, align 4
  %119 = add nsw i32 %118, -1
  store i32 %119, i32* %117, align 4
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %128

121:                                              ; preds = %115
  %122 = getelementptr inbounds %class.GrNonAtomicRef.1, %class.GrNonAtomicRef.1* %116, i64 -2
  %123 = bitcast %class.GrNonAtomicRef.1* %122 to %class.GrCpuBuffer*
  %124 = bitcast %class.GrNonAtomicRef.1* %122 to void (%class.GrCpuBuffer*)***
  %125 = load void (%class.GrCpuBuffer*)**, void (%class.GrCpuBuffer*)*** %124, align 8
  %126 = getelementptr inbounds void (%class.GrCpuBuffer*)*, void (%class.GrCpuBuffer*)** %125, i64 1
  %127 = load void (%class.GrCpuBuffer*)*, void (%class.GrCpuBuffer*)** %126, align 8
  tail call void %127(%class.GrCpuBuffer* nonnull %123) #9
  br label %128

128:                                              ; preds = %113, %115, %121
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK11GrCpuBuffer4sizeEv(%class.GrCpuBuffer*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrCpuBuffer, %class.GrCpuBuffer* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrBufferAllocPool14CpuBufferCache10releaseAllEv(%"class.GrBufferAllocPool::CpuBufferCache"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.GrBufferAllocPool::CpuBufferCache", %"class.GrBufferAllocPool::CpuBufferCache"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %5, label %13

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.GrBufferAllocPool::CpuBufferCache", %"class.GrBufferAllocPool::CpuBufferCache"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %7

7:                                                ; preds = %5, %27
  %8 = phi i64 [ 0, %5 ], [ %30, %27 ]
  %9 = load %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"*, %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"** %6, align 8
  %10 = getelementptr inbounds %"struct.GrBufferAllocPool::CpuBufferCache::Buffer", %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* %9, i64 %8, i32 0, i32 0
  %11 = load %class.GrCpuBuffer*, %class.GrCpuBuffer** %10, align 8
  %12 = icmp eq %class.GrCpuBuffer* %11, null
  br i1 %12, label %13, label %14

13:                                               ; preds = %27, %7, %1
  ret void

14:                                               ; preds = %7
  store %class.GrCpuBuffer* null, %class.GrCpuBuffer** %10, align 8
  %15 = getelementptr inbounds %class.GrCpuBuffer, %class.GrCpuBuffer* %11, i64 0, i32 1
  %16 = getelementptr inbounds %class.GrNonAtomicRef.1, %class.GrNonAtomicRef.1* %15, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = add nsw i32 %17, -1
  store i32 %18, i32* %16, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %27

20:                                               ; preds = %14
  %21 = getelementptr inbounds %class.GrNonAtomicRef.1, %class.GrNonAtomicRef.1* %15, i64 -2
  %22 = bitcast %class.GrNonAtomicRef.1* %21 to %class.GrCpuBuffer*
  %23 = bitcast %class.GrNonAtomicRef.1* %21 to void (%class.GrCpuBuffer*)***
  %24 = load void (%class.GrCpuBuffer*)**, void (%class.GrCpuBuffer*)*** %23, align 8
  %25 = getelementptr inbounds void (%class.GrCpuBuffer*)*, void (%class.GrCpuBuffer*)** %24, i64 1
  %26 = load void (%class.GrCpuBuffer*)*, void (%class.GrCpuBuffer*)** %25, align 8
  tail call void %26(%class.GrCpuBuffer* nonnull %22) #9
  br label %27

27:                                               ; preds = %14, %20
  %28 = load %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"*, %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"** %6, align 8
  %29 = getelementptr inbounds %"struct.GrBufferAllocPool::CpuBufferCache::Buffer", %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* %28, i64 %8, i32 1
  store i8 0, i8* %29, align 8
  %30 = add nuw nsw i64 %8, 1
  %31 = load i32, i32* %2, align 8
  %32 = sext i32 %31 to i64
  %33 = icmp slt i64 %30, %32
  br i1 %33, label %7, label %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrBufferAllocPoolC2EP5GrGpu15GrGpuBufferType5sk_spINS_14CpuBufferCacheEE(%class.GrBufferAllocPool*, %class.GrGpu*, i32, %class.sk_sp* nocapture) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV17GrBufferAllocPool, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %0, i64 0, i32 1
  %7 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %0, i64 0, i32 2
  %8 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %0, i64 0, i32 2, i32 1
  %9 = bitcast i64* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false)
  store i64 1, i64* %8, align 8
  tail call void @_ZN8SkTArrayIN17GrBufferAllocPool11BufferBlockELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray* %7, i32 8, i32 0) #9
  %10 = load i64, i64* %8, align 8
  %11 = shl i64 %10, 32
  %12 = and i64 %11, 4294967296
  %13 = and i64 %10, -4294967297
  %14 = or i64 %12, %13
  store i64 %14, i64* %8, align 8
  %15 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %0, i64 0, i32 3
  %16 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  %17 = bitcast %class.sk_sp* %3 to i64*
  %18 = load i64, i64* %17, align 8
  store %"class.GrBufferAllocPool::CpuBufferCache"* null, %"class.GrBufferAllocPool::CpuBufferCache"** %16, align 8
  %19 = bitcast %class.sk_sp* %15 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %0, i64 0, i32 4, i32 0
  store %class.GrCpuBuffer* null, %class.GrCpuBuffer** %20, align 8
  %21 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %0, i64 0, i32 5
  store %class.GrGpu* %1, %class.GrGpu** %21, align 8
  %22 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %0, i64 0, i32 6
  store i32 %2, i32* %22, align 8
  %23 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %0, i64 0, i32 7
  store i8* null, i8** %23, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrBufferAllocPool12deleteBlocksEv(%class.GrBufferAllocPool*) local_unnamed_addr #0 align 2 {
  %2 = alloca i8*, align 8
  %3 = alloca [1 x i8], align 1
  %4 = alloca [1 x i64], align 8
  %5 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %0, i64 0, i32 2
  %6 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %0, i64 0, i32 2, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 4294967294
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %88, label %10

10:                                               ; preds = %1
  %11 = lshr i64 %7, 1
  %12 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %5, i64 0, i32 0
  %13 = load %"struct.GrBufferAllocPool::BufferBlock"*, %"struct.GrBufferAllocPool::BufferBlock"** %12, align 8
  %14 = and i64 %11, 2147483647
  %15 = add nsw i64 %14, -1
  %16 = getelementptr inbounds %"struct.GrBufferAllocPool::BufferBlock", %"struct.GrBufferAllocPool::BufferBlock"* %13, i64 %15, i32 1, i32 0
  %17 = load %class.GrBuffer*, %class.GrBuffer** %16, align 8
  %18 = bitcast %class.GrBuffer* %17 to i1 (%class.GrBuffer*)***
  %19 = load i1 (%class.GrBuffer*)**, i1 (%class.GrBuffer*)*** %18, align 8
  %20 = getelementptr inbounds i1 (%class.GrBuffer*)*, i1 (%class.GrBuffer*)** %19, i64 5
  %21 = load i1 (%class.GrBuffer*)*, i1 (%class.GrBuffer*)** %20, align 8
  %22 = tail call zeroext i1 %21(%class.GrBuffer* %17) #9
  br i1 %22, label %88, label %23

23:                                               ; preds = %10
  %24 = icmp eq %class.GrBuffer* %17, null
  %25 = getelementptr inbounds %class.GrBuffer, %class.GrBuffer* %17, i64 -19
  %26 = bitcast %class.GrBuffer* %25 to %class.GrGpuBuffer*
  %27 = select i1 %24, %class.GrGpuBuffer* null, %class.GrGpuBuffer* %26
  %28 = tail call zeroext i1 @_ZNK11GrGpuBuffer8isMappedEv(%class.GrGpuBuffer* %27) #9
  br i1 %28, label %29, label %88

29:                                               ; preds = %23
  %30 = load atomic i64, i64* @_ZZN17GrBufferAllocPool12deleteBlocksEvE28trace_event_unique_atomic101.0.0 monotonic, align 8
  %31 = inttoptr i64 %30 to i8*
  %32 = icmp eq i64 %30, 0
  br i1 %32, label %33, label %41

33:                                               ; preds = %29
  %34 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #9
  %35 = bitcast %class.SkEventTracer* %34 to i8* (%class.SkEventTracer*, i8*)***
  %36 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %35, align 8
  %37 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %36, i64 2
  %38 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %37, align 8
  %39 = tail call i8* %38(%class.SkEventTracer* %34, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0)) #9
  %40 = ptrtoint i8* %39 to i64
  store atomic i64 %40, i64* @_ZZN17GrBufferAllocPool12deleteBlocksEvE28trace_event_unique_atomic101.0.0 monotonic, align 8
  br label %41

41:                                               ; preds = %29, %33
  %42 = phi i8* [ %31, %29 ], [ %39, %33 ]
  %43 = load i8, i8* %42, align 1
  %44 = and i8 %43, 5
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %76, label %46

46:                                               ; preds = %41
  %47 = load %"struct.GrBufferAllocPool::BufferBlock"*, %"struct.GrBufferAllocPool::BufferBlock"** %12, align 8
  %48 = load i64, i64* %6, align 8
  %49 = lshr i64 %48, 1
  %50 = and i64 %49, 2147483647
  %51 = add nsw i64 %50, -1
  %52 = getelementptr inbounds %"struct.GrBufferAllocPool::BufferBlock", %"struct.GrBufferAllocPool::BufferBlock"* %47, i64 %51, i32 0
  %53 = load i64, i64* %52, align 8
  %54 = uitofp i64 %53 to float
  %55 = getelementptr inbounds %"struct.GrBufferAllocPool::BufferBlock", %"struct.GrBufferAllocPool::BufferBlock"* %47, i64 %51, i32 1, i32 0
  %56 = load %class.GrBuffer*, %class.GrBuffer** %55, align 8
  %57 = bitcast %class.GrBuffer* %56 to i64 (%class.GrBuffer*)***
  %58 = load i64 (%class.GrBuffer*)**, i64 (%class.GrBuffer*)*** %57, align 8
  %59 = getelementptr inbounds i64 (%class.GrBuffer*)*, i64 (%class.GrBuffer*)** %58, i64 4
  %60 = load i64 (%class.GrBuffer*)*, i64 (%class.GrBuffer*)** %59, align 8
  %61 = tail call i64 %60(%class.GrBuffer* %56) #9
  %62 = uitofp i64 %61 to float
  %63 = fdiv float %54, %62
  %64 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64)
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8** %2, align 8
  %65 = getelementptr inbounds [1 x i8], [1 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %65) #9
  %66 = bitcast [1 x i64]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #9
  %67 = getelementptr inbounds [1 x i64], [1 x i64]* %4, i64 0, i64 0
  %68 = fpext float %63 to double
  store i8 4, i8* %65, align 1
  %69 = bitcast [1 x i64]* %4 to double*
  store double %68, double* %69, align 8
  %70 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #9
  %71 = bitcast %class.SkEventTracer* %70 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %72 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %71, align 8
  %73 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %72, i64 4
  %74 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %73, align 8
  %75 = call i64 %74(%class.SkEventTracer* %70, i8 signext 73, i8* %42, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0), i64 0, i32 1, i8** nonnull %2, i8* nonnull %65, i64* nonnull %67, i8 zeroext 16) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %65) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64)
  br label %76

76:                                               ; preds = %41, %46
  %77 = load %"struct.GrBufferAllocPool::BufferBlock"*, %"struct.GrBufferAllocPool::BufferBlock"** %12, align 8
  %78 = load i64, i64* %6, align 8
  %79 = lshr i64 %78, 1
  %80 = and i64 %79, 2147483647
  %81 = add nsw i64 %80, -1
  %82 = getelementptr inbounds %"struct.GrBufferAllocPool::BufferBlock", %"struct.GrBufferAllocPool::BufferBlock"* %77, i64 %81, i32 1, i32 0
  %83 = load %class.GrBuffer*, %class.GrBuffer** %82, align 8
  %84 = icmp eq %class.GrBuffer* %83, null
  %85 = getelementptr inbounds %class.GrBuffer, %class.GrBuffer* %83, i64 -19
  %86 = bitcast %class.GrBuffer* %85 to %class.GrGpuBuffer*
  %87 = select i1 %84, %class.GrGpuBuffer* null, %class.GrGpuBuffer* %86
  call void @_ZN11GrGpuBuffer5unmapEv(%class.GrGpuBuffer* %87) #9
  br label %88

88:                                               ; preds = %10, %23, %76, %1
  %89 = load i64, i64* %6, align 8
  %90 = and i64 %89, 4294967294
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %118, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %5, i64 0, i32 0
  %94 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %0, i64 0, i32 7
  br label %95

95:                                               ; preds = %92, %114
  %96 = phi i64 [ %89, %92 ], [ %115, %114 ]
  %97 = lshr i64 %96, 1
  %98 = and i64 %97, 2147483647
  %99 = add nuw nsw i64 %98, 4294967295
  %100 = shl nuw nsw i64 %99, 1
  %101 = and i64 %100, 4294967294
  %102 = and i64 %96, -4294967295
  %103 = or i64 %101, %102
  store i64 %103, i64* %6, align 8
  %104 = load %"struct.GrBufferAllocPool::BufferBlock"*, %"struct.GrBufferAllocPool::BufferBlock"** %93, align 8
  %105 = and i64 %99, 2147483647
  %106 = getelementptr inbounds %"struct.GrBufferAllocPool::BufferBlock", %"struct.GrBufferAllocPool::BufferBlock"* %104, i64 %105, i32 1, i32 0
  %107 = load %class.GrBuffer*, %class.GrBuffer** %106, align 8
  %108 = icmp eq %class.GrBuffer* %107, null
  br i1 %108, label %114, label %109

109:                                              ; preds = %95
  %110 = bitcast %class.GrBuffer* %107 to void (%class.GrBuffer*)***
  %111 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %110, align 8
  %112 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %111, i64 3
  %113 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %112, align 8
  call void %113(%class.GrBuffer* nonnull %107) #9
  br label %114

114:                                              ; preds = %95, %109
  call void @_ZN8SkTArrayIN17GrBufferAllocPool11BufferBlockELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray* %5, i32 0, i32 2) #9
  store i8* null, i8** %94, align 8
  %115 = load i64, i64* %6, align 8
  %116 = and i64 %115, 4294967294
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %95

118:                                              ; preds = %114, %88
  ret void
}

declare zeroext i1 @_ZNK11GrGpuBuffer8isMappedEv(%class.GrGpuBuffer*) local_unnamed_addr #3

declare %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() local_unnamed_addr #3

declare void @_ZN11GrGpuBuffer5unmapEv(%class.GrGpuBuffer*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrBufferAllocPool12destroyBlockEv(%class.GrBufferAllocPool*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %0, i64 0, i32 2
  %3 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %0, i64 0, i32 2, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = lshr i64 %4, 1
  %6 = and i64 %5, 2147483647
  %7 = add nuw nsw i64 %6, 4294967295
  %8 = shl nuw nsw i64 %7, 1
  %9 = and i64 %8, 4294967294
  %10 = and i64 %4, -4294967295
  %11 = or i64 %9, %10
  store i64 %11, i64* %3, align 8
  %12 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %2, i64 0, i32 0
  %13 = load %"struct.GrBufferAllocPool::BufferBlock"*, %"struct.GrBufferAllocPool::BufferBlock"** %12, align 8
  %14 = and i64 %7, 2147483647
  %15 = getelementptr inbounds %"struct.GrBufferAllocPool::BufferBlock", %"struct.GrBufferAllocPool::BufferBlock"* %13, i64 %14, i32 1, i32 0
  %16 = load %class.GrBuffer*, %class.GrBuffer** %15, align 8
  %17 = icmp eq %class.GrBuffer* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %1
  %19 = bitcast %class.GrBuffer* %16 to void (%class.GrBuffer*)***
  %20 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %19, align 8
  %21 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %20, i64 3
  %22 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %21, align 8
  tail call void %22(%class.GrBuffer* nonnull %16) #9
  br label %23

23:                                               ; preds = %1, %18
  tail call void @_ZN8SkTArrayIN17GrBufferAllocPool11BufferBlockELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray* %2, i32 0, i32 2) #9
  %24 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %0, i64 0, i32 7
  store i8* null, i8** %24, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrBufferAllocPoolD0Ev(%class.GrBufferAllocPool*) unnamed_addr #0 align 2 {
  tail call void @_ZN17GrBufferAllocPoolD2Ev(%class.GrBufferAllocPool* %0) #9
  %2 = bitcast %class.GrBufferAllocPool* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrBufferAllocPool5resetEv(%class.GrBufferAllocPool*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %0, i64 0, i32 1
  store i64 0, i64* %2, align 8
  tail call void @_ZN17GrBufferAllocPool12deleteBlocksEv(%class.GrBufferAllocPool* %0)
  %3 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %0, i64 0, i32 4, i32 0
  %4 = load %class.GrCpuBuffer*, %class.GrCpuBuffer** %3, align 8
  store %class.GrCpuBuffer* null, %class.GrCpuBuffer** %3, align 8
  %5 = icmp eq %class.GrCpuBuffer* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.GrCpuBuffer, %class.GrCpuBuffer* %4, i64 0, i32 1
  %8 = getelementptr inbounds %class.GrNonAtomicRef.1, %class.GrNonAtomicRef.1* %7, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = add nsw i32 %9, -1
  store i32 %10, i32* %8, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %19

12:                                               ; preds = %6
  %13 = getelementptr inbounds %class.GrNonAtomicRef.1, %class.GrNonAtomicRef.1* %7, i64 -2
  %14 = bitcast %class.GrNonAtomicRef.1* %13 to %class.GrCpuBuffer*
  %15 = bitcast %class.GrNonAtomicRef.1* %13 to void (%class.GrCpuBuffer*)***
  %16 = load void (%class.GrCpuBuffer*)**, void (%class.GrCpuBuffer*)*** %15, align 8
  %17 = getelementptr inbounds void (%class.GrCpuBuffer*)*, void (%class.GrCpuBuffer*)** %16, i64 1
  %18 = load void (%class.GrCpuBuffer*)*, void (%class.GrCpuBuffer*)** %17, align 8
  tail call void %18(%class.GrCpuBuffer* nonnull %14) #9
  br label %19

19:                                               ; preds = %1, %6, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrBufferAllocPool12resetCpuDataEm(%class.GrBufferAllocPool* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp.0, align 8
  %4 = icmp eq i64 %1, 0
  %5 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %0, i64 0, i32 4
  %6 = getelementptr inbounds %class.sk_sp.0, %class.sk_sp.0* %5, i64 0, i32 0
  %7 = load %class.GrCpuBuffer*, %class.GrCpuBuffer** %6, align 8
  br i1 %4, label %8, label %23

8:                                                ; preds = %2
  store %class.GrCpuBuffer* null, %class.GrCpuBuffer** %6, align 8
  %9 = icmp eq %class.GrCpuBuffer* %7, null
  br i1 %9, label %82, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %class.GrCpuBuffer, %class.GrCpuBuffer* %7, i64 0, i32 1
  %12 = getelementptr inbounds %class.GrNonAtomicRef.1, %class.GrNonAtomicRef.1* %11, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = add nsw i32 %13, -1
  store i32 %14, i32* %12, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %82

16:                                               ; preds = %10
  %17 = getelementptr inbounds %class.GrNonAtomicRef.1, %class.GrNonAtomicRef.1* %11, i64 -2
  %18 = bitcast %class.GrNonAtomicRef.1* %17 to %class.GrCpuBuffer*
  %19 = bitcast %class.GrNonAtomicRef.1* %17 to void (%class.GrCpuBuffer*)***
  %20 = load void (%class.GrCpuBuffer*)**, void (%class.GrCpuBuffer*)*** %19, align 8
  %21 = getelementptr inbounds void (%class.GrCpuBuffer*)*, void (%class.GrCpuBuffer*)** %20, i64 1
  %22 = load void (%class.GrCpuBuffer*)*, void (%class.GrCpuBuffer*)** %21, align 8
  tail call void %22(%class.GrCpuBuffer* nonnull %18) #9
  br label %82

23:                                               ; preds = %2
  %24 = icmp eq %class.GrCpuBuffer* %7, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %class.GrCpuBuffer, %class.GrCpuBuffer* %7, i64 0, i32 3
  %27 = load i64, i64* %26, align 8
  %28 = icmp ult i64 %27, %1
  br i1 %28, label %29, label %82

29:                                               ; preds = %23, %25
  %30 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %0, i64 0, i32 5
  %31 = load %class.GrGpu*, %class.GrGpu** %30, align 8
  %32 = getelementptr inbounds %class.GrGpu, %class.GrGpu* %31, i64 0, i32 2, i32 0
  %33 = load %class.GrCaps*, %class.GrCaps** %32, align 8
  %34 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %33, i64 0, i32 3
  %35 = bitcast i48* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %class.sk_sp.0* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #9
  %38 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %0, i64 0, i32 3, i32 0
  %39 = load %"class.GrBufferAllocPool::CpuBufferCache"*, %"class.GrBufferAllocPool::CpuBufferCache"** %38, align 8
  %40 = icmp eq %"class.GrBufferAllocPool::CpuBufferCache"* %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %29
  %42 = and i64 %36, 524288
  %43 = icmp ne i64 %42, 0
  call void @_ZN17GrBufferAllocPool14CpuBufferCache10makeBufferEmb(%class.sk_sp.0* nonnull sret %3, %"class.GrBufferAllocPool::CpuBufferCache"* nonnull %39, i64 %1, i1 zeroext %43)
  %44 = bitcast %class.sk_sp.0* %3 to i64*
  %45 = load i64, i64* %44, align 8
  br label %62

46:                                               ; preds = %29
  %47 = add i64 %1, 32
  %48 = icmp ugt i64 %47, 31
  br i1 %48, label %50, label %49

49:                                               ; preds = %46
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3, i64 0, i64 0), i32 22, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4, i64 0, i64 0)) #10, !noalias !9
  unreachable

50:                                               ; preds = %46
  %51 = tail call i8* @_Znwm(i64 %47) #9, !noalias !9
  %52 = getelementptr inbounds i8, i8* %51, i64 32
  %53 = getelementptr inbounds i8, i8* %51, i64 8
  %54 = bitcast i8* %53 to i32*
  store i32 1, i32* %54, align 4, !noalias !9
  %55 = bitcast i8* %51 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV11GrCpuBuffer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %55, align 8, !noalias !9
  %56 = getelementptr inbounds i8, i8* %51, i64 16
  %57 = bitcast i8* %56 to i8**
  store i8* %52, i8** %57, align 8, !noalias !9
  %58 = getelementptr inbounds i8, i8* %51, i64 24
  %59 = bitcast i8* %58 to i64*
  store i64 %1, i64* %59, align 8, !noalias !9
  %60 = bitcast %class.sk_sp.0* %3 to i8**
  store i8* %51, i8** %60, align 8, !alias.scope !9
  %61 = ptrtoint i8* %51 to i64
  br label %62

62:                                               ; preds = %50, %41
  %63 = phi i64 [ %61, %50 ], [ %45, %41 ]
  %64 = getelementptr inbounds %class.sk_sp.0, %class.sk_sp.0* %3, i64 0, i32 0
  store %class.GrCpuBuffer* null, %class.GrCpuBuffer** %64, align 8
  %65 = load %class.GrCpuBuffer*, %class.GrCpuBuffer** %6, align 8
  %66 = bitcast %class.sk_sp.0* %5 to i64*
  store i64 %63, i64* %66, align 8
  %67 = icmp eq %class.GrCpuBuffer* %65, null
  br i1 %67, label %81, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %class.GrCpuBuffer, %class.GrCpuBuffer* %65, i64 0, i32 1
  %70 = getelementptr inbounds %class.GrNonAtomicRef.1, %class.GrNonAtomicRef.1* %69, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = add nsw i32 %71, -1
  store i32 %72, i32* %70, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %81

74:                                               ; preds = %68
  %75 = getelementptr inbounds %class.GrNonAtomicRef.1, %class.GrNonAtomicRef.1* %69, i64 -2
  %76 = bitcast %class.GrNonAtomicRef.1* %75 to %class.GrCpuBuffer*
  %77 = bitcast %class.GrNonAtomicRef.1* %75 to void (%class.GrCpuBuffer*)***
  %78 = load void (%class.GrCpuBuffer*)**, void (%class.GrCpuBuffer*)*** %77, align 8
  %79 = getelementptr inbounds void (%class.GrCpuBuffer*)*, void (%class.GrCpuBuffer*)** %78, i64 1
  %80 = load void (%class.GrCpuBuffer*)*, void (%class.GrCpuBuffer*)** %79, align 8
  tail call void %80(%class.GrCpuBuffer* nonnull %76) #9
  br label %81

81:                                               ; preds = %74, %68, %62
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #9
  br label %82

82:                                               ; preds = %16, %10, %8, %25, %81
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrBufferAllocPool5unmapEv(%class.GrBufferAllocPool* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca i8*, align 8
  %3 = alloca [1 x i8], align 1
  %4 = alloca [1 x i64], align 8
  %5 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %0, i64 0, i32 7
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %94, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %0, i64 0, i32 2, i32 0
  %10 = load %"struct.GrBufferAllocPool::BufferBlock"*, %"struct.GrBufferAllocPool::BufferBlock"** %9, align 8
  %11 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %0, i64 0, i32 2, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = lshr i64 %12, 1
  %14 = and i64 %13, 2147483647
  %15 = add nsw i64 %14, -1
  %16 = getelementptr inbounds %"struct.GrBufferAllocPool::BufferBlock", %"struct.GrBufferAllocPool::BufferBlock"* %10, i64 %15
  %17 = getelementptr inbounds %"struct.GrBufferAllocPool::BufferBlock", %"struct.GrBufferAllocPool::BufferBlock"* %10, i64 %15, i32 1, i32 0
  %18 = load %class.GrBuffer*, %class.GrBuffer** %17, align 8
  %19 = bitcast %class.GrBuffer* %18 to i1 (%class.GrBuffer*)***
  %20 = load i1 (%class.GrBuffer*)**, i1 (%class.GrBuffer*)*** %19, align 8
  %21 = getelementptr inbounds i1 (%class.GrBuffer*)*, i1 (%class.GrBuffer*)** %20, i64 5
  %22 = load i1 (%class.GrBuffer*)*, i1 (%class.GrBuffer*)** %21, align 8
  %23 = tail call zeroext i1 %22(%class.GrBuffer* %18) #9
  br i1 %23, label %93, label %24

24:                                               ; preds = %8
  %25 = icmp eq %class.GrBuffer* %18, null
  %26 = getelementptr inbounds %class.GrBuffer, %class.GrBuffer* %18, i64 -19
  %27 = bitcast %class.GrBuffer* %26 to %class.GrGpuBuffer*
  %28 = select i1 %25, %class.GrGpuBuffer* null, %class.GrGpuBuffer* %27
  %29 = tail call zeroext i1 @_ZNK11GrGpuBuffer8isMappedEv(%class.GrGpuBuffer* %28) #9
  br i1 %29, label %30, label %77

30:                                               ; preds = %24
  %31 = load atomic i64, i64* @_ZZN17GrBufferAllocPool5unmapEvE28trace_event_unique_atomic131.0.0 monotonic, align 8
  %32 = inttoptr i64 %31 to i8*
  %33 = icmp eq i64 %31, 0
  br i1 %33, label %34, label %42

34:                                               ; preds = %30
  %35 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #9
  %36 = bitcast %class.SkEventTracer* %35 to i8* (%class.SkEventTracer*, i8*)***
  %37 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %36, align 8
  %38 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %37, i64 2
  %39 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %38, align 8
  %40 = tail call i8* %39(%class.SkEventTracer* %35, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0)) #9
  %41 = ptrtoint i8* %40 to i64
  store atomic i64 %41, i64* @_ZZN17GrBufferAllocPool5unmapEvE28trace_event_unique_atomic131.0.0 monotonic, align 8
  br label %42

42:                                               ; preds = %30, %34
  %43 = phi i8* [ %32, %30 ], [ %40, %34 ]
  %44 = load i8, i8* %43, align 1
  %45 = and i8 %44, 5
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %71, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"struct.GrBufferAllocPool::BufferBlock", %"struct.GrBufferAllocPool::BufferBlock"* %16, i64 0, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = uitofp i64 %49 to float
  %51 = load %class.GrBuffer*, %class.GrBuffer** %17, align 8
  %52 = bitcast %class.GrBuffer* %51 to i64 (%class.GrBuffer*)***
  %53 = load i64 (%class.GrBuffer*)**, i64 (%class.GrBuffer*)*** %52, align 8
  %54 = getelementptr inbounds i64 (%class.GrBuffer*)*, i64 (%class.GrBuffer*)** %53, i64 4
  %55 = load i64 (%class.GrBuffer*)*, i64 (%class.GrBuffer*)** %54, align 8
  %56 = tail call i64 %55(%class.GrBuffer* %51) #9
  %57 = uitofp i64 %56 to float
  %58 = fdiv float %50, %57
  %59 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59)
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8** %2, align 8
  %60 = getelementptr inbounds [1 x i8], [1 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %60) #9
  %61 = bitcast [1 x i64]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #9
  %62 = getelementptr inbounds [1 x i64], [1 x i64]* %4, i64 0, i64 0
  %63 = fpext float %58 to double
  store i8 4, i8* %60, align 1
  %64 = bitcast [1 x i64]* %4 to double*
  store double %63, double* %64, align 8
  %65 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #9
  %66 = bitcast %class.SkEventTracer* %65 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %67 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %66, align 8
  %68 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %67, i64 4
  %69 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %68, align 8
  %70 = call i64 %69(%class.SkEventTracer* %65, i8 signext 73, i8* %43, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0), i64 0, i32 1, i8** nonnull %2, i8* nonnull %60, i64* nonnull %62, i8 zeroext 16) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %60) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59)
  br label %71

71:                                               ; preds = %42, %47
  %72 = load %class.GrBuffer*, %class.GrBuffer** %17, align 8
  %73 = icmp eq %class.GrBuffer* %72, null
  %74 = getelementptr inbounds %class.GrBuffer, %class.GrBuffer* %72, i64 -19
  %75 = bitcast %class.GrBuffer* %74 to %class.GrGpuBuffer*
  %76 = select i1 %73, %class.GrGpuBuffer* null, %class.GrGpuBuffer* %75
  call void @_ZN11GrGpuBuffer5unmapEv(%class.GrGpuBuffer* %76) #9
  br label %93

77:                                               ; preds = %24
  %78 = load %class.GrBuffer*, %class.GrBuffer** %17, align 8
  %79 = bitcast %class.GrBuffer* %78 to i64 (%class.GrBuffer*)***
  %80 = load i64 (%class.GrBuffer*)**, i64 (%class.GrBuffer*)*** %79, align 8
  %81 = getelementptr inbounds i64 (%class.GrBuffer*)*, i64 (%class.GrBuffer*)** %80, i64 4
  %82 = load i64 (%class.GrBuffer*)*, i64 (%class.GrBuffer*)** %81, align 8
  %83 = tail call i64 %82(%class.GrBuffer* %78) #9
  %84 = getelementptr inbounds %"struct.GrBufferAllocPool::BufferBlock", %"struct.GrBufferAllocPool::BufferBlock"* %16, i64 0, i32 0
  %85 = load i64, i64* %84, align 8
  %86 = sub i64 %83, %85
  %87 = load %"struct.GrBufferAllocPool::BufferBlock"*, %"struct.GrBufferAllocPool::BufferBlock"** %9, align 8
  %88 = load i64, i64* %11, align 8
  %89 = lshr i64 %88, 1
  %90 = and i64 %89, 2147483647
  %91 = add nsw i64 %90, -1
  %92 = getelementptr inbounds %"struct.GrBufferAllocPool::BufferBlock", %"struct.GrBufferAllocPool::BufferBlock"* %87, i64 %91
  tail call void @_ZN17GrBufferAllocPool12flushCpuDataERKNS_11BufferBlockEm(%class.GrBufferAllocPool* %0, %"struct.GrBufferAllocPool::BufferBlock"* dereferenceable(16) %92, i64 %86)
  br label %93

93:                                               ; preds = %71, %77, %8
  store i8* null, i8** %5, align 8
  br label %94

94:                                               ; preds = %1, %93
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrBufferAllocPool12flushCpuDataERKNS_11BufferBlockEm(%class.GrBufferAllocPool* nocapture readonly, %"struct.GrBufferAllocPool::BufferBlock"* nocapture readonly dereferenceable(16), i64) local_unnamed_addr #0 align 2 {
  %4 = alloca i8*, align 8
  %5 = alloca [1 x i8], align 1
  %6 = alloca [1 x i64], align 8
  %7 = getelementptr inbounds %"struct.GrBufferAllocPool::BufferBlock", %"struct.GrBufferAllocPool::BufferBlock"* %1, i64 0, i32 1, i32 0
  %8 = load %class.GrBuffer*, %class.GrBuffer** %7, align 8
  %9 = icmp eq %class.GrBuffer* %8, null
  %10 = getelementptr inbounds %class.GrBuffer, %class.GrBuffer* %8, i64 -19
  %11 = bitcast %class.GrBuffer* %10 to %class.GrGpuBuffer*
  %12 = select i1 %9, %class.GrGpuBuffer* null, %class.GrGpuBuffer* %11
  %13 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %0, i64 0, i32 5
  %14 = load %class.GrGpu*, %class.GrGpu** %13, align 8
  %15 = getelementptr inbounds %class.GrGpu, %class.GrGpu* %14, i64 0, i32 2, i32 0
  %16 = load %class.GrCaps*, %class.GrCaps** %15, align 8
  %17 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %16, i64 0, i32 6
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %77, label %20

20:                                               ; preds = %3
  %21 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %16, i64 0, i32 7
  %22 = load i32, i32* %21, align 4
  %23 = sext i32 %22 to i64
  %24 = icmp ult i64 %23, %2
  br i1 %24, label %25, label %77

25:                                               ; preds = %20
  %26 = tail call i8* @_ZN11GrGpuBuffer3mapEv(%class.GrGpuBuffer* %12) #9
  %27 = icmp eq i8* %26, null
  br i1 %27, label %77, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %0, i64 0, i32 7
  %30 = load i8*, i8** %29, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %26, i8* align 1 %30, i64 %2, i1 false)
  %31 = load atomic i64, i64* @_ZZN17GrBufferAllocPool12flushCpuDataERKNS_11BufferBlockEmE28trace_event_unique_atomic403.0.0 monotonic, align 8
  %32 = inttoptr i64 %31 to i8*
  %33 = icmp eq i64 %31, 0
  br i1 %33, label %34, label %42

34:                                               ; preds = %28
  %35 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #9
  %36 = bitcast %class.SkEventTracer* %35 to i8* (%class.SkEventTracer*, i8*)***
  %37 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %36, align 8
  %38 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %37, i64 2
  %39 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %38, align 8
  %40 = tail call i8* %39(%class.SkEventTracer* %35, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0)) #9
  %41 = ptrtoint i8* %40 to i64
  store atomic i64 %41, i64* @_ZZN17GrBufferAllocPool12flushCpuDataERKNS_11BufferBlockEmE28trace_event_unique_atomic403.0.0 monotonic, align 8
  br label %42

42:                                               ; preds = %28, %34
  %43 = phi i8* [ %32, %28 ], [ %40, %34 ]
  %44 = load i8, i8* %43, align 1
  %45 = and i8 %44, 5
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %71, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"struct.GrBufferAllocPool::BufferBlock", %"struct.GrBufferAllocPool::BufferBlock"* %1, i64 0, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = uitofp i64 %49 to float
  %51 = load %class.GrBuffer*, %class.GrBuffer** %7, align 8
  %52 = bitcast %class.GrBuffer* %51 to i64 (%class.GrBuffer*)***
  %53 = load i64 (%class.GrBuffer*)**, i64 (%class.GrBuffer*)*** %52, align 8
  %54 = getelementptr inbounds i64 (%class.GrBuffer*)*, i64 (%class.GrBuffer*)** %53, i64 4
  %55 = load i64 (%class.GrBuffer*)*, i64 (%class.GrBuffer*)** %54, align 8
  %56 = tail call i64 %55(%class.GrBuffer* %51) #9
  %57 = uitofp i64 %56 to float
  %58 = fdiv float %50, %57
  %59 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59)
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8** %4, align 8
  %60 = getelementptr inbounds [1 x i8], [1 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %60) #9
  %61 = bitcast [1 x i64]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #9
  %62 = getelementptr inbounds [1 x i64], [1 x i64]* %6, i64 0, i64 0
  %63 = fpext float %58 to double
  store i8 4, i8* %60, align 1
  %64 = bitcast [1 x i64]* %6 to double*
  store double %63, double* %64, align 8
  %65 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #9
  %66 = bitcast %class.SkEventTracer* %65 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %67 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %66, align 8
  %68 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %67, i64 4
  %69 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %68, align 8
  %70 = call i64 %69(%class.SkEventTracer* %65, i8 signext 73, i8* %43, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0), i64 0, i32 1, i8** nonnull %4, i8* nonnull %60, i64* nonnull %62, i8 zeroext 16) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %60) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59)
  br label %71

71:                                               ; preds = %42, %47
  %72 = load %class.GrBuffer*, %class.GrBuffer** %7, align 8
  %73 = icmp eq %class.GrBuffer* %72, null
  %74 = getelementptr inbounds %class.GrBuffer, %class.GrBuffer* %72, i64 -19
  %75 = bitcast %class.GrBuffer* %74 to %class.GrGpuBuffer*
  %76 = select i1 %73, %class.GrGpuBuffer* null, %class.GrGpuBuffer* %75
  call void @_ZN11GrGpuBuffer5unmapEv(%class.GrGpuBuffer* %76) #9
  br label %81

77:                                               ; preds = %25, %3, %20
  %78 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %0, i64 0, i32 7
  %79 = load i8*, i8** %78, align 8
  %80 = tail call zeroext i1 @_ZN11GrGpuBuffer10updateDataEPKvm(%class.GrGpuBuffer* %12, i8* %79, i64 %2) #9
  br label %81

81:                                               ; preds = %71, %77
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN17GrBufferAllocPool9makeSpaceEmmP5sk_spIK8GrBufferEPm(%class.GrBufferAllocPool*, i64, i64, %class.sk_sp.152* nocapture, i64* nocapture) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %0, i64 0, i32 7
  %7 = load i8*, i8** %6, align 8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %65, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %0, i64 0, i32 2, i32 0
  %11 = load %"struct.GrBufferAllocPool::BufferBlock"*, %"struct.GrBufferAllocPool::BufferBlock"** %10, align 8
  %12 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %0, i64 0, i32 2, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = lshr i64 %13, 1
  %15 = and i64 %14, 2147483647
  %16 = add nsw i64 %15, -1
  %17 = getelementptr inbounds %"struct.GrBufferAllocPool::BufferBlock", %"struct.GrBufferAllocPool::BufferBlock"* %11, i64 %16, i32 1, i32 0
  %18 = load %class.GrBuffer*, %class.GrBuffer** %17, align 8
  %19 = bitcast %class.GrBuffer* %18 to i64 (%class.GrBuffer*)***
  %20 = load i64 (%class.GrBuffer*)**, i64 (%class.GrBuffer*)*** %19, align 8
  %21 = getelementptr inbounds i64 (%class.GrBuffer*)*, i64 (%class.GrBuffer*)** %20, i64 4
  %22 = load i64 (%class.GrBuffer*)*, i64 (%class.GrBuffer*)** %21, align 8
  %23 = tail call i64 %22(%class.GrBuffer* %18) #9
  %24 = getelementptr inbounds %"struct.GrBufferAllocPool::BufferBlock", %"struct.GrBufferAllocPool::BufferBlock"* %11, i64 %16, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = urem i64 %26, %2
  %28 = sub i64 %2, %27
  %29 = urem i64 %28, %2
  %30 = add i64 %29, %1
  %31 = icmp ult i64 %30, %29
  br i1 %31, label %100, label %32

32:                                               ; preds = %9
  %33 = icmp ugt i64 %30, %25
  br i1 %33, label %65, label %34

34:                                               ; preds = %32
  %35 = bitcast i8** %6 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %36, %26
  %38 = inttoptr i64 %37 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %38, i8 0, i64 %29, i1 false)
  %39 = add i64 %29, %26
  store i64 %39, i64* %4, align 8
  %40 = load %class.GrBuffer*, %class.GrBuffer** %17, align 8
  %41 = icmp eq %class.GrBuffer* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %34
  %43 = bitcast %class.GrBuffer* %40 to void (%class.GrBuffer*)***
  %44 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %43, align 8
  %45 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %44, i64 2
  %46 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %45, align 8
  tail call void %46(%class.GrBuffer* nonnull %40) #9
  br label %47

47:                                               ; preds = %42, %34
  %48 = getelementptr inbounds %class.sk_sp.152, %class.sk_sp.152* %3, i64 0, i32 0
  %49 = load %class.GrBuffer*, %class.GrBuffer** %48, align 8
  store %class.GrBuffer* %40, %class.GrBuffer** %48, align 8
  %50 = icmp eq %class.GrBuffer* %49, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %47
  %52 = bitcast %class.GrBuffer* %49 to void (%class.GrBuffer*)***
  %53 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %52, align 8
  %54 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %53, i64 3
  %55 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %54, align 8
  tail call void %55(%class.GrBuffer* nonnull %49) #9
  br label %56

56:                                               ; preds = %47, %51
  %57 = load i64, i64* %24, align 8
  %58 = sub i64 %57, %30
  store i64 %58, i64* %24, align 8
  %59 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %0, i64 0, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = add i64 %60, %30
  store i64 %61, i64* %59, align 8
  %62 = load i64, i64* %35, align 8
  %63 = add i64 %62, %39
  %64 = inttoptr i64 %63 to i8*
  br label %100

65:                                               ; preds = %32, %5
  %66 = tail call zeroext i1 @_ZN17GrBufferAllocPool11createBlockEm(%class.GrBufferAllocPool* %0, i64 %1)
  br i1 %66, label %67, label %100

67:                                               ; preds = %65
  store i64 0, i64* %4, align 8
  %68 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %0, i64 0, i32 2, i32 0
  %69 = load %"struct.GrBufferAllocPool::BufferBlock"*, %"struct.GrBufferAllocPool::BufferBlock"** %68, align 8
  %70 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %0, i64 0, i32 2, i32 1
  %71 = load i64, i64* %70, align 8
  %72 = lshr i64 %71, 1
  %73 = and i64 %72, 2147483647
  %74 = add nsw i64 %73, -1
  %75 = getelementptr inbounds %"struct.GrBufferAllocPool::BufferBlock", %"struct.GrBufferAllocPool::BufferBlock"* %69, i64 %74, i32 1, i32 0
  %76 = load %class.GrBuffer*, %class.GrBuffer** %75, align 8
  %77 = icmp eq %class.GrBuffer* %76, null
  br i1 %77, label %83, label %78

78:                                               ; preds = %67
  %79 = bitcast %class.GrBuffer* %76 to void (%class.GrBuffer*)***
  %80 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %79, align 8
  %81 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %80, i64 2
  %82 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %81, align 8
  tail call void %82(%class.GrBuffer* nonnull %76) #9
  br label %83

83:                                               ; preds = %78, %67
  %84 = getelementptr inbounds %class.sk_sp.152, %class.sk_sp.152* %3, i64 0, i32 0
  %85 = load %class.GrBuffer*, %class.GrBuffer** %84, align 8
  store %class.GrBuffer* %76, %class.GrBuffer** %84, align 8
  %86 = icmp eq %class.GrBuffer* %85, null
  br i1 %86, label %92, label %87

87:                                               ; preds = %83
  %88 = bitcast %class.GrBuffer* %85 to void (%class.GrBuffer*)***
  %89 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %88, align 8
  %90 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %89, i64 3
  %91 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %90, align 8
  tail call void %91(%class.GrBuffer* nonnull %85) #9
  br label %92

92:                                               ; preds = %83, %87
  %93 = getelementptr inbounds %"struct.GrBufferAllocPool::BufferBlock", %"struct.GrBufferAllocPool::BufferBlock"* %69, i64 %74, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %94, %1
  store i64 %95, i64* %93, align 8
  %96 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %0, i64 0, i32 1
  %97 = load i64, i64* %96, align 8
  %98 = add i64 %97, %1
  store i64 %98, i64* %96, align 8
  %99 = load i8*, i8** %6, align 8
  br label %100

100:                                              ; preds = %9, %56, %65, %92
  %101 = phi i8* [ %99, %92 ], [ null, %65 ], [ null, %9 ], [ %64, %56 ]
  ret i8* %101
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN17GrBufferAllocPool11createBlockEm(%class.GrBufferAllocPool*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca i8*, align 8
  %4 = alloca [1 x i8], align 1
  %5 = alloca [1 x i64], align 8
  %6 = alloca %class.sk_sp.3, align 8
  %7 = icmp ugt i64 %1, 32768
  %8 = select i1 %7, i64 %1, i64 32768
  %9 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %0, i64 0, i32 2
  tail call void @_ZN8SkTArrayIN17GrBufferAllocPool11BufferBlockELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray* %9, i32 1, i32 1) #9
  %10 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %9, i64 0, i32 0
  %11 = load %"struct.GrBufferAllocPool::BufferBlock"*, %"struct.GrBufferAllocPool::BufferBlock"** %10, align 8
  %12 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %0, i64 0, i32 2, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = lshr i64 %13, 1
  %15 = and i64 %14, 2147483647
  %16 = add i64 %13, 2
  %17 = and i64 %16, 4294967294
  %18 = and i64 %13, -4294967295
  %19 = or i64 %17, %18
  store i64 %19, i64* %12, align 8
  %20 = getelementptr inbounds %"struct.GrBufferAllocPool::BufferBlock", %"struct.GrBufferAllocPool::BufferBlock"* %11, i64 %15, i32 1, i32 0
  store %class.GrBuffer* null, %class.GrBuffer** %20, align 8
  %21 = bitcast %class.sk_sp.3* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  call void @_ZN17GrBufferAllocPool9getBufferEm(%class.sk_sp.3* nonnull sret %6, %class.GrBufferAllocPool* %0, i64 %8)
  %22 = getelementptr inbounds %"struct.GrBufferAllocPool::BufferBlock", %"struct.GrBufferAllocPool::BufferBlock"* %11, i64 %15, i32 1
  %23 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %6, i64 0, i32 0
  %24 = bitcast %class.sk_sp.3* %6 to i64*
  %25 = load i64, i64* %24, align 8
  store %class.GrBuffer* null, %class.GrBuffer** %23, align 8
  %26 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %22, i64 0, i32 0
  %27 = load %class.GrBuffer*, %class.GrBuffer** %26, align 8
  %28 = bitcast %class.sk_sp.3* %22 to i64*
  store i64 %25, i64* %28, align 8
  %29 = icmp eq %class.GrBuffer* %27, null
  %30 = inttoptr i64 %25 to %class.GrBuffer*
  br i1 %29, label %37, label %31

31:                                               ; preds = %2
  %32 = bitcast %class.GrBuffer* %27 to void (%class.GrBuffer*)***
  %33 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %32, align 8
  %34 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %33, i64 3
  %35 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %34, align 8
  tail call void %35(%class.GrBuffer* nonnull %27) #9
  %36 = load %class.GrBuffer*, %class.GrBuffer** %26, align 8
  br label %37

37:                                               ; preds = %31, %2
  %38 = phi %class.GrBuffer* [ %36, %31 ], [ %30, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  %39 = icmp eq %class.GrBuffer* %38, null
  br i1 %39, label %40, label %60

40:                                               ; preds = %37
  %41 = load i64, i64* %12, align 8
  %42 = lshr i64 %41, 1
  %43 = and i64 %42, 2147483647
  %44 = add nuw nsw i64 %43, 4294967295
  %45 = shl nuw nsw i64 %44, 1
  %46 = and i64 %45, 4294967294
  %47 = and i64 %41, -4294967295
  %48 = or i64 %46, %47
  store i64 %48, i64* %12, align 8
  %49 = load %"struct.GrBufferAllocPool::BufferBlock"*, %"struct.GrBufferAllocPool::BufferBlock"** %10, align 8
  %50 = and i64 %44, 2147483647
  %51 = getelementptr inbounds %"struct.GrBufferAllocPool::BufferBlock", %"struct.GrBufferAllocPool::BufferBlock"* %49, i64 %50, i32 1, i32 0
  %52 = load %class.GrBuffer*, %class.GrBuffer** %51, align 8
  %53 = icmp eq %class.GrBuffer* %52, null
  br i1 %53, label %59, label %54

54:                                               ; preds = %40
  %55 = bitcast %class.GrBuffer* %52 to void (%class.GrBuffer*)***
  %56 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %55, align 8
  %57 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %56, i64 3
  %58 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %57, align 8
  tail call void %58(%class.GrBuffer* nonnull %52) #9
  br label %59

59:                                               ; preds = %40, %54
  tail call void @_ZN8SkTArrayIN17GrBufferAllocPool11BufferBlockELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray* %9, i32 0, i32 2) #9
  br label %194

60:                                               ; preds = %37
  %61 = bitcast %class.GrBuffer* %38 to i64 (%class.GrBuffer*)***
  %62 = load i64 (%class.GrBuffer*)**, i64 (%class.GrBuffer*)*** %61, align 8
  %63 = getelementptr inbounds i64 (%class.GrBuffer*)*, i64 (%class.GrBuffer*)** %62, i64 4
  %64 = load i64 (%class.GrBuffer*)*, i64 (%class.GrBuffer*)** %63, align 8
  %65 = tail call i64 %64(%class.GrBuffer* nonnull %38) #9
  %66 = getelementptr inbounds %"struct.GrBufferAllocPool::BufferBlock", %"struct.GrBufferAllocPool::BufferBlock"* %11, i64 %15, i32 0
  store i64 %65, i64* %66, align 8
  %67 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %0, i64 0, i32 7
  %68 = load i8*, i8** %67, align 8
  %69 = icmp eq i8* %68, null
  br i1 %69, label %149, label %70

70:                                               ; preds = %60
  %71 = load %"struct.GrBufferAllocPool::BufferBlock"*, %"struct.GrBufferAllocPool::BufferBlock"** %10, align 8
  %72 = load i64, i64* %12, align 8
  %73 = shl i64 %72, 31
  %74 = and i64 %73, 9223372032559808512
  %75 = add nsw i64 %74, -8589934592
  %76 = ashr exact i64 %75, 32
  %77 = getelementptr inbounds %"struct.GrBufferAllocPool::BufferBlock", %"struct.GrBufferAllocPool::BufferBlock"* %71, i64 %76
  %78 = getelementptr inbounds %"struct.GrBufferAllocPool::BufferBlock", %"struct.GrBufferAllocPool::BufferBlock"* %71, i64 %76, i32 1, i32 0
  %79 = load %class.GrBuffer*, %class.GrBuffer** %78, align 8
  %80 = bitcast %class.GrBuffer* %79 to i1 (%class.GrBuffer*)***
  %81 = load i1 (%class.GrBuffer*)**, i1 (%class.GrBuffer*)*** %80, align 8
  %82 = getelementptr inbounds i1 (%class.GrBuffer*)*, i1 (%class.GrBuffer*)** %81, i64 5
  %83 = load i1 (%class.GrBuffer*)*, i1 (%class.GrBuffer*)** %82, align 8
  %84 = tail call zeroext i1 %83(%class.GrBuffer* %79) #9
  br i1 %84, label %148, label %85

85:                                               ; preds = %70
  %86 = icmp eq %class.GrBuffer* %79, null
  %87 = getelementptr inbounds %class.GrBuffer, %class.GrBuffer* %79, i64 -19
  %88 = bitcast %class.GrBuffer* %87 to %class.GrGpuBuffer*
  %89 = select i1 %86, %class.GrGpuBuffer* null, %class.GrGpuBuffer* %88
  %90 = tail call zeroext i1 @_ZNK11GrGpuBuffer8isMappedEv(%class.GrGpuBuffer* %89) #9
  br i1 %90, label %91, label %138

91:                                               ; preds = %85
  %92 = load atomic i64, i64* @_ZZN17GrBufferAllocPool11createBlockEmE28trace_event_unique_atomic335.0.0 monotonic, align 8
  %93 = inttoptr i64 %92 to i8*
  %94 = icmp eq i64 %92, 0
  br i1 %94, label %95, label %103

95:                                               ; preds = %91
  %96 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #9
  %97 = bitcast %class.SkEventTracer* %96 to i8* (%class.SkEventTracer*, i8*)***
  %98 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %97, align 8
  %99 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %98, i64 2
  %100 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %99, align 8
  %101 = tail call i8* %100(%class.SkEventTracer* %96, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0)) #9
  %102 = ptrtoint i8* %101 to i64
  store atomic i64 %102, i64* @_ZZN17GrBufferAllocPool11createBlockEmE28trace_event_unique_atomic335.0.0 monotonic, align 8
  br label %103

103:                                              ; preds = %91, %95
  %104 = phi i8* [ %93, %91 ], [ %101, %95 ]
  %105 = load i8, i8* %104, align 1
  %106 = and i8 %105, 5
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %132, label %108

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"struct.GrBufferAllocPool::BufferBlock", %"struct.GrBufferAllocPool::BufferBlock"* %77, i64 0, i32 0
  %110 = load i64, i64* %109, align 8
  %111 = uitofp i64 %110 to float
  %112 = load %class.GrBuffer*, %class.GrBuffer** %78, align 8
  %113 = bitcast %class.GrBuffer* %112 to i64 (%class.GrBuffer*)***
  %114 = load i64 (%class.GrBuffer*)**, i64 (%class.GrBuffer*)*** %113, align 8
  %115 = getelementptr inbounds i64 (%class.GrBuffer*)*, i64 (%class.GrBuffer*)** %114, i64 4
  %116 = load i64 (%class.GrBuffer*)*, i64 (%class.GrBuffer*)** %115, align 8
  %117 = tail call i64 %116(%class.GrBuffer* %112) #9
  %118 = uitofp i64 %117 to float
  %119 = fdiv float %111, %118
  %120 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120)
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8** %3, align 8
  %121 = getelementptr inbounds [1 x i8], [1 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %121) #9
  %122 = bitcast [1 x i64]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %122) #9
  %123 = getelementptr inbounds [1 x i64], [1 x i64]* %5, i64 0, i64 0
  %124 = fpext float %119 to double
  store i8 4, i8* %121, align 1
  %125 = bitcast [1 x i64]* %5 to double*
  store double %124, double* %125, align 8
  %126 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #9
  %127 = bitcast %class.SkEventTracer* %126 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %128 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %127, align 8
  %129 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %128, i64 4
  %130 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %129, align 8
  %131 = call i64 %130(%class.SkEventTracer* %126, i8 signext 73, i8* %104, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0), i64 0, i32 1, i8** nonnull %3, i8* nonnull %121, i64* nonnull %123, i8 zeroext 16) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %122) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %121) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120)
  br label %132

132:                                              ; preds = %103, %108
  %133 = load %class.GrBuffer*, %class.GrBuffer** %78, align 8
  %134 = icmp eq %class.GrBuffer* %133, null
  %135 = getelementptr inbounds %class.GrBuffer, %class.GrBuffer* %133, i64 -19
  %136 = bitcast %class.GrBuffer* %135 to %class.GrGpuBuffer*
  %137 = select i1 %134, %class.GrGpuBuffer* null, %class.GrGpuBuffer* %136
  call void @_ZN11GrGpuBuffer5unmapEv(%class.GrGpuBuffer* %137) #9
  br label %148

138:                                              ; preds = %85
  %139 = load %class.GrBuffer*, %class.GrBuffer** %78, align 8
  %140 = bitcast %class.GrBuffer* %139 to i64 (%class.GrBuffer*)***
  %141 = load i64 (%class.GrBuffer*)**, i64 (%class.GrBuffer*)*** %140, align 8
  %142 = getelementptr inbounds i64 (%class.GrBuffer*)*, i64 (%class.GrBuffer*)** %141, i64 4
  %143 = load i64 (%class.GrBuffer*)*, i64 (%class.GrBuffer*)** %142, align 8
  %144 = tail call i64 %143(%class.GrBuffer* %139) #9
  %145 = getelementptr inbounds %"struct.GrBufferAllocPool::BufferBlock", %"struct.GrBufferAllocPool::BufferBlock"* %77, i64 0, i32 0
  %146 = load i64, i64* %145, align 8
  %147 = sub i64 %144, %146
  tail call void @_ZN17GrBufferAllocPool12flushCpuDataERKNS_11BufferBlockEm(%class.GrBufferAllocPool* %0, %"struct.GrBufferAllocPool::BufferBlock"* dereferenceable(16) %77, i64 %147)
  br label %148

148:                                              ; preds = %132, %138, %70
  store i8* null, i8** %67, align 8
  br label %149

149:                                              ; preds = %60, %148
  %150 = load %class.GrBuffer*, %class.GrBuffer** %26, align 8
  %151 = bitcast %class.GrBuffer* %150 to i1 (%class.GrBuffer*)***
  %152 = load i1 (%class.GrBuffer*)**, i1 (%class.GrBuffer*)*** %151, align 8
  %153 = getelementptr inbounds i1 (%class.GrBuffer*)*, i1 (%class.GrBuffer*)** %152, i64 5
  %154 = load i1 (%class.GrBuffer*)*, i1 (%class.GrBuffer*)** %153, align 8
  %155 = call zeroext i1 %154(%class.GrBuffer* %150) #9
  br i1 %155, label %156, label %161

156:                                              ; preds = %149
  %157 = bitcast %class.sk_sp.3* %22 to %class.GrCpuBuffer**
  %158 = load %class.GrCpuBuffer*, %class.GrCpuBuffer** %157, align 8
  %159 = getelementptr inbounds %class.GrCpuBuffer, %class.GrCpuBuffer* %158, i64 0, i32 2
  %160 = load i8*, i8** %159, align 8
  store i8* %160, i8** %67, align 8
  br label %183

161:                                              ; preds = %149
  %162 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %0, i64 0, i32 5
  %163 = load %class.GrGpu*, %class.GrGpu** %162, align 8
  %164 = getelementptr inbounds %class.GrGpu, %class.GrGpu* %163, i64 0, i32 2, i32 0
  %165 = load %class.GrCaps*, %class.GrCaps** %164, align 8
  %166 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %165, i64 0, i32 6
  %167 = load i32, i32* %166, align 8
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %181, label %169

169:                                              ; preds = %161
  %170 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %165, i64 0, i32 7
  %171 = load i32, i32* %170, align 4
  %172 = sext i32 %171 to i64
  %173 = icmp ugt i64 %8, %172
  br i1 %173, label %174, label %181

174:                                              ; preds = %169
  %175 = load %class.GrBuffer*, %class.GrBuffer** %26, align 8
  %176 = icmp eq %class.GrBuffer* %175, null
  %177 = getelementptr inbounds %class.GrBuffer, %class.GrBuffer* %175, i64 -19
  %178 = bitcast %class.GrBuffer* %177 to %class.GrGpuBuffer*
  %179 = select i1 %176, %class.GrGpuBuffer* null, %class.GrGpuBuffer* %178
  %180 = call i8* @_ZN11GrGpuBuffer3mapEv(%class.GrGpuBuffer* %179) #9
  store i8* %180, i8** %67, align 8
  br label %183

181:                                              ; preds = %169, %161
  %182 = load i8*, i8** %67, align 8
  br label %183

183:                                              ; preds = %181, %174, %156
  %184 = phi i8* [ %182, %181 ], [ %180, %174 ], [ %160, %156 ]
  %185 = icmp eq i8* %184, null
  br i1 %185, label %186, label %194

186:                                              ; preds = %183
  %187 = load i64, i64* %66, align 8
  call void @_ZN17GrBufferAllocPool12resetCpuDataEm(%class.GrBufferAllocPool* %0, i64 %187)
  %188 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %0, i64 0, i32 4, i32 0
  %189 = load %class.GrCpuBuffer*, %class.GrCpuBuffer** %188, align 8
  %190 = getelementptr inbounds %class.GrCpuBuffer, %class.GrCpuBuffer* %189, i64 0, i32 2
  %191 = bitcast i8** %190 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = bitcast i8** %67 to i64*
  store i64 %192, i64* %193, align 8
  br label %194

194:                                              ; preds = %186, %183, %59
  %195 = phi i1 [ false, %59 ], [ true, %183 ], [ true, %186 ]
  ret i1 %195
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN17GrBufferAllocPool16makeSpaceAtLeastEmmmP5sk_spIK8GrBufferEPmS5_(%class.GrBufferAllocPool*, i64, i64, i64, %class.sk_sp.152* nocapture, i64* nocapture, i64* nocapture) local_unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %0, i64 0, i32 2
  %9 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %0, i64 0, i32 2, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, 4294967294
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %49, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %8, i64 0, i32 0
  %15 = load %"struct.GrBufferAllocPool::BufferBlock"*, %"struct.GrBufferAllocPool::BufferBlock"** %14, align 8
  %16 = lshr i64 %10, 1
  %17 = and i64 %16, 2147483647
  %18 = add nsw i64 %17, -1
  %19 = getelementptr inbounds %"struct.GrBufferAllocPool::BufferBlock", %"struct.GrBufferAllocPool::BufferBlock"* %15, i64 %18, i32 1, i32 0
  %20 = load %class.GrBuffer*, %class.GrBuffer** %19, align 8
  %21 = bitcast %class.GrBuffer* %20 to i64 (%class.GrBuffer*)***
  %22 = load i64 (%class.GrBuffer*)**, i64 (%class.GrBuffer*)*** %21, align 8
  %23 = getelementptr inbounds i64 (%class.GrBuffer*)*, i64 (%class.GrBuffer*)** %22, i64 4
  %24 = load i64 (%class.GrBuffer*)*, i64 (%class.GrBuffer*)** %23, align 8
  %25 = tail call i64 %24(%class.GrBuffer* %20) #9
  %26 = load %"struct.GrBufferAllocPool::BufferBlock"*, %"struct.GrBufferAllocPool::BufferBlock"** %14, align 8
  %27 = load i64, i64* %9, align 8
  %28 = lshr i64 %27, 1
  %29 = and i64 %28, 2147483647
  %30 = add nsw i64 %29, -1
  %31 = getelementptr inbounds %"struct.GrBufferAllocPool::BufferBlock", %"struct.GrBufferAllocPool::BufferBlock"* %26, i64 %30, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %25, %32
  %34 = and i64 %27, 4294967294
  %35 = urem i64 %33, %3
  %36 = sub i64 %3, %35
  %37 = urem i64 %36, %3
  %38 = icmp eq i64 %34, 0
  br i1 %38, label %49, label %39

39:                                               ; preds = %13
  %40 = add i64 %37, %1
  %41 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %8, i64 0, i32 0
  %42 = load %"struct.GrBufferAllocPool::BufferBlock"*, %"struct.GrBufferAllocPool::BufferBlock"** %41, align 8
  %43 = lshr i64 %27, 1
  %44 = and i64 %43, 2147483647
  %45 = add nsw i64 %44, -1
  %46 = getelementptr inbounds %"struct.GrBufferAllocPool::BufferBlock", %"struct.GrBufferAllocPool::BufferBlock"* %42, i64 %45, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = icmp ugt i64 %40, %47
  br i1 %48, label %49, label %51

49:                                               ; preds = %7, %39, %13
  %50 = tail call zeroext i1 @_ZN17GrBufferAllocPool11createBlockEm(%class.GrBufferAllocPool* %0, i64 %2)
  br i1 %50, label %51, label %115

51:                                               ; preds = %49, %39
  %52 = phi i64 [ %33, %39 ], [ 0, %49 ]
  %53 = phi i64 [ %37, %39 ], [ 0, %49 ]
  %54 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %0, i64 0, i32 7
  %55 = load i8*, i8** %54, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %52
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %56, i8 0, i64 %53, i1 false)
  %57 = add i64 %53, %52
  %58 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %8, i64 0, i32 0
  %59 = load %"struct.GrBufferAllocPool::BufferBlock"*, %"struct.GrBufferAllocPool::BufferBlock"** %58, align 8
  %60 = load i64, i64* %9, align 8
  %61 = lshr i64 %60, 1
  %62 = and i64 %61, 2147483647
  %63 = add nsw i64 %62, -1
  %64 = getelementptr inbounds %"struct.GrBufferAllocPool::BufferBlock", %"struct.GrBufferAllocPool::BufferBlock"* %59, i64 %63, i32 0
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %65, %53
  store i64 %66, i64* %64, align 8
  %67 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %0, i64 0, i32 1
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, %53
  store i64 %69, i64* %67, align 8
  %70 = load %"struct.GrBufferAllocPool::BufferBlock"*, %"struct.GrBufferAllocPool::BufferBlock"** %58, align 8
  %71 = load i64, i64* %9, align 8
  %72 = lshr i64 %71, 1
  %73 = and i64 %72, 2147483647
  %74 = add nsw i64 %73, -1
  %75 = getelementptr inbounds %"struct.GrBufferAllocPool::BufferBlock", %"struct.GrBufferAllocPool::BufferBlock"* %70, i64 %74, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = and i64 %3, 4294967295
  %78 = urem i64 %76, %77
  %79 = sub i64 %76, %78
  store i64 %57, i64* %5, align 8
  %80 = load %"struct.GrBufferAllocPool::BufferBlock"*, %"struct.GrBufferAllocPool::BufferBlock"** %58, align 8
  %81 = load i64, i64* %9, align 8
  %82 = lshr i64 %81, 1
  %83 = and i64 %82, 2147483647
  %84 = add nsw i64 %83, -1
  %85 = getelementptr inbounds %"struct.GrBufferAllocPool::BufferBlock", %"struct.GrBufferAllocPool::BufferBlock"* %80, i64 %84, i32 1, i32 0
  %86 = load %class.GrBuffer*, %class.GrBuffer** %85, align 8
  %87 = icmp eq %class.GrBuffer* %86, null
  br i1 %87, label %93, label %88

88:                                               ; preds = %51
  %89 = bitcast %class.GrBuffer* %86 to void (%class.GrBuffer*)***
  %90 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %89, align 8
  %91 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %90, i64 2
  %92 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %91, align 8
  tail call void %92(%class.GrBuffer* nonnull %86) #9
  br label %93

93:                                               ; preds = %88, %51
  %94 = getelementptr inbounds %class.sk_sp.152, %class.sk_sp.152* %4, i64 0, i32 0
  %95 = load %class.GrBuffer*, %class.GrBuffer** %94, align 8
  store %class.GrBuffer* %86, %class.GrBuffer** %94, align 8
  %96 = icmp eq %class.GrBuffer* %95, null
  br i1 %96, label %102, label %97

97:                                               ; preds = %93
  %98 = bitcast %class.GrBuffer* %95 to void (%class.GrBuffer*)***
  %99 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %98, align 8
  %100 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %99, i64 3
  %101 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %100, align 8
  tail call void %101(%class.GrBuffer* nonnull %95) #9
  br label %102

102:                                              ; preds = %93, %97
  store i64 %79, i64* %6, align 8
  %103 = load %"struct.GrBufferAllocPool::BufferBlock"*, %"struct.GrBufferAllocPool::BufferBlock"** %58, align 8
  %104 = load i64, i64* %9, align 8
  %105 = lshr i64 %104, 1
  %106 = and i64 %105, 2147483647
  %107 = add nsw i64 %106, -1
  %108 = getelementptr inbounds %"struct.GrBufferAllocPool::BufferBlock", %"struct.GrBufferAllocPool::BufferBlock"* %103, i64 %107, i32 0
  %109 = load i64, i64* %108, align 8
  %110 = sub i64 %109, %79
  store i64 %110, i64* %108, align 8
  %111 = load i64, i64* %67, align 8
  %112 = add i64 %111, %79
  store i64 %112, i64* %67, align 8
  %113 = load i8*, i8** %54, align 8
  %114 = getelementptr inbounds i8, i8* %113, i64 %57
  br label %115

115:                                              ; preds = %49, %102
  %116 = phi i8* [ %114, %102 ], [ null, %49 ]
  ret i8* %116
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrBufferAllocPool7putBackEm(%class.GrBufferAllocPool*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca i8*, align 8
  %4 = alloca [1 x i8], align 1
  %5 = alloca [1 x i64], align 8
  %6 = icmp eq i64 %1, 0
  br i1 %6, label %118, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %0, i64 0, i32 2
  %9 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %8, i64 0, i32 0
  %10 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %0, i64 0, i32 2, i32 1
  %11 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %0, i64 0, i32 1
  %12 = bitcast i8** %3 to i8*
  %13 = getelementptr inbounds [1 x i8], [1 x i8]* %4, i64 0, i64 0
  %14 = bitcast [1 x i64]* %5 to i8*
  %15 = getelementptr inbounds [1 x i64], [1 x i64]* %5, i64 0, i64 0
  %16 = bitcast [1 x i64]* %5 to double*
  %17 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %0, i64 0, i32 7
  br label %18

18:                                               ; preds = %7, %116
  %19 = phi i64 [ %1, %7 ], [ %37, %116 ]
  %20 = load %"struct.GrBufferAllocPool::BufferBlock"*, %"struct.GrBufferAllocPool::BufferBlock"** %9, align 8
  %21 = load i64, i64* %10, align 8
  %22 = lshr i64 %21, 1
  %23 = and i64 %22, 2147483647
  %24 = add nsw i64 %23, -1
  %25 = getelementptr inbounds %"struct.GrBufferAllocPool::BufferBlock", %"struct.GrBufferAllocPool::BufferBlock"* %20, i64 %24, i32 1, i32 0
  %26 = load %class.GrBuffer*, %class.GrBuffer** %25, align 8
  %27 = bitcast %class.GrBuffer* %26 to i64 (%class.GrBuffer*)***
  %28 = load i64 (%class.GrBuffer*)**, i64 (%class.GrBuffer*)*** %27, align 8
  %29 = getelementptr inbounds i64 (%class.GrBuffer*)*, i64 (%class.GrBuffer*)** %28, i64 4
  %30 = load i64 (%class.GrBuffer*)*, i64 (%class.GrBuffer*)** %29, align 8
  %31 = call i64 %30(%class.GrBuffer* %26) #9
  %32 = getelementptr inbounds %"struct.GrBufferAllocPool::BufferBlock", %"struct.GrBufferAllocPool::BufferBlock"* %20, i64 %24, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %31, %33
  %35 = icmp ult i64 %19, %34
  br i1 %35, label %112, label %36

36:                                               ; preds = %18
  %37 = sub i64 %19, %34
  %38 = load i64, i64* %11, align 8
  %39 = sub i64 %38, %34
  store i64 %39, i64* %11, align 8
  %40 = load %class.GrBuffer*, %class.GrBuffer** %25, align 8
  %41 = bitcast %class.GrBuffer* %40 to i1 (%class.GrBuffer*)***
  %42 = load i1 (%class.GrBuffer*)**, i1 (%class.GrBuffer*)*** %41, align 8
  %43 = getelementptr inbounds i1 (%class.GrBuffer*)*, i1 (%class.GrBuffer*)** %42, i64 5
  %44 = load i1 (%class.GrBuffer*)*, i1 (%class.GrBuffer*)** %43, align 8
  %45 = call zeroext i1 %44(%class.GrBuffer* %40) #9
  br i1 %45, label %93, label %46

46:                                               ; preds = %36
  %47 = icmp eq %class.GrBuffer* %40, null
  %48 = getelementptr inbounds %class.GrBuffer, %class.GrBuffer* %40, i64 -19
  %49 = bitcast %class.GrBuffer* %48 to %class.GrGpuBuffer*
  %50 = select i1 %47, %class.GrGpuBuffer* null, %class.GrGpuBuffer* %49
  %51 = call zeroext i1 @_ZNK11GrGpuBuffer8isMappedEv(%class.GrGpuBuffer* %50) #9
  br i1 %51, label %52, label %93

52:                                               ; preds = %46
  %53 = load atomic i64, i64* @_ZZN17GrBufferAllocPool7putBackEmE28trace_event_unique_atomic301.0.0 monotonic, align 8
  %54 = inttoptr i64 %53 to i8*
  %55 = icmp eq i64 %53, 0
  br i1 %55, label %56, label %64

56:                                               ; preds = %52
  %57 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #9
  %58 = bitcast %class.SkEventTracer* %57 to i8* (%class.SkEventTracer*, i8*)***
  %59 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %58, align 8
  %60 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %59, i64 2
  %61 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %60, align 8
  %62 = call i8* %61(%class.SkEventTracer* %57, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0)) #9
  %63 = ptrtoint i8* %62 to i64
  store atomic i64 %63, i64* @_ZZN17GrBufferAllocPool7putBackEmE28trace_event_unique_atomic301.0.0 monotonic, align 8
  br label %64

64:                                               ; preds = %52, %56
  %65 = phi i8* [ %54, %52 ], [ %62, %56 ]
  %66 = load i8, i8* %65, align 1
  %67 = and i8 %66, 5
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %87, label %69

69:                                               ; preds = %64
  %70 = load i64, i64* %32, align 8
  %71 = uitofp i64 %70 to float
  %72 = load %class.GrBuffer*, %class.GrBuffer** %25, align 8
  %73 = bitcast %class.GrBuffer* %72 to i64 (%class.GrBuffer*)***
  %74 = load i64 (%class.GrBuffer*)**, i64 (%class.GrBuffer*)*** %73, align 8
  %75 = getelementptr inbounds i64 (%class.GrBuffer*)*, i64 (%class.GrBuffer*)** %74, i64 4
  %76 = load i64 (%class.GrBuffer*)*, i64 (%class.GrBuffer*)** %75, align 8
  %77 = call i64 %76(%class.GrBuffer* %72) #9
  %78 = uitofp i64 %77 to float
  %79 = fdiv float %71, %78
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12)
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8** %3, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13) #9
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9
  %80 = fpext float %79 to double
  store i8 4, i8* %13, align 1
  store double %80, double* %16, align 8
  %81 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #9
  %82 = bitcast %class.SkEventTracer* %81 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %83 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %82, align 8
  %84 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %83, i64 4
  %85 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %84, align 8
  %86 = call i64 %85(%class.SkEventTracer* %81, i8 signext 73, i8* %65, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0), i64 0, i32 1, i8** nonnull %3, i8* nonnull %13, i64* nonnull %15, i8 zeroext 16) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12)
  br label %87

87:                                               ; preds = %64, %69
  %88 = load %class.GrBuffer*, %class.GrBuffer** %25, align 8
  %89 = icmp eq %class.GrBuffer* %88, null
  %90 = getelementptr inbounds %class.GrBuffer, %class.GrBuffer* %88, i64 -19
  %91 = bitcast %class.GrBuffer* %90 to %class.GrGpuBuffer*
  %92 = select i1 %89, %class.GrGpuBuffer* null, %class.GrGpuBuffer* %91
  call void @_ZN11GrGpuBuffer5unmapEv(%class.GrGpuBuffer* %92) #9
  br label %93

93:                                               ; preds = %87, %46, %36
  %94 = load i64, i64* %10, align 8
  %95 = lshr i64 %94, 1
  %96 = and i64 %95, 2147483647
  %97 = add nuw nsw i64 %96, 4294967295
  %98 = shl nuw nsw i64 %97, 1
  %99 = and i64 %98, 4294967294
  %100 = and i64 %94, -4294967295
  %101 = or i64 %99, %100
  store i64 %101, i64* %10, align 8
  %102 = load %"struct.GrBufferAllocPool::BufferBlock"*, %"struct.GrBufferAllocPool::BufferBlock"** %9, align 8
  %103 = and i64 %97, 2147483647
  %104 = getelementptr inbounds %"struct.GrBufferAllocPool::BufferBlock", %"struct.GrBufferAllocPool::BufferBlock"* %102, i64 %103, i32 1, i32 0
  %105 = load %class.GrBuffer*, %class.GrBuffer** %104, align 8
  %106 = icmp eq %class.GrBuffer* %105, null
  br i1 %106, label %116, label %107

107:                                              ; preds = %93
  %108 = bitcast %class.GrBuffer* %105 to void (%class.GrBuffer*)***
  %109 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %108, align 8
  %110 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %109, i64 3
  %111 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %110, align 8
  call void %111(%class.GrBuffer* nonnull %105) #9
  br label %116

112:                                              ; preds = %18
  %113 = add i64 %33, %19
  store i64 %113, i64* %32, align 8
  %114 = load i64, i64* %11, align 8
  %115 = sub i64 %114, %19
  store i64 %115, i64* %11, align 8
  br label %118

116:                                              ; preds = %107, %93
  call void @_ZN8SkTArrayIN17GrBufferAllocPool11BufferBlockELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray* %8, i32 0, i32 2) #9
  store i8* null, i8** %17, align 8
  %117 = icmp eq i64 %37, 0
  br i1 %117, label %118, label %18

118:                                              ; preds = %116, %2, %112
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrBufferAllocPool9getBufferEm(%class.sk_sp.3* noalias nocapture sret, %class.GrBufferAllocPool* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp.0, align 8
  %5 = alloca %class.sk_sp.153, align 8
  %6 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %1, i64 0, i32 5
  %7 = load %class.GrGpu*, %class.GrGpu** %6, align 8
  %8 = getelementptr inbounds %class.GrGpu, %class.GrGpu* %7, i64 0, i32 2, i32 0
  %9 = load %class.GrCaps*, %class.GrCaps** %8, align 8
  %10 = getelementptr inbounds %class.GrGpu, %class.GrGpu* %7, i64 0, i32 5
  %11 = load %class.GrDirectContext*, %class.GrDirectContext** %10, align 8
  %12 = getelementptr inbounds %class.GrDirectContext, %class.GrDirectContext* %11, i64 0, i32 6, i32 0, i32 0, i32 0
  %13 = load %class.GrResourceProvider*, %class.GrResourceProvider** %12, align 8
  %14 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %9, i64 0, i32 3
  %15 = bitcast i48* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, 65536
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %19, label %26

19:                                               ; preds = %3
  %20 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %1, i64 0, i32 6
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 2
  %23 = and i64 %16, 2048
  %24 = icmp ne i64 %23, 0
  %25 = and i1 %24, %22
  br i1 %25, label %26, label %56

26:                                               ; preds = %3, %19
  %27 = bitcast %class.sk_sp.0* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #9
  %28 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %1, i64 0, i32 3, i32 0
  %29 = load %"class.GrBufferAllocPool::CpuBufferCache"*, %"class.GrBufferAllocPool::CpuBufferCache"** %28, align 8
  %30 = icmp eq %"class.GrBufferAllocPool::CpuBufferCache"* %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %26
  %32 = and i64 %16, 524288
  %33 = icmp ne i64 %32, 0
  call void @_ZN17GrBufferAllocPool14CpuBufferCache10makeBufferEmb(%class.sk_sp.0* nonnull sret %4, %"class.GrBufferAllocPool::CpuBufferCache"* nonnull %29, i64 %2, i1 zeroext %33)
  %34 = getelementptr inbounds %class.sk_sp.0, %class.sk_sp.0* %4, i64 0, i32 0
  %35 = load %class.GrCpuBuffer*, %class.GrCpuBuffer** %34, align 8
  br label %52

36:                                               ; preds = %26
  %37 = add i64 %2, 32
  %38 = icmp ugt i64 %37, 31
  br i1 %38, label %40, label %39

39:                                               ; preds = %36
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3, i64 0, i64 0), i32 22, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4, i64 0, i64 0)) #10, !noalias !12
  unreachable

40:                                               ; preds = %36
  %41 = tail call i8* @_Znwm(i64 %37) #9, !noalias !12
  %42 = getelementptr inbounds i8, i8* %41, i64 32
  %43 = getelementptr inbounds i8, i8* %41, i64 8
  %44 = bitcast i8* %43 to i32*
  store i32 1, i32* %44, align 4, !noalias !12
  %45 = bitcast i8* %41 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV11GrCpuBuffer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %45, align 8, !noalias !12
  %46 = getelementptr inbounds i8, i8* %41, i64 16
  %47 = bitcast i8* %46 to i8**
  store i8* %42, i8** %47, align 8, !noalias !12
  %48 = getelementptr inbounds i8, i8* %41, i64 24
  %49 = bitcast i8* %48 to i64*
  store i64 %2, i64* %49, align 8, !noalias !12
  %50 = bitcast %class.sk_sp.0* %4 to i8**
  store i8* %41, i8** %50, align 8, !alias.scope !12
  %51 = bitcast i8* %41 to %class.GrCpuBuffer*
  br label %52

52:                                               ; preds = %31, %40
  %53 = phi %class.GrCpuBuffer* [ %35, %31 ], [ %51, %40 ]
  %54 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %0, i64 0, i32 0
  %55 = getelementptr inbounds %class.GrCpuBuffer, %class.GrCpuBuffer* %53, i64 0, i32 0
  store %class.GrBuffer* %55, %class.GrBuffer** %54, align 8
  br label %64

56:                                               ; preds = %19
  %57 = bitcast %class.sk_sp.153* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #9
  call void @_ZN18GrResourceProvider12createBufferEm15GrGpuBufferType15GrAccessPatternPKv(%class.sk_sp.153* nonnull sret %5, %class.GrResourceProvider* %13, i64 %2, i32 %21, i32 0, i8* null) #9
  %58 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %0, i64 0, i32 0
  %59 = getelementptr inbounds %class.sk_sp.153, %class.sk_sp.153* %5, i64 0, i32 0
  %60 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %59, align 8
  %61 = icmp eq %class.GrGpuBuffer* %60, null
  %62 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %60, i64 0, i32 1
  %63 = select i1 %61, %class.GrBuffer* null, %class.GrBuffer* %62
  store %class.GrBuffer* %63, %class.GrBuffer** %58, align 8
  br label %64

64:                                               ; preds = %56, %52
  %65 = phi i8* [ %57, %56 ], [ %27, %52 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #9
  ret void
}

declare i8* @_ZN11GrGpuBuffer3mapEv(%class.GrGpuBuffer*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare zeroext i1 @_ZN11GrGpuBuffer10updateDataEPKvm(%class.GrGpuBuffer*, i8*, i64) local_unnamed_addr #3

declare void @_ZN18GrResourceProvider12createBufferEm15GrGpuBufferType15GrAccessPatternPKv(%class.sk_sp.153* sret, %class.GrResourceProvider*, i64, i32, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23GrVertexBufferAllocPoolC2EP5GrGpu5sk_spIN17GrBufferAllocPool14CpuBufferCacheEE(%class.GrVertexBufferAllocPool*, %class.GrGpu*, %class.sk_sp* nocapture) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %2, i64 0, i32 0
  %5 = bitcast %class.sk_sp* %2 to i64*
  %6 = load i64, i64* %5, align 8
  store %"class.GrBufferAllocPool::CpuBufferCache"* null, %"class.GrBufferAllocPool::CpuBufferCache"** %4, align 8
  %7 = getelementptr inbounds %class.GrVertexBufferAllocPool, %class.GrVertexBufferAllocPool* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV17GrBufferAllocPool, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %class.GrVertexBufferAllocPool, %class.GrVertexBufferAllocPool* %0, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %class.GrVertexBufferAllocPool, %class.GrVertexBufferAllocPool* %0, i64 0, i32 0, i32 2
  %10 = getelementptr inbounds %class.GrVertexBufferAllocPool, %class.GrVertexBufferAllocPool* %0, i64 0, i32 0, i32 2, i32 1
  %11 = bitcast i64* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #9
  store i64 1, i64* %10, align 8
  tail call void @_ZN8SkTArrayIN17GrBufferAllocPool11BufferBlockELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray* %9, i32 8, i32 0) #9
  %12 = load i64, i64* %10, align 8
  %13 = shl i64 %12, 32
  %14 = and i64 %13, 4294967296
  %15 = and i64 %12, -4294967297
  %16 = or i64 %14, %15
  store i64 %16, i64* %10, align 8
  %17 = getelementptr inbounds %class.GrVertexBufferAllocPool, %class.GrVertexBufferAllocPool* %0, i64 0, i32 0, i32 3
  %18 = bitcast %class.sk_sp* %17 to i64*
  store i64 %6, i64* %18, align 8
  %19 = getelementptr inbounds %class.GrVertexBufferAllocPool, %class.GrVertexBufferAllocPool* %0, i64 0, i32 0, i32 4, i32 0
  store %class.GrCpuBuffer* null, %class.GrCpuBuffer** %19, align 8
  %20 = getelementptr inbounds %class.GrVertexBufferAllocPool, %class.GrVertexBufferAllocPool* %0, i64 0, i32 0, i32 5
  store %class.GrGpu* %1, %class.GrGpu** %20, align 8
  %21 = getelementptr inbounds %class.GrVertexBufferAllocPool, %class.GrVertexBufferAllocPool* %0, i64 0, i32 0, i32 6
  store i32 0, i32* %21, align 8
  %22 = getelementptr inbounds %class.GrVertexBufferAllocPool, %class.GrVertexBufferAllocPool* %0, i64 0, i32 0, i32 7
  store i8* null, i8** %22, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV23GrVertexBufferAllocPool, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN23GrVertexBufferAllocPool9makeSpaceEmiP5sk_spIK8GrBufferEPi(%class.GrVertexBufferAllocPool*, i64, i32, %class.sk_sp.152* nocapture, i32* nocapture) local_unnamed_addr #0 align 2 {
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #9
  store i64 0, i64* %6, align 8
  %8 = getelementptr inbounds %class.GrVertexBufferAllocPool, %class.GrVertexBufferAllocPool* %0, i64 0, i32 0
  %9 = sext i32 %2 to i64
  %10 = tail call i64 @_ZN10SkSafeMath3MulEmm(i64 %1, i64 %9) #9
  %11 = call i8* @_ZN17GrBufferAllocPool9makeSpaceEmmP5sk_spIK8GrBufferEPm(%class.GrBufferAllocPool* %8, i64 %10, i64 %1, %class.sk_sp.152* %3, i64* nonnull %6)
  %12 = load i64, i64* %6, align 8
  %13 = udiv i64 %12, %1
  %14 = trunc i64 %13 to i32
  store i32 %14, i32* %4, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #9
  ret i8* %11
}

declare i64 @_ZN10SkSafeMath3MulEmm(i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN23GrVertexBufferAllocPool16makeSpaceAtLeastEmiiP5sk_spIK8GrBufferEPiS5_(%class.GrVertexBufferAllocPool*, i64, i32, i32, %class.sk_sp.152* nocapture, i32* nocapture, i32* nocapture) local_unnamed_addr #0 align 2 {
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #9
  store i64 0, i64* %8, align 8
  %11 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #9
  store i64 0, i64* %9, align 8
  %12 = getelementptr inbounds %class.GrVertexBufferAllocPool, %class.GrVertexBufferAllocPool* %0, i64 0, i32 0
  %13 = sext i32 %2 to i64
  %14 = tail call i64 @_ZN10SkSafeMath3MulEmm(i64 %1, i64 %13) #9
  %15 = sext i32 %3 to i64
  %16 = tail call i64 @_ZN10SkSafeMath3MulEmm(i64 %1, i64 %15) #9
  %17 = call i8* @_ZN17GrBufferAllocPool16makeSpaceAtLeastEmmmP5sk_spIK8GrBufferEPmS5_(%class.GrBufferAllocPool* %12, i64 %14, i64 %16, i64 %1, %class.sk_sp.152* %4, i64* nonnull %8, i64* nonnull %9)
  %18 = load i64, i64* %8, align 8
  %19 = udiv i64 %18, %1
  %20 = trunc i64 %19 to i32
  store i32 %20, i32* %5, align 4
  %21 = load i64, i64* %9, align 8
  %22 = udiv i64 %21, %1
  %23 = trunc i64 %22 to i32
  store i32 %23, i32* %6, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #9
  ret i8* %17
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22GrIndexBufferAllocPoolC2EP5GrGpu5sk_spIN17GrBufferAllocPool14CpuBufferCacheEE(%class.GrIndexBufferAllocPool*, %class.GrGpu*, %class.sk_sp* nocapture) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %2, i64 0, i32 0
  %5 = bitcast %class.sk_sp* %2 to i64*
  %6 = load i64, i64* %5, align 8
  store %"class.GrBufferAllocPool::CpuBufferCache"* null, %"class.GrBufferAllocPool::CpuBufferCache"** %4, align 8
  %7 = getelementptr inbounds %class.GrIndexBufferAllocPool, %class.GrIndexBufferAllocPool* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV17GrBufferAllocPool, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %class.GrIndexBufferAllocPool, %class.GrIndexBufferAllocPool* %0, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %class.GrIndexBufferAllocPool, %class.GrIndexBufferAllocPool* %0, i64 0, i32 0, i32 2
  %10 = getelementptr inbounds %class.GrIndexBufferAllocPool, %class.GrIndexBufferAllocPool* %0, i64 0, i32 0, i32 2, i32 1
  %11 = bitcast i64* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #9
  store i64 1, i64* %10, align 8
  tail call void @_ZN8SkTArrayIN17GrBufferAllocPool11BufferBlockELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray* %9, i32 8, i32 0) #9
  %12 = load i64, i64* %10, align 8
  %13 = shl i64 %12, 32
  %14 = and i64 %13, 4294967296
  %15 = and i64 %12, -4294967297
  %16 = or i64 %14, %15
  store i64 %16, i64* %10, align 8
  %17 = getelementptr inbounds %class.GrIndexBufferAllocPool, %class.GrIndexBufferAllocPool* %0, i64 0, i32 0, i32 3
  %18 = bitcast %class.sk_sp* %17 to i64*
  store i64 %6, i64* %18, align 8
  %19 = getelementptr inbounds %class.GrIndexBufferAllocPool, %class.GrIndexBufferAllocPool* %0, i64 0, i32 0, i32 4, i32 0
  store %class.GrCpuBuffer* null, %class.GrCpuBuffer** %19, align 8
  %20 = getelementptr inbounds %class.GrIndexBufferAllocPool, %class.GrIndexBufferAllocPool* %0, i64 0, i32 0, i32 5
  store %class.GrGpu* %1, %class.GrGpu** %20, align 8
  %21 = getelementptr inbounds %class.GrIndexBufferAllocPool, %class.GrIndexBufferAllocPool* %0, i64 0, i32 0, i32 6
  store i32 1, i32* %21, align 8
  %22 = getelementptr inbounds %class.GrIndexBufferAllocPool, %class.GrIndexBufferAllocPool* %0, i64 0, i32 0, i32 7
  store i8* null, i8** %22, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV22GrIndexBufferAllocPool, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN22GrIndexBufferAllocPool9makeSpaceEiP5sk_spIK8GrBufferEPi(%class.GrIndexBufferAllocPool*, i32, %class.sk_sp.152* nocapture, i32* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  store i64 0, i64* %5, align 8
  %7 = getelementptr inbounds %class.GrIndexBufferAllocPool, %class.GrIndexBufferAllocPool* %0, i64 0, i32 0
  %8 = sext i32 %1 to i64
  %9 = tail call i64 @_ZN10SkSafeMath3MulEmm(i64 %8, i64 2) #9
  %10 = call i8* @_ZN17GrBufferAllocPool9makeSpaceEmmP5sk_spIK8GrBufferEPm(%class.GrBufferAllocPool* %7, i64 %9, i64 2, %class.sk_sp.152* %2, i64* nonnull %5)
  %11 = load i64, i64* %5, align 8
  %12 = lshr i64 %11, 1
  %13 = trunc i64 %12 to i32
  store i32 %13, i32* %3, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  ret i8* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN22GrIndexBufferAllocPool16makeSpaceAtLeastEiiP5sk_spIK8GrBufferEPiS5_(%class.GrIndexBufferAllocPool*, i32, i32, %class.sk_sp.152* nocapture, i32* nocapture, i32* nocapture) local_unnamed_addr #0 align 2 {
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  store i64 0, i64* %7, align 8
  %10 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #9
  store i64 0, i64* %8, align 8
  %11 = getelementptr inbounds %class.GrIndexBufferAllocPool, %class.GrIndexBufferAllocPool* %0, i64 0, i32 0
  %12 = sext i32 %1 to i64
  %13 = tail call i64 @_ZN10SkSafeMath3MulEmm(i64 %12, i64 2) #9
  %14 = sext i32 %2 to i64
  %15 = tail call i64 @_ZN10SkSafeMath3MulEmm(i64 %14, i64 2) #9
  %16 = call i8* @_ZN17GrBufferAllocPool16makeSpaceAtLeastEmmmP5sk_spIK8GrBufferEPmS5_(%class.GrBufferAllocPool* %11, i64 %13, i64 %15, i64 2, %class.sk_sp.152* %3, i64* nonnull %7, i64* nonnull %8)
  %17 = load i64, i64* %7, align 8
  %18 = lshr i64 %17, 1
  %19 = trunc i64 %18 to i32
  store i32 %19, i32* %4, align 4
  %20 = load i64, i64* %8, align 8
  %21 = lshr i64 %20, 1
  %22 = trunc i64 %21 to i32
  store i32 %22, i32* %5, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  ret i8* %16
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrVertexBufferAllocPoolD0Ev(%class.GrVertexBufferAllocPool*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.GrVertexBufferAllocPool, %class.GrVertexBufferAllocPool* %0, i64 0, i32 0
  tail call void @_ZN17GrBufferAllocPoolD2Ev(%class.GrBufferAllocPool* %2) #9
  %3 = bitcast %class.GrVertexBufferAllocPool* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrBufferAllocPoolD2Ev(%class.GrBufferAllocPool*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV17GrBufferAllocPool, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  tail call void @_ZN17GrBufferAllocPool12deleteBlocksEv(%class.GrBufferAllocPool* %0)
  %3 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %0, i64 0, i32 4, i32 0
  %4 = load %class.GrCpuBuffer*, %class.GrCpuBuffer** %3, align 8
  %5 = icmp eq %class.GrCpuBuffer* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.GrCpuBuffer, %class.GrCpuBuffer* %4, i64 0, i32 1
  %8 = getelementptr inbounds %class.GrNonAtomicRef.1, %class.GrNonAtomicRef.1* %7, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = add nsw i32 %9, -1
  store i32 %10, i32* %8, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %19

12:                                               ; preds = %6
  %13 = getelementptr inbounds %class.GrNonAtomicRef.1, %class.GrNonAtomicRef.1* %7, i64 -2
  %14 = bitcast %class.GrNonAtomicRef.1* %13 to %class.GrCpuBuffer*
  %15 = bitcast %class.GrNonAtomicRef.1* %13 to void (%class.GrCpuBuffer*)***
  %16 = load void (%class.GrCpuBuffer*)**, void (%class.GrCpuBuffer*)*** %15, align 8
  %17 = getelementptr inbounds void (%class.GrCpuBuffer*)*, void (%class.GrCpuBuffer*)** %16, i64 1
  %18 = load void (%class.GrCpuBuffer*)*, void (%class.GrCpuBuffer*)** %17, align 8
  tail call void %18(%class.GrCpuBuffer* nonnull %14) #9
  br label %19

19:                                               ; preds = %1, %6, %12
  %20 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %0, i64 0, i32 3, i32 0
  %21 = load %"class.GrBufferAllocPool::CpuBufferCache"*, %"class.GrBufferAllocPool::CpuBufferCache"** %20, align 8
  %22 = icmp eq %"class.GrBufferAllocPool::CpuBufferCache"* %21, null
  br i1 %22, label %65, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.GrBufferAllocPool::CpuBufferCache", %"class.GrBufferAllocPool::CpuBufferCache"* %21, i64 0, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = add nsw i32 %25, -1
  store i32 %26, i32* %24, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %65

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.GrBufferAllocPool::CpuBufferCache", %"class.GrBufferAllocPool::CpuBufferCache"* %21, i64 0, i32 0
  %30 = getelementptr inbounds %class.GrNonAtomicRef, %class.GrNonAtomicRef* %29, i64 2
  %31 = bitcast %class.GrNonAtomicRef* %30 to %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"**
  %32 = load %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"*, %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"** %31, align 8
  store %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* null, %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"** %31, align 8
  %33 = icmp eq %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* %32, null
  br i1 %33, label %63, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"struct.GrBufferAllocPool::CpuBufferCache::Buffer", %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* %32, i64 -1, i32 1
  %36 = bitcast i8* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %62, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"struct.GrBufferAllocPool::CpuBufferCache::Buffer", %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* %32, i64 %37
  br label %41

41:                                               ; preds = %60, %39
  %42 = phi %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* [ %43, %60 ], [ %40, %39 ]
  %43 = getelementptr inbounds %"struct.GrBufferAllocPool::CpuBufferCache::Buffer", %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* %42, i64 -1
  %44 = getelementptr inbounds %"struct.GrBufferAllocPool::CpuBufferCache::Buffer", %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* %43, i64 0, i32 0, i32 0
  %45 = load %class.GrCpuBuffer*, %class.GrCpuBuffer** %44, align 8
  %46 = icmp eq %class.GrCpuBuffer* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %class.GrCpuBuffer, %class.GrCpuBuffer* %45, i64 0, i32 1
  %49 = getelementptr inbounds %class.GrNonAtomicRef.1, %class.GrNonAtomicRef.1* %48, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = add nsw i32 %50, -1
  store i32 %51, i32* %49, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %60

53:                                               ; preds = %47
  %54 = getelementptr inbounds %class.GrNonAtomicRef.1, %class.GrNonAtomicRef.1* %48, i64 -2
  %55 = bitcast %class.GrNonAtomicRef.1* %54 to %class.GrCpuBuffer*
  %56 = bitcast %class.GrNonAtomicRef.1* %54 to void (%class.GrCpuBuffer*)***
  %57 = load void (%class.GrCpuBuffer*)**, void (%class.GrCpuBuffer*)*** %56, align 8
  %58 = getelementptr inbounds void (%class.GrCpuBuffer*)*, void (%class.GrCpuBuffer*)** %57, i64 1
  %59 = load void (%class.GrCpuBuffer*)*, void (%class.GrCpuBuffer*)** %58, align 8
  tail call void %59(%class.GrCpuBuffer* nonnull %55) #9
  br label %60

60:                                               ; preds = %53, %47, %41
  %61 = icmp eq %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* %43, %32
  br i1 %61, label %62, label %41

62:                                               ; preds = %60, %34
  tail call void @_ZdaPv(i8* %35) #8
  br label %63

63:                                               ; preds = %62, %28
  %64 = bitcast %"class.GrBufferAllocPool::CpuBufferCache"* %21 to i8*
  tail call void @_ZdlPv(i8* %64) #8
  br label %65

65:                                               ; preds = %19, %23, %63
  %66 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %0, i64 0, i32 2
  %67 = getelementptr inbounds %class.GrBufferAllocPool, %class.GrBufferAllocPool* %0, i64 0, i32 2, i32 1
  %68 = load i64, i64* %67, align 8
  %69 = and i64 %68, 4294967294
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %73, label %71

71:                                               ; preds = %65
  %72 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %66, i64 0, i32 0
  br label %77

73:                                               ; preds = %90, %65
  %74 = phi i64 [ %68, %65 ], [ %91, %90 ]
  %75 = and i64 %74, 1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %99, label %96

77:                                               ; preds = %90, %71
  %78 = phi i64 [ %68, %71 ], [ %91, %90 ]
  %79 = phi i64 [ 0, %71 ], [ %92, %90 ]
  %80 = load %"struct.GrBufferAllocPool::BufferBlock"*, %"struct.GrBufferAllocPool::BufferBlock"** %72, align 8
  %81 = getelementptr inbounds %"struct.GrBufferAllocPool::BufferBlock", %"struct.GrBufferAllocPool::BufferBlock"* %80, i64 %79, i32 1, i32 0
  %82 = load %class.GrBuffer*, %class.GrBuffer** %81, align 8
  %83 = icmp eq %class.GrBuffer* %82, null
  br i1 %83, label %90, label %84

84:                                               ; preds = %77
  %85 = bitcast %class.GrBuffer* %82 to void (%class.GrBuffer*)***
  %86 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %85, align 8
  %87 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %86, i64 3
  %88 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %87, align 8
  tail call void %88(%class.GrBuffer* nonnull %82) #9
  %89 = load i64, i64* %67, align 8
  br label %90

90:                                               ; preds = %84, %77
  %91 = phi i64 [ %78, %77 ], [ %89, %84 ]
  %92 = add nuw nsw i64 %79, 1
  %93 = lshr i64 %91, 1
  %94 = and i64 %93, 2147483647
  %95 = icmp ult i64 %92, %94
  br i1 %95, label %77, label %73

96:                                               ; preds = %73
  %97 = bitcast %class.SkTArray* %66 to i8**
  %98 = load i8*, i8** %97, align 8
  tail call void @_Z7sk_freePv(i8* %98) #9
  br label %99

99:                                               ; preds = %73, %96
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN22GrIndexBufferAllocPoolD0Ev(%class.GrIndexBufferAllocPool*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.GrIndexBufferAllocPool, %class.GrIndexBufferAllocPool* %0, i64 0, i32 0
  tail call void @_ZN17GrBufferAllocPoolD2Ev(%class.GrBufferAllocPool* %2) #9
  %3 = bitcast %class.GrIndexBufferAllocPool* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #8
  ret void
}

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8GrBufferD2Ev(%class.GrBuffer*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11GrCpuBufferD0Ev(%class.GrCpuBuffer*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %class.GrCpuBuffer* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK11GrCpuBuffer3refEv(%class.GrCpuBuffer*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrCpuBuffer, %class.GrCpuBuffer* %0, i64 0, i32 1, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = add nsw i32 %3, 1
  store i32 %4, i32* %2, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK11GrCpuBuffer5unrefEv(%class.GrCpuBuffer*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrCpuBuffer, %class.GrCpuBuffer* %0, i64 0, i32 1
  %3 = getelementptr inbounds %class.GrNonAtomicRef.1, %class.GrNonAtomicRef.1* %2, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = add nsw i32 %4, -1
  store i32 %5, i32* %3, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %14

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.GrNonAtomicRef.1, %class.GrNonAtomicRef.1* %2, i64 -2
  %9 = bitcast %class.GrNonAtomicRef.1* %8 to %class.GrCpuBuffer*
  %10 = bitcast %class.GrNonAtomicRef.1* %8 to void (%class.GrCpuBuffer*)***
  %11 = load void (%class.GrCpuBuffer*)**, void (%class.GrCpuBuffer*)*** %10, align 8
  %12 = getelementptr inbounds void (%class.GrCpuBuffer*)*, void (%class.GrCpuBuffer*)** %11, i64 1
  %13 = load void (%class.GrCpuBuffer*)*, void (%class.GrCpuBuffer*)** %12, align 8
  tail call void %13(%class.GrCpuBuffer* nonnull %9) #9
  br label %14

14:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK11GrCpuBuffer11isCpuBufferEv(%class.GrCpuBuffer*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #1

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIN17GrBufferAllocPool11BufferBlockELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %91

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %91, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 16) #9
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %79, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %73, %48
  %51 = phi i64 [ 0, %48 ], [ %74, %73 ]
  %52 = shl nuw nsw i64 %51, 4
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %"struct.GrBufferAllocPool::BufferBlock"*, %"struct.GrBufferAllocPool::BufferBlock"** %49, align 8
  %55 = bitcast i8* %53 to i64*
  %56 = getelementptr inbounds %"struct.GrBufferAllocPool::BufferBlock", %"struct.GrBufferAllocPool::BufferBlock"* %54, i64 %51, i32 0
  %57 = load i64, i64* %56, align 8
  store i64 %57, i64* %55, align 8
  %58 = getelementptr inbounds i8, i8* %53, i64 8
  %59 = getelementptr inbounds %"struct.GrBufferAllocPool::BufferBlock", %"struct.GrBufferAllocPool::BufferBlock"* %54, i64 %51, i32 1
  %60 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %59, i64 0, i32 0
  %61 = bitcast %class.sk_sp.3* %59 to i64*
  %62 = load i64, i64* %61, align 8
  store %class.GrBuffer* null, %class.GrBuffer** %60, align 8
  %63 = bitcast i8* %58 to i64*
  store i64 %62, i64* %63, align 8
  %64 = load %"struct.GrBufferAllocPool::BufferBlock"*, %"struct.GrBufferAllocPool::BufferBlock"** %49, align 8
  %65 = getelementptr inbounds %"struct.GrBufferAllocPool::BufferBlock", %"struct.GrBufferAllocPool::BufferBlock"* %64, i64 %51, i32 1, i32 0
  %66 = load %class.GrBuffer*, %class.GrBuffer** %65, align 8
  %67 = icmp eq %class.GrBuffer* %66, null
  br i1 %67, label %73, label %68

68:                                               ; preds = %50
  %69 = bitcast %class.GrBuffer* %66 to void (%class.GrBuffer*)***
  %70 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %69, align 8
  %71 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %70, i64 3
  %72 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %71, align 8
  tail call void %72(%class.GrBuffer* nonnull %66) #9
  br label %73

73:                                               ; preds = %68, %50
  %74 = add nuw nsw i64 %51, 1
  %75 = load i64, i64* %4, align 8
  %76 = lshr i64 %75, 1
  %77 = and i64 %76, 2147483647
  %78 = icmp ult i64 %74, %77
  br i1 %78, label %50, label %79

79:                                               ; preds = %73, %35
  %80 = phi i64 [ %45, %35 ], [ %75, %73 ]
  %81 = and i64 %80, 1
  %82 = icmp eq i64 %81, 0
  %83 = bitcast %class.SkTArray* %0 to i8**
  br i1 %82, label %87, label %84

84:                                               ; preds = %79
  %85 = load i8*, i8** %83, align 8
  tail call void @_Z7sk_freePv(i8* %85) #9
  %86 = load i64, i64* %4, align 8
  br label %87

87:                                               ; preds = %79, %84
  %88 = phi i64 [ %86, %84 ], [ %80, %79 ]
  store i8* %44, i8** %83, align 8
  %89 = and i64 %88, -4294967298
  %90 = or i64 %89, 1
  store i64 %90, i64* %4, align 8
  br label %91

91:                                               ; preds = %87, %32, %21
  ret void
}

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN11GrCpuBuffer4MakeEm: argument 0"}
!4 = distinct !{!4, !"_ZN11GrCpuBuffer4MakeEm"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN11GrCpuBuffer4MakeEm: argument 0"}
!7 = distinct !{!7, !"_ZN11GrCpuBuffer4MakeEm"}
!8 = !{i8 0, i8 2}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN11GrCpuBuffer4MakeEm: argument 0"}
!11 = distinct !{!11, !"_ZN11GrCpuBuffer4MakeEm"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN11GrCpuBuffer4MakeEm: argument 0"}
!14 = distinct !{!14, !"_ZN11GrCpuBuffer4MakeEm"}
