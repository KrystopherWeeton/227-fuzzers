; ModuleID = '../../third_party/ots/src/src/maxp.cc'
source_filename = "../../third_party/ots/src/src/maxp.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.ots::OpenTypeMAXP" = type { %"class.ots::Table.base", i16, i8, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 }
%"class.ots::Table.base" = type <{ i32 (...)**, i32, i32, %"struct.ots::Font"*, i8 }>
%"struct.ots::Font" = type { %"struct.ots::FontFile"*, i32, i16, i16, i16, i16, %"class.std::__1::map.15" }
%"struct.ots::FontFile" = type { %"class.ots::OTSContext"*, %"class.std::__1::map", %"class.std::__1::map.4" }
%"class.ots::OTSContext" = type { i32 (...)** }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::map.4" = type { %"class.std::__1::__tree.5" }
%"class.std::__1::__tree.5" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.15" = type { %"class.std::__1::__tree.16" }
%"class.std::__1::__tree.16" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.17", %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.ots::Table" = type <{ i32 (...)**, i32, i32, %"struct.ots::Font"*, i8, [7 x i8] }>
%"class.ots::OTSStream" = type <{ i32 (...)**, i32, [4 x i8] }>

$_ZN3ots5TableD2Ev = comdat any

$_ZN3ots12OpenTypeMAXPD0Ev = comdat any

@.str = private unnamed_addr constant [29 x i8] c"Failed to read table version\00", align 1
@.str.1 = private unnamed_addr constant [31 x i8] c"Unsupported table version 0x%x\00", align 1
@.str.2 = private unnamed_addr constant [25 x i8] c"Failed to read numGlyphs\00", align 1
@.str.3 = private unnamed_addr constant [15 x i8] c"numGlyphs is 0\00", align 1
@.str.4 = private unnamed_addr constant [36 x i8] c"Failed to read version 1 table data\00", align 1
@.str.5 = private unnamed_addr constant [17 x i8] c"Bad maxZones: %u\00", align 1
@.str.6 = private unnamed_addr constant [37 x i8] c"Failed to write version or numGlyphs\00", align 1
@.str.7 = private unnamed_addr constant [21 x i8] c"Failed to write maxp\00", align 1
@.str.8 = private unnamed_addr constant [26 x i8] c"Failed to write more maxp\00", align 1
@.str.9 = private unnamed_addr constant [30 x i8] c"Failed to write yet more maxp\00", align 1
@_ZTVN3ots12OpenTypeMAXPE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ots::Table"*)* @_ZN3ots5TableD2Ev to i8*), i8* bitcast (void (%"class.ots::OpenTypeMAXP"*)* @_ZN3ots12OpenTypeMAXPD0Ev to i8*), i8* bitcast (i1 (%"class.ots::OpenTypeMAXP"*, i8*, i64)* @_ZN3ots12OpenTypeMAXP5ParseEPKhm to i8*), i8* bitcast (i1 (%"class.ots::OpenTypeMAXP"*, %"class.ots::OTSStream"*)* @_ZN3ots12OpenTypeMAXP9SerializeEPNS_9OTSStreamE to i8*), i8* bitcast (i1 (%"class.ots::Table"*)* @_ZN3ots5Table15ShouldSerializeEv to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3ots12OpenTypeMAXP5ParseEPKhm(%"class.ots::OpenTypeMAXP"*, i8*, i64) unnamed_addr #0 align 2 {
  %4 = icmp ult i64 %2, 4
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  %6 = bitcast %"class.ots::OpenTypeMAXP"* %0 to %"class.ots::Table"*
  %7 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %6, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0)) #6
  br label %144

8:                                                ; preds = %3
  %9 = bitcast i8* %1 to i32*
  %10 = load i32, i32* %9, align 1
  %11 = tail call i32 @llvm.bswap.i32(i32 %10) #6
  %12 = icmp ugt i32 %11, 131071
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  %14 = bitcast %"class.ots::OpenTypeMAXP"* %0 to %"class.ots::Table"*
  %15 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %14, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0), i32 %11) #6
  br label %144

16:                                               ; preds = %8
  %17 = icmp ult i64 %2, 6
  br i1 %17, label %18, label %21

18:                                               ; preds = %16
  %19 = bitcast %"class.ots::OpenTypeMAXP"* %0 to %"class.ots::Table"*
  %20 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %19, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2, i64 0, i64 0)) #6
  br label %144

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.ots::OpenTypeMAXP", %"class.ots::OpenTypeMAXP"* %0, i64 0, i32 1
  %23 = getelementptr inbounds i8, i8* %1, i64 4
  %24 = bitcast i8* %23 to i16*
  %25 = load i16, i16* %24, align 1
  %26 = tail call i16 @llvm.bswap.i16(i16 %25) #6
  store i16 %26, i16* %22, align 2
  %27 = icmp eq i16 %25, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %21
  %29 = bitcast %"class.ots::OpenTypeMAXP"* %0 to %"class.ots::Table"*
  %30 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %29, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0)) #6
  br label %144

31:                                               ; preds = %21
  %32 = and i32 %11, -65536
  %33 = icmp eq i32 %32, 65536
  %34 = getelementptr inbounds %"class.ots::OpenTypeMAXP", %"class.ots::OpenTypeMAXP"* %0, i64 0, i32 2
  br i1 %33, label %35, label %143

35:                                               ; preds = %31
  store i8 1, i8* %34, align 4
  %36 = icmp ult i64 %2, 8
  br i1 %36, label %121, label %37

37:                                               ; preds = %35
  %38 = getelementptr inbounds %"class.ots::OpenTypeMAXP", %"class.ots::OpenTypeMAXP"* %0, i64 0, i32 3
  %39 = getelementptr inbounds i8, i8* %1, i64 6
  %40 = bitcast i8* %39 to i16*
  %41 = load i16, i16* %40, align 1
  %42 = tail call i16 @llvm.bswap.i16(i16 %41) #6
  store i16 %42, i16* %38, align 2
  %43 = icmp ult i64 %2, 10
  br i1 %43, label %121, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.ots::OpenTypeMAXP", %"class.ots::OpenTypeMAXP"* %0, i64 0, i32 4
  %46 = getelementptr inbounds i8, i8* %1, i64 8
  %47 = bitcast i8* %46 to i16*
  %48 = load i16, i16* %47, align 1
  %49 = tail call i16 @llvm.bswap.i16(i16 %48) #6
  store i16 %49, i16* %45, align 2
  %50 = icmp ult i64 %2, 12
  br i1 %50, label %121, label %51

51:                                               ; preds = %44
  %52 = getelementptr inbounds %"class.ots::OpenTypeMAXP", %"class.ots::OpenTypeMAXP"* %0, i64 0, i32 5
  %53 = getelementptr inbounds i8, i8* %1, i64 10
  %54 = bitcast i8* %53 to i16*
  %55 = load i16, i16* %54, align 1
  %56 = tail call i16 @llvm.bswap.i16(i16 %55) #6
  store i16 %56, i16* %52, align 2
  %57 = icmp ult i64 %2, 14
  br i1 %57, label %121, label %58

58:                                               ; preds = %51
  %59 = getelementptr inbounds %"class.ots::OpenTypeMAXP", %"class.ots::OpenTypeMAXP"* %0, i64 0, i32 6
  %60 = getelementptr inbounds i8, i8* %1, i64 12
  %61 = bitcast i8* %60 to i16*
  %62 = load i16, i16* %61, align 1
  %63 = tail call i16 @llvm.bswap.i16(i16 %62) #6
  store i16 %63, i16* %59, align 2
  %64 = getelementptr inbounds %"class.ots::OpenTypeMAXP", %"class.ots::OpenTypeMAXP"* %0, i64 0, i32 7
  %65 = icmp ult i64 %2, 16
  br i1 %65, label %121, label %66

66:                                               ; preds = %58
  %67 = getelementptr inbounds i8, i8* %1, i64 14
  %68 = bitcast i8* %67 to i16*
  %69 = load i16, i16* %68, align 1
  %70 = tail call i16 @llvm.bswap.i16(i16 %69) #6
  store i16 %70, i16* %64, align 2
  %71 = icmp ult i64 %2, 18
  br i1 %71, label %121, label %72

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"class.ots::OpenTypeMAXP", %"class.ots::OpenTypeMAXP"* %0, i64 0, i32 8
  %74 = getelementptr inbounds i8, i8* %1, i64 16
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 1
  %77 = tail call i16 @llvm.bswap.i16(i16 %76) #6
  store i16 %77, i16* %73, align 2
  %78 = icmp ult i64 %2, 20
  br i1 %78, label %121, label %79

79:                                               ; preds = %72
  %80 = getelementptr inbounds %"class.ots::OpenTypeMAXP", %"class.ots::OpenTypeMAXP"* %0, i64 0, i32 9
  %81 = getelementptr inbounds i8, i8* %1, i64 18
  %82 = bitcast i8* %81 to i16*
  %83 = load i16, i16* %82, align 1
  %84 = tail call i16 @llvm.bswap.i16(i16 %83) #6
  store i16 %84, i16* %80, align 2
  %85 = icmp ult i64 %2, 22
  br i1 %85, label %121, label %86

86:                                               ; preds = %79
  %87 = getelementptr inbounds %"class.ots::OpenTypeMAXP", %"class.ots::OpenTypeMAXP"* %0, i64 0, i32 10
  %88 = getelementptr inbounds i8, i8* %1, i64 20
  %89 = bitcast i8* %88 to i16*
  %90 = load i16, i16* %89, align 1
  %91 = tail call i16 @llvm.bswap.i16(i16 %90) #6
  store i16 %91, i16* %87, align 2
  %92 = icmp ult i64 %2, 24
  br i1 %92, label %121, label %93

93:                                               ; preds = %86
  %94 = getelementptr inbounds %"class.ots::OpenTypeMAXP", %"class.ots::OpenTypeMAXP"* %0, i64 0, i32 11
  %95 = getelementptr inbounds i8, i8* %1, i64 22
  %96 = bitcast i8* %95 to i16*
  %97 = load i16, i16* %96, align 1
  %98 = tail call i16 @llvm.bswap.i16(i16 %97) #6
  store i16 %98, i16* %94, align 2
  %99 = icmp ult i64 %2, 26
  br i1 %99, label %121, label %100

100:                                              ; preds = %93
  %101 = getelementptr inbounds %"class.ots::OpenTypeMAXP", %"class.ots::OpenTypeMAXP"* %0, i64 0, i32 12
  %102 = getelementptr inbounds i8, i8* %1, i64 24
  %103 = bitcast i8* %102 to i16*
  %104 = load i16, i16* %103, align 1
  %105 = tail call i16 @llvm.bswap.i16(i16 %104) #6
  store i16 %105, i16* %101, align 2
  %106 = icmp ult i64 %2, 28
  br i1 %106, label %121, label %107

107:                                              ; preds = %100
  %108 = getelementptr inbounds %"class.ots::OpenTypeMAXP", %"class.ots::OpenTypeMAXP"* %0, i64 0, i32 13
  %109 = getelementptr inbounds i8, i8* %1, i64 26
  %110 = bitcast i8* %109 to i16*
  %111 = load i16, i16* %110, align 1
  %112 = tail call i16 @llvm.bswap.i16(i16 %111) #6
  store i16 %112, i16* %108, align 2
  %113 = icmp ult i64 %2, 30
  br i1 %113, label %121, label %114

114:                                              ; preds = %107
  %115 = getelementptr inbounds %"class.ots::OpenTypeMAXP", %"class.ots::OpenTypeMAXP"* %0, i64 0, i32 14
  %116 = getelementptr inbounds i8, i8* %1, i64 28
  %117 = bitcast i8* %116 to i16*
  %118 = load i16, i16* %117, align 1
  %119 = tail call i16 @llvm.bswap.i16(i16 %118) #6
  store i16 %119, i16* %115, align 2
  %120 = icmp ult i64 %2, 32
  br i1 %120, label %121, label %124

121:                                              ; preds = %114, %107, %100, %93, %86, %79, %72, %66, %58, %51, %44, %37, %35
  %122 = bitcast %"class.ots::OpenTypeMAXP"* %0 to %"class.ots::Table"*
  %123 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %122, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4, i64 0, i64 0)) #6
  br label %144

124:                                              ; preds = %114
  %125 = getelementptr inbounds %"class.ots::OpenTypeMAXP", %"class.ots::OpenTypeMAXP"* %0, i64 0, i32 15
  %126 = getelementptr inbounds i8, i8* %1, i64 30
  %127 = bitcast i8* %126 to i16*
  %128 = load i16, i16* %127, align 1
  %129 = tail call i16 @llvm.bswap.i16(i16 %128) #6
  store i16 %129, i16* %125, align 2
  switch i16 %70, label %136 [
    i16 0, label %130
    i16 3, label %133
  ]

130:                                              ; preds = %124
  %131 = bitcast %"class.ots::OpenTypeMAXP"* %0 to %"class.ots::Table"*
  %132 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table7WarningEPKcz(%"class.ots::Table"* %131, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0), i32 0) #6
  store i16 1, i16* %64, align 2
  br label %144

133:                                              ; preds = %124
  %134 = bitcast %"class.ots::OpenTypeMAXP"* %0 to %"class.ots::Table"*
  %135 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table7WarningEPKcz(%"class.ots::Table"* %134, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0), i32 3) #6
  store i16 2, i16* %64, align 2
  br label %144

136:                                              ; preds = %124
  %137 = add i16 %70, -1
  %138 = icmp ult i16 %137, 2
  br i1 %138, label %144, label %139

139:                                              ; preds = %136
  %140 = zext i16 %70 to i32
  %141 = bitcast %"class.ots::OpenTypeMAXP"* %0 to %"class.ots::Table"*
  %142 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %141, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0), i32 %140) #6
  br label %144

143:                                              ; preds = %31
  store i8 0, i8* %34, align 4
  br label %144

144:                                              ; preds = %130, %133, %136, %143, %139, %121, %28, %18, %13, %5
  %145 = phi i1 [ %15, %13 ], [ %142, %139 ], [ %123, %121 ], [ %30, %28 ], [ %20, %18 ], [ %7, %5 ], [ true, %136 ], [ true, %143 ], [ true, %133 ], [ true, %130 ]
  ret i1 %145
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"*, i8*, ...) local_unnamed_addr #2

declare zeroext i1 @_ZN3ots5Table7WarningEPKcz(%"class.ots::Table"*, i8*, ...) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3ots12OpenTypeMAXP9SerializeEPNS_9OTSStreamE(%"class.ots::OpenTypeMAXP"*, %"class.ots::OTSStream"*) unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i16, align 2
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i16, align 2
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i16, align 2
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i16, align 2
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i16, align 2
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i16, align 2
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i16, align 2
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i16, align 2
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i16, align 2
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i16, align 2
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i16, align 2
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i16, align 2
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = alloca i16, align 2
  %42 = alloca i32, align 4
  %43 = alloca i32, align 4
  %44 = alloca i16, align 2
  %45 = alloca i32, align 4
  %46 = alloca i32, align 4
  %47 = alloca i32, align 4
  %48 = getelementptr inbounds %"class.ots::OpenTypeMAXP", %"class.ots::OpenTypeMAXP"* %0, i64 0, i32 2
  %49 = load i8, i8* %48, align 4, !range !2
  %50 = icmp eq i8 %49, 0
  %51 = select i1 %50, i32 20480, i32 65536
  %52 = bitcast i32* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %52)
  %53 = tail call i32 @llvm.bswap.i32(i32 %51) #6
  store i32 %53, i32* %47, align 4
  %54 = bitcast %"class.ots::OTSStream"* %1 to i64 (%"class.ots::OTSStream"*)***
  %55 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %54, align 8
  %56 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %55, i64 4
  %57 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %56, align 8
  %58 = tail call i64 %57(%"class.ots::OTSStream"* %1) #6
  %59 = and i64 %58, 3
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %2
  %62 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %63 = load i32, i32* %62, align 8
  br label %76

64:                                               ; preds = %2
  %65 = sub nuw nsw i64 4, %59
  %66 = icmp ult i64 %65, 4
  %67 = select i1 %66, i64 %65, i64 4
  %68 = bitcast i32* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %68) #6
  store i32 0, i32* %45, align 4
  %69 = getelementptr inbounds i8, i8* %68, i64 %59
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %69, i8* nonnull align 4 %52, i64 %67, i1 false) #6
  %70 = load i32, i32* %45, align 4
  %71 = tail call i32 @llvm.bswap.i32(i32 %70) #6
  %72 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, %71
  store i32 %74, i32* %72, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %68) #6
  %75 = icmp eq i64 %67, 0
  br i1 %75, label %76, label %85

76:                                               ; preds = %64, %61
  %77 = phi i32 [ %74, %64 ], [ %63, %61 ]
  %78 = phi i64 [ %65, %64 ], [ 0, %61 ]
  %79 = getelementptr inbounds i8, i8* %52, i64 %78
  %80 = bitcast i8* %79 to i32*
  %81 = load i32, i32* %80, align 1
  %82 = tail call i32 @llvm.bswap.i32(i32 %81) #6
  %83 = add i32 %82, %77
  %84 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  store i32 %83, i32* %84, align 8
  br label %92

85:                                               ; preds = %64
  %86 = sub nuw nsw i64 4, %67
  %87 = bitcast i32* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %87)
  store i32 0, i32* %46, align 4
  %88 = getelementptr inbounds i8, i8* %52, i64 %65
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %87, i8* align 1 %88, i64 %86, i1 false) #6
  %89 = load i32, i32* %46, align 4
  %90 = tail call i32 @llvm.bswap.i32(i32 %89) #6
  %91 = add i32 %90, %74
  store i32 %91, i32* %72, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %87)
  br label %92

92:                                               ; preds = %76, %85
  %93 = bitcast %"class.ots::OTSStream"* %1 to i1 (%"class.ots::OTSStream"*, i8*, i64)***
  %94 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %93, align 8
  %95 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %94, i64 2
  %96 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %95, align 8
  %97 = call zeroext i1 %96(%"class.ots::OTSStream"* %1, i8* nonnull %52, i64 4) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %52)
  br i1 %97, label %98, label %139

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"class.ots::OpenTypeMAXP", %"class.ots::OpenTypeMAXP"* %0, i64 0, i32 1
  %100 = load i16, i16* %99, align 2
  %101 = bitcast i16* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %101)
  %102 = call i16 @llvm.bswap.i16(i16 %100) #6
  store i16 %102, i16* %44, align 2
  %103 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %54, align 8
  %104 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %103, i64 4
  %105 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %104, align 8
  %106 = call i64 %105(%"class.ots::OTSStream"* %1) #6
  %107 = and i64 %106, 3
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %109, label %112

109:                                              ; preds = %98
  %110 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %111 = load i32, i32* %110, align 8
  br label %124

112:                                              ; preds = %98
  %113 = sub nuw nsw i64 4, %107
  %114 = icmp ult i64 %113, 2
  %115 = select i1 %114, i64 %113, i64 2
  %116 = bitcast i32* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %116) #6
  store i32 0, i32* %42, align 4
  %117 = getelementptr inbounds i8, i8* %116, i64 %107
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %117, i8* nonnull align 2 %101, i64 %115, i1 false) #6
  %118 = load i32, i32* %42, align 4
  %119 = call i32 @llvm.bswap.i32(i32 %118) #6
  %120 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %121 = load i32, i32* %120, align 8
  %122 = add i32 %121, %119
  store i32 %122, i32* %120, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %116) #6
  %123 = icmp eq i64 %107, 3
  br i1 %123, label %124, label %134

124:                                              ; preds = %112, %109
  %125 = phi i32 [ %122, %112 ], [ %111, %109 ]
  %126 = phi i64 [ %115, %112 ], [ 0, %109 ]
  %127 = phi i64 [ 1, %112 ], [ 2, %109 ]
  %128 = bitcast i32* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %128)
  store i32 0, i32* %43, align 4
  %129 = getelementptr inbounds i8, i8* %101, i64 %126
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %128, i8* align 1 %129, i64 %127, i1 false) #6
  %130 = load i32, i32* %43, align 4
  %131 = call i32 @llvm.bswap.i32(i32 %130) #6
  %132 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %133 = add i32 %131, %125
  store i32 %133, i32* %132, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %128)
  br label %134

134:                                              ; preds = %112, %124
  %135 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %93, align 8
  %136 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %135, i64 2
  %137 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %136, align 8
  %138 = call zeroext i1 %137(%"class.ots::OTSStream"* %1, i8* nonnull %101, i64 2) #6
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %101)
  br i1 %138, label %142, label %139

139:                                              ; preds = %134, %92
  %140 = bitcast %"class.ots::OpenTypeMAXP"* %0 to %"class.ots::Table"*
  %141 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %140, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.6, i64 0, i64 0)) #6
  br label %687

142:                                              ; preds = %134
  %143 = load i8, i8* %48, align 4, !range !2
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %687, label %145

145:                                              ; preds = %142
  %146 = getelementptr inbounds %"class.ots::OpenTypeMAXP", %"class.ots::OpenTypeMAXP"* %0, i64 0, i32 3
  %147 = load i16, i16* %146, align 2
  %148 = bitcast i16* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %148)
  %149 = call i16 @llvm.bswap.i16(i16 %147) #6
  store i16 %149, i16* %41, align 2
  %150 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %54, align 8
  %151 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %150, i64 4
  %152 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %151, align 8
  %153 = call i64 %152(%"class.ots::OTSStream"* %1) #6
  %154 = and i64 %153, 3
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %156, label %159

156:                                              ; preds = %145
  %157 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %158 = load i32, i32* %157, align 8
  br label %171

159:                                              ; preds = %145
  %160 = sub nuw nsw i64 4, %154
  %161 = icmp ult i64 %160, 2
  %162 = select i1 %161, i64 %160, i64 2
  %163 = bitcast i32* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %163) #6
  store i32 0, i32* %39, align 4
  %164 = getelementptr inbounds i8, i8* %163, i64 %154
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %164, i8* nonnull align 2 %148, i64 %162, i1 false) #6
  %165 = load i32, i32* %39, align 4
  %166 = call i32 @llvm.bswap.i32(i32 %165) #6
  %167 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %168 = load i32, i32* %167, align 8
  %169 = add i32 %168, %166
  store i32 %169, i32* %167, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %163) #6
  %170 = icmp eq i64 %154, 3
  br i1 %170, label %171, label %181

171:                                              ; preds = %159, %156
  %172 = phi i32 [ %169, %159 ], [ %158, %156 ]
  %173 = phi i64 [ %162, %159 ], [ 0, %156 ]
  %174 = phi i64 [ 1, %159 ], [ 2, %156 ]
  %175 = bitcast i32* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %175)
  store i32 0, i32* %40, align 4
  %176 = getelementptr inbounds i8, i8* %148, i64 %173
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %175, i8* align 1 %176, i64 %174, i1 false) #6
  %177 = load i32, i32* %40, align 4
  %178 = call i32 @llvm.bswap.i32(i32 %177) #6
  %179 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %180 = add i32 %178, %172
  store i32 %180, i32* %179, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %175)
  br label %181

181:                                              ; preds = %159, %171
  %182 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %93, align 8
  %183 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %182, i64 2
  %184 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %183, align 8
  %185 = call zeroext i1 %184(%"class.ots::OTSStream"* %1, i8* nonnull %148, i64 2) #6
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %148)
  br i1 %185, label %186, label %309

186:                                              ; preds = %181
  %187 = getelementptr inbounds %"class.ots::OpenTypeMAXP", %"class.ots::OpenTypeMAXP"* %0, i64 0, i32 4
  %188 = load i16, i16* %187, align 8
  %189 = bitcast i16* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %189)
  %190 = call i16 @llvm.bswap.i16(i16 %188) #6
  store i16 %190, i16* %38, align 2
  %191 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %54, align 8
  %192 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %191, i64 4
  %193 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %192, align 8
  %194 = call i64 %193(%"class.ots::OTSStream"* %1) #6
  %195 = and i64 %194, 3
  %196 = icmp eq i64 %195, 0
  br i1 %196, label %197, label %200

197:                                              ; preds = %186
  %198 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %199 = load i32, i32* %198, align 8
  br label %212

200:                                              ; preds = %186
  %201 = sub nuw nsw i64 4, %195
  %202 = icmp ult i64 %201, 2
  %203 = select i1 %202, i64 %201, i64 2
  %204 = bitcast i32* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %204) #6
  store i32 0, i32* %36, align 4
  %205 = getelementptr inbounds i8, i8* %204, i64 %195
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %205, i8* nonnull align 2 %189, i64 %203, i1 false) #6
  %206 = load i32, i32* %36, align 4
  %207 = call i32 @llvm.bswap.i32(i32 %206) #6
  %208 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %209 = load i32, i32* %208, align 8
  %210 = add i32 %209, %207
  store i32 %210, i32* %208, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %204) #6
  %211 = icmp eq i64 %195, 3
  br i1 %211, label %212, label %222

212:                                              ; preds = %200, %197
  %213 = phi i32 [ %210, %200 ], [ %199, %197 ]
  %214 = phi i64 [ %203, %200 ], [ 0, %197 ]
  %215 = phi i64 [ 1, %200 ], [ 2, %197 ]
  %216 = bitcast i32* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %216)
  store i32 0, i32* %37, align 4
  %217 = getelementptr inbounds i8, i8* %189, i64 %214
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %216, i8* align 1 %217, i64 %215, i1 false) #6
  %218 = load i32, i32* %37, align 4
  %219 = call i32 @llvm.bswap.i32(i32 %218) #6
  %220 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %221 = add i32 %219, %213
  store i32 %221, i32* %220, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %216)
  br label %222

222:                                              ; preds = %200, %212
  %223 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %93, align 8
  %224 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %223, i64 2
  %225 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %224, align 8
  %226 = call zeroext i1 %225(%"class.ots::OTSStream"* %1, i8* nonnull %189, i64 2) #6
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %189)
  br i1 %226, label %227, label %309

227:                                              ; preds = %222
  %228 = getelementptr inbounds %"class.ots::OpenTypeMAXP", %"class.ots::OpenTypeMAXP"* %0, i64 0, i32 5
  %229 = load i16, i16* %228, align 2
  %230 = bitcast i16* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %230)
  %231 = call i16 @llvm.bswap.i16(i16 %229) #6
  store i16 %231, i16* %35, align 2
  %232 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %54, align 8
  %233 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %232, i64 4
  %234 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %233, align 8
  %235 = call i64 %234(%"class.ots::OTSStream"* %1) #6
  %236 = and i64 %235, 3
  %237 = icmp eq i64 %236, 0
  br i1 %237, label %238, label %241

238:                                              ; preds = %227
  %239 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %240 = load i32, i32* %239, align 8
  br label %253

241:                                              ; preds = %227
  %242 = sub nuw nsw i64 4, %236
  %243 = icmp ult i64 %242, 2
  %244 = select i1 %243, i64 %242, i64 2
  %245 = bitcast i32* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %245) #6
  store i32 0, i32* %33, align 4
  %246 = getelementptr inbounds i8, i8* %245, i64 %236
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %246, i8* nonnull align 2 %230, i64 %244, i1 false) #6
  %247 = load i32, i32* %33, align 4
  %248 = call i32 @llvm.bswap.i32(i32 %247) #6
  %249 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %250 = load i32, i32* %249, align 8
  %251 = add i32 %250, %248
  store i32 %251, i32* %249, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %245) #6
  %252 = icmp eq i64 %236, 3
  br i1 %252, label %253, label %263

253:                                              ; preds = %241, %238
  %254 = phi i32 [ %251, %241 ], [ %240, %238 ]
  %255 = phi i64 [ %244, %241 ], [ 0, %238 ]
  %256 = phi i64 [ 1, %241 ], [ 2, %238 ]
  %257 = bitcast i32* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %257)
  store i32 0, i32* %34, align 4
  %258 = getelementptr inbounds i8, i8* %230, i64 %255
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %257, i8* align 1 %258, i64 %256, i1 false) #6
  %259 = load i32, i32* %34, align 4
  %260 = call i32 @llvm.bswap.i32(i32 %259) #6
  %261 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %262 = add i32 %260, %254
  store i32 %262, i32* %261, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %257)
  br label %263

263:                                              ; preds = %241, %253
  %264 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %93, align 8
  %265 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %264, i64 2
  %266 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %265, align 8
  %267 = call zeroext i1 %266(%"class.ots::OTSStream"* %1, i8* nonnull %230, i64 2) #6
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %230)
  br i1 %267, label %268, label %309

268:                                              ; preds = %263
  %269 = getelementptr inbounds %"class.ots::OpenTypeMAXP", %"class.ots::OpenTypeMAXP"* %0, i64 0, i32 6
  %270 = load i16, i16* %269, align 4
  %271 = bitcast i16* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %271)
  %272 = call i16 @llvm.bswap.i16(i16 %270) #6
  store i16 %272, i16* %32, align 2
  %273 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %54, align 8
  %274 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %273, i64 4
  %275 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %274, align 8
  %276 = call i64 %275(%"class.ots::OTSStream"* %1) #6
  %277 = and i64 %276, 3
  %278 = icmp eq i64 %277, 0
  br i1 %278, label %279, label %282

279:                                              ; preds = %268
  %280 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %281 = load i32, i32* %280, align 8
  br label %294

282:                                              ; preds = %268
  %283 = sub nuw nsw i64 4, %277
  %284 = icmp ult i64 %283, 2
  %285 = select i1 %284, i64 %283, i64 2
  %286 = bitcast i32* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %286) #6
  store i32 0, i32* %30, align 4
  %287 = getelementptr inbounds i8, i8* %286, i64 %277
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %287, i8* nonnull align 2 %271, i64 %285, i1 false) #6
  %288 = load i32, i32* %30, align 4
  %289 = call i32 @llvm.bswap.i32(i32 %288) #6
  %290 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %291 = load i32, i32* %290, align 8
  %292 = add i32 %291, %289
  store i32 %292, i32* %290, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %286) #6
  %293 = icmp eq i64 %277, 3
  br i1 %293, label %294, label %304

294:                                              ; preds = %282, %279
  %295 = phi i32 [ %292, %282 ], [ %281, %279 ]
  %296 = phi i64 [ %285, %282 ], [ 0, %279 ]
  %297 = phi i64 [ 1, %282 ], [ 2, %279 ]
  %298 = bitcast i32* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %298)
  store i32 0, i32* %31, align 4
  %299 = getelementptr inbounds i8, i8* %271, i64 %296
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %298, i8* align 1 %299, i64 %297, i1 false) #6
  %300 = load i32, i32* %31, align 4
  %301 = call i32 @llvm.bswap.i32(i32 %300) #6
  %302 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %303 = add i32 %301, %295
  store i32 %303, i32* %302, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %298)
  br label %304

304:                                              ; preds = %282, %294
  %305 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %93, align 8
  %306 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %305, i64 2
  %307 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %306, align 8
  %308 = call zeroext i1 %307(%"class.ots::OTSStream"* %1, i8* nonnull %271, i64 2) #6
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %271)
  br i1 %308, label %312, label %309

309:                                              ; preds = %304, %263, %222, %181
  %310 = bitcast %"class.ots::OpenTypeMAXP"* %0 to %"class.ots::Table"*
  %311 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %310, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.7, i64 0, i64 0)) #6
  br label %687

312:                                              ; preds = %304
  %313 = getelementptr inbounds %"class.ots::OpenTypeMAXP", %"class.ots::OpenTypeMAXP"* %0, i64 0, i32 7
  %314 = load i16, i16* %313, align 2
  %315 = bitcast i16* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %315)
  %316 = call i16 @llvm.bswap.i16(i16 %314) #6
  store i16 %316, i16* %29, align 2
  %317 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %54, align 8
  %318 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %317, i64 4
  %319 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %318, align 8
  %320 = call i64 %319(%"class.ots::OTSStream"* %1) #6
  %321 = and i64 %320, 3
  %322 = icmp eq i64 %321, 0
  br i1 %322, label %323, label %326

323:                                              ; preds = %312
  %324 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %325 = load i32, i32* %324, align 8
  br label %338

326:                                              ; preds = %312
  %327 = sub nuw nsw i64 4, %321
  %328 = icmp ult i64 %327, 2
  %329 = select i1 %328, i64 %327, i64 2
  %330 = bitcast i32* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %330) #6
  store i32 0, i32* %27, align 4
  %331 = getelementptr inbounds i8, i8* %330, i64 %321
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %331, i8* nonnull align 2 %315, i64 %329, i1 false) #6
  %332 = load i32, i32* %27, align 4
  %333 = call i32 @llvm.bswap.i32(i32 %332) #6
  %334 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %335 = load i32, i32* %334, align 8
  %336 = add i32 %335, %333
  store i32 %336, i32* %334, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %330) #6
  %337 = icmp eq i64 %321, 3
  br i1 %337, label %338, label %348

338:                                              ; preds = %326, %323
  %339 = phi i32 [ %336, %326 ], [ %325, %323 ]
  %340 = phi i64 [ %329, %326 ], [ 0, %323 ]
  %341 = phi i64 [ 1, %326 ], [ 2, %323 ]
  %342 = bitcast i32* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %342)
  store i32 0, i32* %28, align 4
  %343 = getelementptr inbounds i8, i8* %315, i64 %340
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %342, i8* align 1 %343, i64 %341, i1 false) #6
  %344 = load i32, i32* %28, align 4
  %345 = call i32 @llvm.bswap.i32(i32 %344) #6
  %346 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %347 = add i32 %345, %339
  store i32 %347, i32* %346, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %342)
  br label %348

348:                                              ; preds = %326, %338
  %349 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %93, align 8
  %350 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %349, i64 2
  %351 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %350, align 8
  %352 = call zeroext i1 %351(%"class.ots::OTSStream"* %1, i8* nonnull %315, i64 2) #6
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %315)
  br i1 %352, label %353, label %599

353:                                              ; preds = %348
  %354 = getelementptr inbounds %"class.ots::OpenTypeMAXP", %"class.ots::OpenTypeMAXP"* %0, i64 0, i32 8
  %355 = load i16, i16* %354, align 8
  %356 = bitcast i16* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %356)
  %357 = call i16 @llvm.bswap.i16(i16 %355) #6
  store i16 %357, i16* %26, align 2
  %358 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %54, align 8
  %359 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %358, i64 4
  %360 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %359, align 8
  %361 = call i64 %360(%"class.ots::OTSStream"* %1) #6
  %362 = and i64 %361, 3
  %363 = icmp eq i64 %362, 0
  br i1 %363, label %364, label %367

364:                                              ; preds = %353
  %365 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %366 = load i32, i32* %365, align 8
  br label %379

367:                                              ; preds = %353
  %368 = sub nuw nsw i64 4, %362
  %369 = icmp ult i64 %368, 2
  %370 = select i1 %369, i64 %368, i64 2
  %371 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %371) #6
  store i32 0, i32* %24, align 4
  %372 = getelementptr inbounds i8, i8* %371, i64 %362
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %372, i8* nonnull align 2 %356, i64 %370, i1 false) #6
  %373 = load i32, i32* %24, align 4
  %374 = call i32 @llvm.bswap.i32(i32 %373) #6
  %375 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %376 = load i32, i32* %375, align 8
  %377 = add i32 %376, %374
  store i32 %377, i32* %375, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %371) #6
  %378 = icmp eq i64 %362, 3
  br i1 %378, label %379, label %389

379:                                              ; preds = %367, %364
  %380 = phi i32 [ %377, %367 ], [ %366, %364 ]
  %381 = phi i64 [ %370, %367 ], [ 0, %364 ]
  %382 = phi i64 [ 1, %367 ], [ 2, %364 ]
  %383 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %383)
  store i32 0, i32* %25, align 4
  %384 = getelementptr inbounds i8, i8* %356, i64 %381
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %383, i8* align 1 %384, i64 %382, i1 false) #6
  %385 = load i32, i32* %25, align 4
  %386 = call i32 @llvm.bswap.i32(i32 %385) #6
  %387 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %388 = add i32 %386, %380
  store i32 %388, i32* %387, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %383)
  br label %389

389:                                              ; preds = %367, %379
  %390 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %93, align 8
  %391 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %390, i64 2
  %392 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %391, align 8
  %393 = call zeroext i1 %392(%"class.ots::OTSStream"* %1, i8* nonnull %356, i64 2) #6
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %356)
  br i1 %393, label %394, label %599

394:                                              ; preds = %389
  %395 = getelementptr inbounds %"class.ots::OpenTypeMAXP", %"class.ots::OpenTypeMAXP"* %0, i64 0, i32 9
  %396 = load i16, i16* %395, align 2
  %397 = bitcast i16* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %397)
  %398 = call i16 @llvm.bswap.i16(i16 %396) #6
  store i16 %398, i16* %23, align 2
  %399 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %54, align 8
  %400 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %399, i64 4
  %401 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %400, align 8
  %402 = call i64 %401(%"class.ots::OTSStream"* %1) #6
  %403 = and i64 %402, 3
  %404 = icmp eq i64 %403, 0
  br i1 %404, label %405, label %408

405:                                              ; preds = %394
  %406 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %407 = load i32, i32* %406, align 8
  br label %420

408:                                              ; preds = %394
  %409 = sub nuw nsw i64 4, %403
  %410 = icmp ult i64 %409, 2
  %411 = select i1 %410, i64 %409, i64 2
  %412 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %412) #6
  store i32 0, i32* %21, align 4
  %413 = getelementptr inbounds i8, i8* %412, i64 %403
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %413, i8* nonnull align 2 %397, i64 %411, i1 false) #6
  %414 = load i32, i32* %21, align 4
  %415 = call i32 @llvm.bswap.i32(i32 %414) #6
  %416 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %417 = load i32, i32* %416, align 8
  %418 = add i32 %417, %415
  store i32 %418, i32* %416, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %412) #6
  %419 = icmp eq i64 %403, 3
  br i1 %419, label %420, label %430

420:                                              ; preds = %408, %405
  %421 = phi i32 [ %418, %408 ], [ %407, %405 ]
  %422 = phi i64 [ %411, %408 ], [ 0, %405 ]
  %423 = phi i64 [ 1, %408 ], [ 2, %405 ]
  %424 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %424)
  store i32 0, i32* %22, align 4
  %425 = getelementptr inbounds i8, i8* %397, i64 %422
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %424, i8* align 1 %425, i64 %423, i1 false) #6
  %426 = load i32, i32* %22, align 4
  %427 = call i32 @llvm.bswap.i32(i32 %426) #6
  %428 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %429 = add i32 %427, %421
  store i32 %429, i32* %428, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %424)
  br label %430

430:                                              ; preds = %408, %420
  %431 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %93, align 8
  %432 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %431, i64 2
  %433 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %432, align 8
  %434 = call zeroext i1 %433(%"class.ots::OTSStream"* %1, i8* nonnull %397, i64 2) #6
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %397)
  br i1 %434, label %435, label %599

435:                                              ; preds = %430
  %436 = getelementptr inbounds %"class.ots::OpenTypeMAXP", %"class.ots::OpenTypeMAXP"* %0, i64 0, i32 10
  %437 = load i16, i16* %436, align 4
  %438 = bitcast i16* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %438)
  %439 = call i16 @llvm.bswap.i16(i16 %437) #6
  store i16 %439, i16* %20, align 2
  %440 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %54, align 8
  %441 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %440, i64 4
  %442 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %441, align 8
  %443 = call i64 %442(%"class.ots::OTSStream"* %1) #6
  %444 = and i64 %443, 3
  %445 = icmp eq i64 %444, 0
  br i1 %445, label %446, label %449

446:                                              ; preds = %435
  %447 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %448 = load i32, i32* %447, align 8
  br label %461

449:                                              ; preds = %435
  %450 = sub nuw nsw i64 4, %444
  %451 = icmp ult i64 %450, 2
  %452 = select i1 %451, i64 %450, i64 2
  %453 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %453) #6
  store i32 0, i32* %18, align 4
  %454 = getelementptr inbounds i8, i8* %453, i64 %444
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %454, i8* nonnull align 2 %438, i64 %452, i1 false) #6
  %455 = load i32, i32* %18, align 4
  %456 = call i32 @llvm.bswap.i32(i32 %455) #6
  %457 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %458 = load i32, i32* %457, align 8
  %459 = add i32 %458, %456
  store i32 %459, i32* %457, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %453) #6
  %460 = icmp eq i64 %444, 3
  br i1 %460, label %461, label %471

461:                                              ; preds = %449, %446
  %462 = phi i32 [ %459, %449 ], [ %448, %446 ]
  %463 = phi i64 [ %452, %449 ], [ 0, %446 ]
  %464 = phi i64 [ 1, %449 ], [ 2, %446 ]
  %465 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %465)
  store i32 0, i32* %19, align 4
  %466 = getelementptr inbounds i8, i8* %438, i64 %463
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %465, i8* align 1 %466, i64 %464, i1 false) #6
  %467 = load i32, i32* %19, align 4
  %468 = call i32 @llvm.bswap.i32(i32 %467) #6
  %469 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %470 = add i32 %468, %462
  store i32 %470, i32* %469, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %465)
  br label %471

471:                                              ; preds = %449, %461
  %472 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %93, align 8
  %473 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %472, i64 2
  %474 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %473, align 8
  %475 = call zeroext i1 %474(%"class.ots::OTSStream"* %1, i8* nonnull %438, i64 2) #6
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %438)
  br i1 %475, label %476, label %599

476:                                              ; preds = %471
  %477 = getelementptr inbounds %"class.ots::OpenTypeMAXP", %"class.ots::OpenTypeMAXP"* %0, i64 0, i32 11
  %478 = load i16, i16* %477, align 2
  %479 = bitcast i16* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %479)
  %480 = call i16 @llvm.bswap.i16(i16 %478) #6
  store i16 %480, i16* %17, align 2
  %481 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %54, align 8
  %482 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %481, i64 4
  %483 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %482, align 8
  %484 = call i64 %483(%"class.ots::OTSStream"* %1) #6
  %485 = and i64 %484, 3
  %486 = icmp eq i64 %485, 0
  br i1 %486, label %487, label %490

487:                                              ; preds = %476
  %488 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %489 = load i32, i32* %488, align 8
  br label %502

490:                                              ; preds = %476
  %491 = sub nuw nsw i64 4, %485
  %492 = icmp ult i64 %491, 2
  %493 = select i1 %492, i64 %491, i64 2
  %494 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %494) #6
  store i32 0, i32* %15, align 4
  %495 = getelementptr inbounds i8, i8* %494, i64 %485
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %495, i8* nonnull align 2 %479, i64 %493, i1 false) #6
  %496 = load i32, i32* %15, align 4
  %497 = call i32 @llvm.bswap.i32(i32 %496) #6
  %498 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %499 = load i32, i32* %498, align 8
  %500 = add i32 %499, %497
  store i32 %500, i32* %498, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %494) #6
  %501 = icmp eq i64 %485, 3
  br i1 %501, label %502, label %512

502:                                              ; preds = %490, %487
  %503 = phi i32 [ %500, %490 ], [ %489, %487 ]
  %504 = phi i64 [ %493, %490 ], [ 0, %487 ]
  %505 = phi i64 [ 1, %490 ], [ 2, %487 ]
  %506 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %506)
  store i32 0, i32* %16, align 4
  %507 = getelementptr inbounds i8, i8* %479, i64 %504
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %506, i8* align 1 %507, i64 %505, i1 false) #6
  %508 = load i32, i32* %16, align 4
  %509 = call i32 @llvm.bswap.i32(i32 %508) #6
  %510 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %511 = add i32 %509, %503
  store i32 %511, i32* %510, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %506)
  br label %512

512:                                              ; preds = %490, %502
  %513 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %93, align 8
  %514 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %513, i64 2
  %515 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %514, align 8
  %516 = call zeroext i1 %515(%"class.ots::OTSStream"* %1, i8* nonnull %479, i64 2) #6
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %479)
  br i1 %516, label %517, label %599

517:                                              ; preds = %512
  %518 = getelementptr inbounds %"class.ots::OpenTypeMAXP", %"class.ots::OpenTypeMAXP"* %0, i64 0, i32 12
  %519 = load i16, i16* %518, align 8
  %520 = bitcast i16* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %520)
  %521 = call i16 @llvm.bswap.i16(i16 %519) #6
  store i16 %521, i16* %14, align 2
  %522 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %54, align 8
  %523 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %522, i64 4
  %524 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %523, align 8
  %525 = call i64 %524(%"class.ots::OTSStream"* %1) #6
  %526 = and i64 %525, 3
  %527 = icmp eq i64 %526, 0
  br i1 %527, label %528, label %531

528:                                              ; preds = %517
  %529 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %530 = load i32, i32* %529, align 8
  br label %543

531:                                              ; preds = %517
  %532 = sub nuw nsw i64 4, %526
  %533 = icmp ult i64 %532, 2
  %534 = select i1 %533, i64 %532, i64 2
  %535 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %535) #6
  store i32 0, i32* %12, align 4
  %536 = getelementptr inbounds i8, i8* %535, i64 %526
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %536, i8* nonnull align 2 %520, i64 %534, i1 false) #6
  %537 = load i32, i32* %12, align 4
  %538 = call i32 @llvm.bswap.i32(i32 %537) #6
  %539 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %540 = load i32, i32* %539, align 8
  %541 = add i32 %540, %538
  store i32 %541, i32* %539, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %535) #6
  %542 = icmp eq i64 %526, 3
  br i1 %542, label %543, label %553

543:                                              ; preds = %531, %528
  %544 = phi i32 [ %541, %531 ], [ %530, %528 ]
  %545 = phi i64 [ %534, %531 ], [ 0, %528 ]
  %546 = phi i64 [ 1, %531 ], [ 2, %528 ]
  %547 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %547)
  store i32 0, i32* %13, align 4
  %548 = getelementptr inbounds i8, i8* %520, i64 %545
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %547, i8* align 1 %548, i64 %546, i1 false) #6
  %549 = load i32, i32* %13, align 4
  %550 = call i32 @llvm.bswap.i32(i32 %549) #6
  %551 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %552 = add i32 %550, %544
  store i32 %552, i32* %551, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %547)
  br label %553

553:                                              ; preds = %531, %543
  %554 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %93, align 8
  %555 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %554, i64 2
  %556 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %555, align 8
  %557 = call zeroext i1 %556(%"class.ots::OTSStream"* %1, i8* nonnull %520, i64 2) #6
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %520)
  br i1 %557, label %558, label %599

558:                                              ; preds = %553
  %559 = getelementptr inbounds %"class.ots::OpenTypeMAXP", %"class.ots::OpenTypeMAXP"* %0, i64 0, i32 13
  %560 = load i16, i16* %559, align 2
  %561 = bitcast i16* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %561)
  %562 = call i16 @llvm.bswap.i16(i16 %560) #6
  store i16 %562, i16* %11, align 2
  %563 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %54, align 8
  %564 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %563, i64 4
  %565 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %564, align 8
  %566 = call i64 %565(%"class.ots::OTSStream"* %1) #6
  %567 = and i64 %566, 3
  %568 = icmp eq i64 %567, 0
  br i1 %568, label %569, label %572

569:                                              ; preds = %558
  %570 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %571 = load i32, i32* %570, align 8
  br label %584

572:                                              ; preds = %558
  %573 = sub nuw nsw i64 4, %567
  %574 = icmp ult i64 %573, 2
  %575 = select i1 %574, i64 %573, i64 2
  %576 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %576) #6
  store i32 0, i32* %9, align 4
  %577 = getelementptr inbounds i8, i8* %576, i64 %567
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %577, i8* nonnull align 2 %561, i64 %575, i1 false) #6
  %578 = load i32, i32* %9, align 4
  %579 = call i32 @llvm.bswap.i32(i32 %578) #6
  %580 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %581 = load i32, i32* %580, align 8
  %582 = add i32 %581, %579
  store i32 %582, i32* %580, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %576) #6
  %583 = icmp eq i64 %567, 3
  br i1 %583, label %584, label %594

584:                                              ; preds = %572, %569
  %585 = phi i32 [ %582, %572 ], [ %571, %569 ]
  %586 = phi i64 [ %575, %572 ], [ 0, %569 ]
  %587 = phi i64 [ 1, %572 ], [ 2, %569 ]
  %588 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %588)
  store i32 0, i32* %10, align 4
  %589 = getelementptr inbounds i8, i8* %561, i64 %586
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %588, i8* align 1 %589, i64 %587, i1 false) #6
  %590 = load i32, i32* %10, align 4
  %591 = call i32 @llvm.bswap.i32(i32 %590) #6
  %592 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %593 = add i32 %591, %585
  store i32 %593, i32* %592, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %588)
  br label %594

594:                                              ; preds = %572, %584
  %595 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %93, align 8
  %596 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %595, i64 2
  %597 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %596, align 8
  %598 = call zeroext i1 %597(%"class.ots::OTSStream"* %1, i8* nonnull %561, i64 2) #6
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %561)
  br i1 %598, label %602, label %599

599:                                              ; preds = %594, %553, %512, %471, %430, %389, %348
  %600 = bitcast %"class.ots::OpenTypeMAXP"* %0 to %"class.ots::Table"*
  %601 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %600, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.8, i64 0, i64 0)) #6
  br label %687

602:                                              ; preds = %594
  %603 = getelementptr inbounds %"class.ots::OpenTypeMAXP", %"class.ots::OpenTypeMAXP"* %0, i64 0, i32 14
  %604 = load i16, i16* %603, align 4
  %605 = bitcast i16* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %605)
  %606 = call i16 @llvm.bswap.i16(i16 %604) #6
  store i16 %606, i16* %8, align 2
  %607 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %54, align 8
  %608 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %607, i64 4
  %609 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %608, align 8
  %610 = call i64 %609(%"class.ots::OTSStream"* %1) #6
  %611 = and i64 %610, 3
  %612 = icmp eq i64 %611, 0
  br i1 %612, label %613, label %616

613:                                              ; preds = %602
  %614 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %615 = load i32, i32* %614, align 8
  br label %628

616:                                              ; preds = %602
  %617 = sub nuw nsw i64 4, %611
  %618 = icmp ult i64 %617, 2
  %619 = select i1 %618, i64 %617, i64 2
  %620 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %620) #6
  store i32 0, i32* %6, align 4
  %621 = getelementptr inbounds i8, i8* %620, i64 %611
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %621, i8* nonnull align 2 %605, i64 %619, i1 false) #6
  %622 = load i32, i32* %6, align 4
  %623 = call i32 @llvm.bswap.i32(i32 %622) #6
  %624 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %625 = load i32, i32* %624, align 8
  %626 = add i32 %625, %623
  store i32 %626, i32* %624, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %620) #6
  %627 = icmp eq i64 %611, 3
  br i1 %627, label %628, label %638

628:                                              ; preds = %616, %613
  %629 = phi i32 [ %626, %616 ], [ %615, %613 ]
  %630 = phi i64 [ %619, %616 ], [ 0, %613 ]
  %631 = phi i64 [ 1, %616 ], [ 2, %613 ]
  %632 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %632)
  store i32 0, i32* %7, align 4
  %633 = getelementptr inbounds i8, i8* %605, i64 %630
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %632, i8* align 1 %633, i64 %631, i1 false) #6
  %634 = load i32, i32* %7, align 4
  %635 = call i32 @llvm.bswap.i32(i32 %634) #6
  %636 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %637 = add i32 %635, %629
  store i32 %637, i32* %636, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %632)
  br label %638

638:                                              ; preds = %616, %628
  %639 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %93, align 8
  %640 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %639, i64 2
  %641 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %640, align 8
  %642 = call zeroext i1 %641(%"class.ots::OTSStream"* %1, i8* nonnull %605, i64 2) #6
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %605)
  br i1 %642, label %643, label %684

643:                                              ; preds = %638
  %644 = getelementptr inbounds %"class.ots::OpenTypeMAXP", %"class.ots::OpenTypeMAXP"* %0, i64 0, i32 15
  %645 = load i16, i16* %644, align 2
  %646 = bitcast i16* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %646)
  %647 = call i16 @llvm.bswap.i16(i16 %645) #6
  store i16 %647, i16* %5, align 2
  %648 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %54, align 8
  %649 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %648, i64 4
  %650 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %649, align 8
  %651 = call i64 %650(%"class.ots::OTSStream"* %1) #6
  %652 = and i64 %651, 3
  %653 = icmp eq i64 %652, 0
  br i1 %653, label %654, label %657

654:                                              ; preds = %643
  %655 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %656 = load i32, i32* %655, align 8
  br label %669

657:                                              ; preds = %643
  %658 = sub nuw nsw i64 4, %652
  %659 = icmp ult i64 %658, 2
  %660 = select i1 %659, i64 %658, i64 2
  %661 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %661) #6
  store i32 0, i32* %3, align 4
  %662 = getelementptr inbounds i8, i8* %661, i64 %652
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %662, i8* nonnull align 2 %646, i64 %660, i1 false) #6
  %663 = load i32, i32* %3, align 4
  %664 = call i32 @llvm.bswap.i32(i32 %663) #6
  %665 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %666 = load i32, i32* %665, align 8
  %667 = add i32 %666, %664
  store i32 %667, i32* %665, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %661) #6
  %668 = icmp eq i64 %652, 3
  br i1 %668, label %669, label %679

669:                                              ; preds = %657, %654
  %670 = phi i32 [ %667, %657 ], [ %656, %654 ]
  %671 = phi i64 [ %660, %657 ], [ 0, %654 ]
  %672 = phi i64 [ 1, %657 ], [ 2, %654 ]
  %673 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %673)
  store i32 0, i32* %4, align 4
  %674 = getelementptr inbounds i8, i8* %646, i64 %671
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %673, i8* align 1 %674, i64 %672, i1 false) #6
  %675 = load i32, i32* %4, align 4
  %676 = call i32 @llvm.bswap.i32(i32 %675) #6
  %677 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %678 = add i32 %676, %670
  store i32 %678, i32* %677, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %673)
  br label %679

679:                                              ; preds = %657, %669
  %680 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %93, align 8
  %681 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %680, i64 2
  %682 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %681, align 8
  %683 = call zeroext i1 %682(%"class.ots::OTSStream"* %1, i8* nonnull %646, i64 2) #6
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %646)
  br i1 %683, label %687, label %684

684:                                              ; preds = %679, %638
  %685 = bitcast %"class.ots::OpenTypeMAXP"* %0 to %"class.ots::Table"*
  %686 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %685, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.9, i64 0, i64 0)) #6
  br label %687

687:                                              ; preds = %679, %142, %684, %599, %309, %139
  %688 = phi i1 [ %686, %684 ], [ %601, %599 ], [ %311, %309 ], [ %141, %139 ], [ true, %142 ], [ true, %679 ]
  ret i1 %688
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ots5TableD2Ev(%"class.ots::Table"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ots12OpenTypeMAXPD0Ev(%"class.ots::OpenTypeMAXP"*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %"class.ots::OpenTypeMAXP"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #7
  ret void
}

declare zeroext i1 @_ZN3ots5Table15ShouldSerializeEv(%"class.ots::Table"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.bswap.i32(i32) #5

; Function Attrs: nounwind readnone speculatable
declare i16 @llvm.bswap.i16(i16) #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
