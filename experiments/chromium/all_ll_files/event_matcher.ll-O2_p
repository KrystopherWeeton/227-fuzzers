; ModuleID = '../../extensions/common/event_matcher.cc'
source_filename = "../../extensions/common/event_matcher.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.extensions::EventMatcher" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::DictionaryValue"* }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.0" }
%"union.absl::variant_internal::DestructibleUnionImpl.0" = type { %"union.absl::variant_internal::DestructibleUnionImpl.1" }
%"union.absl::variant_internal::DestructibleUnionImpl.1" = type { %"union.absl::variant_internal::DestructibleUnionImpl.2" }
%"union.absl::variant_internal::DestructibleUnionImpl.2" = type { %"union.absl::variant_internal::DestructibleUnionImpl.3" }
%"union.absl::variant_internal::DestructibleUnionImpl.3" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.extensions::EventFilteringInfo" = type <{ %"class.absl::optional", %"class.absl::optional.38", %"class.absl::optional.43", %"class.absl::optional.38", %"class.absl::optional.48", [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.31 }
%union.anon.31 = type { %class.GURL }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.32" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %class.GURL* }
%"class.absl::optional.43" = type { %"class.absl::optional_internal::optional_data.44" }
%"class.absl::optional_internal::optional_data.44" = type { %"class.absl::optional_internal::optional_data_base.45" }
%"class.absl::optional_internal::optional_data_base.45" = type { %"class.absl::optional_internal::optional_data_dtor_base.46" }
%"class.absl::optional_internal::optional_data_dtor_base.46" = type { i8, %union.anon.47 }
%union.anon.47 = type { i32 }
%"class.absl::optional.38" = type { %"class.absl::optional_internal::optional_data.39" }
%"class.absl::optional_internal::optional_data.39" = type { %"class.absl::optional_internal::optional_data_base.40" }
%"class.absl::optional_internal::optional_data_base.40" = type { %"class.absl::optional_internal::optional_data_dtor_base.41" }
%"class.absl::optional_internal::optional_data_dtor_base.41" = type { i8, %union.anon.42 }
%union.anon.42 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.48" = type { %"class.absl::optional_internal::optional_data.49" }
%"class.absl::optional_internal::optional_data.49" = type { %"class.absl::optional_internal::optional_data_base.50" }
%"class.absl::optional_internal::optional_data_base.50" = type { %"class.absl::optional_internal::optional_data_dtor_base.51" }
%"class.absl::optional_internal::optional_data_dtor_base.51" = type { i8, %union.anon.52 }
%union.anon.52 = type { i8 }
%"class.base::ListValue" = type { %"class.base::Value" }
%"class.std::__1::vector.22" = type { %"class.std::__1::__vector_base.23" }
%"class.std::__1::__vector_base.23" = type { %"class.base::Value"*, %"class.base::Value"*, %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.base::Value"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN4absl16variant_internal26TypedThrowBadVariantAccessIRKNSt3__16vectorIN4base5ValueENS2_9allocatorIS5_EEEEEET_v = comdat any

@_ZN10extensions26kEventFilterServiceTypeKeyE = hidden constant [12 x i8] c"serviceType\00", align 1
@_ZN12_GLOBAL__N_114kUrlFiltersKeyE = internal constant [4 x i8] c"url\00", align 1
@.str = private unnamed_addr constant [11 x i8] c"instanceId\00", align 1
@_ZN12_GLOBAL__N_115kWindowTypesKeyE = internal constant [12 x i8] c"windowTypes\00", align 1

@_ZN10extensions12EventMatcherC1ENSt3__110unique_ptrIN4base15DictionaryValueENS1_14default_deleteIS4_EEEEi = hidden unnamed_addr alias void (%"class.extensions::EventMatcher"*, %"class.base::DictionaryValue"*, i32), void (%"class.extensions::EventMatcher"*, %"class.base::DictionaryValue"*, i32)* @_ZN10extensions12EventMatcherC2ENSt3__110unique_ptrIN4base15DictionaryValueENS1_14default_deleteIS4_EEEEi
@_ZN10extensions12EventMatcherD1Ev = hidden unnamed_addr alias void (%"class.extensions::EventMatcher"*), void (%"class.extensions::EventMatcher"*)* @_ZN10extensions12EventMatcherD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions12EventMatcherC2ENSt3__110unique_ptrIN4base15DictionaryValueENS1_14default_deleteIS4_EEEEi(%"class.extensions::EventMatcher"* nocapture, %"class.base::DictionaryValue"*, i32) unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.base::DictionaryValue"* %1 to i64
  %5 = bitcast %"class.extensions::EventMatcher"* %0 to i64*
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds %"class.extensions::EventMatcher", %"class.extensions::EventMatcher"* %0, i64 0, i32 1
  store i32 %2, i32* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions12EventMatcherD2Ev(%"class.extensions::EventMatcher"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::EventMatcher", %"class.extensions::EventMatcher"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %2, align 8
  store %"class.base::DictionaryValue"* null, %"class.base::DictionaryValue"** %2, align 8
  %4 = icmp eq %"class.base::DictionaryValue"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %3, i64 0, i32 0
  tail call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %6) #10
  %7 = bitcast %"class.base::DictionaryValue"* %3 to i8*
  tail call void @_ZdlPv(i8* %7) #11
  br label %8

8:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10extensions12EventMatcher19MatchNonURLCriteriaERKNS_18EventFilteringInfoE(%"class.extensions::EventMatcher"* nocapture readonly, %"struct.extensions::EventFilteringInfo"* nocapture readonly dereferenceable(208)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::ListValue"*, align 8
  %4 = alloca %"class.base::ListValue"*, align 8
  %5 = alloca %"class.base::ListValue"*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = getelementptr inbounds %"struct.extensions::EventFilteringInfo", %"struct.extensions::EventFilteringInfo"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %10 = load i8, i8* %9, align 4, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %21, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"struct.extensions::EventFilteringInfo", %"struct.extensions::EventFilteringInfo"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #10
  store i32 0, i32* %6, align 4
  %16 = getelementptr inbounds %"class.extensions::EventMatcher", %"class.extensions::EventMatcher"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %16, align 8
  %18 = call zeroext i1 @_ZNK4base15DictionaryValue10GetIntegerENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(%"class.base::DictionaryValue"* %17, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i64 10, i32* nonnull %6) #10
  %19 = load i32, i32* %6, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #10
  %20 = icmp eq i32 %14, %19
  br label %229

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"struct.extensions::EventFilteringInfo", %"struct.extensions::EventFilteringInfo"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %129, label %25

25:                                               ; preds = %21
  %26 = bitcast %"class.base::ListValue"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #10
  store %"class.base::ListValue"* null, %"class.base::ListValue"** %5, align 8
  %27 = getelementptr inbounds %"class.extensions::EventMatcher", %"class.extensions::EventMatcher"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %27, align 8
  %29 = call zeroext i1 @_ZN4base15DictionaryValue7GetListENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPPNS_9ListValueE(%"class.base::DictionaryValue"* %28, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @_ZN12_GLOBAL__N_115kWindowTypesKeyE, i64 0, i64 0), i64 11, %"class.base::ListValue"** nonnull %5) #10
  br i1 %29, label %31, label %30

30:                                               ; preds = %25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #10
  br label %229

31:                                               ; preds = %25
  %32 = load %"class.base::ListValue"*, %"class.base::ListValue"** %5, align 8
  %33 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, 7
  br i1 %35, label %38, label %36, !prof !3

36:                                               ; preds = %31
  %37 = call dereferenceable(24) %"class.std::__1::vector.22"* @_ZN4absl16variant_internal26TypedThrowBadVariantAccessIRKNSt3__16vectorIN4base5ValueENS2_9allocatorIS5_EEEEEET_v() #12
  unreachable

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.base::ListValue"* %32 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %40, %42
  %44 = lshr exact i64 %43, 5
  %45 = trunc i64 %44 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #10
  %46 = icmp sgt i32 %45, 0
  br i1 %46, label %47, label %229

47:                                               ; preds = %38
  %48 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %51 = bitcast %"class.base::ListValue"** %4 to i8*
  %52 = getelementptr inbounds %"struct.extensions::EventFilteringInfo", %"struct.extensions::EventFilteringInfo"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %53 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  %55 = bitcast %"class.std::__1::basic_string"* %52 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = getelementptr inbounds %"struct.extensions::EventFilteringInfo", %"struct.extensions::EventFilteringInfo"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = bitcast %"class.std::__1::basic_string"* %52 to i8*
  %60 = and i64 %44, 4294967295
  br label %63

61:                                               ; preds = %125
  %62 = icmp eq i64 %128, %60
  br i1 %62, label %229, label %63

63:                                               ; preds = %61, %47
  %64 = phi i64 [ 0, %47 ], [ %128, %61 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 0, i64 24, i1 false) #10
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #10
  store %"class.base::ListValue"* null, %"class.base::ListValue"** %4, align 8
  %65 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %27, align 8
  %66 = call zeroext i1 @_ZN4base15DictionaryValue7GetListENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPPNS_9ListValueE(%"class.base::DictionaryValue"* %65, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @_ZN12_GLOBAL__N_115kWindowTypesKeyE, i64 0, i64 0), i64 11, %"class.base::ListValue"** nonnull %4) #10
  br i1 %66, label %68, label %67

67:                                               ; preds = %63
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #10
  br label %116

68:                                               ; preds = %63
  %69 = load %"class.base::ListValue"*, %"class.base::ListValue"** %4, align 8
  %70 = call zeroext i1 @_ZNK4base9ListValue9GetStringEmPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::ListValue"* %69, i64 %64, %"class.std::__1::basic_string"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #10
  br i1 %70, label %71, label %116

71:                                               ; preds = %68
  %72 = load i8, i8* %22, align 8, !range !2
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %74, label %75, !prof !4

74:                                               ; preds = %71
  call void @llvm.trap() #10
  unreachable

75:                                               ; preds = %71
  %76 = load i8, i8* %54, align 1
  %77 = icmp slt i8 %76, 0
  %78 = load i64, i64* %50, align 8
  %79 = zext i8 %76 to i64
  %80 = select i1 %77, i64 %78, i64 %79
  %81 = load i8, i8* %56, align 1
  %82 = icmp slt i8 %81, 0
  %83 = load i64, i64* %57, align 8
  %84 = zext i8 %81 to i64
  %85 = select i1 %82, i64 %83, i64 %84
  %86 = icmp eq i64 %80, %85
  br i1 %86, label %87, label %116

87:                                               ; preds = %75
  %88 = load i8*, i8** %49, align 8
  %89 = select i1 %77, i8* %88, i8* %48
  %90 = load i8*, i8** %58, align 8
  %91 = select i1 %82, i8* %90, i8* %59
  %92 = icmp eq i64 %80, 0
  br i1 %77, label %100, label %93

93:                                               ; preds = %87
  br i1 %92, label %99, label %94

94:                                               ; preds = %93
  %95 = ptrtoint i8* %88 to i64
  %96 = trunc i64 %95 to i8
  %97 = load i8, i8* %91, align 1
  %98 = icmp eq i8 %97, %96
  br i1 %98, label %101, label %116

99:                                               ; preds = %93
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #10
  br label %229

100:                                              ; preds = %87
  br i1 %92, label %122, label %113

101:                                              ; preds = %94, %108
  %102 = phi i64 [ %105, %108 ], [ %79, %94 ]
  %103 = phi i8* [ %106, %108 ], [ %48, %94 ]
  %104 = phi i8* [ %109, %108 ], [ %91, %94 ]
  %105 = add i64 %102, -1
  %106 = getelementptr inbounds i8, i8* %103, i64 1
  %107 = icmp eq i64 %105, 0
  br i1 %107, label %118, label %108

108:                                              ; preds = %101
  %109 = getelementptr inbounds i8, i8* %104, i64 1
  %110 = load i8, i8* %106, align 1
  %111 = load i8, i8* %109, align 1
  %112 = icmp eq i8 %110, %111
  br i1 %112, label %101, label %116

113:                                              ; preds = %100
  %114 = call i32 @bcmp(i8* %89, i8* %91, i64 %80) #10
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %122, label %116

116:                                              ; preds = %108, %94, %75, %67, %113, %68
  %117 = load i8, i8* %54, align 1
  br label %118

118:                                              ; preds = %101, %116
  %119 = phi i8 [ %117, %116 ], [ %76, %101 ]
  %120 = phi i32 [ 0, %116 ], [ 1, %101 ]
  %121 = icmp slt i8 %119, 0
  br i1 %121, label %122, label %125

122:                                              ; preds = %100, %113, %118
  %123 = phi i32 [ %120, %118 ], [ 1, %113 ], [ 1, %100 ]
  %124 = load i8*, i8** %49, align 8
  call void @_ZdlPv(i8* %124) #11
  br label %125

125:                                              ; preds = %118, %122
  %126 = phi i32 [ %120, %118 ], [ %123, %122 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #10
  %127 = icmp eq i32 %126, 0
  %128 = add nuw nsw i64 %64, 1
  br i1 %127, label %61, label %229

129:                                              ; preds = %21
  %130 = getelementptr inbounds %"struct.extensions::EventFilteringInfo", %"struct.extensions::EventFilteringInfo"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %131 = load i8, i8* %130, align 1, !range !2
  %132 = icmp eq i8 %131, 0
  br i1 %132, label %163, label %133

133:                                              ; preds = %129
  %134 = bitcast %"class.base::ListValue"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %134) #10
  store %"class.base::ListValue"* null, %"class.base::ListValue"** %3, align 8
  %135 = getelementptr inbounds %"class.extensions::EventMatcher", %"class.extensions::EventMatcher"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %135, align 8
  %137 = call zeroext i1 @_ZN4base15DictionaryValue7GetListENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPPNS_9ListValueE(%"class.base::DictionaryValue"* %136, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @_ZN12_GLOBAL__N_115kWindowTypesKeyE, i64 0, i64 0), i64 11, %"class.base::ListValue"** nonnull %3) #10
  br i1 %137, label %139, label %138

138:                                              ; preds = %133
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %134) #10
  br label %155

139:                                              ; preds = %133
  %140 = load %"class.base::ListValue"*, %"class.base::ListValue"** %3, align 8
  %141 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %140, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %142 = load i64, i64* %141, align 8
  %143 = icmp eq i64 %142, 7
  br i1 %143, label %146, label %144, !prof !3

144:                                              ; preds = %139
  %145 = call dereferenceable(24) %"class.std::__1::vector.22"* @_ZN4absl16variant_internal26TypedThrowBadVariantAccessIRKNSt3__16vectorIN4base5ValueENS2_9allocatorIS5_EEEEEET_v() #12
  unreachable

146:                                              ; preds = %139
  %147 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %140, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %148 = load i64, i64* %147, align 8
  %149 = bitcast %"class.base::ListValue"* %140 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = sub i64 %148, %150
  %152 = lshr exact i64 %151, 5
  %153 = trunc i64 %152 to i32
  %154 = icmp eq i32 %153, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %134) #10
  br i1 %154, label %155, label %229

155:                                              ; preds = %146, %138
  %156 = load i8, i8* %130, align 1, !range !2
  %157 = icmp eq i8 %156, 0
  br i1 %157, label %158, label %159, !prof !4

158:                                              ; preds = %155
  call void @llvm.trap() #10
  unreachable

159:                                              ; preds = %155
  %160 = getelementptr inbounds %"struct.extensions::EventFilteringInfo", %"struct.extensions::EventFilteringInfo"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %161 = load i8, i8* %160, align 1, !range !2
  %162 = icmp ne i8 %161, 0
  br label %229

163:                                              ; preds = %129
  %164 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %164) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %164, i8 0, i64 24, i1 false) #10, !alias.scope !5
  %165 = getelementptr inbounds %"class.extensions::EventMatcher", %"class.extensions::EventMatcher"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %166 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %165, align 8, !noalias !5
  %167 = call zeroext i1 @_ZNK4base15DictionaryValue14GetStringASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::DictionaryValue"* %166, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @_ZN10extensions26kEventFilterServiceTypeKeyE, i64 0, i64 0), i64 11, %"class.std::__1::basic_string"* nonnull %8) #10
  %168 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %169 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %168, i64 0, i32 1, i32 0
  %170 = load i8, i8* %169, align 1
  %171 = icmp slt i8 %170, 0
  %172 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %173 = load i64, i64* %172, align 8
  %174 = zext i8 %170 to i64
  %175 = select i1 %171, i64 %173, i64 %174
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %219, label %177

177:                                              ; preds = %163
  %178 = getelementptr inbounds %"struct.extensions::EventFilteringInfo", %"struct.extensions::EventFilteringInfo"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %179 = load i8, i8* %178, align 8, !range !2
  %180 = icmp eq i8 %179, 0
  br i1 %180, label %219, label %181

181:                                              ; preds = %177
  %182 = getelementptr inbounds %"struct.extensions::EventFilteringInfo", %"struct.extensions::EventFilteringInfo"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %183 = bitcast %"class.std::__1::basic_string"* %182 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %184 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %183, i64 0, i32 1, i32 0
  %185 = load i8, i8* %184, align 1
  %186 = icmp slt i8 %185, 0
  %187 = getelementptr inbounds %"struct.extensions::EventFilteringInfo", %"struct.extensions::EventFilteringInfo"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %188 = load i64, i64* %187, align 8
  %189 = zext i8 %185 to i64
  %190 = select i1 %186, i64 %188, i64 %189
  %191 = icmp eq i64 %175, %190
  br i1 %191, label %192, label %219

192:                                              ; preds = %181
  %193 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %194 = load i8*, i8** %193, align 8
  %195 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %182, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load i8*, i8** %195, align 8
  %197 = bitcast %"class.std::__1::basic_string"* %182 to i8*
  %198 = select i1 %186, i8* %196, i8* %197
  br i1 %171, label %204, label %199

199:                                              ; preds = %192
  %200 = ptrtoint i8* %194 to i64
  %201 = trunc i64 %200 to i8
  %202 = load i8, i8* %198, align 1
  %203 = icmp eq i8 %202, %201
  br i1 %203, label %207, label %219

204:                                              ; preds = %192
  %205 = call i32 @bcmp(i8* %194, i8* %198, i64 %175) #10
  %206 = icmp eq i32 %205, 0
  br label %224

207:                                              ; preds = %199, %214
  %208 = phi i64 [ %211, %214 ], [ %174, %199 ]
  %209 = phi i8* [ %212, %214 ], [ %164, %199 ]
  %210 = phi i8* [ %215, %214 ], [ %198, %199 ]
  %211 = add i64 %208, -1
  %212 = getelementptr inbounds i8, i8* %209, i64 1
  %213 = icmp eq i64 %211, 0
  br i1 %213, label %219, label %214

214:                                              ; preds = %207
  %215 = getelementptr inbounds i8, i8* %210, i64 1
  %216 = load i8, i8* %212, align 1
  %217 = load i8, i8* %215, align 1
  %218 = icmp eq i8 %216, %217
  br i1 %218, label %207, label %219

219:                                              ; preds = %214, %207, %199, %177, %181, %163
  %220 = phi i1 [ true, %163 ], [ false, %177 ], [ false, %181 ], [ false, %199 ], [ true, %207 ], [ false, %214 ]
  br i1 %171, label %221, label %227

221:                                              ; preds = %219
  %222 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %223 = load i8*, i8** %222, align 8
  br label %224

224:                                              ; preds = %221, %204
  %225 = phi i8* [ %223, %221 ], [ %194, %204 ]
  %226 = phi i1 [ %220, %221 ], [ %206, %204 ]
  call void @_ZdlPv(i8* %225) #11
  br label %227

227:                                              ; preds = %219, %224
  %228 = phi i1 [ %220, %219 ], [ %226, %224 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %164) #10
  br label %229

229:                                              ; preds = %125, %61, %99, %30, %38, %146, %227, %159, %12
  %230 = phi i1 [ %20, %12 ], [ %162, %159 ], [ %228, %227 ], [ false, %146 ], [ false, %38 ], [ false, %30 ], [ true, %99 ], [ false, %61 ], [ true, %125 ]
  ret i1 %230
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK10extensions12EventMatcher13GetInstanceIDEv(%"class.extensions::EventMatcher"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #10
  store i32 0, i32* %2, align 4
  %4 = getelementptr inbounds %"class.extensions::EventMatcher", %"class.extensions::EventMatcher"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %4, align 8
  %6 = call zeroext i1 @_ZNK4base15DictionaryValue10GetIntegerENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(%"class.base::DictionaryValue"* %5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i64 10, i32* nonnull %2) #10
  %7 = load i32, i32* %2, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #10
  ret i32 %7
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK10extensions12EventMatcher18GetWindowTypeCountEv(%"class.extensions::EventMatcher"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::ListValue"*, align 8
  %3 = bitcast %"class.base::ListValue"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #10
  store %"class.base::ListValue"* null, %"class.base::ListValue"** %2, align 8
  %4 = getelementptr inbounds %"class.extensions::EventMatcher", %"class.extensions::EventMatcher"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %4, align 8
  %6 = call zeroext i1 @_ZN4base15DictionaryValue7GetListENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPPNS_9ListValueE(%"class.base::DictionaryValue"* %5, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @_ZN12_GLOBAL__N_115kWindowTypesKeyE, i64 0, i64 0), i64 11, %"class.base::ListValue"** nonnull %2) #10
  br i1 %6, label %7, label %22

7:                                                ; preds = %1
  %8 = load %"class.base::ListValue"*, %"class.base::ListValue"** %2, align 8
  %9 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 7
  br i1 %11, label %14, label %12, !prof !3

12:                                               ; preds = %7
  %13 = call dereferenceable(24) %"class.std::__1::vector.22"* @_ZN4absl16variant_internal26TypedThrowBadVariantAccessIRKNSt3__16vectorIN4base5ValueENS2_9allocatorIS5_EEEEEET_v() #12
  unreachable

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.base::ListValue"* %8 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = lshr exact i64 %19, 5
  %21 = trunc i64 %20 to i32
  br label %22

22:                                               ; preds = %1, %14
  %23 = phi i32 [ %21, %14 ], [ 0, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #10
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10extensions12EventMatcher13GetWindowTypeEiPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::EventMatcher"* nocapture readonly, i32, %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::ListValue"*, align 8
  %5 = bitcast %"class.base::ListValue"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  store %"class.base::ListValue"* null, %"class.base::ListValue"** %4, align 8
  %6 = getelementptr inbounds %"class.extensions::EventMatcher", %"class.extensions::EventMatcher"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %6, align 8
  %8 = call zeroext i1 @_ZN4base15DictionaryValue7GetListENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPPNS_9ListValueE(%"class.base::DictionaryValue"* %7, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @_ZN12_GLOBAL__N_115kWindowTypesKeyE, i64 0, i64 0), i64 11, %"class.base::ListValue"** nonnull %4) #10
  br i1 %8, label %9, label %13

9:                                                ; preds = %3
  %10 = load %"class.base::ListValue"*, %"class.base::ListValue"** %4, align 8
  %11 = sext i32 %1 to i64
  %12 = call zeroext i1 @_ZNK4base9ListValue9GetStringEmPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::ListValue"* %10, i64 %11, %"class.std::__1::basic_string"* %2) #10
  br label %13

13:                                               ; preds = %3, %9
  %14 = phi i1 [ %12, %9 ], [ false, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  ret i1 %14
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10extensions12EventMatcher14HasWindowTypesEv(%"class.extensions::EventMatcher"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::ListValue"*, align 8
  %3 = bitcast %"class.base::ListValue"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #10
  store %"class.base::ListValue"* null, %"class.base::ListValue"** %2, align 8
  %4 = getelementptr inbounds %"class.extensions::EventMatcher", %"class.extensions::EventMatcher"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %4, align 8
  %6 = call zeroext i1 @_ZN4base15DictionaryValue7GetListENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPPNS_9ListValueE(%"class.base::DictionaryValue"* %5, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @_ZN12_GLOBAL__N_115kWindowTypesKeyE, i64 0, i64 0), i64 11, %"class.base::ListValue"** nonnull %2) #10
  br i1 %6, label %7, label %23

7:                                                ; preds = %1
  %8 = load %"class.base::ListValue"*, %"class.base::ListValue"** %2, align 8
  %9 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 7
  br i1 %11, label %14, label %12, !prof !3

12:                                               ; preds = %7
  %13 = call dereferenceable(24) %"class.std::__1::vector.22"* @_ZN4absl16variant_internal26TypedThrowBadVariantAccessIRKNSt3__16vectorIN4base5ValueENS2_9allocatorIS5_EEEEEET_v() #12
  unreachable

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.base::ListValue"* %8 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = lshr exact i64 %19, 5
  %21 = trunc i64 %20 to i32
  %22 = icmp ne i32 %21, 0
  br label %23

23:                                               ; preds = %1, %14
  %24 = phi i1 [ %22, %14 ], [ false, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #10
  ret i1 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions12EventMatcher20GetServiceTypeFilterEv(%"class.std::__1::basic_string"* noalias sret, %"class.extensions::EventMatcher"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #10
  %4 = getelementptr inbounds %"class.extensions::EventMatcher", %"class.extensions::EventMatcher"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %4, align 8
  %6 = tail call zeroext i1 @_ZNK4base15DictionaryValue14GetStringASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::DictionaryValue"* %5, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @_ZN10extensions26kEventFilterServiceTypeKeyE, i64 0, i64 0), i64 11, %"class.std::__1::basic_string"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK10extensions12EventMatcher17GetURLFilterCountEv(%"class.extensions::EventMatcher"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::ListValue"*, align 8
  %3 = bitcast %"class.base::ListValue"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #10
  store %"class.base::ListValue"* null, %"class.base::ListValue"** %2, align 8
  %4 = getelementptr inbounds %"class.extensions::EventMatcher", %"class.extensions::EventMatcher"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %4, align 8
  %6 = call zeroext i1 @_ZN4base15DictionaryValue7GetListENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPPNS_9ListValueE(%"class.base::DictionaryValue"* %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZN12_GLOBAL__N_114kUrlFiltersKeyE, i64 0, i64 0), i64 3, %"class.base::ListValue"** nonnull %2) #10
  br i1 %6, label %7, label %22

7:                                                ; preds = %1
  %8 = load %"class.base::ListValue"*, %"class.base::ListValue"** %2, align 8
  %9 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 7
  br i1 %11, label %14, label %12, !prof !3

12:                                               ; preds = %7
  %13 = call dereferenceable(24) %"class.std::__1::vector.22"* @_ZN4absl16variant_internal26TypedThrowBadVariantAccessIRKNSt3__16vectorIN4base5ValueENS2_9allocatorIS5_EEEEEET_v() #12
  unreachable

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.base::ListValue"* %8 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = lshr exact i64 %19, 5
  %21 = trunc i64 %20 to i32
  br label %22

22:                                               ; preds = %1, %14
  %23 = phi i32 [ %21, %14 ], [ 0, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #10
  ret i32 %23
}

declare zeroext i1 @_ZN4base15DictionaryValue7GetListENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPPNS_9ListValueE(%"class.base::DictionaryValue"*, i8*, i64, %"class.base::ListValue"**) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10extensions12EventMatcher12GetURLFilterEiPPN4base15DictionaryValueE(%"class.extensions::EventMatcher"* nocapture readonly, i32, %"class.base::DictionaryValue"**) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::ListValue"*, align 8
  %5 = bitcast %"class.base::ListValue"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  store %"class.base::ListValue"* null, %"class.base::ListValue"** %4, align 8
  %6 = getelementptr inbounds %"class.extensions::EventMatcher", %"class.extensions::EventMatcher"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %6, align 8
  %8 = call zeroext i1 @_ZN4base15DictionaryValue7GetListENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPPNS_9ListValueE(%"class.base::DictionaryValue"* %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZN12_GLOBAL__N_114kUrlFiltersKeyE, i64 0, i64 0), i64 3, %"class.base::ListValue"** nonnull %4) #10
  br i1 %8, label %9, label %13

9:                                                ; preds = %3
  %10 = load %"class.base::ListValue"*, %"class.base::ListValue"** %4, align 8
  %11 = sext i32 %1 to i64
  %12 = call zeroext i1 @_ZN4base9ListValue13GetDictionaryEmPPNS_15DictionaryValueE(%"class.base::ListValue"* %10, i64 %11, %"class.base::DictionaryValue"** %2) #10
  br label %13

13:                                               ; preds = %3, %9
  %14 = phi i1 [ %12, %9 ], [ false, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  ret i1 %14
}

declare zeroext i1 @_ZN4base9ListValue13GetDictionaryEmPPNS_15DictionaryValueE(%"class.base::ListValue"*, i64, %"class.base::DictionaryValue"**) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10extensions12EventMatcher13HasURLFiltersEv(%"class.extensions::EventMatcher"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::ListValue"*, align 8
  %3 = bitcast %"class.base::ListValue"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #10
  store %"class.base::ListValue"* null, %"class.base::ListValue"** %2, align 8
  %4 = getelementptr inbounds %"class.extensions::EventMatcher", %"class.extensions::EventMatcher"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %4, align 8
  %6 = call zeroext i1 @_ZN4base15DictionaryValue7GetListENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPPNS_9ListValueE(%"class.base::DictionaryValue"* %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZN12_GLOBAL__N_114kUrlFiltersKeyE, i64 0, i64 0), i64 3, %"class.base::ListValue"** nonnull %2) #10
  br i1 %6, label %7, label %23

7:                                                ; preds = %1
  %8 = load %"class.base::ListValue"*, %"class.base::ListValue"** %2, align 8
  %9 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 7
  br i1 %11, label %14, label %12, !prof !3

12:                                               ; preds = %7
  %13 = call dereferenceable(24) %"class.std::__1::vector.22"* @_ZN4absl16variant_internal26TypedThrowBadVariantAccessIRKNSt3__16vectorIN4base5ValueENS2_9allocatorIS5_EEEEEET_v() #12
  unreachable

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.base::ListValue"* %8 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = lshr exact i64 %19, 5
  %21 = trunc i64 %20 to i32
  %22 = icmp ne i32 %21, 0
  br label %23

23:                                               ; preds = %1, %14
  %24 = phi i1 [ %22, %14 ], [ false, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #10
  ret i1 %24
}

declare zeroext i1 @_ZNK4base15DictionaryValue14GetStringASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::DictionaryValue"*, i8*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK4base15DictionaryValue10GetIntegerENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(%"class.base::DictionaryValue"*, i8*, i64, i32*) local_unnamed_addr #2

declare zeroext i1 @_ZNK4base9ListValue9GetStringEmPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::ListValue"*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK10extensions12EventMatcher12GetRoutingIDEv(%"class.extensions::EventMatcher"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.extensions::EventMatcher", %"class.extensions::EventMatcher"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: noreturn nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::vector.22"* @_ZN4absl16variant_internal26TypedThrowBadVariantAccessIRKNSt3__16vectorIN4base5ValueENS2_9allocatorIS5_EEEEEET_v() local_unnamed_addr #5 comdat {
  tail call void @_ZN4absl16variant_internal21ThrowBadVariantAccessEv() #12
  unreachable
}

; Function Attrs: noreturn
declare void @_ZN4absl16variant_internal21ThrowBadVariantAccessEv() local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN4base5ValueD2Ev(%"class.base::Value"*) unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK10extensions12EventMatcher20GetServiceTypeFilterEv: argument 0"}
!7 = distinct !{!7, !"_ZNK10extensions12EventMatcher20GetServiceTypeFilterEv"}
