; ModuleID = '../../base/deferred_sequenced_task_runner.cc'
source_filename = "../../base/deferred_sequenced_task_runner.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::DeferredSequencedTaskRunner::DeferredTask" = type <{ %"class.base::Location", %"class.base::OnceCallback", %"class.base::TimeDelta", i8, [7 x i8] }>
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::TimeDelta" = type { i64 }
%"class.base::DeferredSequencedTaskRunner" = type { %"class.base::SequencedTaskRunner.base", %"class.base::Lock", i32, i8, %class.scoped_refptr.2, %"class.std::__1::vector" }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1" }>
%"class.base::RefCountedThreadSafe.1" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%class.scoped_refptr.2 = type { %"class.base::SequencedTaskRunner"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.base::DeferredSequencedTaskRunner::DeferredTask"*, %"struct.base::DeferredSequencedTaskRunner::DeferredTask"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1", [4 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN4base27DeferredSequencedTaskRunner12DeferredTaskENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_ = comdat any

@_ZTVN4base27DeferredSequencedTaskRunnerE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.base::DeferredSequencedTaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)* @_ZN4base27DeferredSequencedTaskRunner15PostDelayedTaskERKNS_8LocationENS_12OnceCallbackIFvvEEENS_9TimeDeltaE to i8*), i8* bitcast (void (%"class.base::DeferredSequencedTaskRunner"*)* @_ZN4base27DeferredSequencedTaskRunnerD2Ev to i8*), i8* bitcast (void (%"class.base::DeferredSequencedTaskRunner"*)* @_ZN4base27DeferredSequencedTaskRunnerD0Ev to i8*), i8* bitcast (void (%"class.base::TaskRunner"*)* @_ZNK4base10TaskRunner10OnDestructEv to i8*), i8* bitcast (i1 (%"class.base::DeferredSequencedTaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)* @_ZN4base27DeferredSequencedTaskRunner26PostNonNestableDelayedTaskERKNS_8LocationENS_12OnceCallbackIFvvEEENS_9TimeDeltaE to i8*), i8* bitcast (i1 (%"class.base::DeferredSequencedTaskRunner"*)* @_ZNK4base27DeferredSequencedTaskRunner26RunsTasksInCurrentSequenceEv to i8*)] }, align 8
@.str = private unnamed_addr constant [45 x i8] c"../../base/deferred_sequenced_task_runner.cc\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"task\00", align 1

@_ZN4base27DeferredSequencedTaskRunner12DeferredTaskC1Ev = hidden unnamed_addr alias void (%"struct.base::DeferredSequencedTaskRunner::DeferredTask"*), void (%"struct.base::DeferredSequencedTaskRunner::DeferredTask"*)* @_ZN4base27DeferredSequencedTaskRunner12DeferredTaskC2Ev
@_ZN4base27DeferredSequencedTaskRunner12DeferredTaskC1EOS1_ = hidden unnamed_addr alias void (%"struct.base::DeferredSequencedTaskRunner::DeferredTask"*, %"struct.base::DeferredSequencedTaskRunner::DeferredTask"*), void (%"struct.base::DeferredSequencedTaskRunner::DeferredTask"*, %"struct.base::DeferredSequencedTaskRunner::DeferredTask"*)* @_ZN4base27DeferredSequencedTaskRunner12DeferredTaskC2EOS1_
@_ZN4base27DeferredSequencedTaskRunner12DeferredTaskD1Ev = hidden unnamed_addr alias void (%"struct.base::DeferredSequencedTaskRunner::DeferredTask"*), void (%"struct.base::DeferredSequencedTaskRunner::DeferredTask"*)* @_ZN4base27DeferredSequencedTaskRunner12DeferredTaskD2Ev
@_ZN4base27DeferredSequencedTaskRunnerC1E13scoped_refptrINS_19SequencedTaskRunnerEE = hidden unnamed_addr alias void (%"class.base::DeferredSequencedTaskRunner"*, %"class.base::SequencedTaskRunner"*), void (%"class.base::DeferredSequencedTaskRunner"*, %"class.base::SequencedTaskRunner"*)* @_ZN4base27DeferredSequencedTaskRunnerC2E13scoped_refptrINS_19SequencedTaskRunnerEE
@_ZN4base27DeferredSequencedTaskRunnerC1Ev = hidden unnamed_addr alias void (%"class.base::DeferredSequencedTaskRunner"*), void (%"class.base::DeferredSequencedTaskRunner"*)* @_ZN4base27DeferredSequencedTaskRunnerC2Ev
@_ZN4base27DeferredSequencedTaskRunnerD1Ev = hidden unnamed_addr alias void (%"class.base::DeferredSequencedTaskRunner"*), void (%"class.base::DeferredSequencedTaskRunner"*)* @_ZN4base27DeferredSequencedTaskRunnerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base27DeferredSequencedTaskRunner12DeferredTaskC2Ev(%"struct.base::DeferredSequencedTaskRunner::DeferredTask"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %0, i64 0, i32 0
  tail call void @_ZN4base8LocationC1Ev(%"class.base::Location"* %2) #8
  %3 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = bitcast %"class.base::internal::BindStateBase"** %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 17, i1 false)
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base27DeferredSequencedTaskRunner12DeferredTaskC2EOS1_(%"struct.base::DeferredSequencedTaskRunner::DeferredTask"*, %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %1, i64 0, i32 0
  tail call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* %3, %"class.base::Location"* dereferenceable(32) %4) #8
  %5 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %1, i64 0, i32 1
  %7 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.base::OnceCallback"* %6 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %9, i64* %10, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %7, align 8
  %11 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %0, i64 0, i32 2
  %12 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %1, i64 0, i32 2
  %13 = bitcast %"class.base::TimeDelta"* %11 to i8*
  %14 = bitcast %"class.base::TimeDelta"* %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 9, i1 false)
  ret void
}

declare void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"*, %"class.base::Location"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base27DeferredSequencedTaskRunner12DeferredTaskD2Ev(%"struct.base::DeferredSequencedTaskRunner::DeferredTask"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %2) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(56) %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* @_ZN4base27DeferredSequencedTaskRunner12DeferredTaskaSEOS1_(%"struct.base::DeferredSequencedTaskRunner::DeferredTask"* returned, %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %0 to i8*
  %4 = bitcast %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 32, i1 false)
  %5 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %0, i64 0, i32 1, i32 0
  %6 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %1, i64 0, i32 1, i32 0
  %7 = tail call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %5, %"class.base::internal::CallbackBase"* dereferenceable(8) %6) #8
  %8 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %1, i64 0, i32 2
  %10 = bitcast %"class.base::TimeDelta"* %8 to i8*
  %11 = bitcast %"class.base::TimeDelta"* %9 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 9, i1 false)
  ret %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base27DeferredSequencedTaskRunnerC2E13scoped_refptrINS_19SequencedTaskRunnerEE(%"class.base::DeferredSequencedTaskRunner"*, %"class.base::SequencedTaskRunner"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.base::SequencedTaskRunner"* %1 to i64
  %4 = bitcast %"class.base::DeferredSequencedTaskRunner"* %0 to %"class.base::TaskRunner"*
  tail call void @_ZN4base10TaskRunnerC2Ev(%"class.base::TaskRunner"* %4) #8
  %5 = getelementptr inbounds %"class.base::DeferredSequencedTaskRunner", %"class.base::DeferredSequencedTaskRunner"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4base27DeferredSequencedTaskRunnerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.base::DeferredSequencedTaskRunner", %"class.base::DeferredSequencedTaskRunner"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %6) #8
  %7 = getelementptr inbounds %"class.base::DeferredSequencedTaskRunner", %"class.base::DeferredSequencedTaskRunner"* %0, i64 0, i32 2
  %8 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #8
  store i32 %8, i32* %7, align 8
  %9 = getelementptr inbounds %"class.base::DeferredSequencedTaskRunner", %"class.base::DeferredSequencedTaskRunner"* %0, i64 0, i32 3
  store i8 0, i8* %9, align 4
  %10 = getelementptr inbounds %"class.base::DeferredSequencedTaskRunner", %"class.base::DeferredSequencedTaskRunner"* %0, i64 0, i32 4
  %11 = bitcast %class.scoped_refptr.2* %10 to i64*
  store i64 %3, i64* %11, align 8
  %12 = getelementptr inbounds %"class.base::DeferredSequencedTaskRunner", %"class.base::DeferredSequencedTaskRunner"* %0, i64 0, i32 5
  %13 = bitcast %"class.std::__1::vector"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #8
  ret void
}

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base27DeferredSequencedTaskRunnerC2Ev(%"class.base::DeferredSequencedTaskRunner"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.base::DeferredSequencedTaskRunner"* %0 to %"class.base::TaskRunner"*
  tail call void @_ZN4base10TaskRunnerC2Ev(%"class.base::TaskRunner"* %2) #8
  %3 = getelementptr inbounds %"class.base::DeferredSequencedTaskRunner", %"class.base::DeferredSequencedTaskRunner"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4base27DeferredSequencedTaskRunnerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.base::DeferredSequencedTaskRunner", %"class.base::DeferredSequencedTaskRunner"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %4) #8
  %5 = getelementptr inbounds %"class.base::DeferredSequencedTaskRunner", %"class.base::DeferredSequencedTaskRunner"* %0, i64 0, i32 2
  %6 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #8
  store i32 %6, i32* %5, align 8
  %7 = getelementptr inbounds %"class.base::DeferredSequencedTaskRunner", %"class.base::DeferredSequencedTaskRunner"* %0, i64 0, i32 3
  store i8 0, i8* %7, align 4
  %8 = getelementptr inbounds %"class.base::DeferredSequencedTaskRunner", %"class.base::DeferredSequencedTaskRunner"* %0, i64 0, i32 4, i32 0
  %9 = bitcast %"class.base::SequencedTaskRunner"** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 32, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base27DeferredSequencedTaskRunner15PostDelayedTaskERKNS_8LocationENS_12OnceCallbackIFvvEEENS_9TimeDeltaE(%"class.base::DeferredSequencedTaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"* nocapture, i64) unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = getelementptr inbounds %"class.base::DeferredSequencedTaskRunner", %"class.base::DeferredSequencedTaskRunner"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %7, i64 0, i32 0, i32 0
  %9 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %8) #8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %13, label %11, !prof !2

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %7, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %12) #8
  br label %13

13:                                               ; preds = %4, %11
  %14 = getelementptr inbounds %"class.base::DeferredSequencedTaskRunner", %"class.base::DeferredSequencedTaskRunner"* %0, i64 0, i32 3
  %15 = load i8, i8* %14, align 4, !range !3
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %29, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.base::DeferredSequencedTaskRunner", %"class.base::DeferredSequencedTaskRunner"* %0, i64 0, i32 4, i32 0
  %19 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %18, align 8
  %20 = bitcast %"class.base::SequencedTaskRunner"* %19 to %"class.base::TaskRunner"*
  %21 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %22 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %23, i64* %24, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %21, align 8
  %25 = bitcast %"class.base::SequencedTaskRunner"* %19 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %26 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %25, align 8
  %27 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %26, align 8
  %28 = call zeroext i1 %27(%"class.base::TaskRunner"* %20, %"class.base::Location"* dereferenceable(32) %1, %"class.base::OnceCallback"* nonnull %5, i64 %3) #8
  br label %34

29:                                               ; preds = %13
  %30 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %31 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %32, i64* %33, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %30, align 8
  call void @_ZN4base27DeferredSequencedTaskRunner17QueueDeferredTaskERKNS_8LocationENS_12OnceCallbackIFvvEEENS_9TimeDeltaEb(%"class.base::DeferredSequencedTaskRunner"* %0, %"class.base::Location"* dereferenceable(32) %1, %"class.base::OnceCallback"* nonnull %6, i64 %3, i1 zeroext false)
  br label %34

34:                                               ; preds = %29, %17
  %35 = phi %"class.base::OnceCallback"* [ %6, %29 ], [ %5, %17 ]
  %36 = phi i1 [ true, %29 ], [ %28, %17 ]
  %37 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %35, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %37) #8
  %38 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %8) #8
  ret i1 %36
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base27DeferredSequencedTaskRunner17QueueDeferredTaskERKNS_8LocationENS_12OnceCallbackIFvvEEENS_9TimeDeltaEb(%"class.base::DeferredSequencedTaskRunner"*, %"class.base::Location"* nocapture readonly dereferenceable(32), %"class.base::OnceCallback"*, i64, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"struct.base::DeferredSequencedTaskRunner::DeferredTask", align 8
  %8 = zext i1 %4 to i8
  %9 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %10 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %10, align 8
  %12 = icmp eq %"class.base::internal::BindStateBase"* %11, null
  br i1 %12, label %13, label %16

13:                                               ; preds = %5
  %14 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str, i64 0, i64 0), i32 102, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #8
  %15 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #8
  br label %16

16:                                               ; preds = %5, %13
  %17 = bitcast %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %17) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 56, i1 false)
  %18 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %7, i64 0, i32 0
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %18) #8
  %19 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %20 = bitcast %"class.base::internal::BindStateBase"** %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 17, i1 false) #8
  %21 = bitcast %"class.base::Location"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* align 8 %21, i64 32, i1 false)
  %22 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %7, i64 0, i32 1
  %23 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %22, i64 0, i32 0
  %24 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %23, %"class.base::internal::CallbackBase"* dereferenceable(8) %9) #8
  %25 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %7, i64 0, i32 2, i32 0
  store i64 %3, i64* %25, align 8
  %26 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %7, i64 0, i32 3
  store i8 %8, i8* %26, align 8
  %27 = getelementptr inbounds %"class.base::DeferredSequencedTaskRunner", %"class.base::DeferredSequencedTaskRunner"* %0, i64 0, i32 5, i32 0, i32 1
  %28 = load %"struct.base::DeferredSequencedTaskRunner::DeferredTask"*, %"struct.base::DeferredSequencedTaskRunner::DeferredTask"** %27, align 8
  %29 = getelementptr inbounds %"class.base::DeferredSequencedTaskRunner", %"class.base::DeferredSequencedTaskRunner"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %30 = load %"struct.base::DeferredSequencedTaskRunner::DeferredTask"*, %"struct.base::DeferredSequencedTaskRunner::DeferredTask"** %29, align 8
  %31 = icmp ult %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %28, %30
  br i1 %31, label %32, label %46

32:                                               ; preds = %16
  %33 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %28, i64 0, i32 0
  call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* %33, %"class.base::Location"* nonnull dereferenceable(32) %18) #8
  %34 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %28, i64 0, i32 1
  %35 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %22, i64 0, i32 0, i32 0, i32 0
  %36 = bitcast %"class.base::OnceCallback"* %22 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.base::OnceCallback"* %34 to i64*
  store i64 %37, i64* %38, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %35, align 8
  %39 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %28, i64 0, i32 2
  %40 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %7, i64 0, i32 2
  %41 = bitcast %"class.base::TimeDelta"* %39 to i8*
  %42 = bitcast %"class.base::TimeDelta"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 9, i1 false) #8
  %43 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %28, i64 1
  %44 = ptrtoint %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %43 to i64
  %45 = bitcast %"struct.base::DeferredSequencedTaskRunner::DeferredTask"** %27 to i64*
  store i64 %44, i64* %45, align 8
  br label %48

46:                                               ; preds = %16
  %47 = getelementptr inbounds %"class.base::DeferredSequencedTaskRunner", %"class.base::DeferredSequencedTaskRunner"* %0, i64 0, i32 5
  call void @_ZNSt3__16vectorIN4base27DeferredSequencedTaskRunner12DeferredTaskENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* %47, %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* nonnull dereferenceable(56) %7) #8
  br label %48

48:                                               ; preds = %32, %46
  %49 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %7, i64 0, i32 1, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %49) #8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %17) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4base27DeferredSequencedTaskRunner26RunsTasksInCurrentSequenceEv(%"class.base::DeferredSequencedTaskRunner"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::DeferredSequencedTaskRunner", %"class.base::DeferredSequencedTaskRunner"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %2, i64 0, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %3) #8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %2, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.base::DeferredSequencedTaskRunner", %"class.base::DeferredSequencedTaskRunner"* %0, i64 0, i32 4, i32 0
  %10 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %9, align 8
  %11 = icmp eq %"class.base::SequencedTaskRunner"* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %8
  %13 = bitcast %"class.base::SequencedTaskRunner"* %10 to i1 (%"class.base::SequencedTaskRunner"*)***
  %14 = load i1 (%"class.base::SequencedTaskRunner"*)**, i1 (%"class.base::SequencedTaskRunner"*)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.base::SequencedTaskRunner"*)*, i1 (%"class.base::SequencedTaskRunner"*)** %14, i64 5
  %16 = load i1 (%"class.base::SequencedTaskRunner"*)*, i1 (%"class.base::SequencedTaskRunner"*)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.base::SequencedTaskRunner"* nonnull %10) #8
  br label %23

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.base::DeferredSequencedTaskRunner", %"class.base::DeferredSequencedTaskRunner"* %0, i64 0, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #8
  %22 = icmp eq i32 %20, %21
  br label %23

23:                                               ; preds = %18, %12
  %24 = phi i1 [ %17, %12 ], [ %22, %18 ]
  %25 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #8
  ret i1 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base27DeferredSequencedTaskRunner26PostNonNestableDelayedTaskERKNS_8LocationENS_12OnceCallbackIFvvEEENS_9TimeDeltaE(%"class.base::DeferredSequencedTaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"* nocapture, i64) unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = getelementptr inbounds %"class.base::DeferredSequencedTaskRunner", %"class.base::DeferredSequencedTaskRunner"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %7, i64 0, i32 0, i32 0
  %9 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %8) #8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %13, label %11, !prof !2

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %7, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %12) #8
  br label %13

13:                                               ; preds = %4, %11
  %14 = getelementptr inbounds %"class.base::DeferredSequencedTaskRunner", %"class.base::DeferredSequencedTaskRunner"* %0, i64 0, i32 3
  %15 = load i8, i8* %14, align 4, !range !3
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %29, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.base::DeferredSequencedTaskRunner", %"class.base::DeferredSequencedTaskRunner"* %0, i64 0, i32 4, i32 0
  %19 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %18, align 8
  %20 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %22, i64* %23, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %20, align 8
  %24 = bitcast %"class.base::SequencedTaskRunner"* %19 to i1 (%"class.base::SequencedTaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %25 = load i1 (%"class.base::SequencedTaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::SequencedTaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.base::SequencedTaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::SequencedTaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %25, i64 4
  %27 = load i1 (%"class.base::SequencedTaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::SequencedTaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %26, align 8
  %28 = call zeroext i1 %27(%"class.base::SequencedTaskRunner"* %19, %"class.base::Location"* dereferenceable(32) %1, %"class.base::OnceCallback"* nonnull %5, i64 %3) #8
  br label %34

29:                                               ; preds = %13
  %30 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %31 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %32, i64* %33, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %30, align 8
  call void @_ZN4base27DeferredSequencedTaskRunner17QueueDeferredTaskERKNS_8LocationENS_12OnceCallbackIFvvEEENS_9TimeDeltaEb(%"class.base::DeferredSequencedTaskRunner"* %0, %"class.base::Location"* dereferenceable(32) %1, %"class.base::OnceCallback"* nonnull %6, i64 %3, i1 zeroext true)
  br label %34

34:                                               ; preds = %29, %17
  %35 = phi %"class.base::OnceCallback"* [ %6, %29 ], [ %5, %17 ]
  %36 = phi i1 [ true, %29 ], [ %28, %17 ]
  %37 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %35, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %37) #8
  %38 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %8) #8
  ret i1 %36
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base27DeferredSequencedTaskRunner5StartEv(%"class.base::DeferredSequencedTaskRunner"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::DeferredSequencedTaskRunner", %"class.base::DeferredSequencedTaskRunner"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %2, i64 0, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %3) #8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %2, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  tail call void @_ZN4base27DeferredSequencedTaskRunner9StartImplEv(%"class.base::DeferredSequencedTaskRunner"* %0)
  %9 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base27DeferredSequencedTaskRunner9StartImplEv(%"class.base::DeferredSequencedTaskRunner"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.base::DeferredSequencedTaskRunner", %"class.base::DeferredSequencedTaskRunner"* %0, i64 0, i32 3
  store i8 1, i8* %4, align 4
  %5 = getelementptr inbounds %"class.base::DeferredSequencedTaskRunner", %"class.base::DeferredSequencedTaskRunner"* %0, i64 0, i32 5, i32 0, i32 0
  %6 = load %"struct.base::DeferredSequencedTaskRunner::DeferredTask"*, %"struct.base::DeferredSequencedTaskRunner::DeferredTask"** %5, align 8
  %7 = getelementptr inbounds %"class.base::DeferredSequencedTaskRunner", %"class.base::DeferredSequencedTaskRunner"* %0, i64 0, i32 5, i32 0, i32 1
  %8 = load %"struct.base::DeferredSequencedTaskRunner::DeferredTask"*, %"struct.base::DeferredSequencedTaskRunner::DeferredTask"** %7, align 8
  %9 = icmp eq %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %6, %8
  br i1 %9, label %25, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.base::DeferredSequencedTaskRunner", %"class.base::DeferredSequencedTaskRunner"* %0, i64 0, i32 4, i32 0
  %12 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %13 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %14 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %15 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  br label %27

16:                                               ; preds = %59
  %17 = load %"struct.base::DeferredSequencedTaskRunner::DeferredTask"*, %"struct.base::DeferredSequencedTaskRunner::DeferredTask"** %5, align 8
  %18 = load %"struct.base::DeferredSequencedTaskRunner::DeferredTask"*, %"struct.base::DeferredSequencedTaskRunner::DeferredTask"** %7, align 8
  %19 = icmp eq %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %18, %17
  br i1 %19, label %25, label %20

20:                                               ; preds = %16, %20
  %21 = phi %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* [ %22, %20 ], [ %18, %16 ]
  %22 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %21, i64 -1
  %23 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %21, i64 -1, i32 1, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %23) #8
  %24 = icmp eq %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %22, %17
  br i1 %24, label %25, label %20

25:                                               ; preds = %20, %1, %16
  %26 = phi %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* [ %17, %16 ], [ %6, %1 ], [ %17, %20 ]
  store %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %26, %"struct.base::DeferredSequencedTaskRunner::DeferredTask"** %7, align 8
  ret void

27:                                               ; preds = %10, %59
  %28 = phi %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* [ %6, %10 ], [ %61, %59 ]
  %29 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %28, i64 0, i32 3
  %30 = load i8, i8* %29, align 8, !range !3
  %31 = icmp eq i8 %30, 0
  %32 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %11, align 8
  br i1 %31, label %46, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %28, i64 0, i32 0
  %35 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %28, i64 0, i32 1
  %36 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %35, i64 0, i32 0, i32 0, i32 0
  %37 = bitcast %"class.base::OnceCallback"* %35 to i64*
  %38 = load i64, i64* %37, align 8
  store i64 %38, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %36, align 8
  %39 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %28, i64 0, i32 2, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.base::SequencedTaskRunner"* %32 to i1 (%"class.base::SequencedTaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %42 = load i1 (%"class.base::SequencedTaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::SequencedTaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %41, align 8
  %43 = getelementptr inbounds i1 (%"class.base::SequencedTaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::SequencedTaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %42, i64 4
  %44 = load i1 (%"class.base::SequencedTaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::SequencedTaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %43, align 8
  %45 = call zeroext i1 %44(%"class.base::SequencedTaskRunner"* %32, %"class.base::Location"* dereferenceable(32) %34, %"class.base::OnceCallback"* nonnull %2, i64 %40) #8
  br label %59

46:                                               ; preds = %27
  %47 = bitcast %"class.base::SequencedTaskRunner"* %32 to %"class.base::TaskRunner"*
  %48 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %28, i64 0, i32 0
  %49 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %28, i64 0, i32 1
  %50 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %49, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.base::OnceCallback"* %49 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %50, align 8
  %53 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %28, i64 0, i32 2, i32 0
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.base::SequencedTaskRunner"* %32 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %56 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %55, align 8
  %57 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %56, align 8
  %58 = call zeroext i1 %57(%"class.base::TaskRunner"* %47, %"class.base::Location"* dereferenceable(32) %48, %"class.base::OnceCallback"* nonnull %3, i64 %54) #8
  br label %59

59:                                               ; preds = %46, %33
  %60 = phi %"class.base::internal::CallbackBase"* [ %15, %46 ], [ %13, %33 ]
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %60) #8
  %61 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %28, i64 1
  %62 = icmp eq %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %61, %8
  br i1 %62, label %16, label %27
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base27DeferredSequencedTaskRunner19StartWithTaskRunnerE13scoped_refptrINS_19SequencedTaskRunnerEE(%"class.base::DeferredSequencedTaskRunner"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.base::SequencedTaskRunner"* %1 to i64
  %4 = getelementptr inbounds %"class.base::DeferredSequencedTaskRunner", %"class.base::DeferredSequencedTaskRunner"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %4, i64 0, i32 0, i32 0
  %6 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %5) #8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8, !prof !2

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %4, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %9) #8
  br label %10

10:                                               ; preds = %2, %8
  %11 = getelementptr inbounds %"class.base::DeferredSequencedTaskRunner", %"class.base::DeferredSequencedTaskRunner"* %0, i64 0, i32 4
  %12 = bitcast %class.scoped_refptr.2* %11 to i64*
  %13 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %11, i64 0, i32 0
  %14 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %13, align 8
  store i64 %3, i64* %12, align 8
  %15 = icmp eq %"class.base::SequencedTaskRunner"* %14, null
  br i1 %15, label %24, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %14, i64 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.base::RefCountedThreadSafe.1", %"class.base::RefCountedThreadSafe.1"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw sub i32* %18, i32 1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %24

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.base::RefCountedThreadSafe.1", %"class.base::RefCountedThreadSafe.1"* %17, i64 -2
  %23 = bitcast %"class.base::RefCountedThreadSafe.1"* %22 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %23) #8
  br label %24

24:                                               ; preds = %21, %16, %10
  tail call void @_ZN4base27DeferredSequencedTaskRunner9StartImplEv(%"class.base::DeferredSequencedTaskRunner"* %0)
  %25 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %5) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base27DeferredSequencedTaskRunnerD2Ev(%"class.base::DeferredSequencedTaskRunner"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::DeferredSequencedTaskRunner", %"class.base::DeferredSequencedTaskRunner"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4base27DeferredSequencedTaskRunnerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::DeferredSequencedTaskRunner", %"class.base::DeferredSequencedTaskRunner"* %0, i64 0, i32 5
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"struct.base::DeferredSequencedTaskRunner::DeferredTask"*, %"struct.base::DeferredSequencedTaskRunner::DeferredTask"** %4, align 8
  %6 = icmp eq %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %5, null
  br i1 %6, label %22, label %7

7:                                                ; preds = %1
  %8 = bitcast %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %5 to i8*
  %9 = getelementptr inbounds %"class.base::DeferredSequencedTaskRunner", %"class.base::DeferredSequencedTaskRunner"* %0, i64 0, i32 5, i32 0, i32 1
  %10 = load %"struct.base::DeferredSequencedTaskRunner::DeferredTask"*, %"struct.base::DeferredSequencedTaskRunner::DeferredTask"** %9, align 8
  %11 = icmp eq %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %10, %5
  br i1 %11, label %20, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %13, i64 -1
  %15 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %13, i64 -1, i32 1, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %15) #8
  %16 = icmp eq %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %14, %5
  br i1 %16, label %17, label %12

17:                                               ; preds = %12
  %18 = bitcast %"class.std::__1::vector"* %3 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %17, %7
  %21 = phi i8* [ %19, %17 ], [ %8, %7 ]
  store %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %5, %"struct.base::DeferredSequencedTaskRunner::DeferredTask"** %9, align 8
  tail call void @_ZdlPv(i8* %21) #9
  br label %22

22:                                               ; preds = %1, %20
  %23 = getelementptr inbounds %"class.base::DeferredSequencedTaskRunner", %"class.base::DeferredSequencedTaskRunner"* %0, i64 0, i32 4, i32 0
  %24 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %23, align 8
  %25 = icmp eq %"class.base::SequencedTaskRunner"* %24, null
  br i1 %25, label %34, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %24, i64 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.base::RefCountedThreadSafe.1", %"class.base::RefCountedThreadSafe.1"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = atomicrmw sub i32* %28, i32 1 acq_rel
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %31, label %34

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.base::RefCountedThreadSafe.1", %"class.base::RefCountedThreadSafe.1"* %27, i64 -2
  %33 = bitcast %"class.base::RefCountedThreadSafe.1"* %32 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %33) #8
  br label %34

34:                                               ; preds = %22, %26, %31
  %35 = getelementptr inbounds %"class.base::DeferredSequencedTaskRunner", %"class.base::DeferredSequencedTaskRunner"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %35) #8
  %36 = bitcast %"class.base::DeferredSequencedTaskRunner"* %0 to %"class.base::TaskRunner"*
  tail call void @_ZN4base10TaskRunnerD2Ev(%"class.base::TaskRunner"* %36) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base27DeferredSequencedTaskRunnerD0Ev(%"class.base::DeferredSequencedTaskRunner"*) unnamed_addr #0 align 2 {
  tail call void @_ZN4base27DeferredSequencedTaskRunnerD2Ev(%"class.base::DeferredSequencedTaskRunner"* %0) #8
  %2 = bitcast %"class.base::DeferredSequencedTaskRunner"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZNK4base10TaskRunner10OnDestructEv(%"class.base::TaskRunner"*) unnamed_addr #1

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBase"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN4base10TaskRunnerC2Ev(%"class.base::TaskRunner"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base10TaskRunnerD2Ev(%"class.base::TaskRunner"*) unnamed_addr #3

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #3

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4base27DeferredSequencedTaskRunner12DeferredTaskENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"*, %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* dereferenceable(56)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.base::DeferredSequencedTaskRunner::DeferredTask"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 56
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 329406144173384850
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #10
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.base::DeferredSequencedTaskRunner::DeferredTask"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 56
  %20 = icmp ult i64 %19, 164703072086692425
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 329406144173384850, %14 ]
  %28 = mul i64 %27, 56
  %29 = tail call i8* @_Znwm(i64 %28) #9
  %30 = bitcast i8* %29 to %"struct.base::DeferredSequencedTaskRunner::DeferredTask"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %33, i64 %32
  %36 = ptrtoint %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %35 to i64
  %37 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %34, i64 0, i32 0
  %38 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %1, i64 0, i32 0
  tail call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* %37, %"class.base::Location"* dereferenceable(32) %38) #8
  %39 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %33, i64 %9, i32 1
  %40 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %1, i64 0, i32 1
  %41 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %40, i64 0, i32 0, i32 0, i32 0
  %42 = bitcast %"class.base::OnceCallback"* %40 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.base::OnceCallback"* %39 to i64*
  store i64 %43, i64* %44, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %41, align 8
  %45 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %33, i64 %9, i32 2
  %46 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %1, i64 0, i32 2
  %47 = bitcast %"class.base::TimeDelta"* %45 to i8*
  %48 = bitcast %"class.base::TimeDelta"* %46 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 9, i1 false) #8
  %49 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %34, i64 1
  %50 = ptrtoint %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %49 to i64
  %51 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %52 = load %"struct.base::DeferredSequencedTaskRunner::DeferredTask"*, %"struct.base::DeferredSequencedTaskRunner::DeferredTask"** %51, align 8
  %53 = load %"struct.base::DeferredSequencedTaskRunner::DeferredTask"*, %"struct.base::DeferredSequencedTaskRunner::DeferredTask"** %3, align 8
  %54 = icmp eq %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %53, %52
  br i1 %54, label %55, label %57

55:                                               ; preds = %31
  %56 = ptrtoint %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %52 to i64
  br label %78

57:                                               ; preds = %31, %57
  %58 = phi %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* [ %73, %57 ], [ %34, %31 ]
  %59 = phi %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* [ %60, %57 ], [ %53, %31 ]
  %60 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %59, i64 -1
  %61 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %58, i64 -1, i32 0
  %62 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %60, i64 0, i32 0
  tail call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* %61, %"class.base::Location"* dereferenceable(32) %62) #8
  %63 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %58, i64 -1, i32 1
  %64 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %59, i64 -1, i32 1
  %65 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.base::OnceCallback"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.base::OnceCallback"* %63 to i64*
  store i64 %67, i64* %68, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %65, align 8
  %69 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %58, i64 -1, i32 2
  %70 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %59, i64 -1, i32 2
  %71 = bitcast %"class.base::TimeDelta"* %69 to i8*
  %72 = bitcast %"class.base::TimeDelta"* %70 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 %72, i64 9, i1 false) #8
  %73 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %58, i64 -1
  %74 = icmp eq %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %60, %52
  br i1 %74, label %75, label %57

75:                                               ; preds = %57
  %76 = load i64, i64* %6, align 8
  %77 = load %"struct.base::DeferredSequencedTaskRunner::DeferredTask"*, %"struct.base::DeferredSequencedTaskRunner::DeferredTask"** %3, align 8
  br label %78

78:                                               ; preds = %55, %75
  %79 = phi %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* [ %52, %55 ], [ %77, %75 ]
  %80 = phi %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* [ %34, %55 ], [ %73, %75 ]
  %81 = phi i64 [ %56, %55 ], [ %76, %75 ]
  %82 = ptrtoint %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %80 to i64
  store i64 %82, i64* %6, align 8
  store i64 %50, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %83 = inttoptr i64 %81 to %"struct.base::DeferredSequencedTaskRunner::DeferredTask"*
  %84 = icmp eq %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %79, %83
  br i1 %84, label %90, label %85

85:                                               ; preds = %78, %85
  %86 = phi %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* [ %87, %85 ], [ %79, %78 ]
  %87 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %86, i64 -1
  %88 = getelementptr inbounds %"struct.base::DeferredSequencedTaskRunner::DeferredTask", %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %86, i64 -1, i32 1, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %88) #8
  %89 = icmp eq %"struct.base::DeferredSequencedTaskRunner::DeferredTask"* %87, %83
  br i1 %89, label %90, label %85

90:                                               ; preds = %85, %78
  %91 = icmp eq i64 %81, 0
  br i1 %91, label %94, label %92

92:                                               ; preds = %90
  %93 = inttoptr i64 %81 to i8*
  tail call void @_ZdlPv(i8* %93) #9
  br label %94

94:                                               ; preds = %90, %92
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
