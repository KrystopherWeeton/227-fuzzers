; ModuleID = '../../components/download/public/task/task_manager.cc'
source_filename = "../../components/download/public/task/task_manager.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.download::TaskManager::TaskParams" = type { i8, i8, i32, i64, i64 }

@_ZN8download11TaskManager10TaskParamsC1Ev = hidden unnamed_addr alias void (%"struct.download::TaskManager::TaskParams"*), void (%"struct.download::TaskManager::TaskParams"*)* @_ZN8download11TaskManager10TaskParamsC2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8download11TaskManager10TaskParamsC2Ev(%"struct.download::TaskManager::TaskParams"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.download::TaskManager::TaskParams", %"struct.download::TaskManager::TaskParams"* %0, i64 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"struct.download::TaskManager::TaskParams", %"struct.download::TaskManager::TaskParams"* %0, i64 0, i32 1
  store i8 0, i8* %3, align 1
  %4 = getelementptr inbounds %"struct.download::TaskManager::TaskParams", %"struct.download::TaskManager::TaskParams"* %0, i64 0, i32 2
  %5 = bitcast i32* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %5, i8 0, i64 20, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK8download11TaskManager10TaskParamseqERKS1_(%"struct.download::TaskManager::TaskParams"* nocapture readonly, %"struct.download::TaskManager::TaskParams"* nocapture readonly dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"struct.download::TaskManager::TaskParams", %"struct.download::TaskManager::TaskParams"* %0, i64 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = getelementptr inbounds %"struct.download::TaskManager::TaskParams", %"struct.download::TaskManager::TaskParams"* %1, i64 0, i32 0
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %4, %6
  br i1 %7, label %8, label %32

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.download::TaskManager::TaskParams", %"struct.download::TaskManager::TaskParams"* %0, i64 0, i32 1
  %10 = load i8, i8* %9, align 1, !range !2
  %11 = getelementptr inbounds %"struct.download::TaskManager::TaskParams", %"struct.download::TaskManager::TaskParams"* %1, i64 0, i32 1
  %12 = load i8, i8* %11, align 1, !range !2
  %13 = icmp eq i8 %10, %12
  br i1 %13, label %14, label %32

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.download::TaskManager::TaskParams", %"struct.download::TaskManager::TaskParams"* %0, i64 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"struct.download::TaskManager::TaskParams", %"struct.download::TaskManager::TaskParams"* %1, i64 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %16, %18
  br i1 %19, label %20, label %32

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"struct.download::TaskManager::TaskParams", %"struct.download::TaskManager::TaskParams"* %0, i64 0, i32 3
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"struct.download::TaskManager::TaskParams", %"struct.download::TaskManager::TaskParams"* %1, i64 0, i32 3
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %22, %24
  br i1 %25, label %26, label %32

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"struct.download::TaskManager::TaskParams", %"struct.download::TaskManager::TaskParams"* %0, i64 0, i32 4
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"struct.download::TaskManager::TaskParams", %"struct.download::TaskManager::TaskParams"* %1, i64 0, i32 4
  %30 = load i64, i64* %29, align 8
  %31 = icmp eq i64 %28, %30
  br label %32

32:                                               ; preds = %26, %20, %14, %8, %2
  %33 = phi i1 [ false, %20 ], [ false, %14 ], [ false, %8 ], [ false, %2 ], [ %31, %26 ]
  ret i1 %33
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
