; ModuleID = 'gen/services/viz/public/mojom/compositing/compositor_frame_sink.mojom-test-utils.cc'
source_filename = "gen/services/viz/public/mojom/compositing/compositor_frame_sink.mojom-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.viz::mojom::CompositorFrameSinkAsyncWaiter" = type { %"class.viz::mojom::CompositorFrameSink"* }
%"class.viz::mojom::CompositorFrameSink" = type { i32 (...)** }
%"class.viz::mojom::CompositorFrameSinkClientAsyncWaiter" = type { %"class.viz::mojom::CompositorFrameSinkClient"* }
%"class.viz::mojom::CompositorFrameSinkClient" = type { i32 (...)** }
%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting" = type { %"class.viz::mojom::CompositorFrameSink" }
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.viz::CompositorFrame" = type { %"class.viz::CompositorFrameMetadata", %"class.std::__1::vector.49", %"class.std::__1::vector.70" }
%"class.viz::CompositorFrameMetadata" = type { float, %"class.gfx::Vector2dF", float, %"class.gfx::SizeF", i8, i8, i8, i32, %"class.std::__1::vector", %"class.std::__1::vector.8", %"class.std::__1::vector.15", %"class.viz::FrameDeadline", %"struct.viz::BeginFrameAck", i32, i8, float, %"class.absl::optional.22", %"class.absl::optional.27", i32, %"class.std::__1::unique_ptr", %"class.std::__1::vector.35" }
%"class.gfx::Vector2dF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.ui::LatencyInfo"*, %"class.ui::LatencyInfo"*, %"class.std::__1::__compressed_pair.3" }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.0" }
%"class.std::__1::vector.0" = type { %"class.std::__1::__vector_base.1" }
%"class.std::__1::__vector_base.1" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair" }
%"struct.std::__1::pair" = type { i32, %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::pair"* }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.ui::LatencyInfo"* }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"class.viz::SurfaceRange"*, %"class.viz::SurfaceRange"*, %"class.std::__1::__compressed_pair.10" }
%"class.viz::SurfaceRange" = type { %"class.absl::optional", %"class.viz::SurfaceId" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.viz::SurfaceId" }
%"class.viz::SurfaceId" = type { %"class.viz::FrameSinkId", %"class.viz::LocalSurfaceId" }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.viz::SurfaceRange"* }
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"*, %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.viz::SurfaceId"* }
%"class.viz::FrameDeadline" = type <{ %"class.base::TimeTicks", i32, [4 x i8], %"class.base::TimeDelta", i8, [7 x i8] }>
%"class.base::TimeDelta" = type { i64 }
%"struct.viz::BeginFrameAck" = type <{ %"struct.viz::BeginFrameId", i64, i8, [7 x i8] }>
%"struct.viz::BeginFrameId" = type { i64, i64 }
%"class.absl::optional.22" = type { %"class.absl::optional_internal::optional_data.23" }
%"class.absl::optional_internal::optional_data.23" = type { %"class.absl::optional_internal::optional_data_base.24" }
%"class.absl::optional_internal::optional_data_base.24" = type { %"class.absl::optional_internal::optional_data_dtor_base.25" }
%"class.absl::optional_internal::optional_data_dtor_base.25" = type { i8, %union.anon.26 }
%union.anon.26 = type { float }
%"class.absl::optional.27" = type { %"class.absl::optional_internal::optional_data.28" }
%"class.absl::optional_internal::optional_data.28" = type { %"class.absl::optional_internal::optional_data_base.29" }
%"class.absl::optional_internal::optional_data_base.29" = type { %"class.absl::optional_internal::optional_data_dtor_base.30" }
%"class.absl::optional_internal::optional_data_dtor_base.30" = type { i8, %union.anon.31 }
%union.anon.31 = type { %"class.base::TimeDelta" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.gfx::DelegatedInkMetadata"* }
%"class.gfx::DelegatedInkMetadata" = type <{ %"class.gfx::PointF", double, i32, [4 x i8], %"class.base::TimeTicks", %"class.gfx::RectF", %"class.base::TimeTicks", i8, [7 x i8] }>
%"class.gfx::PointF" = type { float, float }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { %"class.viz::CompositorFrameTransitionDirective"*, %"class.viz::CompositorFrameTransitionDirective"*, %"class.std::__1::__compressed_pair.44" }
%"class.viz::CompositorFrameTransitionDirective" = type { i32, i32, i32, %"class.std::__1::vector.37" }
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { %"class.util::IdType"*, %"class.util::IdType"*, %"class.std::__1::__compressed_pair.39" }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.util::IdType"* }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.viz::CompositorFrameTransitionDirective"* }
%"class.std::__1::vector.49" = type { %"class.std::__1::__vector_base.50" }
%"class.std::__1::__vector_base.50" = type { %"struct.viz::TransferableResource"*, %"struct.viz::TransferableResource"*, %"class.std::__1::__compressed_pair.65" }
%"struct.viz::TransferableResource" = type { %"class.util::IdType.51", i8, %"class.gfx::Size", i32, [4 x i8], %"struct.gpu::MailboxHolder", %"class.gfx::ColorSpace", %"class.absl::optional.55", i8, i32, i8, [7 x i8], %"class.absl::optional.60" }
%"class.util::IdType.51" = type { %"class.base::StrongAlias.52" }
%"class.base::StrongAlias.52" = type { i32 }
%"class.gfx::Size" = type { i32, i32 }
%"struct.gpu::MailboxHolder" = type <{ %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", i32, [4 x i8] }>
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType.53", i64 }
%"class.util::IdType.53" = type { %"class.base::StrongAlias.54" }
%"class.base::StrongAlias.54" = type { i64 }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional.55" = type { %"class.absl::optional_internal::optional_data.56" }
%"class.absl::optional_internal::optional_data.56" = type { %"class.absl::optional_internal::optional_data_base.57" }
%"class.absl::optional_internal::optional_data_base.57" = type { %"class.absl::optional_internal::optional_data_dtor_base.58" }
%"class.absl::optional_internal::optional_data_dtor_base.58" = type { i8, %union.anon.59 }
%union.anon.59 = type { %"struct.gfx::HDRMetadata" }
%"struct.gfx::HDRMetadata" = type { %"struct.gfx::MasteringMetadata", i32, i32 }
%"struct.gfx::MasteringMetadata" = type { %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", float, float }
%"class.absl::optional.60" = type { %"class.absl::optional_internal::optional_data.61" }
%"class.absl::optional_internal::optional_data.61" = type { %"class.absl::optional_internal::optional_data_base.62" }
%"class.absl::optional_internal::optional_data_base.62" = type { %"class.absl::optional_internal::optional_data_dtor_base.63" }
%"class.absl::optional_internal::optional_data_dtor_base.63" = type { i8, [7 x i8], %union.anon.64 }
%union.anon.64 = type { %"struct.gpu::VulkanYCbCrInfo" }
%"struct.gpu::VulkanYCbCrInfo" = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"struct.viz::TransferableResource"* }
%"class.std::__1::vector.70" = type { %"class.std::__1::__vector_base.71" }
%"class.std::__1::__vector_base.71" = type { %"class.std::__1::unique_ptr.72"*, %"class.std::__1::unique_ptr.72"*, %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.viz::CompositorRenderPass"* }
%"class.viz::CompositorRenderPass" = type <{ %"class.viz::RenderPassInternal", %"class.util::IdType", %"class.viz::SubtreeCaptureId", %"class.gfx::Size", [4 x i8] }>
%"class.viz::RenderPassInternal" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Transform", %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.96", i8, i8, i8, i8, %"class.std::__1::vector.101", %"class.viz::QuadList", %"class.cc::ListContainer.132" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.75" }
%"class.std::__1::vector.75" = type { %"class.std::__1::__vector_base.76" }
%"class.std::__1::__vector_base.76" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.91" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp, [20 x float], i32, [4 x i8], %"class.std::__1::vector.84", i32, [4 x i8] }>
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.78, i32, %"class.absl::optional.79", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.77" }
%"struct.std::__1::__atomic_base.77" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.78 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.79" = type { %"class.absl::optional_internal::optional_data.80" }
%"class.absl::optional_internal::optional_data.80" = type { %"class.absl::optional_internal::optional_data_base.81" }
%"class.absl::optional_internal::optional_data_base.81" = type { %"class.absl::optional_internal::optional_data_dtor_base.82" }
%"class.absl::optional_internal::optional_data_dtor_base.82" = type { i8, %union.anon.83 }
%union.anon.83 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::vector.84" = type { %"class.std::__1::__vector_base.85" }
%"class.std::__1::__vector_base.85" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.96" = type { %"class.absl::optional_internal::optional_data.97" }
%"class.absl::optional_internal::optional_data.97" = type { %"class.absl::optional_internal::optional_data_base.98" }
%"class.absl::optional_internal::optional_data_base.98" = type { %"class.absl::optional_internal::optional_data_dtor_base.99" }
%"class.absl::optional_internal::optional_data_dtor_base.99" = type { i8, %union.anon.100 }
%union.anon.100 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.std::__1::vector.101" = type { %"class.std::__1::__vector_base.102" }
%"class.std::__1::__vector_base.102" = type { %"class.std::__1::unique_ptr.103"*, %"class.std::__1::unique_ptr.103"*, %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.viz::CopyOutputRequest"* }
%"class.viz::CopyOutputRequest" = type { i8, %"class.base::OnceCallback", %class.scoped_refptr.106, %"class.gfx::Vector2d", %"class.gfx::Vector2d", %"class.absl::optional.108", %"class.absl::optional.113", %"class.absl::optional.113" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%class.scoped_refptr.106 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.107" }>
%"class.base::RefCountedThreadSafe.107" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.gfx::Vector2d" = type { i32, i32 }
%"class.absl::optional.108" = type { %"class.absl::optional_internal::optional_data.109" }
%"class.absl::optional_internal::optional_data.109" = type { %"class.absl::optional_internal::optional_data_base.110" }
%"class.absl::optional_internal::optional_data_base.110" = type { %"class.absl::optional_internal::optional_data_dtor_base.111" }
%"class.absl::optional_internal::optional_data_dtor_base.111" = type { i8, %union.anon.112 }
%union.anon.112 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.113" = type { %"class.absl::optional_internal::optional_data.114" }
%"class.absl::optional_internal::optional_data.114" = type { %"class.absl::optional_internal::optional_data_base.115" }
%"class.absl::optional_internal::optional_data_base.115" = type { %"class.absl::optional_internal::optional_data_dtor_base.116" }
%"class.absl::optional_internal::optional_data_dtor_base.116" = type { i8, %union.anon.117 }
%union.anon.117 = type { %"class.gfx::Rect" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.std::__1::unique_ptr.103"* }
%"class.viz::QuadList" = type { %"class.cc::ListContainer" }
%"class.cc::ListContainer" = type { %"class.cc::ListContainerHelper" }
%"class.cc::ListContainerHelper" = type { %"class.std::__1::unique_ptr.126" }
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.cc::ListContainerHelper::CharAllocator"* }
%"class.cc::ListContainerHelper::CharAllocator" = type opaque
%"class.cc::ListContainer.132" = type { %"class.cc::ListContainerHelper" }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.std::__1::unique_ptr.72"* }
%"class.absl::optional.141" = type { %"class.absl::optional_internal::optional_data.142" }
%"class.absl::optional_internal::optional_data.142" = type { %"class.absl::optional_internal::optional_data_base.143" }
%"class.absl::optional_internal::optional_data_base.143" = type { %"class.absl::optional_internal::optional_data_dtor_base.144" }
%"class.absl::optional_internal::optional_data_dtor_base.144" = type { i8, %union.anon.145 }
%union.anon.145 = type { %"struct.viz::HitTestRegionList" }
%"struct.viz::HitTestRegionList" = type { i32, i32, %"class.gfx::Rect", %"class.gfx::Transform", %"class.std::__1::vector.146" }
%"class.std::__1::vector.146" = type { %"class.std::__1::__vector_base.147" }
%"class.std::__1::__vector_base.147" = type { %"struct.viz::HitTestRegion"*, %"struct.viz::HitTestRegion"*, %"class.std::__1::__compressed_pair.148" }
%"struct.viz::HitTestRegion" = type { i32, i32, %"class.viz::FrameSinkId", %"class.gfx::Rect", %"class.gfx::Transform" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"struct.viz::HitTestRegion"* }
%"class.base::OnceCallback.153" = type { %"class.base::internal::CallbackBase" }
%"class.base::ReadOnlySharedMemoryRegion" = type { %"class.base::subtle::PlatformSharedMemoryRegion" }
%"class.base::subtle::PlatformSharedMemoryRegion" = type { %"struct.base::subtle::ScopedFDPair", i32, i64, %"class.base::UnguessableToken" }
%"struct.base::subtle::ScopedFDPair" = type { %"class.base::ScopedGeneric", %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.std::__1::vector.154" = type { %"class.std::__1::__vector_base.155" }
%"class.std::__1::__vector_base.155" = type { %"struct.viz::ReturnedResource"*, %"struct.viz::ReturnedResource"*, %"class.std::__1::__compressed_pair.156" }
%"struct.viz::ReturnedResource" = type <{ %"class.util::IdType.51", [4 x i8], %"struct.gpu::SyncToken", %"struct.gfx::GpuFenceHandle", i32, i8, [3 x i8] }>
%"struct.gfx::GpuFenceHandle" = type { %"class.base::ScopedGeneric" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.viz::ReturnedResource"* }
%"class.base::RunLoop" = type { %"class.base::RunLoop::Delegate"*, i32, i8, i8, i8, i8, i8, %class.scoped_refptr.175, %"class.base::WeakPtrFactory" }
%"class.base::RunLoop::Delegate" = type <{ i32 (...)**, %"class.std::__1::stack", %"class.base::ObserverList", i8, [7 x i8] }>
%"class.std::__1::stack" = type { %"class.std::__1::vector.161" }
%"class.std::__1::vector.161" = type { %"class.std::__1::__vector_base.162" }
%"class.std::__1::__vector_base.162" = type { %"class.base::RunLoop"**, %"class.base::RunLoop"**, %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.base::RunLoop"** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.168", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.168" = type { %"class.std::__1::__vector_base.169" }
%"class.std::__1::__vector_base.169" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.170" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%class.scoped_refptr.175 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.176 }
%class.scoped_refptr.176 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.177", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.177" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.178" }
%"struct.std::__1::atomic.178" = type { %"struct.std::__1::__atomic_base.179" }
%"struct.std::__1::__atomic_base.179" = type { %"struct.std::__1::__atomic_base.180" }
%"struct.std::__1::__atomic_base.180" = type { %"struct.std::__1::__cxx_atomic_impl.181" }
%"struct.std::__1::__cxx_atomic_impl.181" = type { %"struct.std::__1::__cxx_atomic_base_impl.182" }
%"struct.std::__1::__cxx_atomic_base_impl.182" = type { i8 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting" = type { %"class.viz::mojom::CompositorFrameSinkClient" }
%"struct.viz::BeginFrameArgs" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", %"struct.viz::BeginFrameId", i64, i32, i8, i8, i64 }
%"class.base::flat_map.183" = type { %"class.base::internal::flat_tree.184" }
%"class.base::internal::flat_tree.184" = type { %"class.std::__1::vector.185" }
%"class.std::__1::vector.185" = type { %"class.std::__1::__vector_base.186" }
%"class.std::__1::__vector_base.186" = type { %"struct.std::__1::pair.187"*, %"struct.std::__1::pair.187"*, %"class.std::__1::__compressed_pair.188" }
%"struct.std::__1::pair.187" = type opaque
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"struct.std::__1::pair.187"* }

$_ZN3viz5mojom19CompositorFrameSinkD2Ev = comdat any

$_ZN3viz5mojom40CompositorFrameSinkInterceptorForTestingD0Ev = comdat any

$_ZN3viz5mojom25CompositorFrameSinkClientD2Ev = comdat any

$_ZN3viz5mojom46CompositorFrameSinkClientInterceptorForTestingD0Ev = comdat any

@.str = private unnamed_addr constant [26 x i8] c"SubmitCompositorFrameSync\00", align 1
@.str.1 = private unnamed_addr constant [84 x i8] c"gen/services/viz/public/mojom/compositing/compositor_frame_sink.mojom-test-utils.cc\00", align 1
@_ZTVN3viz5mojom40CompositorFrameSinkInterceptorForTestingE = hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.viz::mojom::CompositorFrameSink"*)* @_ZN3viz5mojom19CompositorFrameSinkD2Ev to i8*), i8* bitcast (void (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)* @_ZN3viz5mojom40CompositorFrameSinkInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*, i1)* @_ZN3viz5mojom40CompositorFrameSinkInterceptorForTesting18SetNeedsBeginFrameEb to i8*), i8* bitcast (void (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)* @_ZN3viz5mojom40CompositorFrameSinkInterceptorForTesting30SetWantsAnimateOnlyBeginFramesEv to i8*), i8* bitcast (void (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*, %"class.viz::LocalSurfaceId"*, %"class.viz::CompositorFrame"*, %"class.absl::optional.141"*, i64)* @_ZN3viz5mojom40CompositorFrameSinkInterceptorForTesting21SubmitCompositorFrameERKNS_14LocalSurfaceIdENS_15CompositorFrameEN4absl8optionalINS_17HitTestRegionListEEEm to i8*), i8* bitcast (i1 (%"class.viz::mojom::CompositorFrameSink"*, %"class.viz::LocalSurfaceId"*, %"class.viz::CompositorFrame"*, %"class.absl::optional.141"*, i64, %"class.std::__1::vector.154"*)* @_ZN3viz5mojom19CompositorFrameSink25SubmitCompositorFrameSyncERKNS_14LocalSurfaceIdENS_15CompositorFrameEN4absl8optionalINS_17HitTestRegionListEEEmPNSt3__16vectorINS_16ReturnedResourceENSA_9allocatorISC_EEEE to i8*), i8* bitcast (void (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*, %"class.viz::LocalSurfaceId"*, %"class.viz::CompositorFrame"*, %"class.absl::optional.141"*, i64, %"class.base::OnceCallback.153"*)* @_ZN3viz5mojom40CompositorFrameSinkInterceptorForTesting25SubmitCompositorFrameSyncERKNS_14LocalSurfaceIdENS_15CompositorFrameEN4absl8optionalINS_17HitTestRegionListEEEmN4base12OnceCallbackIFvNSt3__16vectorINS_16ReturnedResourceENSC_9allocatorISE_EEEEEEE to i8*), i8* bitcast (void (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*, %"struct.viz::BeginFrameAck"*)* @_ZN3viz5mojom40CompositorFrameSinkInterceptorForTesting18DidNotProduceFrameERKNS_13BeginFrameAckE to i8*), i8* bitcast (void (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*, %"class.base::ReadOnlySharedMemoryRegion"*, %"struct.gpu::Mailbox"*)* @_ZN3viz5mojom40CompositorFrameSinkInterceptorForTesting23DidAllocateSharedBitmapEN4base26ReadOnlySharedMemoryRegionERKN3gpu7MailboxE to i8*), i8* bitcast (void (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*, %"struct.gpu::Mailbox"*)* @_ZN3viz5mojom40CompositorFrameSinkInterceptorForTesting21DidDeleteSharedBitmapERKN3gpu7MailboxE to i8*), i8* bitcast (void (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*, i32)* @_ZN3viz5mojom40CompositorFrameSinkInterceptorForTesting33InitializeCompositorFrameSinkTypeENS0_23CompositorFrameSinkTypeE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN3viz5mojom46CompositorFrameSinkClientInterceptorForTestingE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.viz::mojom::CompositorFrameSinkClient"*)* @_ZN3viz5mojom25CompositorFrameSinkClientD2Ev to i8*), i8* bitcast (void (%"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"*)* @_ZN3viz5mojom46CompositorFrameSinkClientInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"*, %"class.std::__1::vector.154"*)* @_ZN3viz5mojom46CompositorFrameSinkClientInterceptorForTesting28DidReceiveCompositorFrameAckENSt3__16vectorINS_16ReturnedResourceENS2_9allocatorIS4_EEEE to i8*), i8* bitcast (void (%"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"*, %"struct.viz::BeginFrameArgs"*, %"class.base::flat_map.183"*)* @_ZN3viz5mojom46CompositorFrameSinkClientInterceptorForTesting12OnBeginFrameERKNS_14BeginFrameArgsERKN4base8flat_mapIjNS_18FrameTimingDetailsENSt3__14lessIvEENS8_6vectorINS8_4pairIjS7_EENS8_9allocatorISD_EEEEEE to i8*), i8* bitcast (void (%"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"*, i1)* @_ZN3viz5mojom46CompositorFrameSinkClientInterceptorForTesting25OnBeginFramePausedChangedEb to i8*), i8* bitcast (void (%"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"*, %"class.std::__1::vector.154"*)* @_ZN3viz5mojom46CompositorFrameSinkClientInterceptorForTesting16ReclaimResourcesENSt3__16vectorINS_16ReturnedResourceENS2_9allocatorIS4_EEEE to i8*), i8* bitcast (void (%"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"*, i32)* @_ZN3viz5mojom46CompositorFrameSinkClientInterceptorForTesting45OnCompositorFrameTransitionDirectiveProcessedEj to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN3viz5mojom30CompositorFrameSinkAsyncWaiterC1EPNS0_19CompositorFrameSinkE = hidden unnamed_addr alias void (%"class.viz::mojom::CompositorFrameSinkAsyncWaiter"*, %"class.viz::mojom::CompositorFrameSink"*), void (%"class.viz::mojom::CompositorFrameSinkAsyncWaiter"*, %"class.viz::mojom::CompositorFrameSink"*)* @_ZN3viz5mojom30CompositorFrameSinkAsyncWaiterC2EPNS0_19CompositorFrameSinkE
@_ZN3viz5mojom30CompositorFrameSinkAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.viz::mojom::CompositorFrameSinkAsyncWaiter"*), void (%"class.viz::mojom::CompositorFrameSinkAsyncWaiter"*)* @_ZN3viz5mojom30CompositorFrameSinkAsyncWaiterD2Ev
@_ZN3viz5mojom36CompositorFrameSinkClientAsyncWaiterC1EPNS0_25CompositorFrameSinkClientE = hidden unnamed_addr alias void (%"class.viz::mojom::CompositorFrameSinkClientAsyncWaiter"*, %"class.viz::mojom::CompositorFrameSinkClient"*), void (%"class.viz::mojom::CompositorFrameSinkClientAsyncWaiter"*, %"class.viz::mojom::CompositorFrameSinkClient"*)* @_ZN3viz5mojom36CompositorFrameSinkClientAsyncWaiterC2EPNS0_25CompositorFrameSinkClientE
@_ZN3viz5mojom36CompositorFrameSinkClientAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.viz::mojom::CompositorFrameSinkClientAsyncWaiter"*), void (%"class.viz::mojom::CompositorFrameSinkClientAsyncWaiter"*)* @_ZN3viz5mojom36CompositorFrameSinkClientAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom40CompositorFrameSinkInterceptorForTesting18SetNeedsBeginFrameEb(%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"* %0 to %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)***
  %4 = load %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)**, %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)*, %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)** %4, i64 11
  %6 = load %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)*, %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.viz::mojom::CompositorFrameSink"* %6(%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"* %0) #10
  %8 = bitcast %"class.viz::mojom::CompositorFrameSink"* %7 to void (%"class.viz::mojom::CompositorFrameSink"*, i1)***
  %9 = load void (%"class.viz::mojom::CompositorFrameSink"*, i1)**, void (%"class.viz::mojom::CompositorFrameSink"*, i1)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.viz::mojom::CompositorFrameSink"*, i1)*, void (%"class.viz::mojom::CompositorFrameSink"*, i1)** %9, i64 2
  %11 = load void (%"class.viz::mojom::CompositorFrameSink"*, i1)*, void (%"class.viz::mojom::CompositorFrameSink"*, i1)** %10, align 8
  tail call void %11(%"class.viz::mojom::CompositorFrameSink"* %7, i1 zeroext %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom40CompositorFrameSinkInterceptorForTesting30SetWantsAnimateOnlyBeginFramesEv(%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"* %0 to %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)***
  %3 = load %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)**, %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)*, %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)** %3, i64 11
  %5 = load %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)*, %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)** %4, align 8
  %6 = tail call %"class.viz::mojom::CompositorFrameSink"* %5(%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"* %0) #10
  %7 = bitcast %"class.viz::mojom::CompositorFrameSink"* %6 to void (%"class.viz::mojom::CompositorFrameSink"*)***
  %8 = load void (%"class.viz::mojom::CompositorFrameSink"*)**, void (%"class.viz::mojom::CompositorFrameSink"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.viz::mojom::CompositorFrameSink"*)*, void (%"class.viz::mojom::CompositorFrameSink"*)** %8, i64 3
  %10 = load void (%"class.viz::mojom::CompositorFrameSink"*)*, void (%"class.viz::mojom::CompositorFrameSink"*)** %9, align 8
  tail call void %10(%"class.viz::mojom::CompositorFrameSink"* %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom40CompositorFrameSinkInterceptorForTesting21SubmitCompositorFrameERKNS_14LocalSurfaceIdENS_15CompositorFrameEN4absl8optionalINS_17HitTestRegionListEEEm(%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*, %"class.viz::LocalSurfaceId"* dereferenceable(24), %"class.viz::CompositorFrame"*, %"class.absl::optional.141"*, i64) unnamed_addr #0 align 2 {
  %6 = alloca %"class.viz::CompositorFrame", align 8
  %7 = alloca %"class.absl::optional.141", align 8
  %8 = bitcast %"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"* %0 to %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)***
  %9 = load %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)**, %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)*, %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)** %9, i64 11
  %11 = load %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)*, %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)** %10, align 8
  %12 = tail call %"class.viz::mojom::CompositorFrameSink"* %11(%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"* %0) #10
  call void @_ZN3viz15CompositorFrameC1EOS0_(%"class.viz::CompositorFrame"* nonnull %6, %"class.viz::CompositorFrame"* dereferenceable(296) %2) #10
  %13 = getelementptr inbounds %"class.absl::optional.141", %"class.absl::optional.141"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.absl::optional.141", %"class.absl::optional.141"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 128, i1 false) #10
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.absl::optional.141", %"class.absl::optional.141"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %19 = getelementptr inbounds %"class.absl::optional.141", %"class.absl::optional.141"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3viz17HitTestRegionListC1EOS0_(%"struct.viz::HitTestRegionList"* %19, %"struct.viz::HitTestRegionList"* dereferenceable(120) %18) #10
  store i8 1, i8* %13, align 8
  br label %20

20:                                               ; preds = %5, %17
  %21 = bitcast %"class.viz::mojom::CompositorFrameSink"* %12 to void (%"class.viz::mojom::CompositorFrameSink"*, %"class.viz::LocalSurfaceId"*, %"class.viz::CompositorFrame"*, %"class.absl::optional.141"*, i64)***
  %22 = load void (%"class.viz::mojom::CompositorFrameSink"*, %"class.viz::LocalSurfaceId"*, %"class.viz::CompositorFrame"*, %"class.absl::optional.141"*, i64)**, void (%"class.viz::mojom::CompositorFrameSink"*, %"class.viz::LocalSurfaceId"*, %"class.viz::CompositorFrame"*, %"class.absl::optional.141"*, i64)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.viz::mojom::CompositorFrameSink"*, %"class.viz::LocalSurfaceId"*, %"class.viz::CompositorFrame"*, %"class.absl::optional.141"*, i64)*, void (%"class.viz::mojom::CompositorFrameSink"*, %"class.viz::LocalSurfaceId"*, %"class.viz::CompositorFrame"*, %"class.absl::optional.141"*, i64)** %22, i64 4
  %24 = load void (%"class.viz::mojom::CompositorFrameSink"*, %"class.viz::LocalSurfaceId"*, %"class.viz::CompositorFrame"*, %"class.absl::optional.141"*, i64)*, void (%"class.viz::mojom::CompositorFrameSink"*, %"class.viz::LocalSurfaceId"*, %"class.viz::CompositorFrame"*, %"class.absl::optional.141"*, i64)** %23, align 8
  call void %24(%"class.viz::mojom::CompositorFrameSink"* %12, %"class.viz::LocalSurfaceId"* dereferenceable(24) %1, %"class.viz::CompositorFrame"* nonnull %6, %"class.absl::optional.141"* nonnull %7, i64 %4) #10
  %25 = load i8, i8* %13, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %29, label %27

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.absl::optional.141", %"class.absl::optional.141"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3viz17HitTestRegionListD1Ev(%"struct.viz::HitTestRegionList"* %28) #10
  store i8 0, i8* %13, align 8
  br label %29

29:                                               ; preds = %20, %27
  call void @_ZN3viz15CompositorFrameD1Ev(%"class.viz::CompositorFrame"* nonnull %6) #10
  ret void
}

declare void @_ZN3viz15CompositorFrameC1EOS0_(%"class.viz::CompositorFrame"*, %"class.viz::CompositorFrame"* dereferenceable(296)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3viz15CompositorFrameD1Ev(%"class.viz::CompositorFrame"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom40CompositorFrameSinkInterceptorForTesting25SubmitCompositorFrameSyncERKNS_14LocalSurfaceIdENS_15CompositorFrameEN4absl8optionalINS_17HitTestRegionListEEEmN4base12OnceCallbackIFvNSt3__16vectorINS_16ReturnedResourceENSC_9allocatorISE_EEEEEEE(%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*, %"class.viz::LocalSurfaceId"* dereferenceable(24), %"class.viz::CompositorFrame"*, %"class.absl::optional.141"*, i64, %"class.base::OnceCallback.153"* nocapture) unnamed_addr #0 align 2 {
  %7 = alloca %"class.viz::CompositorFrame", align 8
  %8 = alloca %"class.absl::optional.141", align 8
  %9 = alloca %"class.base::OnceCallback.153", align 8
  %10 = bitcast %"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"* %0 to %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)***
  %11 = load %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)**, %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)*, %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)** %11, i64 11
  %13 = load %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)*, %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)** %12, align 8
  %14 = tail call %"class.viz::mojom::CompositorFrameSink"* %13(%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"* %0) #10
  call void @_ZN3viz15CompositorFrameC1EOS0_(%"class.viz::CompositorFrame"* nonnull %7, %"class.viz::CompositorFrame"* dereferenceable(296) %2) #10
  %15 = getelementptr inbounds %"class.absl::optional.141", %"class.absl::optional.141"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.absl::optional.141", %"class.absl::optional.141"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 128, i1 false) #10
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %6
  %20 = getelementptr inbounds %"class.absl::optional.141", %"class.absl::optional.141"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.absl::optional.141", %"class.absl::optional.141"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3viz17HitTestRegionListC1EOS0_(%"struct.viz::HitTestRegionList"* %21, %"struct.viz::HitTestRegionList"* dereferenceable(120) %20) #10
  store i8 1, i8* %15, align 8
  br label %22

22:                                               ; preds = %6, %19
  %23 = getelementptr inbounds %"class.base::OnceCallback.153", %"class.base::OnceCallback.153"* %5, i64 0, i32 0, i32 0, i32 0
  %24 = bitcast %"class.base::OnceCallback.153"* %5 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.base::OnceCallback.153"* %9 to i64*
  store i64 %25, i64* %26, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %23, align 8
  %27 = bitcast %"class.viz::mojom::CompositorFrameSink"* %14 to void (%"class.viz::mojom::CompositorFrameSink"*, %"class.viz::LocalSurfaceId"*, %"class.viz::CompositorFrame"*, %"class.absl::optional.141"*, i64, %"class.base::OnceCallback.153"*)***
  %28 = load void (%"class.viz::mojom::CompositorFrameSink"*, %"class.viz::LocalSurfaceId"*, %"class.viz::CompositorFrame"*, %"class.absl::optional.141"*, i64, %"class.base::OnceCallback.153"*)**, void (%"class.viz::mojom::CompositorFrameSink"*, %"class.viz::LocalSurfaceId"*, %"class.viz::CompositorFrame"*, %"class.absl::optional.141"*, i64, %"class.base::OnceCallback.153"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.viz::mojom::CompositorFrameSink"*, %"class.viz::LocalSurfaceId"*, %"class.viz::CompositorFrame"*, %"class.absl::optional.141"*, i64, %"class.base::OnceCallback.153"*)*, void (%"class.viz::mojom::CompositorFrameSink"*, %"class.viz::LocalSurfaceId"*, %"class.viz::CompositorFrame"*, %"class.absl::optional.141"*, i64, %"class.base::OnceCallback.153"*)** %28, i64 6
  %30 = load void (%"class.viz::mojom::CompositorFrameSink"*, %"class.viz::LocalSurfaceId"*, %"class.viz::CompositorFrame"*, %"class.absl::optional.141"*, i64, %"class.base::OnceCallback.153"*)*, void (%"class.viz::mojom::CompositorFrameSink"*, %"class.viz::LocalSurfaceId"*, %"class.viz::CompositorFrame"*, %"class.absl::optional.141"*, i64, %"class.base::OnceCallback.153"*)** %29, align 8
  call void %30(%"class.viz::mojom::CompositorFrameSink"* %14, %"class.viz::LocalSurfaceId"* dereferenceable(24) %1, %"class.viz::CompositorFrame"* nonnull %7, %"class.absl::optional.141"* nonnull %8, i64 %4, %"class.base::OnceCallback.153"* nonnull %9) #10
  %31 = getelementptr inbounds %"class.base::OnceCallback.153", %"class.base::OnceCallback.153"* %9, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %31) #10
  %32 = load i8, i8* %15, align 8, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %36, label %34

34:                                               ; preds = %22
  %35 = getelementptr inbounds %"class.absl::optional.141", %"class.absl::optional.141"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3viz17HitTestRegionListD1Ev(%"struct.viz::HitTestRegionList"* %35) #10
  store i8 0, i8* %15, align 8
  br label %36

36:                                               ; preds = %22, %34
  call void @_ZN3viz15CompositorFrameD1Ev(%"class.viz::CompositorFrame"* nonnull %7) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom40CompositorFrameSinkInterceptorForTesting18DidNotProduceFrameERKNS_13BeginFrameAckE(%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*, %"struct.viz::BeginFrameAck"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"* %0 to %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)***
  %4 = load %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)**, %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)*, %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)** %4, i64 11
  %6 = load %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)*, %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.viz::mojom::CompositorFrameSink"* %6(%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"* %0) #10
  %8 = bitcast %"class.viz::mojom::CompositorFrameSink"* %7 to void (%"class.viz::mojom::CompositorFrameSink"*, %"struct.viz::BeginFrameAck"*)***
  %9 = load void (%"class.viz::mojom::CompositorFrameSink"*, %"struct.viz::BeginFrameAck"*)**, void (%"class.viz::mojom::CompositorFrameSink"*, %"struct.viz::BeginFrameAck"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.viz::mojom::CompositorFrameSink"*, %"struct.viz::BeginFrameAck"*)*, void (%"class.viz::mojom::CompositorFrameSink"*, %"struct.viz::BeginFrameAck"*)** %9, i64 7
  %11 = load void (%"class.viz::mojom::CompositorFrameSink"*, %"struct.viz::BeginFrameAck"*)*, void (%"class.viz::mojom::CompositorFrameSink"*, %"struct.viz::BeginFrameAck"*)** %10, align 8
  tail call void %11(%"class.viz::mojom::CompositorFrameSink"* %7, %"struct.viz::BeginFrameAck"* dereferenceable(32) %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom40CompositorFrameSinkInterceptorForTesting23DidAllocateSharedBitmapEN4base26ReadOnlySharedMemoryRegionERKN3gpu7MailboxE(%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*, %"class.base::ReadOnlySharedMemoryRegion"*, %"struct.gpu::Mailbox"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::ReadOnlySharedMemoryRegion", align 8
  %5 = bitcast %"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"* %0 to %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)***
  %6 = load %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)**, %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)*, %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)** %6, i64 11
  %8 = load %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)*, %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.viz::mojom::CompositorFrameSink"* %8(%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"* %0) #10
  call void @_ZN4base26ReadOnlySharedMemoryRegionC1EOS0_(%"class.base::ReadOnlySharedMemoryRegion"* nonnull %4, %"class.base::ReadOnlySharedMemoryRegion"* dereferenceable(64) %1) #10
  %10 = bitcast %"class.viz::mojom::CompositorFrameSink"* %9 to void (%"class.viz::mojom::CompositorFrameSink"*, %"class.base::ReadOnlySharedMemoryRegion"*, %"struct.gpu::Mailbox"*)***
  %11 = load void (%"class.viz::mojom::CompositorFrameSink"*, %"class.base::ReadOnlySharedMemoryRegion"*, %"struct.gpu::Mailbox"*)**, void (%"class.viz::mojom::CompositorFrameSink"*, %"class.base::ReadOnlySharedMemoryRegion"*, %"struct.gpu::Mailbox"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.viz::mojom::CompositorFrameSink"*, %"class.base::ReadOnlySharedMemoryRegion"*, %"struct.gpu::Mailbox"*)*, void (%"class.viz::mojom::CompositorFrameSink"*, %"class.base::ReadOnlySharedMemoryRegion"*, %"struct.gpu::Mailbox"*)** %11, i64 8
  %13 = load void (%"class.viz::mojom::CompositorFrameSink"*, %"class.base::ReadOnlySharedMemoryRegion"*, %"struct.gpu::Mailbox"*)*, void (%"class.viz::mojom::CompositorFrameSink"*, %"class.base::ReadOnlySharedMemoryRegion"*, %"struct.gpu::Mailbox"*)** %12, align 8
  call void %13(%"class.viz::mojom::CompositorFrameSink"* %9, %"class.base::ReadOnlySharedMemoryRegion"* nonnull %4, %"struct.gpu::Mailbox"* dereferenceable(16) %2) #10
  call void @_ZN4base26ReadOnlySharedMemoryRegionD1Ev(%"class.base::ReadOnlySharedMemoryRegion"* nonnull %4) #10
  ret void
}

declare void @_ZN4base26ReadOnlySharedMemoryRegionC1EOS0_(%"class.base::ReadOnlySharedMemoryRegion"*, %"class.base::ReadOnlySharedMemoryRegion"* dereferenceable(64)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base26ReadOnlySharedMemoryRegionD1Ev(%"class.base::ReadOnlySharedMemoryRegion"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom40CompositorFrameSinkInterceptorForTesting21DidDeleteSharedBitmapERKN3gpu7MailboxE(%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*, %"struct.gpu::Mailbox"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"* %0 to %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)***
  %4 = load %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)**, %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)*, %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)** %4, i64 11
  %6 = load %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)*, %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.viz::mojom::CompositorFrameSink"* %6(%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"* %0) #10
  %8 = bitcast %"class.viz::mojom::CompositorFrameSink"* %7 to void (%"class.viz::mojom::CompositorFrameSink"*, %"struct.gpu::Mailbox"*)***
  %9 = load void (%"class.viz::mojom::CompositorFrameSink"*, %"struct.gpu::Mailbox"*)**, void (%"class.viz::mojom::CompositorFrameSink"*, %"struct.gpu::Mailbox"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.viz::mojom::CompositorFrameSink"*, %"struct.gpu::Mailbox"*)*, void (%"class.viz::mojom::CompositorFrameSink"*, %"struct.gpu::Mailbox"*)** %9, i64 9
  %11 = load void (%"class.viz::mojom::CompositorFrameSink"*, %"struct.gpu::Mailbox"*)*, void (%"class.viz::mojom::CompositorFrameSink"*, %"struct.gpu::Mailbox"*)** %10, align 8
  tail call void %11(%"class.viz::mojom::CompositorFrameSink"* %7, %"struct.gpu::Mailbox"* dereferenceable(16) %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom40CompositorFrameSinkInterceptorForTesting33InitializeCompositorFrameSinkTypeENS0_23CompositorFrameSinkTypeE(%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*, i32) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"* %0 to %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)***
  %4 = load %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)**, %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)*, %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)** %4, i64 11
  %6 = load %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)*, %"class.viz::mojom::CompositorFrameSink"* (%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.viz::mojom::CompositorFrameSink"* %6(%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"* %0) #10
  %8 = bitcast %"class.viz::mojom::CompositorFrameSink"* %7 to void (%"class.viz::mojom::CompositorFrameSink"*, i32)***
  %9 = load void (%"class.viz::mojom::CompositorFrameSink"*, i32)**, void (%"class.viz::mojom::CompositorFrameSink"*, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.viz::mojom::CompositorFrameSink"*, i32)*, void (%"class.viz::mojom::CompositorFrameSink"*, i32)** %9, i64 10
  %11 = load void (%"class.viz::mojom::CompositorFrameSink"*, i32)*, void (%"class.viz::mojom::CompositorFrameSink"*, i32)** %10, align 8
  tail call void %11(%"class.viz::mojom::CompositorFrameSink"* %7, i32 %1) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3viz5mojom30CompositorFrameSinkAsyncWaiterC2EPNS0_19CompositorFrameSinkE(%"class.viz::mojom::CompositorFrameSinkAsyncWaiter"* nocapture, %"class.viz::mojom::CompositorFrameSink"*) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.viz::mojom::CompositorFrameSinkAsyncWaiter", %"class.viz::mojom::CompositorFrameSinkAsyncWaiter"* %0, i64 0, i32 0
  store %"class.viz::mojom::CompositorFrameSink"* %1, %"class.viz::mojom::CompositorFrameSink"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3viz5mojom30CompositorFrameSinkAsyncWaiterD2Ev(%"class.viz::mojom::CompositorFrameSinkAsyncWaiter"* nocapture) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom30CompositorFrameSinkAsyncWaiter25SubmitCompositorFrameSyncERKNS_14LocalSurfaceIdENS_15CompositorFrameEN4absl8optionalINS_17HitTestRegionListEEEmPNSt3__16vectorINS_16ReturnedResourceENSA_9allocatorISC_EEEE(%"class.viz::mojom::CompositorFrameSinkAsyncWaiter"* nocapture readonly, %"class.viz::LocalSurfaceId"* dereferenceable(24), %"class.viz::CompositorFrame"*, %"class.absl::optional.141"*, i64, %"class.std::__1::vector.154"*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.base::RunLoop", align 8
  %8 = alloca %"class.viz::CompositorFrame", align 8
  %9 = alloca %"class.absl::optional.141", align 8
  %10 = alloca %"class.base::OnceCallback.153", align 8
  %11 = alloca %"class.base::Location", align 8
  %12 = ptrtoint %"class.std::__1::vector.154"* %5 to i64
  %13 = bitcast %"class.base::RunLoop"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %13) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %7, i32 0) #10
  %14 = getelementptr inbounds %"class.viz::mojom::CompositorFrameSinkAsyncWaiter", %"class.viz::mojom::CompositorFrameSinkAsyncWaiter"* %0, i64 0, i32 0
  %15 = load %"class.viz::mojom::CompositorFrameSink"*, %"class.viz::mojom::CompositorFrameSink"** %14, align 8
  call void @_ZN3viz15CompositorFrameC1EOS0_(%"class.viz::CompositorFrame"* nonnull %8, %"class.viz::CompositorFrame"* dereferenceable(296) %2) #10
  %16 = getelementptr inbounds %"class.absl::optional.141", %"class.absl::optional.141"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.absl::optional.141", %"class.absl::optional.141"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 128, i1 false) #10
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %6
  %21 = getelementptr inbounds %"class.absl::optional.141", %"class.absl::optional.141"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %22 = getelementptr inbounds %"class.absl::optional.141", %"class.absl::optional.141"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3viz17HitTestRegionListC1EOS0_(%"struct.viz::HitTestRegionList"* %22, %"struct.viz::HitTestRegionList"* dereferenceable(120) %21) #10
  store i8 1, i8* %16, align 8
  br label %23

23:                                               ; preds = %6, %20
  %24 = ptrtoint %"class.base::RunLoop"* %7 to i64
  %25 = call i8* @_Znwm(i64 56) #11, !noalias !3
  %26 = bitcast i8* %25 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %26, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector.154"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN3viz5mojom30CompositorFrameSinkAsyncWaiter25SubmitCompositorFrameSyncERKNS3_14LocalSurfaceIdENS3_15CompositorFrameEN4absl8optionalINS3_17HitTestRegionListEEEmPNSt3__16vectorINS3_16ReturnedResourceENSE_9allocatorISG_EEEEE3$_0JPNS_7RunLoopESK_EEEFvSJ_EE7RunOnceEPNS0_13BindStateBaseEOSJ_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN3viz5mojom30CompositorFrameSinkAsyncWaiter25SubmitCompositorFrameSyncERKNS2_14LocalSurfaceIdENS2_15CompositorFrameEN4absl8optionalINS2_17HitTestRegionListEEEmPNSt3__16vectorINS2_16ReturnedResourceENSD_9allocatorISF_EEEEE3$_0JPNS_7RunLoopESJ_EE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !3
  %27 = getelementptr inbounds i8, i8* %25, i64 40
  %28 = bitcast i8* %27 to i64*
  store i64 %24, i64* %28, align 8, !noalias !3
  %29 = getelementptr inbounds i8, i8* %25, i64 48
  %30 = bitcast i8* %29 to i64*
  store i64 %12, i64* %30, align 8, !noalias !3
  %31 = bitcast %"class.base::OnceCallback.153"* %10 to i8**
  store i8* %25, i8** %31, align 8, !alias.scope !3
  %32 = bitcast %"class.viz::mojom::CompositorFrameSink"* %15 to void (%"class.viz::mojom::CompositorFrameSink"*, %"class.viz::LocalSurfaceId"*, %"class.viz::CompositorFrame"*, %"class.absl::optional.141"*, i64, %"class.base::OnceCallback.153"*)***
  %33 = load void (%"class.viz::mojom::CompositorFrameSink"*, %"class.viz::LocalSurfaceId"*, %"class.viz::CompositorFrame"*, %"class.absl::optional.141"*, i64, %"class.base::OnceCallback.153"*)**, void (%"class.viz::mojom::CompositorFrameSink"*, %"class.viz::LocalSurfaceId"*, %"class.viz::CompositorFrame"*, %"class.absl::optional.141"*, i64, %"class.base::OnceCallback.153"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.viz::mojom::CompositorFrameSink"*, %"class.viz::LocalSurfaceId"*, %"class.viz::CompositorFrame"*, %"class.absl::optional.141"*, i64, %"class.base::OnceCallback.153"*)*, void (%"class.viz::mojom::CompositorFrameSink"*, %"class.viz::LocalSurfaceId"*, %"class.viz::CompositorFrame"*, %"class.absl::optional.141"*, i64, %"class.base::OnceCallback.153"*)** %33, i64 6
  %35 = load void (%"class.viz::mojom::CompositorFrameSink"*, %"class.viz::LocalSurfaceId"*, %"class.viz::CompositorFrame"*, %"class.absl::optional.141"*, i64, %"class.base::OnceCallback.153"*)*, void (%"class.viz::mojom::CompositorFrameSink"*, %"class.viz::LocalSurfaceId"*, %"class.viz::CompositorFrame"*, %"class.absl::optional.141"*, i64, %"class.base::OnceCallback.153"*)** %34, align 8
  call void %35(%"class.viz::mojom::CompositorFrameSink"* %15, %"class.viz::LocalSurfaceId"* dereferenceable(24) %1, %"class.viz::CompositorFrame"* nonnull %8, %"class.absl::optional.141"* nonnull %9, i64 %4, %"class.base::OnceCallback.153"* nonnull %10) #10
  %36 = getelementptr inbounds %"class.base::OnceCallback.153", %"class.base::OnceCallback.153"* %10, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %36) #10
  %37 = load i8, i8* %16, align 8, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %23
  %40 = getelementptr inbounds %"class.absl::optional.141", %"class.absl::optional.141"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3viz17HitTestRegionListD1Ev(%"struct.viz::HitTestRegionList"* %40) #10
  store i8 0, i8* %16, align 8
  br label %41

41:                                               ; preds = %23, %39
  call void @_ZN3viz15CompositorFrameD1Ev(%"class.viz::CompositorFrame"* nonnull %8) #10
  %42 = bitcast %"class.base::Location"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %42) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %11, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.1, i64 0, i64 0), i32 84) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %7, %"class.base::Location"* nonnull dereferenceable(32) %11) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %42) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %13) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

declare void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"*, i32) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

declare void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"*, %"class.base::Location"* dereferenceable(32)) local_unnamed_addr #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom46CompositorFrameSinkClientInterceptorForTesting28DidReceiveCompositorFrameAckENSt3__16vectorINS_16ReturnedResourceENS2_9allocatorIS4_EEEE(%"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"*, %"class.std::__1::vector.154"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.154", align 16
  %4 = bitcast %"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"* %0 to %"class.viz::mojom::CompositorFrameSinkClient"* (%"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"*)***
  %5 = load %"class.viz::mojom::CompositorFrameSinkClient"* (%"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"*)**, %"class.viz::mojom::CompositorFrameSinkClient"* (%"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.viz::mojom::CompositorFrameSinkClient"* (%"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"*)*, %"class.viz::mojom::CompositorFrameSinkClient"* (%"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"*)** %5, i64 7
  %7 = load %"class.viz::mojom::CompositorFrameSinkClient"* (%"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"*)*, %"class.viz::mojom::CompositorFrameSinkClient"* (%"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.viz::mojom::CompositorFrameSinkClient"* %7(%"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"* %0) #10
  %9 = bitcast %"class.std::__1::vector.154"* %1 to <2 x i64>*
  %10 = load <2 x i64>, <2 x i64>* %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.154", %"class.std::__1::vector.154"* %3, i64 0, i32 0, i32 1
  %12 = bitcast %"class.std::__1::vector.154"* %3 to <2 x i64>*
  store <2 x i64> %10, <2 x i64>* %12, align 16
  %13 = getelementptr inbounds %"class.std::__1::vector.154", %"class.std::__1::vector.154"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"struct.viz::ReturnedResource"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.154", %"class.std::__1::vector.154"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"struct.viz::ReturnedResource"** %16 to i64*
  store i64 %15, i64* %17, align 16
  %18 = bitcast %"class.std::__1::vector.154"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #10
  %19 = bitcast %"class.viz::mojom::CompositorFrameSinkClient"* %8 to void (%"class.viz::mojom::CompositorFrameSinkClient"*, %"class.std::__1::vector.154"*)***
  %20 = load void (%"class.viz::mojom::CompositorFrameSinkClient"*, %"class.std::__1::vector.154"*)**, void (%"class.viz::mojom::CompositorFrameSinkClient"*, %"class.std::__1::vector.154"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.viz::mojom::CompositorFrameSinkClient"*, %"class.std::__1::vector.154"*)*, void (%"class.viz::mojom::CompositorFrameSinkClient"*, %"class.std::__1::vector.154"*)** %20, i64 2
  %22 = load void (%"class.viz::mojom::CompositorFrameSinkClient"*, %"class.std::__1::vector.154"*)*, void (%"class.viz::mojom::CompositorFrameSinkClient"*, %"class.std::__1::vector.154"*)** %21, align 8
  call void %22(%"class.viz::mojom::CompositorFrameSinkClient"* %8, %"class.std::__1::vector.154"* nonnull %3) #10
  %23 = getelementptr inbounds %"class.std::__1::vector.154", %"class.std::__1::vector.154"* %3, i64 0, i32 0, i32 0
  %24 = load %"struct.viz::ReturnedResource"*, %"struct.viz::ReturnedResource"** %23, align 16
  %25 = icmp eq %"struct.viz::ReturnedResource"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %2
  %27 = bitcast %"struct.viz::ReturnedResource"* %24 to i8*
  %28 = load %"struct.viz::ReturnedResource"*, %"struct.viz::ReturnedResource"** %11, align 8
  %29 = icmp eq %"struct.viz::ReturnedResource"* %28, %24
  br i1 %29, label %37, label %30

30:                                               ; preds = %26, %30
  %31 = phi %"struct.viz::ReturnedResource"* [ %32, %30 ], [ %28, %26 ]
  %32 = getelementptr inbounds %"struct.viz::ReturnedResource", %"struct.viz::ReturnedResource"* %31, i64 -1
  call void @_ZN3viz16ReturnedResourceD1Ev(%"struct.viz::ReturnedResource"* %32) #10
  %33 = icmp eq %"struct.viz::ReturnedResource"* %32, %24
  br i1 %33, label %34, label %30

34:                                               ; preds = %30
  %35 = bitcast %"class.std::__1::vector.154"* %3 to i8**
  %36 = load i8*, i8** %35, align 16
  br label %37

37:                                               ; preds = %34, %26
  %38 = phi i8* [ %36, %34 ], [ %27, %26 ]
  store %"struct.viz::ReturnedResource"* %24, %"struct.viz::ReturnedResource"** %11, align 8
  call void @_ZdlPv(i8* %38) #11
  br label %39

39:                                               ; preds = %2, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom46CompositorFrameSinkClientInterceptorForTesting12OnBeginFrameERKNS_14BeginFrameArgsERKN4base8flat_mapIjNS_18FrameTimingDetailsENSt3__14lessIvEENS8_6vectorINS8_4pairIjS7_EENS8_9allocatorISD_EEEEEE(%"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"*, %"struct.viz::BeginFrameArgs"* dereferenceable(64), %"class.base::flat_map.183"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"* %0 to %"class.viz::mojom::CompositorFrameSinkClient"* (%"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"*)***
  %5 = load %"class.viz::mojom::CompositorFrameSinkClient"* (%"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"*)**, %"class.viz::mojom::CompositorFrameSinkClient"* (%"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.viz::mojom::CompositorFrameSinkClient"* (%"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"*)*, %"class.viz::mojom::CompositorFrameSinkClient"* (%"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"*)** %5, i64 7
  %7 = load %"class.viz::mojom::CompositorFrameSinkClient"* (%"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"*)*, %"class.viz::mojom::CompositorFrameSinkClient"* (%"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.viz::mojom::CompositorFrameSinkClient"* %7(%"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"* %0) #10
  %9 = bitcast %"class.viz::mojom::CompositorFrameSinkClient"* %8 to void (%"class.viz::mojom::CompositorFrameSinkClient"*, %"struct.viz::BeginFrameArgs"*, %"class.base::flat_map.183"*)***
  %10 = load void (%"class.viz::mojom::CompositorFrameSinkClient"*, %"struct.viz::BeginFrameArgs"*, %"class.base::flat_map.183"*)**, void (%"class.viz::mojom::CompositorFrameSinkClient"*, %"struct.viz::BeginFrameArgs"*, %"class.base::flat_map.183"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.viz::mojom::CompositorFrameSinkClient"*, %"struct.viz::BeginFrameArgs"*, %"class.base::flat_map.183"*)*, void (%"class.viz::mojom::CompositorFrameSinkClient"*, %"struct.viz::BeginFrameArgs"*, %"class.base::flat_map.183"*)** %10, i64 3
  %12 = load void (%"class.viz::mojom::CompositorFrameSinkClient"*, %"struct.viz::BeginFrameArgs"*, %"class.base::flat_map.183"*)*, void (%"class.viz::mojom::CompositorFrameSinkClient"*, %"struct.viz::BeginFrameArgs"*, %"class.base::flat_map.183"*)** %11, align 8
  tail call void %12(%"class.viz::mojom::CompositorFrameSinkClient"* %8, %"struct.viz::BeginFrameArgs"* dereferenceable(64) %1, %"class.base::flat_map.183"* dereferenceable(24) %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom46CompositorFrameSinkClientInterceptorForTesting25OnBeginFramePausedChangedEb(%"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"* %0 to %"class.viz::mojom::CompositorFrameSinkClient"* (%"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"*)***
  %4 = load %"class.viz::mojom::CompositorFrameSinkClient"* (%"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"*)**, %"class.viz::mojom::CompositorFrameSinkClient"* (%"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.viz::mojom::CompositorFrameSinkClient"* (%"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"*)*, %"class.viz::mojom::CompositorFrameSinkClient"* (%"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"*)** %4, i64 7
  %6 = load %"class.viz::mojom::CompositorFrameSinkClient"* (%"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"*)*, %"class.viz::mojom::CompositorFrameSinkClient"* (%"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.viz::mojom::CompositorFrameSinkClient"* %6(%"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"* %0) #10
  %8 = bitcast %"class.viz::mojom::CompositorFrameSinkClient"* %7 to void (%"class.viz::mojom::CompositorFrameSinkClient"*, i1)***
  %9 = load void (%"class.viz::mojom::CompositorFrameSinkClient"*, i1)**, void (%"class.viz::mojom::CompositorFrameSinkClient"*, i1)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.viz::mojom::CompositorFrameSinkClient"*, i1)*, void (%"class.viz::mojom::CompositorFrameSinkClient"*, i1)** %9, i64 4
  %11 = load void (%"class.viz::mojom::CompositorFrameSinkClient"*, i1)*, void (%"class.viz::mojom::CompositorFrameSinkClient"*, i1)** %10, align 8
  tail call void %11(%"class.viz::mojom::CompositorFrameSinkClient"* %7, i1 zeroext %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom46CompositorFrameSinkClientInterceptorForTesting16ReclaimResourcesENSt3__16vectorINS_16ReturnedResourceENS2_9allocatorIS4_EEEE(%"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"*, %"class.std::__1::vector.154"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.154", align 16
  %4 = bitcast %"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"* %0 to %"class.viz::mojom::CompositorFrameSinkClient"* (%"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"*)***
  %5 = load %"class.viz::mojom::CompositorFrameSinkClient"* (%"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"*)**, %"class.viz::mojom::CompositorFrameSinkClient"* (%"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.viz::mojom::CompositorFrameSinkClient"* (%"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"*)*, %"class.viz::mojom::CompositorFrameSinkClient"* (%"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"*)** %5, i64 7
  %7 = load %"class.viz::mojom::CompositorFrameSinkClient"* (%"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"*)*, %"class.viz::mojom::CompositorFrameSinkClient"* (%"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.viz::mojom::CompositorFrameSinkClient"* %7(%"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"* %0) #10
  %9 = bitcast %"class.std::__1::vector.154"* %1 to <2 x i64>*
  %10 = load <2 x i64>, <2 x i64>* %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.154", %"class.std::__1::vector.154"* %3, i64 0, i32 0, i32 1
  %12 = bitcast %"class.std::__1::vector.154"* %3 to <2 x i64>*
  store <2 x i64> %10, <2 x i64>* %12, align 16
  %13 = getelementptr inbounds %"class.std::__1::vector.154", %"class.std::__1::vector.154"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"struct.viz::ReturnedResource"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.154", %"class.std::__1::vector.154"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"struct.viz::ReturnedResource"** %16 to i64*
  store i64 %15, i64* %17, align 16
  %18 = bitcast %"class.std::__1::vector.154"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #10
  %19 = bitcast %"class.viz::mojom::CompositorFrameSinkClient"* %8 to void (%"class.viz::mojom::CompositorFrameSinkClient"*, %"class.std::__1::vector.154"*)***
  %20 = load void (%"class.viz::mojom::CompositorFrameSinkClient"*, %"class.std::__1::vector.154"*)**, void (%"class.viz::mojom::CompositorFrameSinkClient"*, %"class.std::__1::vector.154"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.viz::mojom::CompositorFrameSinkClient"*, %"class.std::__1::vector.154"*)*, void (%"class.viz::mojom::CompositorFrameSinkClient"*, %"class.std::__1::vector.154"*)** %20, i64 5
  %22 = load void (%"class.viz::mojom::CompositorFrameSinkClient"*, %"class.std::__1::vector.154"*)*, void (%"class.viz::mojom::CompositorFrameSinkClient"*, %"class.std::__1::vector.154"*)** %21, align 8
  call void %22(%"class.viz::mojom::CompositorFrameSinkClient"* %8, %"class.std::__1::vector.154"* nonnull %3) #10
  %23 = getelementptr inbounds %"class.std::__1::vector.154", %"class.std::__1::vector.154"* %3, i64 0, i32 0, i32 0
  %24 = load %"struct.viz::ReturnedResource"*, %"struct.viz::ReturnedResource"** %23, align 16
  %25 = icmp eq %"struct.viz::ReturnedResource"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %2
  %27 = bitcast %"struct.viz::ReturnedResource"* %24 to i8*
  %28 = load %"struct.viz::ReturnedResource"*, %"struct.viz::ReturnedResource"** %11, align 8
  %29 = icmp eq %"struct.viz::ReturnedResource"* %28, %24
  br i1 %29, label %37, label %30

30:                                               ; preds = %26, %30
  %31 = phi %"struct.viz::ReturnedResource"* [ %32, %30 ], [ %28, %26 ]
  %32 = getelementptr inbounds %"struct.viz::ReturnedResource", %"struct.viz::ReturnedResource"* %31, i64 -1
  call void @_ZN3viz16ReturnedResourceD1Ev(%"struct.viz::ReturnedResource"* %32) #10
  %33 = icmp eq %"struct.viz::ReturnedResource"* %32, %24
  br i1 %33, label %34, label %30

34:                                               ; preds = %30
  %35 = bitcast %"class.std::__1::vector.154"* %3 to i8**
  %36 = load i8*, i8** %35, align 16
  br label %37

37:                                               ; preds = %34, %26
  %38 = phi i8* [ %36, %34 ], [ %27, %26 ]
  store %"struct.viz::ReturnedResource"* %24, %"struct.viz::ReturnedResource"** %11, align 8
  call void @_ZdlPv(i8* %38) #11
  br label %39

39:                                               ; preds = %2, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom46CompositorFrameSinkClientInterceptorForTesting45OnCompositorFrameTransitionDirectiveProcessedEj(%"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"*, i32) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"* %0 to %"class.viz::mojom::CompositorFrameSinkClient"* (%"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"*)***
  %4 = load %"class.viz::mojom::CompositorFrameSinkClient"* (%"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"*)**, %"class.viz::mojom::CompositorFrameSinkClient"* (%"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.viz::mojom::CompositorFrameSinkClient"* (%"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"*)*, %"class.viz::mojom::CompositorFrameSinkClient"* (%"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"*)** %4, i64 7
  %6 = load %"class.viz::mojom::CompositorFrameSinkClient"* (%"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"*)*, %"class.viz::mojom::CompositorFrameSinkClient"* (%"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.viz::mojom::CompositorFrameSinkClient"* %6(%"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"* %0) #10
  %8 = bitcast %"class.viz::mojom::CompositorFrameSinkClient"* %7 to void (%"class.viz::mojom::CompositorFrameSinkClient"*, i32)***
  %9 = load void (%"class.viz::mojom::CompositorFrameSinkClient"*, i32)**, void (%"class.viz::mojom::CompositorFrameSinkClient"*, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.viz::mojom::CompositorFrameSinkClient"*, i32)*, void (%"class.viz::mojom::CompositorFrameSinkClient"*, i32)** %9, i64 6
  %11 = load void (%"class.viz::mojom::CompositorFrameSinkClient"*, i32)*, void (%"class.viz::mojom::CompositorFrameSinkClient"*, i32)** %10, align 8
  tail call void %11(%"class.viz::mojom::CompositorFrameSinkClient"* %7, i32 %1) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3viz5mojom36CompositorFrameSinkClientAsyncWaiterC2EPNS0_25CompositorFrameSinkClientE(%"class.viz::mojom::CompositorFrameSinkClientAsyncWaiter"* nocapture, %"class.viz::mojom::CompositorFrameSinkClient"*) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.viz::mojom::CompositorFrameSinkClientAsyncWaiter", %"class.viz::mojom::CompositorFrameSinkClientAsyncWaiter"* %0, i64 0, i32 0
  store %"class.viz::mojom::CompositorFrameSinkClient"* %1, %"class.viz::mojom::CompositorFrameSinkClient"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3viz5mojom36CompositorFrameSinkClientAsyncWaiterD2Ev(%"class.viz::mojom::CompositorFrameSinkClientAsyncWaiter"* nocapture) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz5mojom19CompositorFrameSinkD2Ev(%"class.viz::mojom::CompositorFrameSink"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz5mojom40CompositorFrameSinkInterceptorForTestingD0Ev(%"class.viz::mojom::CompositorFrameSinkInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

declare zeroext i1 @_ZN3viz5mojom19CompositorFrameSink25SubmitCompositorFrameSyncERKNS_14LocalSurfaceIdENS_15CompositorFrameEN4absl8optionalINS_17HitTestRegionListEEEmPNSt3__16vectorINS_16ReturnedResourceENSA_9allocatorISC_EEEE(%"class.viz::mojom::CompositorFrameSink"*, %"class.viz::LocalSurfaceId"* dereferenceable(24), %"class.viz::CompositorFrame"*, %"class.absl::optional.141"*, i64, %"class.std::__1::vector.154"*) unnamed_addr #1

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz5mojom25CompositorFrameSinkClientD2Ev(%"class.viz::mojom::CompositorFrameSinkClient"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz5mojom46CompositorFrameSinkClientInterceptorForTestingD0Ev(%"class.viz::mojom::CompositorFrameSinkClientInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

declare void @_ZN3viz17HitTestRegionListC1EOS0_(%"struct.viz::HitTestRegionList"*, %"struct.viz::HitTestRegionList"* dereferenceable(120)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3viz17HitTestRegionListD1Ev(%"struct.viz::HitTestRegionList"*) unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN3viz5mojom30CompositorFrameSinkAsyncWaiter25SubmitCompositorFrameSyncERKNS3_14LocalSurfaceIdENS3_15CompositorFrameEN4absl8optionalINS3_17HitTestRegionListEEEmPNSt3__16vectorINS3_16ReturnedResourceENSE_9allocatorISG_EEEEE3$_0JPNS_7RunLoopESK_EEEFvSJ_EE7RunOnceEPNS0_13BindStateBaseEOSJ_"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.std::__1::vector.154"* nocapture dereferenceable(24)) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to %"class.std::__1::vector.154"**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load %"class.std::__1::vector.154"*, %"class.std::__1::vector.154"** %6, align 8
  %9 = bitcast %"class.std::__1::vector.154"* %1 to <2 x i64>*
  %10 = load <2 x i64>, <2 x i64>* %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.154", %"class.std::__1::vector.154"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %12 = bitcast %"struct.viz::ReturnedResource"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector.154"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #10
  %15 = getelementptr inbounds %"class.std::__1::vector.154", %"class.std::__1::vector.154"* %8, i64 0, i32 0, i32 0
  %16 = load %"struct.viz::ReturnedResource"*, %"struct.viz::ReturnedResource"** %15, align 8
  %17 = icmp eq %"struct.viz::ReturnedResource"* %16, null
  br i1 %17, label %33, label %18

18:                                               ; preds = %2
  %19 = bitcast %"struct.viz::ReturnedResource"* %16 to i8*
  %20 = getelementptr inbounds %"class.std::__1::vector.154", %"class.std::__1::vector.154"* %8, i64 0, i32 0, i32 1
  %21 = load %"struct.viz::ReturnedResource"*, %"struct.viz::ReturnedResource"** %20, align 8
  %22 = icmp eq %"struct.viz::ReturnedResource"* %21, %16
  br i1 %22, label %30, label %23

23:                                               ; preds = %18, %23
  %24 = phi %"struct.viz::ReturnedResource"* [ %25, %23 ], [ %21, %18 ]
  %25 = getelementptr inbounds %"struct.viz::ReturnedResource", %"struct.viz::ReturnedResource"* %24, i64 -1
  tail call void @_ZN3viz16ReturnedResourceD1Ev(%"struct.viz::ReturnedResource"* %25) #10
  %26 = icmp eq %"struct.viz::ReturnedResource"* %25, %16
  br i1 %26, label %27, label %23

27:                                               ; preds = %23
  %28 = bitcast %"class.std::__1::vector.154"* %8 to i8**
  %29 = load i8*, i8** %28, align 8
  br label %30

30:                                               ; preds = %27, %18
  %31 = phi i8* [ %29, %27 ], [ %19, %18 ]
  store %"struct.viz::ReturnedResource"* %16, %"struct.viz::ReturnedResource"** %20, align 8
  tail call void @_ZdlPv(i8* %31) #11
  %32 = bitcast %"class.std::__1::vector.154"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 24, i1 false) #10
  br label %33

33:                                               ; preds = %2, %30
  %34 = bitcast %"class.std::__1::vector.154"* %8 to <2 x i64>*
  store <2 x i64> %10, <2 x i64>* %34, align 8
  %35 = getelementptr inbounds %"class.std::__1::vector.154", %"class.std::__1::vector.154"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %36 = bitcast %"struct.viz::ReturnedResource"** %35 to i64*
  store i64 %13, i64* %36, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #10
  ret void
}

declare void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3viz16ReturnedResourceD1Ev(%"struct.viz::ReturnedResource"*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN3viz5mojom30CompositorFrameSinkAsyncWaiter25SubmitCompositorFrameSyncERKNS2_14LocalSurfaceIdENS2_15CompositorFrameEN4absl8optionalINS2_17HitTestRegionListEEEmPNSt3__16vectorINS2_16ReturnedResourceENSD_9allocatorISF_EEEEE3$_0JPNS_7RunLoopESJ_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN3viz5mojom30CompositorFrameSinkAsyncWaiter25SubmitCompositorFrameSyncERKNS3_14LocalSurfaceIdENS3_15CompositorFrameEN4absl8optionalINS3_17HitTestRegionListEEEmPNSt3__16vectorINS3_16ReturnedResourceENSE_9allocatorISG_EEEEE3$_0JPNS_7RunLoopERSK_EEEDcOT0_DpOT1_: argument 0"}
!5 = distinct !{!5, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN3viz5mojom30CompositorFrameSinkAsyncWaiter25SubmitCompositorFrameSyncERKNS3_14LocalSurfaceIdENS3_15CompositorFrameEN4absl8optionalINS3_17HitTestRegionListEEEmPNSt3__16vectorINS3_16ReturnedResourceENSE_9allocatorISG_EEEEE3$_0JPNS_7RunLoopERSK_EEEDcOT0_DpOT1_"}
!6 = distinct !{!6, !7, !"_ZN4base8BindOnceIZN3viz5mojom30CompositorFrameSinkAsyncWaiter25SubmitCompositorFrameSyncERKNS1_14LocalSurfaceIdENS1_15CompositorFrameEN4absl8optionalINS1_17HitTestRegionListEEEmPNSt3__16vectorINS1_16ReturnedResourceENSC_9allocatorISE_EEEEE3$_0JPNS_7RunLoopERSI_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSQ_DpOSR_: argument 0"}
!7 = distinct !{!7, !"_ZN4base8BindOnceIZN3viz5mojom30CompositorFrameSinkAsyncWaiter25SubmitCompositorFrameSyncERKNS1_14LocalSurfaceIdENS1_15CompositorFrameEN4absl8optionalINS1_17HitTestRegionListEEEmPNSt3__16vectorINS1_16ReturnedResourceENSC_9allocatorISE_EEEEE3$_0JPNS_7RunLoopERSI_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSQ_DpOSR_"}
