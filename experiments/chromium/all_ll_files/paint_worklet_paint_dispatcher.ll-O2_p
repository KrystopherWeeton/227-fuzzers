; ModuleID = '../../third_party/blink/renderer/platform/graphics/paint_worklet_paint_dispatcher.cc'
source_filename = "../../third_party/blink/renderer/platform/graphics/paint_worklet_paint_dispatcher.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.3", i32, [4 x i8], %"class.std::__1::unique_ptr.134", %"class.std::__1::unique_ptr.134", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.151", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.163", %"class.std::__1::unique_ptr.169", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.175", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.52", %"class.std::__1::unique_ptr.52", %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.87", %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.117", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.37" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.37" = type { %"struct.std::__1::__atomic_base.38" }
%"struct.std::__1::__atomic_base.38" = type { %"struct.std::__1::__atomic_base.39" }
%"struct.std::__1::__atomic_base.39" = type { %"struct.std::__1::__cxx_atomic_impl.40" }
%"struct.std::__1::__cxx_atomic_impl.40" = type { %"struct.std::__1::__cxx_atomic_base_impl.41" }
%"struct.std::__1::__cxx_atomic_base_impl.41" = type { i64 }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.blink::Worklist.48"* }
%"class.blink::Worklist.48" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.37" }
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.blink::Worklist.55"* }
%"class.blink::Worklist.55" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.37" }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::Worklist.62"* }
%"class.blink::Worklist.62" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.37" }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.blink::Worklist.69"* }
%"class.blink::Worklist.69" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.37" }
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.blink::Worklist.76"* }
%"class.blink::Worklist.76" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.37" }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::Worklist.83"* }
%"class.blink::Worklist.83" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.37" }
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.blink::Worklist.90"* }
%"class.blink::Worklist.90" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.37" }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.97", %"class.std::__1::__compressed_pair.104", %"class.std::__1::__compressed_pair.109", %"class.std::__1::__compressed_pair.111", [4 x i8] }>
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99", %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { i64 }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { float }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.120", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.142" }
%"class.WTF::VectorBuffer.142" = type { %"class.WTF::VectorBufferBase.143" }
%"class.WTF::VectorBufferBase.143" = type { %"struct.std::__1::pair.144"*, i32, i32 }
%"struct.std::__1::pair.144" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.157" }
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.48"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.55"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.62"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.69"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.76"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.231", i64 }
%"class.std::__1::vector.231" = type { %"class.std::__1::__vector_base.232" }
%"class.std::__1::__vector_base.232" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.233" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.175" = type { %"struct.std::__1::__atomic_base.176" }
%"struct.std::__1::__atomic_base.176" = type { %"struct.std::__1::__cxx_atomic_impl.177" }
%"struct.std::__1::__cxx_atomic_impl.177" = type { %"struct.std::__1::__cxx_atomic_base_impl.178" }
%"struct.std::__1::__cxx_atomic_base_impl.178" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.blink::PaintWorkletPaintDispatcher" = type { %"class.WTF::HashMap", %"class.base::flat_map", %"class.base::OnceCallback", %"class.base::WeakPtrFactory" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { i32, %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"class.blink::CrossThreadPersistent", %class.scoped_refptr.179 }
%"class.blink::CrossThreadPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::PaintWorkletPainter"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::PaintWorkletPainter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::CrossThreadPersistentNodePtr" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.blink::PersistentNode"* }
%class.scoped_refptr.179 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.180" }
%"struct.std::__1::atomic.180" = type { %"struct.std::__1::__atomic_base.181" }
%"struct.std::__1::__atomic_base.181" = type { %"struct.std::__1::__atomic_base.182" }
%"struct.std::__1::__atomic_base.182" = type { %"struct.std::__1::__cxx_atomic_impl.183" }
%"struct.std::__1::__cxx_atomic_impl.183" = type { %"struct.std::__1::__cxx_atomic_base_impl.184" }
%"struct.std::__1::__cxx_atomic_base_impl.184" = type { i32 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair.185"*, %"struct.std::__1::pair.185"*, %"class.std::__1::__compressed_pair.211" }
%"struct.std::__1::pair.185" = type { i32, %class.scoped_refptr.186 }
%class.scoped_refptr.186 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.187", %"class.std::__1::vector.188" }
%"class.base::RefCountedThreadSafe.187" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.188" = type { %"class.std::__1::__vector_base.189" }
%"class.std::__1::__vector_base.189" = type { %"class.cc::PaintWorkletJob"*, %"class.cc::PaintWorkletJob"*, %"class.std::__1::__compressed_pair.206" }
%"class.cc::PaintWorkletJob" = type { i32, %class.scoped_refptr.190, %"class.base::flat_map.192", %class.sk_sp }
%class.scoped_refptr.190 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.191", [4 x i8] }>
%"class.base::RefCountedThreadSafe.191" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::flat_map.192" = type { %"class.base::internal::flat_tree.193" }
%"class.base::internal::flat_tree.193" = type { %"class.std::__1::vector.194" }
%"class.std::__1::vector.194" = type { %"class.std::__1::__vector_base.195" }
%"class.std::__1::__vector_base.195" = type { %"struct.std::__1::pair.196"*, %"struct.std::__1::pair.196"*, %"class.std::__1::__compressed_pair.197" }
%"struct.std::__1::pair.196" = type opaque
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"struct.std::__1::pair.196"* }
%class.sk_sp = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.202", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.180" }>
%"class.std::__1::unique_ptr.202" = type { %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { i8* }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.cc::PaintWorkletJob"* }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"struct.std::__1::pair.185"* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.216 }
%class.scoped_refptr.216 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.217", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.217" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.218 }
%class.scoped_refptr.218 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.219", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.219" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.220" }
%"struct.std::__1::atomic.220" = type { %"struct.std::__1::__atomic_base.221" }
%"struct.std::__1::__atomic_base.221" = type { %"struct.std::__1::__atomic_base.222" }
%"struct.std::__1::__atomic_base.222" = type { %"struct.std::__1::__cxx_atomic_impl.223" }
%"struct.std::__1::__cxx_atomic_impl.223" = type { %"struct.std::__1::__cxx_atomic_base_impl.224" }
%"struct.std::__1::__cxx_atomic_base_impl.224" = type { i8 }
%"class.blink::PlatformPaintWorkletLayerPainter" = type { %"class.cc::PaintWorkletLayerPainter", %"class.std::__1::unique_ptr.0" }
%"class.cc::PaintWorkletLayerPainter" = type { i32 (...)** }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.blink::PaintWorkletPaintDispatcher"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.238 }
%class.scoped_refptr.238 = type { %"class.base::internal::WeakReference::Flag"* }
%"struct.std::__1::pair.239" = type { %"class.blink::PaintWorkletPainter"*, %class.scoped_refptr.179 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::OnceCallback.240" = type { %"class.base::internal::CallbackBase" }
%"class.WTF::CrossThreadOnceFunction" = type { %"class.base::OnceCallback.240" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.WTF::CrossThreadFunction" = type { %"class.base::RepeatingCallback" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.blink::Thread" = type { i32 (...)** }
%"class.base::ScopedClosureRunner" = type { %"class.base::OnceCallback.240" }
%"class.blink::CrossThreadPersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic.180", [4 x i8] }>
%"struct.std::__1::__tuple_impl.283" = type { %"class.std::__1::__tuple_leaf.284", %"class.std::__1::__tuple_leaf.285", %"class.std::__1::__tuple_leaf.286" }
%"class.std::__1::__tuple_leaf.284" = type { %"class.blink::CrossThreadPersistent" }
%"class.std::__1::__tuple_leaf.285" = type { %class.scoped_refptr.186 }
%"class.std::__1::__tuple_leaf.286" = type { %"class.std::__1::unique_ptr.241" }
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.base::ScopedClosureRunner"* }
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.291", %"class.blink::FreeList", %"class.WTF::Vector.296" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [256 x i8] }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::Vector.291" = type { %"class.WTF::VectorBuffer.292" }
%"class.WTF::VectorBuffer.292" = type { %"class.WTF::VectorBufferBase.293" }
%"class.WTF::VectorBufferBase.293" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.WTF::Vector.296" = type { %"class.WTF::VectorBuffer.297" }
%"class.WTF::VectorBuffer.297" = type { %"class.WTF::VectorBufferBase.298" }
%"class.WTF::VectorBufferBase.298" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZNSt3__16vectorINS_4pairIi13scoped_refptrIN4base14RefCountedDataINS0_IN2cc15PaintWorkletJobENS_9allocatorIS6_EEEEEEEEENS7_ISC_EEE13__vdeallocateEv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink27PaintWorkletPaintDispatcherEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink27PaintWorkletPaintDispatcherEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink27PaintWorkletPaintDispatcherEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE = comdat any

$_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1ELm2EEEEJN5blink21CrossThreadPersistentINS3_19PaintWorkletPainterEEE13scoped_refptrIN4base14RefCountedDataINS_6vectorIN2cc15PaintWorkletJobENS_9allocatorISC_EEEEEEENS_10unique_ptrINS8_19ScopedClosureRunnerENS_14default_deleteISJ_EEEEEED2Ev = comdat any

$_ZN5blink14PersistentBaseINS_19PaintWorkletPainterELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_19PaintWorkletPainterELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZNK5blink14PersistentBaseINS_19PaintWorkletPainterELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE15TracePersistentEPNS_7VisitorE = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__14pairIN5blink21CrossThreadPersistentINS4_19PaintWorkletPainterEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSI_ISC_EEEESJ_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISL_SG_SM_EERiNS3_IPS6_SB_EEEENS_18HashTableAddResultISN_SD_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__14pairIN5blink21CrossThreadPersistentINS4_19PaintWorkletPainterEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSI_ISC_EEEESJ_NS_18PartitionAllocatorEE6ExpandEPSD_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__14pairIN5blink21CrossThreadPersistentINS4_19PaintWorkletPainterEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSI_ISC_EEEESJ_NS_18PartitionAllocatorEE8RehashToEPSD_jSO_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__14pairIN5blink21CrossThreadPersistentINS4_19PaintWorkletPainterEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSI_ISC_EEEESJ_NS_18PartitionAllocatorEE8ReinsertEOSD_ = comdat any

$_ZN3WTF5MoverINS_12KeyValuePairIiNSt3__14pairIN5blink21CrossThreadPersistentINS4_19PaintWorkletPainterEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEEEEEENS_18PartitionAllocatorENS_18HashMapValueTraitsINS_10HashTraitsIiEENSG_ISC_EEEELb1EE4MoveEOSD_RSD_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__14pairIN5blink21CrossThreadPersistentINS4_19PaintWorkletPainterEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSI_ISC_EEEESJ_NS_18PartitionAllocatorEE5eraseEPKSD_ = comdat any

@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [57 x i8] c"PaintWorkletPaintDispatcher::RegisterPaintWorkletPainter\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"PaintWorkletPaintDispatcher::UnregisterPaintWorkletPainter\00", align 1
@.str.2 = private unnamed_addr constant [46 x i8] c"PaintWorkletPaintDispatcher::DispatchWorklets\00", align 1
@.str.3 = private unnamed_addr constant [17 x i8] c"DispatchWorklets\00", align 1
@.str.4 = private unnamed_addr constant [85 x i8] c"../../third_party/blink/renderer/platform/graphics/paint_worklet_paint_dispatcher.cc\00", align 1
@.str.5 = private unnamed_addr constant [44 x i8] c"PaintWorkletPaintDispatcher::AsyncPaintDone\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"operator()\00", align 1
@.str.7 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.8 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.9 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.10 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIiNSt3__14pairIN5blink21CrossThreadPersistentINS4_19PaintWorkletPainterEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEEEEEEEEPKcv = private unnamed_addr constant [191 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<int, std::__1::pair<blink::CrossThreadPersistent<blink::PaintWorkletPainter>, scoped_refptr<base::SingleThreadTaskRunner> > >]\00", align 1

@_ZN5blink27PaintWorkletPaintDispatcherC1Ev = hidden unnamed_addr alias void (%"class.blink::PaintWorkletPaintDispatcher"*), void (%"class.blink::PaintWorkletPaintDispatcher"*)* @_ZN5blink27PaintWorkletPaintDispatcherC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.blink::PlatformPaintWorkletLayerPainter"* @_ZN5blink27PaintWorkletPaintDispatcher29CreateCompositorThreadPainterEPN4base7WeakPtrIS0_EE(%"class.base::WeakPtr"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::internal::WeakReference", align 8
  %3 = alloca %"class.std::__1::unique_ptr.0", align 8
  %4 = alloca %"class.base::WeakPtr", align 8
  %5 = bitcast %"class.std::__1::unique_ptr.0"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %3, i64 0, i32 0, i32 0, i32 0
  %7 = tail call i8* @_Znwm(i64 72) #10
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 20, i1 false) #9
  %8 = getelementptr inbounds i8, i8* %7, i64 24
  %9 = getelementptr inbounds i8, i8* %7, i64 56
  %10 = bitcast i8* %9 to %"class.base::internal::WeakPtrFactoryBase"*
  %11 = ptrtoint i8* %7 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 32, i1 false) #9
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %10, i64 %11) #9
  %12 = bitcast %"class.std::__1::unique_ptr.0"* %3 to i8**
  store i8* %7, i8** %12, align 8
  %13 = bitcast %"class.base::WeakPtr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #9
  %14 = bitcast %"class.base::internal::WeakReference"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9, !noalias !2
  %15 = bitcast i8* %9 to %"class.base::internal::WeakReferenceOwner"*
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %2, %"class.base::internal::WeakReferenceOwner"* %15) #9, !noalias !2
  %16 = getelementptr inbounds i8, i8* %7, i64 64
  %17 = bitcast i8* %16 to i64*
  %18 = load i64, i64* %17, align 8, !noalias !2
  %19 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %19, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %2, i64 %18) #9
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9, !noalias !2
  %20 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.base::WeakPtr"* %4 to i64*
  %22 = load i64, i64* %21, align 8
  store %"class.base::internal::WeakReference::Flag"* null, %"class.base::internal::WeakReference::Flag"** %20, align 8
  %23 = bitcast %"class.base::WeakPtr"* %0 to i64*
  %24 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %24, align 8
  store i64 %22, i64* %23, align 8
  %26 = icmp eq %"class.base::internal::WeakReference::Flag"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %1
  %28 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = atomicrmw sub i32* %28, i32 1 acq_rel
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %31, label %33

31:                                               ; preds = %27
  call void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"* nonnull %25) #9
  %32 = bitcast %"class.base::internal::WeakReference::Flag"* %25 to i8*
  call void @_ZdlPv(i8* %32) #10
  br label %33

33:                                               ; preds = %31, %27, %1
  %34 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %0, i64 0, i32 0, i32 1
  store i64 %35, i64* %36, align 8
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %19) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #9
  %37 = call i8* @_Znwm(i64 16) #10
  %38 = bitcast i8* %37 to %"class.blink::PlatformPaintWorkletLayerPainter"*
  %39 = load %"class.blink::PaintWorkletPaintDispatcher"*, %"class.blink::PaintWorkletPaintDispatcher"** %6, align 8
  call void @_ZN5blink32PlatformPaintWorkletLayerPainterC1ENSt3__110unique_ptrINS_27PaintWorkletPaintDispatcherENS1_14default_deleteIS3_EEEE(%"class.blink::PlatformPaintWorkletLayerPainter"* nonnull %38, %"class.blink::PaintWorkletPaintDispatcher"* %39) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  ret %"class.blink::PlatformPaintWorkletLayerPainter"* %38
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27PaintWorkletPaintDispatcherC2Ev(%"class.blink::PaintWorkletPaintDispatcher"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::PaintWorkletPaintDispatcher"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 20, i1 false) #9
  %3 = getelementptr inbounds %"class.blink::PaintWorkletPaintDispatcher", %"class.blink::PaintWorkletPaintDispatcher"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.blink::PaintWorkletPaintDispatcher", %"class.blink::PaintWorkletPaintDispatcher"* %0, i64 0, i32 3, i32 0
  %5 = ptrtoint %"class.blink::PaintWorkletPaintDispatcher"* %0 to i64
  %6 = bitcast %"class.base::flat_map"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 32, i1 false)
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %4, i64 %5) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27PaintWorkletPaintDispatcher27RegisterPaintWorkletPainterEPNS_19PaintWorkletPainterE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::PaintWorkletPaintDispatcher"*, %"class.blink::PaintWorkletPainter"*, %"class.base::SingleThreadTaskRunner"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::TimeTicks", align 8
  %5 = alloca i32, align 4
  %6 = alloca %"struct.std::__1::pair.239", align 8
  %7 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %8 = and i8 %7, 25
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %16, label %10, !prof !7

10:                                               ; preds = %3
  %11 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #9
  %12 = bitcast %"class.base::TimeTicks"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #9
  %13 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %4, i64 0, i32 0, i32 0
  %14 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #9
  store i64 %14, i64* %13, align 8
  %15 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %11, %"class.base::TimeTicks"* nonnull dereferenceable(8) %4, %"class.base::trace_event::TraceArguments"* null, i32 0) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #9
  br label %16

16:                                               ; preds = %3, %10
  %17 = phi i64 [ -6148914691236517206, %3 ], [ %15, %10 ]
  %18 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %3 ], [ getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i64 0, i64 0), %10 ]
  %19 = phi i8* [ null, %3 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), %10 ]
  %20 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #9
  %21 = bitcast %"class.blink::PaintWorkletPainter"* %1 to i32 (%"class.blink::PaintWorkletPainter"*)***
  %22 = load i32 (%"class.blink::PaintWorkletPainter"*)**, i32 (%"class.blink::PaintWorkletPainter"*)*** %21, align 8
  %23 = getelementptr inbounds i32 (%"class.blink::PaintWorkletPainter"*)*, i32 (%"class.blink::PaintWorkletPainter"*)** %22, i64 3
  %24 = load i32 (%"class.blink::PaintWorkletPainter"*)*, i32 (%"class.blink::PaintWorkletPainter"*)** %23, align 8
  %25 = call i32 %24(%"class.blink::PaintWorkletPainter"* %1) #9
  store i32 %25, i32* %5, align 4
  %26 = bitcast %"struct.std::__1::pair.239"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #9
  %27 = icmp eq %"class.base::SingleThreadTaskRunner"* %2, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %16
  %29 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %2, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw add i32* %29, i32 1 monotonic
  br label %31

31:                                               ; preds = %16, %28
  %32 = getelementptr inbounds %"struct.std::__1::pair.239", %"struct.std::__1::pair.239"* %6, i64 0, i32 0
  store %"class.blink::PaintWorkletPainter"* %1, %"class.blink::PaintWorkletPainter"** %32, align 8
  %33 = getelementptr inbounds %"struct.std::__1::pair.239", %"struct.std::__1::pair.239"* %6, i64 0, i32 1, i32 0
  store %"class.base::SingleThreadTaskRunner"* %2, %"class.base::SingleThreadTaskRunner"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::PaintWorkletPaintDispatcher", %"class.blink::PaintWorkletPaintDispatcher"* %0, i64 0, i32 0, i32 0
  %35 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__14pairIN5blink21CrossThreadPersistentINS4_19PaintWorkletPainterEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSI_ISC_EEEESJ_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISL_SG_SM_EERiNS3_IPS6_SB_EEEENS_18HashTableAddResultISN_SD_EEOT0_OT1_(%"class.WTF::HashTable"* %34, i32* nonnull dereferenceable(4) %5, %"struct.std::__1::pair.239"* nonnull dereferenceable(16) %6) #9
  %36 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %33, align 8
  %37 = icmp eq %"class.base::SingleThreadTaskRunner"* %36, null
  br i1 %37, label %46, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %36, i64 0, i32 0, i32 0, i32 1
  %40 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw sub i32* %40, i32 1 acq_rel
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %46

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %39, i64 -2
  %45 = bitcast %"class.base::RefCountedThreadSafe"* %44 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %45) #9
  br label %46

46:                                               ; preds = %31, %38, %43
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #9
  %47 = icmp eq i8* %19, null
  br i1 %47, label %52, label %48

48:                                               ; preds = %46
  %49 = load i8, i8* %19, align 1
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %52, label %51

51:                                               ; preds = %48
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %19, i8* %18, i64 %17) #9
  br label %52

52:                                               ; preds = %46, %48, %51
  br i1 %27, label %61, label %53

53:                                               ; preds = %52
  %54 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %2, i64 0, i32 0, i32 0, i32 1
  %55 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = atomicrmw sub i32* %55, i32 1 acq_rel
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %54, i64 -2
  %60 = bitcast %"class.base::RefCountedThreadSafe"* %59 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %60) #9
  br label %61

61:                                               ; preds = %52, %53, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27PaintWorkletPaintDispatcher29UnregisterPaintWorkletPainterEi(%"class.blink::PaintWorkletPaintDispatcher"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %5 = and i8 %4, 25
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %13, label %7, !prof !7

7:                                                ; preds = %2
  %8 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #9
  %9 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %11 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #9
  store i64 %11, i64* %10, align 8
  %12 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %8, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 0) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  br label %13

13:                                               ; preds = %2, %7
  %14 = phi i64 [ -6148914691236517206, %2 ], [ %12, %7 ]
  %15 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %2 ], [ getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), %7 ]
  %16 = phi i8* [ null, %2 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), %7 ]
  %17 = getelementptr inbounds %"class.blink::PaintWorkletPaintDispatcher", %"class.blink::PaintWorkletPaintDispatcher"* %0, i64 0, i32 0, i32 0, i32 0
  %18 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %17, align 8
  %19 = icmp eq %"struct.WTF::KeyValuePair"* %18, null
  %20 = getelementptr inbounds %"class.blink::PaintWorkletPaintDispatcher", %"class.blink::PaintWorkletPaintDispatcher"* %0, i64 0, i32 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  br i1 %19, label %77, label %22

22:                                               ; preds = %13
  %23 = add i32 %21, -1
  %24 = zext i32 %23 to i64
  %25 = shl i32 %1, 15
  %26 = xor i32 %25, -1
  %27 = add i32 %26, %1
  %28 = lshr i32 %27, 10
  %29 = xor i32 %28, %27
  %30 = mul i32 %29, 9
  %31 = lshr i32 %30, 6
  %32 = xor i32 %31, %30
  %33 = shl i32 %32, 11
  %34 = xor i32 %33, -1
  %35 = add i32 %32, %34
  %36 = lshr i32 %35, 16
  %37 = xor i32 %36, %35
  %38 = and i32 %23, %37
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %18, i64 %39
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %40, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, %1
  br i1 %43, label %72, label %44

44:                                               ; preds = %22
  %45 = xor i32 %37, -1
  %46 = lshr i32 %35, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %63, %44
  %59 = phi i32 [ %42, %44 ], [ %70, %63 ]
  %60 = phi i64 [ %39, %44 ], [ %67, %63 ]
  %61 = phi i64 [ 0, %44 ], [ %65, %63 ]
  %62 = icmp eq i32 %59, 0
  br i1 %62, label %77, label %63

63:                                               ; preds = %58
  %64 = icmp eq i64 %61, 0
  %65 = select i1 %64, i64 %57, i64 %61
  %66 = add i64 %65, %60
  %67 = and i64 %66, %24
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %18, i64 %67
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %68, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, %1
  br i1 %71, label %72, label %58

72:                                               ; preds = %63, %22
  %73 = phi %"struct.WTF::KeyValuePair"* [ %40, %22 ], [ %68, %63 ]
  %74 = icmp eq %"struct.WTF::KeyValuePair"* %73, null
  br i1 %74, label %77, label %75

75:                                               ; preds = %72
  %76 = zext i32 %21 to i64
  br label %80

77:                                               ; preds = %58, %72, %13
  %78 = zext i32 %21 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %18, i64 %78
  br label %80

80:                                               ; preds = %77, %75
  %81 = phi i64 [ %76, %75 ], [ %78, %77 ]
  %82 = phi %"struct.WTF::KeyValuePair"* [ %73, %75 ], [ %79, %77 ]
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %18, i64 %81
  %84 = icmp eq %"struct.WTF::KeyValuePair"* %83, %82
  br i1 %84, label %87, label %85

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.blink::PaintWorkletPaintDispatcher", %"class.blink::PaintWorkletPaintDispatcher"* %0, i64 0, i32 0, i32 0
  call void @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__14pairIN5blink21CrossThreadPersistentINS4_19PaintWorkletPainterEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSI_ISC_EEEESJ_NS_18PartitionAllocatorEE5eraseEPKSD_(%"class.WTF::HashTable"* %86, %"struct.WTF::KeyValuePair"* %82) #9
  br label %87

87:                                               ; preds = %80, %85
  %88 = icmp eq i8* %16, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = load i8, i8* %16, align 1
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %93, label %92

92:                                               ; preds = %89
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %16, i8* %15, i64 %14) #9
  br label %93

93:                                               ; preds = %87, %89, %92
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27PaintWorkletPaintDispatcher16DispatchWorkletsEN4base8flat_mapIi13scoped_refptrINS1_14RefCountedDataINSt3__16vectorIN2cc15PaintWorkletJobENS5_9allocatorIS8_EEEEEEENS5_4lessIvEENS6_INS5_4pairIiSD_EENS9_ISH_EEEEEENS1_12OnceCallbackIFvSK_EEE(%"class.blink::PaintWorkletPaintDispatcher"*, %"class.base::flat_map"* nocapture, %"class.base::OnceCallback"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback.240", align 8
  %5 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %6 = alloca %"class.base::OnceCallback.240", align 8
  %7 = alloca %"class.base::OnceCallback.240", align 8
  %8 = alloca %"class.blink::CrossThreadPersistent", align 8
  %9 = alloca %"class.base::OnceCallback.240", align 8
  %10 = alloca %"class.base::RepeatingCallback", align 8
  %11 = alloca %"class.base::RepeatingCallback", align 8
  %12 = alloca %"class.base::RepeatingCallback", align 8
  %13 = alloca %"class.base::WeakPtr", align 8
  %14 = alloca %"class.base::internal::WeakReference", align 8
  %15 = alloca %"class.base::TimeTicks", align 8
  %16 = alloca %"class.WTF::CrossThreadFunction", align 8
  %17 = alloca %"class.base::WeakPtr", align 8
  %18 = alloca %"class.base::RepeatingCallback", align 8
  %19 = alloca %"class.base::OnceCallback.240", align 8
  %20 = alloca %"class.base::RepeatingCallback", align 8
  %21 = alloca %"class.WTF::CrossThreadFunction", align 8
  %22 = alloca %"class.base::Location", align 8
  %23 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %24 = alloca %"class.blink::CrossThreadPersistent", align 8
  %25 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %26 = and i8 %25, 25
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %34, label %28, !prof !7

28:                                               ; preds = %3
  %29 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #9
  %30 = bitcast %"class.base::TimeTicks"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #9
  %31 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %15, i64 0, i32 0, i32 0
  %32 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #9
  store i64 %32, i64* %31, align 8
  %33 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.2, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %29, %"class.base::TimeTicks"* nonnull dereferenceable(8) %15, %"class.base::trace_event::TraceArguments"* null, i32 0) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #9
  br label %34

34:                                               ; preds = %3, %28
  %35 = phi i8* [ null, %3 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), %28 ]
  %36 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %3 ], [ getelementptr inbounds ([46 x i8], [46 x i8]* @.str.2, i64 0, i64 0), %28 ]
  %37 = phi i64 [ -6148914691236517206, %3 ], [ %33, %28 ]
  %38 = getelementptr inbounds %"class.blink::PaintWorkletPaintDispatcher", %"class.blink::PaintWorkletPaintDispatcher"* %0, i64 0, i32 2, i32 0
  %39 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %40 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %38, %"class.base::internal::CallbackBase"* dereferenceable(8) %39) #9
  %41 = getelementptr inbounds %"class.blink::PaintWorkletPaintDispatcher", %"class.blink::PaintWorkletPaintDispatcher"* %0, i64 0, i32 1
  %42 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %41, i64 0, i32 0, i32 0
  call void @_ZNSt3__16vectorINS_4pairIi13scoped_refptrIN4base14RefCountedDataINS0_IN2cc15PaintWorkletJobENS_9allocatorIS6_EEEEEEEEENS7_ISC_EEE13__vdeallocateEv(%"class.std::__1::vector"* %42) #9
  %43 = bitcast %"class.base::flat_map"* %1 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.base::flat_map"* %41 to i64*
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %47 = bitcast %"struct.std::__1::pair.185"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.blink::PaintWorkletPaintDispatcher", %"class.blink::PaintWorkletPaintDispatcher"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %50 = bitcast %"struct.std::__1::pair.185"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %1, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %52 = bitcast %"struct.std::__1::pair.185"** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds %"class.blink::PaintWorkletPaintDispatcher", %"class.blink::PaintWorkletPaintDispatcher"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %55 = bitcast %"struct.std::__1::pair.185"** %54 to i64*
  store i64 %53, i64* %55, align 8
  %56 = bitcast %"class.base::flat_map"* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 24, i1 false) #9
  %57 = call %"class.blink::Thread"* @_ZN5blink6Thread7CurrentEv() #9
  %58 = bitcast %"class.blink::Thread"* %57 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)***
  %59 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*** %58, align 8
  %60 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %59, i64 3
  %61 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %60, align 8
  %62 = call %"class.base::SingleThreadTaskRunner"* %61(%"class.blink::Thread"* %57) #9
  %63 = ptrtoint %"class.base::SingleThreadTaskRunner"* %62 to i64
  %64 = bitcast %"class.WTF::CrossThreadFunction"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #9
  %65 = getelementptr inbounds %"class.WTF::CrossThreadFunction", %"class.WTF::CrossThreadFunction"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.base::WeakPtr"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %66) #9
  %67 = bitcast %"class.base::internal::WeakReference"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #9, !noalias !8
  %68 = getelementptr inbounds %"class.blink::PaintWorkletPaintDispatcher", %"class.blink::PaintWorkletPaintDispatcher"* %0, i64 0, i32 3, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %14, %"class.base::internal::WeakReferenceOwner"* %68) #9, !noalias !8
  %69 = getelementptr inbounds %"class.blink::PaintWorkletPaintDispatcher", %"class.blink::PaintWorkletPaintDispatcher"* %0, i64 0, i32 3, i32 0, i32 1
  %70 = load i64, i64* %69, align 8, !noalias !8
  %71 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %17, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %71, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %14, i64 %70) #9
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %14) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #9, !noalias !8
  %72 = bitcast %"class.base::RepeatingCallback"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72)
  %73 = bitcast %"class.base::WeakPtr"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %73) #9, !noalias !11
  %74 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %13, i64 0, i32 0, i32 0
  %75 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %17, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* nonnull %74, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %75) #9, !noalias !11
  %76 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %13, i64 0, i32 0, i32 1
  %77 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %17, i64 0, i32 0, i32 1
  %78 = load i64, i64* %77, align 8, !noalias !14
  store i64 %78, i64* %76, align 8, !alias.scope !17, !noalias !11
  %79 = call i8* @_Znwm(i64 64) #10, !noalias !18
  %80 = bitcast i8* %79 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %80, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink27PaintWorkletPaintDispatcher16DispatchWorkletsENS_8flat_mapIi13scoped_refptrINS_14RefCountedDataINSt3__16vectorIN2cc15PaintWorkletJobENS8_9allocatorISB_EEEEEEENS8_4lessIvEENS9_INS8_4pairIiSG_EENSC_ISK_EEEEEENS_12OnceCallbackIFvSN_EEEE3$_0JNS_7WeakPtrIS4_EES6_INS_22SingleThreadTaskRunnerEEEEEFvvEE3RunEPNS0_13BindStateBaseE" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink27PaintWorkletPaintDispatcher16DispatchWorkletsENS_8flat_mapIi13scoped_refptrINS_14RefCountedDataINSt3__16vectorIN2cc15PaintWorkletJobENS7_9allocatorISA_EEEEEEENS7_4lessIvEENS8_INS7_4pairIiSF_EENSB_ISJ_EEEEEENS_12OnceCallbackIFvSM_EEEE3$_0JNS_7WeakPtrIS3_EES5_INS_22SingleThreadTaskRunnerEEEE7DestroyEPKNS0_13BindStateBaseE") #9, !noalias !18
  %81 = getelementptr inbounds i8, i8* %79, i64 40
  %82 = bitcast i8* %81 to %"class.base::internal::WeakReference"*
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %82, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %74) #9, !noalias !18
  %83 = getelementptr inbounds i8, i8* %79, i64 48
  %84 = bitcast i8* %83 to i64*
  %85 = load i64, i64* %76, align 8, !noalias !18
  store i64 %85, i64* %84, align 8, !noalias !18
  %86 = getelementptr inbounds i8, i8* %79, i64 56
  %87 = bitcast i8* %86 to i64*
  store i64 %63, i64* %87, align 8, !noalias !18
  %88 = bitcast %"class.base::RepeatingCallback"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #9, !noalias !11
  %89 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %90 = ptrtoint i8* %79 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %89, align 8, !noalias !23
  %91 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %91, align 8, !noalias !23
  %92 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %11, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %92) #9, !noalias !23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #9, !noalias !11
  %93 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %12, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %93) #9, !noalias !11
  %94 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %13, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %94) #9, !noalias !11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %73) #9, !noalias !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72)
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %71) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %66) #9
  %95 = bitcast %"class.base::RepeatingCallback"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #9
  %96 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*), %"class.base::internal::BindStateBase"** %96, align 8
  %97 = load i64, i64* %50, align 8
  %98 = load i64, i64* %45, align 8
  %99 = sub i64 %97, %98
  %100 = lshr exact i64 %99, 4
  %101 = trunc i64 %100 to i32
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %65, align 8
  %102 = getelementptr inbounds %"class.WTF::CrossThreadFunction", %"class.WTF::CrossThreadFunction"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = bitcast %"class.base::RepeatingCallback"* %20 to i64*
  store i64 %90, i64* %103, align 8, !alias.scope !26
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %102, align 8, !noalias !26
  %104 = getelementptr inbounds %"class.base::OnceCallback.240", %"class.base::OnceCallback.240"* %19, i64 0, i32 0
  %105 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %20, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseC2EONS0_20CallbackBaseCopyableE(%"class.base::internal::CallbackBase"* nonnull %104, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %105) #9
  call void @_ZN4base14BarrierClosureEiNS_12OnceCallbackIFvvEEE(%"class.base::RepeatingCallback"* nonnull sret %18, i32 %101, %"class.base::OnceCallback.240"* nonnull %19) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %104) #9
  %106 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %20, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %106) #9
  %107 = getelementptr inbounds %"class.WTF::CrossThreadFunction", %"class.WTF::CrossThreadFunction"* %21, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %107) #9
  %108 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  %109 = load %"struct.std::__1::pair.185"*, %"struct.std::__1::pair.185"** %108, align 8
  %110 = load %"struct.std::__1::pair.185"*, %"struct.std::__1::pair.185"** %49, align 8
  %111 = icmp eq %"struct.std::__1::pair.185"* %109, %110
  br i1 %111, label %148, label %112

112:                                              ; preds = %34
  %113 = bitcast %"class.base::OnceCallback.240"* %9 to i8*
  %114 = bitcast %"class.base::RepeatingCallback"* %10 to i8*
  %115 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %10, i64 0, i32 0
  %116 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %18, i64 0, i32 0
  %117 = getelementptr inbounds %"class.base::OnceCallback.240", %"class.base::OnceCallback.240"* %9, i64 0, i32 0
  %118 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %10, i64 0, i32 0, i32 0
  %119 = getelementptr inbounds %"class.blink::PaintWorkletPaintDispatcher", %"class.blink::PaintWorkletPaintDispatcher"* %0, i64 0, i32 0, i32 0, i32 0
  %120 = getelementptr inbounds %"class.blink::PaintWorkletPaintDispatcher", %"class.blink::PaintWorkletPaintDispatcher"* %0, i64 0, i32 0, i32 0, i32 1
  %121 = bitcast %"class.base::Location"* %22 to i8*
  %122 = bitcast %"class.blink::CrossThreadPersistent"* %24 to i8*
  %123 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %24, i64 0, i32 0
  %124 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %24, i64 0, i32 0, i32 0
  %125 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %24, i64 0, i32 0, i32 1
  %126 = getelementptr inbounds %"class.blink::CrossThreadPersistentNodePtr", %"class.blink::CrossThreadPersistentNodePtr"* %125, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %125 to i64*
  %128 = bitcast %"class.base::OnceCallback.240"* %7 to i8*
  %129 = bitcast %"class.blink::CrossThreadPersistent"* %8 to i8*
  %130 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %8, i64 0, i32 0
  %131 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %8, i64 0, i32 0, i32 0
  %132 = bitcast %"class.base::OnceCallback.240"* %6 to i8*
  %133 = getelementptr inbounds %"class.base::OnceCallback.240", %"class.base::OnceCallback.240"* %7, i64 0, i32 0, i32 0, i32 0
  %134 = getelementptr inbounds %"class.base::OnceCallback.240", %"class.base::OnceCallback.240"* %6, i64 0, i32 0, i32 0, i32 0
  %135 = bitcast %"class.WTF::CrossThreadOnceFunction"* %23 to i64*
  %136 = getelementptr inbounds %"class.base::OnceCallback.240", %"class.base::OnceCallback.240"* %6, i64 0, i32 0
  %137 = getelementptr inbounds %"class.base::OnceCallback.240", %"class.base::OnceCallback.240"* %7, i64 0, i32 0
  %138 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %8, i64 0, i32 0, i32 1
  %139 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %138 to i64*
  %140 = bitcast %"class.base::OnceCallback.240"* %4 to i8*
  %141 = bitcast %"class.WTF::CrossThreadOnceFunction"* %5 to i8*
  %142 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %143 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %144 = bitcast %"class.base::OnceCallback.240"* %4 to i64*
  %145 = getelementptr inbounds %"class.base::OnceCallback.240", %"class.base::OnceCallback.240"* %4, i64 0, i32 0
  %146 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %5, i64 0, i32 0, i32 0
  %147 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %23, i64 0, i32 0, i32 0
  br label %157

148:                                              ; preds = %359, %34
  %149 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %18, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %149) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #9
  %150 = getelementptr inbounds %"class.WTF::CrossThreadFunction", %"class.WTF::CrossThreadFunction"* %16, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %150) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #9
  %151 = icmp eq i8* %35, null
  br i1 %151, label %156, label %152

152:                                              ; preds = %148
  %153 = load i8, i8* %35, align 1
  %154 = icmp eq i8 %153, 0
  br i1 %154, label %156, label %155

155:                                              ; preds = %152
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %35, i8* %36, i64 %37) #9
  br label %156

156:                                              ; preds = %148, %152, %155
  ret void

157:                                              ; preds = %112, %359
  %158 = phi %"struct.std::__1::pair.185"* [ %109, %112 ], [ %360, %359 ]
  %159 = getelementptr inbounds %"struct.std::__1::pair.185", %"struct.std::__1::pair.185"* %158, i64 0, i32 0
  %160 = load i32, i32* %159, align 8
  %161 = getelementptr inbounds %"struct.std::__1::pair.185", %"struct.std::__1::pair.185"* %158, i64 0, i32 1, i32 0
  %162 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %161, align 8
  %163 = ptrtoint %"class.base::RefCountedData"* %162 to i64
  %164 = icmp eq %"class.base::RefCountedData"* %162, null
  br i1 %164, label %168, label %165

165:                                              ; preds = %157
  %166 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %162, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %167 = atomicrmw add i32* %166, i32 1 monotonic
  br label %168

168:                                              ; preds = %157, %165
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %113)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %114)
  %169 = call i8* @_Znwm(i64 8) #10
  %170 = bitcast i8* %169 to %"class.base::ScopedClosureRunner"*
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %115, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %116) #9
  call void @_ZN4base8internal12CallbackBaseC2EONS0_20CallbackBaseCopyableE(%"class.base::internal::CallbackBase"* nonnull %117, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %115) #9
  call void @_ZN4base19ScopedClosureRunnerC1ENS_12OnceCallbackIFvvEEE(%"class.base::ScopedClosureRunner"* nonnull %170, %"class.base::OnceCallback.240"* nonnull %9) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %117) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %118) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %113)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %114)
  %171 = ptrtoint i8* %169 to i64
  %172 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %119, align 8
  %173 = icmp eq %"struct.WTF::KeyValuePair"* %172, null
  %174 = load i32, i32* %120, align 8
  br i1 %173, label %230, label %175

175:                                              ; preds = %168
  %176 = add i32 %174, -1
  %177 = zext i32 %176 to i64
  %178 = shl i32 %160, 15
  %179 = xor i32 %178, -1
  %180 = add i32 %160, %179
  %181 = lshr i32 %180, 10
  %182 = xor i32 %181, %180
  %183 = mul i32 %182, 9
  %184 = lshr i32 %183, 6
  %185 = xor i32 %184, %183
  %186 = shl i32 %185, 11
  %187 = xor i32 %186, -1
  %188 = add i32 %185, %187
  %189 = lshr i32 %188, 16
  %190 = xor i32 %189, %188
  %191 = and i32 %176, %190
  %192 = zext i32 %191 to i64
  %193 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %172, i64 %192
  %194 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %193, i64 0, i32 0
  %195 = load i32, i32* %194, align 4
  %196 = icmp eq i32 %195, %160
  br i1 %196, label %225, label %197

197:                                              ; preds = %175
  %198 = xor i32 %190, -1
  %199 = lshr i32 %188, 23
  %200 = add i32 %199, %198
  %201 = shl i32 %200, 12
  %202 = xor i32 %201, %200
  %203 = lshr i32 %202, 7
  %204 = xor i32 %203, %202
  %205 = shl i32 %204, 2
  %206 = xor i32 %205, %204
  %207 = lshr i32 %206, 20
  %208 = xor i32 %207, %206
  %209 = or i32 %208, 1
  %210 = zext i32 %209 to i64
  br label %211

211:                                              ; preds = %216, %197
  %212 = phi i32 [ %195, %197 ], [ %223, %216 ]
  %213 = phi i64 [ %192, %197 ], [ %220, %216 ]
  %214 = phi i64 [ 0, %197 ], [ %218, %216 ]
  %215 = icmp eq i32 %212, 0
  br i1 %215, label %230, label %216

216:                                              ; preds = %211
  %217 = icmp eq i64 %214, 0
  %218 = select i1 %217, i64 %210, i64 %214
  %219 = add i64 %218, %213
  %220 = and i64 %219, %177
  %221 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %172, i64 %220
  %222 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %221, i64 0, i32 0
  %223 = load i32, i32* %222, align 4
  %224 = icmp eq i32 %223, %160
  br i1 %224, label %225, label %211

225:                                              ; preds = %216, %175
  %226 = phi %"struct.WTF::KeyValuePair"* [ %193, %175 ], [ %221, %216 ]
  %227 = icmp eq %"struct.WTF::KeyValuePair"* %226, null
  br i1 %227, label %230, label %228

228:                                              ; preds = %225
  %229 = zext i32 %174 to i64
  br label %233

230:                                              ; preds = %211, %225, %168
  %231 = zext i32 %174 to i64
  %232 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %172, i64 %231
  br label %233

233:                                              ; preds = %228, %230
  %234 = phi i64 [ %229, %228 ], [ %231, %230 ]
  %235 = phi %"struct.WTF::KeyValuePair"* [ %226, %228 ], [ %232, %230 ]
  %236 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %172, i64 %234
  %237 = icmp eq %"struct.WTF::KeyValuePair"* %235, %236
  br i1 %237, label %331, label %238

238:                                              ; preds = %233
  %239 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %235, i64 0, i32 1, i32 0, i32 0, i32 0
  %240 = load %"class.blink::PaintWorkletPainter"*, %"class.blink::PaintWorkletPainter"** %239, align 8
  %241 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %235, i64 0, i32 1, i32 1, i32 0
  %242 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %241, align 8
  %243 = icmp eq %"class.base::SingleThreadTaskRunner"* %242, null
  br i1 %243, label %247, label %244

244:                                              ; preds = %238
  %245 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %242, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %246 = atomicrmw add i32* %245, i32 1 monotonic
  br label %247

247:                                              ; preds = %238, %244
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %121) #9
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %22, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.4, i64 0, i64 0), i32 134) #9
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %122) #9
  store %"class.blink::PaintWorkletPainter"* %240, %"class.blink::PaintWorkletPainter"** %124, align 8, !alias.scope !29
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %126, align 8, !alias.scope !29
  %248 = ptrtoint %"class.blink::PaintWorkletPainter"* %240 to i64
  switch i64 %248, label %249 [
    i64 0, label %267
    i64 -1, label %267
  ]

249:                                              ; preds = %247
  %250 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9, !noalias !29
  %251 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %250, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %251) #9, !noalias !29
  %252 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9, !noalias !29
  %253 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %252, i64 0, i32 0, i32 0
  %254 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %253, align 8, !noalias !29
  %255 = icmp eq %"class.blink::PersistentNode"* %254, null
  br i1 %255, label %256, label %259, !prof !32

256:                                              ; preds = %249
  %257 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %252, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %257) #9
  %258 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %253, align 8
  br label %259

259:                                              ; preds = %256, %249
  %260 = phi %"class.blink::PersistentNode"* [ %258, %256 ], [ %254, %249 ]
  %261 = bitcast %"class.blink::PersistentNode"* %260 to i64*
  %262 = load i64, i64* %261, align 8, !noalias !29
  %263 = bitcast %"class.blink::CrossThreadPersistentRegion"* %252 to i64*
  store i64 %262, i64* %263, align 8, !noalias !29
  %264 = bitcast %"class.blink::PersistentNode"* %260 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %123, %"class.blink::PersistentBase"** %264, align 8, !noalias !29
  %265 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %260, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_19PaintWorkletPainterELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %265, align 8
  %266 = ptrtoint %"class.blink::PersistentNode"* %260 to i64
  store atomic i64 %266, i64* %127 release, align 8, !alias.scope !29
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %251) #9
  br label %267

267:                                              ; preds = %247, %247, %259
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %128)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %129) #9, !noalias !33
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %129, i8 0, i64 16, i1 false) #9, !alias.scope !36, !noalias !33
  %268 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9, !noalias !39
  %269 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %268, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %269) #9, !noalias !39
  %270 = load %"class.blink::PaintWorkletPainter"*, %"class.blink::PaintWorkletPainter"** %124, align 8, !noalias !39
  call void @_ZN5blink14PersistentBaseINS_19PaintWorkletPainterELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase"* nonnull %130, %"class.blink::PaintWorkletPainter"* %270) #9, !noalias !33
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %269) #9, !noalias !33
  %271 = call i8* @_Znwm(i64 72) #10, !noalias !40
  %272 = bitcast i8* %271 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %272, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink27PaintWorkletPaintDispatcher16DispatchWorkletsENS_8flat_mapIi13scoped_refptrINS_14RefCountedDataINSt3__16vectorIN2cc15PaintWorkletJobENS8_9allocatorISB_EEEEEEENS8_4lessIvEENS9_INS8_4pairIiSG_EENSC_ISK_EEEEEENS_12OnceCallbackIFvSN_EEEE3$_1JNS3_21CrossThreadPersistentINS3_19PaintWorkletPainterEEESG_NS8_10unique_ptrINS_19ScopedClosureRunnerENS8_14default_deleteISW_EEEEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink27PaintWorkletPaintDispatcher16DispatchWorkletsENS_8flat_mapIi13scoped_refptrINS_14RefCountedDataINSt3__16vectorIN2cc15PaintWorkletJobENS7_9allocatorISA_EEEEEEENS7_4lessIvEENS8_INS7_4pairIiSF_EENSB_ISJ_EEEEEENS_12OnceCallbackIFvSM_EEEE3$_1JNS2_21CrossThreadPersistentINS2_19PaintWorkletPainterEEESF_NS7_10unique_ptrINS_19ScopedClosureRunnerENS7_14default_deleteISV_EEEEEE7DestroyEPKNS0_13BindStateBaseE") #9, !noalias !40
  %273 = getelementptr inbounds i8, i8* %271, i64 40
  %274 = bitcast i8* %273 to %"class.blink::PersistentBase"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %273, i8 0, i64 16, i1 false) #9, !noalias !40
  %275 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9, !noalias !40
  %276 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %275, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %276) #9, !noalias !40
  %277 = load %"class.blink::PaintWorkletPainter"*, %"class.blink::PaintWorkletPainter"** %131, align 8, !noalias !40
  call void @_ZN5blink14PersistentBaseINS_19PaintWorkletPainterELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase"* %274, %"class.blink::PaintWorkletPainter"* %277) #9, !noalias !40
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %276) #9, !noalias !40
  %278 = getelementptr inbounds i8, i8* %271, i64 56
  %279 = bitcast i8* %278 to i64*
  store i64 %163, i64* %279, align 8, !noalias !40
  %280 = getelementptr inbounds i8, i8* %271, i64 64
  %281 = bitcast i8* %280 to i64*
  store i64 %171, i64* %281, align 8, !noalias !40
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %132) #9, !noalias !33
  %282 = ptrtoint i8* %271 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %133, align 8, !noalias !45
  store i64 %282, i64* %135, align 8, !alias.scope !45
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %134, align 8, !noalias !45
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %136) #9, !noalias !45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %132) #9, !noalias !33
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %137) #9, !noalias !33
  %283 = load atomic i64, i64* %139 acquire, align 8, !noalias !33
  %284 = icmp eq i64 %283, 0
  br i1 %284, label %299, label %285

285:                                              ; preds = %267
  %286 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9, !noalias !33
  %287 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %286, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %287) #9, !noalias !33
  %288 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9, !noalias !33
  %289 = load atomic i64, i64* %139 monotonic, align 8, !noalias !33
  %290 = inttoptr i64 %289 to %"class.blink::PersistentNode"*
  %291 = icmp eq i64 %289, 0
  br i1 %291, label %298, label %292

292:                                              ; preds = %285
  %293 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %288, i64 0, i32 0, i32 0
  %294 = bitcast %"class.blink::CrossThreadPersistentRegion"* %288 to i64*
  %295 = load i64, i64* %294, align 8, !noalias !33
  %296 = inttoptr i64 %289 to i64*
  store i64 %295, i64* %296, align 8, !noalias !33
  %297 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %290, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %297, align 8, !noalias !33
  store %"class.blink::PersistentNode"* %290, %"class.blink::PersistentNode"** %293, align 8, !noalias !33
  br label %298

298:                                              ; preds = %292, %285
  store atomic i64 0, i64* %139 release, align 8, !noalias !33
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %287) #9, !noalias !33
  br label %299

299:                                              ; preds = %267, %298
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %129) #9, !noalias !33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %128)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %140)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %141)
  %300 = bitcast %"class.base::SingleThreadTaskRunner"* %242 to %"class.base::TaskRunner"*
  %301 = load i64, i64* %135, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %142, align 8
  store i64 %301, i64* %144, align 8, !alias.scope !48
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %143, align 8, !noalias !48
  %302 = bitcast %"class.base::SingleThreadTaskRunner"* %242 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.240"*, i64)***
  %303 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.240"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.240"*, i64)*** %302, align 8
  %304 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.240"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.240"*, i64)** %303, align 8
  %305 = call zeroext i1 %304(%"class.base::TaskRunner"* %300, %"class.base::Location"* nonnull dereferenceable(32) %22, %"class.base::OnceCallback.240"* nonnull %4, i64 0) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %145) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %146) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %140)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %141)
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %147) #9
  %306 = load atomic i64, i64* %127 acquire, align 8
  %307 = icmp eq i64 %306, 0
  br i1 %307, label %322, label %308

308:                                              ; preds = %299
  %309 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9
  %310 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %309, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %310) #9
  %311 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %312 = load atomic i64, i64* %127 monotonic, align 8
  %313 = inttoptr i64 %312 to %"class.blink::PersistentNode"*
  %314 = icmp eq i64 %312, 0
  br i1 %314, label %321, label %315

315:                                              ; preds = %308
  %316 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %311, i64 0, i32 0, i32 0
  %317 = bitcast %"class.blink::CrossThreadPersistentRegion"* %311 to i64*
  %318 = load i64, i64* %317, align 8
  %319 = inttoptr i64 %312 to i64*
  store i64 %318, i64* %319, align 8
  %320 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %313, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %320, align 8
  store %"class.blink::PersistentNode"* %313, %"class.blink::PersistentNode"** %316, align 8
  br label %321

321:                                              ; preds = %315, %308
  store atomic i64 0, i64* %127 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %310) #9
  br label %322

322:                                              ; preds = %299, %321
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %122) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %121) #9
  br i1 %243, label %359, label %323

323:                                              ; preds = %322
  %324 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %242, i64 0, i32 0, i32 0, i32 1
  %325 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %324, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %326 = atomicrmw sub i32* %325, i32 1 acq_rel
  %327 = icmp eq i32 %326, 1
  br i1 %327, label %328, label %359

328:                                              ; preds = %323
  %329 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %324, i64 -2
  %330 = bitcast %"class.base::RefCountedThreadSafe"* %329 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %330) #9
  br label %359

331:                                              ; preds = %233
  call void @_ZN4base19ScopedClosureRunnerD1Ev(%"class.base::ScopedClosureRunner"* nonnull %170) #9
  call void @_ZdlPv(i8* nonnull %169) #10
  br i1 %164, label %359, label %332

332:                                              ; preds = %331
  %333 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %162, i64 0, i32 0
  %334 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %162, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %335 = atomicrmw sub i32* %334, i32 1 acq_rel
  %336 = icmp eq i32 %335, 1
  br i1 %336, label %337, label %359

337:                                              ; preds = %332
  %338 = getelementptr inbounds %"class.base::RefCountedThreadSafe.187", %"class.base::RefCountedThreadSafe.187"* %333, i64 2
  %339 = bitcast %"class.base::RefCountedThreadSafe.187"* %338 to %"class.cc::PaintWorkletJob"**
  %340 = load %"class.cc::PaintWorkletJob"*, %"class.cc::PaintWorkletJob"** %339, align 8
  %341 = icmp eq %"class.cc::PaintWorkletJob"* %340, null
  br i1 %341, label %357, label %342

342:                                              ; preds = %337
  %343 = bitcast %"class.cc::PaintWorkletJob"* %340 to i8*
  %344 = getelementptr inbounds %"class.base::RefCountedThreadSafe.187", %"class.base::RefCountedThreadSafe.187"* %333, i64 4
  %345 = bitcast %"class.base::RefCountedThreadSafe.187"* %344 to %"class.cc::PaintWorkletJob"**
  %346 = load %"class.cc::PaintWorkletJob"*, %"class.cc::PaintWorkletJob"** %345, align 8
  %347 = icmp eq %"class.cc::PaintWorkletJob"* %346, %340
  br i1 %347, label %355, label %348

348:                                              ; preds = %342, %348
  %349 = phi %"class.cc::PaintWorkletJob"* [ %350, %348 ], [ %346, %342 ]
  %350 = getelementptr inbounds %"class.cc::PaintWorkletJob", %"class.cc::PaintWorkletJob"* %349, i64 -1
  call void @_ZN2cc15PaintWorkletJobD1Ev(%"class.cc::PaintWorkletJob"* %350) #9
  %351 = icmp eq %"class.cc::PaintWorkletJob"* %350, %340
  br i1 %351, label %352, label %348

352:                                              ; preds = %348
  %353 = bitcast %"class.base::RefCountedThreadSafe.187"* %338 to i8**
  %354 = load i8*, i8** %353, align 8
  br label %355

355:                                              ; preds = %352, %342
  %356 = phi i8* [ %354, %352 ], [ %343, %342 ]
  store %"class.cc::PaintWorkletJob"* %340, %"class.cc::PaintWorkletJob"** %345, align 8
  call void @_ZdlPv(i8* %356) #10
  br label %357

357:                                              ; preds = %355, %337
  %358 = bitcast %"class.base::RefCountedData"* %162 to i8*
  call void @_ZdlPv(i8* %358) #10
  br label %359

359:                                              ; preds = %357, %332, %331, %328, %323, %322
  %360 = getelementptr inbounds %"struct.std::__1::pair.185", %"struct.std::__1::pair.185"* %158, i64 1
  %361 = icmp eq %"struct.std::__1::pair.185"* %360, %110
  br i1 %361, label %148, label %157
}

declare %"class.blink::Thread"* @_ZN5blink6Thread7CurrentEv() local_unnamed_addr #3

declare void @_ZN4base14BarrierClosureEiNS_12OnceCallbackIFvvEEE(%"class.base::RepeatingCallback"* sret, i32, %"class.base::OnceCallback.240"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink27PaintWorkletPaintDispatcher18HasOngoingDispatchEv(%"class.blink::PaintWorkletPaintDispatcher"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::PaintWorkletPaintDispatcher", %"class.blink::PaintWorkletPaintDispatcher"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %2, align 8
  %4 = icmp ne %"class.base::internal::BindStateBase"* %3, null
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27PaintWorkletPaintDispatcher14AsyncPaintDoneEv(%"class.blink::PaintWorkletPaintDispatcher"* nocapture) #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = alloca %"class.base::flat_map", align 16
  %5 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %6 = and i8 %5, 25
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %14, label %8, !prof !7

8:                                                ; preds = %1
  %9 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #9
  %10 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #9
  %11 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %12 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #9
  store i64 %12, i64* %11, align 8
  %13 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %9, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 0) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #9
  br label %14

14:                                               ; preds = %1, %8
  %15 = phi i64 [ -6148914691236517206, %1 ], [ %13, %8 ]
  %16 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0), %8 ]
  %17 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), %8 ]
  %18 = getelementptr inbounds %"class.blink::PaintWorkletPaintDispatcher", %"class.blink::PaintWorkletPaintDispatcher"* %0, i64 0, i32 2
  %19 = getelementptr inbounds %"class.blink::PaintWorkletPaintDispatcher", %"class.blink::PaintWorkletPaintDispatcher"* %0, i64 0, i32 1
  %20 = bitcast %"class.base::flat_map"* %19 to <2 x i64>*
  %21 = load <2 x i64>, <2 x i64>* %20, align 8
  %22 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %23 = bitcast %"class.base::flat_map"* %4 to <2 x i64>*
  store <2 x i64> %21, <2 x i64>* %23, align 16
  %24 = getelementptr inbounds %"class.blink::PaintWorkletPaintDispatcher", %"class.blink::PaintWorkletPaintDispatcher"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %25 = bitcast %"struct.std::__1::pair.185"** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %28 = bitcast %"struct.std::__1::pair.185"** %27 to i64*
  store i64 %26, i64* %28, align 16
  %29 = bitcast %"class.base::flat_map"* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 24, i1 false) #9
  %30 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #9
  %31 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %18, i64 0, i32 0, i32 0, i32 0
  %32 = bitcast %"class.base::OnceCallback"* %18 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %33, i64* %34, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %31, align 8
  %35 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %36 = inttoptr i64 %33 to %"class.base::internal::BindStateBase"*
  %37 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %36, i64 0, i32 1
  %38 = bitcast void ()** %37 to void (%"class.base::internal::BindStateBase"*, %"class.base::flat_map"*)**
  %39 = load void (%"class.base::internal::BindStateBase"*, %"class.base::flat_map"*)*, void (%"class.base::internal::BindStateBase"*, %"class.base::flat_map"*)** %38, align 8
  call void %39(%"class.base::internal::BindStateBase"* %36, %"class.base::flat_map"* nonnull dereferenceable(24) %4) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %35) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #9
  %40 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = load %"struct.std::__1::pair.185"*, %"struct.std::__1::pair.185"** %40, align 16
  %42 = icmp eq %"struct.std::__1::pair.185"* %41, null
  br i1 %42, label %87, label %43

43:                                               ; preds = %14
  %44 = bitcast %"struct.std::__1::pair.185"* %41 to i8*
  %45 = load %"struct.std::__1::pair.185"*, %"struct.std::__1::pair.185"** %22, align 8
  %46 = icmp eq %"struct.std::__1::pair.185"* %45, %41
  br i1 %46, label %85, label %47

47:                                               ; preds = %43, %80
  %48 = phi %"struct.std::__1::pair.185"* [ %49, %80 ], [ %45, %43 ]
  %49 = getelementptr inbounds %"struct.std::__1::pair.185", %"struct.std::__1::pair.185"* %48, i64 -1
  %50 = getelementptr inbounds %"struct.std::__1::pair.185", %"struct.std::__1::pair.185"* %48, i64 -1, i32 1, i32 0
  %51 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %50, align 8
  %52 = icmp eq %"class.base::RefCountedData"* %51, null
  br i1 %52, label %80, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %51, i64 0, i32 0
  %55 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = atomicrmw sub i32* %55, i32 1 acq_rel
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %58, label %80

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.base::RefCountedThreadSafe.187", %"class.base::RefCountedThreadSafe.187"* %54, i64 2
  %60 = bitcast %"class.base::RefCountedThreadSafe.187"* %59 to %"class.cc::PaintWorkletJob"**
  %61 = load %"class.cc::PaintWorkletJob"*, %"class.cc::PaintWorkletJob"** %60, align 8
  %62 = icmp eq %"class.cc::PaintWorkletJob"* %61, null
  br i1 %62, label %78, label %63

63:                                               ; preds = %58
  %64 = bitcast %"class.cc::PaintWorkletJob"* %61 to i8*
  %65 = getelementptr inbounds %"class.base::RefCountedThreadSafe.187", %"class.base::RefCountedThreadSafe.187"* %54, i64 4
  %66 = bitcast %"class.base::RefCountedThreadSafe.187"* %65 to %"class.cc::PaintWorkletJob"**
  %67 = load %"class.cc::PaintWorkletJob"*, %"class.cc::PaintWorkletJob"** %66, align 8
  %68 = icmp eq %"class.cc::PaintWorkletJob"* %67, %61
  br i1 %68, label %76, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"class.cc::PaintWorkletJob"* [ %71, %69 ], [ %67, %63 ]
  %71 = getelementptr inbounds %"class.cc::PaintWorkletJob", %"class.cc::PaintWorkletJob"* %70, i64 -1
  call void @_ZN2cc15PaintWorkletJobD1Ev(%"class.cc::PaintWorkletJob"* %71) #9
  %72 = icmp eq %"class.cc::PaintWorkletJob"* %71, %61
  br i1 %72, label %73, label %69

73:                                               ; preds = %69
  %74 = bitcast %"class.base::RefCountedThreadSafe.187"* %59 to i8**
  %75 = load i8*, i8** %74, align 8
  br label %76

76:                                               ; preds = %73, %63
  %77 = phi i8* [ %75, %73 ], [ %64, %63 ]
  store %"class.cc::PaintWorkletJob"* %61, %"class.cc::PaintWorkletJob"** %66, align 8
  call void @_ZdlPv(i8* %77) #10
  br label %78

78:                                               ; preds = %76, %58
  %79 = bitcast %"class.base::RefCountedData"* %51 to i8*
  call void @_ZdlPv(i8* %79) #10
  br label %80

80:                                               ; preds = %78, %53, %47
  %81 = icmp eq %"struct.std::__1::pair.185"* %49, %41
  br i1 %81, label %82, label %47

82:                                               ; preds = %80
  %83 = bitcast %"class.base::flat_map"* %4 to i8**
  %84 = load i8*, i8** %83, align 16
  br label %85

85:                                               ; preds = %43, %82
  %86 = phi i8* [ %84, %82 ], [ %44, %43 ]
  store %"struct.std::__1::pair.185"* %41, %"struct.std::__1::pair.185"** %22, align 8
  call void @_ZdlPv(i8* %86) #10
  br label %87

87:                                               ; preds = %14, %85
  %88 = icmp eq i8* %17, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = load i8, i8* %17, align 1
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %93, label %92

92:                                               ; preds = %89
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %17, i8* %16, i64 %15) #9
  br label %93

93:                                               ; preds = %87, %89, %92
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #3

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #3

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #3

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBase"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_4pairIi13scoped_refptrIN4base14RefCountedDataINS0_IN2cc15PaintWorkletJobENS_9allocatorIS6_EEEEEEEEENS7_ISC_EEE13__vdeallocateEv(%"class.std::__1::vector"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %3 = load %"struct.std::__1::pair.185"*, %"struct.std::__1::pair.185"** %2, align 8
  %4 = icmp eq %"struct.std::__1::pair.185"* %3, null
  br i1 %4, label %51, label %5

5:                                                ; preds = %1
  %6 = bitcast %"struct.std::__1::pair.185"* %3 to i8*
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %8 = load %"struct.std::__1::pair.185"*, %"struct.std::__1::pair.185"** %7, align 8
  %9 = icmp eq %"struct.std::__1::pair.185"* %8, %3
  br i1 %9, label %48, label %10

10:                                               ; preds = %5, %43
  %11 = phi %"struct.std::__1::pair.185"* [ %12, %43 ], [ %8, %5 ]
  %12 = getelementptr inbounds %"struct.std::__1::pair.185", %"struct.std::__1::pair.185"* %11, i64 -1
  %13 = getelementptr inbounds %"struct.std::__1::pair.185", %"struct.std::__1::pair.185"* %11, i64 -1, i32 1, i32 0
  %14 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %13, align 8
  %15 = icmp eq %"class.base::RefCountedData"* %14, null
  br i1 %15, label %43, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %14, i64 0, i32 0
  %18 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw sub i32* %18, i32 1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %43

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.base::RefCountedThreadSafe.187", %"class.base::RefCountedThreadSafe.187"* %17, i64 2
  %23 = bitcast %"class.base::RefCountedThreadSafe.187"* %22 to %"class.cc::PaintWorkletJob"**
  %24 = load %"class.cc::PaintWorkletJob"*, %"class.cc::PaintWorkletJob"** %23, align 8
  %25 = icmp eq %"class.cc::PaintWorkletJob"* %24, null
  br i1 %25, label %41, label %26

26:                                               ; preds = %21
  %27 = bitcast %"class.cc::PaintWorkletJob"* %24 to i8*
  %28 = getelementptr inbounds %"class.base::RefCountedThreadSafe.187", %"class.base::RefCountedThreadSafe.187"* %17, i64 4
  %29 = bitcast %"class.base::RefCountedThreadSafe.187"* %28 to %"class.cc::PaintWorkletJob"**
  %30 = load %"class.cc::PaintWorkletJob"*, %"class.cc::PaintWorkletJob"** %29, align 8
  %31 = icmp eq %"class.cc::PaintWorkletJob"* %30, %24
  br i1 %31, label %39, label %32

32:                                               ; preds = %26, %32
  %33 = phi %"class.cc::PaintWorkletJob"* [ %34, %32 ], [ %30, %26 ]
  %34 = getelementptr inbounds %"class.cc::PaintWorkletJob", %"class.cc::PaintWorkletJob"* %33, i64 -1
  tail call void @_ZN2cc15PaintWorkletJobD1Ev(%"class.cc::PaintWorkletJob"* %34) #9
  %35 = icmp eq %"class.cc::PaintWorkletJob"* %34, %24
  br i1 %35, label %36, label %32

36:                                               ; preds = %32
  %37 = bitcast %"class.base::RefCountedThreadSafe.187"* %22 to i8**
  %38 = load i8*, i8** %37, align 8
  br label %39

39:                                               ; preds = %36, %26
  %40 = phi i8* [ %38, %36 ], [ %27, %26 ]
  store %"class.cc::PaintWorkletJob"* %24, %"class.cc::PaintWorkletJob"** %29, align 8
  tail call void @_ZdlPv(i8* %40) #10
  br label %41

41:                                               ; preds = %39, %21
  %42 = bitcast %"class.base::RefCountedData"* %14 to i8*
  tail call void @_ZdlPv(i8* %42) #10
  br label %43

43:                                               ; preds = %41, %16, %10
  %44 = icmp eq %"struct.std::__1::pair.185"* %12, %3
  br i1 %44, label %45, label %10

45:                                               ; preds = %43
  %46 = bitcast %"class.std::__1::vector"* %0 to i8**
  %47 = load i8*, i8** %46, align 8
  br label %48

48:                                               ; preds = %5, %45
  %49 = phi i8* [ %47, %45 ], [ %6, %5 ]
  store %"struct.std::__1::pair.185"* %3, %"struct.std::__1::pair.185"** %7, align 8
  tail call void @_ZdlPv(i8* %49) #10
  %50 = bitcast %"class.std::__1::vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 24, i1 false)
  br label %51

51:                                               ; preds = %1, %48
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink27PaintWorkletPaintDispatcher16DispatchWorkletsENS_8flat_mapIi13scoped_refptrINS_14RefCountedDataINSt3__16vectorIN2cc15PaintWorkletJobENS8_9allocatorISB_EEEEEEENS8_4lessIvEENS9_INS8_4pairIiSG_EENSC_ISK_EEEEEENS_12OnceCallbackIFvSN_EEEE3$_0JNS_7WeakPtrIS4_EES6_INS_22SingleThreadTaskRunnerEEEEEFvvEE3RunEPNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = alloca %"class.base::OnceCallback.240", align 8
  %3 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %4 = alloca %"class.base::OnceCallback.240", align 8
  %5 = alloca %"class.base::OnceCallback.240", align 8
  %6 = alloca %"class.base::WeakPtr", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %9 = alloca %"class.base::WeakPtr", align 8
  %10 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %11 = bitcast %"class.base::WeakPtr"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #9
  %12 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %9, i64 0, i32 0, i32 0
  %13 = bitcast void ()** %10 to %"class.base::internal::WeakReference"*
  call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* nonnull %12, %"class.base::internal::WeakReference"* dereferenceable(8) %13) #9
  %14 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %9, i64 0, i32 0, i32 1
  %15 = getelementptr inbounds void ()*, void ()** %10, i64 1
  %16 = bitcast void ()** %15 to i64*
  %17 = load i64, i64* %16, align 8
  store i64 %17, i64* %14, align 8
  %18 = getelementptr inbounds void ()*, void ()** %10, i64 2
  %19 = bitcast void ()** %18 to %"class.base::SingleThreadTaskRunner"**
  %20 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %19, align 8
  %21 = icmp eq %"class.base::SingleThreadTaskRunner"* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %1
  %23 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %20, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw add i32* %23, i32 1 monotonic
  br label %25

25:                                               ; preds = %22, %1
  %26 = bitcast %"class.WTF::CrossThreadOnceFunction"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #9
  %27 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #9
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.4, i64 0, i64 0), i32 100) #9
  %28 = bitcast %"class.base::OnceCallback.240"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  %29 = bitcast %"class.base::WeakPtr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #9, !noalias !51
  %30 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %6, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* nonnull %30, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %12) #9, !noalias !51
  %31 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %6, i64 0, i32 0, i32 1
  %32 = load i64, i64* %14, align 8, !noalias !54
  store i64 %32, i64* %31, align 8, !alias.scope !57, !noalias !51
  %33 = call i8* @_Znwm(i64 64) #10, !noalias !58
  %34 = bitcast i8* %33 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %34, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink27PaintWorkletPaintDispatcherEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink27PaintWorkletPaintDispatcherEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink27PaintWorkletPaintDispatcherEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #9, !noalias !58
  %35 = getelementptr inbounds i8, i8* %33, i64 32
  %36 = bitcast i8* %35 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::PaintWorkletPaintDispatcher"*)* @_ZN5blink27PaintWorkletPaintDispatcher14AsyncPaintDoneEv to i64), i64 0>, <2 x i64>* %36, align 8, !noalias !58
  %37 = getelementptr inbounds i8, i8* %33, i64 48
  %38 = bitcast i8* %37 to %"class.base::internal::WeakReference"*
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %38, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %30) #9, !noalias !58
  %39 = getelementptr inbounds i8, i8* %33, i64 56
  %40 = bitcast i8* %39 to i64*
  %41 = load i64, i64* %31, align 8, !noalias !58
  store i64 %41, i64* %40, align 8, !noalias !58
  %42 = bitcast %"class.base::OnceCallback.240"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #9, !noalias !51
  %43 = getelementptr inbounds %"class.base::OnceCallback.240", %"class.base::OnceCallback.240"* %5, i64 0, i32 0, i32 0, i32 0
  %44 = ptrtoint i8* %33 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %43, align 8, !noalias !63
  %45 = getelementptr inbounds %"class.base::OnceCallback.240", %"class.base::OnceCallback.240"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %45, align 8, !noalias !63
  %46 = getelementptr inbounds %"class.base::OnceCallback.240", %"class.base::OnceCallback.240"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %46) #9, !noalias !63
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #9, !noalias !51
  %47 = getelementptr inbounds %"class.base::OnceCallback.240", %"class.base::OnceCallback.240"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %47) #9, !noalias !51
  %48 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %6, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %48) #9, !noalias !51
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #9, !noalias !51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  %49 = bitcast %"class.base::OnceCallback.240"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #9
  %50 = bitcast %"class.WTF::CrossThreadOnceFunction"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #9
  %51 = bitcast %"class.base::SingleThreadTaskRunner"* %20 to %"class.base::TaskRunner"*
  %52 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %52, align 8
  %53 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %54 = bitcast %"class.base::OnceCallback.240"* %2 to i64*
  store i64 %44, i64* %54, align 8, !alias.scope !66
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %53, align 8, !noalias !66
  %55 = bitcast %"class.base::SingleThreadTaskRunner"* %20 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.240"*, i64)***
  %56 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.240"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.240"*, i64)*** %55, align 8
  %57 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.240"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.240"*, i64)** %56, align 8
  %58 = call zeroext i1 %57(%"class.base::TaskRunner"* %51, %"class.base::Location"* nonnull dereferenceable(32) %7, %"class.base::OnceCallback.240"* nonnull %2, i64 0) #9
  %59 = getelementptr inbounds %"class.base::OnceCallback.240", %"class.base::OnceCallback.240"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %59) #9
  %60 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %3, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %60) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #9
  %61 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %8, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %61) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27) #9
  br i1 %21, label %70, label %62

62:                                               ; preds = %25
  %63 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %20, i64 0, i32 0, i32 0, i32 1
  %64 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = atomicrmw sub i32* %64, i32 1 acq_rel
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %67, label %70

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %63, i64 -2
  %69 = bitcast %"class.base::RefCountedThreadSafe"* %68 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %69) #9
  br label %70

70:                                               ; preds = %25, %62, %67
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #9
  %71 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %9, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %71) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink27PaintWorkletPaintDispatcherEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #9
  br i1 %6, label %7, label %42

7:                                                ; preds = %1
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to %"class.blink::PaintWorkletPaintDispatcher"**
  %10 = load %"class.blink::PaintWorkletPaintDispatcher"*, %"class.blink::PaintWorkletPaintDispatcher"** %9, align 8
  %11 = icmp eq %"class.blink::PaintWorkletPaintDispatcher"* %10, null
  br i1 %11, label %42, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %16 = bitcast void ()** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #9
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0)) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %19, %12
  %23 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #9
  %24 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = select i1 %23, i8* %25, i8* null
  %27 = getelementptr inbounds i8, i8* %26, i64 %17
  %28 = bitcast i8* %27 to %"class.blink::PaintWorkletPaintDispatcher"*
  %29 = and i64 %14, 1
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %22
  %32 = bitcast i8* %27 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = add i64 %14, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to void (%"class.blink::PaintWorkletPaintDispatcher"*)**
  %37 = load void (%"class.blink::PaintWorkletPaintDispatcher"*)*, void (%"class.blink::PaintWorkletPaintDispatcher"*)** %36, align 8
  br label %40

38:                                               ; preds = %22
  %39 = inttoptr i64 %14 to void (%"class.blink::PaintWorkletPaintDispatcher"*)*
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi void (%"class.blink::PaintWorkletPaintDispatcher"*)* [ %37, %31 ], [ %39, %38 ]
  call void %41(%"class.blink::PaintWorkletPaintDispatcher"* %28) #9
  br label %42

42:                                               ; preds = %1, %7, %40
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink27PaintWorkletPaintDispatcherEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #9
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #10
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink27PaintWorkletPaintDispatcherEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #9
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.blink::PaintWorkletPaintDispatcher"**
  %9 = load %"class.blink::PaintWorkletPaintDispatcher"*, %"class.blink::PaintWorkletPaintDispatcher"** %8, align 8
  %10 = icmp ne %"class.blink::PaintWorkletPaintDispatcher"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #9
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #3

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #2

declare void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink27PaintWorkletPaintDispatcher16DispatchWorkletsENS_8flat_mapIi13scoped_refptrINS_14RefCountedDataINSt3__16vectorIN2cc15PaintWorkletJobENS7_9allocatorISA_EEEEEEENS7_4lessIvEENS8_INS7_4pairIiSF_EENSB_ISJ_EEEEEENS_12OnceCallbackIFvSM_EEEE3$_0JNS_7WeakPtrIS3_EES5_INS_22SingleThreadTaskRunnerEEEE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %20, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.base::SingleThreadTaskRunner"**
  %6 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %5, align 8
  %7 = icmp eq %"class.base::SingleThreadTaskRunner"* %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %6, i64 0, i32 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 -2
  %15 = bitcast %"class.base::RefCountedThreadSafe"* %14 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %15) #9
  br label %16

16:                                               ; preds = %3, %8, %13
  %17 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %18 = bitcast void ()** %17 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %18) #9
  %19 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %19) #10
  br label %20

20:                                               ; preds = %16, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink27PaintWorkletPaintDispatcher16DispatchWorkletsENS_8flat_mapIi13scoped_refptrINS_14RefCountedDataINSt3__16vectorIN2cc15PaintWorkletJobENS8_9allocatorISB_EEEEEEENS8_4lessIvEENS9_INS8_4pairIiSG_EENSC_ISK_EEEEEENS_12OnceCallbackIFvSN_EEEE3$_1JNS3_21CrossThreadPersistentINS3_19PaintWorkletPainterEEESG_NS8_10unique_ptrINS_19ScopedClosureRunnerENS8_14default_deleteISW_EEEEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"* nocapture) #0 align 2 {
  %2 = alloca %class.sk_sp, align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.blink::PaintWorkletPainter"**
  %5 = load %"class.blink::PaintWorkletPainter"*, %"class.blink::PaintWorkletPainter"** %4, align 8
  %6 = getelementptr inbounds void ()*, void ()** %3, i64 2
  %7 = bitcast void ()** %6 to %"class.base::RefCountedData"**
  %8 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %7, align 8
  store %"class.base::RefCountedData"* null, %"class.base::RefCountedData"** %7, align 8
  %9 = getelementptr inbounds void ()*, void ()** %3, i64 3
  %10 = bitcast void ()** %9 to %"class.base::ScopedClosureRunner"**
  %11 = load %"class.base::ScopedClosureRunner"*, %"class.base::ScopedClosureRunner"** %10, align 8
  store %"class.base::ScopedClosureRunner"* null, %"class.base::ScopedClosureRunner"** %10, align 8
  %12 = bitcast %class.sk_sp* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #9
  %13 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %8, i64 0, i32 1, i32 0, i32 0
  %14 = load %"class.cc::PaintWorkletJob"*, %"class.cc::PaintWorkletJob"** %13, align 8
  %15 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %8, i64 0, i32 1, i32 0, i32 1
  %16 = load %"class.cc::PaintWorkletJob"*, %"class.cc::PaintWorkletJob"** %15, align 8
  %17 = icmp eq %"class.cc::PaintWorkletJob"* %14, %16
  br i1 %17, label %21, label %18

18:                                               ; preds = %1
  %19 = bitcast %"class.blink::PaintWorkletPainter"* %5 to void (%class.sk_sp*, %"class.blink::PaintWorkletPainter"*, %"class.cc::PaintWorkletInput"*, %"class.base::flat_map.192"*)***
  %20 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %2, i64 0, i32 0
  br label %54

21:                                               ; preds = %74, %1
  call void @_ZN4base19ScopedClosureRunner11RunAndResetEv(%"class.base::ScopedClosureRunner"* %11) #9
  %22 = icmp eq %"class.base::ScopedClosureRunner"* %11, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %21
  call void @_ZN4base19ScopedClosureRunnerD1Ev(%"class.base::ScopedClosureRunner"* nonnull %11) #9
  %24 = bitcast %"class.base::ScopedClosureRunner"* %11 to i8*
  call void @_ZdlPv(i8* %24) #10
  br label %25

25:                                               ; preds = %23, %21
  %26 = icmp eq %"class.base::RefCountedData"* %8, null
  br i1 %26, label %77, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %8, i64 0, i32 0
  %29 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw sub i32* %29, i32 1 acq_rel
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %77

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.base::RefCountedThreadSafe.187", %"class.base::RefCountedThreadSafe.187"* %28, i64 2
  %34 = bitcast %"class.base::RefCountedThreadSafe.187"* %33 to %"class.cc::PaintWorkletJob"**
  %35 = load %"class.cc::PaintWorkletJob"*, %"class.cc::PaintWorkletJob"** %34, align 8
  %36 = icmp eq %"class.cc::PaintWorkletJob"* %35, null
  br i1 %36, label %52, label %37

37:                                               ; preds = %32
  %38 = bitcast %"class.cc::PaintWorkletJob"* %35 to i8*
  %39 = getelementptr inbounds %"class.base::RefCountedThreadSafe.187", %"class.base::RefCountedThreadSafe.187"* %28, i64 4
  %40 = bitcast %"class.base::RefCountedThreadSafe.187"* %39 to %"class.cc::PaintWorkletJob"**
  %41 = load %"class.cc::PaintWorkletJob"*, %"class.cc::PaintWorkletJob"** %40, align 8
  %42 = icmp eq %"class.cc::PaintWorkletJob"* %41, %35
  br i1 %42, label %50, label %43

43:                                               ; preds = %37, %43
  %44 = phi %"class.cc::PaintWorkletJob"* [ %45, %43 ], [ %41, %37 ]
  %45 = getelementptr inbounds %"class.cc::PaintWorkletJob", %"class.cc::PaintWorkletJob"* %44, i64 -1
  call void @_ZN2cc15PaintWorkletJobD1Ev(%"class.cc::PaintWorkletJob"* %45) #9
  %46 = icmp eq %"class.cc::PaintWorkletJob"* %45, %35
  br i1 %46, label %47, label %43

47:                                               ; preds = %43
  %48 = bitcast %"class.base::RefCountedThreadSafe.187"* %33 to i8**
  %49 = load i8*, i8** %48, align 8
  br label %50

50:                                               ; preds = %47, %37
  %51 = phi i8* [ %49, %47 ], [ %38, %37 ]
  store %"class.cc::PaintWorkletJob"* %35, %"class.cc::PaintWorkletJob"** %40, align 8
  call void @_ZdlPv(i8* %51) #10
  br label %52

52:                                               ; preds = %50, %32
  %53 = bitcast %"class.base::RefCountedData"* %8 to i8*
  call void @_ZdlPv(i8* %53) #10
  br label %77

54:                                               ; preds = %74, %18
  %55 = phi %"class.cc::PaintWorkletJob"* [ %14, %18 ], [ %75, %74 ]
  %56 = getelementptr inbounds %"class.cc::PaintWorkletJob", %"class.cc::PaintWorkletJob"* %55, i64 0, i32 1, i32 0
  %57 = load %"class.cc::PaintWorkletInput"*, %"class.cc::PaintWorkletInput"** %56, align 8
  %58 = getelementptr inbounds %"class.cc::PaintWorkletJob", %"class.cc::PaintWorkletJob"* %55, i64 0, i32 2
  %59 = load void (%class.sk_sp*, %"class.blink::PaintWorkletPainter"*, %"class.cc::PaintWorkletInput"*, %"class.base::flat_map.192"*)**, void (%class.sk_sp*, %"class.blink::PaintWorkletPainter"*, %"class.cc::PaintWorkletInput"*, %"class.base::flat_map.192"*)*** %19, align 8
  %60 = getelementptr inbounds void (%class.sk_sp*, %"class.blink::PaintWorkletPainter"*, %"class.cc::PaintWorkletInput"*, %"class.base::flat_map.192"*)*, void (%class.sk_sp*, %"class.blink::PaintWorkletPainter"*, %"class.cc::PaintWorkletInput"*, %"class.base::flat_map.192"*)** %59, i64 4
  %61 = load void (%class.sk_sp*, %"class.blink::PaintWorkletPainter"*, %"class.cc::PaintWorkletInput"*, %"class.base::flat_map.192"*)*, void (%class.sk_sp*, %"class.blink::PaintWorkletPainter"*, %"class.cc::PaintWorkletInput"*, %"class.base::flat_map.192"*)** %60, align 8
  call void %61(%class.sk_sp* nonnull sret %2, %"class.blink::PaintWorkletPainter"* %5, %"class.cc::PaintWorkletInput"* %57, %"class.base::flat_map.192"* dereferenceable(24) %58) #9
  call void @_ZN2cc15PaintWorkletJob9SetOutputE5sk_spINS_13PaintOpBufferEE(%"class.cc::PaintWorkletJob"* %55, %class.sk_sp* nonnull %2) #9
  %62 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %20, align 8
  %63 = icmp eq %"class.cc::PaintOpBuffer"* %62, null
  br i1 %63, label %74, label %64

64:                                               ; preds = %54
  %65 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %62, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = atomicrmw add i32* %65, i32 -1 acq_rel
  %67 = icmp eq i32 %66, 1
  br i1 %67, label %68, label %74

68:                                               ; preds = %64
  %69 = bitcast %"class.cc::PaintOpBuffer"* %62 to %class.SkRefCntBase*
  %70 = bitcast %"class.cc::PaintOpBuffer"* %62 to void (%class.SkRefCntBase*)***
  %71 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %70, align 8
  %72 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %71, i64 2
  %73 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %72, align 8
  call void %73(%class.SkRefCntBase* nonnull %69) #9
  br label %74

74:                                               ; preds = %68, %64, %54
  %75 = getelementptr inbounds %"class.cc::PaintWorkletJob", %"class.cc::PaintWorkletJob"* %55, i64 1
  %76 = icmp eq %"class.cc::PaintWorkletJob"* %75, %16
  br i1 %76, label %21, label %54

77:                                               ; preds = %25, %27, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #9
  ret void
}

declare void @_ZN2cc15PaintWorkletJob9SetOutputE5sk_spINS_13PaintOpBufferEE(%"class.cc::PaintWorkletJob"*, %class.sk_sp*) local_unnamed_addr #3

declare void @_ZN4base19ScopedClosureRunner11RunAndResetEv(%"class.base::ScopedClosureRunner"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink27PaintWorkletPaintDispatcher16DispatchWorkletsENS_8flat_mapIi13scoped_refptrINS_14RefCountedDataINSt3__16vectorIN2cc15PaintWorkletJobENS7_9allocatorISA_EEEEEEENS7_4lessIvEENS8_INS7_4pairIiSF_EENSB_ISJ_EEEEEENS_12OnceCallbackIFvSM_EEEE3$_1JNS2_21CrossThreadPersistentINS2_19PaintWorkletPainterEEESF_NS7_10unique_ptrINS_19ScopedClosureRunnerENS7_14default_deleteISV_EEEEEE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"struct.std::__1::__tuple_impl.283"*
  tail call void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1ELm2EEEEJN5blink21CrossThreadPersistentINS3_19PaintWorkletPainterEEE13scoped_refptrIN4base14RefCountedDataINS_6vectorIN2cc15PaintWorkletJobENS_9allocatorISC_EEEEEEENS_10unique_ptrINS8_19ScopedClosureRunnerENS_14default_deleteISJ_EEEEEED2Ev(%"struct.std::__1::__tuple_impl.283"* %5) #9
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #10
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1ELm2EEEEJN5blink21CrossThreadPersistentINS3_19PaintWorkletPainterEEE13scoped_refptrIN4base14RefCountedDataINS_6vectorIN2cc15PaintWorkletJobENS_9allocatorISC_EEEEEEENS_10unique_ptrINS8_19ScopedClosureRunnerENS_14default_deleteISJ_EEEEEED2Ev(%"struct.std::__1::__tuple_impl.283"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__tuple_impl.283", %"struct.std::__1::__tuple_impl.283"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.base::ScopedClosureRunner"*, %"class.base::ScopedClosureRunner"** %2, align 8
  store %"class.base::ScopedClosureRunner"* null, %"class.base::ScopedClosureRunner"** %2, align 8
  %4 = icmp eq %"class.base::ScopedClosureRunner"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN4base19ScopedClosureRunnerD1Ev(%"class.base::ScopedClosureRunner"* nonnull %3) #9
  %6 = bitcast %"class.base::ScopedClosureRunner"* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #10
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"struct.std::__1::__tuple_impl.283", %"struct.std::__1::__tuple_impl.283"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %8, align 8
  %10 = icmp eq %"class.base::RefCountedData"* %9, null
  br i1 %10, label %38, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %9, i64 0, i32 0
  %13 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw sub i32* %13, i32 1 acq_rel
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %38

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.base::RefCountedThreadSafe.187", %"class.base::RefCountedThreadSafe.187"* %12, i64 2
  %18 = bitcast %"class.base::RefCountedThreadSafe.187"* %17 to %"class.cc::PaintWorkletJob"**
  %19 = load %"class.cc::PaintWorkletJob"*, %"class.cc::PaintWorkletJob"** %18, align 8
  %20 = icmp eq %"class.cc::PaintWorkletJob"* %19, null
  br i1 %20, label %36, label %21

21:                                               ; preds = %16
  %22 = bitcast %"class.cc::PaintWorkletJob"* %19 to i8*
  %23 = getelementptr inbounds %"class.base::RefCountedThreadSafe.187", %"class.base::RefCountedThreadSafe.187"* %12, i64 4
  %24 = bitcast %"class.base::RefCountedThreadSafe.187"* %23 to %"class.cc::PaintWorkletJob"**
  %25 = load %"class.cc::PaintWorkletJob"*, %"class.cc::PaintWorkletJob"** %24, align 8
  %26 = icmp eq %"class.cc::PaintWorkletJob"* %25, %19
  br i1 %26, label %34, label %27

27:                                               ; preds = %21, %27
  %28 = phi %"class.cc::PaintWorkletJob"* [ %29, %27 ], [ %25, %21 ]
  %29 = getelementptr inbounds %"class.cc::PaintWorkletJob", %"class.cc::PaintWorkletJob"* %28, i64 -1
  tail call void @_ZN2cc15PaintWorkletJobD1Ev(%"class.cc::PaintWorkletJob"* %29) #9
  %30 = icmp eq %"class.cc::PaintWorkletJob"* %29, %19
  br i1 %30, label %31, label %27

31:                                               ; preds = %27
  %32 = bitcast %"class.base::RefCountedThreadSafe.187"* %17 to i8**
  %33 = load i8*, i8** %32, align 8
  br label %34

34:                                               ; preds = %31, %21
  %35 = phi i8* [ %33, %31 ], [ %22, %21 ]
  store %"class.cc::PaintWorkletJob"* %19, %"class.cc::PaintWorkletJob"** %24, align 8
  tail call void @_ZdlPv(i8* %35) #10
  br label %36

36:                                               ; preds = %34, %16
  %37 = bitcast %"class.base::RefCountedData"* %9 to i8*
  tail call void @_ZdlPv(i8* %37) #10
  br label %38

38:                                               ; preds = %7, %11, %36
  %39 = getelementptr inbounds %"struct.std::__1::__tuple_impl.283", %"struct.std::__1::__tuple_impl.283"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %40 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %39 to i64*
  %41 = load atomic i64, i64* %40 acquire, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %57, label %43

43:                                               ; preds = %38
  %44 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9
  %45 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %44, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %45) #9
  %46 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %47 = load atomic i64, i64* %40 monotonic, align 8
  %48 = inttoptr i64 %47 to %"class.blink::PersistentNode"*
  %49 = icmp eq i64 %47, 0
  br i1 %49, label %56, label %50

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %46, i64 0, i32 0, i32 0
  %52 = bitcast %"class.blink::CrossThreadPersistentRegion"* %46 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = inttoptr i64 %47 to i64*
  store i64 %53, i64* %54, align 8
  %55 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %48, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %55, align 8
  store %"class.blink::PersistentNode"* %48, %"class.blink::PersistentNode"** %51, align 8
  br label %56

56:                                               ; preds = %50, %43
  store atomic i64 0, i64* %40 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %45) #9
  br label %57

57:                                               ; preds = %38, %56
  ret void
}

declare dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() local_unnamed_addr #3

declare void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_19PaintWorkletPainterELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase"*, %"class.blink::PaintWorkletPainter"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %0, i64 0, i32 0
  store %"class.blink::PaintWorkletPainter"* %1, %"class.blink::PaintWorkletPainter"** %3, align 8
  %4 = ptrtoint %"class.blink::PaintWorkletPainter"* %1 to i64
  switch i64 %4, label %5 [
    i64 0, label %29
    i64 -1, label %29
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %0, i64 0, i32 1
  %7 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %6 to i64*
  %8 = load atomic i64, i64* %7 acquire, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %46

10:                                               ; preds = %5
  %11 = bitcast %"class.blink::PersistentBase"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  switch i64 %12, label %13 [
    i64 0, label %46
    i64 -1, label %46
  ]

13:                                               ; preds = %10
  %14 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %15 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  %17 = icmp eq %"class.blink::PersistentNode"* %16, null
  br i1 %17, label %18, label %21, !prof !32

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %14, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %19) #9
  %20 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  br label %21

21:                                               ; preds = %18, %13
  %22 = phi %"class.blink::PersistentNode"* [ %20, %18 ], [ %16, %13 ]
  %23 = bitcast %"class.blink::PersistentNode"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::CrossThreadPersistentRegion"* %14 to i64*
  store i64 %24, i64* %25, align 8
  %26 = bitcast %"class.blink::PersistentNode"* %22 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %0, %"class.blink::PersistentBase"** %26, align 8
  %27 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %22, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_19PaintWorkletPainterELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %27, align 8
  %28 = ptrtoint %"class.blink::PersistentNode"* %22 to i64
  store atomic i64 %28, i64* %7 release, align 8
  br label %46

29:                                               ; preds = %2, %2
  %30 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %0, i64 0, i32 1
  %31 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %30 to i64*
  %32 = load atomic i64, i64* %31 acquire, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %46, label %34

34:                                               ; preds = %29
  %35 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %36 = load atomic i64, i64* %31 monotonic, align 8
  %37 = inttoptr i64 %36 to %"class.blink::PersistentNode"*
  %38 = icmp eq i64 %36, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %35, i64 0, i32 0, i32 0
  %41 = bitcast %"class.blink::CrossThreadPersistentRegion"* %35 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = inttoptr i64 %36 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %37, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %44, align 8
  store %"class.blink::PersistentNode"* %37, %"class.blink::PersistentNode"** %40, align 8
  br label %45

45:                                               ; preds = %39, %34
  store atomic i64 0, i64* %31 release, align 8
  br label %46

46:                                               ; preds = %5, %45, %29, %21, %10, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_19PaintWorkletPainterELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::PersistentBase"*
  tail call void @_ZNK5blink14PersistentBaseINS_19PaintWorkletPainterELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE15TracePersistentEPNS_7VisitorE(%"class.blink::PersistentBase"* %3, %"class.blink::Visitor"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink14PersistentBaseINS_19PaintWorkletPainterELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE15TracePersistentEPNS_7VisitorE(%"class.blink::PersistentBase"*, %"class.blink::Visitor"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %0, i64 0, i32 0
  %5 = load %"class.blink::PaintWorkletPainter"*, %"class.blink::PaintWorkletPainter"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #9
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #9
  %7 = icmp eq %"class.blink::PaintWorkletPainter"* %5, null
  br i1 %7, label %75, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::PaintWorkletPainter"* %5 to i8*
  %10 = ptrtoint %"class.blink::PaintWorkletPainter"* %5 to i64
  %11 = and i64 %10, -131072
  %12 = inttoptr i64 %11 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 4138
  %14 = load i8, i8* %13, align 2
  %15 = icmp eq i8 %14, 1
  br i1 %15, label %16, label %18

16:                                               ; preds = %8
  %17 = getelementptr inbounds i8, i8* %12, i64 4160
  br label %56

18:                                               ; preds = %8
  %19 = getelementptr inbounds i8, i8* %12, i64 4096
  %20 = bitcast i8* %19 to %"class.blink::NormalPage"*
  %21 = getelementptr inbounds i8, i8* %12, i64 4400
  %22 = bitcast i8* %21 to i8**
  %23 = bitcast i8* %21 to i64*
  %24 = load i64, i64* %23, align 16
  %25 = sub i64 %10, %24
  %26 = lshr i64 %25, 3
  %27 = lshr i64 %25, 6
  %28 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %20, i64 0, i32 2, i32 0, i32 1, i64 %27
  %29 = load atomic i8, i8* %28 acquire, align 1
  %30 = trunc i64 %26 to i32
  %31 = and i32 %30, 7
  %32 = shl i32 2, %31
  %33 = trunc i32 %32 to i8
  %34 = add i8 %33, -1
  %35 = and i8 %34, %29
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %43

37:                                               ; preds = %18, %37
  %38 = phi i64 [ %39, %37 ], [ %27, %18 ]
  %39 = add i64 %38, -1
  %40 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %20, i64 0, i32 2, i32 0, i32 1, i64 %39
  %41 = load atomic i8, i8* %40 acquire, align 1
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %37, label %43

43:                                               ; preds = %37, %18
  %44 = phi i64 [ %27, %18 ], [ %39, %37 ]
  %45 = phi i8 [ %35, %18 ], [ %41, %37 ]
  %46 = zext i8 %45 to i32
  %47 = call i32 @llvm.ctlz.i32(i32 %46, i1 true) #9, !range !69
  %48 = add nsw i32 %47, -24
  %49 = shl i64 %44, 3
  %50 = or i64 %49, 7
  %51 = sext i32 %48 to i64
  %52 = sub i64 %50, %51
  %53 = shl i64 %52, 3
  %54 = load i8*, i8** %22, align 16
  %55 = getelementptr inbounds i8, i8* %54, i64 %53
  br label %56

56:                                               ; preds = %43, %16
  %57 = phi i8* [ %17, %16 ], [ %55, %43 ]
  %58 = getelementptr inbounds i8, i8* %57, i64 8
  %59 = getelementptr inbounds i8, i8* %57, i64 4
  %60 = bitcast i8* %59 to i16*
  %61 = load atomic i16, i16* %60 acquire, align 2
  %62 = lshr i16 %61, 2
  %63 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %64 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %63, i64 0, i32 0
  %65 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %64, align 8
  %66 = zext i16 %62 to i64
  %67 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %65, i64 %66
  %68 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %67, align 8
  %69 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %68, i64 0, i32 0
  %70 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %69, align 8
  %71 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %72, i64 8
  %74 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %73, align 8
  call void %74(%"class.blink::Visitor"* %1, i8* nonnull %9, i8* %58, void (%"class.blink::Visitor"*, i8*)* %70, %"class.base::Location"* nonnull dereferenceable(32) %3) #9
  br label %75

75:                                               ; preds = %2, %56
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #9
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #8

declare dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() local_unnamed_addr #3

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #3

declare void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #3

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #3

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #2

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #3

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

declare void @_ZN5blink32PlatformPaintWorkletLayerPainterC1ENSt3__110unique_ptrINS_27PaintWorkletPaintDispatcherENS1_14default_deleteIS3_EEEE(%"class.blink::PlatformPaintWorkletLayerPainter"*, %"class.blink::PaintWorkletPaintDispatcher"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__14pairIN5blink21CrossThreadPersistentINS4_19PaintWorkletPainterEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSI_ISC_EEEESJ_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISL_SG_SM_EERiNS3_IPS6_SB_EEEENS_18HashTableAddResultISN_SD_EEOT0_OT1_(%"class.WTF::HashTable"*, i32* dereferenceable(4), %"struct.std::__1::pair.239"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__14pairIN5blink21CrossThreadPersistentINS4_19PaintWorkletPainterEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSI_ISC_EEEESJ_NS_18PartitionAllocatorEE6ExpandEPSD_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %79, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %117, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -1
  %59 = select i1 %58, %"struct.WTF::KeyValuePair"* %52, %"struct.WTF::KeyValuePair"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair"* %59, null
  br i1 %69, label %79, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 32, i1 false) #9
  %72 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  %78 = load i32, i32* %1, align 4
  br label %79

79:                                               ; preds = %10, %68, %70
  %80 = phi i32 [ %78, %70 ], [ %16, %68 ], [ %16, %10 ]
  %81 = phi %"struct.WTF::KeyValuePair"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 0, i32 0
  store i32 %80, i32* %82, align 8
  %83 = getelementptr inbounds %"struct.std::__1::pair.239", %"struct.std::__1::pair.239"* %2, i64 0, i32 0
  %84 = load %"class.blink::PaintWorkletPainter"*, %"class.blink::PaintWorkletPainter"** %83, align 8
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 0, i32 1, i32 0, i32 0
  %86 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9
  %87 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %86, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %87) #9
  tail call void @_ZN5blink14PersistentBaseINS_19PaintWorkletPainterELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase"* %85, %"class.blink::PaintWorkletPainter"* %84) #9
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %87) #9
  %88 = getelementptr inbounds %"struct.std::__1::pair.239", %"struct.std::__1::pair.239"* %2, i64 0, i32 1
  %89 = getelementptr inbounds %class.scoped_refptr.179, %class.scoped_refptr.179* %88, i64 0, i32 0
  %90 = bitcast %class.scoped_refptr.179* %88 to i64*
  %91 = load i64, i64* %90, align 8
  store %"class.base::SingleThreadTaskRunner"* null, %"class.base::SingleThreadTaskRunner"** %89, align 8
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 0, i32 1, i32 1
  %93 = bitcast %class.scoped_refptr.179* %92 to i64*
  %94 = getelementptr inbounds %class.scoped_refptr.179, %class.scoped_refptr.179* %92, i64 0, i32 0
  %95 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %94, align 8
  store i64 %91, i64* %93, align 8
  %96 = icmp eq %"class.base::SingleThreadTaskRunner"* %95, null
  br i1 %96, label %105, label %97

97:                                               ; preds = %79
  %98 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %95, i64 0, i32 0, i32 0, i32 1
  %99 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %98, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = atomicrmw sub i32* %99, i32 1 acq_rel
  %101 = icmp eq i32 %100, 1
  br i1 %101, label %102, label %105

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %98, i64 -2
  %104 = bitcast %"class.base::RefCountedThreadSafe"* %103 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %104) #9
  br label %105

105:                                              ; preds = %79, %97, %102
  %106 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %107 = load i32, i32* %106, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %106, align 4
  %109 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %110 = load i32, i32* %109, align 8
  %111 = add i32 %110, %108
  %112 = shl i32 %111, 1
  %113 = load i32, i32* %12, align 8
  %114 = icmp ult i32 %112, %113
  br i1 %114, label %117, label %115

115:                                              ; preds = %105
  %116 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__14pairIN5blink21CrossThreadPersistentINS4_19PaintWorkletPainterEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSI_ISC_EEEESJ_NS_18PartitionAllocatorEE6ExpandEPSD_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %81)
  br label %117

117:                                              ; preds = %50, %105, %115
  %118 = phi i8 [ 1, %105 ], [ 1, %115 ], [ 0, %50 ]
  %119 = phi %"struct.WTF::KeyValuePair"* [ %81, %105 ], [ %116, %115 ], [ %52, %50 ]
  %120 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %119, 0
  %121 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %120, i8 %118, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %121
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__14pairIN5blink21CrossThreadPersistentINS4_19PaintWorkletPainterEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSI_ISC_EEEESJ_NS_18PartitionAllocatorEE6ExpandEPSD_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #9
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* %22, i8* %23) #9
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.10, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #9
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 5
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([191 x i8], [191 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIiNSt3__14pairIN5blink21CrossThreadPersistentINS4_19PaintWorkletPainterEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEEEEEEEEPKcv, i64 0, i64 0)) #9
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #9
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__14pairIN5blink21CrossThreadPersistentINS4_19PaintWorkletPainterEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSI_ISC_EEEESJ_NS_18PartitionAllocatorEE8RehashToEPSD_jSO_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #9
  ret %"struct.WTF::KeyValuePair"* %37
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__14pairIN5blink21CrossThreadPersistentINS4_19PaintWorkletPainterEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSI_ISC_EEEESJ_NS_18PartitionAllocatorEE8RehashToEPSD_jSO_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair"* %22 to i64
  br label %86

24:                                               ; preds = %106
  %25 = bitcast %"class.WTF::HashTable"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %107, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair"* [ null, %16 ], [ %110, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %108, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %82, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %80, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %77, %39
  %42 = phi i64 [ 0, %39 ], [ %78, %77 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 %42, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, -1
  br i1 %45, label %77, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 %42, i32 1, i32 1, i32 0
  %48 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %47, align 8
  %49 = icmp eq %"class.base::SingleThreadTaskRunner"* %48, null
  br i1 %49, label %58, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %48, i64 0, i32 0, i32 0, i32 1
  %52 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = atomicrmw sub i32* %52, i32 1 acq_rel
  %54 = icmp eq i32 %53, 1
  br i1 %54, label %55, label %58

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %51, i64 -2
  %57 = bitcast %"class.base::RefCountedThreadSafe"* %56 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %57) #9
  br label %58

58:                                               ; preds = %55, %50, %46
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 %42, i32 1, i32 0, i32 0, i32 1
  %60 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %59 to i64*
  %61 = load atomic i64, i64* %60 acquire, align 8
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %77, label %63

63:                                               ; preds = %58
  %64 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9
  %65 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %64, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %65) #9
  %66 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %67 = load atomic i64, i64* %60 monotonic, align 8
  %68 = inttoptr i64 %67 to %"class.blink::PersistentNode"*
  %69 = icmp eq i64 %67, 0
  br i1 %69, label %76, label %70

70:                                               ; preds = %63
  %71 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %66, i64 0, i32 0, i32 0
  %72 = bitcast %"class.blink::CrossThreadPersistentRegion"* %66 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = inttoptr i64 %67 to i64*
  store i64 %73, i64* %74, align 8
  %75 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %68, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %75, align 8
  store %"class.blink::PersistentNode"* %68, %"class.blink::PersistentNode"** %71, align 8
  br label %76

76:                                               ; preds = %70, %63
  store atomic i64 0, i64* %60 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %65) #9
  br label %77

77:                                               ; preds = %76, %58, %41
  %78 = add nuw nsw i64 %42, 1
  %79 = icmp eq i64 %78, %40
  br i1 %79, label %80, label %41

80:                                               ; preds = %77, %37
  %81 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %81) #9
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %82

82:                                               ; preds = %28, %80
  %83 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %84 = load i32, i32* %83, align 8
  %85 = and i32 %84, -2147483648
  store i32 %85, i32* %83, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #9
  ret %"struct.WTF::KeyValuePair"* %33

86:                                               ; preds = %21, %106
  %87 = phi i64 [ %107, %106 ], [ %23, %21 ]
  %88 = phi i32 [ %108, %106 ], [ %13, %21 ]
  %89 = phi %"struct.WTF::KeyValuePair"* [ %109, %106 ], [ %22, %21 ]
  %90 = phi %"struct.WTF::KeyValuePair"* [ %110, %106 ], [ null, %21 ]
  %91 = phi i32 [ %111, %106 ], [ 0, %21 ]
  %92 = zext i32 %91 to i64
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %89, i64 %92
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %93, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  %96 = add i32 %95, 1
  %97 = icmp ult i32 %96, 2
  br i1 %97, label %106, label %98

98:                                               ; preds = %86
  %99 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__14pairIN5blink21CrossThreadPersistentINS4_19PaintWorkletPainterEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSI_ISC_EEEESJ_NS_18PartitionAllocatorEE8ReinsertEOSD_(%"class.WTF::HashTable"* nonnull %5, %"struct.WTF::KeyValuePair"* dereferenceable(32) %93)
  %100 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %100, i64 %92
  %102 = icmp eq %"struct.WTF::KeyValuePair"* %101, %3
  %103 = select i1 %102, %"struct.WTF::KeyValuePair"* %99, %"struct.WTF::KeyValuePair"* %90
  %104 = load i32, i32* %12, align 8
  %105 = ptrtoint %"struct.WTF::KeyValuePair"* %100 to i64
  br label %106

106:                                              ; preds = %86, %98
  %107 = phi i64 [ %87, %86 ], [ %105, %98 ]
  %108 = phi i32 [ %88, %86 ], [ %104, %98 ]
  %109 = phi %"struct.WTF::KeyValuePair"* [ %89, %86 ], [ %100, %98 ]
  %110 = phi %"struct.WTF::KeyValuePair"* [ %90, %86 ], [ %103, %98 ]
  %111 = add i32 %91, 1
  %112 = icmp eq i32 %111, %108
  br i1 %112, label %24, label %86
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__14pairIN5blink21CrossThreadPersistentINS4_19PaintWorkletPainterEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSI_ISC_EEEESJ_NS_18PartitionAllocatorEE8ReinsertEOSD_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, -1
  %9 = zext i32 %8 to i64
  %10 = load i32, i32* %3, align 4
  %11 = shl i32 %10, 15
  %12 = xor i32 %11, -1
  %13 = add i32 %10, %12
  %14 = lshr i32 %13, 10
  %15 = xor i32 %14, %13
  %16 = mul i32 %15, 9
  %17 = lshr i32 %16, 6
  %18 = xor i32 %17, %16
  %19 = shl i32 %18, 11
  %20 = xor i32 %19, -1
  %21 = add i32 %18, %20
  %22 = lshr i32 %21, 16
  %23 = xor i32 %22, %21
  %24 = and i32 %23, %8
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %25
  %27 = ptrtoint %"struct.WTF::KeyValuePair"* %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %26, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %48, label %31

31:                                               ; preds = %2
  %32 = xor i32 %23, -1
  %33 = lshr i32 %21, 23
  %34 = add i32 %33, %32
  %35 = shl i32 %34, 12
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 7
  %38 = xor i32 %37, %36
  %39 = shl i32 %38, 2
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 20
  %42 = xor i32 %41, %40
  %43 = or i32 %42, 1
  %44 = zext i32 %43 to i64
  br label %54

45:                                               ; preds = %61
  %46 = ptrtoint %"struct.WTF::KeyValuePair"* %68 to i64
  %47 = inttoptr i64 %63 to %"struct.WTF::KeyValuePair"*
  br label %48

48:                                               ; preds = %45, %2
  %49 = phi i64 [ %46, %45 ], [ %27, %2 ]
  %50 = phi %"struct.WTF::KeyValuePair"* [ %47, %45 ], [ null, %2 ]
  %51 = icmp eq %"struct.WTF::KeyValuePair"* %50, null
  %52 = ptrtoint %"struct.WTF::KeyValuePair"* %50 to i64
  %53 = select i1 %51, i64 %49, i64 %52
  br label %73

54:                                               ; preds = %61, %31
  %55 = phi i64 [ 0, %31 ], [ %63, %61 ]
  %56 = phi i32 [ %29, %31 ], [ %71, %61 ]
  %57 = phi i64 [ %27, %31 ], [ %69, %61 ]
  %58 = phi i64 [ %25, %31 ], [ %67, %61 ]
  %59 = phi i64 [ 0, %31 ], [ %65, %61 ]
  %60 = icmp eq i32 %56, %10
  br i1 %60, label %73, label %61

61:                                               ; preds = %54
  %62 = icmp eq i32 %56, -1
  %63 = select i1 %62, i64 %57, i64 %55
  %64 = icmp eq i64 %59, 0
  %65 = select i1 %64, i64 %44, i64 %59
  %66 = add i64 %65, %58
  %67 = and i64 %66, %9
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %67
  %69 = ptrtoint %"struct.WTF::KeyValuePair"* %68 to i64
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %68, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %45, label %54

73:                                               ; preds = %54, %48
  %74 = phi i64 [ %53, %48 ], [ %57, %54 ]
  %75 = inttoptr i64 %74 to %"struct.WTF::KeyValuePair"*
  tail call void @_ZN3WTF5MoverINS_12KeyValuePairIiNSt3__14pairIN5blink21CrossThreadPersistentINS4_19PaintWorkletPainterEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEEEEEENS_18PartitionAllocatorENS_18HashMapValueTraitsINS_10HashTraitsIiEENSG_ISC_EEEELb1EE4MoveEOSD_RSD_(%"struct.WTF::KeyValuePair"* dereferenceable(32) %1, %"struct.WTF::KeyValuePair"* dereferenceable(32) %75)
  ret %"struct.WTF::KeyValuePair"* %75
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5MoverINS_12KeyValuePairIiNSt3__14pairIN5blink21CrossThreadPersistentINS4_19PaintWorkletPainterEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEEEEEENS_18PartitionAllocatorENS_18HashMapValueTraitsINS_10HashTraitsIiEENSG_ISC_EEEELb1EE4MoveEOSD_RSD_(%"struct.WTF::KeyValuePair"* dereferenceable(32), %"struct.WTF::KeyValuePair"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1, i32 1, i32 0
  %4 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SingleThreadTaskRunner"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %4, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %13) #9
  br label %14

14:                                               ; preds = %11, %6, %2
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %16 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %15 to i64*
  %17 = load atomic i64, i64* %16 acquire, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %33, label %19

19:                                               ; preds = %14
  %20 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9
  %21 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %20, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %21) #9
  %22 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %23 = load atomic i64, i64* %16 monotonic, align 8
  %24 = inttoptr i64 %23 to %"class.blink::PersistentNode"*
  %25 = icmp eq i64 %23, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %22, i64 0, i32 0, i32 0
  %28 = bitcast %"class.blink::CrossThreadPersistentRegion"* %22 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = inttoptr i64 %23 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %24, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %31, align 8
  store %"class.blink::PersistentNode"* %24, %"class.blink::PersistentNode"** %27, align 8
  br label %32

32:                                               ; preds = %26, %19
  store atomic i64 0, i64* %16 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %21) #9
  br label %33

33:                                               ; preds = %14, %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 0
  %36 = load i32, i32* %35, align 8
  store i32 %36, i32* %34, align 8
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1
  %38 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 0, i32 0, i32 0
  %39 = bitcast %"struct.std::__1::pair"* %37 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 16, i1 false) #9
  %40 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9
  %41 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %40, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %41) #9
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %43 = load %"class.blink::PaintWorkletPainter"*, %"class.blink::PaintWorkletPainter"** %42, align 8
  tail call void @_ZN5blink14PersistentBaseINS_19PaintWorkletPainterELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase"* %38, %"class.blink::PaintWorkletPainter"* %43) #9
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %41) #9
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1, i32 1
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1, i32 1
  %46 = getelementptr inbounds %class.scoped_refptr.179, %class.scoped_refptr.179* %45, i64 0, i32 0
  %47 = bitcast %class.scoped_refptr.179* %45 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %class.scoped_refptr.179* %44 to i64*
  store i64 %48, i64* %49, align 8
  store %"class.base::SingleThreadTaskRunner"* null, %"class.base::SingleThreadTaskRunner"** %46, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__14pairIN5blink21CrossThreadPersistentINS4_19PaintWorkletPainterEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSI_ISC_EEEESJ_NS_18PartitionAllocatorEE5eraseEPKSD_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1, i32 1, i32 0
  %4 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SingleThreadTaskRunner"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %4, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %13) #9
  br label %14

14:                                               ; preds = %11, %6, %2
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %16 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %15 to i64*
  %17 = load atomic i64, i64* %16 acquire, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %33, label %19

19:                                               ; preds = %14
  %20 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9
  %21 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %20, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %21) #9
  %22 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %23 = load atomic i64, i64* %16 monotonic, align 8
  %24 = inttoptr i64 %23 to %"class.blink::PersistentNode"*
  %25 = icmp eq i64 %23, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %22, i64 0, i32 0, i32 0
  %28 = bitcast %"class.blink::CrossThreadPersistentRegion"* %22 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = inttoptr i64 %23 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %24, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %31, align 8
  store %"class.blink::PersistentNode"* %24, %"class.blink::PersistentNode"** %27, align 8
  br label %32

32:                                               ; preds = %26, %19
  store atomic i64 0, i64* %16 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %21) #9
  br label %33

33:                                               ; preds = %14, %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0
  store i32 -1, i32* %34, align 4
  %35 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %36 = load i32, i32* %35, align 8
  %37 = add i32 %36, 1
  %38 = and i32 %37, 2147483647
  %39 = and i32 %36, -2147483648
  %40 = or i32 %38, %39
  store i32 %40, i32* %35, align 8
  %41 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = add i32 %42, -1
  store i32 %43, i32* %41, align 4
  %44 = mul i32 %43, 6
  %45 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = icmp ult i32 %44, %46
  %48 = icmp ugt i32 %46, 8
  %49 = and i1 %47, %48
  br i1 %49, label %50, label %57

50:                                               ; preds = %33
  %51 = lshr i32 %46, 1
  %52 = zext i32 %51 to i64
  %53 = shl nuw nsw i64 %52, 5
  %54 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %53, i8* getelementptr inbounds ([191 x i8], [191 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIiNSt3__14pairIN5blink21CrossThreadPersistentINS4_19PaintWorkletPainterEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEEEEEEEEPKcv, i64 0, i64 0)) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %54, i8 0, i64 %53, i1 false) #9
  %55 = bitcast i8* %54 to %"struct.WTF::KeyValuePair"*
  %56 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__14pairIN5blink21CrossThreadPersistentINS4_19PaintWorkletPainterEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSI_ISC_EEEESJ_NS_18PartitionAllocatorEE8RehashToEPSD_jSO_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %55, i32 %51, %"struct.WTF::KeyValuePair"* null) #9
  br label %57

57:                                               ; preds = %50, %33
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseC2EONS0_20CallbackBaseCopyableE(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2cc15PaintWorkletJobD1Ev(%"class.cc::PaintWorkletJob"*) unnamed_addr #2

declare void @_ZN4base19ScopedClosureRunnerC1ENS_12OnceCallbackIFvvEEE(%"class.base::ScopedClosureRunner"*, %"class.base::OnceCallback.240"*) unnamed_addr #3

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base19ScopedClosureRunnerD1Ev(%"class.base::ScopedClosureRunner"*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZNK4base14WeakPtrFactoryIN5blink27PaintWorkletPaintDispatcherEE10GetWeakPtrEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4base14WeakPtrFactoryIN5blink27PaintWorkletPaintDispatcherEE10GetWeakPtrEv"}
!5 = distinct !{!5, !6, !"_ZN5blink27PaintWorkletPaintDispatcher10GetWeakPtrEv: argument 0"}
!6 = distinct !{!6, !"_ZN5blink27PaintWorkletPaintDispatcher10GetWeakPtrEv"}
!7 = !{!"branch_weights", i32 2000, i32 1}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK4base14WeakPtrFactoryIN5blink27PaintWorkletPaintDispatcherEE10GetWeakPtrEv: argument 0"}
!10 = distinct !{!10, !"_ZNK4base14WeakPtrFactoryIN5blink27PaintWorkletPaintDispatcherEE10GetWeakPtrEv"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN3WTF24CrossThreadBindRepeatingIZN5blink27PaintWorkletPaintDispatcher16DispatchWorkletsEN4base8flat_mapIi13scoped_refptrINS3_14RefCountedDataINSt3__16vectorIN2cc15PaintWorkletJobENS7_9allocatorISA_EEEEEEENS7_4lessIvEENS8_INS7_4pairIiSF_EENSB_ISJ_EEEEEENS3_12OnceCallbackIFvSM_EEEE3$_0JNS3_7WeakPtrIS2_EES5_INS3_22SingleThreadTaskRunnerEEEEEDaOT_DpOT0_: argument 0"}
!13 = distinct !{!13, !"_ZN3WTF24CrossThreadBindRepeatingIZN5blink27PaintWorkletPaintDispatcher16DispatchWorkletsEN4base8flat_mapIi13scoped_refptrINS3_14RefCountedDataINSt3__16vectorIN2cc15PaintWorkletJobENS7_9allocatorISA_EEEEEEENS7_4lessIvEENS8_INS7_4pairIiSF_EENSB_ISJ_EEEEEENS3_12OnceCallbackIFvSM_EEEE3$_0JNS3_7WeakPtrIS2_EES5_INS3_22SingleThreadTaskRunnerEEEEEDaOT_DpOT0_"}
!14 = !{!15, !12}
!15 = distinct !{!15, !16, !"_ZN3WTF28CrossThreadCopierPassThroughIN4base7WeakPtrIN5blink27PaintWorkletPaintDispatcherEEEE4CopyERKS5_: argument 0"}
!16 = distinct !{!16, !"_ZN3WTF28CrossThreadCopierPassThroughIN4base7WeakPtrIN5blink27PaintWorkletPaintDispatcherEEEE4CopyERKS5_"}
!17 = !{!15}
!18 = !{!19, !21, !12}
!19 = distinct !{!19, !20, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEZN5blink27PaintWorkletPaintDispatcher16DispatchWorkletsENS_8flat_mapIi13scoped_refptrINS_14RefCountedDataINSt3__16vectorIN2cc15PaintWorkletJobENS8_9allocatorISB_EEEEEEENS8_4lessIvEENS9_INS8_4pairIiSG_EENSC_ISK_EEEEEENS_12OnceCallbackIFvSN_EEEE3$_0JNS_7WeakPtrIS4_EES6_INS_22SingleThreadTaskRunnerEEEEEDcOT0_DpOT1_: argument 0"}
!20 = distinct !{!20, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEZN5blink27PaintWorkletPaintDispatcher16DispatchWorkletsENS_8flat_mapIi13scoped_refptrINS_14RefCountedDataINSt3__16vectorIN2cc15PaintWorkletJobENS8_9allocatorISB_EEEEEEENS8_4lessIvEENS9_INS8_4pairIiSG_EENSC_ISK_EEEEEENS_12OnceCallbackIFvSN_EEEE3$_0JNS_7WeakPtrIS4_EES6_INS_22SingleThreadTaskRunnerEEEEEDcOT0_DpOT1_"}
!21 = distinct !{!21, !22, !"_ZN4base13BindRepeatingIZN5blink27PaintWorkletPaintDispatcher16DispatchWorkletsENS_8flat_mapIi13scoped_refptrINS_14RefCountedDataINSt3__16vectorIN2cc15PaintWorkletJobENS6_9allocatorIS9_EEEEEEENS6_4lessIvEENS7_INS6_4pairIiSE_EENSA_ISI_EEEEEENS_12OnceCallbackIFvSL_EEEE3$_0JNS_7WeakPtrIS2_EES4_INS_22SingleThreadTaskRunnerEEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSX_DpOSY_: argument 0"}
!22 = distinct !{!22, !"_ZN4base13BindRepeatingIZN5blink27PaintWorkletPaintDispatcher16DispatchWorkletsENS_8flat_mapIi13scoped_refptrINS_14RefCountedDataINSt3__16vectorIN2cc15PaintWorkletJobENS6_9allocatorIS9_EEEEEEENS6_4lessIvEENS7_INS6_4pairIiSE_EENSA_ISI_EEEEEENS_12OnceCallbackIFvSL_EEEE3$_0JNS_7WeakPtrIS2_EES4_INS_22SingleThreadTaskRunnerEEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSX_DpOSY_"}
!23 = !{!24, !12}
!24 = distinct !{!24, !25, !"_ZN3WTF8internal23MakeCrossThreadFunctionIFvvEEEDaN4base17RepeatingCallbackIT_EE: argument 0"}
!25 = distinct !{!25, !"_ZN3WTF8internal23MakeCrossThreadFunctionIFvvEEEDaN4base17RepeatingCallbackIT_EE"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZN3WTF30ConvertToBaseRepeatingCallbackENS_19CrossThreadFunctionIFvvEEE: argument 0"}
!28 = distinct !{!28, !"_ZN3WTF30ConvertToBaseRepeatingCallbackENS_19CrossThreadFunctionIFvvEEE"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN5blink33WrapCrossThreadPersistentInternalINS_19PaintWorkletPainterEEENS_21CrossThreadPersistentIT_EEPS3_: argument 0"}
!31 = distinct !{!31, !"_ZN5blink33WrapCrossThreadPersistentInternalINS_19PaintWorkletPainterEEENS_21CrossThreadPersistentIT_EEPS3_"}
!32 = !{!"branch_weights", i32 1, i32 2000}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZN3WTF19CrossThreadBindOnceIZN5blink27PaintWorkletPaintDispatcher16DispatchWorkletsEN4base8flat_mapIi13scoped_refptrINS3_14RefCountedDataINSt3__16vectorIN2cc15PaintWorkletJobENS7_9allocatorISA_EEEEEEENS7_4lessIvEENS8_INS7_4pairIiSF_EENSB_ISJ_EEEEEENS3_12OnceCallbackIFvSM_EEEE3$_1JNS1_21CrossThreadPersistentINS1_19PaintWorkletPainterEEESF_NS7_10unique_ptrINS3_19ScopedClosureRunnerENS7_14default_deleteISV_EEEEEEEDaOT_DpOT0_: argument 0"}
!35 = distinct !{!35, !"_ZN3WTF19CrossThreadBindOnceIZN5blink27PaintWorkletPaintDispatcher16DispatchWorkletsEN4base8flat_mapIi13scoped_refptrINS3_14RefCountedDataINSt3__16vectorIN2cc15PaintWorkletJobENS7_9allocatorISA_EEEEEEENS7_4lessIvEENS8_INS7_4pairIiSF_EENSB_ISJ_EEEEEENS3_12OnceCallbackIFvSM_EEEE3$_1JNS1_21CrossThreadPersistentINS1_19PaintWorkletPainterEEESF_NS7_10unique_ptrINS3_19ScopedClosureRunnerENS7_14default_deleteISV_EEEEEEEDaOT_DpOT0_"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZN3WTF28CrossThreadCopierPassThroughIN5blink21CrossThreadPersistentINS1_19PaintWorkletPainterEEEE4CopyERKS4_: argument 0"}
!38 = distinct !{!38, !"_ZN3WTF28CrossThreadCopierPassThroughIN5blink21CrossThreadPersistentINS1_19PaintWorkletPainterEEEE4CopyERKS4_"}
!39 = !{!37, !34}
!40 = !{!41, !43, !34}
!41 = distinct !{!41, !42, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink27PaintWorkletPaintDispatcher16DispatchWorkletsENS_8flat_mapIi13scoped_refptrINS_14RefCountedDataINSt3__16vectorIN2cc15PaintWorkletJobENS8_9allocatorISB_EEEEEEENS8_4lessIvEENS9_INS8_4pairIiSG_EENSC_ISK_EEEEEENS2_IFvSN_EEEE3$_1JNS3_21CrossThreadPersistentINS3_19PaintWorkletPainterEEESG_NS8_10unique_ptrINS_19ScopedClosureRunnerENS8_14default_deleteISV_EEEEEEEDcOT0_DpOT1_: argument 0"}
!42 = distinct !{!42, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink27PaintWorkletPaintDispatcher16DispatchWorkletsENS_8flat_mapIi13scoped_refptrINS_14RefCountedDataINSt3__16vectorIN2cc15PaintWorkletJobENS8_9allocatorISB_EEEEEEENS8_4lessIvEENS9_INS8_4pairIiSG_EENSC_ISK_EEEEEENS2_IFvSN_EEEE3$_1JNS3_21CrossThreadPersistentINS3_19PaintWorkletPainterEEESG_NS8_10unique_ptrINS_19ScopedClosureRunnerENS8_14default_deleteISV_EEEEEEEDcOT0_DpOT1_"}
!43 = distinct !{!43, !44, !"_ZN4base8BindOnceIZN5blink27PaintWorkletPaintDispatcher16DispatchWorkletsENS_8flat_mapIi13scoped_refptrINS_14RefCountedDataINSt3__16vectorIN2cc15PaintWorkletJobENS6_9allocatorIS9_EEEEEEENS6_4lessIvEENS7_INS6_4pairIiSE_EENSA_ISI_EEEEEENS_12OnceCallbackIFvSL_EEEE3$_1JNS1_21CrossThreadPersistentINS1_19PaintWorkletPainterEEESE_NS6_10unique_ptrINS_19ScopedClosureRunnerENS6_14default_deleteISU_EEEEEEENSM_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS10_DpOS11_: argument 0"}
!44 = distinct !{!44, !"_ZN4base8BindOnceIZN5blink27PaintWorkletPaintDispatcher16DispatchWorkletsENS_8flat_mapIi13scoped_refptrINS_14RefCountedDataINSt3__16vectorIN2cc15PaintWorkletJobENS6_9allocatorIS9_EEEEEEENS6_4lessIvEENS7_INS6_4pairIiSE_EENSA_ISI_EEEEEENS_12OnceCallbackIFvSL_EEEE3$_1JNS1_21CrossThreadPersistentINS1_19PaintWorkletPainterEEESE_NS6_10unique_ptrINS_19ScopedClosureRunnerENS6_14default_deleteISU_EEEEEEENSM_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS10_DpOS11_"}
!45 = !{!46, !34}
!46 = distinct !{!46, !47, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!47 = distinct !{!47, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE: argument 0"}
!50 = distinct !{!50, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE"}
!51 = !{!52}
!52 = distinct !{!52, !53, !"_ZN3WTF19CrossThreadBindOnceIMN5blink27PaintWorkletPaintDispatcherEFvvEJRN4base7WeakPtrIS2_EEEEEDaOT_DpOT0_: argument 0"}
!53 = distinct !{!53, !"_ZN3WTF19CrossThreadBindOnceIMN5blink27PaintWorkletPaintDispatcherEFvvEJRN4base7WeakPtrIS2_EEEEEDaOT_DpOT0_"}
!54 = !{!55, !52}
!55 = distinct !{!55, !56, !"_ZN3WTF28CrossThreadCopierPassThroughIN4base7WeakPtrIN5blink27PaintWorkletPaintDispatcherEEEE4CopyERKS5_: argument 0"}
!56 = distinct !{!56, !"_ZN3WTF28CrossThreadCopierPassThroughIN4base7WeakPtrIN5blink27PaintWorkletPaintDispatcherEEEE4CopyERKS5_"}
!57 = !{!55}
!58 = !{!59, !61, !52}
!59 = distinct !{!59, !60, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink27PaintWorkletPaintDispatcherEFvvEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!60 = distinct !{!60, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink27PaintWorkletPaintDispatcherEFvvEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_"}
!61 = distinct !{!61, !62, !"_ZN4base8BindOnceIMN5blink27PaintWorkletPaintDispatcherEFvvEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!62 = distinct !{!62, !"_ZN4base8BindOnceIMN5blink27PaintWorkletPaintDispatcherEFvvEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!63 = !{!64, !52}
!64 = distinct !{!64, !65, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!65 = distinct !{!65, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!66 = !{!67}
!67 = distinct !{!67, !68, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE: argument 0"}
!68 = distinct !{!68, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE"}
!69 = !{i32 24, i32 33}
